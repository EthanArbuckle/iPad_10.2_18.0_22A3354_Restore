char *TextCompositionClient.init()()
{
  char *v0;
  id v1;
  uint64_t v2;
  char *v3;
  objc_super v5;

  *(_QWORD *)&v0[OBJC_IVAR___TextCompositionClient_client] = 0;
  v5.receiver = v0;
  v5.super_class = (Class)type metadata accessor for TextCompositionClient();
  v1 = objc_msgSendSuper2(&v5, sel_init);
  sub_2457567FC(&qword_254416E98, v2, (uint64_t (*)(uint64_t))type metadata accessor for TextCompositionClient, (uint64_t)&protocol conformance descriptor for TextCompositionClient);
  sub_245748A50(&qword_254416E90);
  swift_allocObject();
  v3 = (char *)v1;
  *(_QWORD *)&v3[OBJC_IVAR___TextCompositionClient_client] = sub_2457BAE88();
  swift_release();
  return v3;
}

uint64_t sub_245748A24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x24953B228](a1, v6, a5);
}

uint64_t sub_245748A50(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24953B270]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_245748A98()
{
  return sub_2457BB5FC();
}

uint64_t sub_245748AA4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245748AB0()
{
  uint64_t v0;

  return sub_245749564(v0);
}

uint64_t sub_245748AB8()
{
  return sub_2457BB440();
}

uint64_t sub_245748AC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

BOOL sub_245748AE8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_245748AF8()
{
  return swift_retain();
}

uint64_t sub_245748B00()
{
  return sub_2457BB584();
}

uint64_t sub_245748B14()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245748B24()
{
  return sub_2457BB440();
}

uint64_t sub_245748B2C(uint64_t a1)
{
  uint64_t v1;

  return sub_2457A0A04(a1, v1);
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
  sub_245749F44(a1, &qword_254416EA0);
}

void type metadata accessor for TextCompositionXPCService()
{
  sub_245751428();
}

uint64_t type metadata accessor for TextCompositionClient()
{
  return objc_opt_self();
}

uint64_t Attachment.init(contentType:fileName:contentDescription:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t result;

  v12 = sub_245749FC0();
  v13 = (_QWORD *)(a6 + *(int *)(v12 + 20));
  v14 = (_QWORD *)(a6 + *(int *)(v12 + 24));
  v15 = sub_24574A00C();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a6, a1, v15);
  *v13 = a2;
  v13[1] = a3;
  *v14 = a4;
  v14[1] = a5;
  return result;
}

uint64_t type metadata accessor for Attachment()
{
  uint64_t result;

  result = qword_257497F18;
  if (!qword_257497F18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Attachment.contentType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_24574A00C();
  return sub_24574A004(a1, v1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 16));
}

uint64_t Attachment.contentType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_24574A00C();
  return sub_24574A004(v1, a1, v3, *(uint64_t (**)(void))(*(_QWORD *)(v3 - 8) + 40));
}

uint64_t (*Attachment.contentType.modify())()
{
  return nullsub_1;
}

void Attachment.fileName.getter()
{
  sub_245749FC0();
  sub_24574A064();
  sub_245748A90();
}

void Attachment.fileName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_245749FC0();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*Attachment.fileName.modify())(_QWORD, _QWORD)
{
  sub_245749FC0();
  return nullsub_1;
}

void Attachment.contentDescription.getter()
{
  sub_245749FC0();
  sub_24574A064();
  sub_245748A90();
}

void Attachment.contentDescription.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_245749FC0();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*Attachment.contentDescription.modify())(_QWORD, _QWORD)
{
  sub_245749FC0();
  return nullsub_1;
}

BOOL sub_245748DB4(char a1, char a2)
{
  return a1 == a2;
}

uint64_t sub_245748DC4()
{
  return sub_2457BB734();
}

uint64_t sub_245748DE8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x54746E65746E6F63 && a2 == 0xEB00000000657079;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656D614E656C6966 && a2 == 0xE800000000000000;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000012 && a2 == 0x80000002457C8210)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_2457BB6B0();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_245748F4C()
{
  return 3;
}

uint64_t sub_245748F54()
{
  sub_2457BB728();
  sub_2457BB734();
  return sub_2457BB764();
}

uint64_t sub_245748F98()
{
  return 0;
}

uint64_t sub_245748FA4(char a1)
{
  if (!a1)
    return 0x54746E65746E6F63;
  if (a1 == 1)
    return 0x656D614E656C6966;
  return 0xD000000000000012;
}

BOOL sub_245749008(char *a1, char *a2)
{
  return sub_245748DB4(*a1, *a2);
}

uint64_t sub_245749014()
{
  return sub_245748F54();
}

uint64_t sub_24574901C()
{
  return sub_245748DC4();
}

uint64_t sub_245749024()
{
  sub_2457BB728();
  sub_2457BB734();
  return sub_2457BB764();
}

uint64_t sub_245749064()
{
  char *v0;

  return sub_245748FA4(*v0);
}

uint64_t sub_24574906C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245748DE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245749090()
{
  return sub_245748F98();
}

uint64_t sub_2457490AC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_245748F4C();
  *a1 = result;
  return result;
}

uint64_t sub_2457490D0()
{
  sub_2457492A4();
  return sub_2457BB788();
}

uint64_t sub_2457490F8()
{
  sub_2457492A4();
  return sub_2457BB794();
}

uint64_t Attachment.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = sub_245748A50(&qword_257497EF0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_245749FF4();
  v7 = v6 - v5;
  sub_245749280(a1, a1[3]);
  sub_2457492A4();
  sub_2457BB77C();
  sub_2457BAEAC();
  sub_245749584(&qword_257497F00, MEMORY[0x24BEE63D8]);
  sub_2457BB68C();
  if (!v1)
  {
    type metadata accessor for Attachment();
    sub_24574A054();
    sub_24574A054();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

_QWORD *sub_245749280(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_2457492A4()
{
  unint64_t result;

  result = qword_257497EF8;
  if (!qword_257497EF8)
  {
    result = MEMORY[0x24953B288](&unk_2457BC620, &type metadata for Attachment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257497EF8);
  }
  return result;
}

uint64_t Attachment.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t *v29;

  v3 = sub_2457BAEAC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_245749FF4();
  v26 = v6 - v5;
  v25 = sub_245748A50(&qword_257497F08);
  v7 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8]();
  sub_245749FF4();
  v10 = v9 - v8;
  type metadata accessor for Attachment();
  sub_24574A084();
  MEMORY[0x24BDAC7A8]();
  sub_245749FF4();
  v13 = v12 - v11;
  v15 = (uint64_t *)(v12 - v11 + *(int *)(v14 + 20));
  *v15 = 0;
  v15[1] = 0;
  v29 = v15;
  v16 = (uint64_t *)(v13 + *(int *)(v14 + 24));
  *v16 = 0;
  v16[1] = 0;
  v27 = v16;
  sub_245749280(a1, a1[3]);
  sub_2457492A4();
  sub_2457BB770();
  if (v28)
  {
    sub_24574A094();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    v17 = v7;
    sub_245749584(&qword_257497F10, MEMORY[0x24BEE63F0]);
    sub_2457BB5CC();
    v18 = v13;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v13, v26, v3);
    *v29 = sub_24574A074();
    v29[1] = v19;
    v20 = sub_24574A074();
    v22 = v21;
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v10, v25);
    swift_bridgeObjectRelease();
    *v27 = v20;
    v27[1] = v22;
    sub_2457495C4(v18, a2);
    sub_24574A094();
    return sub_245749608(v18);
  }
}

uint64_t sub_245749564(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_245749584(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = sub_2457BAEAC();
    result = MEMORY[0x24953B288](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_2457495C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Attachment();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_245749608(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Attachment();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_245749644@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return Attachment.init(from:)(a1, a2);
}

uint64_t sub_245749658(_QWORD *a1)
{
  return Attachment.encode(to:)(a1);
}

void default argument 6 of GenerativeExperiencesSessionClient.complete<A>(generating:query:tools:tooling:toolChoice:documents:parameters:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_245748A50(&qword_257498760);
  sub_24574A084();
  MEMORY[0x24BDAC7A8]();
  sub_24574A014();
  MEMORY[0x24BDAC7A8]();
  v1 = sub_24574A030();
  sub_245749FC8(v1);
  sub_24574A09C();
  sub_245749F84();
  sub_24574A044();
  sub_2457BAC0C();
  sub_2457BAC3C();
  sub_245749748(v0);
  sub_245749FB4();
}

uint64_t _s4Sage24ClassificationXPCRequestC7RequestOwst_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_245749700(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_245748A50(&qword_257498760);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_245749748(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_245748A50(&qword_257498760);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void default argument 5 of GenerativeExperiencesSessionClient.complete(query:tools:tooling:toolChoice:documents:parameters:)()
{
  uint64_t v0;
  uint64_t v1;

  sub_245748A50(&qword_257498760);
  sub_24574A084();
  MEMORY[0x24BDAC7A8]();
  sub_24574A014();
  MEMORY[0x24BDAC7A8]();
  v1 = sub_24574A030();
  sub_245749FC8(v1);
  sub_24574A09C();
  sub_245749F84();
  sub_24574A044();
  sub_2457BAC0C();
  sub_2457BAC3C();
  sub_245749748(v0);
  sub_245749FB4();
}

uint64_t *initializeBufferWithCopyOfBuffer for Attachment(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2457BAEAC();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Attachment(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_2457BAEAC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_2457BAEAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_2457BAEAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2457BAEAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t assignWithTake for Attachment(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_2457BAEAC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Attachment()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_245749B2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;
  int v9;

  v6 = sub_24574A00C();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  v9 = v8 - 1;
  if (v9 < 0)
    v9 = -1;
  return (v9 + 1);
}

uint64_t _s4Sage24ClassificationXPCRequestC7RequestOwet_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for Attachment()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_245749BC8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_24574A00C();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
    sub_245749FB4();
  }
}

uint64_t sub_245749C34()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2457BAEAC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 initializeWithTake for ModelBundleEnvelope(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_245749CB8(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_245749CD8(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for _NSRange(uint64_t a1)
{
  sub_245749F44(a1, &qword_257497F28);
}

_BYTE *initializeBufferWithCopyOfBuffer for Attachment.CodingKeys(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for Attachment.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Attachment.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_245749DF4 + 4 * byte_2457BC4B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_245749E28 + 4 * byte_2457BC4B0[v4]))();
}

uint64_t sub_245749E28(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245749E30(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245749E38);
  return result;
}

uint64_t sub_245749E44(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245749E4CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_245749E50(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245749E58(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245749E64(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_245749E6C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Attachment.CodingKeys()
{
  return &type metadata for Attachment.CodingKeys;
}

unint64_t sub_245749E88()
{
  unint64_t result;

  result = qword_257497F30;
  if (!qword_257497F30)
  {
    result = MEMORY[0x24953B288](&unk_2457BC5F8, &type metadata for Attachment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257497F30);
  }
  return result;
}

unint64_t sub_245749EC8()
{
  unint64_t result;

  result = qword_257497F38;
  if (!qword_257497F38)
  {
    result = MEMORY[0x24953B288](&unk_2457BC568, &type metadata for Attachment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257497F38);
  }
  return result;
}

unint64_t sub_245749F08()
{
  unint64_t result;

  result = qword_257497F40;
  if (!qword_257497F40)
  {
    result = MEMORY[0x24953B288](&unk_2457BC590, &type metadata for Attachment.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257497F40);
  }
  return result;
}

void sub_245749F44(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
  sub_245748A90();
}

uint64_t sub_245749F84()
{
  return sub_2457BAC9C();
}

uint64_t sub_245749FC0()
{
  return type metadata accessor for Attachment();
}

uint64_t sub_245749FC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 1, 1, a1);
  return sub_245749700(v1, v2);
}

uint64_t sub_24574A004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_24574A00C()
{
  return sub_2457BAEAC();
}

uint64_t sub_24574A030()
{
  return sub_2457BAC00();
}

uint64_t sub_24574A044()
{
  return sub_2457BAC84();
}

uint64_t sub_24574A054()
{
  return sub_2457BB608();
}

uint64_t sub_24574A064()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24574A074()
{
  return sub_2457BB548();
}

uint64_t sub_24574A094()
{
  uint64_t v0;

  return sub_245749564(v0);
}

uint64_t sub_24574A0B0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24574A0C4()
{
  return 1;
}

uint64_t static ClassificationXPCRequest.Error.== infix(_:_:)()
{
  return 1;
}

void ClassificationXPCRequest.Error.hash(into:)()
{
  sub_2457BB734();
  sub_245748A90();
}

void ClassificationXPCRequest.Error.hashValue.getter()
{
  sub_2457514C4();
  sub_2457514AC();
  sub_2457513DC();
  sub_24575118C();
}

void sub_24574A118()
{
  ClassificationXPCRequest.Error.hashValue.getter();
}

void sub_24574A12C()
{
  ClassificationXPCRequest.Error.hash(into:)();
}

uint64_t sub_24574A154(char a1)
{
  if ((a1 & 1) != 0)
    return 12639;
  else
    return 12383;
}

uint64_t sub_24574A16C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_245751308() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_245751308();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24574A210(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6D726177657270 && a2 == 0xE700000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002457C7F10 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000002457C7F30 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002457C7F50 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002457C7F70 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000002457C7F90 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x80000002457C7FB0 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002457C8F90)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_24574A500()
{
  return 8;
}

uint64_t sub_24574A508(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24574A53C
                                                            + 4 * asc_2457BC690[a1]))(0x6D726177657270, 0xE700000000000000);
}

unint64_t sub_24574A53C()
{
  return 0xD000000000000013;
}

unint64_t sub_24574A564()
{
  return 0xD000000000000018;
}

uint64_t sub_24574A5E4()
{
  swift_bridgeObjectRelease();
  return 1;
}

uint64_t sub_24574A600()
{
  return 0;
}

uint64_t sub_24574A60C()
{
  return sub_2457BB734();
}

uint64_t sub_24574A630(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24574A69C()
{
  sub_2457BB728();
  sub_2457BB734();
  return sub_2457BB764();
}

uint64_t sub_24574A6DC()
{
  return 12383;
}

uint64_t sub_24574A6EC()
{
  char *v0;

  return sub_24574A154(*v0);
}

uint64_t sub_24574A6F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24574A16C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24574A718()
{
  sub_24574B8F4();
  return sub_2457BB788();
}

uint64_t sub_24574A740()
{
  sub_24574B8F4();
  return sub_2457BB794();
}

uint64_t sub_24574A768()
{
  sub_24574B6E4();
  return sub_2457BB788();
}

uint64_t sub_24574A790()
{
  sub_24574B6E4();
  return sub_2457BB794();
}

uint64_t sub_24574A7B8()
{
  sub_24574B810();
  return sub_2457BB788();
}

uint64_t sub_24574A7E0()
{
  sub_24574B810();
  return sub_2457BB794();
}

uint64_t sub_24574A808()
{
  sub_24574B66C();
  return sub_2457BB788();
}

uint64_t sub_24574A830()
{
  sub_24574B66C();
  return sub_2457BB794();
}

uint64_t sub_24574A858()
{
  sub_24574B75C();
  return sub_2457BB788();
}

uint64_t sub_24574A880()
{
  sub_24574B75C();
  return sub_2457BB794();
}

uint64_t sub_24574A8A8()
{
  sub_24574B5B0();
  return sub_2457BB788();
}

uint64_t sub_24574A8D0()
{
  sub_24574B5B0();
  return sub_2457BB794();
}

uint64_t sub_24574A8F8()
{
  unsigned __int8 *v0;

  return sub_24574A508(*v0);
}

uint64_t sub_24574A900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24574A210(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24574A924@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24574A500();
  *a1 = result;
  return result;
}

uint64_t sub_24574A948()
{
  sub_24574B4F4();
  return sub_2457BB788();
}

uint64_t sub_24574A970()
{
  sub_24574B4F4();
  return sub_2457BB794();
}

uint64_t sub_24574A99C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24574A5E4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24574A9C4()
{
  return sub_245748F98();
}

uint64_t sub_24574A9DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24574A0C4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_24574AA04()
{
  sub_24574B96C();
  return sub_2457BB788();
}

uint64_t sub_24574AA2C()
{
  sub_24574B96C();
  return sub_2457BB794();
}

void sub_24574AA60()
{
  sub_2457BB728();
  sub_2457514AC();
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_24574AA8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24574A630(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24574AAB4()
{
  sub_24574B574();
  return sub_2457BB788();
}

uint64_t sub_24574AADC()
{
  sub_24574B574();
  return sub_2457BB794();
}

void ClassificationXPCRequest.Request.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[3];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_245751438();
  v41 = v1;
  v42 = v2;
  v3 = sub_245748A50(&qword_257497F48);
  sub_245751028(v3, (uint64_t)&v38);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_245750F48();
  sub_245751408(v5);
  sub_245748A50(&qword_257497F50);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_2457512B8(v7, v34);
  v8 = sub_245748A50(&qword_257497F58);
  sub_245751028(v8, (uint64_t)&v40);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v9);
  sub_245750F48();
  sub_245751408(v10);
  v11 = sub_245748A50(&qword_257497F60);
  sub_245751028(v11, (uint64_t)&v39);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v12);
  sub_245750F48();
  sub_245751408(v13);
  v14 = sub_245748A50(&qword_257497F68);
  sub_245751028(v14, (uint64_t)&v37);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v15);
  sub_245750F48();
  sub_24575134C(v16);
  type metadata accessor for UserNotification();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v17);
  sub_245750F48();
  v18 = sub_245748A50(&qword_257497F70);
  sub_245751028(v18, (uint64_t)v36);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v19);
  sub_245750F48();
  sub_24575134C(v20);
  type metadata accessor for TextMessage();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v21);
  sub_245750F48();
  v22 = sub_245748A50(&qword_257497F78);
  sub_245751028(v22, (uint64_t)&v35);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v23);
  sub_245750F48();
  sub_24575134C(v24);
  type metadata accessor for MailMessage();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v25);
  sub_245750F48();
  sub_245751408(v26);
  v27 = sub_245748A50(&qword_257497F80);
  MEMORY[0x24BDAC7A8](v27);
  sub_245749FF4();
  sub_24575150C();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v28);
  sub_245749FF4();
  v31 = v30 - v29;
  sub_245748A50(&qword_257497F88);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v32);
  sub_245749FF4();
  sub_2457514E0();
  sub_2457BB77C();
  sub_24574B530(v0, v31);
  v33 = (char *)sub_24574AE08 + 4 * word_2457BC698[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_24574AE08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = v0 + *(int *)(sub_245748A50(&qword_257498040) + 48);
  v4 = *(_QWORD *)(v3 + 8);
  *(_QWORD *)(v2 - 136) = *(_QWORD *)v3;
  *(_DWORD *)(v2 - 176) = *(unsigned __int8 *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  sub_24574B7D4(v0, *(_QWORD *)(v2 - 368), (void (*)(_QWORD))type metadata accessor for MailMessage);
  *(_BYTE *)(v2 - 128) = 1;
  sub_24574B8F4();
  v6 = *(_QWORD *)(v2 - 360);
  v7 = *(_QWORD *)(v2 - 168);
  sub_24575144C();
  sub_2457BB5FC();
  *(_BYTE *)(v2 - 128) = 0;
  sub_24574B84C(&qword_257498050, (void (*)(uint64_t))type metadata accessor for MailMessage);
  sub_245751238();
  if (v1)
  {
    sub_2457512F4();
    sub_245751384();
    v8 = sub_245750FF0(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8));
    sub_245751430(v8, (uint64_t (*)(_QWORD))type metadata accessor for MailMessage);
    sub_245751140(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8));
  }
  else
  {
    *(_QWORD *)(v2 - 128) = *(_QWORD *)(v2 - 136);
    *(_QWORD *)(v2 - 120) = v4;
    *(_BYTE *)(v2 - 112) = *(_DWORD *)(v2 - 176);
    *(_QWORD *)(v2 - 104) = v5;
    *(_BYTE *)(v2 - 89) = 1;
    sub_24574B930();
    sub_245750FAC();
    v9 = sub_245750FF0(v6, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 240) + 8));
    sub_245751430(v9, (uint64_t (*)(_QWORD))type metadata accessor for MailMessage);
    sub_245751140(v7, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_245751170();
}

uint64_t type metadata accessor for ClassificationXPCRequest.Request(uint64_t a1)
{
  return sub_24574E0C8(a1, (uint64_t *)&unk_257498158);
}

unint64_t sub_24574B4F4()
{
  unint64_t result;

  result = qword_257497F90;
  if (!qword_257497F90)
  {
    result = MEMORY[0x24953B288](&unk_2457BD4A8, &type metadata for ClassificationXPCRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257497F90);
  }
  return result;
}

uint64_t sub_24574B530(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClassificationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_24574B574()
{
  unint64_t result;

  result = qword_257497F98;
  if (!qword_257497F98)
  {
    result = MEMORY[0x24953B288](&unk_2457BD458, &type metadata for ClassificationXPCRequest.Request.TestTaskCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257497F98);
  }
  return result;
}

unint64_t sub_24574B5B0()
{
  unint64_t result;

  result = qword_257497FA0;
  if (!qword_257497FA0)
  {
    result = MEMORY[0x24953B288](&unk_2457BD408, &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257497FA0);
  }
  return result;
}

uint64_t sub_24574B5EC(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24953B27C](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

unint64_t sub_24574B630()
{
  unint64_t result;

  result = qword_257497FB8;
  if (!qword_257497FB8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.ThreadClassificationOptions, &type metadata for UserNotification.ThreadClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_257497FB8);
  }
  return result;
}

unint64_t sub_24574B66C()
{
  unint64_t result;

  result = qword_257497FC0;
  if (!qword_257497FC0)
  {
    result = MEMORY[0x24953B288](&unk_2457BD3B8, &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257497FC0);
  }
  return result;
}

unint64_t sub_24574B6A8()
{
  unint64_t result;

  result = qword_257497FD8;
  if (!qword_257497FD8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.ThreadClassificationOptions, &type metadata for TextMessage.ThreadClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_257497FD8);
  }
  return result;
}

unint64_t sub_24574B6E4()
{
  unint64_t result;

  result = qword_257497FE0;
  if (!qword_257497FE0)
  {
    result = MEMORY[0x24953B288](&unk_2457BD368, &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257497FE0);
  }
  return result;
}

unint64_t sub_24574B720()
{
  unint64_t result;

  result = qword_257497FF8;
  if (!qword_257497FF8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.ThreadClassificationOptions, &type metadata for MailMessage.ThreadClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_257497FF8);
  }
  return result;
}

unint64_t sub_24574B75C()
{
  unint64_t result;

  result = qword_257498008;
  if (!qword_257498008)
  {
    result = MEMORY[0x24953B288](&unk_2457BD318, &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498008);
  }
  return result;
}

unint64_t sub_24574B798()
{
  unint64_t result;

  result = qword_257498018;
  if (!qword_257498018)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.ClassificationOptions, &type metadata for UserNotification.ClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_257498018);
  }
  return result;
}

void sub_24574B7D4(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  void (*v4)(uint64_t);

  a3(0);
  v3 = sub_245748AA4();
  v4(v3);
  sub_245748A90();
}

unint64_t sub_24574B810()
{
  unint64_t result;

  result = qword_257498028;
  if (!qword_257498028)
  {
    result = MEMORY[0x24953B288](&unk_2457BD2C8, &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498028);
  }
  return result;
}

void sub_24574B84C(_QWORD *a1, void (*a2)(uint64_t))
{
  if (!*a1)
  {
    a2(255);
    sub_2457514B8();
  }
  sub_245748A90();
}

void sub_24574B880(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_245748A90();
}

unint64_t sub_24574B8B8()
{
  unint64_t result;

  result = qword_257498038;
  if (!qword_257498038)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.ClassificationOptions, &type metadata for TextMessage.ClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_257498038);
  }
  return result;
}

unint64_t sub_24574B8F4()
{
  unint64_t result;

  result = qword_257498048;
  if (!qword_257498048)
  {
    result = MEMORY[0x24953B288](&unk_2457BD278, &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498048);
  }
  return result;
}

unint64_t sub_24574B930()
{
  unint64_t result;

  result = qword_257498058;
  if (!qword_257498058)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.ClassificationOptions, &type metadata for MailMessage.ClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_257498058);
  }
  return result;
}

unint64_t sub_24574B96C()
{
  unint64_t result;

  result = qword_257498060;
  if (!qword_257498060)
  {
    result = MEMORY[0x24953B288](&unk_2457BD228, &type metadata for ClassificationXPCRequest.Request.PrewarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498060);
  }
  return result;
}

void ClassificationXPCRequest.Request.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v60[33];
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;

  sub_245751438();
  v75 = v1;
  v76 = v2;
  v67 = v0;
  v4 = v3;
  v60[23] = v5;
  v6 = sub_245748A50(&qword_257498068);
  sub_245751028(v6, (uint64_t)&v71);
  v65 = v7;
  sub_245750F7C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_245750F48();
  v60[25] = v8;
  v9 = sub_245748A50(&qword_257498070);
  sub_245751028(v9, (uint64_t)&v74);
  v60[22] = v10;
  sub_245750F7C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_245750F48();
  v64 = v11;
  v12 = sub_245748A50(&qword_257498078);
  sub_245751028(v12, (uint64_t)&v73);
  v60[21] = v13;
  sub_245750F7C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_245750F48();
  v60[30] = v14;
  v15 = sub_245748A50(&qword_257498080);
  sub_245751028(v15, (uint64_t)&v72);
  v60[20] = v16;
  sub_245750F7C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_245750F48();
  v60[29] = v17;
  v18 = sub_245748A50(&qword_257498088);
  sub_245751028(v18, (uint64_t)&v70);
  v60[19] = v19;
  sub_245750F7C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_245750F48();
  v60[28] = v20;
  v21 = sub_245748A50(&qword_257498090);
  sub_245751028(v21, (uint64_t)&v69);
  v60[18] = v22;
  sub_245750F7C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_245750F48();
  v60[27] = v23;
  v24 = sub_245748A50(&qword_257498098);
  sub_245751028(v24, (uint64_t)&v68);
  v60[17] = v25;
  sub_245750F7C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_245750F48();
  v60[26] = v26;
  v27 = sub_245748A50(&qword_2574980A0);
  v60[31] = *(_QWORD *)(v27 - 8);
  v60[32] = v27;
  sub_245750F7C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_2457512B8(v28, v60[0]);
  v29 = sub_245748A50(&qword_2574980A8);
  v62 = *(_QWORD *)(v29 - 8);
  v63 = v29;
  sub_245750F7C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_245749FF4();
  v32 = v31 - v30;
  v61 = sub_24575150C();
  sub_245750F7C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_24575133C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_24575133C();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  sub_24575133C();
  v33 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v35 = (char *)v60 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)v60 - v37;
  v39 = MEMORY[0x24BDAC7A8](v36);
  v41 = (char *)v60 - v40;
  v42 = MEMORY[0x24BDAC7A8](v39);
  v44 = (char *)v60 - v43;
  MEMORY[0x24BDAC7A8](v42);
  v46 = (char *)v60 - v45;
  v66 = v4;
  sub_2457514E0();
  v47 = v67;
  sub_2457BB770();
  if (!v47)
  {
    v60[2] = (uint64_t)v35;
    v60[3] = (uint64_t)v44;
    v60[4] = (uint64_t)v41;
    v60[5] = (uint64_t)v38;
    v60[6] = (uint64_t)v46;
    v48 = v63;
    v49 = v32;
    v50 = sub_2457BB5E4();
    v51 = *(_QWORD *)(v50 + 16);
    if (v51)
    {
      v67 = v32;
      v60[1] = 0;
      v52 = *(unsigned __int8 *)(v50 + 32);
      sub_245750DD8(1, v51, v50, v50 + 32, 0, (2 * v51) | 1);
      v54 = v53;
      v56 = v55;
      swift_bridgeObjectRelease();
      if (v54 == v56 >> 1)
        __asm { BR              X9 }
      v49 = v67;
    }
    v57 = sub_2457BB470();
    swift_allocError();
    v59 = v58;
    sub_245748A50(&qword_2574980B0);
    *v59 = v61;
    sub_2457BB53C();
    sub_2457BB464();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v57 - 8) + 104))(v59, *MEMORY[0x24BEE26D0], v57);
    swift_willThrow();
    sub_245750F98();
    (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v49, v48);
  }
  sub_245749564(v66);
  sub_245751170();
}

void sub_24574C1B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(v2 - 120) = 7;
  sub_24574B574();
  v3 = *(_QWORD *)(v2 - 248);
  v4 = *(_QWORD *)(v2 - 136);
  sub_245750FC4();
  if (!v0)
  {
    sub_2457BB59C();
    v6 = v5;
    sub_245751168(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_245750F98();
    sub_245751140(v4, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 176) + 8));
    **(_QWORD **)(v2 - 376) = v6;
    JUMPOUT(0x24574C5F8);
  }
  sub_245750F98();
  JUMPOUT(0x24574C198);
}

void sub_24574C63C()
{
  ClassificationXPCRequest.Request.init(from:)();
}

void sub_24574C650()
{
  ClassificationXPCRequest.Request.encode(to:)();
}

uint64_t ClassificationXPCRequest.RequestInfo.requestIdentifier.getter()
{
  sub_2457513E4();
  return sub_245748AA4();
}

void ClassificationXPCRequest.RequestInfo.requestIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_24575147C();
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v0;
  sub_245749FB4();
}

uint64_t (*ClassificationXPCRequest.RequestInfo.requestIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t ClassificationXPCRequest.RequestInfo.useCaseIdentifier.getter()
{
  sub_2457513E4();
  return sub_245748AA4();
}

void ClassificationXPCRequest.RequestInfo.useCaseIdentifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24575147C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_245749FB4();
}

uint64_t (*ClassificationXPCRequest.RequestInfo.useCaseIdentifier.modify())()
{
  return nullsub_1;
}

Sage::ClassificationXPCRequest::RequestInfo __swiftcall ClassificationXPCRequest.RequestInfo.init(requestIdentifier:useCaseIdentifier:)(Swift::String requestIdentifier, Swift::String useCaseIdentifier)
{
  Swift::String *v2;
  Sage::ClassificationXPCRequest::RequestInfo result;

  *v2 = requestIdentifier;
  v2[1] = useCaseIdentifier;
  result.useCaseIdentifier = useCaseIdentifier;
  result.requestIdentifier = requestIdentifier;
  return result;
}

BOOL sub_24574C728(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24574C738()
{
  return sub_2457BB734();
}

uint64_t sub_24574C75C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002457C8FB0 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002457C8FD0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24574C844()
{
  return 2;
}

void sub_24574C84C()
{
  sub_2457514C4();
  sub_2457BB734();
  sub_2457513DC();
  sub_24575118C();
}

unint64_t sub_24574C87C()
{
  return 0xD000000000000011;
}

BOOL sub_24574C8B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24574C728(*a1, *a2);
}

void sub_24574C8BC()
{
  sub_24574C84C();
}

uint64_t sub_24574C8D4()
{
  return sub_24574C738();
}

void sub_24574C8DC()
{
  sub_2457BB728();
  sub_2457BB734();
  sub_2457513DC();
  sub_24575118C();
}

unint64_t sub_24574C910()
{
  return sub_24574C87C();
}

uint64_t sub_24574C918@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24574C75C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24574C93C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24574C844();
  *a1 = result;
  return result;
}

uint64_t sub_24574C960()
{
  sub_24574E078();
  return sub_2457BB788();
}

uint64_t sub_24574C988()
{
  sub_24574E078();
  return sub_2457BB794();
}

void ClassificationXPCRequest.RequestInfo.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_245751438();
  v3 = v2;
  v5 = *(_QWORD *)(sub_245748A50(&qword_257498118) - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_24575136C();
  sub_245749280(v3, v3[3]);
  sub_24574E078();
  sub_2457BB77C();
  sub_2457513AC();
  if (!v0)
    sub_2457513AC();
  sub_245751140(v1, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_245751240();
}

void ClassificationXPCRequest.RequestInfo.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;

  sub_245751438();
  v2 = v1;
  v4 = v3;
  v5 = sub_245748A50(&qword_257498128);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_245749FF4();
  v9 = v8 - v7;
  sub_245749280(v2, v2[3]);
  sub_24574E078();
  sub_2457BB770();
  if (v0)
  {
    sub_245748AB0();
  }
  else
  {
    v10 = sub_24575135C();
    v12 = v11;
    swift_bridgeObjectRetain();
    v13 = sub_24575135C();
    v15 = v14;
    v16 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v17 = v13;
    sub_2457512B0(v9, v16);
    *v4 = v10;
    v4[1] = v12;
    v4[2] = v17;
    v4[3] = v15;
    sub_2457513E4();
    sub_245748AB0();
    swift_bridgeObjectRelease();
    sub_2457512F4();
  }
  sub_245751240();
}

void sub_24574CBE0()
{
  ClassificationXPCRequest.RequestInfo.init(from:)();
}

void sub_24574CBF4()
{
  ClassificationXPCRequest.RequestInfo.encode(to:)();
}

void sub_24574CC08(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for ClassificationXPCRequest.Request(0);
  MEMORY[0x24BDAC7A8](v2);
  sub_24574B530(a1, (uint64_t)&v4 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_24574CCB4();
}

void sub_24574CC80(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_245751220();
  sub_24574B530(v1, a1);
  sub_2457512D4();
}

void sub_24574CCB4()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = sub_245748AA4();
  sub_245750D94(v0, v1);
  swift_endAccess();
  sub_2457512D4();
}

double sub_24574CD00@<D0>(uint64_t a1@<X8>)
{
  double result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  sub_24574CD8C(&v5);
  result = *(double *)&v5;
  v3 = v6;
  v4 = v7;
  *(_OWORD *)a1 = v5;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  return result;
}

uint64_t sub_24574CD40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  *(_QWORD *)&v5 = *a1;
  *((_QWORD *)&v5 + 1) = v1;
  v6 = v2;
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_24574CDCC(&v5);
}

void sub_24574CD8C(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_245751220();
  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  sub_2457513E4();
  sub_2457512D4();
}

uint64_t sub_24574CDCC(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = v1 + OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_requestInfo;
  swift_beginAccess();
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

id ClassificationXPCRequest.__allocating_init(request:requestInfo:)()
{
  __int128 *v0;
  uint64_t v1;

  sub_24575147C();
  sub_2457514D8();
  return ClassificationXPCRequest.init(request:requestInfo:)(v1, v0);
}

id ClassificationXPCRequest.init(request:requestInfo:)(uint64_t a1, __int128 *a2)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  __int128 v9;
  objc_super v10;

  v9 = *a2;
  v4 = *((_QWORD *)a2 + 2);
  v5 = *((_QWORD *)a2 + 3);
  sub_24574B530(a1, (uint64_t)&v2[OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request]);
  v6 = &v2[OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_requestInfo];
  *(_OWORD *)v6 = v9;
  *((_QWORD *)v6 + 2) = v4;
  *((_QWORD *)v6 + 3) = v5;
  v10.receiver = v2;
  v10.super_class = (Class)sub_24574E238();
  v7 = objc_msgSendSuper2(&v10, sel_init);
  sub_24574B880(a1, type metadata accessor for ClassificationXPCRequest.Request);
  return v7;
}

void ClassificationXPCRequest.__allocating_init(coder:)(void *a1)
{
  sub_2457514D8();
  ClassificationXPCRequest.init(coder:)(a1);
  sub_245748A90();
}

id ClassificationXPCRequest.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  objc_super v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  type metadata accessor for ClassificationXPCRequest.Request(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v3);
  sub_245749FF4();
  v6 = v5 - v4;
  v7 = v1;
  sub_24574DAB4((uint64_t)a1, (void (*)(uint64_t))type metadata accessor for ClassificationXPCRequest.Request, &qword_257498280);
  sub_24574B7D4(v6, (uint64_t)&v7[OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request], (void (*)(_QWORD))type metadata accessor for ClassificationXPCRequest.Request);
  sub_24574D60C();
  v9 = v15;
  v10 = v16;
  v11 = &v7[OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_requestInfo];
  *(_OWORD *)v11 = v14;
  *((_QWORD *)v11 + 2) = v9;
  *((_QWORD *)v11 + 3) = v10;

  v13.receiver = v7;
  v13.super_class = (Class)type metadata accessor for XPCValue();
  v12 = objc_msgSendSuper2(&v13, sel_init);

  return v12;
}

void sub_24574D238(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;

  sub_2457BA2B8(a1);
  sub_24574CD8C(&v7);
  if (qword_257497EE0 != -1)
    swift_once();
  sub_24574E110();
  v2 = sub_2457BA9FC();
  v4 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = (void *)sub_2457BAA74();
  sub_24574E14C(v2, v4);
  sub_2457511B8();
  v6 = (void *)sub_2457BB1A0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

}

uint64_t sub_24574D508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_24575150C();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v2);
  sub_24575136C();
  v3 = v0 + OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request;
  swift_beginAccess();
  sub_24574B530(v3, v1);
  if (qword_257497EE0 != -1)
    swift_once();
  sub_24574B84C(&qword_257498250, (void (*)(uint64_t))type metadata accessor for ClassificationXPCRequest.Request);
  sub_2457BA9FC();
  sub_24574B880(v1, type metadata accessor for ClassificationXPCRequest.Request);
  return sub_245748AA4();
}

void sub_24574D60C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  sub_245751438();
  sub_245751108();
  v2 = sub_2457BB3A4();
  if (v2 && (v3 = (void *)v2, sub_2457512A4(), v3, v11 >> 60 != 15))
  {
    if (qword_257497EE8 != -1)
      swift_once();
    sub_245750EDC();
    sub_245751208();
    if (!v0)
    {
      sub_245750E8C(v10, v11);
      goto LABEL_13;
    }
    sub_245750E8C(v10, v11);
  }
  else
  {
    sub_2457514FC();
    sub_2457511B8();
    sub_2457BA500();
    sub_2457512FC();
  }
  if (qword_257497E38 != -1)
    swift_once();
  v4 = sub_245751504();
  v5 = (void *)sub_24574E0F8(v4, (uint64_t)qword_257498E30);
  sub_2457510D8();
  sub_2457510D8();
  sub_2457BB068();
  v6 = sub_245751514();
  if (sub_245751158(v6))
  {
    sub_245751148();
    v7 = (_QWORD *)sub_2457511A8();
    sub_2457510A0(5.7779e-34);
    sub_24575146C();
    sub_245750FD0();
    *v7 = v1;
    sub_24575103C();
    sub_24575103C();
    sub_24575108C(&dword_245746000, v8, v9, "ClassificationXPCRequest.decodeRequestInfo(coder:) failed with error: %@");
    sub_245748A50((uint64_t *)&unk_25749A9C0);
    sub_245751198();
    sub_24575105C();
  }
  sub_24575103C();
  sub_24575103C();

  sub_2457514A4();
LABEL_13:
  sub_245751258();
}

id ClassificationXPCRequest.__allocating_init()()
{
  return objc_msgSend(sub_2457514D8(), sel_init);
}

void ClassificationXPCRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_24574D818()
{
  uint64_t v0;

  sub_24574B880(v0 + OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request, type metadata accessor for ClassificationXPCRequest.Request);
  sub_245751414();
  return sub_24575131C();
}

id ClassificationXPCRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_24574E238();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_24574D8CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  void *v5;
  os_log_type_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  sub_245751438();
  sub_245751108();
  v2 = sub_2457510B4();
  if (v2 && (v3 = (void *)v2, sub_2457512A4(), v3, v11 >> 60 != 15))
  {
    if (qword_257497EE8 != -1)
      swift_once();
    sub_245750EA0();
    sub_245751208();
    if (!v0)
    {
      sub_245750E8C(v10, v11);
      goto LABEL_13;
    }
    sub_245750E8C(v10, v11);
  }
  else
  {
    sub_2457514FC();
    sub_24575111C();
    sub_2457512FC();
  }
  if (qword_257497E38 != -1)
    swift_once();
  v4 = sub_245751504();
  v5 = (void *)sub_24574E0F8(v4, (uint64_t)qword_257498E30);
  sub_2457510D8();
  sub_2457510D8();
  sub_2457BB068();
  v6 = sub_245751514();
  if (sub_245751158(v6))
  {
    sub_245751148();
    v7 = (_QWORD *)sub_2457511A8();
    sub_2457510A0(5.7779e-34);
    sub_24575146C();
    sub_245750FD0();
    *v7 = v1;
    sub_24575103C();
    sub_24575103C();
    sub_24575108C(&dword_245746000, v8, v9, "XPCValue.decodeWrappedValue(:coder:) failed with error: %@");
    sub_245748A50((uint64_t *)&unk_25749A9C0);
    sub_245751198();
    sub_24575105C();
  }
  sub_24575103C();
  sub_24575103C();

  sub_2457514A4();
LABEL_13:
  sub_245751258();
}

uint64_t sub_24574DA5C(uint64_t a1)
{
  return sub_24574DAB4(a1, (void (*)(uint64_t))type metadata accessor for SummarizationXPCRequest.Request, &qword_257498268);
}

uint64_t sub_24574DA88(uint64_t a1)
{
  return sub_24574DAB4(a1, (void (*)(uint64_t))type metadata accessor for SummarizationXPCResult.Result, &qword_257498260);
}

uint64_t sub_24574DAB4(uint64_t a1, void (*a2)(uint64_t), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  os_log_type_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  unint64_t v17;

  sub_245751108();
  v7 = sub_2457510B4();
  if (v7 && (v8 = (void *)v7, sub_2457512A4(), v8, v17 >> 60 != 15))
  {
    v4 = v16;
    a2(0);
    if (qword_257497EE8 != -1)
      swift_once();
    sub_24574B84C(a3, a2);
    sub_2457BA9F0();
    if (!v3)
      return sub_245750E8C(v16, v17);
    sub_245750E8C(v16, v17);
  }
  else
  {
    sub_2457514FC();
    sub_24575111C();
    sub_2457512FC();
  }
  if (qword_257497E38 != -1)
    swift_once();
  v9 = sub_245751504();
  v10 = (void *)sub_24574E0F8(v9, (uint64_t)qword_257498E30);
  sub_2457510D8();
  sub_2457510D8();
  sub_2457BB068();
  v11 = sub_245751514();
  if (sub_245751158(v11))
  {
    sub_245751148();
    v12 = (_QWORD *)sub_2457511A8();
    sub_2457510A0(5.7779e-34);
    sub_24575146C();
    sub_245750FD0();
    *v12 = v4;
    sub_24575103C();
    sub_24575103C();
    sub_24575108C(&dword_245746000, v13, v14, "XPCValue.decodeWrappedValue(:coder:) failed with error: %@");
    sub_245748A50((uint64_t *)&unk_25749A9C0);
    sub_245751198();
    sub_24575105C();
  }
  sub_24575103C();
  sub_24575103C();

  return sub_2457514A4();
}

uint64_t ClassificationXPCRequest.Request.Category.description.getter()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  sub_24575151C();
  v2 = 0x6966697373616C63;
  if (!v3)
    v2 = 1953719668;
  if (v0)
    return v2;
  else
    return v1;
}

uint64_t ClassificationXPCRequest.Request.Category.rawValue.getter()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  sub_24575151C();
  v2 = 0x6966697373616C63;
  if (!v3)
    v2 = 1953719668;
  if (v0)
    return v2;
  else
    return v1;
}

Sage::ClassificationXPCRequest::Request::Category_optional __swiftcall ClassificationXPCRequest.Request.Category.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  Sage::ClassificationXPCRequest::Request::Category_optional result;

  v2 = v1;
  v3 = sub_2457BB524();
  swift_bridgeObjectRelease();
  v4 = 3;
  if (v3 < 3)
    v4 = v3;
  *v2 = v4;
  sub_245749FB4();
  return result;
}

void sub_24574DD80()
{
  sub_2457B4E54();
}

void sub_24574DD8C()
{
  char *v0;

  sub_2457A3FF0(*v0);
}

uint64_t sub_24574DD94(uint64_t a1)
{
  char *v1;

  return sub_2457A4094(a1, *v1);
}

void sub_24574DD9C(uint64_t a1)
{
  char *v1;

  sub_2457A4730(a1, *v1);
}

Sage::ClassificationXPCRequest::Request::Category_optional sub_24574DDA4(Swift::String *a1)
{
  return ClassificationXPCRequest.Request.Category.init(rawValue:)(*a1);
}

void sub_24574DDB0(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = ClassificationXPCRequest.Request.Category.rawValue.getter();
  a1[1] = v2;
  sub_245748A90();
}

void ClassificationXPCRequest.Request.category.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  type metadata accessor for ClassificationXPCRequest.Request(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v1);
  sub_245749FF4();
  sub_24574B530(v0, v3 - v2);
  v4 = (char *)sub_24574DE50 + 4 * byte_2457BC6B8[swift_getEnumCaseMultiPayload()];
  __asm { BR              X11 }
}

void sub_24574DE50()
{
  _BYTE *v0;
  uint64_t v1;

  sub_24574B880(v1, type metadata accessor for ClassificationXPCRequest.Request);
  *v0 = 1;
  sub_245749FB4();
}

void sub_24574DED4()
{
  JUMPOUT(0x24574DEC4);
}

unint64_t sub_24574DEDC()
{
  unint64_t result;

  result = qword_2574980C0;
  if (!qword_2574980C0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.ThreadClassificationOptions, &type metadata for UserNotification.ThreadClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_2574980C0);
  }
  return result;
}

unint64_t sub_24574DF18()
{
  unint64_t result;

  result = qword_2574980D0;
  if (!qword_2574980D0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.ThreadClassificationOptions, &type metadata for TextMessage.ThreadClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_2574980D0);
  }
  return result;
}

void sub_24574DF54(_QWORD *a1, uint64_t *a2)
{
  if (!*a1)
  {
    sub_24574B5EC(a2);
    sub_2457514B8();
  }
  sub_245748A90();
}

unint64_t sub_24574DF88()
{
  unint64_t result;

  result = qword_2574980E0;
  if (!qword_2574980E0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.ThreadClassificationOptions, &type metadata for MailMessage.ThreadClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_2574980E0);
  }
  return result;
}

unint64_t sub_24574DFC4()
{
  unint64_t result;

  result = qword_2574980F0;
  if (!qword_2574980F0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.ClassificationOptions, &type metadata for UserNotification.ClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_2574980F0);
  }
  return result;
}

unint64_t sub_24574E000()
{
  unint64_t result;

  result = qword_257498100;
  if (!qword_257498100)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.ClassificationOptions, &type metadata for TextMessage.ClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_257498100);
  }
  return result;
}

unint64_t sub_24574E03C()
{
  unint64_t result;

  result = qword_257498110;
  if (!qword_257498110)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.ClassificationOptions, &type metadata for MailMessage.ClassificationOptions);
    atomic_store(result, (unint64_t *)&qword_257498110);
  }
  return result;
}

unint64_t sub_24574E078()
{
  unint64_t result;

  result = qword_257498120;
  if (!qword_257498120)
  {
    result = MEMORY[0x24953B288](&unk_2457BD1D8, &type metadata for ClassificationXPCRequest.RequestInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498120);
  }
  return result;
}

uint64_t type metadata accessor for ClassificationXPCRequest(uint64_t a1)
{
  return sub_24574E0C8(a1, (uint64_t *)&unk_257498148);
}

uint64_t sub_24574E0C8(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24574E0F8(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

unint64_t sub_24574E110()
{
  unint64_t result;

  result = qword_257498130;
  if (!qword_257498130)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationXPCRequest.RequestInfo, &type metadata for ClassificationXPCRequest.RequestInfo);
    atomic_store(result, (unint64_t *)&qword_257498130);
  }
  return result;
}

uint64_t sub_24574E14C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

unint64_t sub_24574E194()
{
  unint64_t result;

  result = qword_257498138;
  if (!qword_257498138)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationXPCRequest.Error, &type metadata for ClassificationXPCRequest.Error);
    atomic_store(result, (unint64_t *)&qword_257498138);
  }
  return result;
}

unint64_t sub_24574E1D4()
{
  unint64_t result;

  result = qword_257498140;
  if (!qword_257498140)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationXPCRequest.Request.Category, &type metadata for ClassificationXPCRequest.Request.Category);
    atomic_store(result, (unint64_t *)&qword_257498140);
  }
  return result;
}

void sub_24574E210(uint64_t a1@<X8>)
{
  sub_24574CC80(a1);
  sub_245748A90();
}

uint64_t sub_24574E238()
{
  return type metadata accessor for ClassificationXPCRequest(0);
}

uint64_t sub_24574E240()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for ClassificationXPCRequest.Request(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for ClassificationXPCRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClassificationXPCRequest.request.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of ClassificationXPCRequest.requestInfo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ClassificationXPCRequest.__allocating_init(request:requestInfo:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 184))();
}

uint64_t sub_24574E30C()
{
  return 0;
}

void type metadata accessor for ClassificationXPCRequest.Error()
{
  sub_245751428();
}

char *initializeBufferWithCopyOfBuffer for ClassificationXPCRequest.Request(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  unsigned __int8 *v32;
  uint64_t v33;
  void (*v34)(char *, unsigned __int8 *, uint64_t);
  uint64_t v35;
  char *v36;
  unsigned __int8 *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unsigned __int8 *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  unsigned __int8 *v45;
  uint64_t v46;
  uint64_t v47;
  int *v48;
  uint64_t v49;
  char *v50;
  unsigned __int8 *v51;
  uint64_t v52;
  void (*v53)(char *, unsigned __int8 *, uint64_t);
  uint64_t v54;
  char *v55;
  unsigned __int8 *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  unsigned __int8 *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  unsigned __int8 *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int *v68;
  uint64_t v69;
  char *v70;
  unsigned __int8 *v71;
  uint64_t v72;
  void (*v73)(char *, unsigned __int8 *, uint64_t);
  uint64_t v74;
  char *v75;
  unsigned __int8 *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  unsigned __int8 *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  unsigned __int8 *v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  unsigned __int8 *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  unsigned __int8 *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  unsigned __int8 *v96;
  uint64_t v97;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v12 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v12 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v7 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v7;
        v8 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v8;
        v9 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          v10 = *((_QWORD *)a2 + 4);
          v11 = *((_QWORD *)a2 + 5);
          sub_24574E938(v10, v11, v9);
          *((_QWORD *)a1 + 4) = v10;
          *((_QWORD *)a1 + 5) = v11;
          a1[48] = v9;
        }
        v28 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v28;
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v29 = (int *)type metadata accessor for MailMessage();
        v30 = v29[7];
        v31 = &a1[v30];
        v32 = &a2[v30];
        v33 = sub_2457BAA98();
        v34 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        a1[v29[8]] = a2[v29[8]];
        v35 = v29[9];
        v36 = &a1[v35];
        v37 = &a2[v35];
        v38 = *((_QWORD *)v37 + 1);
        *(_QWORD *)v36 = *(_QWORD *)v37;
        *((_QWORD *)v36 + 1) = v38;
        v39 = v29[10];
        v40 = &a1[v39];
        v41 = &a2[v39];
        v42 = *((_QWORD *)v41 + 1);
        *(_QWORD *)v40 = *(_QWORD *)v41;
        *((_QWORD *)v40 + 1) = v42;
        *(_QWORD *)&a1[v29[11]] = *(_QWORD *)&a2[v29[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43 = *(int *)(sub_245748A50(&qword_257498040) + 48);
        v44 = &a1[v43];
        v45 = &a2[v43];
        v46 = *((_QWORD *)v45 + 1);
        *(_QWORD *)v44 = *(_QWORD *)v45;
        *((_QWORD *)v44 + 1) = v46;
        v44[16] = v45[16];
        *((_QWORD *)v44 + 3) = *((_QWORD *)v45 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 1u:
        v13 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v13;
        v14 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v14;
        v15 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v15 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          v16 = *((_QWORD *)a2 + 4);
          v17 = *((_QWORD *)a2 + 5);
          sub_24574E938(v16, v17, v15);
          *((_QWORD *)a1 + 4) = v16;
          *((_QWORD *)a1 + 5) = v17;
          a1[48] = v15;
        }
        v47 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v47;
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v48 = (int *)type metadata accessor for TextMessage();
        v49 = v48[7];
        v50 = &a1[v49];
        v51 = &a2[v49];
        v52 = sub_2457BAA98();
        v53 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v53(v50, v51, v52);
        a1[v48[8]] = a2[v48[8]];
        v54 = v48[9];
        v55 = &a1[v54];
        v56 = &a2[v54];
        v57 = *((_QWORD *)v56 + 1);
        *(_QWORD *)v55 = *(_QWORD *)v56;
        *((_QWORD *)v55 + 1) = v57;
        v58 = v48[10];
        v59 = &a1[v58];
        v60 = &a2[v58];
        v61 = *((_QWORD *)v60 + 1);
        *(_QWORD *)v59 = *(_QWORD *)v60;
        *((_QWORD *)v59 + 1) = v61;
        *(_QWORD *)&a1[v48[11]] = *(_QWORD *)&a2[v48[11]];
        *(_QWORD *)&a1[v48[12]] = *(_QWORD *)&a2[v48[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v62 = *(int *)(sub_245748A50(&qword_257498020) + 48);
        v63 = &a1[v62];
        v64 = &a2[v62];
        v65 = *((_QWORD *)v64 + 1);
        *(_QWORD *)v63 = *(_QWORD *)v64;
        *((_QWORD *)v63 + 1) = v65;
        v63[16] = v64[16];
        *((_QWORD *)v63 + 3) = *((_QWORD *)v64 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 2u:
        v18 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v18;
        v19 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v19;
        v20 = *((_QWORD *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20 == 1)
        {
          v21 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v21;
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
        }
        else
        {
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          *((_QWORD *)a1 + 5) = v20;
          v25 = a2[64];
          swift_bridgeObjectRetain();
          if (v25 == 255)
          {
            *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
            a1[64] = a2[64];
          }
          else
          {
            v26 = *((_QWORD *)a2 + 6);
            v27 = *((_QWORD *)a2 + 7);
            sub_24574E938(v26, v27, v25);
            *((_QWORD *)a1 + 6) = v26;
            *((_QWORD *)a1 + 7) = v27;
            a1[64] = v25;
          }
          v66 = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = v66;
          a1[88] = a2[88];
          swift_bridgeObjectRetain();
        }
        v67 = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = v67;
        v68 = (int *)type metadata accessor for UserNotification();
        v69 = v68[10];
        v70 = &a1[v69];
        v71 = &a2[v69];
        v72 = sub_2457BAA98();
        v73 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v72 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v73(v70, v71, v72);
        a1[v68[11]] = a2[v68[11]];
        v74 = v68[12];
        v75 = &a1[v74];
        v76 = &a2[v74];
        v77 = *((_QWORD *)v76 + 1);
        *(_QWORD *)v75 = *(_QWORD *)v76;
        *((_QWORD *)v75 + 1) = v77;
        v78 = v68[13];
        v79 = &a1[v78];
        v80 = &a2[v78];
        v81 = *((_QWORD *)v80 + 1);
        *(_QWORD *)v79 = *(_QWORD *)v80;
        *((_QWORD *)v79 + 1) = v81;
        v82 = v68[14];
        v83 = &a1[v82];
        v84 = &a2[v82];
        v85 = *((_QWORD *)v84 + 1);
        *(_QWORD *)v83 = *(_QWORD *)v84;
        *((_QWORD *)v83 + 1) = v85;
        v86 = v68[15];
        v87 = &a1[v86];
        v88 = &a2[v86];
        v89 = *((_QWORD *)v88 + 1);
        *(_QWORD *)v87 = *(_QWORD *)v88;
        *((_QWORD *)v87 + 1) = v89;
        v90 = v68[16];
        v91 = &a1[v90];
        v92 = &a2[v90];
        v93 = *((_QWORD *)v92 + 1);
        *(_QWORD *)v91 = *(_QWORD *)v92;
        *((_QWORD *)v91 + 1) = v93;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v94 = *(int *)(sub_245748A50(&qword_257498000) + 48);
        v95 = &a1[v94];
        v96 = &a2[v94];
        v97 = *((_QWORD *)v96 + 1);
        *(_QWORD *)v95 = *(_QWORD *)v96;
        *((_QWORD *)v95 + 1) = v97;
        v95[16] = v96[16];
        *((_QWORD *)v95 + 3) = *((_QWORD *)v96 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_21;
      case 3u:
      case 4u:
      case 5u:
        v22 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v22;
        v24 = *((_QWORD *)a2 + 2);
        v23 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = v24;
        *((_QWORD *)a1 + 3) = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_21:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_24574E938(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ClassificationXPCRequest.Request(uint64_t a1)
{
  uint64_t result;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 != 255)
        sub_24574EBF0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(type metadata accessor for MailMessage() + 28);
      v5 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = &qword_257498040;
      goto LABEL_14;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = *(unsigned __int8 *)(a1 + 48);
      if (v7 != 255)
        sub_24574EBF0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = a1 + *(int *)(type metadata accessor for TextMessage() + 28);
      v9 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = &qword_257498020;
      goto LABEL_14;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 40) != 1)
      {
        swift_bridgeObjectRelease();
        v10 = *(unsigned __int8 *)(a1 + 64);
        if (v10 != 255)
          sub_24574EBF0(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v10);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = a1 + *(int *)(type metadata accessor for UserNotification() + 40);
      v12 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = &qword_257498000;
LABEL_14:
      sub_245748A50(v6);
      goto LABEL_15;
    case 3:
    case 4:
    case 5:
      swift_bridgeObjectRelease();
LABEL_15:
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24574EBF0(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  uint64_t result;

  if (a3 <= 2u)
    return swift_bridgeObjectRelease();
  return result;
}

char *initializeWithCopy for ClassificationXPCRequest.Request(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  char *v29;
  unsigned __int8 *v30;
  uint64_t v31;
  void (*v32)(char *, unsigned __int8 *, uint64_t);
  uint64_t v33;
  char *v34;
  unsigned __int8 *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  unsigned __int8 *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  unsigned __int8 *v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  uint64_t v47;
  char *v48;
  unsigned __int8 *v49;
  uint64_t v50;
  void (*v51)(char *, unsigned __int8 *, uint64_t);
  uint64_t v52;
  char *v53;
  unsigned __int8 *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  unsigned __int8 *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  unsigned __int8 *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  char *v68;
  unsigned __int8 *v69;
  uint64_t v70;
  void (*v71)(char *, unsigned __int8 *, uint64_t);
  uint64_t v72;
  char *v73;
  unsigned __int8 *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  unsigned __int8 *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  unsigned __int8 *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  unsigned __int8 *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  unsigned __int8 *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  unsigned __int8 *v94;
  uint64_t v95;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v6 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      v7 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v7;
      v8 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        v9 = *((_QWORD *)a2 + 4);
        v10 = *((_QWORD *)a2 + 5);
        sub_24574E938(v9, v10, v8);
        *((_QWORD *)a1 + 4) = v9;
        *((_QWORD *)a1 + 5) = v10;
        a1[48] = v8;
      }
      v26 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v26;
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v27 = (int *)type metadata accessor for MailMessage();
      v28 = v27[7];
      v29 = &a1[v28];
      v30 = &a2[v28];
      v31 = sub_2457BAA98();
      v32 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v32(v29, v30, v31);
      a1[v27[8]] = a2[v27[8]];
      v33 = v27[9];
      v34 = &a1[v33];
      v35 = &a2[v33];
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      v37 = v27[10];
      v38 = &a1[v37];
      v39 = &a2[v37];
      v40 = *((_QWORD *)v39 + 1);
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *((_QWORD *)v38 + 1) = v40;
      *(_QWORD *)&a1[v27[11]] = *(_QWORD *)&a2[v27[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v41 = *(int *)(sub_245748A50(&qword_257498040) + 48);
      v42 = &a1[v41];
      v43 = &a2[v41];
      v44 = *((_QWORD *)v43 + 1);
      *(_QWORD *)v42 = *(_QWORD *)v43;
      *((_QWORD *)v42 + 1) = v44;
      v42[16] = v43[16];
      *((_QWORD *)v42 + 3) = *((_QWORD *)v43 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 1u:
      v11 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v11;
      v12 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v12;
      v13 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v13 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        v14 = *((_QWORD *)a2 + 4);
        v15 = *((_QWORD *)a2 + 5);
        sub_24574E938(v14, v15, v13);
        *((_QWORD *)a1 + 4) = v14;
        *((_QWORD *)a1 + 5) = v15;
        a1[48] = v13;
      }
      v45 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v45;
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v46 = (int *)type metadata accessor for TextMessage();
      v47 = v46[7];
      v48 = &a1[v47];
      v49 = &a2[v47];
      v50 = sub_2457BAA98();
      v51 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51(v48, v49, v50);
      a1[v46[8]] = a2[v46[8]];
      v52 = v46[9];
      v53 = &a1[v52];
      v54 = &a2[v52];
      v55 = *((_QWORD *)v54 + 1);
      *(_QWORD *)v53 = *(_QWORD *)v54;
      *((_QWORD *)v53 + 1) = v55;
      v56 = v46[10];
      v57 = &a1[v56];
      v58 = &a2[v56];
      v59 = *((_QWORD *)v58 + 1);
      *(_QWORD *)v57 = *(_QWORD *)v58;
      *((_QWORD *)v57 + 1) = v59;
      *(_QWORD *)&a1[v46[11]] = *(_QWORD *)&a2[v46[11]];
      *(_QWORD *)&a1[v46[12]] = *(_QWORD *)&a2[v46[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v60 = *(int *)(sub_245748A50(&qword_257498020) + 48);
      v61 = &a1[v60];
      v62 = &a2[v60];
      v63 = *((_QWORD *)v62 + 1);
      *(_QWORD *)v61 = *(_QWORD *)v62;
      *((_QWORD *)v61 + 1) = v63;
      v61[16] = v62[16];
      *((_QWORD *)v61 + 3) = *((_QWORD *)v62 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 2u:
      v16 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v16;
      v17 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v17;
      v18 = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18 == 1)
      {
        v19 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v19;
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      }
      else
      {
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v18;
        v23 = a2[64];
        swift_bridgeObjectRetain();
        if (v23 == 255)
        {
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
          a1[64] = a2[64];
        }
        else
        {
          v24 = *((_QWORD *)a2 + 6);
          v25 = *((_QWORD *)a2 + 7);
          sub_24574E938(v24, v25, v23);
          *((_QWORD *)a1 + 6) = v24;
          *((_QWORD *)a1 + 7) = v25;
          a1[64] = v23;
        }
        v64 = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v64;
        a1[88] = a2[88];
        swift_bridgeObjectRetain();
      }
      v65 = *((_QWORD *)a2 + 13);
      *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
      *((_QWORD *)a1 + 13) = v65;
      v66 = (int *)type metadata accessor for UserNotification();
      v67 = v66[10];
      v68 = &a1[v67];
      v69 = &a2[v67];
      v70 = sub_2457BAA98();
      v71 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v70 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v71(v68, v69, v70);
      a1[v66[11]] = a2[v66[11]];
      v72 = v66[12];
      v73 = &a1[v72];
      v74 = &a2[v72];
      v75 = *((_QWORD *)v74 + 1);
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v75;
      v76 = v66[13];
      v77 = &a1[v76];
      v78 = &a2[v76];
      v79 = *((_QWORD *)v78 + 1);
      *(_QWORD *)v77 = *(_QWORD *)v78;
      *((_QWORD *)v77 + 1) = v79;
      v80 = v66[14];
      v81 = &a1[v80];
      v82 = &a2[v80];
      v83 = *((_QWORD *)v82 + 1);
      *(_QWORD *)v81 = *(_QWORD *)v82;
      *((_QWORD *)v81 + 1) = v83;
      v84 = v66[15];
      v85 = &a1[v84];
      v86 = &a2[v84];
      v87 = *((_QWORD *)v86 + 1);
      *(_QWORD *)v85 = *(_QWORD *)v86;
      *((_QWORD *)v85 + 1) = v87;
      v88 = v66[16];
      v89 = &a1[v88];
      v90 = &a2[v88];
      v91 = *((_QWORD *)v90 + 1);
      *(_QWORD *)v89 = *(_QWORD *)v90;
      *((_QWORD *)v89 + 1) = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v92 = *(int *)(sub_245748A50(&qword_257498000) + 48);
      v93 = &a1[v92];
      v94 = &a2[v92];
      v95 = *((_QWORD *)v94 + 1);
      *(_QWORD *)v93 = *(_QWORD *)v94;
      *((_QWORD *)v93 + 1) = v95;
      v93[16] = v94[16];
      *((_QWORD *)v93 + 3) = *((_QWORD *)v94 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_19;
    case 3u:
    case 4u:
    case 5u:
      v20 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v20;
      v22 = *((_QWORD *)a2 + 2);
      v21 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = v22;
      *((_QWORD *)a1 + 3) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_19:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for ClassificationXPCRequest.Request(char *a1, char *a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  unsigned __int8 *v23;
  uint64_t v24;
  void (*v25)(char *, unsigned __int8 *, uint64_t);
  uint64_t v26;
  char *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  char *v30;
  unsigned __int8 *v31;
  uint64_t v32;
  char *v33;
  unsigned __int8 *v34;
  __int128 v35;
  int *v36;
  uint64_t v37;
  char *v38;
  unsigned __int8 *v39;
  uint64_t v40;
  void (*v41)(char *, unsigned __int8 *, uint64_t);
  uint64_t v42;
  char *v43;
  unsigned __int8 *v44;
  uint64_t v45;
  char *v46;
  unsigned __int8 *v47;
  uint64_t v48;
  char *v49;
  unsigned __int8 *v50;
  __int128 v51;
  int *v52;
  uint64_t v53;
  char *v54;
  unsigned __int8 *v55;
  uint64_t v56;
  void (*v57)(char *, unsigned __int8 *, uint64_t);
  uint64_t v58;
  char *v59;
  unsigned __int8 *v60;
  uint64_t v61;
  char *v62;
  unsigned __int8 *v63;
  uint64_t v64;
  char *v65;
  unsigned __int8 *v66;
  uint64_t v67;
  char *v68;
  unsigned __int8 *v69;
  uint64_t v70;
  char *v71;
  unsigned __int8 *v72;
  uint64_t v73;
  char *v74;
  unsigned __int8 *v75;

  if (a1 != a2)
  {
    sub_24574B880((uint64_t)a1, type metadata accessor for ClassificationXPCRequest.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v6 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6 == 255)
        {
          v19 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v19;
        }
        else
        {
          v7 = *((_QWORD *)a2 + 4);
          v8 = *((_QWORD *)a2 + 5);
          sub_24574E938(v7, v8, v6);
          *((_QWORD *)a1 + 4) = v7;
          *((_QWORD *)a1 + 5) = v8;
          a1[48] = v6;
        }
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v20 = (int *)type metadata accessor for MailMessage();
        v21 = v20[7];
        v22 = &a1[v21];
        v23 = (unsigned __int8 *)&a2[v21];
        v24 = sub_2457BAA98();
        v25 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
        a1[v20[8]] = a2[v20[8]];
        v26 = v20[9];
        v27 = &a1[v26];
        v28 = (unsigned __int8 *)&a2[v26];
        *(_QWORD *)v27 = *(_QWORD *)v28;
        *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
        v29 = v20[10];
        v30 = &a1[v29];
        v31 = (unsigned __int8 *)&a2[v29];
        *(_QWORD *)v30 = *(_QWORD *)v31;
        *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
        *(_QWORD *)&a1[v20[11]] = *(_QWORD *)&a2[v20[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v32 = *(int *)(sub_245748A50(&qword_257498040) + 48);
        v33 = &a1[v32];
        v34 = (unsigned __int8 *)&a2[v32];
        *(_QWORD *)v33 = *(_QWORD *)v34;
        *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
        v33[16] = v34[16];
        *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v9 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9 == 255)
        {
          v35 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v35;
        }
        else
        {
          v10 = *((_QWORD *)a2 + 4);
          v11 = *((_QWORD *)a2 + 5);
          sub_24574E938(v10, v11, v9);
          *((_QWORD *)a1 + 4) = v10;
          *((_QWORD *)a1 + 5) = v11;
          a1[48] = v9;
        }
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v36 = (int *)type metadata accessor for TextMessage();
        v37 = v36[7];
        v38 = &a1[v37];
        v39 = (unsigned __int8 *)&a2[v37];
        v40 = sub_2457BAA98();
        v41 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v40 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v41(v38, v39, v40);
        a1[v36[8]] = a2[v36[8]];
        v42 = v36[9];
        v43 = &a1[v42];
        v44 = (unsigned __int8 *)&a2[v42];
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
        v45 = v36[10];
        v46 = &a1[v45];
        v47 = (unsigned __int8 *)&a2[v45];
        *(_QWORD *)v46 = *(_QWORD *)v47;
        *((_QWORD *)v46 + 1) = *((_QWORD *)v47 + 1);
        *(_QWORD *)&a1[v36[11]] = *(_QWORD *)&a2[v36[11]];
        *(_QWORD *)&a1[v36[12]] = *(_QWORD *)&a2[v36[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v48 = *(int *)(sub_245748A50(&qword_257498020) + 48);
        v49 = &a1[v48];
        v50 = (unsigned __int8 *)&a2[v48];
        *(_QWORD *)v49 = *(_QWORD *)v50;
        *((_QWORD *)v49 + 1) = *((_QWORD *)v50 + 1);
        v49[16] = v50[16];
        *((_QWORD *)v49 + 3) = *((_QWORD *)v50 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v12 = *((_QWORD *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v12 == 1)
        {
          v13 = *((_OWORD *)a2 + 2);
          v14 = *((_OWORD *)a2 + 3);
          v15 = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
          *((_OWORD *)a1 + 3) = v14;
          *((_OWORD *)a1 + 4) = v15;
          *((_OWORD *)a1 + 2) = v13;
        }
        else
        {
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
          v16 = a2[64];
          swift_bridgeObjectRetain();
          if (v16 == 255)
          {
            v51 = *((_OWORD *)a2 + 3);
            a1[64] = a2[64];
            *((_OWORD *)a1 + 3) = v51;
          }
          else
          {
            v17 = *((_QWORD *)a2 + 6);
            v18 = *((_QWORD *)a2 + 7);
            sub_24574E938(v17, v18, v16);
            *((_QWORD *)a1 + 6) = v17;
            *((_QWORD *)a1 + 7) = v18;
            a1[64] = v16;
          }
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          a1[88] = a2[88];
          swift_bridgeObjectRetain();
        }
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        v52 = (int *)type metadata accessor for UserNotification();
        v53 = v52[10];
        v54 = &a1[v53];
        v55 = (unsigned __int8 *)&a2[v53];
        v56 = sub_2457BAA98();
        v57 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v56 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v57(v54, v55, v56);
        a1[v52[11]] = a2[v52[11]];
        v58 = v52[12];
        v59 = &a1[v58];
        v60 = (unsigned __int8 *)&a2[v58];
        *(_QWORD *)v59 = *(_QWORD *)v60;
        *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
        v61 = v52[13];
        v62 = &a1[v61];
        v63 = (unsigned __int8 *)&a2[v61];
        *(_QWORD *)v62 = *(_QWORD *)v63;
        *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
        v64 = v52[14];
        v65 = &a1[v64];
        v66 = (unsigned __int8 *)&a2[v64];
        *(_QWORD *)v65 = *(_QWORD *)v66;
        *((_QWORD *)v65 + 1) = *((_QWORD *)v66 + 1);
        v67 = v52[15];
        v68 = &a1[v67];
        v69 = (unsigned __int8 *)&a2[v67];
        *(_QWORD *)v68 = *(_QWORD *)v69;
        *((_QWORD *)v68 + 1) = *((_QWORD *)v69 + 1);
        v70 = v52[16];
        v71 = &a1[v70];
        v72 = (unsigned __int8 *)&a2[v70];
        *(_QWORD *)v71 = *(_QWORD *)v72;
        *((_QWORD *)v71 + 1) = *((_QWORD *)v72 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v73 = *(int *)(sub_245748A50(&qword_257498000) + 48);
        v74 = &a1[v73];
        v75 = (unsigned __int8 *)&a2[v73];
        *(_QWORD *)v74 = *(_QWORD *)v75;
        *((_QWORD *)v74 + 1) = *((_QWORD *)v75 + 1);
        v74[16] = v75[16];
        *((_QWORD *)v74 + 3) = *((_QWORD *)v75 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_20;
      case 3u:
      case 4u:
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_20:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t initializeWithTake for ClassificationXPCRequest.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  __int128 v39;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    v18 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v18;
    v19 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v19;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    v20 = (int *)type metadata accessor for UserNotification();
    v21 = v20[10];
    v22 = a1 + v21;
    v23 = a2 + v21;
    v24 = sub_2457BAA98();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    *(_BYTE *)(a1 + v20[11]) = *(_BYTE *)(a2 + v20[11]);
    *(_OWORD *)(a1 + v20[12]) = *(_OWORD *)(a2 + v20[12]);
    *(_OWORD *)(a1 + v20[13]) = *(_OWORD *)(a2 + v20[13]);
    *(_OWORD *)(a1 + v20[14]) = *(_OWORD *)(a2 + v20[14]);
    *(_OWORD *)(a1 + v20[15]) = *(_OWORD *)(a2 + v20[15]);
    *(_OWORD *)(a1 + v20[16]) = *(_OWORD *)(a2 + v20[16]);
    v25 = *(int *)(sub_245748A50(&qword_257498000) + 48);
    v26 = (_OWORD *)(a1 + v25);
    v27 = (_OWORD *)(a2 + v25);
    v28 = v27[1];
    *v26 = *v27;
    v26[1] = v28;
  }
  else if (EnumCaseMultiPayload == 1)
  {
    v29 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v29;
    v30 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v30;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v31 = (int *)type metadata accessor for TextMessage();
    v32 = v31[7];
    v33 = a1 + v32;
    v34 = a2 + v32;
    v35 = sub_2457BAA98();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    *(_BYTE *)(a1 + v31[8]) = *(_BYTE *)(a2 + v31[8]);
    *(_OWORD *)(a1 + v31[9]) = *(_OWORD *)(a2 + v31[9]);
    *(_OWORD *)(a1 + v31[10]) = *(_OWORD *)(a2 + v31[10]);
    *(_QWORD *)(a1 + v31[11]) = *(_QWORD *)(a2 + v31[11]);
    *(_QWORD *)(a1 + v31[12]) = *(_QWORD *)(a2 + v31[12]);
    v36 = *(int *)(sub_245748A50(&qword_257498020) + 48);
    v37 = (_OWORD *)(a1 + v36);
    v38 = (_OWORD *)(a2 + v36);
    v39 = v38[1];
    *v37 = *v38;
    v37[1] = v39;
  }
  else
  {
    if (EnumCaseMultiPayload)
    {
      memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
    }
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    v9 = (int *)type metadata accessor for MailMessage();
    v10 = v9[7];
    v11 = a1 + v10;
    v12 = a2 + v10;
    v13 = sub_2457BAA98();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    *(_BYTE *)(a1 + v9[8]) = *(_BYTE *)(a2 + v9[8]);
    *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
    *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
    *(_QWORD *)(a1 + v9[11]) = *(_QWORD *)(a2 + v9[11]);
    v14 = *(int *)(sub_245748A50(&qword_257498040) + 48);
    v15 = (_OWORD *)(a1 + v14);
    v16 = (_OWORD *)(a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for ClassificationXPCRequest.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  __int128 v7;
  __int128 v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  __int128 v39;

  if (a1 != a2)
  {
    sub_24574B880(a1, type metadata accessor for ClassificationXPCRequest.Request);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      v18 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v18;
      v19 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v19;
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      v20 = (int *)type metadata accessor for UserNotification();
      v21 = v20[10];
      v22 = a1 + v21;
      v23 = a2 + v21;
      v24 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      *(_BYTE *)(a1 + v20[11]) = *(_BYTE *)(a2 + v20[11]);
      *(_OWORD *)(a1 + v20[12]) = *(_OWORD *)(a2 + v20[12]);
      *(_OWORD *)(a1 + v20[13]) = *(_OWORD *)(a2 + v20[13]);
      *(_OWORD *)(a1 + v20[14]) = *(_OWORD *)(a2 + v20[14]);
      *(_OWORD *)(a1 + v20[15]) = *(_OWORD *)(a2 + v20[15]);
      *(_OWORD *)(a1 + v20[16]) = *(_OWORD *)(a2 + v20[16]);
      v25 = *(int *)(sub_245748A50(&qword_257498000) + 48);
      v26 = (_OWORD *)(a1 + v25);
      v27 = (_OWORD *)(a2 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
    }
    else if (EnumCaseMultiPayload == 1)
    {
      v29 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v29;
      v30 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v30;
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      v31 = (int *)type metadata accessor for TextMessage();
      v32 = v31[7];
      v33 = a1 + v32;
      v34 = a2 + v32;
      v35 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      *(_BYTE *)(a1 + v31[8]) = *(_BYTE *)(a2 + v31[8]);
      *(_OWORD *)(a1 + v31[9]) = *(_OWORD *)(a2 + v31[9]);
      *(_OWORD *)(a1 + v31[10]) = *(_OWORD *)(a2 + v31[10]);
      *(_QWORD *)(a1 + v31[11]) = *(_QWORD *)(a2 + v31[11]);
      *(_QWORD *)(a1 + v31[12]) = *(_QWORD *)(a2 + v31[12]);
      v36 = *(int *)(sub_245748A50(&qword_257498020) + 48);
      v37 = (_OWORD *)(a1 + v36);
      v38 = (_OWORD *)(a2 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
    }
    else
    {
      if (EnumCaseMultiPayload)
      {
        memcpy((void *)a1, (const void *)a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
      }
      v7 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
      v8 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v8;
      *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      v9 = (int *)type metadata accessor for MailMessage();
      v10 = v9[7];
      v11 = a1 + v10;
      v12 = a2 + v10;
      v13 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      *(_BYTE *)(a1 + v9[8]) = *(_BYTE *)(a2 + v9[8]);
      *(_OWORD *)(a1 + v9[9]) = *(_OWORD *)(a2 + v9[9]);
      *(_OWORD *)(a1 + v9[10]) = *(_OWORD *)(a2 + v9[10]);
      *(_QWORD *)(a1 + v9[11]) = *(_QWORD *)(a2 + v9[11]);
      v14 = *(int *)(sub_245748A50(&qword_257498040) + 48);
      v15 = (_OWORD *)(a1 + v14);
      v16 = (_OWORD *)(a2 + v14);
      v17 = v16[1];
      *v15 = *v16;
      v15[1] = v17;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_24574FE90()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_24574FEA0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;
  char v6;
  char *v7;
  char *v8;
  char *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;

  result = type metadata accessor for MailMessage();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v7 = &v6;
    result = type metadata accessor for TextMessage();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v8 = &v5;
      result = type metadata accessor for UserNotification();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v9 = &v4;
        v10 = &unk_2457BC950;
        v11 = &unk_2457BC950;
        v12 = &unk_2457BC950;
        v13 = MEMORY[0x24BEE0178] + 64;
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for Handle(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for MailMessage.ClassificationOptions()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for ClassificationXPCRequest.RequestInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ClassificationXPCRequest.RequestInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for MailMessage.ClassificationOptions(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for ClassificationXPCRequest.RequestInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MailMessage.ClassificationOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailMessage.ClassificationOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for ClassificationXPCRequest.RequestInfo()
{
  sub_245751428();
}

uint64_t storeEnumTagSinglePayload for ClassificationXPCRequest.Request.Category(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2457501BC + 4 * byte_2457BC6DD[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2457501F0 + 4 * byte_2457BC6D8[v4]))();
}

uint64_t sub_2457501F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457501F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245750200);
  return result;
}

uint64_t sub_24575020C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245750214);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_245750218(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245750220(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ClassificationXPCRequest.Request.Category()
{
  sub_245751428();
}

_BYTE *sub_245750240(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.RequestInfo.CodingKeys()
{
  return &type metadata for ClassificationXPCRequest.RequestInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for ClassificationXPCRequest.Request.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ClassificationXPCRequest.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_245750330 + 4 * byte_2457BC6E7[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_245750364 + 4 * byte_2457BC6E2[v4]))();
}

uint64_t sub_245750364(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24575036C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245750374);
  return result;
}

uint64_t sub_245750380(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245750388);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_24575038C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245750394(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.CodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.PrewarmCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.PrewarmCodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyMailMessageCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageCodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyTextMessageCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageCodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyUserNotificationCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationCodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyMailMessageThreadCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageThreadCodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyTextMessageThreadCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageThreadCodingKeys;
}

uint64_t getEnumTagSinglePayload for ClassificationXPCResult.Result.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s4Sage24ClassificationXPCRequestC11RequestInfoV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2457504E4 + 4 * byte_2457BC6F1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_245750518 + 4 * byte_2457BC6EC[v4]))();
}

uint64_t sub_245750518(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245750520(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245750528);
  return result;
}

uint64_t sub_245750534(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24575053CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_245750540(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245750548(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.ClassifyUserNotificationThreadCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationThreadCodingKeys;
}

uint64_t getEnumTagSinglePayload for ClassificationClient.PrewarmCategory(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t _s4Sage24ClassificationXPCRequestC5ErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2457505F4 + 4 * byte_2457BC6F6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_245750614 + 4 * byte_2457BC6FB[v4]))();
}

_BYTE *sub_2457505F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_245750614(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24575061C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245750624(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24575062C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245750634(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCRequest.Request.TestTaskCancellationCodingKeys()
{
  return &type metadata for ClassificationXPCRequest.Request.TestTaskCancellationCodingKeys;
}

unint64_t sub_245750654()
{
  unint64_t result;

  result = qword_257498168;
  if (!qword_257498168)
  {
    result = MEMORY[0x24953B288](&unk_2457BCBA0, &type metadata for ClassificationXPCRequest.Request.TestTaskCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498168);
  }
  return result;
}

unint64_t sub_245750694()
{
  unint64_t result;

  result = qword_257498170;
  if (!qword_257498170)
  {
    result = MEMORY[0x24953B288](&unk_2457BCC58, &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498170);
  }
  return result;
}

unint64_t sub_2457506D4()
{
  unint64_t result;

  result = qword_257498178;
  if (!qword_257498178)
  {
    result = MEMORY[0x24953B288](&unk_2457BCD10, &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498178);
  }
  return result;
}

unint64_t sub_245750714()
{
  unint64_t result;

  result = qword_257498180;
  if (!qword_257498180)
  {
    result = MEMORY[0x24953B288](&unk_2457BCDC8, &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498180);
  }
  return result;
}

unint64_t sub_245750754()
{
  unint64_t result;

  result = qword_257498188;
  if (!qword_257498188)
  {
    result = MEMORY[0x24953B288](&unk_2457BCE80, &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498188);
  }
  return result;
}

unint64_t sub_245750794()
{
  unint64_t result;

  result = qword_257498190;
  if (!qword_257498190)
  {
    result = MEMORY[0x24953B288](&unk_2457BCF38, &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498190);
  }
  return result;
}

unint64_t sub_2457507D4()
{
  unint64_t result;

  result = qword_257498198;
  if (!qword_257498198)
  {
    result = MEMORY[0x24953B288](&unk_2457BCFF0, &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498198);
  }
  return result;
}

unint64_t sub_245750814()
{
  unint64_t result;

  result = qword_2574981A0;
  if (!qword_2574981A0)
  {
    result = MEMORY[0x24953B288](&unk_2457BD0F8, &type metadata for ClassificationXPCRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981A0);
  }
  return result;
}

unint64_t sub_245750854()
{
  unint64_t result;

  result = qword_2574981A8;
  if (!qword_2574981A8)
  {
    result = MEMORY[0x24953B288](&unk_2457BD1B0, &type metadata for ClassificationXPCRequest.RequestInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981A8);
  }
  return result;
}

unint64_t sub_245750894()
{
  unint64_t result;

  result = qword_2574981B0;
  if (!qword_2574981B0)
  {
    result = MEMORY[0x24953B288](&unk_2457BD120, &type metadata for ClassificationXPCRequest.RequestInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981B0);
  }
  return result;
}

unint64_t sub_2457508D4()
{
  unint64_t result;

  result = qword_2574981B8;
  if (!qword_2574981B8)
  {
    result = MEMORY[0x24953B288](&unk_2457BD148, &type metadata for ClassificationXPCRequest.RequestInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981B8);
  }
  return result;
}

unint64_t sub_245750914()
{
  unint64_t result;

  result = qword_2574981C0;
  if (!qword_2574981C0)
  {
    result = MEMORY[0x24953B288](&unk_2457BD018, &type metadata for ClassificationXPCRequest.Request.PrewarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981C0);
  }
  return result;
}

unint64_t sub_245750954()
{
  unint64_t result;

  result = qword_2574981C8;
  if (!qword_2574981C8)
  {
    result = MEMORY[0x24953B288](&unk_2457BD040, &type metadata for ClassificationXPCRequest.Request.PrewarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981C8);
  }
  return result;
}

unint64_t sub_245750994()
{
  unint64_t result;

  result = qword_2574981D0;
  if (!qword_2574981D0)
  {
    result = MEMORY[0x24953B288](&unk_2457BCF60, &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981D0);
  }
  return result;
}

unint64_t sub_2457509D4()
{
  unint64_t result;

  result = qword_2574981D8;
  if (!qword_2574981D8)
  {
    result = MEMORY[0x24953B288](&unk_2457BCF88, &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981D8);
  }
  return result;
}

unint64_t sub_245750A14()
{
  unint64_t result;

  result = qword_2574981E0;
  if (!qword_2574981E0)
  {
    result = MEMORY[0x24953B288](&unk_2457BCEA8, &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981E0);
  }
  return result;
}

unint64_t sub_245750A54()
{
  unint64_t result;

  result = qword_2574981E8;
  if (!qword_2574981E8)
  {
    result = MEMORY[0x24953B288](&unk_2457BCED0, &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981E8);
  }
  return result;
}

unint64_t sub_245750A94()
{
  unint64_t result;

  result = qword_2574981F0;
  if (!qword_2574981F0)
  {
    result = MEMORY[0x24953B288](&unk_2457BCDF0, &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981F0);
  }
  return result;
}

unint64_t sub_245750AD4()
{
  unint64_t result;

  result = qword_2574981F8;
  if (!qword_2574981F8)
  {
    result = MEMORY[0x24953B288](&unk_2457BCE18, &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574981F8);
  }
  return result;
}

unint64_t sub_245750B14()
{
  unint64_t result;

  result = qword_257498200;
  if (!qword_257498200)
  {
    result = MEMORY[0x24953B288](&unk_2457BCD38, &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498200);
  }
  return result;
}

unint64_t sub_245750B54()
{
  unint64_t result;

  result = qword_257498208;
  if (!qword_257498208)
  {
    result = MEMORY[0x24953B288](&unk_2457BCD60, &type metadata for ClassificationXPCRequest.Request.ClassifyMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498208);
  }
  return result;
}

unint64_t sub_245750B94()
{
  unint64_t result;

  result = qword_257498210;
  if (!qword_257498210)
  {
    result = MEMORY[0x24953B288](&unk_2457BCC80, &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498210);
  }
  return result;
}

unint64_t sub_245750BD4()
{
  unint64_t result;

  result = qword_257498218;
  if (!qword_257498218)
  {
    result = MEMORY[0x24953B288](&unk_2457BCCA8, &type metadata for ClassificationXPCRequest.Request.ClassifyTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498218);
  }
  return result;
}

unint64_t sub_245750C14()
{
  unint64_t result;

  result = qword_257498220;
  if (!qword_257498220)
  {
    result = MEMORY[0x24953B288](&unk_2457BCBC8, &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498220);
  }
  return result;
}

unint64_t sub_245750C54()
{
  unint64_t result;

  result = qword_257498228;
  if (!qword_257498228)
  {
    result = MEMORY[0x24953B288](&unk_2457BCBF0, &type metadata for ClassificationXPCRequest.Request.ClassifyUserNotificationThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498228);
  }
  return result;
}

unint64_t sub_245750C94()
{
  unint64_t result;

  result = qword_257498230;
  if (!qword_257498230)
  {
    result = MEMORY[0x24953B288](&unk_2457BCB10, &type metadata for ClassificationXPCRequest.Request.TestTaskCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498230);
  }
  return result;
}

unint64_t sub_245750CD4()
{
  unint64_t result;

  result = qword_257498238;
  if (!qword_257498238)
  {
    result = MEMORY[0x24953B288](&unk_2457BCB38, &type metadata for ClassificationXPCRequest.Request.TestTaskCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498238);
  }
  return result;
}

unint64_t sub_245750D14()
{
  unint64_t result;

  result = qword_257498240;
  if (!qword_257498240)
  {
    result = MEMORY[0x24953B288](&unk_2457BD068, &type metadata for ClassificationXPCRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498240);
  }
  return result;
}

unint64_t sub_245750D54()
{
  unint64_t result;

  result = qword_257498248;
  if (!qword_257498248)
  {
    result = MEMORY[0x24953B288](&unk_2457BD090, &type metadata for ClassificationXPCRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498248);
  }
  return result;
}

uint64_t sub_245750D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ClassificationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_245750DD8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  if (result < a5)
  {
    __break(1u);
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if ((uint64_t)(a6 >> 1) < result || (uint64_t)(a6 >> 1) < a2)
    goto LABEL_10;
  if (a2 < a5)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if ((a2 & 0x8000000000000000) == 0)
    return swift_unknownObjectRetain();
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_245750E50()
{
  unint64_t result;

  result = qword_257498258;
  if (!qword_257498258)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257498258);
  }
  return result;
}

uint64_t sub_245750E8C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24574E14C(a1, a2);
  return a1;
}

unint64_t sub_245750EA0()
{
  unint64_t result;

  result = qword_257498270;
  if (!qword_257498270)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationXPCResult.Result, &type metadata for ClassificationXPCResult.Result);
    atomic_store(result, (unint64_t *)&qword_257498270);
  }
  return result;
}

unint64_t sub_245750EDC()
{
  unint64_t result;

  result = qword_257498278;
  if (!qword_257498278)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationXPCRequest.RequestInfo, &type metadata for ClassificationXPCRequest.RequestInfo);
    atomic_store(result, (unint64_t *)&qword_257498278);
  }
  return result;
}

uint64_t sub_245750F5C()
{
  return sub_2457BB530();
}

uint64_t sub_245750F88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_245750F98()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_245750FA0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_245750FAC()
{
  return sub_2457BB68C();
}

uint64_t sub_245750FC4()
{
  return sub_2457BB530();
}

uint64_t sub_245750FD0()
{
  return sub_2457BB3BC();
}

uint64_t sub_245750FF0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_245750FF8()
{
  return sub_2457BB5CC();
}

uint64_t sub_245751008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v1 - 256);
  *(_QWORD *)v3 = *(_QWORD *)(v2 - 152);
  *(_QWORD *)(v3 + 8) = a1;
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v2 - 112);
  return v3;
}

uint64_t sub_245751028@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)(a2 - 256) = result;
  return result;
}

uint64_t sub_245751034()
{
  return sub_2457BB5CC();
}

void sub_24575103C()
{
  void *v0;

}

uint64_t sub_245751044()
{
  return sub_2457BB5FC();
}

void sub_24575105C()
{
  JUMPOUT(0x24953B318);
}

void sub_245751068()
{
  void *v0;

}

void sub_245751070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 - 136);
  *(_QWORD *)(v1 - 128) = *(_QWORD *)(v1 - 176);
  *(_QWORD *)(v1 - 120) = v2;
  *(_QWORD *)(v1 - 112) = v0;
  *(_BYTE *)(v1 - 89) = 1;
}

void sub_24575108C(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

id sub_2457510A0(float a1)
{
  void *v1;
  float *v2;

  *v2 = a1;
  return v1;
}

uint64_t sub_2457510B4()
{
  return sub_2457BB3A4();
}

id sub_2457510D8()
{
  void *v0;

  return v0;
}

uint64_t sub_2457510E0()
{
  return sub_2457BB68C();
}

uint64_t sub_2457510F4()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_245751108()
{
  return sub_245750E50();
}

id sub_24575111C()
{
  return sub_2457BA500();
}

uint64_t sub_245751140@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_245751148()
{
  return swift_slowAlloc();
}

BOOL sub_245751158(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_245751168@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_245751198()
{
  return swift_arrayDestroy();
}

uint64_t sub_2457511A8()
{
  return swift_slowAlloc();
}

uint64_t sub_2457511B8()
{
  return 0x4974736575716572;
}

id sub_2457511D8()
{
  void *v0;

  return v0;
}

void sub_2457511E0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 176) = *(_QWORD *)(v0 + 8);
  *(_QWORD *)(v1 - 136) = *(_QWORD *)(v0 + 16);
}

void sub_2457511F4()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 152) = *(_QWORD *)(v0 - 96);
  *(_BYTE *)(v0 - 121) = 1;
}

uint64_t sub_245751208()
{
  return sub_2457BA9F0();
}

uint64_t sub_245751220()
{
  return swift_beginAccess();
}

uint64_t sub_245751238()
{
  return sub_2457BB68C();
}

void sub_245751270()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 120) = 1;
}

uint64_t sub_245751290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 224) + 8))(v0, v1);
}

uint64_t sub_2457512A4()
{
  return sub_2457BAA80();
}

uint64_t sub_2457512B0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_2457512B8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 256) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_2457512E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 144) + 8))(v1, v0);
}

uint64_t sub_2457512F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457512FC()
{
  return swift_willThrow();
}

uint64_t sub_245751308()
{
  return sub_2457BB6B0();
}

uint64_t sub_24575131C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245751324()
{
  uint64_t v0;

  return v0 - 128;
}

void sub_24575133C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

uint64_t sub_24575134C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

uint64_t sub_24575135C()
{
  return sub_2457BB584();
}

uint64_t sub_245751384()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24575139C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457513AC()
{
  return sub_2457BB644();
}

uint64_t sub_2457513BC()
{
  return swift_slowAlloc();
}

uint64_t sub_2457513C4(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = *(_QWORD *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t sub_2457513DC()
{
  return sub_2457BB764();
}

uint64_t sub_2457513E4()
{
  return swift_bridgeObjectRetain();
}

void sub_2457513EC(_QWORD *a1)
{
  uint64_t *v1;

  sub_24574DF54(a1, v1);
}

uint64_t sub_2457513F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457513FC()
{
  return sub_2457BB68C();
}

void sub_245751408(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_245751414()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245751420()
{
  return swift_bridgeObjectRelease();
}

void sub_245751430(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_24574B880(v2, a2);
}

uint64_t sub_245751458()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24575146C()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_245751474()
{
  return swift_bridgeObjectRelease();
}

void sub_245751488(char a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 112) = a1;
  *(_QWORD *)(v2 - 104) = v1;
  *(_BYTE *)(v2 - 89) = 1;
}

uint64_t sub_24575149C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457514A4()
{
  return swift_willThrow();
}

uint64_t sub_2457514AC()
{
  return sub_2457BB734();
}

void sub_2457514B8()
{
  JUMPOUT(0x24953B288);
}

uint64_t sub_2457514C4()
{
  return sub_2457BB728();
}

uint64_t sub_2457514D0()
{
  uint64_t *v0;

  return sub_245748A50(v0);
}

id sub_2457514D8()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

unint64_t sub_2457514E0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_245749280(v0, v1);
  return sub_24574B4F4();
}

uint64_t sub_2457514FC()
{
  return type metadata accessor for XPCValue();
}

uint64_t sub_245751504()
{
  return sub_2457BB08C();
}

uint64_t sub_24575150C()
{
  return type metadata accessor for ClassificationXPCRequest.Request(0);
}

uint64_t sub_245751514()
{
  return sub_2457BB350();
}

uint64_t static ClassificationXPCResult.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t ClassificationXPCResult.Error.hash(into:)()
{
  return sub_2457BB734();
}

void ClassificationXPCResult.Error.hashValue.getter()
{
  sub_2457BB728();
  sub_2457514AC();
  sub_2457BB764();
  sub_24575118C();
}

uint64_t sub_2457515A4(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 1684631414 && a2 == 0xE400000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x797469726F697270 && a2 == 0xEE00746C75736552)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2457516A4()
{
  sub_2457BB728();
  sub_2457BB734();
  return sub_2457BB764();
}

uint64_t sub_2457516E8(char a1)
{
  if ((a1 & 1) != 0)
    return 0x797469726F697270;
  else
    return 1684631414;
}

void sub_245751724()
{
  ClassificationXPCResult.Error.hashValue.getter();
}

uint64_t sub_245751738()
{
  return ClassificationXPCResult.Error.hash(into:)();
}

uint64_t sub_245751750()
{
  return sub_2457516A4();
}

uint64_t sub_245751758()
{
  char *v0;

  return sub_2457516E8(*v0);
}

uint64_t sub_245751760@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457515A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245751784()
{
  sub_245751A94();
  return sub_2457BB788();
}

uint64_t sub_2457517AC()
{
  sub_245751A94();
  return sub_2457BB794();
}

void sub_2457517D4()
{
  sub_2457BB728();
  sub_2457514AC();
  sub_2457BB764();
  sub_24575118C();
}

uint64_t sub_245751800()
{
  sub_245751AEC();
  return sub_2457BB788();
}

uint64_t sub_245751828()
{
  sub_245751AEC();
  return sub_2457BB794();
}

uint64_t sub_245751850()
{
  sub_245751B64();
  return sub_2457BB788();
}

uint64_t sub_245751878()
{
  sub_245751B64();
  return sub_2457BB794();
}

void ClassificationXPCResult.Result.encode(to:)(_QWORD *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17[144];
  _BYTE v18[144];
  _BYTE __dst[152];

  v2 = v1;
  v4 = sub_245748A50(&qword_257498288);
  v15 = *(_QWORD *)(v4 - 8);
  v16 = v4;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v5);
  sub_245749FF4();
  v8 = v7 - v6;
  v14 = sub_245748A50(&qword_257498290);
  v9 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  sub_245749FF4();
  v12 = v11 - v10;
  sub_245748A50(&qword_257498298);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v13);
  sub_2457535E8();
  sub_245751A80(v2, v18);
  sub_245749280(a1, a1[3]);
  sub_245751A94();
  sub_2457BB77C();
  sub_245751A80(v18, __dst);
  if (sub_245751AD0((uint64_t)__dst) == 1)
  {
    v17[0] = 0;
    sub_245751B64();
    sub_245753600();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v14);
    sub_2457535AC();
  }
  else
  {
    v17[0] = 1;
    sub_245751AEC();
    sub_245753600();
    sub_245753624(v17, __dst);
    sub_245751B28();
    sub_2457BB68C();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v8, v16);
    sub_2457535AC();
  }
  sub_245751240();
}

void *sub_245751A80(void *__src, void *__dst)
{
  return memcpy(__dst, __src, 0x8CuLL);
}

unint64_t sub_245751A94()
{
  unint64_t result;

  result = qword_2574982A0;
  if (!qword_2574982A0)
  {
    result = MEMORY[0x24953B288](&unk_2457BD8FC, &type metadata for ClassificationXPCResult.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574982A0);
  }
  return result;
}

uint64_t sub_245751AD0(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return ((_DWORD)v1 - 1) & ~(((int)v1 - 1) >> 31);
}

unint64_t sub_245751AEC()
{
  unint64_t result;

  result = qword_2574982A8;
  if (!qword_2574982A8)
  {
    result = MEMORY[0x24953B288](&unk_2457BD8AC, &type metadata for ClassificationXPCResult.Result.PriorityResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574982A8);
  }
  return result;
}

unint64_t sub_245751B28()
{
  unint64_t result;

  result = qword_2574982B0;
  if (!qword_2574982B0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for PriorityResult, &type metadata for PriorityResult);
    atomic_store(result, (unint64_t *)&qword_2574982B0);
  }
  return result;
}

unint64_t sub_245751B64()
{
  unint64_t result;

  result = qword_2574982B8;
  if (!qword_2574982B8)
  {
    result = MEMORY[0x24953B288](&unk_2457BD85C, &type metadata for ClassificationXPCResult.Result.VoidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574982B8);
  }
  return result;
}

void ClassificationXPCResult.Result.init(from:)(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v30[144];
  _BYTE v31[144];
  _BYTE __dst[152];
  _QWORD *v33;

  sub_245748A50(&qword_2574982C0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_245749FF4();
  v5 = sub_245748A50(&qword_2574982C8);
  v27 = *(_QWORD *)(v5 - 8);
  v28 = v5;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_245749FF4();
  v9 = v8 - v7;
  v10 = sub_245748A50(&qword_2574982D0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  sub_2457535E8();
  sub_245749280(a1, a1[3]);
  sub_245751A94();
  sub_2457BB770();
  if (v33)
    goto LABEL_10;
  v33 = a1;
  v12 = sub_2457BB5E4();
  v13 = *(_QWORD *)(v12 + 16);
  v14 = v10;
  if (!v13)
  {
    v19 = v2;
LABEL_8:
    v20 = sub_2457BB470();
    sub_2457535A0();
    v22 = v21;
    sub_245748A50(&qword_2574980B0);
    *v22 = &type metadata for ClassificationXPCResult.Result;
    sub_2457BB53C();
    sub_2457BB464();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x24BEE26D0], v20);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v19, v14);
    a1 = v33;
LABEL_10:
    v23 = (uint64_t)a1;
    goto LABEL_11;
  }
  v26 = *(_BYTE *)(v12 + 32);
  sub_245750D90(1, v13, v12, v12 + 32, 0, (2 * v13) | 1);
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  if (v16 != v18 >> 1)
  {
    v19 = v2;
    v14 = v10;
    goto LABEL_8;
  }
  if ((v26 & 1) != 0)
  {
    v31[0] = 1;
    sub_245751AEC();
    sub_245753588();
    sub_245752554();
    sub_2457BB5CC();
    sub_2457535C0();
    sub_245753610();
    sub_2457535D4();
    sub_245753624(v30, v31);
    nullsub_1(v30, v24);
    v25 = v30;
  }
  else
  {
    v30[0] = 0;
    sub_245751B64();
    sub_245753588();
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v9, v28);
    sub_245753610();
    sub_2457535D4();
    sub_245752590((uint64_t)v31);
    v25 = v31;
  }
  sub_245751A80(v25, __dst);
  sub_245751A80(__dst, a2);
  v23 = (uint64_t)v33;
LABEL_11:
  sub_245749564(v23);
  sub_245751240();
}

void sub_245751F18(_QWORD *a1@<X0>, void *a2@<X8>)
{
  ClassificationXPCResult.Result.init(from:)(a1, a2);
}

void sub_245751F2C(_QWORD *a1)
{
  ClassificationXPCResult.Result.encode(to:)(a1);
}

void *sub_245751F40@<X0>(void *a1@<X8>)
{
  _BYTE v3[144];
  _BYTE __dst[144];

  sub_245751FEC(v3);
  sub_245751A80(v3, __dst);
  return sub_245751A80(__dst, a1);
}

void sub_245751F90(void *a1)
{
  _BYTE v1[144];
  _BYTE __dst[144];

  sub_245751A80(a1, __dst);
  sub_245751A80(__dst, v1);
  sub_2457526CC((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_2457525C4);
  sub_245752058(v1);
}

void sub_245751FEC(void *a1@<X8>)
{
  uint64_t v1;
  void *v3;
  _BYTE __dst[144];

  v3 = (void *)(v1 + OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result);
  swift_beginAccess();
  sub_245751A80(v3, __dst);
  sub_245751A80(__dst, a1);
  sub_2457526CC((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_2457525C4);
}

void sub_245752058(void *a1)
{
  uint64_t v1;
  void *v2;
  _BYTE __dst[144];
  _BYTE v4[152];

  sub_245751A80(a1, __dst);
  v2 = (void *)(v1 + OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result);
  swift_beginAccess();
  sub_245751A80(v2, v4);
  sub_245751A80(__dst, v2);
  sub_2457526CC((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_245752728);
}

id ClassificationXPCResult.__allocating_init(result:)()
{
  void *v0;
  objc_class *v1;
  char *v2;
  objc_super v4;
  _BYTE __dst[144];

  v2 = (char *)sub_245753618();
  sub_245751A80(v0, __dst);
  sub_245751A80(__dst, &v2[OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result]);
  v4.receiver = v2;
  v4.super_class = v1;
  return objc_msgSendSuper2(&v4, sel_init);
}

id ClassificationXPCResult.init(result:)(void *a1)
{
  char *v1;
  objc_super v3;
  _BYTE __dst[144];

  sub_245751A80(a1, __dst);
  sub_245751A80(__dst, &v1[OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result]);
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for ClassificationXPCResult();
  return objc_msgSendSuper2(&v3, sel_init);
}

id ClassificationXPCResult.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  return ClassificationXPCResult.init(coder:)(v0);
}

id ClassificationXPCResult.init(coder:)(void *a1)
{
  void *v1;
  char *v3;
  id v4;
  objc_super v6;
  _BYTE __dst[152];
  _BYTE __src[144];

  v3 = v1;
  sub_24574D8CC();
  sub_245751A80(__src, __dst);
  sub_245751A80(__dst, &v3[OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result]);

  v6.receiver = v3;
  v6.super_class = (Class)type metadata accessor for XPCValue();
  v4 = objc_msgSendSuper2(&v6, sel_init);

  return v4;
}

uint64_t sub_245752288()
{
  uint64_t result;
  _BYTE v1[144];
  _BYTE __dst[144];
  _BYTE v3[144];

  sub_245751FEC(v1);
  sub_245751A80(v1, __dst);
  sub_245751A80(__dst, v3);
  result = sub_245751AD0((uint64_t)v3);
  if ((_DWORD)result != 1)
  {
    sub_2457526CC((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_245752728);
    sub_245752810();
    sub_2457535A0();
    return sub_2457512FC();
  }
  return result;
}

void *sub_245752308@<X0>(void *a1@<X8>)
{
  _BYTE v3[144];
  _BYTE __dst[144];
  _BYTE v5[144];

  sub_245751FEC(v3);
  sub_245751A80(v3, __dst);
  sub_245751A80(__dst, v5);
  if (sub_245751AD0((uint64_t)v5) != 1)
    return sub_245753624(a1, v5);
  sub_245752810();
  sub_2457535A0();
  return (void *)sub_2457512FC();
}

uint64_t sub_245752394()
{
  uint64_t v0;
  uint64_t v2;
  _BYTE __src[144];
  _BYTE __dst[144];

  sub_245751FEC(__src);
  sub_245751A80(__src, __dst);
  sub_245751A80(__dst, &v2);
  if (qword_257497EE0 != -1)
    swift_once();
  sub_24575354C();
  v0 = sub_2457BA9FC();
  sub_2457526CC((uint64_t)__dst, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_245752728);
  return v0;
}

id ClassificationXPCResult.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ClassificationXPCResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_2457524AC()
{
  uint64_t v0;
  _BYTE v1[144];

  sub_245751A80((void *)(v0 + OBJC_IVAR____TtC4Sage23ClassificationXPCResult_result), v1);
  sub_2457526CC((uint64_t)v1, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))sub_245752728);
}

id ClassificationXPCResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ClassificationXPCResult();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_245752554()
{
  unint64_t result;

  result = qword_2574982D8;
  if (!qword_2574982D8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for PriorityResult, &type metadata for PriorityResult);
    atomic_store(result, (unint64_t *)&qword_2574982D8);
  }
  return result;
}

double sub_245752590(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 2;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_DWORD *)(a1 + 136) = 0;
  return result;
}

void sub_2457525C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 2)
    sub_245752618(a2, a3);
}

uint64_t sub_245752618(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t type metadata accessor for ClassificationXPCResult()
{
  return objc_opt_self();
}

void sub_2457526CC(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _DWORD))
{
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_DWORD *)(a1 + 136));
  sub_24575118C();
}

void sub_245752728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 != 2)
    sub_24575277C(a2, a3);
}

uint64_t sub_24575277C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_245752810()
{
  unint64_t result;

  result = qword_2574982E8;
  if (!qword_2574982E8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationXPCResult.Error, &type metadata for ClassificationXPCResult.Error);
    atomic_store(result, (unint64_t *)&qword_2574982E8);
  }
  return result;
}

unint64_t sub_245752850()
{
  unint64_t result;

  result = qword_2574982F0;
  if (!qword_2574982F0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationXPCResult.Error, &type metadata for ClassificationXPCResult.Error);
    atomic_store(result, (unint64_t *)&qword_2574982F0);
  }
  return result;
}

uint64_t method lookup function for ClassificationXPCResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClassificationXPCResult.result.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of ClassificationXPCResult.__allocating_init(result:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ClassificationXPCResult.toVoid()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of ClassificationXPCResult.toPriorityResult()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

ValueMetadata *type metadata accessor for ClassificationXPCResult.Error()
{
  return &type metadata for ClassificationXPCResult.Error;
}

unint64_t destroy for ClassificationXPCResult.Result(uint64_t a1)
{
  unint64_t result;
  int v2;

  result = *(_QWORD *)(a1 + 16);
  v2 = -1;
  if (result < 0xFFFFFFFF)
    v2 = result;
  if (v2 - 1 <= 0 && result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for ClassificationXPCResult.Result(char *__dst, _QWORD *__src)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = __src[2];
  LODWORD(v5) = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = __src[2];
  if ((int)v5 - 1 <= 0)
  {
    *(_DWORD *)__dst = *(_DWORD *)__src;
    __dst[4] = *((_BYTE *)__src + 4);
    if (v4 == 1)
    {
      memcpy(__dst + 8, __src + 1, 0x80uLL);
    }
    else
    {
      *((_QWORD *)__dst + 1) = __src[1];
      *((_QWORD *)__dst + 2) = v4;
      v6 = __src[4];
      *((_QWORD *)__dst + 3) = __src[3];
      *((_QWORD *)__dst + 4) = v6;
      v7 = __src[6];
      *((_QWORD *)__dst + 5) = __src[5];
      *((_QWORD *)__dst + 6) = v7;
      v8 = __src[8];
      *((_QWORD *)__dst + 7) = __src[7];
      *((_QWORD *)__dst + 8) = v8;
      v9 = __src[10];
      *((_QWORD *)__dst + 9) = __src[9];
      *((_QWORD *)__dst + 10) = v9;
      v10 = __src[12];
      *((_QWORD *)__dst + 11) = __src[11];
      *((_QWORD *)__dst + 12) = v10;
      v11 = __src[14];
      *((_QWORD *)__dst + 13) = __src[13];
      *((_QWORD *)__dst + 14) = v11;
      v12 = __src[16];
      *((_QWORD *)__dst + 15) = __src[15];
      *((_QWORD *)__dst + 16) = v12;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((_DWORD *)__dst + 34) = *((_DWORD *)__src + 34);
  }
  else
  {
    memcpy(__dst, __src, 0x8CuLL);
  }
  return __dst;
}

_QWORD *assignWithCopy for ClassificationXPCResult.Result(_QWORD *__dst, _QWORD *__src)
{
  char *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  char *v9;
  int v10;
  uint64_t v11;

  v4 = (char *)(__dst + 1);
  v5 = __dst[2];
  LODWORD(v6) = -1;
  if (v5 >= 0xFFFFFFFF)
    LODWORD(v7) = -1;
  else
    v7 = __dst[2];
  v8 = v7 - 1;
  v9 = (char *)(__src + 1);
  if (__src[2] < 0xFFFFFFFFuLL)
    v6 = __src[2];
  v10 = v6 - 1;
  if (v8 <= 0)
  {
    if (v10 > 0)
    {
      if (v5 != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_13;
    }
    *(_DWORD *)__dst = *(_DWORD *)__src;
    *((_BYTE *)__dst + 4) = *((_BYTE *)__src + 4);
    v11 = __src[2];
    if (v5 == 1)
    {
      if (v11 != 1)
      {
        __dst[1] = __src[1];
        __dst[2] = __src[2];
        __dst[3] = __src[3];
        __dst[4] = __src[4];
        __dst[5] = __src[5];
        __dst[6] = __src[6];
        __dst[7] = __src[7];
        __dst[8] = __src[8];
        __dst[9] = __src[9];
        __dst[10] = __src[10];
        __dst[11] = __src[11];
        __dst[12] = __src[12];
        __dst[13] = __src[13];
        __dst[14] = __src[14];
        __dst[15] = __src[15];
        __dst[16] = __src[16];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_23:
        *((_DWORD *)__dst + 34) = *((_DWORD *)__src + 34);
        return __dst;
      }
    }
    else
    {
      if (v11 != 1)
      {
        __dst[1] = __src[1];
        __dst[2] = __src[2];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[3] = __src[3];
        __dst[4] = __src[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[5] = __src[5];
        __dst[6] = __src[6];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[7] = __src[7];
        __dst[8] = __src[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[9] = __src[9];
        __dst[10] = __src[10];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[11] = __src[11];
        __dst[12] = __src[12];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[13] = __src[13];
        __dst[14] = __src[14];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        __dst[15] = __src[15];
        __dst[16] = __src[16];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_23;
      }
      sub_245752EBC((uint64_t)(__dst + 1));
    }
    memcpy(v4, v9, 0x80uLL);
    goto LABEL_23;
  }
  if (v10 > 0)
  {
LABEL_13:
    memcpy(__dst, __src, 0x8CuLL);
    return __dst;
  }
  *(_DWORD *)__dst = *(_DWORD *)__src;
  *((_BYTE *)__dst + 4) = *((_BYTE *)__src + 4);
  if (__src[2] == 1)
  {
    memcpy(__dst + 1, __src + 1, 0x80uLL);
  }
  else
  {
    __dst[1] = __src[1];
    __dst[2] = __src[2];
    __dst[3] = __src[3];
    __dst[4] = __src[4];
    __dst[5] = __src[5];
    __dst[6] = __src[6];
    __dst[7] = __src[7];
    __dst[8] = __src[8];
    __dst[9] = __src[9];
    __dst[10] = __src[10];
    __dst[11] = __src[11];
    __dst[12] = __src[12];
    __dst[13] = __src[13];
    __dst[14] = __src[14];
    __dst[15] = __src[15];
    __dst[16] = __src[16];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *((_DWORD *)__dst + 34) = *((_DWORD *)__src + 34);
  return __dst;
}

uint64_t sub_245752EBC(uint64_t a1)
{
  destroy for InferenceEnvironmentInfo();
  return a1;
}

void *initializeWithTake for PriorityResult(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x8CuLL);
}

_QWORD *assignWithTake for ClassificationXPCResult.Result(_QWORD *__dst, _QWORD *__src)
{
  unint64_t v4;
  int v5;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v4 = __dst[2];
  v5 = -1;
  if (v4 < 0xFFFFFFFF)
    v5 = v4;
  if (v5 - 1 > 0)
    goto LABEL_4;
  v7 = __src[2];
  LODWORD(v8) = -1;
  if (v7 < 0xFFFFFFFF)
    v8 = __src[2];
  if ((int)v8 - 1 <= 0)
  {
    *(_DWORD *)__dst = *(_DWORD *)__src;
    *((_BYTE *)__dst + 4) = *((_BYTE *)__src + 4);
    if (v4 != 1)
    {
      if (v7 != 1)
      {
        __dst[1] = __src[1];
        __dst[2] = v7;
        swift_bridgeObjectRelease();
        v9 = __src[4];
        __dst[3] = __src[3];
        __dst[4] = v9;
        swift_bridgeObjectRelease();
        v10 = __src[6];
        __dst[5] = __src[5];
        __dst[6] = v10;
        swift_bridgeObjectRelease();
        v11 = __src[8];
        __dst[7] = __src[7];
        __dst[8] = v11;
        swift_bridgeObjectRelease();
        v12 = __src[10];
        __dst[9] = __src[9];
        __dst[10] = v12;
        swift_bridgeObjectRelease();
        v13 = __src[12];
        __dst[11] = __src[11];
        __dst[12] = v13;
        swift_bridgeObjectRelease();
        v14 = __src[14];
        __dst[13] = __src[13];
        __dst[14] = v14;
        swift_bridgeObjectRelease();
        v15 = __src[16];
        __dst[15] = __src[15];
        __dst[16] = v15;
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
      sub_245752EBC((uint64_t)(__dst + 1));
    }
    memcpy(__dst + 1, __src + 1, 0x80uLL);
LABEL_16:
    *((_DWORD *)__dst + 34) = *((_DWORD *)__src + 34);
    return __dst;
  }
  if (v4 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
LABEL_4:
  memcpy(__dst, __src, 0x8CuLL);
  return __dst;
}

uint64_t getEnumTagSinglePayload for ClassificationXPCResult.Result(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;
  BOOL v5;
  int v6;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFD && *(_BYTE *)(a1 + 140))
    return (*(_DWORD *)a1 + 2147483645);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  v5 = __OFSUB__(v4, 1);
  v6 = v4 - 1;
  if (v6 < 0 != v5)
    v6 = -1;
  if ((v6 + 1) >= 2)
    return v6;
  else
    return 0;
}

void storeEnumTagSinglePayload for ClassificationXPCResult.Result(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v5;

  if (a2 >= 0x7FFFFFFD)
  {
    v5 = a2 - 2147483645;
    bzero(a1, 0x8CuLL);
    *a1 = v5;
    if (a3 >= 0x7FFFFFFD)
      *((_BYTE *)a1 + 140) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFD)
      *((_BYTE *)a1 + 140) = 0;
    if (a2)
      *((_QWORD *)a1 + 2) = a2 + 2;
  }
}

double sub_245753168(uint64_t a1, unsigned int a2)
{
  double result;

  if (a2 > 0x7FFFFFFD)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_DWORD *)(a1 + 136) = 0;
    *(_QWORD *)a1 = a2 - 2147483646;
  }
  else if (a2)
  {
    *(_QWORD *)(a1 + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCResult.Result()
{
  return &type metadata for ClassificationXPCResult.Result;
}

uint64_t storeEnumTagSinglePayload for ClassificationXPCResult.Result.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_245753220 + 4 * byte_2457BD515[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_245753254 + 4 * byte_2457BD510[v4]))();
}

uint64_t sub_245753254(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24575325C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245753264);
  return result;
}

uint64_t sub_245753270(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245753278);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24575327C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245753284(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCResult.Result.CodingKeys()
{
  return &type metadata for ClassificationXPCResult.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for ClassificationXPCResult.Result.VoidCodingKeys()
{
  return &type metadata for ClassificationXPCResult.Result.VoidCodingKeys;
}

uint64_t _s4Sage23ClassificationXPCResultC5ErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2457532F0 + 4 * byte_2457BD51A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_245753310 + 4 * byte_2457BD51F[v4]))();
}

_BYTE *sub_2457532F0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_245753310(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245753318(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245753320(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245753328(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245753330(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ClassificationXPCResult.Result.PriorityResultCodingKeys()
{
  return &type metadata for ClassificationXPCResult.Result.PriorityResultCodingKeys;
}

unint64_t sub_245753350()
{
  unint64_t result;

  result = qword_2574982F8;
  if (!qword_2574982F8)
  {
    result = MEMORY[0x24953B288](&unk_2457BD72C, &type metadata for ClassificationXPCResult.Result.PriorityResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574982F8);
  }
  return result;
}

unint64_t sub_245753390()
{
  unint64_t result;

  result = qword_257498300;
  if (!qword_257498300)
  {
    result = MEMORY[0x24953B288](&unk_2457BD834, &type metadata for ClassificationXPCResult.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498300);
  }
  return result;
}

unint64_t sub_2457533D0()
{
  unint64_t result;

  result = qword_257498308;
  if (!qword_257498308)
  {
    result = MEMORY[0x24953B288](&unk_2457BD754, &type metadata for ClassificationXPCResult.Result.VoidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498308);
  }
  return result;
}

unint64_t sub_245753410()
{
  unint64_t result;

  result = qword_257498310;
  if (!qword_257498310)
  {
    result = MEMORY[0x24953B288](&unk_2457BD77C, &type metadata for ClassificationXPCResult.Result.VoidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498310);
  }
  return result;
}

unint64_t sub_245753450()
{
  unint64_t result;

  result = qword_257498318;
  if (!qword_257498318)
  {
    result = MEMORY[0x24953B288](&unk_2457BD69C, &type metadata for ClassificationXPCResult.Result.PriorityResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498318);
  }
  return result;
}

unint64_t sub_245753490()
{
  unint64_t result;

  result = qword_257498320;
  if (!qword_257498320)
  {
    result = MEMORY[0x24953B288](&unk_2457BD6C4, &type metadata for ClassificationXPCResult.Result.PriorityResultCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498320);
  }
  return result;
}

unint64_t sub_2457534D0()
{
  unint64_t result;

  result = qword_257498328;
  if (!qword_257498328)
  {
    result = MEMORY[0x24953B288](&unk_2457BD7A4, &type metadata for ClassificationXPCResult.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498328);
  }
  return result;
}

unint64_t sub_245753510()
{
  unint64_t result;

  result = qword_257498330;
  if (!qword_257498330)
  {
    result = MEMORY[0x24953B288](&unk_2457BD7CC, &type metadata for ClassificationXPCResult.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498330);
  }
  return result;
}

unint64_t sub_24575354C()
{
  unint64_t result;

  result = qword_257498338;
  if (!qword_257498338)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationXPCResult.Result, &type metadata for ClassificationXPCResult.Result);
    atomic_store(result, (unint64_t *)&qword_257498338);
  }
  return result;
}

uint64_t sub_245753588()
{
  return sub_2457BB530();
}

uint64_t sub_2457535A0()
{
  return swift_allocError();
}

uint64_t sub_2457535AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 32) + 8))(v2, v1);
}

uint64_t sub_2457535C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 48) + 8))(v2, v1);
}

uint64_t sub_2457535D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 16) + 8))(v2, v1);
}

uint64_t sub_245753600()
{
  return sub_2457BB5FC();
}

uint64_t sub_245753610()
{
  return swift_unknownObjectRelease();
}

id sub_245753618()
{
  objc_class *v0;

  return objc_allocWithZone(v0);
}

void *sub_245753624(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x8CuLL);
}

void ClassificationClient.UseCase.identifier.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_245756EF8();
  sub_245756F90();
  __asm { BR              X9 }
}

uint64_t sub_2457536A8()
{
  uint64_t v1;

  sub_2457BB1D0();
  swift_bridgeObjectRelease();
  return v1;
}

void sub_245753728()
{
  JUMPOUT(0x2457536F8);
}

void sub_245753740()
{
  JUMPOUT(0x2457536F8);
}

void *sub_245753764()
{
  qword_257498340 = (uint64_t)&unk_2574B5518;
  return &unk_2574B5518;
}

id static ClassificationXPCService.interface.getter()
{
  if (qword_257497E08 != -1)
    swift_once();
  sub_245756E1C();
  return (id)qword_257498340;
}

void static ClassificationXPCService.interface.setter(uint64_t a1)
{
  void *v2;

  if (qword_257497E08 != -1)
    swift_once();
  sub_245756E1C();
  v2 = (void *)qword_257498340;
  qword_257498340 = a1;

  sub_2457512D4();
}

void static ClassificationXPCService.interface.modify()
{
  if (qword_257497E08 != -1)
    swift_once();
  sub_245756E1C();
  sub_245748A90();
}

uint64_t static ClassificationXPCService.serviceName.getter()
{
  return sub_245756FC4((uint64_t *)&unk_257498348);
}

void static ClassificationXPCService.serviceName.setter(uint64_t a1, uint64_t a2)
{
  sub_245756FBC(a1, a2, qword_257498348);
}

void static ClassificationXPCService.serviceName.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

uint64_t static ClassificationXPCService.entitlementName.getter()
{
  return sub_245756FC4((uint64_t *)&unk_257498358);
}

uint64_t sub_245753908(uint64_t *a1)
{
  uint64_t v2;

  sub_245756E1C();
  v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

void static ClassificationXPCService.entitlementName.setter(uint64_t a1, uint64_t a2)
{
  sub_245756FBC(a1, a2, qword_257498358);
}

void sub_245753960(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  sub_245756E1C();
  *a3 = a1;
  *a4 = a2;
  swift_bridgeObjectRelease();
  sub_245756F1C();
}

void static ClassificationXPCService.entitlementName.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void sub_2457539E4()
{
  qword_257498368 = MEMORY[0x24BEE4AF8];
}

uint64_t static ClassificationXPCService.selectorClasses.getter()
{
  if (qword_257497E10 != -1)
    swift_once();
  sub_245756E1C();
  return swift_bridgeObjectRetain();
}

void static ClassificationXPCService.selectorClasses.setter(uint64_t a1)
{
  if (qword_257497E10 != -1)
    swift_once();
  sub_245756E1C();
  qword_257498368 = a1;
  swift_bridgeObjectRelease();
  sub_2457512D4();
}

void static ClassificationXPCService.selectorClasses.modify()
{
  if (qword_257497E10 != -1)
    swift_once();
  sub_245756E1C();
  sub_245748A90();
}

uint64_t sub_245753B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2457BB08C();
  sub_245756D18(v0, qword_257498370);
  v1 = sub_24574E0F8(v0, (uint64_t)qword_257498370);
  if (qword_257497E40 != -1)
    swift_once();
  v2 = sub_24574E0F8(v0, (uint64_t)qword_257498E48);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void static ClassificationXPCService.logger.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_257497E18 != -1)
    swift_once();
  v2 = sub_245751504();
  v3 = sub_24574E0F8(v2, (uint64_t)qword_257498370);
  sub_245756E1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  sub_245756F1C();
}

void static ClassificationXPCService.logger.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_257497E18 != -1)
    swift_once();
  v2 = sub_245751504();
  v3 = sub_24574E0F8(v2, (uint64_t)qword_257498370);
  sub_245756E1C();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  sub_245756F1C();
}

void static ClassificationXPCService.logger.modify()
{
  uint64_t v0;

  if (qword_257497E18 != -1)
    swift_once();
  v0 = sub_245751504();
  sub_24574E0F8(v0, (uint64_t)qword_257498370);
  sub_245756E1C();
  sub_245748A90();
}

void ClassificationClient.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  ClassificationClient.init()(v0, v1);
  sub_245748A90();
}

uint64_t ClassificationClient.init()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = 0;
  sub_2457567FC(&qword_2574977D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ClassificationClient, (uint64_t)&protocol conformance descriptor for ClassificationClient);
  sub_245748A50(qword_257497748);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v2 + 16) = sub_2457BAE88();
  swift_release();
  return v2;
}

uint64_t ClassificationClient.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t ClassificationClient.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_245753E5C()
{
  type metadata accessor for ClassificationClient();
  return sub_2457BAEA0();
}

uint64_t sub_245753E9C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x24953B288](&unk_2457BD9D8, a1);
  return nullsub_1(a1, v2);
}

Swift::Void __swiftcall ClassificationClient.prewarm(for:requestIdentifier:)(Sage::ClassificationClient::UseCase a1, Swift::String requestIdentifier)
{
  void *object;
  uint64_t countAndFlagsBits;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  void *v14;
  void *v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;

  object = requestIdentifier._object;
  countAndFlagsBits = requestIdentifier._countAndFlagsBits;
  v4 = (_BYTE *)a1;
  v5 = type metadata accessor for ClassificationXPCRequest.Request(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOBYTE(v17) = *v4;
  swift_bridgeObjectRetain();
  ClassificationClient.UseCase.identifier.getter();
  v9 = v8;
  v11 = v10;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v17 = countAndFlagsBits;
  *((_QWORD *)&v17 + 1) = object;
  v18 = v9;
  v19 = v11;
  v12 = objc_allocWithZone((Class)type metadata accessor for ClassificationXPCRequest(0));
  v13 = ClassificationXPCRequest.init(request:requestInfo:)((uint64_t)v7, &v17);
  sub_245754118(v13);
  v15 = v14;

}

void sub_245754118(void *a1)
{
  _QWORD *v1;
  void *v2;
  void *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void *v27;
  char *v28;
  id v29;
  char *v30;
  id v31;
  NSObject *v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  id v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  NSObject *v52;
  os_log_type_t v53;
  uint8_t *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  void *v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;

  v3 = v2;
  v4 = v1;
  v6 = type metadata accessor for ClassificationXPCRequest.Request(0);
  MEMORY[0x24BDAC7A8](v6);
  v63 = (uint64_t)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257497E40 != -1)
    swift_once();
  v8 = sub_2457BB08C();
  v9 = sub_24574E0F8(v8, (uint64_t)qword_257498E48);
  v10 = a1;
  v11 = sub_2457BB068();
  v12 = sub_2457BB368();
  if (os_log_type_enabled(v11, v12))
  {
    v60 = v4;
    v61 = v2;
    v62 = v9;
    v13 = swift_slowAlloc();
    v59 = swift_slowAlloc();
    v69 = v59;
    *(_DWORD *)v13 = 136315650;
    sub_24574CD8C(&v65);
    v14 = v65;
    v15 = v66;
    swift_bridgeObjectRelease();
    v65 = sub_245773478(v14, v15, &v69);
    sub_2457BB3BC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    sub_24574CD8C(&v65);
    v16 = v67;
    v17 = v68;
    swift_bridgeObjectRelease();
    v65 = sub_245773478(v16, v17, &v69);
    sub_2457BB3BC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 22) = 2080;
    v18 = &v10[OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request];
    swift_beginAccess();
    v19 = (uint64_t)v18;
    v20 = v63;
    sub_245756B70(v19, v63, type metadata accessor for ClassificationXPCRequest.Request);
    ClassificationXPCRequest.Request.category.getter();
    sub_245756BB0(v20);
    v21 = 0x6966697373616C63;
    v22 = 0xEE006E6F69746163;
    if (v65 != 1)
    {
      v21 = 1953719668;
      v22 = 0xE400000000000000;
    }
    if ((_BYTE)v65)
      v23 = v21;
    else
      v23 = 0x6D726177657270;
    if ((_BYTE)v65)
      v24 = v22;
    else
      v24 = 0xE700000000000000;
    v65 = sub_245773478(v23, v24, &v69);
    sub_2457BB3BC();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_245746000, v11, v12, "ClassificationClient sending synchronous request with requestIdentifier=%s, useCaseIdentifier=%s, category=%s", (uint8_t *)v13, 0x20u);
    v25 = v59;
    swift_arrayDestroy();
    MEMORY[0x24953B318](v25, -1, -1);
    MEMORY[0x24953B318](v13, -1, -1);

    v3 = v61;
    v4 = v60;
  }
  else
  {

  }
  if (v4[2])
  {
    MEMORY[0x24BDAC7A8](v26);
    *(&v58 - 2) = (uint64_t)v10;
    type metadata accessor for ClassificationXPCResult();
    swift_retain();
    v27 = v3;
    sub_2457BAE70();
    if (v3)
    {
      swift_release();
      v28 = v10;
      v29 = v3;
      v30 = v28;
      v31 = v3;
      v32 = sub_2457BB068();
      v33 = sub_2457BB350();
      if (os_log_type_enabled(v32, (os_log_type_t)v33))
      {
        LODWORD(v61) = v33;
        v34 = swift_slowAlloc();
        v60 = (_QWORD *)swift_slowAlloc();
        v62 = swift_slowAlloc();
        v69 = v62;
        *(_DWORD *)v34 = 136315906;
        sub_24574CD8C(&v65);
        v35 = v65;
        v36 = v66;
        swift_bridgeObjectRelease();
        v65 = sub_245773478(v35, v36, &v69);
        sub_2457BB3BC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 12) = 2080;
        sub_24574CD8C(&v65);
        v37 = v67;
        v38 = v68;
        swift_bridgeObjectRelease();
        v65 = sub_245773478(v37, v38, &v69);
        sub_2457BB3BC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 22) = 2080;
        v39 = &v30[OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request];
        swift_beginAccess();
        v40 = (uint64_t)v39;
        v41 = v63;
        sub_245756B70(v40, v63, type metadata accessor for ClassificationXPCRequest.Request);
        ClassificationXPCRequest.Request.category.getter();
        sub_245756BB0(v41);
        v42 = 0x6966697373616C63;
        v43 = 0xEE006E6F69746163;
        if (v64 != 1)
        {
          v42 = 1953719668;
          v43 = 0xE400000000000000;
        }
        if ((_BYTE)v64)
          v44 = v42;
        else
          v44 = 0x6D726177657270;
        if ((_BYTE)v64)
          v45 = v43;
        else
          v45 = 0xE700000000000000;
        v64 = sub_245773478(v44, v45, &v69);
        sub_2457BB3BC();

        swift_bridgeObjectRelease();
        *(_WORD *)(v34 + 32) = 2112;
        v46 = v27;
        v47 = _swift_stdlib_bridgeErrorToNSError();
        v64 = v47;
        sub_2457BB3BC();
        v48 = v60;
        *v60 = v47;

        _os_log_impl(&dword_245746000, v32, (os_log_type_t)v61, "ClassificationClient request with requestIdentifier=%s, useCaseIdentifier=%s, category=%s failed with error: %@", (uint8_t *)v34, 0x2Au);
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        swift_arrayDestroy();
        MEMORY[0x24953B318](v48, -1, -1);
        v49 = v62;
        swift_arrayDestroy();
        MEMORY[0x24953B318](v49, -1, -1);
        MEMORY[0x24953B318](v34, -1, -1);
      }
      else
      {

      }
      swift_willThrow();
    }
    else
    {
      swift_release();
      v50 = v65;
      v51 = v10;
      v52 = sub_2457BB068();
      v53 = sub_2457BB368();
      if (os_log_type_enabled(v52, v53))
      {
        v54 = (uint8_t *)swift_slowAlloc();
        v55 = swift_slowAlloc();
        v69 = v55;
        v63 = v50;
        *(_DWORD *)v54 = 136315138;
        v62 = (uint64_t)(v54 + 4);
        sub_24574CD8C(&v65);
        v57 = v65;
        v56 = v66;
        swift_bridgeObjectRelease();
        v65 = sub_245773478(v57, v56, &v69);
        sub_2457BB3BC();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_245746000, v52, v53, "ClassificationClient received response for synchronous request with requestIdentifier=%s", v54, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x24953B318](v55, -1, -1);
        MEMORY[0x24953B318](v54, -1, -1);

      }
      else
      {

      }
    }
  }
  else
  {
    __break(1u);
  }
}

unint64_t ClassificationClient.PrewarmCategory.identifier.getter()
{
  sub_2457BB440();
  sub_245756F90();
  return 0xD00000000000001ELL;
}

uint64_t ClassificationClient.PrewarmCategory.rawValue.getter()
{
  return 0x6C6172656E6567;
}

void ClassificationClient.PrewarmCategory.init(rawValue:)(BOOL *a1@<X8>)
{
  uint64_t v1;

  sub_2457BB524();
  sub_245757014();
  *a1 = v1 != 0;
  sub_245749FB4();
}

void sub_245754A54(BOOL *a1@<X8>)
{
  ClassificationClient.PrewarmCategory.init(rawValue:)(a1);
}

void sub_245754A60(_QWORD *a1@<X8>)
{
  *a1 = 0x6C6172656E6567;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_245754A7C()
{
  sub_245756A74();
  return sub_2457BB200();
}

uint64_t sub_245754AD8()
{
  sub_245756A74();
  return sub_2457BB1E8();
}

uint64_t ClassificationClient.prewarm(category:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  Swift::String v5;
  char v7;

  v0 = sub_2457BAAD4();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v7 = 0;
  sub_2457BAAC8();
  v2 = sub_2457BAAA4();
  v4 = v3;
  sub_245757068(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  v5._countAndFlagsBits = v2;
  v5._object = v4;
  ClassificationClient.prewarm(for:requestIdentifier:)((Sage::ClassificationClient::UseCase)&v7, v5);
  return swift_bridgeObjectRelease();
}

uint64_t ClassificationClient.classifyPriority(_:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 40) = sub_245756EBC(a1, a2);
  v3 = sub_245756DC0();
  sub_245756E6C(v3);
  sub_245756E10();
  return sub_245756E04();
}

{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 40) = sub_245756EBC(a1, a2);
  v3 = sub_245756DC0();
  sub_245756E6C(v3);
  sub_245756E10();
  return sub_245756E04();
}

{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 40) = sub_245756EBC(a1, a2);
  v3 = sub_245756DC0();
  sub_245756E6C(v3);
  sub_245756E10();
  return sub_245756E04();
}

#error "245754C7C: call analysis failed (funcsize=40)"

uint64_t sub_245754CB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_245756D90();
  if (!v1)
    *(_QWORD *)(v2 + 104) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_245754CFC()
{
  void *v0;
  void *v1;
  uint64_t v2;

  sub_245756FFC();

  swift_task_dealloc();
  return sub_245756E54(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_245754D44()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_245754D78(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[17] = a1;
  v2[18] = v1;
  type metadata accessor for ClassificationXPCRequest.Request(0);
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_245754DD0()
{
  _QWORD *v0;
  void *v1;
  id *v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unsigned __int16 v29;
  unint64_t v30;
  uint64_t v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v52;
  os_log_type_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;

  if (qword_257497E40 != -1)
    swift_once();
  v2 = (id *)(v0 + 17);
  v1 = (void *)v0[17];
  v3 = sub_245751504();
  v0[20] = sub_24574E0F8(v3, (uint64_t)qword_257498E48);
  v4 = v1;
  v5 = sub_2457BB068();
  v6 = sub_2457BB368();
  if (sub_245757038(v6))
  {
    v53 = v6;
    v7 = v0[19];
    v8 = (void *)v0[17];
    v9 = sub_2457513BC();
    v52 = sub_2457513BC();
    v54 = v52;
    *(_DWORD *)v9 = 136315650;
    sub_245757028(v52, v10, v11, v12, v13, v14, v15);
    swift_bridgeObjectRelease();
    v0[13] = sub_245773478(v55, v56, &v54);
    sub_2457BB3BC();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 12) = 2080;
    sub_245757028(v16, v17, v18, v19, v20, v21, v22);
    v23 = v57;
    v24 = v58;
    swift_bridgeObjectRelease();
    v0[14] = sub_245773478(v23, v24, &v54);
    sub_2457BB3BC();
    swift_bridgeObjectRelease();

    *(_WORD *)(v9 + 22) = 2080;
    v25 = (uint64_t)v8 + OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request;
    sub_245756E1C();
    sub_245756B70(v25, v7, type metadata accessor for ClassificationXPCRequest.Request);
    ClassificationXPCRequest.Request.category.getter();
    sub_245756BB0(v7);
    sub_245756F5C();
    v30 = v29 | 0xEE006E6F69740000;
    v31 = 0x6966697373616C63;
    if (!v32)
    {
      v31 = 1953719668;
      v30 = 0xE400000000000000;
    }
    if (v26)
      v33 = v31;
    else
      v33 = v28;
    if (v26)
      v34 = v30;
    else
      v34 = v27;
    v35 = *v2;
    v0[16] = sub_245773478(v33, v34, &v54);
    sub_2457BB3BC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_245746000, v5, v53, "ClassificationClient sending request with requestIdentifier=%s, useCaseIdentifier=%s, category=%s", (uint8_t *)v9, 0x20u);
    swift_arrayDestroy();
    sub_24575105C();
  }
  v36 = *v2;

  v37 = v0[17];
  v38 = v0[18];
  sub_245757028(v39, v40, v41, v42, v43, v44, v45);
  v46 = v55;
  v47 = v56;
  v0[21] = v56;
  swift_bridgeObjectRelease();
  v48 = sub_245757030();
  v0[22] = v48;
  *(_QWORD *)(v48 + 16) = v38;
  *(_QWORD *)(v48 + 24) = v37;
  v49 = (_QWORD *)swift_task_alloc();
  v0[23] = v49;
  v49[2] = v38;
  v49[3] = v46;
  v49[4] = v47;
  v50 = (_QWORD *)swift_task_alloc();
  v0[24] = v50;
  type metadata accessor for ClassificationXPCResult();
  *v50 = v0;
  v50[1] = sub_245755164;
  return sub_2457BB6BC();
}

uint64_t sub_245755164()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    sub_245756FCC();
    sub_245757044();
  }
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_2457551D4()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  NSObject *v3;
  os_log_type_t v4;
  void *v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  uint64_t v11;
  _QWORD v12[3];

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(id *)(v0 + 136);
  v3 = sub_2457BB068();
  v4 = sub_2457BB368();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = *(void **)(v0 + 136);
    v6 = (uint8_t *)sub_2457513BC();
    v11 = sub_2457513BC();
    *(_DWORD *)v6 = 136315138;
    sub_24574CD8C(v12);
    v8 = v12[0];
    v7 = v12[1];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 96) = sub_245773478(v8, v7, &v11);
    sub_2457BB3BC();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_245746000, v3, v4, "ClassificationClient received response from request with requestIdentifier=%s", v6, 0xCu);
    sub_245757020();
    sub_24575105C();
  }
  v9 = *(void **)(v0 + 136);

  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_24575534C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  id v3;
  id v4;
  id v5;
  id v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int16 v20;
  unint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  void *v27;
  id v28;
  uint64_t v29;
  void *v30;
  _QWORD *v32;
  uint64_t v33;
  _QWORD v34[5];

  v1 = *(void **)(v0 + 200);
  v2 = *(void **)(v0 + 136);
  swift_bridgeObjectRelease();
  sub_245757044();
  swift_task_dealloc();
  v3 = v2;
  v4 = v1;
  v5 = v3;
  v6 = v1;
  v7 = sub_2457BB068();
  v8 = sub_2457BB350();
  if (sub_245757038(v8))
  {
    v9 = *(_QWORD *)(v0 + 152);
    v10 = *(void **)(v0 + 136);
    v11 = sub_2457513BC();
    v32 = (_QWORD *)sub_2457513BC();
    v33 = sub_2457513BC();
    *(_DWORD *)v11 = 136315906;
    sub_24574CD8C(v34);
    v13 = v34[0];
    v12 = v34[1];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 72) = sub_245773478(v13, v12, &v33);
    sub_2457BB3BC();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 12) = 2080;
    sub_24574CD8C(v34);
    v14 = v34[2];
    v15 = v34[3];
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 64) = sub_245773478(v14, v15, &v33);
    sub_2457BB3BC();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 22) = 2080;
    v16 = (uint64_t)v10 + OBJC_IVAR____TtC4Sage24ClassificationXPCRequest_request;
    sub_245756E1C();
    sub_245756B70(v16, v9, type metadata accessor for ClassificationXPCRequest.Request);
    ClassificationXPCRequest.Request.category.getter();
    sub_245756BB0(v9);
    sub_245756F5C();
    v21 = v20 | 0xEE006E6F69740000;
    v22 = 0x6966697373616C63;
    if (!v23)
    {
      v22 = 1953719668;
      v21 = 0xE400000000000000;
    }
    if (v17)
      v24 = v22;
    else
      v24 = v19;
    if (v17)
      v25 = v21;
    else
      v25 = v18;
    v26 = *(void **)(v0 + 200);
    v27 = *(void **)(v0 + 136);
    *(_QWORD *)(v0 + 80) = sub_245773478(v24, v25, &v33);
    sub_2457BB3BC();
    swift_bridgeObjectRelease();

    *(_WORD *)(v11 + 32) = 2112;
    v28 = v26;
    v29 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v0 + 88) = v29;
    sub_2457BB3BC();
    *v32 = v29;
    sub_24575700C();
    sub_24575700C();
    _os_log_impl(&dword_245746000, v7, v8, "ClassificationClient request with requestIdentifier=%s, useCaseIdentifier=%s, category=%s failed with error: %@", (uint8_t *)v11, 0x2Au);
    sub_245748A50((uint64_t *)&unk_25749A9C0);
    sub_245757020();
    sub_24575105C();
  }
  v30 = *(void **)(v0 + 136);

  sub_24575700C();
  sub_24575700C();

  swift_willThrow();
  sub_245756FCC();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

#error "24575576C: call analysis failed (funcsize=40)"

uint64_t sub_2457557A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_245756D90();
  if (!v1)
    *(_QWORD *)(v2 + 104) = v0;
  sub_245756E10();
  return sub_245756D80();
}

#error "24575589C: call analysis failed (funcsize=40)"

uint64_t ClassificationClient.classifyPriority(_:options:)(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;

  *(_QWORD *)(v1 + 32) = sub_245756EA8(a1);
  v2 = sub_245756DC0();
  sub_245756E8C(v2);
  sub_245756E10();
  return sub_245756D80();
}

{
  uint64_t v1;
  unint64_t v2;

  *(_QWORD *)(v1 + 32) = sub_245756EA8(a1);
  v2 = sub_245756DC0();
  sub_245756E8C(v2);
  sub_245756E10();
  return sub_245756D80();
}

{
  uint64_t v1;
  unint64_t v2;

  *(_QWORD *)(v1 + 32) = sub_245756EA8(a1);
  v2 = sub_245756DC0();
  sub_245756E8C(v2);
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_245755914()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v9;

  sub_245756E38();
  sub_245748AB8();
  sub_24575704C();
  sub_245756F7C();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v9 = v2;
  *((_QWORD *)&v9 + 1) = v1;
  v3 = objc_allocWithZone((Class)sub_245756EE4());
  sub_245756FB0();
  sub_245756E64();
  v4 = sub_245756F54();
  v5 = sub_245756F38(v4, &v9);
  sub_245756FD4((uint64_t)v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v6;
  v7 = sub_245756ED0(v6, (uint64_t)sub_2457559B4);
  return sub_245756DB4(v7);
}

uint64_t sub_2457559B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_245756D90();
  if (!v1)
    *(_QWORD *)(v2 + 104) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_2457559F8()
{
  void *v0;
  void *v1;
  uint64_t v2;

  sub_245756FFC();

  swift_task_dealloc();
  return sub_245756E54(*(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_245755A40()
{
  uint64_t v0;

  swift_task_dealloc();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_245755AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v9;

  sub_245756E38();
  sub_245748AB8();
  sub_24575704C();
  sub_245756F7C();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v9 = v2;
  *((_QWORD *)&v9 + 1) = v1;
  v3 = objc_allocWithZone((Class)sub_245756EE4());
  sub_245756FB0();
  sub_245756E64();
  v4 = sub_245756F54();
  v5 = sub_245756F38(v4, &v9);
  sub_245756FD4((uint64_t)v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v6;
  v7 = sub_245756ED0(v6, (uint64_t)sub_245755B50);
  return sub_245756DB4(v7);
}

uint64_t sub_245755B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_245756D90();
  if (!v1)
    *(_QWORD *)(v2 + 104) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_245755BD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  id v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v9;

  sub_245756E38();
  sub_245748AB8();
  sub_24575704C();
  sub_245756F7C();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v9 = v2;
  *((_QWORD *)&v9 + 1) = v1;
  v3 = objc_allocWithZone((Class)sub_245756EE4());
  sub_245756FB0();
  sub_245756E64();
  v4 = sub_245756F54();
  v5 = sub_245756F38(v4, &v9);
  sub_245756FD4((uint64_t)v5);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v6;
  v7 = sub_245756ED0(v6, (uint64_t)sub_245755B50);
  return sub_245756DB4(v7);
}

uint64_t sub_245755C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

void sub_245755C8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[5] = v1;
  if (v1)
  {
    v2 = v0[4];
    v3 = sub_245757030();
    v0[6] = v3;
    *(_QWORD *)(v3 + 16) = v2;
    swift_retain();
    v4 = (_QWORD *)swift_task_alloc();
    v0[7] = v4;
    type metadata accessor for ClassificationXPCResult();
    *v4 = v0;
    v4[1] = sub_245755D30;
    sub_2457BAE7C();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_245755D30()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_245756E10();
    return sub_245756E04();
  }
  else
  {
    swift_release();
    sub_245756FCC();
    return sub_245756F98(*(uint64_t (**)(void))(v2 + 8));
  }
}

uint64_t sub_245755D98()
{
  uint64_t v0;

  swift_release();
  sub_245756FCC();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_245755DC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v10[4] = sub_245756CC8;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_245755E98;
  v10[3] = &unk_2516955C0;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performClassificationRequest_with_, a4, v9);
  _Block_release(v9);
}

void sub_245755E98(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(void *, void *);
  id v6;
  id v7;

  v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  v7 = a2;
  v6 = a3;
  v5(a2, a3);
  swift_release();

}

void sub_245755F0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_245748A50(&qword_257498400);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2457BB2A8();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = a1;
  v9[6] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24579429C((uint64_t)v7, (uint64_t)&unk_257498410, (uint64_t)v9);
  swift_release();
  if (qword_257497E40 != -1)
    swift_once();
  v10 = sub_2457BB08C();
  sub_24574E0F8(v10, (uint64_t)qword_257498E48);
  swift_bridgeObjectRetain_n();
  v11 = sub_2457BB068();
  v12 = sub_2457BB368();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    v15 = sub_245773478(a1, a2, &v16);
    sub_2457BB3BC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245746000, v11, v12, "Classification request with identifier %s was cancelled by client.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953B318](v14, -1, -1);
    MEMORY[0x24953B318](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_245756148(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v10[4] = sub_245756D7C;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_245755E98;
  v10[3] = &unk_251695A68;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performClassificationRequest_with_, a4, v9);
  _Block_release(v9);
}

uint64_t sub_245756218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

void sub_245756234()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
  {
    v2 = *(_QWORD *)(v0 + 32);
    v1 = *(_QWORD *)(v0 + 40);
    v3 = sub_245757030();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    swift_retain();
    sub_2457BAE64();
    swift_release();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
}

void sub_2457562DC(void *a1)
{
  id v2;

  v2 = (id)sub_2457BB1A0();
  objc_msgSend(a1, sel_cancelRequestWithIdentifier_, v2);

}

uint64_t ClassificationClient.testTaskCancellation(sleepDuration:)(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 32) = type metadata accessor for ClassificationXPCRequest.Request(0);
  *(_QWORD *)(v2 + 40) = sub_245756DC0();
  v3 = sub_2457BAAD4();
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 64) = swift_task_alloc();
  sub_245756E10();
  return swift_task_switch();
}

uint64_t sub_24575639C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  __int128 v18;

  v1 = v0[7];
  v2 = (_QWORD *)v0[5];
  v3 = v0[2];
  sub_2457BAAC8();
  v4 = sub_2457BAAA4();
  v6 = v5;
  sub_245757068(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_245756EF8();
  sub_245756F90();
  *v2 = v3;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v18 = v4;
  *((_QWORD *)&v18 + 1) = v6;
  v7 = objc_allocWithZone((Class)sub_245756E24());
  v0[9] = sub_245756F2C((uint64_t)v7, v8, v9, v10, v11, v12, v13, v14, v18);
  v15 = (_QWORD *)swift_task_alloc();
  v0[10] = v15;
  v16 = sub_245756ED0(v15, (uint64_t)sub_245756470);
  return sub_245756DB4(v16);
}

uint64_t sub_245756470(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 96) = a1;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_2457564D4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 96);
  v2 = *(void **)(v0 + 72);
  sub_245752288();

  swift_task_dealloc();
  sub_245756FCC();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24575652C()
{
  uint64_t v0;

  swift_task_dealloc();
  sub_245757044();
  return sub_245756F98(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ClassificationClient.UseCase.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24575659C + 4 * byte_2457BD958[*v0]))(0xD000000000000013, 0x80000002457C7F10);
}

uint64_t sub_2457565F0()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_245756608()
{
  return 0x7966697373616C63;
}

uint64_t type metadata accessor for ClassificationClient()
{
  return objc_opt_self();
}

Sage::ClassificationClient::UseCase_optional __swiftcall ClassificationClient.UseCase.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  unint64_t v2;
  char *v3;
  char v4;
  Sage::ClassificationClient::UseCase_optional result;

  v3 = v1;
  sub_2457BB524();
  sub_245757014();
  v4 = 8;
  if (v2 < 8)
    v4 = v2;
  *v3 = v4;
  sub_245749FB4();
  return result;
}

void sub_245756694(char *a1)
{
  sub_2457B53F0(*a1);
}

void sub_2457566A0()
{
  sub_2457A4020();
}

void sub_2457566A8(uint64_t a1)
{
  char *v1;

  sub_2457A4370(a1, *v1);
}

void sub_2457566B0()
{
  sub_2457A466C();
}

Sage::ClassificationClient::UseCase_optional sub_2457566B8(Swift::String *a1)
{
  return ClassificationClient.UseCase.init(rawValue:)(*a1);
}

uint64_t sub_2457566C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = ClassificationClient.UseCase.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_2457566E8()
{
  sub_245756A38();
  return sub_2457BB200();
}

uint64_t sub_245756744()
{
  sub_245756A38();
  return sub_2457BB1E8();
}

void sub_245756790(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_2457567FC(&qword_2574977D8, a2, (uint64_t (*)(uint64_t))type metadata accessor for ClassificationClient, (uint64_t)&protocol conformance descriptor for ClassificationClient);
  *(_QWORD *)(a1 + 8) = v3;
}

void sub_2457567CC()
{
  sub_2457567FC(&qword_2574983C8, 255, MEMORY[0x24BE797D0], MEMORY[0x24BE797E0]);
}

void sub_2457567FC(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v6;

  if (!*a1)
  {
    v6 = a3(a2);
    atomic_store(MEMORY[0x24953B288](a4, v6), a1);
  }
  sub_245748A90();
}

unint64_t sub_24575683C()
{
  unint64_t result;

  result = qword_2574983D0;
  if (!qword_2574983D0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationClient.PrewarmCategory, &type metadata for ClassificationClient.PrewarmCategory);
    atomic_store(result, (unint64_t *)&qword_2574983D0);
  }
  return result;
}

unint64_t sub_24575687C()
{
  unint64_t result;

  result = qword_2574983D8;
  if (!qword_2574983D8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationClient.UseCase, &type metadata for ClassificationClient.UseCase);
    atomic_store(result, (unint64_t *)&qword_2574983D8);
  }
  return result;
}

void type metadata accessor for ClassificationXPCService()
{
  sub_245751428();
}

uint64_t method lookup function for ClassificationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ClassificationClient.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t storeEnumTagSinglePayload for ClassificationClient.PrewarmCategory(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_245756918 + 4 * byte_2457BD960[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_245756938 + 4 * byte_2457BD965[v4]))();
}

_BYTE *sub_245756918(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_245756938(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245756940(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245756948(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245756950(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245756958(_DWORD *result)
{
  *result = 0;
  return result;
}

void type metadata accessor for ClassificationClient.PrewarmCategory()
{
  sub_245751428();
}

uint64_t storeEnumTagSinglePayload for ClassificationClient.UseCase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2457569BC + 4 * byte_2457BD96F[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2457569F0 + 4 * byte_2457BD96A[v4]))();
}

uint64_t sub_2457569F0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457569F8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245756A00);
  return result;
}

uint64_t sub_245756A0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245756A14);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_245756A18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245756A20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for ClassificationClient.UseCase()
{
  sub_245751428();
}

unint64_t sub_245756A38()
{
  unint64_t result;

  result = qword_2574983E0;
  if (!qword_2574983E0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationClient.UseCase, &type metadata for ClassificationClient.UseCase);
    atomic_store(result, (unint64_t *)&qword_2574983E0);
  }
  return result;
}

unint64_t sub_245756A74()
{
  unint64_t result;

  result = qword_2574983E8;
  if (!qword_2574983E8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClassificationClient.PrewarmCategory, &type metadata for ClassificationClient.PrewarmCategory);
    atomic_store(result, &qword_2574983E8);
  }
  return result;
}

uint64_t sub_245756AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_245757054(v3);
  return sub_245755C70(v4, v5, v2);
}

uint64_t sub_245756B08()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return sub_245756DF8(*(uint64_t (**)(void))(v2 + 8));
}

void sub_245756B48()
{
  uint64_t v0;

  sub_245755F0C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_245756B70(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  sub_245748A90();
}

uint64_t sub_245756BB0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ClassificationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_245756BEC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_245756C20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  v7 = sub_245757054(v6);
  return sub_245756218(v7, v8, v2, v3, v4, v5);
}

void sub_245756C94(void *a1)
{
  sub_2457562DC(a1);
}

void sub_245756C9C(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_245755DC8(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_245756CA4()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_245756CC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t *);
  uint64_t v4;

  v2 = *(uint64_t (**)(uint64_t *))(v1 + 16);
  v4 = a1;
  return v2(&v4);
}

uint64_t sub_245756CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_245756D08()
{
  return swift_release();
}

void sub_245756D10(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_245756148(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t *sub_245756D18(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_245756D80()
{
  return swift_task_switch();
}

uint64_t sub_245756D90()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  return swift_task_dealloc();
}

uint64_t sub_245756DB4(uint64_t a1)
{
  return sub_245754D78(a1);
}

uint64_t sub_245756DC0()
{
  return swift_task_alloc();
}

uint64_t sub_245756DD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_245756DF8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_245756E04()
{
  return swift_task_switch();
}

uint64_t sub_245756E1C()
{
  return swift_beginAccess();
}

uint64_t sub_245756E24()
{
  return type metadata accessor for ClassificationXPCRequest(0);
}

uint64_t sub_245756E38()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_245756E54(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_245756E64()
{
  return swift_bridgeObjectRetain();
}

__n128 sub_245756E6C(uint64_t a1)
{
  __n128 *v1;
  uint64_t v2;
  __n128 result;

  *(_QWORD *)(v2 + 48) = a1;
  result = *v1;
  *(__n128 *)(v2 + 56) = *v1;
  *(_BYTE *)(v2 + 112) = v1[1].n128_u8[0];
  *(_QWORD *)(v2 + 72) = v1[1].n128_u64[1];
  return result;
}

__n128 sub_245756E8C(unint64_t a1)
{
  uint64_t v1;
  unint64_t *v2;
  __n128 *v3;
  unint64_t v4;
  __n128 result;

  v4 = *v2;
  v3[2].n128_u64[1] = a1;
  v3[3].n128_u64[0] = v4;
  v3[3].n128_u64[1] = *(_QWORD *)v1;
  result = *(__n128 *)(v1 + 8);
  v3[4] = result;
  return result;
}

uint64_t sub_245756EA8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  return type metadata accessor for ClassificationXPCRequest.Request(0);
}

uint64_t sub_245756EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return type metadata accessor for ClassificationXPCRequest.Request(0);
}

uint64_t sub_245756ED0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_245756EE4()
{
  return type metadata accessor for ClassificationXPCRequest(0);
}

uint64_t sub_245756EF8()
{
  return sub_2457BB440();
}

uint64_t sub_245756F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)v1 = v5;
  *(_QWORD *)(v1 + 8) = v3;
  *(_BYTE *)(v1 + 16) = v4;
  *(_QWORD *)(v1 + 24) = v2;
  return v0;
}

id sub_245756F2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9)
{
  uint64_t v9;

  return ClassificationXPCRequest.init(request:requestInfo:)(v9, &a9);
}

id sub_245756F38(uint64_t a1, __int128 *a2)
{
  uint64_t v2;

  return ClassificationXPCRequest.init(request:requestInfo:)(v2, a2);
}

uint64_t sub_245756F40@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t sub_245756F54()
{
  return swift_bridgeObjectRetain();
}

_QWORD *sub_245756F7C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *v0 = v3;
  v0[1] = v4;
  v0[2] = v2;
  v0[3] = v1;
  return v0;
}

uint64_t sub_245756F90()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245756F98(uint64_t (*a1)(void))
{
  return a1();
}

void sub_245756FA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_245756B70(v4, v3, a3);
}

uint64_t sub_245756FB0()
{
  return swift_bridgeObjectRetain();
}

void sub_245756FBC(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  sub_245753960(a1, a2, a3, a3 + 1);
}

uint64_t sub_245756FC4(uint64_t *a1)
{
  return sub_245753908(a1);
}

uint64_t sub_245756FCC()
{
  return swift_task_dealloc();
}

uint64_t sub_245756FD4(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

void *sub_245756FFC()
{
  uint64_t v0;

  return sub_245752308(*(void **)(v0 + 16));
}

void sub_24575700C()
{
  void *v0;

}

uint64_t sub_245757014()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245757020()
{
  return swift_arrayDestroy();
}

void sub_245757028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_24574CD8C((uint64_t *)va);
}

uint64_t sub_245757030()
{
  return swift_task_alloc();
}

BOOL sub_245757038(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_245757044()
{
  return swift_task_dealloc();
}

uint64_t sub_24575704C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245757054(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_245757068@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t ClientProcessInfo.applicationIdentifier.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientProcessInfo.processIdentifier.getter()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

void ClientProcessInfo.init(auditToken:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  pid_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  audit_token_t v30;

  sub_245758054();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v27 = v10;
  v28 = sub_2457BA9D8();
  v26 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  sub_2457535E8();
  v11 = sub_2457BA9CC();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v13);
  v17 = (char *)&v26 - v16;
  v29 = v9;
  v18 = v7;
  v19 = sub_2457BB098();
  if (!v0)
  {
    v21 = v28;
    if (v20)
    {
      *(_QWORD *)v30.val = v29;
      *(_QWORD *)&v30.val[2] = v18;
      *(_QWORD *)&v30.val[4] = v5;
      *(_QWORD *)&v30.val[6] = v3;
      v22 = v19;
      v23 = v20;
      v24 = audit_token_to_pid(&v30);
      v25 = v27;
      *v27 = v22;
      v25[1] = v23;
      *((_DWORD *)v25 + 4) = v24;
    }
    else
    {
      sub_2457BA9C0();
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
      sub_245757970(MEMORY[0x24BEE4AF8]);
      sub_245757A98();
      sub_2457BAA20();
      sub_2457BA9A8();
      (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v1, v21);
      swift_willThrow();
      (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
    }
  }
  sub_245751240();
}

uint64_t ClientProcessInfo.init(applicationIdentifier:processIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, int a3@<W2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_DWORD *)(a4 + 16) = a3;
  return result;
}

void ClientProcessInfo.init(processIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  unint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;

  sub_245758054();
  a20 = v24;
  a21 = v25;
  v27 = v26;
  v29 = v28;
  sub_2457BB08C();
  sub_24575806C();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_2457BB0A4();
  if (!v21)
  {
    if (!v34)
    {
      sub_2457BAEC4();
      v35 = sub_2457BB068();
      v36 = sub_2457BB350();
      if (os_log_type_enabled(v35, v36))
      {
        v37 = (uint8_t *)swift_slowAlloc();
        *(_DWORD *)v37 = 67109120;
        a11 = v27;
        sub_2457BB3BC();
        _os_log_impl(&dword_245746000, v35, v36, "Could not look up bundle identifier for pid %d", v37, 8u);
        MEMORY[0x24953B318](v37, -1, -1);
      }

      (*(void (**)(char *, uint64_t))(v23 + 8))(v32, v22);
      v34 = 0xE700000000000000;
      v33 = 0x6E776F6E6B6E75;
    }
    *(_QWORD *)v29 = v33;
    *(_QWORD *)(v29 + 8) = v34;
    *(_DWORD *)(v29 + 16) = v27;
  }
  sub_245751240();
}

uint64_t ClientProcessInfo.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_2457BB1C4();
  swift_bridgeObjectRelease();
  return sub_2457BB74C();
}

BOOL static ClientProcessInfo.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  char v5;
  _BOOL8 result;

  v2 = *(_DWORD *)(a1 + 16);
  v3 = *(_DWORD *)(a2 + 16);
  if (*(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
    return v2 == v3;
  v5 = sub_2457BB6B0();
  result = 0;
  if ((v5 & 1) != 0)
    return v2 == v3;
  return result;
}

uint64_t sub_245757484(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000015 && a2 == 0x80000002457C9220 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002457C9240)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_24575756C(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000011;
  else
    return 0xD000000000000015;
}

unint64_t sub_2457575A8()
{
  char *v0;

  return sub_24575756C(*v0);
}

uint64_t sub_2457575B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245757484(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457575D4()
{
  sub_245757C80();
  return sub_2457BB788();
}

uint64_t sub_2457575FC()
{
  sub_245757C80();
  return sub_2457BB794();
}

void ClientProcessInfo.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  sub_245758054();
  v2 = v1;
  v3 = sub_245748A50(&qword_257498420);
  v7 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(v2, v2[3]);
  sub_245757C80();
  sub_2457BB77C();
  sub_2457BB644();
  if (!v0)
    sub_2457BB698();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v5, v3);
  sub_245751240();
}

uint64_t ClientProcessInfo.hashValue.getter()
{
  sub_2457BB728();
  swift_bridgeObjectRetain();
  sub_2457BB1C4();
  swift_bridgeObjectRelease();
  sub_2457BB74C();
  return sub_2457BB764();
}

void ClientProcessInfo.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  sub_245758054();
  v2 = v1;
  v4 = v3;
  sub_245748A50(&qword_257498430);
  sub_24575806C();
  MEMORY[0x24BDAC7A8](v5);
  sub_2457535E8();
  sub_245749280(v2, v2[3]);
  sub_245757C80();
  sub_2457BB770();
  if (v0)
  {
    sub_245749564((uint64_t)v2);
  }
  else
  {
    v6 = sub_2457BB584();
    v8 = v7;
    swift_bridgeObjectRetain();
    v9 = sub_2457BB5D8();
    sub_245748AC0();
    *(_QWORD *)v4 = v6;
    *(_QWORD *)(v4 + 8) = v8;
    *(_DWORD *)(v4 + 16) = v9;
    sub_245749564((uint64_t)v2);
    swift_bridgeObjectRelease();
  }
  sub_245751240();
}

void sub_2457578D0()
{
  ClientProcessInfo.init(from:)();
}

void sub_2457578E4()
{
  ClientProcessInfo.encode(to:)();
}

uint64_t sub_245757900()
{
  sub_2457BB728();
  swift_bridgeObjectRetain();
  sub_2457BB1C4();
  swift_bridgeObjectRelease();
  sub_2457BB74C();
  return sub_2457BB764();
}

unint64_t sub_245757970(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x24BEE4B00];
    goto LABEL_9;
  }
  sub_245748A50(&qword_257498458);
  v2 = sub_2457BB50C();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_245757FFC(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_245757AD8(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_245758044(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_245757A98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257498418;
  if (!qword_257498418)
  {
    v1 = sub_2457BA9D8();
    result = MEMORY[0x24953B288](MEMORY[0x24BDCAEE0], v1);
    atomic_store(result, (unint64_t *)&qword_257498418);
  }
  return result;
}

unint64_t sub_245757AD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2457BB728();
  sub_2457BB1C4();
  v4 = sub_2457BB764();
  return sub_245757B3C(a1, a2, v4);
}

unint64_t sub_245757B3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_2457BB6B0() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_2457BB6B0() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_2457BB6B0() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

unint64_t sub_245757C80()
{
  unint64_t result;

  result = qword_257498428;
  if (!qword_257498428)
  {
    result = MEMORY[0x24953B288](&unk_2457BDE88, &type metadata for ClientProcessInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498428);
  }
  return result;
}

unint64_t sub_245757CC0()
{
  unint64_t result;

  result = qword_257498438;
  if (!qword_257498438)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClientProcessInfo, &type metadata for ClientProcessInfo);
    atomic_store(result, (unint64_t *)&qword_257498438);
  }
  return result;
}

uint64_t destroy for ClientProcessInfo()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s4Sage17ClientProcessInfoVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClientProcessInfo(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

__n128 initializeWithTake for ClientProcessInfo(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ClientProcessInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientProcessInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 20))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientProcessInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_DWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 20) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 20) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientProcessInfo()
{
  return &type metadata for ClientProcessInfo;
}

uint64_t storeEnumTagSinglePayload for ClientProcessInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_245757EBC + 4 * byte_2457BDCE5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_245757EF0 + 4 * byte_2457BDCE0[v4]))();
}

uint64_t sub_245757EF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245757EF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245757F00);
  return result;
}

uint64_t sub_245757F0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245757F14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_245757F18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245757F20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ClientProcessInfo.CodingKeys()
{
  return &type metadata for ClientProcessInfo.CodingKeys;
}

unint64_t sub_245757F40()
{
  unint64_t result;

  result = qword_257498440;
  if (!qword_257498440)
  {
    result = MEMORY[0x24953B288](&unk_2457BDE60, &type metadata for ClientProcessInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498440);
  }
  return result;
}

unint64_t sub_245757F80()
{
  unint64_t result;

  result = qword_257498448;
  if (!qword_257498448)
  {
    result = MEMORY[0x24953B288](&unk_2457BDDD0, &type metadata for ClientProcessInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498448);
  }
  return result;
}

unint64_t sub_245757FC0()
{
  unint64_t result;

  result = qword_257498450;
  if (!qword_257498450)
  {
    result = MEMORY[0x24953B288](&unk_2457BDDF8, &type metadata for ClientProcessInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498450);
  }
  return result;
}

uint64_t sub_245757FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_245748A50(&qword_257498460);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

_OWORD *sub_245758044(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void GenerativeExperiencesSession.__allocating_init(configuration:)(uint64_t a1)
{
  sub_24575916C();
  GenerativeExperiencesSession.init(configuration:)(a1);
  sub_245748A90();
}

void GenerativeExperiencesSession.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  type metadata accessor for SessionConfiguration();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v4);
  sub_245749FF4();
  sub_245758154(a1, v6 - v5);
  v7 = objc_allocWithZone((Class)type metadata accessor for GenerativeExperiencesSessionClient());
  GenerativeExperiencesSessionClient.init(_:)();
  v9 = v8;
  sub_245758EBC(a1);
  if (v9)
    *(_QWORD *)(v2 + 16) = v9;
  else
    swift_deallocPartialClassInstance();
  sub_245749FB4();
}

uint64_t sub_245758154(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SessionConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static GenerativeExperiencesSession.retrieveSession(with:)()
{
  uint64_t v0;

  objc_allocWithZone((Class)sub_245759140());
  swift_bridgeObjectRetain();
  GenerativeExperiencesSessionClient.init(identifier:)();
  if (v0)
    *(_QWORD *)(sub_24575916C() + 16) = v0;
  sub_245749FB4();
}

void static GenerativeExperiencesSession.terminateSession(for:)()
{
  id v0;
  void *v1;
  void *v2;

  v0 = objc_allocWithZone((Class)sub_245759140());
  swift_bridgeObjectRetain();
  GenerativeExperiencesSessionClient.init(identifier:)();
  if (v1)
  {
    v2 = v1;
    sub_245769F50();

  }
}

Swift::String __swiftcall GenerativeExperiencesSession.sessionIdentifier()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  sub_24576A3B0();
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

void GenerativeExperiencesSession.registeredDocuments()()
{
  sub_24576BC2C();
  sub_245748A90();
}

#error "2457582A0: call analysis failed (funcsize=7)"

void GenerativeExperiencesSession.complete<A>(generating:tools:tooling:toolChoice:documents:parameters:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v22;
  void (*v23)(void);
  void (*v24)(void);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_245759004();
  v24 = v23;
  v37 = v25;
  v38 = v26;
  v35 = v27;
  v36 = v28;
  v33 = v29;
  v34 = v30;
  v31 = sub_245759064();
  v32 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  sub_245748AD0();
  v24();
  sub_24576C388(v33, v22, v34, v35, v36, v37, v38, a21, a22);
  (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v22, v31);
  sub_245758FB4();
}

{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  sub_245759004();
  v26 = v25;
  v43 = v27;
  v41 = v28;
  v42 = v29;
  v39 = v30;
  v40 = v31;
  v38 = v32;
  sub_2457590B4();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v33);
  sub_245759034();
  v34 = sub_2457BB140();
  v35 = *(_QWORD *)(v34 - 8);
  MEMORY[0x24BDAC7A8](v34);
  v37 = sub_245758FCC();
  sub_245759108();
  MEMORY[0x24BDAC7A8](v36);
  sub_245759128();
  sub_245748A50(&qword_257498468);
  sub_24575901C();
  sub_245759050();
  *(_OWORD *)(sub_245759028() + 16) = xmmword_2457BDEE0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v35 + 104))(v22, *MEMORY[0x24BE7AC00], v34);
  sub_24575907C();
  if (v26)
  {
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v22, v34);
    sub_24575918C();
    sub_245759118();
  }
  else
  {
    sub_2457BB0BC();
    sub_2457BB0EC();
    sub_24576C388(v38, v24, v39, v40, v41, v42, v43, a21, a22);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v24, v37);
  }
  sub_245758FB4();
}

#error "245758460: call analysis failed (funcsize=65)"

void GenerativeExperiencesSession.complete(tools:tooling:toolChoice:documents:parameters:query:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  sub_245759004();
  v4 = v3;
  v33 = v5;
  v34 = v6;
  v31 = v7;
  v32 = v8;
  v29 = v9;
  v30 = v10;
  v35 = v11;
  sub_245748A50(&qword_2574984E0);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v12);
  sub_245759034();
  sub_2457BB134();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v13);
  sub_245748AD0();
  sub_2457BB140();
  sub_245759108();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_245759064();
  v27 = *(_QWORD *)(v17 - 8);
  v28 = v17;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(_QWORD *)(v0 + 16);
  sub_245748A50(&qword_257498468);
  sub_24575901C();
  sub_245759050();
  *(_OWORD *)(sub_245759028() + 16) = xmmword_2457BDEE0;
  sub_245759158((uint64_t)v16, *MEMORY[0x24BE7AC00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 104));
  sub_24575906C();
  if (v4)
  {
    sub_245751140((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_24575914C();
    sub_2457590BC();
  }
  else
  {
    sub_2457BB0BC();
    sub_2457BB0EC();
    v21 = sub_245759100();
    sub_24575908C(v2, v22, v23, v21);
    sub_24576C51C((uint64_t)v20, v29, v30, v31, v32, v33, v2, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35,
      v36);
    sub_245758EF8(v2);
    (*(void (**)(char *, uint64_t))(v27 + 8))(v20, v28);
  }
  sub_245758FB4();
}

void GenerativeExperiencesSession.complete<A>(generating:documents:parameters:query:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[2];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_245759004();
  v32 = v3;
  v33 = v2;
  v5 = v4;
  v29 = v6;
  v30 = v7;
  v27 = v8;
  v25 = v9;
  v31 = v10;
  v28 = sub_2457BAFE4();
  v26 = *(_QWORD *)(v28 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v11);
  sub_245759128();
  sub_2457590B4();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v12);
  v13 = sub_245758FE8();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_245759064();
  v23 = *(_QWORD *)(v17 - 8);
  v24 = v17;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v18);
  sub_2457590C8();
  v22[1] = v19;
  sub_245748A50(&qword_257498468);
  sub_24575901C();
  *(_OWORD *)(sub_245759028() + 16) = xmmword_2457BDEE0;
  sub_245759158((uint64_t)v16, *MEMORY[0x24BE7AC00], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 104));
  sub_24575907C();
  if (v5)
  {
    sub_245751140((uint64_t)v16, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    sub_24575914C();
    sub_245759118();
  }
  else
  {
    sub_245759184();
    sub_2457BB0EC();
    v21 = v32;
    v20 = v33;
    default argument 4 of GenerativeExperiencesSessionClient.complete<A>(generating:query:tools:tooling:toolChoice:documents:parameters:)();
    sub_24576C388(v25, v0, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], v1, v27, v29, v20, v21);
    (*(void (**)(uint64_t, uint64_t))(v26 + 8))(v1, v28);
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v0, v24);
  }
  sub_245758FB4();
}

void GenerativeExperiencesSession.complete(documents:parameters:query:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  sub_245759004();
  v4 = v3;
  v37 = v5;
  v38 = v6;
  v36 = v7;
  v39 = v8;
  sub_245748A50(&qword_2574984E0);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v9);
  sub_245749FF4();
  v35 = v11 - v10;
  v12 = sub_2457BAFE4();
  v31 = *(_QWORD *)(v12 - 8);
  v33 = v12;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v13);
  sub_245759098();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v14);
  v15 = sub_245758FE8();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v17 = sub_245758FCC();
  v28 = *(_QWORD *)(v17 - 8);
  v30 = v17;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v18);
  sub_2457590E4();
  v27 = v19;
  sub_245748A50(&qword_257498468);
  sub_24575901C();
  v20 = sub_245759028();
  *(_OWORD *)(v20 + 16) = xmmword_2457BDEE0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v16 + 104))(v0, *MEMORY[0x24BE7AC00], v15);
  sub_24575906C();
  if (v4)
  {
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v0, v15);
    *(_QWORD *)(v20 + 16) = 0;
    swift_release();
    sub_2457590BC();
  }
  else
  {
    sub_245759184();
    sub_2457BB0EC();
    _s4Sage34GenerativeExperiencesSessionClientC8complete10generating5query5tools7tooling10toolChoice9documents10parameters15TokenGeneration0O6StreamVyxGxm_9PromptKit012ChatMessagesR0VSay0B19FunctionsFoundation4ToolVGSayAS7Tooling_pGAS0xL0VSay0b6ModelsW026DocumentResourceIdentifierVGAL18SamplingParametersVtAS9GenerableRzlFfA3__0();
    v21 = sub_245759100();
    v22 = v35;
    sub_24575908C(v35, v23, v24, v21);
    sub_24576C51C(v1, MEMORY[0x24BEE4AF8], MEMORY[0x24BEE4AF8], v2, v36, v37, v35, v25, v26, v27, v28, v30, v31, v33, v35, v36, v37, v38, v39,
      v40);
    sub_245758EF8(v22);
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v2, v34);
    sub_245759178(v29);
  }
  sub_245758FB4();
}

void GenerativeExperiencesSession.complete<A>(generating:tools:toolChoice:documents:parameters:query:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  sub_245759004();
  v42 = v24;
  v26 = v25;
  v41 = v27;
  v39 = v28;
  v40 = v29;
  v37 = v30;
  v38 = v31;
  sub_2457590B4();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v32);
  v33 = sub_2457BB140();
  v34 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v36 = sub_245758FCC();
  sub_245759108();
  MEMORY[0x24BDAC7A8](v35);
  sub_2457590C8();
  sub_245748A50(&qword_257498468);
  sub_24575901C();
  sub_245759050();
  *(_OWORD *)(sub_245759028() + 16) = xmmword_2457BDEE0;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v34 + 104))(v21, *MEMORY[0x24BE7AC00], v33);
  sub_24575907C();
  if (v26)
  {
    sub_245759160(*(uint64_t (**)(uint64_t, uint64_t))(v34 + 8));
    sub_24575918C();
    sub_2457BAAF8();
  }
  else
  {
    sub_2457BB0BC();
    sub_2457BB0EC();
    sub_24576C388(v37, v23, MEMORY[0x24BEE4AF8], v38, v39, v40, v41, v42, a21);
    (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v36);
  }
  sub_245758FB4();
}

#error "245758E5C: call analysis failed (funcsize=100)"

uint64_t GenerativeExperiencesSession.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t GenerativeExperiencesSession.__deallocating_deinit()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t sub_245758EBC(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SessionConfiguration();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_245758EF8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_245748A50(&qword_2574984E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for GenerativeExperiencesSession()
{
  return objc_opt_self();
}

uint64_t method lookup function for GenerativeExperiencesSession()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GenerativeExperiencesSession.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

unint64_t sub_245758F70()
{
  unint64_t result;
  uint64_t v1;

  result = qword_257498470;
  if (!qword_257498470)
  {
    v1 = sub_24574B5EC(&qword_257498478);
    result = MEMORY[0x24953B288](MEMORY[0x24BEE6D38], v1);
    atomic_store(result, (unint64_t *)&qword_257498470);
  }
  return result;
}

uint64_t sub_245758FCC()
{
  return sub_2457BB0E0();
}

uint64_t sub_245758FE8()
{
  return sub_2457BB140();
}

uint64_t sub_24575901C()
{
  return sub_2457BB0D4();
}

uint64_t sub_245759028()
{
  return swift_allocObject();
}

uint64_t sub_245759034()
{
  return 0;
}

uint64_t sub_245759064()
{
  return sub_2457BB0E0();
}

uint64_t sub_24575906C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 104))();
}

uint64_t sub_24575907C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 - 120))();
}

uint64_t sub_24575908C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, a4);
}

uint64_t sub_245759098()
{
  return sub_2457BB134();
}

uint64_t sub_2457590B4()
{
  return sub_2457BB134();
}

uint64_t sub_2457590BC()
{
  return sub_2457BAAF8();
}

uint64_t sub_245759100()
{
  return sub_2457BB02C();
}

uint64_t sub_245759118()
{
  return sub_2457BAAF8();
}

uint64_t sub_245759140()
{
  return type metadata accessor for GenerativeExperiencesSessionClient();
}

uint64_t sub_24575914C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_release();
}

uint64_t sub_245759158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_245759160@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_24575916C()
{
  return swift_allocObject();
}

uint64_t sub_245759178@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t sub_245759184()
{
  return sub_2457BB0BC();
}

uint64_t sub_24575918C()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 16) = 0;
  return swift_release();
}

uint64_t sub_2457591A4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage37DocumentResourceIdentifierXPCEnvelope__documentIdentifier);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage37DocumentResourceIdentifierXPCEnvelope__documentIdentifier + 8));
  return v1;
}

void DocumentResourceIdentifierXPCEnvelope.__allocating_init(sealing:)()
{
  uint64_t v0;

  sub_245753618();
  v0 = sub_245767A8C();
  DocumentResourceIdentifierXPCEnvelope.init(sealing:)(v0);
  sub_245748A90();
}

uint64_t DocumentResourceIdentifierXPCEnvelope.init(sealing:)(uint64_t a1)
{
  return sub_24575A614(a1, &OBJC_IVAR____TtC4Sage37DocumentResourceIdentifierXPCEnvelope__documentIdentifier);
}

uint64_t DocumentResourceIdentifierXPCEnvelope.unseal()()
{
  return sub_24575A6F4(&OBJC_IVAR____TtC4Sage37DocumentResourceIdentifierXPCEnvelope__documentIdentifier);
}

uint64_t sub_24575922C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

void sub_245759270(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x24953B288](a3, v5), a1);
  }
  sub_245748A90();
}

void static DocumentResourceIdentifierXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static DocumentResourceIdentifierXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_257498480 = a1;
  sub_2457512D4();
}

void static DocumentResourceIdentifierXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void DocumentResourceIdentifierXPCEnvelope.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  v0 = (void *)sub_245767A8C();
  DocumentResourceIdentifierXPCEnvelope.init(coder:)(v0);
  sub_245748A90();
}

id DocumentResourceIdentifierXPCEnvelope.init(coder:)(void *a1)
{
  return sub_24575981C(a1, 0xD000000000000013, 0x80000002457C92D0, &OBJC_IVAR____TtC4Sage37DocumentResourceIdentifierXPCEnvelope__documentIdentifier);
}

Swift::Void __swiftcall DocumentResourceIdentifierXPCEnvelope.encode(with:)(NSCoder with)
{
  sub_24575D44C(with.super.isa, &OBJC_IVAR____TtC4Sage37DocumentResourceIdentifierXPCEnvelope__documentIdentifier);
}

void DocumentResourceIdentifierXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

uint64_t sub_245759494()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice + 8));
  return v1;
}

void sub_2457594DC(void *a1, uint64_t a2, void *a3, _QWORD *a4)
{
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t);
  id v10;

  v6 = a3;
  v10 = a1;
  sub_2457BAA8C();

  v7 = sub_245767CE4();
  sub_24575D110(v7, v8, a4, v9);
  sub_245767AFC(v10);
}

void ToolChoiceXPCEnvelope.__allocating_init(sealing:)()
{
  sub_245753618();
  sub_245767A8C();
  ToolChoiceXPCEnvelope.init(sealing:)();
  sub_245748A90();
}

void ToolChoiceXPCEnvelope.init(sealing:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  sub_245759004();
  sub_245767A98();
  sub_2457BAFE4();
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v2);
  sub_245767C44();
  v3 = sub_2457BACD8();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB83A8];
  MEMORY[0x24BDAC7A8](v3);
  sub_245767B2C();
  v0;
  sub_2457BACCC();
  sub_245759270(&qword_2574984B0, v4, MEMORY[0x24BEB83B0]);
  sub_245767B6C();
  sub_245767B54();
  if (v0)
  {
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_245767E88(OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice);
    sub_245767E74(v5, sel_init);
    sub_245767B90(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_245758FB4();
  }
}

void ToolChoiceXPCEnvelope.unseal()()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;

  sub_2457BACD8();
  v0 = MEMORY[0x24BEB83A8];
  sub_245767C1C();
  MEMORY[0x24BDAC7A8](v1);
  sub_24575136C();
  sub_245767AE8(OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice);
  sub_245767D38(&qword_2574984C0, v2, MEMORY[0x24BEB83B8]);
  sub_245767AB4();
  sub_245767BF8();
  if (v0)
  {
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_2457BACC0();
    sub_245767BBC();
    sub_245767AD4();
  }
}

void static ToolChoiceXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static ToolChoiceXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_257498481 = a1;
  sub_2457512D4();
}

void static ToolChoiceXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void ToolChoiceXPCEnvelope.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  v0 = (void *)sub_245767A8C();
  ToolChoiceXPCEnvelope.init(coder:)(v0);
  sub_245748A90();
}

id ToolChoiceXPCEnvelope.init(coder:)(void *a1)
{
  return sub_245767B74(a1, 0x6F68436C6F6F745FLL, 6644585, &OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice);
}

id sub_24575981C(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  void *v4;
  objc_class *v7;
  char *v8;
  void *v9;
  id v10;
  id v11;
  objc_super v13[2];
  _OWORD v14[2];
  _BYTE v15[24];
  uint64_t v16;

  v7 = (objc_class *)sub_245767B0C();
  v8 = v4;
  v9 = (void *)sub_2457BB1A0();
  v10 = objc_msgSend(a1, sel_decodeObjectForKey_, v9);

  if (v10)
  {
    sub_2457BB3D4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_245765CC8((uint64_t)v14, (uint64_t)v15, &qword_2574984A8);
  if (!v16)
  {

    sub_245765F18((uint64_t)v15, &qword_2574984A8);
LABEL_9:
    swift_deallocPartialClassInstance();
    return 0;
  }
  if ((sub_245767CF0() & 1) == 0)
  {

    goto LABEL_9;
  }
  *(objc_super *)&v8[*a4] = v13[1];

  v13[0].receiver = v8;
  v13[0].super_class = v7;
  v11 = -[objc_super init](v13, sel_init);

  return v11;
}

Swift::Void __swiftcall ToolChoiceXPCEnvelope.encode(with:)(NSCoder with)
{
  sub_245767CDC(with.super.isa, &OBJC_IVAR____TtC4Sage21ToolChoiceXPCEnvelope__toolChoice);
}

void ToolChoiceXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

uint64_t sub_245759A5C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage15ToolXPCEnvelope__tool);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage15ToolXPCEnvelope__tool + 8));
  return v1;
}

void ToolXPCEnvelope.__allocating_init(sealing:)()
{
  sub_245753618();
  sub_245767A8C();
  ToolXPCEnvelope.init(sealing:)();
  sub_245748A90();
}

void ToolXPCEnvelope.init(sealing:)()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  objc_super v13;

  v1 = (objc_class *)sub_245767A98();
  sub_2457BB008();
  sub_245759270(&qword_2574984C8, (uint64_t (*)(uint64_t))MEMORY[0x24BE3B918], MEMORY[0x24BE3B928]);
  v2 = v0;
  v3 = sub_245767B6C();
  if (v0)
  {
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_245767E7C(v3, v4, OBJC_IVAR____TtC4Sage15ToolXPCEnvelope__tool);
    v13.receiver = v2;
    v13.super_class = v1;
    sub_245767E6C(v5, sel_init, v6, v7, v8, v9, v10, v11, v12, v13);
    sub_245767B14();
    sub_245767CC8();
  }
}

uint64_t ToolXPCEnvelope.unseal()()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t result;

  sub_245767CBC();
  v0 = sub_2457BB008();
  v1 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3B918];
  sub_245767CA8(OBJC_IVAR____TtC4Sage15ToolXPCEnvelope__tool);
  sub_245759270(&qword_2574984D8, v1, MEMORY[0x24BE3B940]);
  sub_245767E24();
  sub_245767B64();
  result = sub_245767EB8();
  if (v0)
  {
    sub_245767A70();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void static ToolXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static ToolXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_257498482 = a1;
  sub_2457512D4();
}

void static ToolXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void ToolXPCEnvelope.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  v0 = (void *)sub_245767A8C();
  ToolXPCEnvelope.init(coder:)(v0);
  sub_245748A90();
}

id ToolXPCEnvelope.init(coder:)(void *a1)
{
  return sub_24575981C(a1, 0x6C6F6F745FLL, 0xE500000000000000, &OBJC_IVAR____TtC4Sage15ToolXPCEnvelope__tool);
}

Swift::Void __swiftcall ToolXPCEnvelope.encode(with:)(NSCoder with)
{
  sub_24575D44C(with.super.isa, &OBJC_IVAR____TtC4Sage15ToolXPCEnvelope__tool);
}

id ToolXPCEnvelope.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ToolXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

uint64_t sub_245759E50()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema);
  sub_245765F40(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema + 8));
  return v1;
}

void SchemaXPCEnvelope.__allocating_init(sealing:)()
{
  sub_245753618();
  sub_245767A8C();
  SchemaXPCEnvelope.init(sealing:)();
  sub_245748A90();
}

void SchemaXPCEnvelope.init(sealing:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t);
  char *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  objc_class *v21;
  uint64_t v22;
  objc_super v23;

  sub_245759004();
  v2 = v1;
  v21 = (objc_class *)sub_245767B0C();
  v3 = sub_2457BAFF0();
  v20 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_2457535E8();
  sub_245748A50(&qword_2574984E0);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245759100();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  sub_245767B9C();
  v9 = (uint64_t *)&v0[OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema];
  *(_OWORD *)&v0[OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema] = xmmword_2457BD500;
  v22 = v2;
  sub_245765EEC(v2, (uint64_t)v6, &qword_2574984E0);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v6, 1, v7) == 1)
  {
    v10 = v0;
    sub_245765F18((uint64_t)v6, &qword_2574984E0);
    v11 = 0;
    v12 = 0xF000000000000000;
LABEL_5:
    v18 = *v9;
    v19 = v9[1];
    *v9 = v11;
    v9[1] = v12;
    sub_245750E8C(v18, v19);

    v23.receiver = v0;
    v23.super_class = v21;
    objc_msgSendSuper2(&v23, sel_init, v20);
    sub_245765F18(v22, &qword_2574984E0);
    sub_245767EC4();
    sub_245758FB4();
    return;
  }
  v13 = sub_245767CE4();
  v14(v13);
  v15 = v0;
  sub_2457BB014();
  sub_245759270(&qword_2574984F0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3B648], MEMORY[0x24BE3B658]);
  v16 = sub_245767B6C();
  if (!v6)
  {
    v11 = v16;
    v12 = v17;
    sub_245767C7C();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v0, v7);
    goto LABEL_5;
  }
  sub_245767C7C();
  sub_245767A70();
  swift_unexpectedError();
  __break(1u);
}

void SchemaXPCEnvelope.unseal()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_245767CBC();
  v2 = sub_2457BAFF0();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v3);
  sub_245748AD0();
  v4 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema);
  v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema + 8);
  if (v5 >> 60 == 15)
  {
    v6 = sub_245759100();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v0, 1, 1, v6);
  }
  else
  {
    v7 = *v4;
    sub_24575922C(*v4, *(_QWORD *)(v1 + OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema + 8));
    sub_245759270(&qword_2574984F8, (uint64_t (*)(uint64_t))MEMORY[0x24BE3B648], MEMORY[0x24BE3B670]);
    sub_245767B64();
    if (v2)
    {
      sub_245767A70();
      swift_unexpectedError();
      __break(1u);
    }
    else
    {
      sub_2457BB020();
      sub_245750E8C(v7, v5);
      v8 = sub_245759100();
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v0, 0, 1, v8);
      sub_245767BCC();
    }
  }
}

void static SchemaXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static SchemaXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_257498483 = a1;
  sub_2457512D4();
}

void static SchemaXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void SchemaXPCEnvelope.__allocating_init(coder:)()
{
  sub_245753618();
  sub_245767A8C();
  SchemaXPCEnvelope.init(coder:)();
  sub_245748A90();
}

id SchemaXPCEnvelope.init(coder:)()
{
  void *v0;
  char *v1;
  objc_class *v2;
  uint64_t *v3;
  char *v4;
  void *v5;
  id v6;
  __int128 v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  __int128 v12;
  objc_super v13;
  _OWORD v14[2];
  _BYTE v15[24];
  uint64_t v16;

  v2 = (objc_class *)sub_245767A98();
  v3 = (uint64_t *)&v1[OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema];
  *(_OWORD *)&v1[OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema] = xmmword_2457BD500;
  v4 = v1;
  v5 = (void *)sub_245767C2C();
  v6 = objc_msgSend(v0, sel_decodeObjectForKey_, v5);

  if (v6)
  {
    sub_2457BB3D4();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v14, 0, sizeof(v14));
  }
  sub_245765CC8((uint64_t)v14, (uint64_t)v15, &qword_2574984A8);
  if (!v16)
  {
    sub_245765F18((uint64_t)v15, &qword_2574984A8);
    goto LABEL_8;
  }
  if ((sub_245767CF0() & 1) == 0)
  {
LABEL_8:
    v7 = xmmword_2457BD500;
    goto LABEL_9;
  }
  v7 = v12;
LABEL_9:
  v8 = *v3;
  v9 = v3[1];
  *(_OWORD *)v3 = v7;
  sub_245750E8C(v8, v9);

  v13.receiver = v4;
  v13.super_class = v2;
  v10 = objc_msgSendSuper2(&v13, sel_init);

  return v10;
}

Swift::Void __swiftcall SchemaXPCEnvelope.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  void *v8;

  if (*(_QWORD *)(v1 + OBJC_IVAR____TtC4Sage17SchemaXPCEnvelope__schema + 8) >> 60 == 15)
  {
    v3 = 0;
  }
  else
  {
    v4 = sub_245767E18();
    sub_24575922C(v4, v5);
    sub_245767E18();
    v3 = sub_2457BAA74();
    v6 = sub_245767E18();
    sub_245750E8C(v6, v7);
  }
  v8 = (void *)sub_245767C2C();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v3, v8);
  swift_unknownObjectRelease();
  sub_245767AFC(v8);
}

void SchemaXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

uint64_t sub_24575A59C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document + 8));
  return v1;
}

void DocumentIdentifierXPCEnvelope.__allocating_init(sealing:)()
{
  uint64_t v0;

  sub_245753618();
  v0 = sub_245767A8C();
  DocumentIdentifierXPCEnvelope.init(sealing:)(v0);
  sub_245748A90();
}

uint64_t DocumentIdentifierXPCEnvelope.init(sealing:)(uint64_t a1)
{
  return sub_24575A614(a1, &OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document);
}

uint64_t sub_24575A614(uint64_t a1, _QWORD *a2)
{
  void *v2;
  objc_class *v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t result;
  uint64_t v17;
  objc_super v18;

  v4 = (objc_class *)sub_245767A98();
  sub_2457BAF90();
  sub_245759270(&qword_257498490, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C800], MEMORY[0x24BE3C810]);
  v5 = v2;
  v6 = sub_245767B6C();
  if (v2)
  {
    sub_245767A70();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v8 = (uint64_t *)&v5[*a2];
    *v8 = v6;
    v8[1] = v7;

    v18.receiver = v5;
    v18.super_class = v4;
    sub_245767E6C(v9, sel_init, v10, v11, v12, v13, v14, v15, v17, v18);
    sub_245767B14();
    return 0;
  }
  return result;
}

uint64_t DocumentIdentifierXPCEnvelope.unseal()()
{
  return sub_24575A6F4(&OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document);
}

uint64_t sub_24575A6F4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t);
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  sub_2457BAF90();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BE3C800];
  v4 = (uint64_t *)(v1 + *a1);
  v5 = *v4;
  v6 = v4[1];
  sub_24575922C(*v4, v6);
  sub_245759270(&qword_2574984A0, v3, MEMORY[0x24BE3C828]);
  sub_245767E38();
  sub_245767B64();
  result = sub_24574E14C(v5, v6);
  if (a1)
  {
    sub_245767A70();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void static DocumentIdentifierXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static DocumentIdentifierXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_257498484 = a1;
  sub_2457512D4();
}

void static DocumentIdentifierXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void DocumentIdentifierXPCEnvelope.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  v0 = (void *)sub_245767A8C();
  DocumentIdentifierXPCEnvelope.init(coder:)(v0);
  sub_245748A90();
}

id DocumentIdentifierXPCEnvelope.init(coder:)(void *a1)
{
  return sub_245767CA0(a1, 0x6E656D75636F645FLL, 116, &OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document);
}

Swift::Void __swiftcall DocumentIdentifierXPCEnvelope.encode(with:)(NSCoder with)
{
  sub_24575D44C(with.super.isa, &OBJC_IVAR____TtC4Sage29DocumentIdentifierXPCEnvelope__document);
}

void DocumentIdentifierXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

uint64_t sub_24575A998()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage31DocumentRegistrationXPCResponse__registration);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage31DocumentRegistrationXPCResponse__registration + 8));
  return v1;
}

void DocumentRegistrationXPCResponse.__allocating_init(sealing:)()
{
  sub_245753618();
  sub_245767A8C();
  DocumentRegistrationXPCResponse.init(sealing:)();
  sub_245748A90();
}

void DocumentRegistrationXPCResponse.init(sealing:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  char *v16;
  void (*v17)(void *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;

  sub_245759004();
  v5 = v4;
  v25 = sub_245767B0C();
  v24 = sub_245767BB4();
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2457BAF18();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v9);
  sub_24575136C();
  v10 = sub_2457BAF78();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = sub_245767C60();
  v13 = type metadata accessor for DocumentRegistrationEnvelope(v12);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v14);
  sub_2457535E8();
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16);
  v26 = v5;
  sub_245767E58((uint64_t)v0, v5, v15);
  v16 = v0;
  sub_2457BAF24();
  sub_24575E574(v1, v2);
  sub_2457BAF0C();
  v17 = *(void (**)(void *, uint64_t))(v11 + 8);
  v17(v0, v10);
  (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v2 + *(int *)(v13 + 20), v8, v24);
  sub_245759270(&qword_257498508, type metadata accessor for DocumentRegistrationEnvelope, (uint64_t)&unk_2457BE588);
  v18 = sub_245767B6C();
  if (v5)
  {
    sub_24575E898(v2, type metadata accessor for DocumentRegistrationEnvelope);
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v20 = v18;
    v21 = v19;
    sub_24575E898(v2, type metadata accessor for DocumentRegistrationEnvelope);
    v22 = (uint64_t *)&v16[OBJC_IVAR____TtC4Sage31DocumentRegistrationXPCResponse__registration];
    *v22 = v20;
    v22[1] = v21;

    v27 = v16;
    v28 = v25;
    sub_245767E74(v23, sel_init);
    v17((void *)v26, v10);
    sub_245767EC4();
    sub_245758FB4();
  }
}

uint64_t type metadata accessor for DocumentRegistrationEnvelope(uint64_t a1)
{
  return sub_24574E0C8(a1, qword_2574985D0);
}

void DocumentRegistrationXPCResponse.unseal()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;

  v0 = sub_245767CBC();
  v1 = type metadata accessor for DocumentRegistrationEnvelope(v0);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v2);
  sub_24575136C();
  sub_245759270(&qword_257498518, v3, (uint64_t)&unk_2457BE560);
  sub_245767B64();
  if (v1)
  {
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v4 = sub_24575AC90();
    sub_245767D40(v4, type metadata accessor for DocumentRegistrationEnvelope);
    sub_245767BCC();
  }
}

uint64_t sub_24575AC90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v14;

  v1 = sub_2457BAF90();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_2457BAF60();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2457633E0(v0, (uint64_t)v11, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v11, v1);
    type metadata accessor for DocumentRegistrationEnvelope(0);
    sub_2457BAF6C();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_2457BAF48();
    type metadata accessor for DocumentRegistrationEnvelope(0);
    sub_2457BAF00();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
}

void static DocumentRegistrationXPCResponse.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static DocumentRegistrationXPCResponse.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_257498485 = a1;
  sub_2457512D4();
}

void static DocumentRegistrationXPCResponse.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void DocumentRegistrationXPCResponse.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  v0 = (void *)sub_245767A8C();
  DocumentRegistrationXPCResponse.init(coder:)(v0);
  sub_245748A90();
}

id DocumentRegistrationXPCResponse.init(coder:)(void *a1)
{
  return sub_24575981C(a1, 0x727473696765725FLL, 0xED00006E6F697461, &OBJC_IVAR____TtC4Sage31DocumentRegistrationXPCResponse__registration);
}

Swift::Void __swiftcall DocumentRegistrationXPCResponse.encode(with:)(NSCoder with)
{
  sub_24575BC08(with.super.isa);
}

void DocumentRegistrationXPCResponse.init()()
{
  sub_245767A80();
  __break(1u);
}

uint64_t sub_24575B014()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage23ChatMessagesXPCEnvelope__messages);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage23ChatMessagesXPCEnvelope__messages + 8));
  return v1;
}

void sub_24575B050()
{
  void *v0;
  objc_class *v1;
  id v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  objc_super v13;

  v1 = (objc_class *)sub_245767A98();
  sub_2457BB0E0();
  sub_245759270(&qword_257498768, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A8B0], MEMORY[0x24BE7A8C0]);
  v2 = v0;
  v3 = sub_245767B6C();
  if (v0)
  {
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_245767E7C(v3, v4, OBJC_IVAR____TtC4Sage23ChatMessagesXPCEnvelope__messages);
    v13.receiver = v2;
    v13.super_class = v1;
    sub_245767E6C(v5, sel_init, v6, v7, v8, v9, v10, v11, v12, v13);
    sub_245767B14();
    sub_245767CC8();
  }
}

uint64_t ChatMessagesXPCEnvelope.unseal()()
{
  uint64_t v0;
  uint64_t result;

  sub_245767CBC();
  v0 = sub_2457BB0E0();
  sub_245759270(&qword_257498528, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A8B0], MEMORY[0x24BE7A8C8]);
  sub_245767E24();
  result = sub_245767B64();
  if (v0)
  {
    sub_245767A70();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void static ChatMessagesXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static ChatMessagesXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_257498486 = a1;
  sub_2457512D4();
}

void static ChatMessagesXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void ChatMessagesXPCEnvelope.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  v0 = (void *)sub_245767A8C();
  ChatMessagesXPCEnvelope.init(coder:)(v0);
  sub_245748A90();
}

id ChatMessagesXPCEnvelope.init(coder:)(void *a1)
{
  return sub_245767CA0(a1, 0x6567617373656D5FLL, 115, &OBJC_IVAR____TtC4Sage23ChatMessagesXPCEnvelope__messages);
}

Swift::Void __swiftcall ChatMessagesXPCEnvelope.encode(with:)(NSCoder with)
{
  sub_24575BC08(with.super.isa);
}

void ChatMessagesXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

uint64_t sub_24575B36C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage29SamplingParametersXPCEnvelope__parameters);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage29SamplingParametersXPCEnvelope__parameters + 8));
  return v1;
}

void sub_24575B3A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t v5;
  id v6;
  objc_super v7;
  _BYTE v8[130];
  _BYTE v9[136];

  sub_245759004();
  v4 = (objc_class *)sub_245767D28();
  sub_2457BACB4();
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v5);
  sub_2457535E8();
  sub_245767DE0(v2, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v6 = v1;
  sub_24575B4A8(v2, (uint64_t)v9);
  memcpy(v8, v9, sizeof(v8));
  sub_245765EB0();
  sub_245767B6C();
  if (v1)
  {
    sub_24575E85C((uint64_t)v9);
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_24575E85C((uint64_t)v9);
    sub_245767E4C(OBJC_IVAR____TtC4Sage29SamplingParametersXPCEnvelope__parameters);
    v7.receiver = v6;
    v7.super_class = v4;
    objc_msgSendSuper2(&v7, sel_init);
    sub_245767ED0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_245758FB4();
  }
}

uint64_t sub_24575B4A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  int v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t result;
  char v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char v47;
  _BYTE v48[7];
  char v49;
  _BYTE v50[7];
  char v51;
  _BYTE v52[7];
  char v53;
  _BYTE v54[7];
  char v55;
  _BYTE v56[7];
  char v57;
  _BYTE v58[7];
  _BYTE v59[7];
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;
  char v66;

  v4 = sub_2457BAC00();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v43 - v9;
  v11 = sub_245748A50(&qword_257498760);
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v12);
  v16 = (char *)&v43 - v15;
  sub_2457BACA8();
  sub_245765EEC((uint64_t)v16, (uint64_t)v14, &qword_257498760);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v14, 1, v4) == 1)
  {
    v46 = 0;
    v45 = 255;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v10, v14, v4);
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v10, v4);
    v46 = sub_245761C4C((uint64_t)v8);
    v45 = v17;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_245765F18((uint64_t)v16, &qword_257498760);
  v44 = sub_2457BAC24();
  v66 = v18 & 1;
  v19 = sub_2457BAC6C();
  v65 = v20 & 1;
  v21 = sub_2457BAC48();
  v64 = v22 & 1;
  v23 = sub_2457BAC54();
  v63 = v24 & 1;
  v25 = sub_2457BAC60();
  v26 = sub_2457BAC18();
  v62 = v27 & 1;
  v28 = sub_2457BAC90();
  v61 = v29 & 1;
  v30 = sub_2457BAC78();
  v60 = v31 & 1;
  v32 = sub_2457BAC30();
  v33 = sub_2457BACB4();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(a1, v33);
  v35 = v66;
  v57 = v65;
  v55 = v64;
  v53 = v63;
  v51 = v62;
  v49 = v61;
  v47 = v60;
  *(_QWORD *)a2 = v46;
  *(_BYTE *)(a2 + 8) = v45;
  v36 = *(_DWORD *)v59;
  *(_DWORD *)(a2 + 12) = *(_DWORD *)&v59[3];
  *(_DWORD *)(a2 + 9) = v36;
  *(_QWORD *)(a2 + 16) = v44;
  *(_BYTE *)(a2 + 24) = v35;
  v37 = *(_DWORD *)v58;
  *(_DWORD *)(a2 + 28) = *(_DWORD *)&v58[3];
  *(_DWORD *)(a2 + 25) = v37;
  *(_QWORD *)(a2 + 32) = v19;
  *(_BYTE *)(a2 + 40) = v57;
  v38 = *(_DWORD *)v56;
  *(_DWORD *)(a2 + 44) = *(_DWORD *)&v56[3];
  *(_DWORD *)(a2 + 41) = v38;
  *(_QWORD *)(a2 + 48) = v21;
  *(_BYTE *)(a2 + 56) = v55;
  v39 = *(_DWORD *)v54;
  *(_DWORD *)(a2 + 60) = *(_DWORD *)&v54[3];
  *(_DWORD *)(a2 + 57) = v39;
  *(_QWORD *)(a2 + 64) = v23;
  *(_BYTE *)(a2 + 72) = v53;
  v40 = *(_DWORD *)v52;
  *(_DWORD *)(a2 + 76) = *(_DWORD *)&v52[3];
  *(_DWORD *)(a2 + 73) = v40;
  *(_QWORD *)(a2 + 80) = v25;
  *(_QWORD *)(a2 + 88) = v26;
  *(_BYTE *)(a2 + 96) = v51;
  v41 = *(_DWORD *)v50;
  *(_DWORD *)(a2 + 100) = *(_DWORD *)&v50[3];
  *(_DWORD *)(a2 + 97) = v41;
  *(_QWORD *)(a2 + 104) = v28;
  *(_BYTE *)(a2 + 112) = v49;
  v42 = *(_DWORD *)v48;
  *(_DWORD *)(a2 + 116) = *(_DWORD *)&v48[3];
  *(_DWORD *)(a2 + 113) = v42;
  *(_QWORD *)(a2 + 120) = v30;
  *(_BYTE *)(a2 + 128) = v47;
  *(_BYTE *)(a2 + 129) = v32;
  return result;
}

uint64_t SamplingParametersXPCEnvelope.unseal()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;
  _BYTE __src[130];
  _BYTE __dst[136];

  v3 = *(_QWORD *)(v1 + OBJC_IVAR____TtC4Sage29SamplingParametersXPCEnvelope__parameters + 8);
  sub_24575E820();
  sub_245767B64();
  if (v3)
  {
    sub_245767A70();
    result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    memcpy(__dst, __src, 0x82uLL);
    sub_24575B880(a1);
    return sub_24575E85C((uint64_t)__dst);
  }
  return result;
}

void sub_24575B880(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD v10[2];
  uint64_t v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  _BYTE v20[16];
  uint64_t v21;
  unsigned __int8 v22;
  uint64_t v23[2];
  uint64_t v24;
  char v25;

  v19 = a1;
  v2 = sub_245748A50(&qword_257498760);
  v3 = MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v3);
  v7 = (char *)v10 - v6;
  sub_245765CC8(v1, (uint64_t)v20, &qword_2574986C8);
  sub_245765CC8((uint64_t)v20, (uint64_t)&v21, &qword_2574986C8);
  if (v22 == 255)
  {
    v8 = 1;
  }
  else
  {
    sub_245765FA4(&v21, (uint64_t)v23);
    sub_245765FA4(v23, (uint64_t)&v24);
    if (v25)
    {
      if (v25 == 1)
        sub_2457BABD0();
      else
        sub_2457BABE8();
    }
    else
    {
      sub_2457BABC4();
    }
    v8 = 0;
  }
  v9 = sub_2457BAC00();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, v8, 1, v9);
  v17 = *(_QWORD *)(v1 + 16);
  v16 = *(unsigned __int8 *)(v1 + 24);
  v15 = *(_QWORD *)(v1 + 32);
  v14 = *(unsigned __int8 *)(v1 + 40);
  v13 = *(_QWORD *)(v1 + 48);
  v12 = *(unsigned __int8 *)(v1 + 56);
  v11 = *(_QWORD *)(v1 + 64);
  v10[1] = *(unsigned __int8 *)(v1 + 128);
  v18 = *(unsigned __int8 *)(v1 + 129);
  sub_245765EEC((uint64_t)v7, (uint64_t)v5, &qword_257498760);
  sub_245765CA0(v1);
  sub_2457BAC9C();
  sub_2457BAC84();
  sub_2457BAC0C();
  sub_2457BAC3C();
  sub_245765F18((uint64_t)v7, &qword_257498760);
}

void static SamplingParametersXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static SamplingParametersXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_257498487 = a1;
  sub_2457512D4();
}

void static SamplingParametersXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void SamplingParametersXPCEnvelope.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  v0 = (void *)sub_245767A8C();
  SamplingParametersXPCEnvelope.init(coder:)(v0);
  sub_245748A90();
}

id SamplingParametersXPCEnvelope.init(coder:)(void *a1)
{
  return sub_245767B74(a1, 0x74656D617261705FLL, 7565925, &OBJC_IVAR____TtC4Sage29SamplingParametersXPCEnvelope__parameters);
}

Swift::Void __swiftcall SamplingParametersXPCEnvelope.encode(with:)(NSCoder with)
{
  sub_24575BC08(with.super.isa);
}

void sub_24575BC08(void *a1)
{
  void *v2;
  void *v3;

  v2 = (void *)sub_2457BAA74();
  v3 = (void *)sub_245767E60();
  objc_msgSend(a1, sel_encodeObject_forKey_, v2, v3);

  sub_245767AFC(v3);
}

void SamplingParametersXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

uint64_t sub_24575BD88@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url;
  swift_beginAccess();
  v4 = sub_2457BAA68();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_24575BE6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url;
  swift_beginAccess();
  v4 = sub_2457BAA68();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_24575BEE4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__bookmark);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__bookmark + 8));
  return v1;
}

void DocumentXPCEnvelope.__allocating_init(sealing:)()
{
  sub_245753618();
  sub_245767A8C();
  DocumentXPCEnvelope.init(sealing:)();
  sub_245748A90();
}

void DocumentXPCEnvelope.init(sealing:)()
{
  void *v0;
  uint64_t v1;
  objc_class *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  objc_super v13;

  v2 = (objc_class *)sub_245767AA8();
  v3 = sub_245767BB4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_245748AD0();
  v5 = v0;
  sub_2457BAEDC();
  sub_245767E58((uint64_t)&v5[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url], v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_2457BAEDC();
  v6 = (void *)sub_2457BAA44();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  v7 = (void *)MEMORY[0x24953AE98](v6);

  if (v7)
  {
    v8 = sub_2457BAA8C();
    v10 = v9;

    v11 = (uint64_t *)&v5[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__bookmark];
    *v11 = v8;
    v11[1] = v10;

    v13.receiver = v5;
    v13.super_class = v2;
    objc_msgSendSuper2(&v13, sel_init);
    v12 = sub_2457BAEF4();
    sub_245767B7C(v12);
  }
  else
  {
    __break(1u);
  }
}

uint64_t DocumentXPCEnvelope.unseal()()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void (*v4)(uint64_t);
  uint64_t v5;
  unint64_t v6;
  void *v7;

  sub_245759004();
  sub_245767BB4();
  sub_245767C1C();
  MEMORY[0x24BDAC7A8](v1);
  sub_245767B9C();
  sub_245756E1C();
  sub_245767DB8();
  v2 = (void *)sub_2457BAA44();
  v3 = sub_245767CE4();
  v4(v3);
  v5 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__bookmark);
  v6 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__bookmark + 8);
  sub_24575922C(v5, v6);
  v7 = (void *)sub_2457BAA74();
  sub_24574E14C(v5, v6);
  MEMORY[0x24953AE8C](v2, v7);

  sub_245767DB8();
  return sub_2457BAEE8();
}

void static DocumentXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static DocumentXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_257498488 = a1;
  sub_2457512D4();
}

void static DocumentXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void DocumentXPCEnvelope.__allocating_init(coder:)()
{
  sub_245753618();
  sub_245767A8C();
  DocumentXPCEnvelope.init(coder:)();
  sub_245748A90();
}

void DocumentXPCEnvelope.init(coder:)()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  objc_class *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char *v16;
  void *v17;
  void (*v18)(char *, uint64_t);
  uint64_t v19;
  uint64_t v20;
  objc_super v21[2];
  __int128 v22;
  __int128 v23;
  _BYTE v24[24];
  uint64_t v25;

  sub_245759004();
  v4 = (objc_class *)sub_245767D28();
  sub_245748A50(&qword_257498550);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_245767BB4();
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v9);
  sub_245767CF8();
  v10 = v1;
  v11 = (void *)sub_245767DC8();
  v12 = sub_245767DA8();

  if (v12)
  {
    sub_245767EA0();
    v13 = swift_unknownObjectRelease();
  }
  else
  {
    v22 = 0u;
    v23 = 0u;
  }
  sub_245767E94(v13, v14, &qword_2574984A8);
  if (!v25)
  {
    sub_245765F18((uint64_t)v24, &qword_2574984A8);
    sub_245767DE8((uint64_t)v7, 1);
    goto LABEL_9;
  }
  v15 = sub_245767CF0();
  sub_245767DE8((uint64_t)v7, v15 ^ 1u);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v7, 1, v8) == 1)
  {
LABEL_9:

    sub_245765F18((uint64_t)v7, &qword_257498550);
LABEL_17:
    swift_deallocPartialClassInstance();
    goto LABEL_18;
  }
  sub_245767DE0(v2, (uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
  v16 = &v10[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url];
  sub_245767DE0((uint64_t)&v10[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url], v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v17 = (void *)sub_245767BDC();
  v18 = (void (*)(char *, uint64_t))sub_245767DA8();

  if (v18)
  {
    sub_245767EA0();
    swift_unknownObjectRelease();
    v19 = sub_245767D98();
  }
  else
  {
    v19 = sub_245767D98();
    v22 = 0u;
    v23 = 0u;
  }
  sub_245767E94(v19, v20, &qword_2574984A8);
  if (!v25)
  {

    sub_245765F18((uint64_t)v24, &qword_2574984A8);
LABEL_16:
    v18(v16, v8);

    goto LABEL_17;
  }
  if ((sub_245767CF0() & 1) == 0)
  {

    goto LABEL_16;
  }
  *(objc_super *)&v10[OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__bookmark] = v21[1];

  v21[0].receiver = v10;
  v21[0].super_class = v4;
  -[objc_super init](v21, sel_init);

LABEL_18:
  sub_245758FB4();
}

Swift::Void __swiftcall DocumentXPCEnvelope.encode(with:)(NSCoder with)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  unint64_t v9;
  void *v10;
  uint64_t v11;
  unint64_t v12;
  void *v13;

  v3 = sub_245767BB4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_245767B9C();
  v5 = v1 + OBJC_IVAR____TtC4Sage19DocumentXPCEnvelope__url;
  sub_245756E1C();
  sub_245767DE0(v1, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  v6 = (void *)sub_2457BAA44();
  sub_245767ED0(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  v7 = (void *)sub_245767DC8();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v6, v7);

  v8 = sub_245767CE4();
  sub_24575922C(v8, v9);
  sub_245767CE4();
  v10 = (void *)sub_2457BAA74();
  v11 = sub_245767CE4();
  sub_24574E14C(v11, v12);
  v13 = (void *)sub_245767BDC();
  -[objc_class encodeObject:forKey:](with.super.isa, sel_encodeObject_forKey_, v10, v13);

  sub_245767BCC();
}

void DocumentXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

uint64_t sub_24575C6BC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration + 8));
  return v1;
}

void SessionConfigurationXPCEnvelope.__allocating_init(sealing:)()
{
  sub_245753618();
  sub_245767A8C();
  SessionConfigurationXPCEnvelope.init(sealing:)();
  sub_245748A90();
}

void SessionConfigurationXPCEnvelope.init(sealing:)()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  double *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  __int128 v16;
  __int128 v17;
  double v18;
  char *v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  objc_class *v31;
  objc_super v32;
  _OWORD v33[3];
  uint64_t v34;

  sub_245759004();
  v31 = (objc_class *)sub_245767AA8();
  v2 = sub_2457BAD44();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_245767C60();
  v4 = (int *)type metadata accessor for SessionConfiguration();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (double *)((char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = type metadata accessor for SessionConfigurationEnvelope(0);
  sub_24574A084();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v30 - v13;
  v30 = v0;
  sub_2457633E0(v0, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SessionConfiguration);
  sub_245767E58((uint64_t)v1, (uint64_t)v7 + v4[5], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
  v15 = v1;
  sub_24575D590((uint64_t)v1, (uint64_t)v33);
  v16 = v33[2];
  *((_QWORD *)v12 + 6) = v34;
  v17 = v33[0];
  *((_OWORD *)v12 + 1) = v33[1];
  *((_OWORD *)v12 + 2) = v16;
  *(_OWORD *)v12 = v17;
  v18 = *v7;
  if (*((_BYTE *)v7 + 8))
    v18 = 1.79769313e308;
  *(double *)&v12[*(int *)(v8 + 28)] = v18;
  v19 = (char *)v7 + v4[6];
  v20 = &v12[*(int *)(v8 + 24)];
  v21 = sub_245767D20();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v20, v19, v21);
  v22 = (char *)v7 + v4[7];
  v24 = *(_QWORD *)v22;
  v23 = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  sub_24575E898((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for SessionConfiguration);
  *((_QWORD *)v12 + 7) = v24;
  *((_QWORD *)v12 + 8) = v23;
  sub_2457633B4((uint64_t)v12, (uint64_t)v14, type metadata accessor for SessionConfigurationEnvelope);
  sub_245759270(&qword_257498558, type metadata accessor for SessionConfigurationEnvelope, (uint64_t)&unk_2457BE510);
  sub_245767E18();
  v25 = sub_245767B6C();
  if (v8)
  {
    sub_245767D40(v25, type metadata accessor for SessionConfigurationEnvelope);
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v27 = v25;
    v28 = v26;
    sub_245767D40(v25, type metadata accessor for SessionConfigurationEnvelope);
    v29 = (uint64_t *)&v15[OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration];
    *v29 = v27;
    v29[1] = v28;

    v32.receiver = v15;
    v32.super_class = v31;
    objc_msgSendSuper2(&v32, sel_init);
    sub_24575E898(v30, (uint64_t (*)(_QWORD))type metadata accessor for SessionConfiguration);
    sub_245767EC4();
    sub_245758FB4();
  }
}

void SessionConfigurationXPCEnvelope.unseal()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v2 = sub_245767CBC();
  v3 = type metadata accessor for SessionConfigurationEnvelope(v2);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v4);
  sub_24575136C();
  sub_245767AE8(OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration);
  sub_245767D38(&qword_257498568, v5, (uint64_t)&unk_2457BE4E8);
  sub_245767E38();
  sub_245767B64();
  sub_245767BF8();
  if (type metadata accessor for SessionConfigurationEnvelope)
  {
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)(v1 + *(int *)(v3 + 28));
    v7 = (int *)type metadata accessor for SessionConfiguration();
    sub_24575D844(v0 + v7[5]);
    v9 = *(_QWORD *)(v1 + 56);
    v8 = *(_QWORD *)(v1 + 64);
    v10 = v1 + *(int *)(v3 + 24);
    v11 = v0 + v7[6];
    v12 = sub_245767D20();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v11, v10, v12);
    *(_QWORD *)v0 = v6;
    *(_BYTE *)(v0 + 8) = 0;
    v13 = (_QWORD *)(v0 + v7[7]);
    *v13 = v9;
    v13[1] = v8;
    v14 = swift_bridgeObjectRetain();
    sub_245767D40(v14, type metadata accessor for SessionConfigurationEnvelope);
    sub_245767AD4();
  }
}

void static SessionConfigurationXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static SessionConfigurationXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_257498489 = a1;
  sub_2457512D4();
}

void static SessionConfigurationXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void SessionConfigurationXPCEnvelope.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  v0 = (void *)sub_245767A8C();
  SessionConfigurationXPCEnvelope.init(coder:)(v0);
  sub_245748A90();
}

id SessionConfigurationXPCEnvelope.init(coder:)(void *a1)
{
  return sub_24575981C(a1, 0x756769666E6F635FLL, 0xEE006E6F69746172, &OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration);
}

Swift::Void __swiftcall SessionConfigurationXPCEnvelope.encode(with:)(NSCoder with)
{
  sub_24575D44C(with.super.isa, &OBJC_IVAR____TtC4Sage31SessionConfigurationXPCEnvelope__configuration);
}

void SessionConfigurationXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

uint64_t sub_24575CCA8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event + 8));
  return v1;
}

void CompletePromptResponseElementXPCEnvelope.__allocating_init(sealing:)()
{
  sub_245753618();
  sub_245767A8C();
  CompletePromptResponseElementXPCEnvelope.init(sealing:)();
  sub_245748A90();
}

void CompletePromptResponseElementXPCEnvelope.init(sealing:)()
{
  uint64_t v0;
  void *v1;
  objc_class *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  id v5;
  uint64_t v6;
  objc_super v7;
  uint64_t v8;

  sub_245759004();
  v2 = (objc_class *)sub_245767A98();
  sub_2457BAD8C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB8570];
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v4);
  sub_245767CF8();
  sub_24575E8C0(v0, (uint64_t)&v8);
  v5 = v1;
  sub_2457BAD80();
  sub_245759270(&qword_257498570, v3, MEMORY[0x24BEB8578]);
  sub_245767B6C();
  sub_245767D68();
  if (v1)
  {
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_245767E4C(OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event);
    v7.receiver = v5;
    v7.super_class = v2;
    objc_msgSendSuper2(&v7, sel_init);
    v6 = sub_245767A8C();
    sub_245749564(v6);
    sub_245767EC4();
    sub_245758FB4();
  }
}

void CompletePromptResponseElementXPCEnvelope.unseal()()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;

  sub_2457BAD8C();
  v0 = MEMORY[0x24BEB8570];
  sub_245767C1C();
  MEMORY[0x24BDAC7A8](v1);
  sub_24575136C();
  sub_245767AE8(OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event);
  sub_245767D38(&qword_257498580, v2, MEMORY[0x24BEB8580]);
  sub_245767AB4();
  sub_245767BF8();
  if (v0)
  {
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_2457BAD74();
    sub_245767BBC();
    sub_245767AD4();
  }
}

void static CompletePromptResponseElementXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static CompletePromptResponseElementXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_25749848A = a1;
  sub_2457512D4();
}

void static CompletePromptResponseElementXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void CompletePromptResponseElementXPCEnvelope.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  v0 = (void *)sub_245767A8C();
  CompletePromptResponseElementXPCEnvelope.init(coder:)(v0);
  sub_245748A90();
}

id CompletePromptResponseElementXPCEnvelope.init(coder:)(void *a1)
{
  return sub_24575981C(a1, 0x746E6576655FLL, 0xE600000000000000, &OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event);
}

Swift::Void __swiftcall CompletePromptResponseElementXPCEnvelope.encode(with:)(NSCoder with)
{
  sub_24575D44C(with.super.isa, &OBJC_IVAR____TtC4Sage40CompletePromptResponseElementXPCEnvelope__event);
}

void CompletePromptResponseElementXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

id sub_24575D080(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;

  v3 = a3();
  v5 = v4;
  v6 = (void *)sub_2457BAA74();
  sub_24574E14C(v3, v5);
  return v6;
}

uint64_t sub_24575D0C8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion);
  sub_24575922C(v1, *(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion + 8));
  return v1;
}

uint64_t sub_24575D110(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;

  v5 = (uint64_t *)(v4 + *a3);
  v6 = *v5;
  v7 = v5[1];
  *v5 = a1;
  v5[1] = a2;
  return a4(v6, v7);
}

void CompletePromptResponseXPCEnvelope.__allocating_init(sealing:)()
{
  sub_245753618();
  sub_245767A8C();
  CompletePromptResponseXPCEnvelope.init(sealing:)();
  sub_245748A90();
}

void CompletePromptResponseXPCEnvelope.init(sealing:)()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;

  sub_245759004();
  sub_245767A98();
  sub_2457BABB8();
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v2);
  sub_245767C44();
  v3 = sub_2457BAD68();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x24BEB84D8];
  MEMORY[0x24BDAC7A8](v3);
  sub_245767B2C();
  v0;
  sub_2457BAD5C();
  sub_245759270(&qword_257498588, v4, MEMORY[0x24BEB84E0]);
  sub_245767B6C();
  sub_245767B54();
  if (v0)
  {
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_245767E88(OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion);
    sub_245767E74(v5, sel_init);
    sub_245767B90(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    sub_245758FB4();
  }
}

void CompletePromptResponseXPCEnvelope.unseal()()
{
  uint64_t (*v0)(void);
  uint64_t v1;
  uint64_t v2;

  sub_2457BAD68();
  v0 = MEMORY[0x24BEB84D8];
  sub_245767C1C();
  MEMORY[0x24BDAC7A8](v1);
  sub_24575136C();
  sub_245767AE8(OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion);
  sub_245767D38((unint64_t *)&unk_257498598, v2, MEMORY[0x24BEB84E8]);
  sub_245767AB4();
  sub_245767BF8();
  if (v0)
  {
    sub_245767A70();
    swift_unexpectedError();
    __break(1u);
  }
  else
  {
    sub_2457BAD50();
    sub_245767BBC();
    sub_245767AD4();
  }
}

void static CompletePromptResponseXPCEnvelope.supportsSecureCoding.getter()
{
  sub_245767A5C();
  sub_2457512D4();
}

void static CompletePromptResponseXPCEnvelope.supportsSecureCoding.setter(char a1)
{
  sub_245767A48();
  byte_25749848B = a1;
  sub_2457512D4();
}

void static CompletePromptResponseXPCEnvelope.supportsSecureCoding.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void CompletePromptResponseXPCEnvelope.__allocating_init(coder:)()
{
  void *v0;

  sub_245753618();
  v0 = (void *)sub_245767A8C();
  CompletePromptResponseXPCEnvelope.init(coder:)(v0);
  sub_245748A90();
}

id CompletePromptResponseXPCEnvelope.init(coder:)(void *a1)
{
  return sub_245767B74(a1, 0x74656C706D6F635FLL, 7237481, &OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion);
}

Swift::Void __swiftcall CompletePromptResponseXPCEnvelope.encode(with:)(NSCoder with)
{
  sub_245767CDC(with.super.isa, &OBJC_IVAR____TtC4Sage33CompletePromptResponseXPCEnvelope__completion);
}

void sub_24575D44C(void *a1, uint64_t *a2)
{
  void *v3;
  id v4;

  sub_245767CA8(*a2);
  v3 = (void *)sub_2457BAA74();
  sub_245767EB8();
  v4 = (id)sub_245767E60();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

}

void CompletePromptResponseXPCEnvelope.init()()
{
  sub_245767A80();
  __break(1u);
}

id _s4Sage37DocumentResourceIdentifierXPCEnvelopeCfD_0()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_245767B0C();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_24575D590@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t result;
  char v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(char *, char *, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char v51;

  v4 = sub_2457BAB40();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v49 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v38 - v8;
  v10 = sub_2457BAB1C();
  v44 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v43 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_2457BACF0();
  v45 = v13;
  v14 = sub_2457BAD20();
  v15 = *(_QWORD *)(v14 + 16);
  if (v15)
  {
    v39 = v10;
    v40 = v12;
    v41 = a1;
    v42 = a2;
    v50 = MEMORY[0x24BEE4AF8];
    sub_245774000(0, v15, 0);
    v16 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
    v38 = v14;
    v17 = v14 + v16;
    v18 = *(_QWORD *)(v5 + 72);
    v46 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v47 = v18;
    v48 = v5;
    do
    {
      v19 = v46;
      v46(v9, (char *)v17, v4);
      v20 = v49;
      v19(v49, v9, v4);
      v21 = sub_2457BAB28();
      v23 = v22;
      v24 = *(void (**)(char *, uint64_t))(v5 + 8);
      v24(v20, v4);
      v24(v9, v4);
      v25 = v50;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_245774000(0, *(_QWORD *)(v25 + 16) + 1, 1);
        v25 = v50;
      }
      v27 = *(_QWORD *)(v25 + 16);
      v26 = *(_QWORD *)(v25 + 24);
      if (v27 >= v26 >> 1)
      {
        sub_245774000(v26 > 1, v27 + 1, 1);
        v25 = v50;
      }
      *(_QWORD *)(v25 + 16) = v27 + 1;
      v28 = v25 + 16 * v27;
      *(_QWORD *)(v28 + 32) = v21;
      *(_QWORD *)(v28 + 40) = v23;
      v5 = v48;
      v17 += v47;
      --v15;
    }
    while (v15);
    swift_bridgeObjectRelease();
    a1 = v41;
    a2 = v42;
    v10 = v39;
    v12 = v40;
  }
  else
  {
    swift_bridgeObjectRelease();
    v25 = MEMORY[0x24BEE4AF8];
  }
  v51 = sub_2457BAD14() & 1;
  v29 = v43;
  sub_2457BACFC();
  (*(void (**)(char *, uint64_t))(v44 + 8))(v29, v10);
  v30 = sub_2457BAD38();
  v32 = v31;
  v33 = sub_2457BAD08();
  v34 = sub_2457BAD44();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 8))(a1, v34);
  v36 = v51;
  v37 = v45;
  *(_QWORD *)a2 = v12;
  *(_QWORD *)(a2 + 8) = v37;
  *(_QWORD *)(a2 + 16) = v25;
  *(_BYTE *)(a2 + 24) = v36;
  *(_QWORD *)(a2 + 32) = v30;
  *(_QWORD *)(a2 + 40) = v32;
  *(_QWORD *)(a2 + 48) = v33;
  return result;
}

uint64_t sub_24575D844@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  _QWORD v20[6];
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  v4 = sub_2457BAB40();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2457BAB1C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = *v1;
  v9 = v1[1];
  v11 = v1[4];
  v12 = v1[5];
  v20[5] = v11;
  v13 = v2[2];
  v22 = v13;
  v14 = *(_QWORD *)(v13 + 16);
  if (v14)
  {
    v20[3] = v10;
    v20[4] = a1;
    v20[2] = v9;
    swift_bridgeObjectRetain();
    v20[1] = v12;
    swift_bridgeObjectRetain();
    sub_245765F54((uint64_t)&v22);
    v21 = MEMORY[0x24BEE4AF8];
    sub_245774034(0, v14, 0);
    v15 = v21;
    v16 = v13 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2457BAB34();
      v21 = v15;
      v18 = *(_QWORD *)(v15 + 16);
      v17 = *(_QWORD *)(v15 + 24);
      if (v18 >= v17 >> 1)
      {
        sub_245774034(v17 > 1, v18 + 1, 1);
        v15 = v21;
      }
      v16 += 16;
      *(_QWORD *)(v15 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v15+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v18, v7, v4);
      --v14;
    }
    while (v14);
    sub_245765F7C((uint64_t)&v22);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  sub_2457BAB10();
  return sub_2457BACE4();
}

uint64_t sub_24575DA54(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;

  v3 = *(_OWORD *)(v1 + 16);
  v5[0] = *(_OWORD *)v1;
  v5[1] = v3;
  v5[2] = *(_OWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 48);
  sub_245764EB0((uint64_t)v5);
  sub_2457642DC(a1);
  sub_245764EF8((uint64_t)v5);
  swift_bridgeObjectRetain();
  sub_2457BB1C4();
  swift_bridgeObjectRelease();
  type metadata accessor for SessionConfigurationEnvelope(0);
  sub_2457BB0D4();
  sub_245759270(&qword_2574986B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A858], MEMORY[0x24BE7A870]);
  sub_2457BB188();
  return sub_2457BB758();
}

BOOL sub_24575DB48(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  _BOOL8 result;
  char v15;
  char v17;
  BOOL v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v4 = *(_QWORD **)(a1 + 16);
  v5 = *(unsigned __int8 *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD **)(a2 + 16);
  v9 = *(unsigned __int8 *)(a2 + 24);
  v10 = *(_QWORD *)(a2 + 32);
  v11 = *(_QWORD *)(a2 + 40);
  v21 = *(_QWORD *)(a2 + 48);
  v22 = *(_QWORD *)(a1 + 48);
  v12 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v12 || (v13 = sub_2457BB6B0(), result = 0, (v13 & 1) != 0))
  {
    v15 = sub_2457659C8(v4, v8);
    result = 0;
    if ((v15 & 1) != 0 && ((v5 ^ v9) & 1) == 0)
    {
      if (v6 == v10 && v7 == v11)
      {
        if (v22 != v21)
          return 0;
      }
      else
      {
        v17 = sub_2457BB6B0();
        result = 0;
        if ((v17 & 1) == 0 || v22 != v21)
          return result;
      }
      v18 = *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56) && *(_QWORD *)(a1 + 64) == *(_QWORD *)(a2 + 64);
      if (v18 || (v19 = sub_2457BB6B0(), result = 0, (v19 & 1) != 0))
      {
        v20 = type metadata accessor for SessionConfigurationEnvelope(0);
        if ((sub_2457BB0B0() & 1) != 0)
          return *(double *)(a1 + *(int *)(v20 + 28)) == *(double *)(a2 + *(int *)(v20 + 28));
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_24575DCAC(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  BOOL v6;
  char v8;

  if (a1 == 0xD000000000000016 && a2 == 0x80000002457C9830 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
    if (v5 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v6 = a1 == 0x7463757274736E69 && a2 == 0xEC000000736E6F69;
      if (v6 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x694C6F54656D6974 && a2 == 0xEA00000000006576)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_2457BB6B0();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_24575DE7C()
{
  return 4;
}

uint64_t sub_24575DE84(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24575DEBC + 4 * byte_2457BDF40[a1]))(0xD000000000000016, 0x80000002457C9830);
}

uint64_t sub_24575DEBC()
{
  return 0x696669746E656469;
}

uint64_t sub_24575DEDC()
{
  return 0x7463757274736E69;
}

uint64_t sub_24575DEFC()
{
  return 0x694C6F54656D6974;
}

uint64_t sub_24575DF18(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  char v9;
  __int128 v10;
  uint64_t v11;
  _BYTE v13[8];
  uint64_t v14;
  __int128 v15;
  char v16;
  __int128 v17;
  uint64_t v18;

  v3 = v1;
  v5 = sub_245748A50(&qword_257498680);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_245749280(a1, a1[3]);
  sub_245763484();
  sub_2457BB77C();
  v9 = *((_BYTE *)v3 + 24);
  v10 = *((_OWORD *)v3 + 2);
  v11 = v3[6];
  v14 = *v3;
  v15 = *(_OWORD *)(v3 + 1);
  v16 = v9;
  v17 = v10;
  v18 = v11;
  v13[7] = 0;
  sub_2457634C0();
  sub_2457BB68C();
  if (!v2)
  {
    LOBYTE(v14) = 1;
    sub_2457BB644();
    type metadata accessor for SessionConfigurationEnvelope(0);
    LOBYTE(v14) = 2;
    sub_2457BB0D4();
    sub_245759270(&qword_257498698, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A858], MEMORY[0x24BE7A868]);
    sub_2457BB68C();
    LOBYTE(v14) = 3;
    sub_2457BB65C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

void sub_24575E0FC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  char v37;
  __int128 v38;
  uint64_t v39;

  v28 = a2;
  v29 = sub_2457BB0D4();
  v3 = *(_QWORD *)(v29 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_245748A50(&qword_2574986A0);
  MEMORY[0x24BDAC7A8](v31);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for SessionConfigurationEnvelope(0);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = a1[3];
  v32 = a1;
  sub_245749280(a1, v11);
  sub_245763484();
  v30 = v7;
  v12 = v33;
  sub_2457BB770();
  if (v12)
  {
    sub_245749564((uint64_t)v32);
  }
  else
  {
    v26 = v5;
    v27 = v8;
    v13 = v10;
    v33 = v3;
    v14 = v29;
    v34 = 0;
    sub_2457634FC();
    v15 = v30;
    v16 = v31;
    sub_2457BB5CC();
    v17 = v37;
    v18 = v38;
    v19 = v39;
    v20 = (uint64_t)v13;
    *(_QWORD *)v13 = v35;
    *(_OWORD *)(v13 + 8) = v36;
    v13[24] = v17;
    *((_OWORD *)v13 + 2) = v18;
    *((_QWORD *)v13 + 6) = v19;
    LOBYTE(v35) = 1;
    *((_QWORD *)v13 + 7) = sub_2457BB584();
    *((_QWORD *)v13 + 8) = v21;
    LOBYTE(v35) = 2;
    sub_245759270(&qword_2574986B0, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A858], MEMORY[0x24BE7A878]);
    v22 = v26;
    sub_2457BB5CC();
    v23 = v27;
    (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v20 + *(int *)(v27 + 24), v22, v14);
    LOBYTE(v35) = 3;
    sub_2457BB59C();
    v25 = v24;
    MEMORY[8](v15, v16);
    *(_QWORD *)(v20 + *(int *)(v23 + 28)) = v25;
    sub_2457633E0(v20, v28, type metadata accessor for SessionConfigurationEnvelope);
    sub_245749564((uint64_t)v32);
    sub_24575E898(v20, type metadata accessor for SessionConfigurationEnvelope);
  }
}

uint64_t sub_24575E47C()
{
  unsigned __int8 *v0;

  return sub_24575DE84(*v0);
}

uint64_t sub_24575E484@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24575DCAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24575E4A8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24575DE7C();
  *a1 = result;
  return result;
}

uint64_t sub_24575E4CC()
{
  sub_245763484();
  return sub_2457BB788();
}

uint64_t sub_24575E4F4()
{
  sub_245763484();
  return sub_2457BB794();
}

void sub_24575E51C()
{
  sub_245760E38((void (*)(_BYTE *))sub_24575DA54);
}

void sub_24575E53C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_245761504(a1, a2, a3, (void (*)(_BYTE *))sub_24575DA54);
}

void sub_24575E548(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_24575E0FC(a1, a2);
}

uint64_t sub_24575E55C(_QWORD *a1)
{
  return sub_24575DF18(a1);
}

void sub_24575E574(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v26 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  MEMORY[0x24BDAC7A8](v26);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_2457BAF60();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v25 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v25 - v11;
  v13 = sub_2457BAF18();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  v17 = (*(uint64_t (**)(char *, uint64_t))(v14 + 88))(v16, v13);
  if (v17 == *MEMORY[0x24BE3C768])
  {
    (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v16, v6);
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    sub_2457BAF54();
    v19 = v18;
    v20 = sub_2457BAF3C();
    v21 = sub_2457BAF30();
    v25 = a2;
    v22 = v21;
    v23 = *(void (**)(char *, uint64_t))(v7 + 8);
    v23(v10, v6);
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
    v23(v12, v6);
    *(_DWORD *)v5 = v19;
    *((_QWORD *)v5 + 1) = v20;
    *((_QWORD *)v5 + 2) = v22;
    swift_storeEnumTagMultiPayload();
    sub_2457633B4((uint64_t)v5, v25, type metadata accessor for DocumentRegistrationStatusEnvelope);
  }
  else if (v17 == *MEMORY[0x24BE3C770])
  {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(a1, v13);
    (*(void (**)(char *, uint64_t))(v14 + 96))(v16, v13);
    v24 = sub_2457BAF90();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(a2, v16, v24);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_2457BB4F4();
    __break(1u);
  }
}

unint64_t sub_24575E820()
{
  unint64_t result;

  result = qword_257498538;
  if (!qword_257498538)
  {
    result = MEMORY[0x24953B288](&unk_2457BE538, &type metadata for SamplingParametersEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498538);
  }
  return result;
}

uint64_t sub_24575E85C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t type metadata accessor for SessionConfigurationEnvelope(uint64_t a1)
{
  return sub_24574E0C8(a1, qword_2574985B8);
}

void sub_24575E898(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  sub_245767B7C(v2);
  sub_245748A90();
}

uint64_t sub_24575E8C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t type metadata accessor for DocumentResourceIdentifierXPCEnvelope()
{
  return objc_opt_self();
}

uint64_t method lookup function for DocumentResourceIdentifierXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ToolChoiceXPCEnvelope()
{
  return objc_opt_self();
}

uint64_t method lookup function for ToolChoiceXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ToolXPCEnvelope()
{
  return objc_opt_self();
}

uint64_t method lookup function for ToolXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SchemaXPCEnvelope()
{
  return objc_opt_self();
}

uint64_t method lookup function for SchemaXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for DocumentIdentifierXPCEnvelope()
{
  return objc_opt_self();
}

uint64_t method lookup function for DocumentIdentifierXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for DocumentRegistrationXPCResponse()
{
  return objc_opt_self();
}

uint64_t method lookup function for DocumentRegistrationXPCResponse()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for ChatMessagesXPCEnvelope()
{
  return objc_opt_self();
}

uint64_t method lookup function for ChatMessagesXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for SamplingParametersXPCEnvelope()
{
  return objc_opt_self();
}

uint64_t method lookup function for SamplingParametersXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_24575EA6C()
{
  return type metadata accessor for DocumentXPCEnvelope(0);
}

uint64_t type metadata accessor for DocumentXPCEnvelope(uint64_t a1)
{
  return sub_24574E0C8(a1, (uint64_t *)&unk_2574985A8);
}

uint64_t sub_24575EA88()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2457BAA68();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for DocumentXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DocumentXPCEnvelope.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t type metadata accessor for SessionConfigurationXPCEnvelope()
{
  return objc_opt_self();
}

uint64_t method lookup function for SessionConfigurationXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for CompletePromptResponseElementXPCEnvelope()
{
  return objc_opt_self();
}

uint64_t method lookup function for CompletePromptResponseElementXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for CompletePromptResponseXPCEnvelope()
{
  return objc_opt_self();
}

uint64_t method lookup function for CompletePromptResponseXPCEnvelope()
{
  return swift_lookUpClassMethod();
}

_QWORD *sub_24575EB9C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v15;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    v9 = *(int *)(a3 + 24);
    v15 = a1 + v9;
    v10 = (uint64_t)a2 + v9;
    *(_QWORD *)(a1 + 64) = a2[8];
    v11 = sub_2457BB0D4();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v15, v10, v11);
    *(_QWORD *)((char *)v4 + *(int *)(a3 + 28)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 28));
  }
  return v4;
}

uint64_t sub_24575ECA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_2457BB0D4();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_24575ED08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v8 = *(int *)(a3 + 24);
  v13 = a1 + v8;
  v9 = a2 + v8;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v10 = sub_2457BB0D4();
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v13, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_24575EDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2457BB0D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_24575EEE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_2457BB0D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_24575EF70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = sub_2457BB0D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  *(_QWORD *)(a1 + *(int *)(a3 + 28)) = *(_QWORD *)(a2 + *(int *)(a3 + 28));
  return a1;
}

uint64_t sub_24575F030()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24575F03C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_245767D20();
    return sub_245767C10(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_24575F0A4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24575F0B0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_245767D20();
    return sub_245767C04(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_24575F110()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2457BB0D4();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for SamplingParametersEnvelope()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SamplingParametersEnvelope(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v3 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v3;
  v4 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v4;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SamplingParametersEnvelope(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = a2[6];
  *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = a2[8];
  *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 80) = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = a2[11];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = a2[13];
  *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
  *(_QWORD *)(a1 + 104) = v10;
  v11 = a2[15];
  *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
  *(_QWORD *)(a1 + 120) = v11;
  *(_BYTE *)(a1 + 129) = *((_BYTE *)a2 + 129);
  return a1;
}

void *initializeWithTake for SamplingParametersEnvelope(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x82uLL);
}

uint64_t assignWithTake for SamplingParametersEnvelope(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v4;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_WORD *)(a1 + 128) = *(_WORD *)(a2 + 128);
  return a1;
}

uint64_t getEnumTagSinglePayload for SamplingParametersEnvelope(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 130))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 80);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SamplingParametersEnvelope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 128) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 130) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 80) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 130) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SamplingParametersEnvelope()
{
  return &type metadata for SamplingParametersEnvelope;
}

uint64_t *sub_24575F480(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v8 = sub_2457BAF90();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    v10 = *(int *)(a3 + 20);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_2457BAA68();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t type metadata accessor for DocumentRegistrationStatusEnvelope(uint64_t a1)
{
  return sub_24574E0C8(a1, qword_2574985E8);
}

uint64_t sub_24575F584(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_2457BAF90();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_2457BAA68();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

char *sub_24575F5FC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2457BAF90();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_2457BAA68();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  return a1;
}

char *sub_24575F6C0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_24575E898((uint64_t)a1, type metadata accessor for DocumentRegistrationStatusEnvelope);
    v6 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2457BAF90();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_2457BAA68();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

char *sub_24575F79C(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2457BAF90();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_2457BAA68();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

char *sub_24575F860(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  if (a1 != a2)
  {
    sub_24575E898((uint64_t)a1, type metadata accessor for DocumentRegistrationStatusEnvelope);
    v6 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v7 = sub_2457BAF90();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
    }
  }
  v8 = *(int *)(a3 + 20);
  v9 = &a1[v8];
  v10 = &a2[v8];
  v11 = sub_2457BAA68();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_24575F93C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_24575F948(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_245767DF4();
  if (v7 == (_DWORD)v3)
  {
    v8 = v6;
    v9 = v4;
  }
  else
  {
    v8 = sub_245767BB4();
    v9 = v4 + *(int *)(a3 + 20);
  }
  return sub_245767C10(v9, v3, v8);
}

uint64_t sub_24575F990()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_24575F99C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_245767DF4();
  if (v9 == a3)
  {
    v10 = v8;
    v11 = v5;
  }
  else
  {
    v10 = sub_245767BB4();
    v11 = v5 + *(int *)(a4 + 20);
  }
  return sub_245767C04(v11, v4, v4, v10);
}

uint64_t sub_24575F9EC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for DocumentRegistrationStatusEnvelope(319);
  if (v1 <= 0x3F)
  {
    result = sub_2457BAA68();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_24575FA70(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = sub_2457BAF90();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  }
  return a1;
}

uint64_t sub_24575FB24(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 1)
  {
    v3 = sub_2457BAF90();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  }
  return result;
}

void *sub_24575FB70(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2457BAF90();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_24575FBFC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_24575E898((uint64_t)a1, type metadata accessor for DocumentRegistrationStatusEnvelope);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2457BAF90();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *sub_24575FCA0(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2457BAF90();
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_24575FD2C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;

  if (a1 != a2)
  {
    sub_24575E898((uint64_t)a1, type metadata accessor for DocumentRegistrationStatusEnvelope);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2457BAF90();
      (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_24575FDD0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2457BAF90();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_24575FE40()
{
  sub_24576060C();
  type metadata accessor for DocumentRegistrationEnvelope(0);
  sub_2457BAA68();
  sub_245759270(&qword_2574986E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  return sub_2457BB188();
}

uint64_t sub_24575FEB0(uint64_t a1, uint64_t a2)
{
  if ((sub_24576076C(a1, a2) & 1) != 0)
  {
    type metadata accessor for DocumentRegistrationEnvelope(0);
    JUMPOUT(0x24953A118);
  }
  return 0;
}

uint64_t sub_24575FEFC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 7107189 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24575FFD0(char a1)
{
  if ((a1 & 1) != 0)
    return 7107189;
  else
    return 0x737574617473;
}

uint64_t sub_24575FFFC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = sub_245748A50(&qword_257498620);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_245749280(a1, a1[3]);
  sub_245763378();
  sub_2457BB77C();
  v8[15] = 0;
  type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  sub_245759270(&qword_257498630, type metadata accessor for DocumentRegistrationStatusEnvelope, (uint64_t)&unk_2457BE2F8);
  sub_2457BB68C();
  if (!v1)
  {
    type metadata accessor for DocumentRegistrationEnvelope(0);
    v8[14] = 1;
    sub_2457BAA68();
    sub_245759270(&qword_257498638, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAE0]);
    sub_2457BB68C();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_245760180()
{
  sub_2457BB728();
  sub_24576060C();
  type metadata accessor for DocumentRegistrationEnvelope(0);
  sub_2457BAA68();
  sub_245759270(&qword_2574986E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_2457BB188();
  return sub_2457BB764();
}

void sub_245760204(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;

  v20 = a2;
  v21 = sub_2457BAA68();
  v19 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v22 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  MEMORY[0x24BDAC7A8](v23);
  v24 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = sub_245748A50(&qword_257498640);
  v6 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for DocumentRegistrationEnvelope(0);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(a1, a1[3]);
  sub_245763378();
  sub_2457BB770();
  if (v2)
  {
    sub_245749564((uint64_t)a1);
  }
  else
  {
    v18 = a1;
    v12 = v6;
    v13 = (uint64_t)v11;
    v14 = v22;
    v27 = 0;
    sub_245759270(&qword_257498648, type metadata accessor for DocumentRegistrationStatusEnvelope, (uint64_t)&unk_2457BE320);
    v15 = (uint64_t)v24;
    sub_2457BB5CC();
    sub_2457633B4(v15, v13, type metadata accessor for DocumentRegistrationStatusEnvelope);
    v26 = 1;
    sub_245759270(&qword_257498650, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDB10]);
    v16 = v21;
    v17 = v25;
    sub_2457BB5CC();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v17);
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v13 + *(int *)(v9 + 20), v14, v16);
    sub_2457633E0(v13, v20, type metadata accessor for DocumentRegistrationEnvelope);
    sub_245749564((uint64_t)v18);
    sub_24575E898(v13, type metadata accessor for DocumentRegistrationEnvelope);
  }
}

uint64_t sub_2457604E0()
{
  char *v0;

  return sub_24575FFD0(*v0);
}

uint64_t sub_2457604E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24575FEFC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24576050C()
{
  sub_245763378();
  return sub_2457BB788();
}

uint64_t sub_245760534()
{
  sub_245763378();
  return sub_2457BB794();
}

uint64_t sub_245760564()
{
  sub_2457BB728();
  sub_24576060C();
  sub_2457BAA68();
  sub_245759270(&qword_2574986E0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCDAC0], MEMORY[0x24BDCDAF0]);
  sub_2457BB188();
  return sub_2457BB764();
}

void sub_2457605E0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  sub_245760204(a1, a2);
}

uint64_t sub_2457605F4(_QWORD *a1)
{
  return sub_24575FFFC(a1);
}

uint64_t sub_24576060C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v10;

  v1 = sub_2457BAF90();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2457633E0(v0, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_2457BB734();
    sub_245759270(&qword_2574986E8, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C800], MEMORY[0x24BE3C818]);
    sub_2457BB188();
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    sub_2457BB734();
    return sub_2457615B4();
  }
}

uint64_t sub_24576076C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  void (*v20)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;

  v4 = sub_2457BAF90();
  v25 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v24 - v11;
  v13 = sub_245748A50(&qword_2574986F0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v24 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (uint64_t)&v16[*(int *)(v14 + 48)];
  sub_2457633E0(a1, (uint64_t)v16, type metadata accessor for DocumentRegistrationStatusEnvelope);
  sub_2457633E0(a2, v17, type metadata accessor for DocumentRegistrationStatusEnvelope);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_2457633E0((uint64_t)v16, (uint64_t)v12, type metadata accessor for DocumentRegistrationStatusEnvelope);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      v19 = *(float *)v12 == *(float *)v17
         && *((_QWORD *)v12 + 1) == *(_QWORD *)(v17 + 8)
         && *((_QWORD *)v12 + 2) == *(_QWORD *)(v17 + 16);
      goto LABEL_14;
    }
LABEL_16:
    sub_245765F18((uint64_t)v16, &qword_2574986F0);
    v19 = 0;
    return v19 & 1;
  }
  sub_2457633E0((uint64_t)v16, (uint64_t)v10, type metadata accessor for DocumentRegistrationStatusEnvelope);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    (*(void (**)(char *, uint64_t))(v25 + 8))(v10, v4);
    goto LABEL_16;
  }
  v18 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v6, v17, v4);
  v19 = sub_2457BAF84();
  v20 = *(void (**)(char *, uint64_t))(v18 + 8);
  v20(v6, v4);
  v20(v10, v4);
LABEL_14:
  sub_24575E898((uint64_t)v16, type metadata accessor for DocumentRegistrationStatusEnvelope);
  return v19 & 1;
}

uint64_t sub_2457609B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x7265747369676572 && a2 == 0xEB00000000676E69;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_245760AB4(char a1)
{
  if ((a1 & 1) != 0)
    return 0x64656873696E6966;
  else
    return 0x7265747369676572;
}

uint64_t sub_245760AF4(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;

  v31 = sub_245748A50(&qword_257498738);
  v29 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  v28 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = sub_2457BAF90();
  v27 = *(_QWORD *)(v30 - 8);
  MEMORY[0x24BDAC7A8](v30);
  v26 = (char *)&v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_245748A50(&qword_257498740);
  v25 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = sub_245748A50(&qword_257498748);
  v10 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(a1, a1[3]);
  sub_245765D84();
  sub_2457BB77C();
  sub_2457633E0(v32, (uint64_t)v9, type metadata accessor for DocumentRegistrationStatusEnvelope);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v14 = v26;
    v13 = v27;
    v15 = v30;
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v26, v9, v30);
    LOBYTE(v34) = 1;
    sub_245765DC0();
    v16 = v28;
    v17 = v33;
    sub_2457BB5FC();
    sub_245759270(&qword_257498490, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C800], MEMORY[0x24BE3C810]);
    v18 = v31;
    sub_2457BB68C();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v16, v18);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v14, v15);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v17);
  }
  else
  {
    v20 = *(_DWORD *)v9;
    v22 = *((_QWORD *)v9 + 1);
    v21 = *((_QWORD *)v9 + 2);
    LOBYTE(v34) = 0;
    sub_245765DFC();
    v23 = v33;
    sub_2457BB5FC();
    v34 = v20;
    v35 = v22;
    v36 = v21;
    sub_245765E74();
    sub_2457BB68C();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v23);
  }
}

void sub_245760E38(void (*a1)(_BYTE *))
{
  _BYTE v2[72];

  sub_2457514C4();
  a1(v2);
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_245760E64@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  _DWORD *v43;
  uint64_t v44;
  _DWORD *v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  __int128 v59;
  _QWORD *v60;

  v49 = a2;
  v3 = sub_245748A50(&qword_2574986F8);
  v52 = *(_QWORD *)(v3 - 8);
  v53 = v3;
  MEMORY[0x24BDAC7A8](v3);
  v55 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_245748A50(&qword_257498700);
  v50 = *(_QWORD *)(v5 - 8);
  v51 = v5;
  MEMORY[0x24BDAC7A8](v5);
  v54 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245748A50(&qword_257498708);
  v56 = *(_QWORD *)(v7 - 8);
  v57 = v7;
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for DocumentRegistrationStatusEnvelope(0);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BDAC7A8](v11);
  v16 = (char *)&v45 - v15;
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v45 - v17;
  sub_245749280(a1, a1[3]);
  sub_245765D84();
  v19 = v60;
  sub_2457BB770();
  if (v19)
    goto LABEL_8;
  v45 = v16;
  v46 = v18;
  v47 = v13;
  v48 = v10;
  v60 = a1;
  v20 = v57;
  v21 = sub_2457BB5E4();
  v22 = *(_QWORD *)(v21 + 16);
  if (!v22
    || (v23 = *(_BYTE *)(v21 + 32),
        sub_245750D90(1, v22, v21, v21 + 32, 0, (2 * v22) | 1),
        v25 = v24,
        v27 = v26,
        swift_bridgeObjectRelease(),
        v25 != v27 >> 1))
  {
    v32 = v56;
    v33 = v48;
    v34 = sub_2457BB470();
    swift_allocError();
    v36 = v35;
    sub_245748A50(&qword_2574980B0);
    *v36 = v33;
    sub_2457BB53C();
    sub_2457BB464();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v34 - 8) + 104))(v36, *MEMORY[0x24BEE26D0], v34);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v20);
    a1 = v60;
LABEL_8:
    v40 = (uint64_t)a1;
    return sub_245749564(v40);
  }
  if ((v23 & 1) != 0)
  {
    LOBYTE(v58) = 1;
    sub_245765DC0();
    v28 = v55;
    sub_2457BB530();
    sub_2457BAF90();
    sub_245759270(&qword_2574984A0, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C800], MEMORY[0x24BE3C828]);
    v29 = (uint64_t)v47;
    v30 = v53;
    sub_2457BB5CC();
    v31 = v56;
    (*(void (**)(char *, uint64_t))(v52 + 8))(v28, v30);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v20);
    swift_storeEnumTagMultiPayload();
    v42 = v29;
  }
  else
  {
    LOBYTE(v58) = 0;
    sub_245765DFC();
    v37 = v54;
    sub_2457BB530();
    sub_245765E38();
    v38 = v51;
    sub_2457BB5CC();
    v39 = v56;
    (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v38);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v39 + 8))(v9, v20);
    v43 = v45;
    *v45 = v58;
    *(_OWORD *)(v43 + 2) = v59;
    swift_storeEnumTagMultiPayload();
    v42 = (uint64_t)v43;
  }
  v44 = (uint64_t)v46;
  sub_2457633B4(v42, (uint64_t)v46, type metadata accessor for DocumentRegistrationStatusEnvelope);
  sub_2457633B4(v44, v49, type metadata accessor for DocumentRegistrationStatusEnvelope);
  v40 = (uint64_t)v60;
  return sub_245749564(v40);
}

void sub_24576137C()
{
  sub_245767DD8();
  sub_245767EAC();
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_2457613A4()
{
  char *v0;

  return sub_245760AB4(*v0);
}

uint64_t sub_2457613AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457609B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457613D0()
{
  sub_245765D84();
  return sub_2457BB788();
}

uint64_t sub_2457613F8()
{
  sub_245765D84();
  return sub_2457BB794();
}

void sub_245761420()
{
  sub_245765334();
}

uint64_t sub_245761438()
{
  sub_245765DC0();
  return sub_2457BB788();
}

uint64_t sub_245761460()
{
  sub_245765DC0();
  return sub_2457BB794();
}

uint64_t sub_245761488()
{
  sub_245765DFC();
  return sub_2457BB788();
}

uint64_t sub_2457614B0()
{
  sub_245765DFC();
  return sub_2457BB794();
}

void sub_2457614D8()
{
  sub_245760E38((void (*)(_BYTE *))sub_24576060C);
}

void sub_2457614F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_245761504(a1, a2, a3, (void (*)(_BYTE *))sub_24576060C);
}

void sub_245761504(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  sub_245767DD8();
  a4(v5);
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_245761530@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_245760E64(a1, a2);
}

uint64_t sub_245761544(_QWORD *a1)
{
  return sub_245760AF4(a1);
}

void sub_24576155C()
{
  sub_245759270(&qword_257498600, type metadata accessor for DocumentRegistrationStatusEnvelope, (uint64_t)&unk_2457BE2D0);
}

void sub_245761588()
{
  sub_245759270(&qword_257498608, type metadata accessor for DocumentRegistrationEnvelope, (uint64_t)&unk_2457BE388);
}

uint64_t sub_2457615B4()
{
  sub_2457BB74C();
  sub_2457BB734();
  return sub_2457BB734();
}

BOOL sub_245761600(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, float a5, float a6)
{
  return a5 == a6 && a1 == a3 && a2 == a4;
}

uint64_t sub_245761614(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x73736572676F7270 && a2 == 0xE800000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7365747962 && a2 == 0xE500000000000000;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x7479426C61746F74 && a2 == 0xEA00000000007365)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2457BB6B0();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_245761764(char a1)
{
  if (!a1)
    return 0x73736572676F7270;
  if (a1 == 1)
    return 0x7365747962;
  return 0x7479426C61746F74;
}

uint64_t sub_2457617BC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = sub_245748A50(&qword_2574988E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_245749280(a1, a1[3]);
  sub_245767014();
  sub_2457BB77C();
  v8[15] = 0;
  sub_2457BB668();
  if (!v1)
  {
    v8[14] = 1;
    sub_2457BB680();
    v8[13] = 2;
    sub_2457BB680();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_245761910()
{
  sub_2457BB728();
  sub_2457615B4();
  return sub_2457BB764();
}

uint64_t sub_24576196C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;

  v2 = sub_245748A50(&qword_2574988D0);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(a1, a1[3]);
  sub_245767014();
  sub_2457BB770();
  v11 = 0;
  sub_2457BB5A8();
  v10 = 1;
  v7 = sub_2457BB5C0();
  v9 = 2;
  sub_2457BB5C0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_245749564((uint64_t)a1);
  return v7;
}

void sub_245761AE8()
{
  sub_2457646EC();
}

uint64_t sub_245761B00()
{
  char *v0;

  return sub_245761764(*v0);
}

uint64_t sub_245761B08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245761614(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245761B2C()
{
  sub_245767014();
  return sub_2457BB788();
}

uint64_t sub_245761B54()
{
  sub_245767014();
  return sub_2457BB794();
}

uint64_t sub_245761B7C()
{
  return sub_245761910();
}

uint64_t sub_245761B88()
{
  return sub_2457615B4();
}

uint64_t sub_245761B94()
{
  sub_2457BB728();
  sub_2457615B4();
  return sub_2457BB764();
}

uint64_t sub_245761BE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  int v6;

  result = sub_24576196C(a1);
  if (!v2)
  {
    *(_DWORD *)a2 = v6;
    *(_QWORD *)(a2 + 8) = result;
    *(_QWORD *)(a2 + 16) = v5;
  }
  return result;
}

uint64_t sub_245761C14(_QWORD *a1)
{
  return sub_2457617BC(a1);
}

BOOL sub_245761C30(uint64_t a1, uint64_t a2)
{
  return sub_245761600(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 8), *(_QWORD *)(a2 + 16), *(float *)a1, *(float *)a2);
}

uint64_t sub_245761C4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_2457BABDC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_2457BABF4();
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x24BEB82B8] || v6 == *MEMORY[0x24BEB82C0])
  {
    v7 = sub_2457BAC00();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a1, v7);
    (*(void (**)(char *, uint64_t))(v3 + 96))(v5, v2);
    return *(_QWORD *)v5;
  }
  else if (v6 == *MEMORY[0x24BEB82C8])
  {
    v9 = sub_2457BAC00();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(a1, v9);
    return 0;
  }
  else
  {
    result = sub_2457BB4F4();
    __break(1u);
  }
  return result;
}

uint64_t sub_245761DD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1;
  v4 = *(unsigned __int8 *)(v2 + 8);
  if (v4 == 255)
  {
    sub_2457BB740();
  }
  else
  {
    v5 = *(_QWORD *)v2;
    sub_2457BB740();
    sub_245763538(a1, v5, v4);
  }
  if (*(_BYTE *)(v2 + 24) == 1)
  {
    sub_2457BB740();
  }
  else
  {
    sub_2457BB740();
    sub_2457BB758();
  }
  if (*(_BYTE *)(v2 + 40) == 1)
  {
    sub_2457BB740();
  }
  else
  {
    sub_2457BB740();
    sub_2457BB758();
  }
  if (*(_BYTE *)(v2 + 56) == 1)
  {
    sub_2457BB740();
  }
  else
  {
    sub_2457BB740();
    sub_2457BB758();
  }
  if (*(_BYTE *)(v2 + 72) == 1)
  {
    sub_2457BB740();
  }
  else
  {
    sub_2457BB740();
    sub_2457BB734();
  }
  v6 = *(_QWORD *)(v2 + 80);
  sub_245765CA0(v2);
  sub_245765B08(a1, v6);
  sub_24575E85C(v2);
  if (*(_BYTE *)(v2 + 96) == 1)
  {
    sub_2457BB740();
  }
  else
  {
    sub_2457BB740();
    sub_2457BB734();
  }
  if (*(_BYTE *)(v2 + 112) == 1)
  {
    sub_2457BB740();
  }
  else
  {
    sub_2457BB740();
    sub_2457BB758();
  }
  if (*(_BYTE *)(v2 + 128) == 1)
  {
    sub_2457BB740();
  }
  else
  {
    sub_2457BB740();
    sub_2457BB734();
  }
  if (*(_BYTE *)(v2 + 129) != 2)
    sub_2457BB740();
  return sub_2457BB740();
}

uint64_t sub_245761FC0(uint64_t a1, uint64_t a2)
{
  int v4;
  int v5;
  char v6;
  double v7;
  double v8;
  char v10;
  char v11;
  uint64_t result;
  char v13;
  char v14;
  char v15;
  char v16;
  int v17;
  int v18;
  _BOOL4 v19;

  v4 = *(unsigned __int8 *)(a1 + 8);
  v5 = *(unsigned __int8 *)(a2 + 8);
  if (v4 == 255)
  {
    if (v5 != 255)
      return 0;
    goto LABEL_3;
  }
  if (v5 == 255)
    return 0;
  v7 = *(double *)a1;
  v8 = *(double *)a2;
  if (!*(_BYTE *)(a1 + 8))
  {
    result = 0;
    if (*(_BYTE *)(a2 + 8) || v7 != v8)
      return result;
LABEL_3:
    v6 = *(_BYTE *)(a2 + 24);
    if ((*(_BYTE *)(a1 + 24) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 24))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 16) != *(double *)(a2 + 16))
        v6 = 1;
      if ((v6 & 1) != 0)
        return 0;
    }
    v10 = *(_BYTE *)(a2 + 40);
    if ((*(_BYTE *)(a1 + 40) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 40))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
        v10 = 1;
      if ((v10 & 1) != 0)
        return 0;
    }
    v11 = *(_BYTE *)(a2 + 56);
    if ((*(_BYTE *)(a1 + 56) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 56))
        return 0;
    }
    else
    {
      if (*(double *)(a1 + 48) != *(double *)(a2 + 48))
        v11 = 1;
      if ((v11 & 1) != 0)
        return 0;
    }
    v13 = *(_BYTE *)(a2 + 72);
    if ((*(_BYTE *)(a1 + 72) & 1) != 0)
    {
      if (!*(_BYTE *)(a2 + 72))
        return 0;
    }
    else
    {
      if (*(_QWORD *)(a1 + 64) != *(_QWORD *)(a2 + 64))
        v13 = 1;
      if ((v13 & 1) != 0)
        return 0;
    }
    if ((sub_245765724(*(_QWORD *)(a1 + 80), *(_QWORD *)(a2 + 80)) & 1) != 0)
    {
      v14 = *(_BYTE *)(a2 + 96);
      if ((*(_BYTE *)(a1 + 96) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 96))
          return 0;
      }
      else
      {
        if (*(_QWORD *)(a1 + 88) != *(_QWORD *)(a2 + 88))
          v14 = 1;
        if ((v14 & 1) != 0)
          return 0;
      }
      v15 = *(_BYTE *)(a2 + 112);
      if ((*(_BYTE *)(a1 + 112) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 112))
          return 0;
      }
      else
      {
        if (*(double *)(a1 + 104) != *(double *)(a2 + 104))
          v15 = 1;
        if ((v15 & 1) != 0)
          return 0;
      }
      v16 = *(_BYTE *)(a2 + 128);
      if ((*(_BYTE *)(a1 + 128) & 1) != 0)
      {
        if (!*(_BYTE *)(a2 + 128))
          return 0;
      }
      else
      {
        if (*(_QWORD *)(a1 + 120) != *(_QWORD *)(a2 + 120))
          v16 = 1;
        if ((v16 & 1) != 0)
          return 0;
      }
      v17 = *(unsigned __int8 *)(a1 + 129);
      v18 = *(unsigned __int8 *)(a2 + 129);
      if (v17 == 2)
      {
        if (v18 != 2)
          return 0;
      }
      else
      {
        v19 = (v17 & 1) == 0;
        if (v18 == 2 || ((v19 ^ v18) & 1) == 0)
          return 0;
      }
      return 1;
    }
    return 0;
  }
  if (v4 == 1)
  {
    if (v5 != 1 || *(_QWORD *)&v7 != *(_QWORD *)&v8)
      return 0;
    goto LABEL_3;
  }
  result = 0;
  if (v5 == 2 && v8 == 0.0)
    goto LABEL_3;
  return result;
}

uint64_t sub_2457621BC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 0x7967657461727473 && a2 == 0xE800000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x74617265706D6574 && a2 == 0xEB00000000657275;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000002457C97F0 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x65506874676E656CLL && a2 == 0xED000079746C616ELL;
      if (v7 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x546D756D6978616DLL && a2 == 0xED0000736E656B6FLL;
        if (v8 || (sub_2457BB6B0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x75716553706F7473 && a2 == 0xED00007365636E65;
          if (v9 || (sub_2457BB6B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x65536D6F646E6172 && a2 == 0xEA00000000006465;
            if (v10 || (sub_2457BB6B0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = a1 == 0x74756F656D6974 && a2 == 0xE700000000000000;
              if (v11 || (sub_2457BB6B0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else if (a1 == 0xD000000000000016 && a2 == 0x80000002457C9810 || (sub_2457BB6B0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 8;
              }
              else if (a1 == 0x6165486E656B6F74 && a2 == 0xEC000000676E696CLL)
              {
                swift_bridgeObjectRelease();
                return 9;
              }
              else
              {
                v13 = sub_2457BB6B0();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 9;
                else
                  return 10;
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_24576264C()
{
  return 10;
}

uint64_t sub_245762654(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_245762688 + 4 * byte_2457BDF44[a1]))(0x7967657461727473, 0xE800000000000000);
}

uint64_t sub_245762688()
{
  return 0x74617265706D6574;
}

unint64_t sub_2457626A8()
{
  return 0xD000000000000010;
}

uint64_t sub_2457626C4()
{
  return 0x65506874676E656CLL;
}

uint64_t sub_2457626E8()
{
  return 0x546D756D6978616DLL;
}

uint64_t sub_24576270C()
{
  return 0x75716553706F7473;
}

uint64_t sub_245762730()
{
  return 0x65536D6F646E6172;
}

uint64_t sub_24576274C()
{
  return 0x74756F656D6974;
}

unint64_t sub_245762764()
{
  return 0xD000000000000016;
}

uint64_t sub_245762784()
{
  return 0x6165486E656B6F74;
}

uint64_t sub_2457627A4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _BYTE v13[16];

  v3 = v1;
  v5 = sub_245748A50(&qword_2574986C0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(a1, a1[3]);
  sub_24576340C();
  sub_2457BB77C();
  sub_245765CC8(v3, (uint64_t)v13, &qword_2574986C8);
  sub_245765CC8((uint64_t)v13, (uint64_t)&v12, &qword_2574986C8);
  v11 = 0;
  sub_245765CF4();
  sub_2457BB638();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_2457BB620();
    LOBYTE(v12) = 2;
    sub_2457BB620();
    LOBYTE(v12) = 3;
    sub_2457BB620();
    LOBYTE(v12) = 4;
    sub_2457BB62C();
    v12 = *(_QWORD *)(v3 + 80);
    v11 = 5;
    sub_245748A50(&qword_257498670);
    sub_245765D30(&qword_2574986D8, MEMORY[0x24BEE0D08], MEMORY[0x24BEE1700]);
    sub_2457BB68C();
    LOBYTE(v12) = 6;
    sub_2457BB62C();
    LOBYTE(v12) = 7;
    sub_2457BB620();
    LOBYTE(v12) = 8;
    sub_2457BB62C();
    LOBYTE(v12) = 9;
    sub_2457BB614();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_245762A88()
{
  _BYTE v1[72];

  sub_2457BB728();
  sub_245761DD8((uint64_t)v1);
  return sub_2457BB764();
}

uint64_t sub_245762AC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  char v18;
  uint64_t v19;
  int v20;
  int v21;
  char v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  int v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  unsigned __int8 v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  char v68;
  uint64_t v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;
  char v75;
  char v76;
  char v77;
  char v78;
  char v79;

  v5 = sub_245748A50(&qword_257498658);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(a1, a1[3]);
  sub_24576340C();
  sub_2457BB770();
  if (v2)
    return sub_245749564((uint64_t)a1);
  v79 = 0;
  sub_245763448();
  sub_2457BB578();
  v9 = v54;
  v10 = v55;
  LOBYTE(v54) = 1;
  v45 = sub_2457BB560();
  v46 = v10;
  v78 = v11 & 1;
  LOBYTE(v54) = 2;
  v12 = v11;
  v43 = sub_2457BB560();
  v44 = v12;
  v77 = v13 & 1;
  LOBYTE(v54) = 3;
  v14 = v13;
  v15 = sub_2457BB560();
  v41 = v14;
  v42 = v15;
  v76 = v16 & 1;
  LOBYTE(v54) = 4;
  v17 = v16;
  v40 = sub_2457BB56C();
  v39 = v17;
  v75 = v18 & 1;
  LOBYTE(v17) = v18;
  sub_245748A50(&qword_257498670);
  v79 = 5;
  sub_245765D30(&qword_257498678, MEMORY[0x24BEE0D38], MEMORY[0x24BEE1720]);
  sub_2457BB5CC();
  v38 = v9;
  v19 = v54;
  LOBYTE(v54) = 6;
  swift_bridgeObjectRetain();
  v37 = sub_2457BB56C();
  v36 = v20;
  v74 = v20 & 1;
  LOBYTE(v54) = 7;
  v35 = sub_2457BB560();
  v33 = v21;
  v73 = v21 & 1;
  LOBYTE(v54) = 8;
  v34 = sub_2457BB56C();
  HIDWORD(v31) = v22 & 1;
  v72 = v22 & 1;
  v79 = 9;
  v32 = sub_2457BB554();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v53 = v44 & 1;
  v52 = v41 & 1;
  v51 = v39 & 1;
  v50 = v17 & 1;
  v49 = v36 & 1;
  v48 = v33 & 1;
  v47 = BYTE4(v31);
  sub_245749564((uint64_t)a1);
  v23 = v38;
  v54 = v38;
  v24 = v46;
  v55 = v46;
  v25 = v45;
  v56 = v45;
  v57 = v78;
  v26 = v43;
  v58 = v43;
  v59 = v77;
  v27 = v42;
  v60 = v42;
  v61 = v76;
  v28 = v40;
  v62 = v40;
  v63 = v75;
  v64 = v19;
  v65 = v37;
  v66 = v74;
  v67 = v35;
  v68 = v73;
  v69 = v34;
  v70 = v72;
  v71 = v32;
  result = sub_24575E85C((uint64_t)&v54);
  *(_QWORD *)a2 = v23;
  *(_BYTE *)(a2 + 8) = v24;
  *(_QWORD *)(a2 + 16) = v25;
  *(_BYTE *)(a2 + 24) = v53;
  *(_QWORD *)(a2 + 32) = v26;
  *(_BYTE *)(a2 + 40) = v52;
  *(_QWORD *)(a2 + 48) = v27;
  *(_BYTE *)(a2 + 56) = v51;
  *(_QWORD *)(a2 + 64) = v28;
  *(_BYTE *)(a2 + 72) = v50;
  v30 = v37;
  *(_QWORD *)(a2 + 80) = v19;
  *(_QWORD *)(a2 + 88) = v30;
  *(_BYTE *)(a2 + 96) = v49;
  *(_QWORD *)(a2 + 104) = v35;
  *(_BYTE *)(a2 + 112) = v48;
  *(_QWORD *)(a2 + 120) = v34;
  *(_BYTE *)(a2 + 128) = v47;
  *(_BYTE *)(a2 + 129) = v32;
  return result;
}

uint64_t sub_2457630B4()
{
  unsigned __int8 *v0;

  return sub_245762654(*v0);
}

uint64_t sub_2457630BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457621BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457630E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24576264C();
  *a1 = result;
  return result;
}

uint64_t sub_245763104()
{
  sub_24576340C();
  return sub_2457BB788();
}

uint64_t sub_24576312C()
{
  sub_24576340C();
  return sub_2457BB794();
}

uint64_t sub_245763154()
{
  const void *v0;
  _BYTE __dst[130];

  memcpy(__dst, v0, sizeof(__dst));
  return sub_245762A88();
}

uint64_t sub_24576318C(uint64_t a1)
{
  const void *v1;
  _BYTE __dst[130];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_245761DD8(a1);
}

uint64_t sub_2457631CC()
{
  const void *v0;
  uint64_t v2;
  _BYTE __dst[130];

  memcpy(__dst, v0, sizeof(__dst));
  sub_2457BB728();
  sub_245761DD8((uint64_t)&v2);
  return sub_2457BB764();
}

void *sub_245763220@<X0>(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *result;
  _BYTE __src[136];

  result = (void *)sub_245762AC4(a1, (uint64_t)__src);
  if (!v2)
    return memcpy(a2, __src, 0x82uLL);
  return result;
}

uint64_t sub_245763268(_QWORD *a1)
{
  const void *v1;
  _BYTE __dst[130];

  memcpy(__dst, v1, sizeof(__dst));
  return sub_2457627A4(a1);
}

uint64_t sub_2457632B8(void *__src, const void *a2)
{
  _BYTE v4[136];
  _BYTE __dst[136];

  memcpy(v4, __src, 0x82uLL);
  memcpy(__dst, a2, 0x82uLL);
  return sub_245761FC0((uint64_t)v4, (uint64_t)__dst) & 1;
}

unint64_t sub_245763310()
{
  unint64_t result;

  result = qword_257498610;
  if (!qword_257498610)
  {
    result = MEMORY[0x24953B288](&unk_2457BE3F0, &type metadata for SamplingParametersEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498610);
  }
  return result;
}

void sub_24576334C()
{
  sub_245759270(&qword_257498618, type metadata accessor for SessionConfigurationEnvelope, (uint64_t)&unk_2457BE480);
}

unint64_t sub_245763378()
{
  unint64_t result;

  result = qword_257498628;
  if (!qword_257498628)
  {
    result = MEMORY[0x24953B288](&unk_2457BEF24, &type metadata for DocumentRegistrationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498628);
  }
  return result;
}

void sub_2457633B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_245767D58(a1, a2, a3);
  sub_245767B90(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_245748A90();
}

void sub_2457633E0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = sub_245767D58(a1, a2, a3);
  sub_245767B90(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_245748A90();
}

unint64_t sub_24576340C()
{
  unint64_t result;

  result = qword_257498660;
  if (!qword_257498660)
  {
    result = MEMORY[0x24953B288](&unk_2457BEED4, &type metadata for SamplingParametersEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498660);
  }
  return result;
}

unint64_t sub_245763448()
{
  unint64_t result;

  result = qword_257498668;
  if (!qword_257498668)
  {
    result = MEMORY[0x24953B288](&unk_2457BEEAC, &type metadata for SamplingStrategyEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498668);
  }
  return result;
}

unint64_t sub_245763484()
{
  unint64_t result;

  result = qword_257498688;
  if (!qword_257498688)
  {
    result = MEMORY[0x24953B288](&unk_2457BEE5C, &type metadata for SessionConfigurationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498688);
  }
  return result;
}

unint64_t sub_2457634C0()
{
  unint64_t result;

  result = qword_257498690;
  if (!qword_257498690)
  {
    result = MEMORY[0x24953B288](&unk_2457BEE34, &type metadata for TGSessionConfigurationEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498690);
  }
  return result;
}

unint64_t sub_2457634FC()
{
  unint64_t result;

  result = qword_2574986A8;
  if (!qword_2574986A8)
  {
    result = MEMORY[0x24953B288](&unk_2457BEE0C, &type metadata for TGSessionConfigurationEnvelope);
    atomic_store(result, (unint64_t *)&qword_2574986A8);
  }
  return result;
}

uint64_t sub_245763538(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a3 == 1)
      sub_2457BB734();
    return sub_2457BB734();
  }
  else
  {
    sub_2457BB734();
    return sub_2457BB758();
  }
}

uint64_t sub_245763598(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 == 1)
        return a1 == a3;
    }
    else if (a4 == 2 && *(double *)&a3 == 0.0)
    {
      return 1;
    }
  }
  else if (!a4)
  {
    return *(double *)&a1 == *(double *)&a3;
  }
  return 0;
}

uint64_t sub_245763600(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x78616D677261 && a2 == 0xE600000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x537375656C63756ELL && a2 == 0xEF676E696C706D61;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 1265659764 && a2 == 0xE400000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2457BB6B0();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_245763758(char a1)
{
  if (!a1)
    return 0x78616D677261;
  if (a1 == 1)
    return 0x537375656C63756ELL;
  return 1265659764;
}

uint64_t sub_2457637B0(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x6C6F687365726874 && a2 == 0xE900000000000064)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_245763840()
{
  return 0x6C6F687365726874;
}

uint64_t sub_24576385C(_QWORD *a1, uint64_t a2, int a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  char v28;
  char v29;
  char v30;

  v26 = a3;
  v25 = a2;
  v4 = sub_245748A50(&qword_2574988B0);
  v23 = *(_QWORD *)(v4 - 8);
  v24 = v4;
  MEMORY[0x24BDAC7A8](v4);
  v22 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_245748A50(&qword_2574988B8);
  v20 = *(_QWORD *)(v6 - 8);
  v21 = v6;
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_245748A50(&qword_2574988C0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_245748A50(&qword_2574988C8);
  v27 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(a1, a1[3]);
  sub_245766D9C();
  sub_2457BB77C();
  if (!(_BYTE)v26)
  {
    v29 = 1;
    sub_245766E14();
    sub_2457BB5FC();
    v18 = v21;
    sub_2457BB65C();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v8, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, v13);
  }
  if (v26 == 1)
  {
    v30 = 2;
    sub_245766DD8();
    v16 = v22;
    sub_2457BB5FC();
    v17 = v24;
    sub_2457BB674();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v16, v17);
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, v13);
  }
  v28 = 0;
  sub_245766E50();
  sub_2457BB5FC();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v15, v13);
}

uint64_t sub_245763B28(uint64_t a1, char a2)
{
  _BYTE v5[72];

  sub_2457BB728();
  sub_245763538((uint64_t)v5, a1, a2);
  return sub_2457BB764();
}

char *sub_245763B74(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  _QWORD *v54;
  char v55;
  char v56;
  char v57;

  v53 = sub_245748A50(&qword_257498820);
  v48 = *(_QWORD *)(v53 - 8);
  MEMORY[0x24BDAC7A8](v53);
  v52 = (char *)&v42 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = sub_245748A50(&qword_257498828);
  v47 = *(_QWORD *)(v50 - 8);
  MEMORY[0x24BDAC7A8](v50);
  v51 = (char *)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_245748A50(&qword_257498830);
  v4 = *(_QWORD *)(v49 - 8);
  MEMORY[0x24BDAC7A8](v49);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_245748A50(&qword_257498838);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (char *)sub_245749280(a1, a1[3]);
  sub_245766D9C();
  v12 = (uint64_t)v54;
  sub_2457BB770();
  if (v12)
    goto LABEL_12;
  v44 = v4;
  v45 = v6;
  v14 = v52;
  v13 = v53;
  v46 = v8;
  v54 = a1;
  v11 = v10;
  v15 = sub_2457BB5E4();
  v16 = *(_QWORD *)(v15 + 16);
  v17 = v7;
  if (!v16)
    goto LABEL_9;
  v43 = 0;
  v18 = *(unsigned __int8 *)(v15 + 32);
  sub_245750D90(1, v16, v15, v15 + 32, 0, (2 * v16) | 1);
  v20 = v19;
  v22 = v21;
  swift_bridgeObjectRelease();
  if (v20 != v22 >> 1)
  {
    v11 = v10;
LABEL_9:
    v28 = v46;
    v29 = sub_2457BB470();
    swift_allocError();
    v31 = v30;
    sub_245748A50(&qword_2574980B0);
    *v31 = &type metadata for SamplingStrategyEnvelope;
    sub_2457BB53C();
    sub_2457BB464();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v29 - 8) + 104))(v31, *MEMORY[0x24BEE26D0], v29);
    swift_willThrow();
    swift_unknownObjectRelease();
    v32 = *(void (**)(char *, uint64_t))(v28 + 8);
    goto LABEL_10;
  }
  if (v18)
  {
    if (v18 == 1)
    {
      v56 = 1;
      sub_245766E14();
      v23 = v51;
      v24 = v10;
      v11 = v10;
      v25 = v43;
      sub_2457BB530();
      if (!v25)
      {
        v26 = v50;
        sub_2457BB59C();
        v27 = v46;
        v41 = v40;
        (*(void (**)(char *, uint64_t))(v47 + 8))(v23, v26);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v17);
        v11 = v41;
LABEL_20:
        sub_245749564((uint64_t)v54);
        return v11;
      }
    }
    else
    {
      v57 = 2;
      sub_245766DD8();
      v24 = v10;
      v11 = v10;
      v37 = v43;
      sub_2457BB530();
      if (!v37)
      {
        v38 = sub_2457BB5B4();
        v39 = v46;
        v11 = (char *)v38;
        (*(void (**)(char *, uint64_t))(v48 + 8))(v14, v13);
        swift_unknownObjectRelease();
        (*(void (**)(char *, uint64_t))(v39 + 8))(v24, v17);
        goto LABEL_20;
      }
    }
    swift_unknownObjectRelease();
    v32 = *(void (**)(char *, uint64_t))(v46 + 8);
    v33 = v24;
    goto LABEL_11;
  }
  v55 = 0;
  sub_245766E50();
  v35 = v45;
  v11 = v10;
  v36 = v43;
  sub_2457BB530();
  if (!v36)
  {
    (*(void (**)(char *, uint64_t))(v44 + 8))(v35, v49);
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v46 + 8))(v10, v17);
    v11 = 0;
    goto LABEL_20;
  }
  swift_unknownObjectRelease();
  v32 = *(void (**)(char *, uint64_t))(v46 + 8);
LABEL_10:
  v33 = v11;
LABEL_11:
  v32(v33, v17);
  a1 = v54;
LABEL_12:
  sub_245749564((uint64_t)a1);
  return v11;
}

uint64_t sub_245764084()
{
  sub_245766E50();
  return sub_2457BB788();
}

uint64_t sub_2457640AC()
{
  sub_245766E50();
  return sub_2457BB794();
}

uint64_t sub_2457640D4()
{
  char *v0;

  return sub_245763758(*v0);
}

uint64_t sub_2457640DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245763600(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245764100()
{
  sub_245766D9C();
  return sub_2457BB788();
}

uint64_t sub_245764128()
{
  sub_245766D9C();
  return sub_2457BB794();
}

uint64_t sub_245764154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457637B0(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24576417C()
{
  sub_245766E14();
  return sub_2457BB788();
}

uint64_t sub_2457641A4()
{
  sub_245766E14();
  return sub_2457BB794();
}

uint64_t sub_2457641CC()
{
  sub_245766DD8();
  return sub_2457BB788();
}

uint64_t sub_2457641F4()
{
  sub_245766DD8();
  return sub_2457BB794();
}

uint64_t sub_24576421C()
{
  uint64_t v0;

  return sub_245763B28(*(_QWORD *)v0, *(_BYTE *)(v0 + 8));
}

uint64_t sub_245764228(uint64_t a1)
{
  uint64_t v1;

  return sub_245763538(a1, *(_QWORD *)v1, *(_BYTE *)(v1 + 8));
}

uint64_t sub_245764234()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_2457BB728();
  sub_245763538((uint64_t)v4, v1, v2);
  return sub_2457BB764();
}

char *sub_24576427C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char *result;
  char v5;

  result = sub_245763B74(a1);
  if (!v2)
  {
    *(_QWORD *)a2 = result;
    *(_BYTE *)(a2 + 8) = v5;
  }
  return result;
}

uint64_t sub_2457642A8(_QWORD *a1)
{
  uint64_t v1;

  return sub_24576385C(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_2457642C4(uint64_t a1, uint64_t a2)
{
  return sub_245763598(*(_QWORD *)a1, *(_BYTE *)(a1 + 8), *(_QWORD *)a2, *(_BYTE *)(a2 + 8));
}

uint64_t sub_2457642DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = v1;
  swift_bridgeObjectRetain();
  sub_2457BB1C4();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  sub_245765A94(a1, v4);
  swift_bridgeObjectRelease();
  sub_2457BB740();
  swift_bridgeObjectRetain();
  sub_2457BB1C4();
  swift_bridgeObjectRelease();
  return sub_2457BB734();
}

BOOL sub_245764380(uint64_t a1, uint64_t a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  char v8;

  v4 = *(_QWORD *)a1 == *(_QWORD *)a2 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8);
  if (v4 || (v5 = sub_2457BB6B0(), result = 0, (v5 & 1) != 0))
  {
    if ((sub_2457659C8(*(_QWORD **)(a1 + 16), *(_QWORD **)(a2 + 16)) & 1) != 0
      && ((*(unsigned __int8 *)(a1 + 24) ^ *(unsigned __int8 *)(a2 + 24)) & 1) == 0)
    {
      if (*(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32) && *(_QWORD *)(a1 + 40) == *(_QWORD *)(a2 + 40))
        return *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48);
      v8 = sub_2457BB6B0();
      result = 0;
      if ((v8 & 1) != 0)
        return *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48);
    }
    else
    {
      return 0;
    }
  }
  return result;
}

uint64_t sub_24576442C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 0x696669746E656469 && a2 == 0xEA00000000007265;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002457C9850 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002457C9870 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = a1 == 0x6C6F506568636163 && a2 == 0xEB00000000796369;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else
    {
      v7 = a1 == 0x4965736143657375 && a2 == 0xE900000000000044;
      if (v7 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else if (a1 == 0x666C616865426E6FLL && a2 == 0xED0000444950664FLL)
      {
        swift_bridgeObjectRelease();
        return 5;
      }
      else
      {
        v9 = sub_2457BB6B0();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 5;
        else
          return 6;
      }
    }
  }
}

uint64_t sub_2457646E4()
{
  return 6;
}

void sub_2457646EC()
{
  sub_2457514C4();
  sub_2457BB734();
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_24576471C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_245764754 + 4 * byte_2457BDF4E[a1]))(0x696669746E656469, 0xEA00000000007265);
}

unint64_t sub_245764754()
{
  return 0xD000000000000015;
}

unint64_t sub_245764774()
{
  return 0xD000000000000014;
}

uint64_t sub_245764790()
{
  return 0x6C6F506568636163;
}

uint64_t sub_2457647B0()
{
  return 0x4965736143657375;
}

uint64_t sub_2457647CC()
{
  return 0x666C616865426E6FLL;
}

uint64_t sub_2457647F0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  _BYTE v10[16];
  uint64_t v11;
  char v12;

  v3 = v1;
  v5 = sub_245748A50(&qword_257498860);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = &v10[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_245749280(a1, a1[3]);
  sub_245766E8C();
  sub_2457BB77C();
  v12 = 0;
  sub_2457BB644();
  if (!v2)
  {
    v11 = *(_QWORD *)(v3 + 16);
    v10[15] = 1;
    sub_245748A50(&qword_257498870);
    sub_245766F40(&qword_257498878, (uint64_t (*)(void))sub_245766EC8, MEMORY[0x24BEE12A0]);
    sub_2457BB68C();
    v10[14] = 2;
    sub_2457BB650();
    v10[13] = 3;
    sub_245766F04();
    sub_2457BB68C();
    v10[12] = 4;
    sub_2457BB644();
    v10[11] = 5;
    sub_2457BB674();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_2457649EC()
{
  _BYTE v1[72];

  sub_2457BB728();
  sub_2457642DC((uint64_t)v1);
  return sub_2457BB764();
}

uint64_t sub_245764A28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  char v24;
  char v25;
  char v26;
  char v27;
  char v28;

  v5 = sub_245748A50(&qword_257498890);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(a1, a1[3]);
  sub_245766E8C();
  sub_2457BB770();
  if (v2)
    return sub_245749564((uint64_t)a1);
  v28 = 0;
  v9 = sub_2457BB584();
  v11 = v10;
  sub_245748A50(&qword_257498870);
  v27 = 1;
  sub_245766F40(&qword_257498898, (uint64_t (*)(void))sub_245766F9C, MEMORY[0x24BEE12D0]);
  swift_bridgeObjectRetain();
  sub_2457BB5CC();
  v21 = v9;
  v12 = v22;
  v26 = 2;
  swift_bridgeObjectRetain();
  v20 = sub_2457BB590();
  v25 = 3;
  sub_245766FD8();
  sub_2457BB5CC();
  v24 = 4;
  v18 = sub_2457BB584();
  v19 = v13;
  v23 = 5;
  swift_bridgeObjectRetain();
  v14 = sub_2457BB5B4();
  v20 &= 1u;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_245749564((uint64_t)a1);
  v15 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = v21;
  *(_QWORD *)(a2 + 8) = v11;
  *(_QWORD *)(a2 + 16) = v12;
  *(_BYTE *)(a2 + 24) = v20;
  *(_QWORD *)(a2 + 32) = v18;
  *(_QWORD *)(a2 + 40) = v15;
  *(_QWORD *)(a2 + 48) = v14;
  return result;
}

uint64_t sub_245764D90()
{
  unsigned __int8 *v0;

  return sub_24576471C(*v0);
}

uint64_t sub_245764D98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24576442C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245764DBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2457646E4();
  *a1 = result;
  return result;
}

uint64_t sub_245764DE0()
{
  sub_245766E8C();
  return sub_2457BB788();
}

uint64_t sub_245764E08()
{
  sub_245766E8C();
  return sub_2457BB794();
}

uint64_t sub_245764E30()
{
  return sub_2457649EC();
}

uint64_t sub_245764E70(uint64_t a1)
{
  return sub_2457642DC(a1);
}

uint64_t sub_245764EB0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_245764EF8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245764F3C()
{
  __int128 *v0;
  __int128 v1;
  _BYTE v3[72];
  __int128 v4;
  __int128 v5;
  __int128 v6;
  uint64_t v7;

  v1 = v0[1];
  v4 = *v0;
  v5 = v1;
  v6 = v0[2];
  v7 = *((_QWORD *)v0 + 6);
  sub_2457BB728();
  sub_2457642DC((uint64_t)v3);
  return sub_2457BB764();
}

double sub_245764F90@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  sub_245764A28(a1, (uint64_t)v6);
  if (!v2)
  {
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(_QWORD *)(a2 + 48) = v8;
  }
  return result;
}

uint64_t sub_245764FDC(_QWORD *a1)
{
  return sub_2457647F0(a1);
}

BOOL sub_24576501C(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  _OWORD v5[3];
  uint64_t v6;
  _OWORD v7[3];
  uint64_t v8;

  v2 = *(_OWORD *)(a1 + 16);
  v5[0] = *(_OWORD *)a1;
  v5[1] = v2;
  v5[2] = *(_OWORD *)(a1 + 32);
  v6 = *(_QWORD *)(a1 + 48);
  v3 = *(_OWORD *)(a2 + 16);
  v7[0] = *(_OWORD *)a2;
  v7[1] = v3;
  v7[2] = *(_OWORD *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  return sub_245764380((uint64_t)v5, (uint64_t)v7);
}

uint64_t sub_245765074(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_245748A50(&qword_2574989A8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(a1, a1[3]);
  sub_2457678E0();
  sub_2457BB77C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_245765138()
{
  sub_2457BB728();
  return sub_2457BB764();
}

uint64_t sub_24576516C(uint64_t a1)
{
  return sub_245749564(a1);
}

uint64_t sub_245765190()
{
  sub_2457678E0();
  return sub_2457BB788();
}

uint64_t sub_2457651B8()
{
  sub_2457678E0();
  return sub_2457BB794();
}

uint64_t sub_2457651E8()
{
  sub_2457BB728();
  return sub_2457BB764();
}

uint64_t sub_245765218(uint64_t a1)
{
  return sub_24576516C(a1);
}

uint64_t sub_24576522C(_QWORD *a1)
{
  return sub_245765074(a1);
}

uint64_t sub_245765240()
{
  swift_bridgeObjectRetain();
  sub_2457BB1C4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_245765288(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 == a3 && a2 == a4)
    return 1;
  else
    return sub_2457BB6B0();
}

uint64_t sub_2457652A4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x696669746E656469 && a2 == 0xEA00000000007265)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_245765334()
{
  sub_2457514C4();
  sub_2457514AC();
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_245765358()
{
  return 0x696669746E656469;
}

uint64_t sub_245765374(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = sub_245748A50(&qword_2574988F8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(a1, a1[3]);
  sub_245767050();
  sub_2457BB77C();
  sub_2457BB644();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_245765464()
{
  sub_2457BB728();
  swift_bridgeObjectRetain();
  sub_2457BB1C4();
  swift_bridgeObjectRelease();
  return sub_2457BB764();
}

uint64_t sub_2457654C0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v3 = sub_245748A50(&qword_2574988E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (uint64_t)sub_245749280(a1, a1[3]);
  sub_245767050();
  sub_2457BB770();
  if (!v1)
  {
    v7 = sub_2457BB584();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  sub_245749564((uint64_t)a1);
  return v7;
}

void sub_2457655CC()
{
  sub_245767DD8();
  sub_2457514AC();
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_2457655F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457652A4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24576561C()
{
  sub_245767050();
  return sub_2457BB788();
}

uint64_t sub_245765644()
{
  sub_245767050();
  return sub_2457BB794();
}

uint64_t sub_24576566C()
{
  return sub_245765464();
}

uint64_t sub_245765674()
{
  return sub_245765240();
}

uint64_t sub_24576567C()
{
  sub_2457BB728();
  swift_bridgeObjectRetain();
  sub_2457BB1C4();
  swift_bridgeObjectRelease();
  return sub_2457BB764();
}

uint64_t sub_2457656D0@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = sub_2457654C0(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_2457656F8(_QWORD *a1)
{
  return sub_245765374(a1);
}

uint64_t sub_245765710(uint64_t *a1, uint64_t *a2)
{
  return sub_245765288(*a1, a1[1], *a2, a2[1]);
}

uint64_t sub_245765724(uint64_t result, uint64_t a2)
{
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t i;
  int64_t v11;
  unint64_t v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  BOOL v24;
  uint64_t v25;
  unint64_t j;
  uint64_t v27;
  _QWORD *v28;
  BOOL v29;
  uint64_t v30;
  int64_t v31;
  int64_t v32;

  if (result == a2)
    return 1;
  if (*(_QWORD *)(result + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v3 = 0;
  v4 = *(_QWORD *)(result + 56);
  v30 = result + 56;
  v5 = 1 << *(_BYTE *)(result + 32);
  if (v5 < 64)
    v6 = ~(-1 << v5);
  else
    v6 = -1;
  v7 = v6 & v4;
  v31 = (unint64_t)(v5 + 63) >> 6;
  v8 = a2 + 56;
  if ((v6 & v4) == 0)
    goto LABEL_8;
LABEL_7:
  v9 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  v32 = v3;
  for (i = v9 | (v3 << 6); ; i = __clz(__rbit64(v12)) + (v13 << 6))
  {
    v15 = result;
    v16 = (uint64_t *)(*(_QWORD *)(result + 48) + 16 * i);
    v18 = *v16;
    v17 = v16[1];
    sub_2457BB728();
    swift_bridgeObjectRetain();
    sub_2457BB1C4();
    v19 = sub_2457BB764();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_41;
    v22 = *(_QWORD *)(a2 + 48);
    v23 = (_QWORD *)(v22 + 16 * v21);
    v24 = *v23 == v18 && v23[1] == v17;
    if (!v24 && (sub_2457BB6B0() & 1) == 0)
    {
      v25 = ~v20;
      for (j = v21 + 1; ; j = v27 + 1)
      {
        v27 = j & v25;
        if (((*(_QWORD *)(v8 + (((j & v25) >> 3) & 0xFFFFFFFFFFFFF8)) >> (j & v25)) & 1) == 0)
          break;
        v28 = (_QWORD *)(v22 + 16 * v27);
        v29 = *v28 == v18 && v28[1] == v17;
        if (v29 || (sub_2457BB6B0() & 1) != 0)
          goto LABEL_30;
      }
LABEL_41:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_30:
    swift_bridgeObjectRelease();
    result = v15;
    v3 = v32;
    if (v7)
      goto LABEL_7;
LABEL_8:
    v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_44;
    }
    if (v11 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v11);
    v13 = v3 + 1;
    if (!v12)
    {
      v13 = v3 + 2;
      if (v3 + 2 >= v31)
        return 1;
      v12 = *(_QWORD *)(v30 + 8 * v13);
      if (!v12)
      {
        v13 = v3 + 3;
        if (v3 + 3 >= v31)
          return 1;
        v12 = *(_QWORD *)(v30 + 8 * v13);
        if (!v12)
        {
          v13 = v3 + 4;
          if (v3 + 4 >= v31)
            return 1;
          v12 = *(_QWORD *)(v30 + 8 * v13);
          if (!v12)
            break;
        }
      }
    }
LABEL_23:
    v7 = (v12 - 1) & v12;
    v32 = v13;
  }
  v14 = v3 + 5;
  if (v3 + 5 >= v31)
    return 1;
  v12 = *(_QWORD *)(v30 + 8 * v14);
  if (v12)
  {
    v13 = v3 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    v13 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v13 >= v31)
      return 1;
    v12 = *(_QWORD *)(v30 + 8 * v13);
    ++v14;
    if (v12)
      goto LABEL_23;
  }
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_2457659C8(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  uint64_t result;
  char v7;
  _QWORD *v8;
  _QWORD *v9;
  unint64_t v10;

  v2 = a1[2];
  if (v2 != a2[2])
    return 0;
  if (!v2 || a1 == a2)
    return 1;
  result = a1[4];
  if (result != a2[4] || a1[5] != a2[5])
  {
    v7 = sub_2457BB6B0();
    result = 0;
    if ((v7 & 1) == 0)
      return result;
  }
  if (v2 == 1)
    return 1;
  v8 = a1 + 7;
  v9 = a2 + 7;
  v10 = 1;
  while (v10 < v2)
  {
    result = *(v8 - 1);
    if (result != *(v9 - 1) || *v8 != *v9)
    {
      result = sub_2457BB6B0();
      if ((result & 1) == 0)
        return 0;
    }
    ++v10;
    v8 += 2;
    v9 += 2;
    if (v2 == v10)
      return 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_245765A94(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_2457BB734();
  if (v3)
  {
    v5 = a2 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2457BB1C4();
      result = swift_bridgeObjectRelease();
      v5 += 16;
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_245765B08(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t result;
  uint64_t v9;
  int64_t v10;
  uint64_t v12;
  int64_t v13;
  uint64_t v14;

  sub_2457BB764();
  v3 = a2 + 56;
  v4 = 1 << *(_BYTE *)(a2 + 32);
  v5 = -1;
  if (v4 < 64)
    v5 = ~(-1 << v4);
  v6 = v5 & *(_QWORD *)(a2 + 56);
  v7 = (unint64_t)(v4 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v9 = 0;
  v10 = 0;
  if (!v6)
    goto LABEL_5;
LABEL_4:
  for (v6 &= v6 - 1; ; v6 = (v12 - 1) & v12)
  {
    sub_2457BB728();
    swift_bridgeObjectRetain();
    sub_2457BB1C4();
    v14 = sub_2457BB764();
    result = swift_bridgeObjectRelease();
    v9 ^= v14;
    if (v6)
      goto LABEL_4;
LABEL_5:
    if (__OFADD__(v10++, 1))
      goto LABEL_19;
    if (v10 >= v7)
    {
LABEL_17:
      swift_release();
      return sub_2457BB734();
    }
    v12 = *(_QWORD *)(v3 + 8 * v10);
    if (!v12)
      break;
LABEL_14:
    ;
  }
  v13 = v10 + 1;
  if (v10 + 1 >= v7)
    goto LABEL_17;
  v12 = *(_QWORD *)(v3 + 8 * v13);
  if (v12)
  {
    ++v10;
    goto LABEL_14;
  }
  while (1)
  {
    v10 = v13 + 1;
    if (__OFADD__(v13, 1))
      break;
    if (v10 >= v7)
      goto LABEL_17;
    v12 = *(_QWORD *)(v3 + 8 * v10);
    ++v13;
    if (v12)
      goto LABEL_14;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

uint64_t sub_245765CA0(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

void sub_245765CC8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_245767D48(a1, a2, a3);
  sub_245767B90(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  sub_245748A90();
}

unint64_t sub_245765CF4()
{
  unint64_t result;

  result = qword_2574986D0;
  if (!qword_2574986D0)
  {
    result = MEMORY[0x24953B288](&unk_2457BEDE4, &type metadata for SamplingStrategyEnvelope);
    atomic_store(result, (unint64_t *)&qword_2574986D0);
  }
  return result;
}

void sub_245765D30(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_24574B5EC(&qword_257498670);
    v7 = a2;
    atomic_store(MEMORY[0x24953B288](a3, v6, &v7), a1);
  }
  sub_245767D88();
}

unint64_t sub_245765D84()
{
  unint64_t result;

  result = qword_257498710;
  if (!qword_257498710)
  {
    result = MEMORY[0x24953B288](&unk_2457BED94, &type metadata for DocumentRegistrationStatusEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498710);
  }
  return result;
}

unint64_t sub_245765DC0()
{
  unint64_t result;

  result = qword_257498720;
  if (!qword_257498720)
  {
    result = MEMORY[0x24953B288](&unk_2457BED44, &type metadata for DocumentRegistrationStatusEnvelope.FinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498720);
  }
  return result;
}

unint64_t sub_245765DFC()
{
  unint64_t result;

  result = qword_257498728;
  if (!qword_257498728)
  {
    result = MEMORY[0x24953B288](&unk_2457BECF4, &type metadata for DocumentRegistrationStatusEnvelope.RegisteringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498728);
  }
  return result;
}

unint64_t sub_245765E38()
{
  unint64_t result;

  result = qword_257498730;
  if (!qword_257498730)
  {
    result = MEMORY[0x24953B288](&unk_2457BECCC, &type metadata for ProgressEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498730);
  }
  return result;
}

unint64_t sub_245765E74()
{
  unint64_t result;

  result = qword_257498750;
  if (!qword_257498750)
  {
    result = MEMORY[0x24953B288](&unk_2457BECA4, &type metadata for ProgressEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498750);
  }
  return result;
}

unint64_t sub_245765EB0()
{
  unint64_t result;

  result = qword_257498758;
  if (!qword_257498758)
  {
    result = MEMORY[0x24953B288](&unk_2457BE418, &type metadata for SamplingParametersEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498758);
  }
  return result;
}

void sub_245765EEC(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_245767D48(a1, a2, a3);
  sub_245767B90(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  sub_245748A90();
}

void sub_245765F18(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = sub_245748A50(a2);
  sub_245767B7C(v2);
  sub_245748A90();
}

uint64_t sub_245765F40(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_24575922C(a1, a2);
  return a1;
}

uint64_t sub_245765F54(uint64_t a1)
{
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_245765F7C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_245765FA4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *a1;
  *(_BYTE *)(a2 + 8) = *((_BYTE *)a1 + 8);
  *(_QWORD *)a2 = v2;
  return a2;
}

_QWORD *initializeBufferWithCopyOfBuffer for ModelBundleEnvelope(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for ModelBundleEnvelope(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for ModelBundleEnvelope(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ModelBundleEnvelope(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ModelBundleEnvelope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelBundleEnvelope()
{
  return &type metadata for ModelBundleEnvelope;
}

ValueMetadata *type metadata accessor for DocumentRegistrationStatusEnvelope.CodingKeys()
{
  return &type metadata for DocumentRegistrationStatusEnvelope.CodingKeys;
}

ValueMetadata *type metadata accessor for DocumentRegistrationStatusEnvelope.RegisteringCodingKeys()
{
  return &type metadata for DocumentRegistrationStatusEnvelope.RegisteringCodingKeys;
}

ValueMetadata *type metadata accessor for DocumentRegistrationStatusEnvelope.FinishedCodingKeys()
{
  return &type metadata for DocumentRegistrationStatusEnvelope.FinishedCodingKeys;
}

uint64_t getEnumTagSinglePayload for SessionConfigurationEnvelope.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SessionConfigurationEnvelope.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2457661F0 + 4 * byte_2457BDF59[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_245766224 + 4 * byte_2457BDF54[v4]))();
}

uint64_t sub_245766224(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24576622C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245766234);
  return result;
}

uint64_t sub_245766240(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245766248);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24576624C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245766254(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SessionConfigurationEnvelope.CodingKeys()
{
  return &type metadata for SessionConfigurationEnvelope.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SamplingParametersEnvelope.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SamplingParametersEnvelope.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_245766344 + 4 * byte_2457BDF63[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_245766378 + 4 * byte_2457BDF5E[v4]))();
}

uint64_t sub_245766378(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245766380(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245766388);
  return result;
}

uint64_t sub_245766394(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24576639CLL);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_2457663A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457663A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SamplingParametersEnvelope.CodingKeys()
{
  return &type metadata for SamplingParametersEnvelope.CodingKeys;
}

uint64_t _s4Sage34DocumentRegistrationStatusEnvelopeO10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_245766410 + 4 * byte_2457BDF6D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_245766444 + 4 * byte_2457BDF68[v4]))();
}

uint64_t sub_245766444(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24576644C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245766454);
  return result;
}

uint64_t sub_245766460(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245766468);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24576646C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245766474(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for DocumentRegistrationEnvelope.CodingKeys()
{
  return &type metadata for DocumentRegistrationEnvelope.CodingKeys;
}

uint64_t destroy for TGSessionConfigurationEnvelope()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TGSessionConfigurationEnvelope(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TGSessionConfigurationEnvelope(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for TGSessionConfigurationEnvelope(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for TGSessionConfigurationEnvelope(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for TGSessionConfigurationEnvelope(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 56))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TGSessionConfigurationEnvelope(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 56) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TGSessionConfigurationEnvelope()
{
  return &type metadata for TGSessionConfigurationEnvelope;
}

uint64_t initializeBufferWithCopyOfBuffer for SamplingStrategyEnvelope(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for SamplingStrategyEnvelope(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SamplingStrategyEnvelope(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_24576676C(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u)
    return *(unsigned __int8 *)(a1 + 8);
  else
    return (*(_DWORD *)a1 + 2);
}

uint64_t sub_245766784(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(_QWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(_BYTE *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SamplingStrategyEnvelope()
{
  return &type metadata for SamplingStrategyEnvelope;
}

__n128 initializeWithTake for MailMessage.ThreadClassificationOptions(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ProgressEnvelope(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for ProgressEnvelope(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ProgressEnvelope()
{
  return &type metadata for ProgressEnvelope;
}

unint64_t sub_245766820()
{
  unint64_t result;

  result = qword_257498770;
  if (!qword_257498770)
  {
    result = MEMORY[0x24953B288](&unk_2457BE664, &type metadata for ProgressEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498770);
  }
  return result;
}

unint64_t sub_245766860()
{
  unint64_t result;

  result = qword_257498778;
  if (!qword_257498778)
  {
    result = MEMORY[0x24953B288](&unk_2457BE6CC, &type metadata for SamplingStrategyEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498778);
  }
  return result;
}

unint64_t sub_2457668A0()
{
  unint64_t result;

  result = qword_257498780;
  if (!qword_257498780)
  {
    result = MEMORY[0x24953B288](&unk_2457BE734, &type metadata for TGSessionConfigurationEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498780);
  }
  return result;
}

unint64_t sub_2457668E0()
{
  unint64_t result;

  result = qword_257498788;
  if (!qword_257498788)
  {
    result = MEMORY[0x24953B288](&unk_2457BE82C, &type metadata for DocumentRegistrationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498788);
  }
  return result;
}

unint64_t sub_245766920()
{
  unint64_t result;

  result = qword_257498790;
  if (!qword_257498790)
  {
    result = MEMORY[0x24953B288](&unk_2457BE8E4, &type metadata for SamplingParametersEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498790);
  }
  return result;
}

unint64_t sub_245766960()
{
  unint64_t result;

  result = qword_257498798;
  if (!qword_257498798)
  {
    result = MEMORY[0x24953B288](&unk_2457BE99C, &type metadata for SessionConfigurationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498798);
  }
  return result;
}

unint64_t sub_2457669A0()
{
  unint64_t result;

  result = qword_2574987A0;
  if (!qword_2574987A0)
  {
    result = MEMORY[0x24953B288](&unk_2457BEA54, &type metadata for DocumentRegistrationStatusEnvelope.FinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987A0);
  }
  return result;
}

unint64_t sub_2457669E0()
{
  unint64_t result;

  result = qword_2574987A8;
  if (!qword_2574987A8)
  {
    result = MEMORY[0x24953B288](&unk_2457BEB0C, &type metadata for DocumentRegistrationStatusEnvelope.RegisteringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987A8);
  }
  return result;
}

unint64_t sub_245766A20()
{
  unint64_t result;

  result = qword_2574987B0;
  if (!qword_2574987B0)
  {
    result = MEMORY[0x24953B288](&unk_2457BEBC4, &type metadata for DocumentRegistrationStatusEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987B0);
  }
  return result;
}

unint64_t sub_245766A60()
{
  unint64_t result;

  result = qword_2574987B8;
  if (!qword_2574987B8)
  {
    result = MEMORY[0x24953B288](&unk_2457BEBEC, &type metadata for ModelBundleEnvelope);
    atomic_store(result, (unint64_t *)&qword_2574987B8);
  }
  return result;
}

unint64_t sub_245766AA0()
{
  unint64_t result;

  result = qword_2574987C0;
  if (!qword_2574987C0)
  {
    result = MEMORY[0x24953B288](&unk_2457BEA7C, &type metadata for DocumentRegistrationStatusEnvelope.RegisteringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987C0);
  }
  return result;
}

unint64_t sub_245766AE0()
{
  unint64_t result;

  result = qword_2574987C8;
  if (!qword_2574987C8)
  {
    result = MEMORY[0x24953B288](&unk_2457BEAA4, &type metadata for DocumentRegistrationStatusEnvelope.RegisteringCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987C8);
  }
  return result;
}

unint64_t sub_245766B20()
{
  unint64_t result;

  result = qword_2574987D0;
  if (!qword_2574987D0)
  {
    result = MEMORY[0x24953B288](&unk_2457BE9C4, &type metadata for DocumentRegistrationStatusEnvelope.FinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987D0);
  }
  return result;
}

unint64_t sub_245766B60()
{
  unint64_t result;

  result = qword_2574987D8;
  if (!qword_2574987D8)
  {
    result = MEMORY[0x24953B288](&unk_2457BE9EC, &type metadata for DocumentRegistrationStatusEnvelope.FinishedCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987D8);
  }
  return result;
}

unint64_t sub_245766BA0()
{
  unint64_t result;

  result = qword_2574987E0;
  if (!qword_2574987E0)
  {
    result = MEMORY[0x24953B288](&unk_2457BEB34, &type metadata for DocumentRegistrationStatusEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987E0);
  }
  return result;
}

unint64_t sub_245766BE0()
{
  unint64_t result;

  result = qword_2574987E8;
  if (!qword_2574987E8)
  {
    result = MEMORY[0x24953B288](&unk_2457BEB5C, &type metadata for DocumentRegistrationStatusEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987E8);
  }
  return result;
}

unint64_t sub_245766C20()
{
  unint64_t result;

  result = qword_2574987F0;
  if (!qword_2574987F0)
  {
    result = MEMORY[0x24953B288](&unk_2457BE90C, &type metadata for SessionConfigurationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987F0);
  }
  return result;
}

unint64_t sub_245766C60()
{
  unint64_t result;

  result = qword_2574987F8;
  if (!qword_2574987F8)
  {
    result = MEMORY[0x24953B288](&unk_2457BE934, &type metadata for SessionConfigurationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574987F8);
  }
  return result;
}

unint64_t sub_245766CA0()
{
  unint64_t result;

  result = qword_257498800;
  if (!qword_257498800)
  {
    result = MEMORY[0x24953B288](&unk_2457BE854, &type metadata for SamplingParametersEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498800);
  }
  return result;
}

unint64_t sub_245766CE0()
{
  unint64_t result;

  result = qword_257498808;
  if (!qword_257498808)
  {
    result = MEMORY[0x24953B288](&unk_2457BE87C, &type metadata for SamplingParametersEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498808);
  }
  return result;
}

unint64_t sub_245766D20()
{
  unint64_t result;

  result = qword_257498810;
  if (!qword_257498810)
  {
    result = MEMORY[0x24953B288](&unk_2457BE79C, &type metadata for DocumentRegistrationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498810);
  }
  return result;
}

unint64_t sub_245766D60()
{
  unint64_t result;

  result = qword_257498818;
  if (!qword_257498818)
  {
    result = MEMORY[0x24953B288](&unk_2457BE7C4, &type metadata for DocumentRegistrationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498818);
  }
  return result;
}

unint64_t sub_245766D9C()
{
  unint64_t result;

  result = qword_257498840;
  if (!qword_257498840)
  {
    result = MEMORY[0x24953B288](&unk_2457BF71C, &type metadata for SamplingStrategyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498840);
  }
  return result;
}

unint64_t sub_245766DD8()
{
  unint64_t result;

  result = qword_257498848;
  if (!qword_257498848)
  {
    result = MEMORY[0x24953B288](&unk_2457BF6CC, &type metadata for SamplingStrategyEnvelope.TopKCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498848);
  }
  return result;
}

unint64_t sub_245766E14()
{
  unint64_t result;

  result = qword_257498850;
  if (!qword_257498850)
  {
    result = MEMORY[0x24953B288](&unk_2457BF67C, &type metadata for SamplingStrategyEnvelope.NucleusSamplingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498850);
  }
  return result;
}

unint64_t sub_245766E50()
{
  unint64_t result;

  result = qword_257498858;
  if (!qword_257498858)
  {
    result = MEMORY[0x24953B288](&unk_2457BF62C, &type metadata for SamplingStrategyEnvelope.ArgmaxCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498858);
  }
  return result;
}

unint64_t sub_245766E8C()
{
  unint64_t result;

  result = qword_257498868;
  if (!qword_257498868)
  {
    result = MEMORY[0x24953B288](&unk_2457BF5DC, &type metadata for TGSessionConfigurationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498868);
  }
  return result;
}

unint64_t sub_245766EC8()
{
  unint64_t result;

  result = qword_257498880;
  if (!qword_257498880)
  {
    result = MEMORY[0x24953B288](&unk_2457BEC14, &type metadata for ModelBundleEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498880);
  }
  return result;
}

unint64_t sub_245766F04()
{
  unint64_t result;

  result = qword_257498888;
  if (!qword_257498888)
  {
    result = MEMORY[0x24953B288](&unk_2457BF5B4, &type metadata for CachePolicyEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498888);
  }
  return result;
}

void sub_245766F40(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  if (!*a1)
  {
    v6 = sub_24574B5EC(&qword_257498870);
    v7 = a2();
    atomic_store(MEMORY[0x24953B288](a3, v6, &v7), a1);
  }
  sub_245767D88();
}

unint64_t sub_245766F9C()
{
  unint64_t result;

  result = qword_2574988A0;
  if (!qword_2574988A0)
  {
    result = MEMORY[0x24953B288](&unk_2457BEC3C, &type metadata for ModelBundleEnvelope);
    atomic_store(result, (unint64_t *)&qword_2574988A0);
  }
  return result;
}

unint64_t sub_245766FD8()
{
  unint64_t result;

  result = qword_2574988A8;
  if (!qword_2574988A8)
  {
    result = MEMORY[0x24953B288](&unk_2457BF58C, &type metadata for CachePolicyEnvelope);
    atomic_store(result, (unint64_t *)&qword_2574988A8);
  }
  return result;
}

unint64_t sub_245767014()
{
  unint64_t result;

  result = qword_2574988D8;
  if (!qword_2574988D8)
  {
    result = MEMORY[0x24953B288](&unk_2457BF53C, &type metadata for ProgressEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574988D8);
  }
  return result;
}

unint64_t sub_245767050()
{
  unint64_t result;

  result = qword_2574988F0;
  if (!qword_2574988F0)
  {
    result = MEMORY[0x24953B288](&unk_2457BF4EC, &type metadata for ModelBundleEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574988F0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ModelBundleEnvelope.CodingKeys()
{
  return &type metadata for ModelBundleEnvelope.CodingKeys;
}

ValueMetadata *type metadata accessor for ProgressEnvelope.CodingKeys()
{
  return &type metadata for ProgressEnvelope.CodingKeys;
}

uint64_t getEnumTagSinglePayload for TGSessionConfigurationEnvelope.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFB)
  {
    if (a2 + 5 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 5) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 6;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v5 = v6 - 6;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TGSessionConfigurationEnvelope.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_245767188 + 4 * byte_2457BDF77[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_2457671BC + 4 * byte_2457BDF72[v4]))();
}

uint64_t sub_2457671BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457671C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457671CCLL);
  return result;
}

uint64_t sub_2457671D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457671E0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_2457671E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457671EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TGSessionConfigurationEnvelope.CodingKeys()
{
  return &type metadata for TGSessionConfigurationEnvelope.CodingKeys;
}

uint64_t _s4Sage16ProgressEnvelopeV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_245767254 + 4 * byte_2457BDF81[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_245767288 + 4 * byte_2457BDF7C[v4]))();
}

uint64_t sub_245767288(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245767290(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245767298);
  return result;
}

uint64_t sub_2457672A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457672ACLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2457672B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457672B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SamplingStrategyEnvelope.CodingKeys()
{
  return &type metadata for SamplingStrategyEnvelope.CodingKeys;
}

ValueMetadata *type metadata accessor for SamplingStrategyEnvelope.ArgmaxCodingKeys()
{
  return &type metadata for SamplingStrategyEnvelope.ArgmaxCodingKeys;
}

ValueMetadata *type metadata accessor for SamplingStrategyEnvelope.NucleusSamplingCodingKeys()
{
  return &type metadata for SamplingStrategyEnvelope.NucleusSamplingCodingKeys;
}

uint64_t _s4Sage34DocumentRegistrationStatusEnvelopeO21RegisteringCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_245767334 + 4 * byte_2457BDF86[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_245767354 + 4 * byte_2457BDF8B[v4]))();
}

_BYTE *sub_245767334(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_245767354(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24576735C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245767364(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24576736C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245767374(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SamplingStrategyEnvelope.TopKCodingKeys()
{
  return &type metadata for SamplingStrategyEnvelope.TopKCodingKeys;
}

ValueMetadata *type metadata accessor for CachePolicyEnvelope()
{
  return &type metadata for CachePolicyEnvelope;
}

unint64_t sub_2457673A4()
{
  unint64_t result;

  result = qword_257498900;
  if (!qword_257498900)
  {
    result = MEMORY[0x24953B288](&unk_2457BEFE4, &type metadata for CachePolicyEnvelope);
    atomic_store(result, (unint64_t *)&qword_257498900);
  }
  return result;
}

unint64_t sub_2457673E4()
{
  unint64_t result;

  result = qword_257498908;
  if (!qword_257498908)
  {
    result = MEMORY[0x24953B288](&unk_2457BF0DC, &type metadata for SamplingStrategyEnvelope.TopKCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498908);
  }
  return result;
}

unint64_t sub_245767424()
{
  unint64_t result;

  result = qword_257498910;
  if (!qword_257498910)
  {
    result = MEMORY[0x24953B288](&unk_2457BF194, &type metadata for SamplingStrategyEnvelope.NucleusSamplingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498910);
  }
  return result;
}

unint64_t sub_245767464()
{
  unint64_t result;

  result = qword_257498918;
  if (!qword_257498918)
  {
    result = MEMORY[0x24953B288](&unk_2457BF29C, &type metadata for SamplingStrategyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498918);
  }
  return result;
}

unint64_t sub_2457674A4()
{
  unint64_t result;

  result = qword_257498920;
  if (!qword_257498920)
  {
    result = MEMORY[0x24953B288](&unk_2457BF354, &type metadata for TGSessionConfigurationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498920);
  }
  return result;
}

unint64_t sub_2457674E4()
{
  unint64_t result;

  result = qword_257498928;
  if (!qword_257498928)
  {
    result = MEMORY[0x24953B288](&unk_2457BF40C, &type metadata for ProgressEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498928);
  }
  return result;
}

unint64_t sub_245767524()
{
  unint64_t result;

  result = qword_257498930;
  if (!qword_257498930)
  {
    result = MEMORY[0x24953B288](&unk_2457BF4C4, &type metadata for ModelBundleEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498930);
  }
  return result;
}

unint64_t sub_245767564()
{
  unint64_t result;

  result = qword_257498938;
  if (!qword_257498938)
  {
    result = MEMORY[0x24953B288](&unk_2457BF434, &type metadata for ModelBundleEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498938);
  }
  return result;
}

unint64_t sub_2457675A4()
{
  unint64_t result;

  result = qword_257498940;
  if (!qword_257498940)
  {
    result = MEMORY[0x24953B288](&unk_2457BF45C, &type metadata for ModelBundleEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498940);
  }
  return result;
}

unint64_t sub_2457675E4()
{
  unint64_t result;

  result = qword_257498948;
  if (!qword_257498948)
  {
    result = MEMORY[0x24953B288](&unk_2457BF37C, &type metadata for ProgressEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498948);
  }
  return result;
}

unint64_t sub_245767624()
{
  unint64_t result;

  result = qword_257498950;
  if (!qword_257498950)
  {
    result = MEMORY[0x24953B288](&unk_2457BF3A4, &type metadata for ProgressEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498950);
  }
  return result;
}

unint64_t sub_245767664()
{
  unint64_t result;

  result = qword_257498958;
  if (!qword_257498958)
  {
    result = MEMORY[0x24953B288](&unk_2457BF2C4, &type metadata for TGSessionConfigurationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498958);
  }
  return result;
}

unint64_t sub_2457676A4()
{
  unint64_t result;

  result = qword_257498960;
  if (!qword_257498960)
  {
    result = MEMORY[0x24953B288](&unk_2457BF2EC, &type metadata for TGSessionConfigurationEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498960);
  }
  return result;
}

unint64_t sub_2457676E4()
{
  unint64_t result;

  result = qword_257498968;
  if (!qword_257498968)
  {
    result = MEMORY[0x24953B288](&unk_2457BF1BC, &type metadata for SamplingStrategyEnvelope.ArgmaxCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498968);
  }
  return result;
}

unint64_t sub_245767724()
{
  unint64_t result;

  result = qword_257498970;
  if (!qword_257498970)
  {
    result = MEMORY[0x24953B288](&unk_2457BF1E4, &type metadata for SamplingStrategyEnvelope.ArgmaxCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498970);
  }
  return result;
}

unint64_t sub_245767764()
{
  unint64_t result;

  result = qword_257498978;
  if (!qword_257498978)
  {
    result = MEMORY[0x24953B288](&unk_2457BF104, &type metadata for SamplingStrategyEnvelope.NucleusSamplingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498978);
  }
  return result;
}

unint64_t sub_2457677A4()
{
  unint64_t result;

  result = qword_257498980;
  if (!qword_257498980)
  {
    result = MEMORY[0x24953B288](&unk_2457BF12C, &type metadata for SamplingStrategyEnvelope.NucleusSamplingCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498980);
  }
  return result;
}

unint64_t sub_2457677E4()
{
  unint64_t result;

  result = qword_257498988;
  if (!qword_257498988)
  {
    result = MEMORY[0x24953B288](&unk_2457BF04C, &type metadata for SamplingStrategyEnvelope.TopKCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498988);
  }
  return result;
}

unint64_t sub_245767824()
{
  unint64_t result;

  result = qword_257498990;
  if (!qword_257498990)
  {
    result = MEMORY[0x24953B288](&unk_2457BF074, &type metadata for SamplingStrategyEnvelope.TopKCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498990);
  }
  return result;
}

unint64_t sub_245767864()
{
  unint64_t result;

  result = qword_257498998;
  if (!qword_257498998)
  {
    result = MEMORY[0x24953B288](&unk_2457BF20C, &type metadata for SamplingStrategyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498998);
  }
  return result;
}

unint64_t sub_2457678A4()
{
  unint64_t result;

  result = qword_2574989A0;
  if (!qword_2574989A0)
  {
    result = MEMORY[0x24953B288](&unk_2457BF234, &type metadata for SamplingStrategyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574989A0);
  }
  return result;
}

unint64_t sub_2457678E0()
{
  unint64_t result;

  result = qword_2574989B0;
  if (!qword_2574989B0)
  {
    result = MEMORY[0x24953B288](&unk_2457BF7BC, &type metadata for CachePolicyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574989B0);
  }
  return result;
}

ValueMetadata *type metadata accessor for CachePolicyEnvelope.CodingKeys()
{
  return &type metadata for CachePolicyEnvelope.CodingKeys;
}

unint64_t sub_245767930()
{
  unint64_t result;

  result = qword_2574989B8;
  if (!qword_2574989B8)
  {
    result = MEMORY[0x24953B288](&unk_2457BF76C, &type metadata for CachePolicyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574989B8);
  }
  return result;
}

unint64_t sub_245767970()
{
  unint64_t result;

  result = qword_2574989C0;
  if (!qword_2574989C0)
  {
    result = MEMORY[0x24953B288](&unk_2457BF794, &type metadata for CachePolicyEnvelope.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574989C0);
  }
  return result;
}

uint64_t sub_245767A3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24574E14C(*(_QWORD *)(a1 + a2), *(_QWORD *)(a1 + a2 + 8));
}

uint64_t sub_245767A48()
{
  return swift_beginAccess();
}

uint64_t sub_245767A5C()
{
  return swift_beginAccess();
}

uint64_t sub_245767A70()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245767A80()
{
  return _swift_stdlib_reportUnimplementedInitializer();
}

uint64_t sub_245767A8C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245767A98()
{
  return swift_getObjectType();
}

uint64_t sub_245767AA8()
{
  return swift_getObjectType();
}

uint64_t sub_245767AB4()
{
  return sub_2457BAB4C();
}

uint64_t sub_245767AE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24575922C(*(_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 8));
}

void sub_245767AFC(id a1)
{

}

uint64_t sub_245767B0C()
{
  return swift_getObjectType();
}

uint64_t sub_245767B14()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

uint64_t sub_245767B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v2, v0, v1);
}

uint64_t sub_245767B54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t sub_245767B64()
{
  return sub_2457BAB4C();
}

uint64_t sub_245767B6C()
{
  return sub_2457BAB58();
}

id sub_245767B74(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_24575981C(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xEB00000000000000, a4);
}

uint64_t sub_245767B7C(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t sub_245767B90@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_245767BB4()
{
  return sub_2457BAA68();
}

uint64_t sub_245767BBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_245767BDC()
{
  return sub_2457BB1A0();
}

uint64_t sub_245767BF8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_24574E14C(v0, v1);
}

uint64_t sub_245767C04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, a3, a4);
}

uint64_t sub_245767C10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, a2, a3);
}

uint64_t sub_245767C2C()
{
  return sub_2457BB1A0();
}

uint64_t sub_245767C44()
{
  return 0;
}

uint64_t sub_245767C60()
{
  return 0;
}

uint64_t sub_245767C7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 128) + 8))(v1, v0);
}

uint64_t _s4Sage15ToolXPCEnvelopeC5coderACSgSo7NSCoderC_tcfCTj_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t _s4Sage15ToolXPCEnvelopeC7sealingAC29GenerativeFunctionsFoundation0B0V_tcfCTj_0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

id sub_245767CA0(void *a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  return sub_24575981C(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xE900000000000000, a4);
}

uint64_t sub_245767CA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24575922C(*(_QWORD *)(v1 + a1), *(_QWORD *)(v1 + a1 + 8));
}

uint64_t sub_245767CBC()
{
  return 0;
}

void sub_245767CDC(void *a1, uint64_t *a2)
{
  sub_24575D44C(a1, a2);
}

uint64_t sub_245767CE4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245767CF0()
{
  return swift_dynamicCast();
}

uint64_t sub_245767D20()
{
  return sub_2457BB0D4();
}

uint64_t sub_245767D28()
{
  return swift_getObjectType();
}

void sub_245767D38(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_245759270(a1, v3, a3);
}

void sub_245767D40(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_24575E898(v2, a2);
}

uint64_t sub_245767D48(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_245748A50(a3);
}

uint64_t sub_245767D58(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t sub_245767D68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_245767D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

id sub_245767DA8()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  return objc_msgSend(v0, (SEL)(v2 + 3016), v1);
}

uint64_t sub_245767DB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v2, v1);
}

uint64_t sub_245767DC8()
{
  return sub_2457BB1A0();
}

uint64_t sub_245767DD8()
{
  return sub_2457BB728();
}

uint64_t sub_245767DE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_245767DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, 1, v2);
}

uint64_t sub_245767DF4()
{
  return type metadata accessor for DocumentRegistrationStatusEnvelope(0);
}

uint64_t sub_245767E18()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245767E24()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245767E38()
{
  uint64_t v0;

  return v0;
}

void sub_245767E4C(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v4 = &v1[a1];
  *(_QWORD *)v4 = v2;
  *((_QWORD *)v4 + 1) = v3;

}

uint64_t sub_245767E58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_245767E60()
{
  return sub_2457BB1A0();
}

id sub_245767E6C(int a1, const char *a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, objc_super a10)
{
  return objc_msgSendSuper2(&a10, a2);
}

id sub_245767E74(uint64_t a1, const char *a2)
{
  uint64_t v2;

  return objc_msgSendSuper2((objc_super *)(v2 - 104), a2);
}

void sub_245767E7C(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char *v3;
  char *v4;

  v4 = &v3[a3];
  *(_QWORD *)v4 = a1;
  *((_QWORD *)v4 + 1) = a2;

}

void sub_245767E88(uint64_t a1@<X8>)
{
  char *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  v4 = &v1[a1];
  *(_QWORD *)v4 = v2;
  *((_QWORD *)v4 + 1) = v3;

}

void sub_245767E94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_245765CC8(v3 - 144, v3 - 112, a3);
}

uint64_t sub_245767EA0()
{
  return sub_2457BB3D4();
}

uint64_t sub_245767EAC()
{
  return sub_2457BB734();
}

uint64_t sub_245767EB8()
{
  uint64_t v0;
  unint64_t v1;

  return sub_24574E14C(v0, v1);
}

uint64_t sub_245767EC4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245767ED0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void GenerativeExperiencesSessionClient.__allocating_init(_:)()
{
  sub_2457514D8();
  sub_245767A8C();
  GenerativeExperiencesSessionClient.init(_:)();
  sub_245748A90();
}

void GenerativeExperiencesSessionClient.__allocating_init(identifier:)()
{
  sub_2457514D8();
  sub_245777400();
  GenerativeExperiencesSessionClient.init(identifier:)();
}

void *sub_245767F38()
{
  qword_257498A30 = (uint64_t)&unk_2574B56C8;
  return &unk_2574B56C8;
}

id static GenerativeExperiencesSessionXPCService.interface.getter()
{
  if (qword_257497E20 != -1)
    swift_once();
  sub_245776B0C();
  return (id)qword_257498A30;
}

void static GenerativeExperiencesSessionXPCService.interface.setter(uint64_t a1)
{
  void *v2;

  if (qword_257497E20 != -1)
    swift_once();
  sub_245756E1C();
  v2 = (void *)qword_257498A30;
  qword_257498A30 = a1;

  sub_2457776AC();
}

void static GenerativeExperiencesSessionXPCService.interface.modify()
{
  if (qword_257497E20 != -1)
    swift_once();
  sub_245756E1C();
  sub_245748A90();
}

uint64_t static GenerativeExperiencesSessionXPCService.serviceName.getter()
{
  return sub_245777124((uint64_t *)&unk_257498A38);
}

void static GenerativeExperiencesSessionXPCService.serviceName.setter(uint64_t a1, uint64_t a2)
{
  sub_24577711C(a1, a2, qword_257498A38);
}

void static GenerativeExperiencesSessionXPCService.serviceName.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

uint64_t static GenerativeExperiencesSessionXPCService.entitlementName.getter()
{
  return sub_245777124((uint64_t *)&unk_257498A48);
}

uint64_t sub_2457680D8(uint64_t *a1)
{
  uint64_t v2;

  sub_245776B0C();
  v2 = *a1;
  sub_245777474();
  return v2;
}

void static GenerativeExperiencesSessionXPCService.entitlementName.setter(uint64_t a1, uint64_t a2)
{
  sub_24577711C(a1, a2, qword_257498A48);
}

void sub_245768128(uint64_t a1, uint64_t a2, _QWORD *a3, _QWORD *a4)
{
  uint64_t v4;
  uint64_t v5;

  sub_245777664();
  sub_245756E1C();
  *a3 = v5;
  *a4 = v4;
  swift_bridgeObjectRelease();
  sub_245756F1C();
}

void static GenerativeExperiencesSessionXPCService.entitlementName.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

uint64_t sub_2457681A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2457BB08C();
  sub_245756D18(v0, qword_257498A58);
  v1 = sub_24574E0F8(v0, (uint64_t)qword_257498A58);
  if (qword_257497E48 != -1)
    swift_once();
  v2 = sub_24574E0F8(v0, (uint64_t)qword_257498E60);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void static GenerativeExperiencesSessionXPCService.logger.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_257497E28 != -1)
    swift_once();
  v2 = sub_245751504();
  v3 = sub_24574E0F8(v2, (uint64_t)qword_257498A58);
  sub_245776B0C();
  sub_245776F2C(a1, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  sub_245756F1C();
}

void static GenerativeExperiencesSessionXPCService.logger.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  if (qword_257497E28 != -1)
    swift_once();
  v2 = sub_245751504();
  sub_24574E0F8(v2, (uint64_t)qword_257498A58);
  sub_245756E1C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = sub_245777400();
  sub_245776F2C(v4, v5, v6);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  sub_245756F1C();
}

void static GenerativeExperiencesSessionXPCService.logger.modify()
{
  uint64_t v0;

  if (qword_257497E28 != -1)
    swift_once();
  v0 = sub_245751504();
  sub_24574E0F8(v0, (uint64_t)qword_257498A58);
  sub_245756E1C();
  sub_245748A90();
}

void sub_2457683B4()
{
  qword_257498A70 = MEMORY[0x24BEE4AF8];
}

uint64_t static GenerativeExperiencesSessionXPCService.selectorClasses.getter()
{
  if (qword_257497E30 != -1)
    swift_once();
  sub_245776B0C();
  return swift_bridgeObjectRetain();
}

void static GenerativeExperiencesSessionXPCService.selectorClasses.setter(uint64_t a1)
{
  if (qword_257497E30 != -1)
    swift_once();
  sub_245756E1C();
  qword_257498A70 = a1;
  swift_bridgeObjectRelease();
  sub_2457776AC();
}

void static GenerativeExperiencesSessionXPCService.selectorClasses.modify()
{
  if (qword_257497E30 != -1)
    swift_once();
  sub_245756E1C();
  sub_245748A90();
}

void static GenerativeExperiencesSessionXPCService.customize(serverInterface:)()
{
  id v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v0 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2574B4898);
  sub_245777040((uint64_t)v0, &qword_254416E00);
  sub_245748A50(&qword_254416E38);
  v1 = sub_245776B5C();
  *(_OWORD *)(v1 + 16) = xmmword_2457BF810;
  v2 = type metadata accessor for DocumentRegistrationXPCResponse();
  v3 = sub_245748A50(&qword_257498A78);
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 32) = v2;
  sub_245777040(v3, (unint64_t *)&qword_257498258);
  v5 = v4;
  *(_QWORD *)(v1 + 88) = sub_245748A50(&qword_257498A80);
  *(_QWORD *)(v1 + 64) = v5;
  sub_245776D0C();
}

void sub_2457685EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v5;
  SEL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_245777040((uint64_t)a1, &qword_254416E20);
  sub_245769E90();
  sub_245777600();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  v5 = (void *)sub_2457772F8();
  sub_245776BA8(v5, v6, v7, v8, 2);

  v9 = sub_245776B5C();
  sub_245776BF8(v9);
  v10 = type metadata accessor for CompletePromptResponseElementXPCEnvelope();
  v11 = sub_245748A50(&qword_257498A88);
  a1[4] = v10;
  a1[11] = v2;
  a1[7] = v11;
  a1[8] = v1;
  sub_245776D0C();
}

void sub_245768694(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_2457BB320();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(v4, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v3, (uint64_t)sel_sessionDidProduceCompletionResponseFor_element_isComplete_, 1);

  v6 = sub_245776B5C();
  sub_245776BF8(v6);
  v7 = type metadata accessor for CompletePromptResponseXPCEnvelope();
  v8 = sub_245748A50(&qword_257498A90);
  a1[4] = v7;
  a1[11] = v2;
  a1[7] = v8;
  a1[8] = v1;
  sub_245776D0C();
}

void sub_245768734(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v5;
  SEL v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_245777600();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  v5 = (void *)sub_2457772F8();
  sub_245776BA8(v5, v6, v7, v8, 1);

  v9 = sub_245776B5C();
  sub_245776BF8(v9);
  v10 = type metadata accessor for SessionConfigurationXPCEnvelope();
  v11 = sub_245748A50(&qword_257498A98);
  a1[4] = v10;
  a1[11] = v2;
  a1[7] = v11;
  a1[8] = v1;
  sub_245776D0C();
}

void sub_2457687C8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_2457770B0();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(*(id *)(v5 - 120), *(SEL *)(v1 + 2928), (uint64_t)v4, (uint64_t)sel_initializeSessionWithConfiguration_with_, 0);

  v7 = sub_245776B5C();
  sub_245776BF8(v7);
  v8 = type metadata accessor for ChatMessagesXPCEnvelope();
  v9 = sub_245748A50(&qword_257498AA0);
  a1[4] = v8;
  a1[11] = v2;
  a1[7] = v9;
  a1[8] = v3;
  sub_245776D0C();
}

void sub_245768864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  void *v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  sub_2457770B0();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(v26, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v27, (uint64_t)sel_completeStreamWithQuery_tools_toolChoice_documents_parameters_schema_requestUUID_delegate_, 0);

  v30 = sub_245776B5C();
  *(_OWORD *)(v29 - 144) = xmmword_2457BF820;
  *(_OWORD *)(v30 + 16) = xmmword_2457BF820;
  sub_245777040(v30, &qword_254416E08);
  v32 = v31;
  *(_QWORD *)(v29 - 152) = v31;
  *(_QWORD *)(v30 + 56) = sub_245748A50(&qword_254416E10);
  *(_QWORD *)(v30 + 32) = v32;
  v33 = sub_24577764C();
  v34 = sub_245748A50(&qword_257498AA8);
  *(_QWORD *)(v30 + 64) = v33;
  *(_QWORD *)(v30 + 120) = a26;
  *(_QWORD *)(v30 + 88) = v34;
  *(_QWORD *)(v30 + 96) = v28;
  sub_245776D0C();
}

void sub_245768950(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v8;
  SEL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)(v6 - 128) = v3;
  sub_2457770B0();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  v8 = (void *)sub_2457772F8();
  sub_245776BA8(v8, v9, v10, v1, 1);

  v11 = sub_245776B5C();
  sub_245776BF8(v11);
  v12 = type metadata accessor for ToolChoiceXPCEnvelope();
  v13 = sub_245748A50(&qword_257498AB0);
  a1[4] = v12;
  a1[11] = v4;
  a1[7] = v13;
  a1[8] = v2;
  sub_245776D0C();
}

void sub_2457689E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  SEL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  sub_2457770B0();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  v32 = (void *)sub_2457772F8();
  sub_245776BA8(v32, v33, v34, v28, 2);

  v35 = sub_245776B5C();
  *(_OWORD *)(v35 + 16) = *(_OWORD *)(v31 - 144);
  *(_QWORD *)(v35 + 56) = a28;
  *(_QWORD *)(v35 + 32) = *(_QWORD *)(v31 - 152);
  v37 = sub_24577765C();
  v36 = sub_245748A50(&qword_257498AB8);
  *(_QWORD *)(v35 + 64) = v37;
  *(_QWORD *)(v35 + 120) = v29;
  *(_QWORD *)(v35 + 88) = v36;
  *(_QWORD *)(v35 + 96) = a11;
  sub_245776D0C();
}

void sub_245768A98(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v6;
  SEL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_2457770B0();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  v6 = (void *)sub_2457772F8();
  sub_245776BA8(v6, v7, v8, v2, 3);

  v9 = sub_245776B5C();
  sub_245776BF8(v9);
  v10 = type metadata accessor for SamplingParametersXPCEnvelope();
  v11 = sub_245748A50(&qword_257498AC0);
  a1[4] = v10;
  a1[11] = v3;
  a1[7] = v11;
  a1[8] = v1;
  sub_245776D0C();
}

void sub_245768B2C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  sub_2457BB320();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(*(id *)(v27 - 120), sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v25, a24, 4);

  v29 = sub_245776B5C();
  sub_245776BF8(v29);
  v30 = type metadata accessor for SchemaXPCEnvelope();
  v31 = sub_245748A50(&qword_257498AC8);
  a1[4] = v30;
  a1[11] = v24;
  a1[7] = v31;
  a1[8] = v26;
  sub_245776D0C();
}

void sub_245768BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 *v33;
  __n128 v34;
  _QWORD *v35;
  __n128 *v36;
  __n128 v37;
  _QWORD *v38;
  __n128 *v39;
  uint64_t v40;

  sub_24577740C();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(v28, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v30, a24, 5);

  sub_245776BA8(v28, sel_setInterface_forSelector_argumentIndex_ofReply_, a25, a24, 7);
  v33 = (__n128 *)sub_245776B5C();
  v34 = sub_2457775BC(v33);
  v35[4] = a22;
  v35[11] = v29;
  v35[7] = a23;
  v35[8] = v31;
  MEMORY[0x24953AA60](v34);
  sub_24577740C();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(v28, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v30, (uint64_t)sel_completeWithQuery_tools_toolChoice_documents_parameters_schema_requestUUID_delegate_, 0);

  v36 = (__n128 *)sub_245776B5C();
  v37 = sub_2457774F4(v36);
  v38[7] = a28;
  v38[8] = a20;
  v38[15] = v29;
  v38[11] = a21;
  v38[12] = v31;
  MEMORY[0x24953AA60](v37);
  sub_2457BB320();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(*(id *)(v32 - 120), sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v30, (uint64_t)sel_completeWithQuery_tools_toolChoice_documents_parameters_schema_requestUUID_delegate_, 1);

  v39 = (__n128 *)sub_245776B5C();
  sub_2457775BC(v39);
  *(_QWORD *)(v40 + 32) = a18;
  *(_QWORD *)(v40 + 88) = v29;
  sub_2457776C0(v40, a19);
}

void sub_245768D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  uint64_t v32;
  __n128 *v33;
  __n128 v34;
  _QWORD *v35;
  __n128 *v36;
  uint64_t v37;

  sub_2457BB320();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(v27, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v30, v26, 2);

  v33 = (__n128 *)sub_245776B5C();
  v34 = sub_2457774F4(v33);
  v35[7] = v31;
  v35[8] = a17;
  v35[15] = v28;
  v35[11] = a16;
  v35[12] = v29;
  MEMORY[0x24953AA60](v34);
  sub_245777140();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(*(id *)(v32 - 120), sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v30, a24, 3);

  v36 = (__n128 *)sub_245776B5C();
  sub_2457775BC(v36);
  *(_QWORD *)(v37 + 32) = a14;
  *(_QWORD *)(v37 + 88) = a26;
  sub_2457776C0(v37, a15);
}

void sub_245768E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  void *v13;
  uint64_t v14;
  uint64_t v15;
  void *v16;
  __n128 *v17;
  uint64_t v18;

  sub_245777140();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(v13, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v16, v15, 4);

  v17 = (__n128 *)sub_245776B5C();
  sub_2457775BC(v17);
  *(_QWORD *)(v18 + 32) = a12;
  *(_QWORD *)(v18 + 88) = v14;
  sub_2457776C0(v18, a13);
}

void sub_245768EFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  void *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  sub_245777140();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  sub_245776BA8(v28, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v32, v31, 5);

  sub_245776BA8(v28, sel_setInterface_forSelector_argumentIndex_ofReply_, a25, v31, 7);
  v34 = sub_245776B5C();
  *(_OWORD *)(v34 + 16) = xmmword_2457BF830;
  *(_QWORD *)(v34 + 56) = a28;
  *(_QWORD *)(v34 + 32) = *(_QWORD *)(v33 - 152);
  v35 = type metadata accessor for DocumentXPCEnvelope(0);
  v36 = sub_245748A50(&qword_257498AD0);
  *(_QWORD *)(v34 + 64) = v35;
  *(_QWORD *)(v34 + 120) = v29;
  *(_QWORD *)(v34 + 88) = v36;
  *(_QWORD *)(v34 + 96) = v30;
  sub_245777040(v36, &qword_257498AD8);
  v38 = v37;
  *(_QWORD *)(v34 + 152) = sub_245748A50(&qword_257498AE0);
  *(_QWORD *)(v34 + 128) = v38;
  sub_245776D0C();
}

void sub_245768FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  sub_2457BB320();
  sub_245776C14();
  sub_245776C0C();
  sub_245776B40();
  sub_2457BB314();
  sub_245776B34();
  v32 = *(void **)(v31 - 120);
  sub_245776BA8(v32, sel_setClasses_forSelector_argumentIndex_ofReply_, (uint64_t)v29, (uint64_t)sel_registerWithDocuments_requestUUID_delegate_, 0);

  sub_245776BA8(v32, sel_setInterface_forSelector_argumentIndex_ofReply_, v26, (uint64_t)sel_registerWithDocuments_requestUUID_delegate_, 2);
  v33 = sub_245776B5C();
  *(_OWORD *)(v33 + 16) = *(_OWORD *)(v31 - 144);
  *(_QWORD *)(v33 + 56) = v28;
  *(_QWORD *)(v33 + 32) = v30;
  v34 = type metadata accessor for DocumentResourceIdentifierXPCEnvelope();
  v35 = sub_245748A50(&qword_257498AE8);
  *(_QWORD *)(v33 + 64) = v34;
  *(_QWORD *)(v33 + 120) = a26;
  *(_QWORD *)(v33 + 88) = v35;
  *(_QWORD *)(v33 + 96) = v27;
  sub_245776D0C();
}

void sub_2457690C4(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;

  v5 = sub_2457BB320();

  sub_245769158(v5);
  sub_2457513F4();
  *(_QWORD *)(v3 - 112) = sub_2457BB314();
  sub_245776CB8();
  objc_msgSend(v1, sel_setClasses_forSelector_argumentIndex_ofReply_, *(_QWORD *)(v3 - 112), sel_registeredDocumentsWith_, 0, 1);

}

uint64_t sub_245769158(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  int64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;

  v1 = a1;
  v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_2457BB3F8())
      goto LABEL_3;
LABEL_6:
    v3 = MEMORY[0x24BEE4B08];
    if (v2)
      goto LABEL_4;
    goto LABEL_7;
  }
  if (!*(_QWORD *)(a1 + 16))
    goto LABEL_6;
LABEL_3:
  sub_245748A50(&qword_254416E28);
  sub_245767A8C();
  v3 = sub_2457BB434();
  if (v2)
  {
LABEL_4:
    sub_245756F54();
    swift_retain();
    v4 = sub_2457BB3EC();
    sub_245777040(v4, &qword_254416E20);
    sub_245769E90();
    result = sub_2457BB338();
    v1 = v35;
    v31 = v36;
    v6 = v37;
    v7 = v38;
    v8 = v39;
    goto LABEL_11;
  }
LABEL_7:
  v9 = -1 << *(_BYTE *)(v1 + 32);
  v31 = v1 + 56;
  v6 = ~v9;
  v10 = -v9;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  else
    v11 = -1;
  v8 = v11 & *(_QWORD *)(v1 + 56);
  sub_245756F54();
  result = swift_retain();
  v7 = 0;
LABEL_11:
  v30 = (unint64_t)(v6 + 64) >> 6;
  v12 = v3 + 56;
  if (v1 < 0)
    goto LABEL_14;
LABEL_12:
  if (v8)
  {
    v13 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v14 = v13 | (v7 << 6);
    goto LABEL_32;
  }
  v16 = v7 + 1;
  if (!__OFADD__(v7, 1))
  {
    if (v16 < v30)
    {
      v17 = *(_QWORD *)(v31 + 8 * v16);
      v18 = v7 + 1;
      if (v17)
        goto LABEL_31;
      v18 = v7 + 2;
      if (v7 + 2 < v30)
      {
        v17 = *(_QWORD *)(v31 + 8 * v18);
        if (v17)
          goto LABEL_31;
        v18 = v7 + 3;
        if (v7 + 3 < v30)
        {
          v17 = *(_QWORD *)(v31 + 8 * v18);
          if (v17)
            goto LABEL_31;
          v18 = v7 + 4;
          if (v7 + 4 < v30)
          {
            v17 = *(_QWORD *)(v31 + 8 * v18);
            if (v17)
              goto LABEL_31;
            v18 = v7 + 5;
            if (v7 + 5 < v30)
            {
              v17 = *(_QWORD *)(v31 + 8 * v18);
              if (!v17)
              {
                v19 = v7 + 6;
                while (v19 < v30)
                {
                  v17 = *(_QWORD *)(v31 + 8 * v19++);
                  if (v17)
                  {
                    v18 = v19 - 1;
                    goto LABEL_31;
                  }
                }
                goto LABEL_44;
              }
LABEL_31:
              v8 = (v17 - 1) & v17;
              v14 = __clz(__rbit64(v17)) + (v18 << 6);
              v7 = v18;
LABEL_32:
              v20 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v14);
              while (1)
              {
                sub_245777348();
                swift_dynamicCast();
                result = sub_2457BB410();
                v21 = -1 << *(_BYTE *)(v3 + 32);
                v22 = result & ~v21;
                v23 = v22 >> 6;
                if (((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6))) == 0)
                  break;
                v24 = __clz(__rbit64((-1 << v22) & ~*(_QWORD *)(v12 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
LABEL_42:
                *(_QWORD *)(v12 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
                v29 = *(_QWORD *)(v3 + 48) + 40 * v24;
                *(_OWORD *)v29 = v32;
                *(_OWORD *)(v29 + 16) = v33;
                *(_QWORD *)(v29 + 32) = v34;
                ++*(_QWORD *)(v3 + 16);
                if ((v1 & 0x8000000000000000) == 0)
                  goto LABEL_12;
LABEL_14:
                v15 = sub_2457BB404();
                if (!v15)
                  goto LABEL_44;
                *(_QWORD *)&v32 = v15;
                sub_245777348();
                swift_dynamicCast();
              }
              v25 = 0;
              v26 = (unint64_t)(63 - v21) >> 6;
              while (++v23 != v26 || (v25 & 1) == 0)
              {
                v27 = v23 == v26;
                if (v23 == v26)
                  v23 = 0;
                v25 |= v27;
                v28 = *(_QWORD *)(v12 + 8 * v23);
                if (v28 != -1)
                {
                  v24 = __clz(__rbit64(~v28)) + (v23 << 6);
                  goto LABEL_42;
                }
              }
              __break(1u);
              goto LABEL_46;
            }
          }
        }
      }
    }
LABEL_44:
    sub_245776E5C();
    sub_24577638C();
    return v3;
  }
LABEL_46:
  __break(1u);
  return result;
}

void GenerativeExperiencesSessionClient.init(_:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  _QWORD v28[6];
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  objc_super v35;

  sub_245759004();
  v3 = v2;
  v4 = sub_245751504();
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v5);
  sub_245777190(v6, v29);
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client] = 0;
  v7 = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionOneShotRequest] = v7;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests] = v7;
  v35.receiver = v0;
  v35.super_class = (Class)type metadata accessor for GenerativeExperiencesSessionClient();
  v8 = objc_msgSendSuper2(&v35, sel_init);
  sub_2457567FC(&qword_257498B10, v9, (uint64_t (*)(uint64_t))type metadata accessor for GenerativeExperiencesSessionClient, (uint64_t)&protocol conformance descriptor for GenerativeExperiencesSessionClient);
  sub_245748A50(&qword_257498B18);
  sub_2457776B4();
  v10 = (char *)v8;
  v11 = sub_2457BAE88();
  v12 = OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client;
  *(_QWORD *)&v10[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client] = v11;
  swift_release();
  v13 = dispatch_group_create();
  dispatch_group_enter(v13);
  v14 = sub_245776B5C();
  *(_BYTE *)(v14 + 16) = 0;
  v15 = *(void **)&v10[v12];
  if (v15)
  {
    v16 = v14;
    v28[2] = v3;
    v28[3] = MEMORY[0x24BDAC7A8](v14);
    v28[4] = v13;
    sub_245748AF8();
    sub_245776DA0();
    if (v28)
    {
      swift_release();

      sub_2457775D0();
      if (qword_257497E28 != -1)
        swift_once();
      v17 = sub_24574E0F8(v4, (uint64_t)qword_257498A58);
      sub_245776B0C();
      v18 = v32;
      sub_245767E58(v32, v17, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
      sub_2457511D8();
      sub_2457511D8();
      sub_245777698();
      v19 = sub_245751514();
      if (sub_245776F3C(v19))
      {
        v20 = sub_2457513BC();
        v21 = sub_2457513BC();
        v31 = v1;
        v22 = (_QWORD *)v21;
        v30 = sub_2457513BC();
        v34 = v30;
        *(_DWORD *)v20 = 136315394;
        v33 = sub_245773478(0x293A5F2874696E69, 0xE800000000000000, &v34);
        sub_2457BB3BC();
        *(_WORD *)(v20 + 12) = 2112;
        sub_2457511D8();
        v23 = sub_245776FD0();
        v29 = v4;
        v24 = v23;
        v33 = v23;
        sub_2457BB3BC();
        *v22 = v24;
        sub_245751068();
        sub_245751068();
        sub_245776E30(&dword_245746000, v25, v26, "%s error %@");
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        sub_245757020();
        sub_24575105C();
      }

      sub_245751068();
      sub_245751068();
      sub_245751068();

      (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v18, v4);
      sub_245758EBC(v3);
    }
    else
    {
      swift_release();
      sub_2457BB374();

      sub_245758EBC(v3);
      sub_245776B0C();
      v27 = *(unsigned __int8 *)(v16 + 16);
      sub_2457775D0();
      if (v27 != 1)

    }
    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_245769910(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v8;
  uint64_t v9;
  id v10;
  void *v11;
  void *v12;
  uint64_t v13;
  id v14;
  uint64_t v16;

  v8 = type metadata accessor for SessionConfiguration();
  MEMORY[0x24BDAC7A8](v8);
  sub_245758154(a2, (uint64_t)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = objc_allocWithZone((Class)type metadata accessor for SessionConfigurationXPCEnvelope());
  swift_unknownObjectRetain();
  SessionConfigurationXPCEnvelope.init(sealing:)();
  v12 = v11;
  v13 = swift_allocObject();
  *(_QWORD *)(v13 + 16) = a3;
  *(_QWORD *)(v13 + 24) = a4;
  swift_retain();
  v14 = a4;
  sub_245769A04((uint64_t)v12, (uint64_t)sub_245776B08, v13, a1);
  swift_unknownObjectRelease();

  return swift_release();
}

void sub_245769A04(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  _QWORD v7[6];

  v7[4] = a2;
  v7[5] = a3;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_245769AB0;
  v7[3] = &unk_251695EC8;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_initializeSessionWithConfiguration_with_, a1, v6);
  _Block_release(v6);
}

uint64_t sub_245769AB0(uint64_t a1, uint64_t a2)
{
  void (*v3)(uint64_t);

  v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);
  return swift_release();
}

void GenerativeExperiencesSessionClient.init(identifier:)()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  NSObject *v14;
  uint64_t v15;
  uint64_t v16;
  os_log_type_t v17;
  uint64_t v18;
  _QWORD *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  objc_super v26;

  sub_245759004();
  v2 = v1;
  v3 = sub_245751504();
  v23 = *(_QWORD *)(v3 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_245777174(v5, v21);
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client] = 0;
  v6 = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests] = MEMORY[0x24BEE4B00];
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionOneShotRequest] = v6;
  *(_QWORD *)&v0[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests] = v6;
  v26.receiver = v0;
  v26.super_class = (Class)type metadata accessor for GenerativeExperiencesSessionClient();
  v7 = objc_msgSendSuper2(&v26, sel_init);
  sub_2457567FC(&qword_257498B10, v8, (uint64_t (*)(uint64_t))type metadata accessor for GenerativeExperiencesSessionClient, (uint64_t)&protocol conformance descriptor for GenerativeExperiencesSessionClient);
  sub_245748A50(&qword_257498B18);
  sub_2457776B4();
  v9 = (char *)v7;
  v10 = sub_2457BAE88();
  v11 = OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client;
  *(_QWORD *)&v9[OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client] = v10;
  swift_release();
  v12 = dispatch_group_create();
  dispatch_group_enter(v12);
  v13 = sub_245776B5C();
  *(_BYTE *)(v13 + 16) = 0;
  v14 = *(NSObject **)&v9[v11];
  if (v14)
  {
    v15 = v13;
    MEMORY[0x24BDAC7A8](v13);
    sub_245748AF8();
    sub_245776F7C();
    if (v2)
    {
      swift_bridgeObjectRelease();

      sub_2457774A4();
      swift_release();
      if (qword_257497E28 != -1)
        swift_once();
      v16 = sub_24574E0F8(v3, (uint64_t)qword_257498A58);
      sub_245776B0C();
      sub_245767DE0(v22, v16, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 16));
      sub_2457511D8();
      sub_2457511D8();
      sub_245777698();
      v17 = sub_245751514();
      if (sub_2457772C8(v17))
      {
        v18 = sub_2457513BC();
        v19 = (_QWORD *)sub_2457513BC();
        v25 = sub_2457513BC();
        *(_DWORD *)v18 = 136315394;
        sub_245776FF0(17, 0x80000002457C9AB0, &v25);
        sub_245777328();
        *(_WORD *)(v18 + 12) = 2112;
        sub_2457511D8();
        v24 = sub_245776FD0();
        sub_245777328();
        *v19 = v24;
        sub_245751068();
        sub_245751068();
        sub_245776F24(&dword_245746000, v14, (os_log_type_t)v12, "%s error %@", (uint8_t *)v18);
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        sub_245757020();
        sub_24575105C();
      }

      sub_245751068();
      sub_245751068();
      sub_245751068();

      (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v22, v3);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2457774A4();
      sub_2457BB374();

      sub_245776B0C();
      v20 = *(unsigned __int8 *)(v15 + 16);
      swift_release();
      if (v20 != 1)

    }
    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_245769E90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_254416E18;
  if (!qword_254416E18)
  {
    sub_245769EE0(255, &qword_254416E20);
    result = MEMORY[0x24953B288](MEMORY[0x24BEE5BD8], v1);
    atomic_store(result, (unint64_t *)&qword_254416E18);
  }
  return result;
}

void sub_245769EE0(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    objc_opt_self();
    atomic_store(swift_getObjCClassMetadata(), a2);
  }
  sub_245748A90();
}

uint64_t type metadata accessor for GenerativeExperiencesSessionClient()
{
  return objc_opt_self();
}

uint64_t sub_245769F34()
{
  return swift_deallocObject();
}

uint64_t sub_245769F44(void *a1)
{
  uint64_t v1;

  return sub_245769910(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(void **)(v1 + 32));
}

void sub_245769F50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  sub_245759004();
  v2 = v1;
  v4 = v3;
  v5 = sub_245751504();
  v25 = *(_QWORD *)(v5 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_245750F48();
  v8 = v7;
  v9 = dispatch_group_create();
  dispatch_group_enter(v9);
  v10 = sub_245776B5C();
  *(_BYTE *)(v10 + 16) = 0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client))
  {
    v11 = MEMORY[0x24BDAC7A8](v10);
    *(&v20 - 4) = v4;
    *(&v20 - 3) = v2;
    *(&v20 - 2) = v11;
    *(&v20 - 1) = (uint64_t)v9;
    swift_retain();
    sub_245776F7C();
    if (v4)
    {
      swift_release();
      if (qword_257497E28 != -1)
        swift_once();
      v12 = (void *)sub_24574E0F8(v5, (uint64_t)qword_257498A58);
      sub_245776B0C();
      v13 = v25;
      (*(void (**)(uint64_t, void *, uint64_t))(v25 + 16))(v8, v12, v5);
      sub_2457511D8();
      sub_2457511D8();
      sub_2457774EC();
      v14 = sub_245751514();
      if (sub_245776F3C(v14))
      {
        v15 = sub_2457513BC();
        v21 = (_QWORD *)sub_2457513BC();
        v23 = sub_2457513BC();
        v27 = v23;
        *(_DWORD *)v15 = 136315394;
        v26 = sub_245776FF0(22, 0x80000002457C9AD0, &v27);
        v24 = v5;
        sub_245776D3C();
        *(_WORD *)(v15 + 12) = 2112;
        sub_2457511D8();
        v16 = sub_245776FD0();
        v22 = v8;
        v17 = v16;
        v26 = v16;
        sub_245776D3C();
        *v21 = v17;
        sub_245751068();
        sub_245751068();
        sub_245776E30(&dword_245746000, v18, v19, "%s error %@");
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        sub_245757020();
        sub_24575105C();
      }

      sub_245751068();
      sub_245751068();
      sub_245751068();

      (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v8, v5);
      sub_245776E5C();
    }
    else
    {
      swift_release();
      sub_2457BB374();

      sub_245776B0C();
      sub_245776E5C();
    }
    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24576A244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,SEL *a21)
{
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  uint64_t v30;
  uint64_t v31;

  sub_245759004();
  v25 = v24;
  v27 = v26;
  sub_2457771C4();
  v28 = sub_245776B5C();
  *(_QWORD *)(v28 + 16) = v22;
  *(_QWORD *)(v28 + 24) = v21;
  swift_unknownObjectRetain();
  swift_retain();
  v29 = v21;
  v30 = sub_2457771E4();
  sub_24576A2CC(v30, v31, v27, v28, v23, v25, a21);
  swift_unknownObjectRelease();
  sub_245758FB4();
  return swift_release();
}

void sub_24576A2CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, SEL *a7)
{
  void *v12;
  void *v13;
  _QWORD v14[6];

  v12 = (void *)sub_2457BB1A0();
  v14[4] = a3;
  v14[5] = a4;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_245769AB0;
  v14[3] = a6;
  v13 = _Block_copy(v14);
  swift_retain();
  sub_24577754C();
  objc_msgSend(a5, *a7, v12, v13);
  _Block_release(v13);

  sub_24577714C();
}

void sub_24576A36C(char a1, uint64_t a2, NSObject *a3)
{
  sub_245756E1C();
  *(_BYTE *)(a2 + 16) = a1;
  dispatch_group_leave(a3);
  sub_245756F1C();
}

void sub_24576A3B0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  uint64_t v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[4];
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_245759004();
  v3 = sub_245751504();
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v4);
  sub_245748AD0();
  v5 = dispatch_group_create();
  dispatch_group_enter(v5);
  v6 = sub_245776B5C();
  *(_QWORD *)(v6 + 16) = 0;
  *(_QWORD *)(v6 + 24) = 0xE000000000000000;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client))
  {
    v13[2] = MEMORY[0x24BDAC7A8](v6);
    v13[3] = v5;
    sub_245748AF8();
    sub_245776DA0();
    if (v13)
    {
      swift_release();
      if (qword_257497E28 != -1)
        swift_once();
      v7 = sub_24574E0F8(v3, (uint64_t)qword_257498A58);
      sub_245776B0C();
      sub_245777068((uint64_t)v1, v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_2457511D8();
      sub_2457511D8();
      sub_2457BB068();
      v8 = sub_245751514();
      if (sub_245776F3C(v8))
      {
        v9 = sub_2457513BC();
        v14 = (_QWORD *)sub_2457513BC();
        v15 = sub_2457513BC();
        v19 = v15;
        *(_DWORD *)v9 = 136315394;
        v17 = v3;
        v18 = sub_245773478(0x496E6F6973736573, 0xEB00000000292844, &v19);
        v16 = v2;
        sub_245776D3C();
        *(_WORD *)(v9 + 12) = 2112;
        sub_2457511D8();
        v10 = sub_245776FD0();
        v18 = v10;
        sub_245776D3C();
        *v14 = v10;
        sub_245751068();
        sub_245751068();
        sub_245776E30(&dword_245746000, v11, v12, "%s error %@");
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        sub_245757020();
        sub_24575105C();
      }
      sub_245751068();
      sub_245751068();

      (*(void (**)(void *, uint64_t))(v2 + 8))(v1, v3);
      sub_245751068();

      sub_245776E5C();
    }
    else
    {
      swift_release();
      sub_2457BB374();

      sub_245776B0C();
      sub_245756F54();
      sub_245776E5C();
    }
    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24576A680(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  id v7;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  swift_unknownObjectRetain();
  swift_retain();
  v7 = a3;
  sub_24576BF98((uint64_t)sub_245776338, v6, a1, (uint64_t)sub_24576A714, (uint64_t)&unk_25168F808, (SEL *)&selRef_retrieveSessionIDWith_);
  swift_unknownObjectRelease();
  return swift_release();
}

uint64_t sub_24576A714(uint64_t a1)
{
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(void (**)(uint64_t, uint64_t))(a1 + 32);
  v2 = sub_2457BB1AC();
  v4 = v3;
  swift_retain();
  v1(v2, v4);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_24576A768(uint64_t a1, uint64_t a2, uint64_t a3, NSObject *a4)
{
  swift_beginAccess();
  *(_QWORD *)(a3 + 16) = a1;
  *(_QWORD *)(a3 + 24) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  dispatch_group_leave(a4);
}

void sub_24576A7DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  int64_t v93;
  char v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t, uint64_t);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  void (*v121)(uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _BOOL8 v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  unint64_t v142;
  uint64_t v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  void (*v148)(uint64_t, uint64_t, uint64_t);
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  id v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  NSObject *v164;
  os_log_type_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  void (*v171)(uint64_t, uint64_t, uint64_t);
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  void (*v192)(uint64_t, uint64_t, uint64_t);
  uint64_t v193;
  void (*v194)(unint64_t, uint64_t, uint64_t);
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  unint64_t v198;
  unint64_t v199;
  uint64_t v200;
  _BOOL8 v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  unsigned int v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  void (*v228)(uint64_t, uint64_t, uint64_t);
  uint64_t v229;
  uint64_t v230;
  _QWORD *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t *v245;
  uint64_t v246;

  sub_245759004();
  a19 = v23;
  a20 = v24;
  v232 = v20;
  v26 = v25;
  sub_245748A50(&qword_257498B20);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v27);
  sub_245750F48();
  v204 = v28;
  v203 = sub_245751504();
  v29 = *(_QWORD *)(v203 - 8);
  MEMORY[0x24BDAC7A8](v203);
  sub_245750F48();
  v223 = v30;
  v230 = sub_2457BAEF4();
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v31);
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v32);
  sub_245776F94();
  v218 = v33;
  v234 = sub_245776CA0();
  v231 = *(_QWORD **)(v234 - 8);
  MEMORY[0x24BDAC7A8](v234);
  sub_245777684();
  sub_245751408(v34);
  MEMORY[0x24BDAC7A8](v35);
  sub_245776F94();
  sub_245751408(v36);
  v225 = v37;
  MEMORY[0x24BDAC7A8](v38);
  sub_245776F94();
  v235 = v39;
  v241 = sub_245748A50(&qword_257498B28);
  v222 = *(_QWORD *)(v241 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v40);
  sub_245776D14();
  v237 = v41;
  v43 = MEMORY[0x24BDAC7A8](v42);
  v239 = (uint64_t)&v202 - v44;
  MEMORY[0x24BDAC7A8](v43);
  sub_245776F94();
  sub_245751408(v45);
  v217 = sub_245748A50(&qword_257498B30);
  v216 = *(_QWORD *)(v217 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v46);
  sub_245750F48();
  sub_245751408(v47);
  v48 = sub_245748A50(&qword_257498B38);
  v240 = *(_QWORD *)(v48 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v49);
  sub_245776D14();
  sub_24575133C();
  v51 = MEMORY[0x24BDAC7A8](v50);
  v53 = (char *)&v202 - v52;
  MEMORY[0x24BDAC7A8](v51);
  sub_245776F94();
  sub_245751408(v54);
  v55 = sub_245748A50(&qword_257498478);
  sub_24577701C();
  MEMORY[0x24BDAC7A8](v56);
  sub_245776D14();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v57);
  sub_245776F94();
  sub_245751408(v58);
  sub_245748A50(&qword_257498B40);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v59);
  sub_245776D14();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v60);
  v62 = (char *)&v202 - v61;
  v63 = *(char **)(v26 + 16);
  v243 = v55;
  v205 = v29;
  v220 = v22;
  v236 = v53;
  v208 = v26;
  v206 = v63;
  if (v63)
  {
    sub_245776DE0();
    v65 = v26 + v64;
    v210 = *(_QWORD *)(v22 + 72);
    v212 = *(_QWORD *)(v22 + 16);
    v209 = *MEMORY[0x24BEE6CA0];
    sub_245756F54();
    v66 = v63;
    v67 = MEMORY[0x24BEE4AF8];
    v211 = v62;
    while (1)
    {
      v68 = v230;
      sub_245776ED4((uint64_t)&v244);
      v69 = sub_24577747C();
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v69, v70, v71, v68);
      sub_245776BB0((uint64_t)v62, 1, v68);
      if (v72)
        break;
      v224 = v66;
      sub_2457BAF78();
      v233 = v67;
      v73 = v216;
      v74 = v48;
      v75 = v215;
      v76 = v21;
      v77 = v217;
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v216 + 104))(v215, v209, v217);
      v78 = v213;
      v79 = v214;
      sub_2457BB2B4();
      v80 = v75;
      v48 = v74;
      v81 = v77;
      v21 = v76;
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v80, v81);
      v82 = (char *)v228 + *(int *)(v241 + 48);
      sub_245776C98((uint64_t)v228, v78, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 32));
      v83 = (uint64_t)v82;
      v84 = v233;
      sub_245777278(v83, v79, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v240 + 32));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v92 = sub_2457771F0();
        v84 = sub_24577275C(v92, v93, v94, v84);
      }
      v86 = *(_QWORD *)(v84 + 16);
      v85 = *(_QWORD *)(v84 + 24);
      v87 = v84;
      v53 = v236;
      v88 = v224;
      if (v86 >= v85 >> 1)
      {
        v95 = sub_2457770A4(v85);
        v87 = sub_24577275C(v95, v86 + 1, 1, v96);
      }
      *(_QWORD *)(v87 + 16) = v86 + 1;
      v67 = v87;
      sub_245776C1C();
      sub_245765CC8((uint64_t)v228, v89 + v90 + *(_QWORD *)(v91 + 72) * v86, &qword_257498B28);
      v62 = v211;
      sub_245765F18((uint64_t)v211, &qword_257498B40);
      v65 += v210;
      v66 = v88 - 1;
      if (!v66)
        goto LABEL_11;
    }
  }
  else
  {
    sub_245756F54();
    v67 = MEMORY[0x24BEE4AF8];
LABEL_11:
    v97 = sub_24577748C();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v97, v98, v99, v230);
  }
  sub_2457774E4();
  v100 = v235;
  sub_2457BAAC8();
  v101 = (uint64_t *)(v232 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests);
  sub_245776B0C();
  v217 = (uint64_t)v101;
  v102 = *v101;
  sub_245756E64();
  v103 = sub_24576B80C(v100, v102);
  sub_245751384();
  v104 = v234;
  v105 = v241;
  sub_245777710();
  if (v103)
  {
    v106 = *(_QWORD *)(v103 + 16);
    if (v106)
    {
      v107 = v240;
      sub_245776DE0();
      v102 = v103 + v108;
      v109 = *(_QWORD *)(v107 + 72);
      v110 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 16);
      swift_bridgeObjectRetain();
      do
      {
        v110(v53, v102, v48);
        v246 = 0;
        sub_2457BB2D8();
        v53 = v236;
        sub_245777314((uint64_t)v236, *(uint64_t (**)(uint64_t, uint64_t))(v107 + 8));
        v102 += v109;
        --v106;
      }
      while (v106);
      swift_bridgeObjectRelease();
      v104 = v234;
      v105 = v241;
      sub_245777710();
    }
    swift_bridgeObjectRelease();
    v100 = v235;
  }
  v228 = (void (*)(uint64_t, uint64_t, uint64_t))v231[2];
  v228(v207, v100, v104);
  v111 = *(_QWORD *)(v67 + 16);
  v112 = MEMORY[0x24BEE4AF8];
  v238 = v48;
  v242 = v21;
  v233 = v67;
  if (v111)
  {
    v246 = MEMORY[0x24BEE4AF8];
    sub_2457772E8();
    sub_245773FA8(0, v111, 0);
    sub_245776C1C();
    v102 = v67 + v113;
    v224 = *(char **)(v114 + 72);
    v115 = v240;
    do
    {
      v236 = (char *)v111;
      v116 = v239;
      sub_245765EEC(v102, v239, &qword_257498B28);
      v117 = *(int *)(v105 + 48);
      v118 = v237;
      v119 = v237 + v117;
      v120 = v116 + v117;
      sub_245777278(v237, v116, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v242 + 16));
      sub_245777068(v119, v120, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v115 + 16));
      v121 = *(void (**)(uint64_t))(v115 + 32);
      v122 = sub_2457773EC();
      v21 = v242;
      v121(v122);
      sub_2457512B0(v118, *(uint64_t (**)(uint64_t, uint64_t))(v21 + 8));
      sub_245765F18(v116, &qword_257498B28);
      v112 = v246;
      if ((sub_245777708() & 1) == 0)
      {
        v123 = sub_2457771F0();
        sub_245773FA8(v123, v124, v125);
        v112 = v246;
      }
      v127 = *(_QWORD *)(v112 + 16);
      v126 = *(_QWORD *)(v112 + 24);
      v128 = v238;
      v105 = v241;
      if (v127 >= v126 >> 1)
      {
        v130 = sub_2457770A4(v126);
        sub_245773FA8(v130, v127 + 1, 1);
        v112 = v246;
      }
      *(_QWORD *)(v112 + 16) = v127 + 1;
      sub_2457772D8();
      ((void (*)(unint64_t, uint64_t, uint64_t))v121)(v129 + *(_QWORD *)(v115 + 72) * v127, v227, v128);
      v102 += (uint64_t)v224;
      v111 = (uint64_t)(v236 - 1);
    }
    while (v236 != (char *)1);
    v67 = v233;
    sub_2457772F0();
    v104 = v234;
    sub_245777710();
  }
  sub_245756E1C();
  v131 = v207;
  sub_24577487C(v112, v207);
  v132 = (uint64_t)v231;
  v224 = (char *)v231[1];
  ((void (*)(uint64_t, uint64_t))v224)(v131, v104);
  swift_endAccess();
  v133 = *(_QWORD *)(v67 + 16);
  v134 = v239;
  if (v133)
  {
    sub_245776C1C();
    v136 = v67 + v135;
    v236 = *(char **)(v137 + 72);
    v227 = *(_QWORD *)(v21 + 16);
    sub_2457772E8();
    v138 = v229;
    v102 = (uint64_t)v231;
    do
    {
      v139 = *(int *)(v241 + 48);
      v132 = v134 + v139;
      v140 = v136 + v139;
      sub_245776ED4((uint64_t)&a12);
      sub_245777278(v132, v140, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v240 + 16));
      v141 = sub_245776B5C();
      swift_unknownObjectWeakInit();
      sub_245776ED4((uint64_t)&a13);
      v142 = (*(unsigned __int8 *)(v102 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v102 + 80);
      v143 = swift_allocObject();
      *(_QWORD *)(v143 + 16) = v141;
      sub_245777068(v143 + v142, v138, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v102 + 32));
      v134 = v239;
      sub_2457BB2C0();
      sub_2457512B0(v132, *(uint64_t (**)(uint64_t, uint64_t))(v240 + 8));
      (*(void (**)(uint64_t, uint64_t))(v242 + 8))(v134, v243);
      v136 += (uint64_t)v236;
      --v133;
    }
    while (v133);
    sub_2457774E4();
    v21 = v242;
    sub_245777710();
  }
  v246 = MEMORY[0x24BEE4AF8];
  v144 = v206;
  if (v206)
  {
    sub_245776DE0();
    v146 = v208 + v145;
    v236 = *(char **)(v147 + 72);
    v148 = *(void (**)(uint64_t, uint64_t, uint64_t))(v147 + 16);
    swift_bridgeObjectRetain();
    sub_24577762C();
    v149 = v220;
    while (1)
    {
      v148(v134, v146, v132);
      sub_245776EC8(v134, 0);
      sub_245776BB0(v134, 1, v132);
      if (v72)
        break;
      v150 = v21;
      v151 = v218;
      sub_245776F2C(v218, v134, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v149 + 32));
      v148(v219, v151, v132);
      v152 = objc_allocWithZone((Class)type metadata accessor for DocumentXPCEnvelope(0));
      DocumentXPCEnvelope.init(sealing:)();
      v153 = sub_245751168(v151, *(uint64_t (**)(uint64_t, uint64_t))(v149 + 8));
      MEMORY[0x24953A8E0](v153);
      v154 = *(_QWORD *)((v246 & 0xFFFFFFFFFFFFFF8) + 0x18);
      if (*(_QWORD *)((v246 & 0xFFFFFFFFFFFFFF8) + 0x10) >= v154 >> 1)
      {
        sub_2457770A4(v154);
        sub_2457BB248();
      }
      sub_2457BB254();
      sub_2457BB23C();
      v146 += (uint64_t)v236;
      --v144;
      v102 = v223;
      v132 = v230;
      v21 = v150;
      v134 = v221;
      if (!v144)
        goto LABEL_38;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_24577762C();
LABEL_38:
    sub_245776EC8(v134, 1);
  }
  v155 = sub_2457774E4();
  v156 = *(_QWORD *)(v232 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client);
  if (v156)
  {
    v157 = v246;
    MEMORY[0x24BDAC7A8](v155);
    v158 = v235;
    *(&v202 - 4) = v157;
    *(&v202 - 3) = v158;
    *(&v202 - 2) = v159;
    sub_245748AF8();
    sub_245776DA0();
    v160 = v233;
    if (&v202 == (uint64_t *)48)
    {
      swift_bridgeObjectRelease();
      sub_2457774A4();
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_2457774A4();
      if (qword_257497E28 != -1)
        swift_once();
      v161 = v203;
      v162 = sub_24574E0F8(v203, (uint64_t)qword_257498A58);
      sub_245776B0C();
      v163 = v205;
      sub_245767DE0(v102, v162, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v205 + 16));
      sub_2457511D8();
      sub_2457511D8();
      v164 = sub_2457774EC();
      v165 = sub_2457BB350();
      if (os_log_type_enabled(v164, v165))
      {
        v166 = sub_2457513BC();
        v231 = (_QWORD *)sub_2457513BC();
        v236 = (char *)sub_2457513BC();
        v245 = (uint64_t *)v236;
        *(_DWORD *)v166 = 136315394;
        sub_245777574();
        v244 = sub_245776FF0(20, v167, (uint64_t *)&v245);
        sub_2457BB3BC();
        *(_WORD *)(v166 + 12) = 2112;
        sub_2457511D8();
        v168 = sub_245776FD0();
        v244 = v168;
        sub_2457BB3BC();
        *v231 = v168;
        sub_245751068();
        sub_245751068();
        sub_245776F24(&dword_245746000, v164, v165, "%s error %@", (uint8_t *)v166);
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        sub_245757020();
        sub_24575105C();
      }
      sub_245751068();
      sub_245751068();

      (*(void (**)(uint64_t, uint64_t))(v163 + 8))(v156, v161);
      v169 = v229;
      v170 = *(_QWORD *)(v160 + 16);
      v171 = v228;
      if (v170)
      {
        sub_245776C1C();
        v173 = v160 + v172;
        v175 = *(_QWORD *)(v174 + 72);
        sub_2457772E8();
        do
        {
          v245 = &v202 - 6;
          sub_2457511D8();
          sub_2457BB2D8();
          v173 += v175;
          --v170;
        }
        while (v170);
        sub_2457772F0();
        v169 = v229;
      }
      v171(v169, v235, v234);
      v176 = sub_245748A50(&qword_257498B48);
      sub_24575908C(v204, v177, v178, v176);
      sub_245756E1C();
      sub_24576B96C();
      swift_endAccess();
      sub_245751068();
    }
    v179 = *(_QWORD *)(v160 + 16);
    if (v179)
    {
      v245 = (uint64_t *)MEMORY[0x24BEE4AF8];
      sub_2457772E8();
      sub_245773F7C(0, v179, 0);
      sub_245776C1C();
      v181 = v160 + v180;
      v236 = *(char **)(v182 + 72);
      v183 = v21;
      v184 = v243;
      v185 = v226;
      v186 = v240;
      do
      {
        v187 = v239;
        sub_245765EEC(v181, v239, &qword_257498B28);
        v188 = *(int *)(v241 + 48);
        v189 = v237;
        v190 = v237 + v188;
        v191 = v187 + v188;
        sub_245777068(v237, v187, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v183 + 16));
        sub_245767E58(v190, v191, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v186 + 16));
        v192 = *(void (**)(uint64_t, uint64_t, uint64_t))(v183 + 32);
        v192(v185, v189, v184);
        sub_245751168(v190, *(uint64_t (**)(uint64_t, uint64_t))(v186 + 8));
        sub_245765F18(v187, &qword_257498B28);
        v193 = (uint64_t)v245;
        v194 = (void (*)(unint64_t, uint64_t, uint64_t))v192;
        if ((sub_245777708() & 1) == 0)
        {
          v195 = sub_2457771F0();
          sub_245773F7C(v195, v196, v197);
          v193 = (uint64_t)v245;
        }
        v199 = *(_QWORD *)(v193 + 16);
        v198 = *(_QWORD *)(v193 + 24);
        v183 = v242;
        if (v199 >= v198 >> 1)
        {
          v201 = sub_2457770A4(v198);
          sub_245773F7C(v201, v199 + 1, 1);
          v193 = (uint64_t)v245;
        }
        *(_QWORD *)(v193 + 16) = v199 + 1;
        sub_2457772D8();
        v185 = v226;
        v184 = v243;
        v194(v200 + *(_QWORD *)(v183 + 72) * v199, v226, v243);
        v181 += (uint64_t)v236;
        --v179;
      }
      while (v179);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      sub_2457772F0();
    }
    ((void (*)(uint64_t, uint64_t))v224)(v235, v234);
    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24576B80C(uint64_t a1, uint64_t a2)
{
  char v2;

  if (*(_QWORD *)(a2 + 16) && (sub_245773C88(a1), (v2 & 1) != 0))
    return swift_bridgeObjectRetain();
  else
    return 0;
}

uint64_t sub_24576B84C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v5;
  char v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_245773C88(a1), (v6 & 1) != 0))
  {
    v7 = v5;
    v8 = *(_QWORD *)(a2 + 56);
    v9 = sub_245748A50(&qword_257498B48);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a3, v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * v7, v9);
    v10 = a3;
    v11 = 0;
    v12 = v9;
  }
  else
  {
    v12 = sub_245748A50(&qword_257498B48);
    v10 = a3;
    v11 = 1;
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v10, v11, 1, v12);
}

uint64_t sub_24576B8E8@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (*(_QWORD *)(a1 + 16) && (v4 = sub_245773CF8(), (v5 & 1) != 0))
  {
    v6 = v4;
    v7 = *(_QWORD *)(a1 + 56);
    v8 = sub_245748A50(&qword_257498C00);
    sub_245777010();
    sub_245776F2C(a2, v7 + v9 * v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16));
    v11 = sub_24577747C();
    v14 = v8;
  }
  else
  {
    sub_245748A50(&qword_257498C00);
    v11 = sub_24577748C();
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v11, v12, v13, v14);
}

void sub_24576B96C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  sub_245759004();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  sub_245748A50(v7);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v13);
  sub_245748AD0();
  v14 = sub_2457776DC();
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v15);
  sub_24577744C();
  sub_245776BB0(v12, 1, v14);
  if (v16)
  {
    sub_245765F18(v12, v8);
    sub_2457744B8(v10, v4, v6, v0);
    v17 = sub_245776CA0();
    sub_245767B7C(v17);
    sub_245765F18(v0, v8);
  }
  else
  {
    sub_245777068(v1, v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32));
    sub_245774D68(v1, v10, (uint64_t)v4, (uint64_t)v6);
    v18 = sub_245776CA0();
    sub_245767B7C(v18);
  }
  sub_245758FB4();
}

void sub_24576BA50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_245777664();
  sub_245748A50(&qword_257498C08);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v4);
  sub_245767CF8();
  v5 = sub_245748A50(&qword_257498C00);
  sub_24577701C();
  MEMORY[0x24BDAC7A8](v6);
  sub_2457535E8();
  sub_245776BB0(v0, 1, v5);
  if (v7)
  {
    sub_245777060(v0);
    sub_245777400();
    sub_245774608(v8);
    sub_245751474();
    sub_245777060(v1);
  }
  else
  {
    sub_245777278(v2, v0, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 32));
    sub_245777034();
    sub_245774DE8(v9, v10, v11);
    sub_245751474();
  }
  sub_245767AD4();
}

void sub_24576BB20(uint64_t a1)
{
  _OWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _OWORD *v4;
  _OWORD v5[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_245758044((_OWORD *)a1, v5);
    sub_245777034();
    sub_245774E64(v1, v2, v3);
    sub_245751474();
  }
  else
  {
    sub_245765F18(a1, &qword_2574984A8);
    sub_245777400();
    sub_245774758(v4);
    sub_245751474();
    sub_245765F18((uint64_t)v5, &qword_2574984A8);
  }
  sub_245756F1C();
}

void sub_24576BB94(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v6;
  id v7;

  type metadata accessor for DocumentXPCEnvelope(0);
  swift_unknownObjectRetain();
  v6 = (void *)sub_2457BB224();
  v7 = (id)sub_2457BAAB0();
  objc_msgSend(a1, sel_registerWithDocuments_requestUUID_delegate_, v6, v7, a4);
  swift_unknownObjectRelease();

}

void sub_24576BC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  uint64_t v6;
  NSObject *v7;
  os_log_type_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  NSObject *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[5];
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  sub_245759004();
  v3 = sub_245751504();
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v4);
  sub_2457535E8();
  v5 = dispatch_group_create();
  dispatch_group_enter(v5);
  v6 = sub_245776B5C();
  *(_QWORD *)(v6 + 16) = MEMORY[0x24BEE4AF8];
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client))
  {
    v15[2] = MEMORY[0x24BDAC7A8](v6);
    v15[3] = v5;
    sub_245748AF8();
    sub_245776DA0();
    if (v15)
    {
      swift_release();
      if (qword_257497E28 != -1)
        swift_once();
      v7 = sub_24574E0F8(v3, (uint64_t)qword_257498A58);
      sub_245776B0C();
      sub_245777068(v1, (uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_2457511D8();
      sub_2457511D8();
      sub_245777698();
      v8 = sub_245751514();
      if (os_log_type_enabled(v7, v8))
      {
        v9 = sub_2457513BC();
        v20 = v3;
        v10 = v9;
        v16 = (_QWORD *)sub_2457513BC();
        v18 = sub_2457513BC();
        v22 = v18;
        *(_DWORD *)v10 = 136315394;
        v19 = v2;
        v21 = sub_245776FF0(21, 0x80000002457C9B10, &v22);
        sub_245777338();
        *(_WORD *)(v10 + 12) = 2112;
        sub_2457511D8();
        v11 = sub_245776FD0();
        v17 = v1;
        v12 = v7;
        v13 = v11;
        v21 = v11;
        sub_245777338();
        *v16 = v13;
        sub_245751068();
        sub_245751068();
        sub_245776F24(&dword_245746000, v12, v8, "%s error %@", (uint8_t *)v10);
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        sub_245757020();
        sub_24575105C();
      }
      sub_245751068();
      sub_245751068();
      sub_245751068();

      (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
    }
    else
    {
      swift_release();
    }
    sub_2457BB374();
    sub_245776B0C();
    v14 = swift_bridgeObjectRetain();
    sub_24576C23C(v14);
    swift_release();

    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24576BF04(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6;
  id v7;

  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = a2;
  *(_QWORD *)(v6 + 24) = a3;
  swift_unknownObjectRetain();
  swift_retain();
  v7 = a3;
  sub_24576BF98((uint64_t)sub_245776314, v6, a1, (uint64_t)sub_24576C018, (uint64_t)&unk_2516955E8, (SEL *)&selRef_registeredDocumentsWith_);
  swift_unknownObjectRelease();
  return swift_release();
}

void sub_24576BF98(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, SEL *a6)
{
  void *v8;
  _QWORD v9[6];

  v9[4] = a1;
  v9[5] = a2;
  v9[0] = MEMORY[0x24BDAC760];
  v9[1] = 1107296256;
  v9[2] = a4;
  v9[3] = a5;
  v8 = _Block_copy(v9);
  swift_retain();
  sub_24577754C();
  objc_msgSend(a3, *a6, v8);
  _Block_release(v8);
  sub_24577714C();
}

uint64_t sub_24576C018(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  type metadata accessor for DocumentResourceIdentifierXPCEnvelope();
  v2 = sub_2457BB230();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_24576C074(unint64_t a1, uint64_t a2, NSObject *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  void *v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  NSObject *v17;
  uint64_t v18;
  uint64_t v19;

  v18 = sub_2457BAF90();
  v6 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v9 = sub_2457BB500();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v10 = MEMORY[0x24BEE4AF8];
  if (!v9)
  {
LABEL_13:
    swift_beginAccess();
    *(_QWORD *)(a2 + 16) = v10;
    swift_bridgeObjectRelease();
    dispatch_group_leave(a3);
    return;
  }
  v19 = MEMORY[0x24BEE4AF8];
  sub_245774060(0, v9 & ~(v9 >> 63), 0);
  if ((v9 & 0x8000000000000000) == 0)
  {
    v16 = a2;
    v17 = a3;
    v11 = 0;
    v10 = v19;
    do
    {
      if ((a1 & 0xC000000000000001) != 0)
        v12 = (id)MEMORY[0x24953AB20](v11, a1);
      else
        v12 = *(id *)(a1 + 8 * v11 + 32);
      v13 = v12;
      DocumentResourceIdentifierXPCEnvelope.unseal()();

      v19 = v10;
      v15 = *(_QWORD *)(v10 + 16);
      v14 = *(_QWORD *)(v10 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_245774060(v14 > 1, v15 + 1, 1);
        v10 = v19;
      }
      ++v11;
      *(_QWORD *)(v10 + 16) = v15 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v15, v8, v18);
    }
    while (v9 != v11);
    a2 = v16;
    a3 = v17;
    goto LABEL_13;
  }
  __break(1u);
}

uint64_t sub_24576C23C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;

  v2 = sub_2457BAF90();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x24BDAC7A8](v2);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - v7;
  sub_2457567FC(&qword_2574986E8, 255, v9, MEMORY[0x24BE3C818]);
  v10 = sub_2457BB32C();
  v18 = v10;
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v13 = *(_QWORD *)(v3 + 72);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v14(v6, v12, v2);
      sub_2457755E4((uint64_t)v8, v6);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
      v12 += v13;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    return v18;
  }
  else
  {
    v15 = v10;
    swift_bridgeObjectRelease();
  }
  return v15;
}

#error "24576C448: call analysis failed (funcsize=62)"

#error "24576C500: call analysis failed (funcsize=35)"

void sub_24576C51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void (*v54)(uint64_t);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  _BOOL8 v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  uint64_t v88;
  unint64_t v89;
  char *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  void (*v128)(uint64_t, uint64_t, uint64_t);
  uint64_t v129;
  unint64_t v130;
  _QWORD v131[3];
  uint64_t v132;
  uint64_t v133;

  sub_245759004();
  a19 = v22;
  a20 = v23;
  v100 = v20;
  v114 = v24;
  v113 = v25;
  v119 = v26;
  v111 = v27;
  v29 = v28;
  v117 = v30;
  v31 = sub_245759100();
  v129 = *(_QWORD *)(v31 - 8);
  v130 = v31;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v32);
  sub_245748AD0();
  v128 = (void (*)(uint64_t, uint64_t, uint64_t))sub_2457BB008();
  v33 = *((_QWORD *)v128 - 1);
  MEMORY[0x24BDAC7A8](v128);
  sub_24577741C();
  v104 = *(_QWORD *)(sub_245748A50(&qword_257498C90) - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v34);
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v35);
  sub_245776F94();
  v103 = v36;
  v120 = sub_245776CA0();
  v118 = *(_QWORD *)(v120 - 8);
  MEMORY[0x24BDAC7A8](v120);
  sub_245777684();
  sub_245751408(v37);
  v101 = v38;
  MEMORY[0x24BDAC7A8](v39);
  sub_245776F94();
  v116 = v40;
  v41 = sub_245748A50(&qword_2574984E0);
  v99 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  v110 = v42;
  sub_245777678();
  v126 = v43;
  v125 = sub_245777048();
  v109 = *(_QWORD *)(v125 - 8);
  v44 = *(_QWORD *)(v109 + 64);
  MEMORY[0x24BDAC7A8](v125);
  sub_245777678();
  v124 = v45;
  v127 = sub_245777050();
  v108 = *(_QWORD *)(v127 - 8);
  MEMORY[0x24BDAC7A8](v127);
  v97 = v46;
  sub_245777678();
  v123 = v47;
  v122 = sub_245759064();
  v106 = *(_QWORD *)(v122 - 8);
  v48 = *(_QWORD *)(v106 + 64);
  MEMORY[0x24BDAC7A8](v122);
  sub_245777678();
  sub_245751408(v49);
  v50 = *(_QWORD *)(v29 + 16);
  v51 = MEMORY[0x24BEE4AF8];
  v121 = v29;
  if (v50)
  {
    v96 = v44;
    v133 = MEMORY[0x24BEE4AF8];
    sub_245773FD4(0, v50, 0);
    v52 = v29 + 32;
    do
    {
      sub_24575E8C0(v52, (uint64_t)v131);
      sub_245749280(v131, v132);
      sub_2457775A8();
      sub_245749280(v131, v132);
      sub_2457BB038();
      sub_245749280(v131, v132);
      swift_getDynamicType();
      sub_24576CEC4();
      sub_2457BAFFC();
      sub_245776B64();
      sub_2457772F0();
      v53 = sub_24577731C();
      v54(v53);
      sub_245749564((uint64_t)v131);
      v51 = v133;
      if ((sub_245777708() & 1) == 0)
      {
        v55 = sub_2457771F0();
        sub_245773FD4(v55, v56, v57);
        v51 = v133;
      }
      v59 = *(_QWORD *)(v51 + 16);
      v58 = *(_QWORD *)(v51 + 24);
      if (v59 >= v58 >> 1)
      {
        v61 = sub_2457770A4(v58);
        sub_245773FD4(v61, v59 + 1, 1);
        v51 = v133;
      }
      *(_QWORD *)(v51 + 16) = v59 + 1;
      sub_2457772D8();
      (*(void (**)(unint64_t, uint64_t, _QWORD *))(v33 + 32))(v60 + *(_QWORD *)(v33 + 72) * v59, v21, v128);
      v133 = v51;
      v52 += 40;
      --v50;
    }
    while (v50);
    v44 = v96;
  }
  sub_245777620(v105, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v106 + 16));
  v128 = *(void (**)(uint64_t, uint64_t, uint64_t))(v108 + 16);
  v128(v123, v111, v127);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16))(v124, v113, v125);
  sub_245765EEC(v114, v126, &qword_2574984E0);
  v62 = (*(unsigned __int8 *)(v106 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v106 + 80);
  v130 = (v48 + v62 + 7) & 0xFFFFFFFFFFFFFFF8;
  v63 = (v130 + 15) & 0xFFFFFFFFFFFFFFF8;
  v64 = (v63 + 15) & 0xFFFFFFFFFFFFFFF8;
  v65 = (*(unsigned __int8 *)(v108 + 80) + v64 + 8) & ~(unint64_t)*(unsigned __int8 *)(v108 + 80);
  v92 = *(unsigned __int8 *)(v108 + 80);
  v98 = v97 + 7;
  v66 = (v65 + v98) & 0xFFFFFFFFFFFFFFF8;
  v93 = *(unsigned __int8 *)(v109 + 80);
  v67 = (v66 + v93 + 8) & ~v93;
  v94 = *(unsigned __int8 *)(v99 + 80);
  v95 = v44 + v94;
  v68 = (v67 + v44 + v94) & ~v94;
  v69 = (v110 + v68 + 7) & 0xFFFFFFFFFFFFFFF8;
  v70 = swift_allocObject();
  sub_245777620(v70 + v62, *(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v106 + 32));
  *(_QWORD *)(v70 + v130) = v100;
  *(_QWORD *)(v70 + v63) = v117;
  *(_QWORD *)(v70 + v64) = v51;
  (*(void (**)(unint64_t, uint64_t, uint64_t))(v108 + 32))(v70 + v65, v123, v127);
  *(_QWORD *)(v70 + v66) = v119;
  v129 = v70;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 32))(v70 + v67, v124, v125);
  v71 = v70 + v68;
  v72 = v126;
  sub_245765CC8(v126, v71, &qword_2574984E0);
  *(_QWORD *)(v70 + v69) = v121;
  v73 = v100;
  sub_2457774AC();
  sub_2457513E4();
  sub_2457776D4();
  sub_245756E64();
  sub_2457BAAC8();
  sub_245748A50(&qword_257498CA8);
  v107 = swift_allocBox();
  v75 = v74;
  v76 = sub_245748A50(&qword_257498CB0);
  sub_24575908C(v75, v77, v78, v76);
  sub_245748A50(&qword_257498CB8);
  v130 = swift_allocBox();
  v80 = v79;
  sub_245776ED4((uint64_t)&v122);
  sub_2457772A8(v80);
  sub_245748A50(&qword_257498CC0);
  v122 = swift_allocBox();
  v82 = v81;
  v83 = sub_24577710C();
  sub_24575908C(v82, v84, v85, v83);
  v86 = sub_245776B5C();
  swift_unknownObjectWeakInit();
  v128(v123, v111, v127);
  sub_245776ED4((uint64_t)&v128);
  sub_245765EEC(v114, v72, &qword_2574984E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v118 + 16))(v112, v116, v120);
  v87 = (((v92 + 56) & ~v92) + v98) & 0xFFFFFFFFFFFFFFF8;
  v88 = (((v87 + v93 + 8) & ~v93) + v95) & ~v94;
  v89 = (v88 + v110 + *(unsigned __int8 *)(v118 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v118 + 80);
  v128 = (void (*)(uint64_t, uint64_t, uint64_t))((v101 + v89 + 7) & 0xFFFFFFFFFFFFFFF8);
  v115 = ((unint64_t)v128 + 15) & 0xFFFFFFFFFFFFFFF8;
  v90 = (char *)swift_allocObject();
  v91 = v130;
  *((_QWORD *)v90 + 2) = v86;
  *((_QWORD *)v90 + 3) = v91;
  *((_QWORD *)v90 + 4) = v107;
  *((_QWORD *)v90 + 5) = v117;
  *((_QWORD *)v90 + 6) = v51;
  sub_245776ED4((uint64_t)&a11);
  *(_QWORD *)&v90[v87] = v119;
  sub_245776ED4((uint64_t)&a12);
  sub_245765CC8(v126, (uint64_t)&v90[v88], &qword_2574984E0);
  (*(void (**)(char *, uint64_t, uint64_t))(v118 + 32))(&v90[v89], v112, v120);
  *(_QWORD *)((char *)v128 + (_QWORD)v90) = v122;
  *(_QWORD *)&v90[v115] = v121;
  sub_245756E64();
  sub_2457774AC();
  sub_245777474();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_245748A50(&qword_257498BD8);
  sub_2457BB2FC();
  sub_245759158(v102, v103, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v104 + 16));
  sub_24577695C(&qword_257498CD8, &qword_257498C90);
  sub_2457BAAEC();
  sub_245751140(v103, *(uint64_t (**)(uint64_t, uint64_t))(v104 + 8));
  sub_245777530(v116, *(uint64_t (**)(uint64_t, uint64_t))(v118 + 8));
  sub_2457775D0();
  swift_release();
  sub_24577754C();
  sub_245758FB4();
}

uint64_t sub_24576CEC4()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  return sub_2457BB05C();
}

uint64_t sub_24576CF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v8[10] = v11;
  v8[11] = v12;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v9 = sub_2457BB0E0();
  v8[12] = v9;
  v8[13] = *(_QWORD *)(v9 - 8);
  v8[14] = swift_task_alloc();
  sub_245748A50(&qword_257498CF0);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  v8[17] = swift_task_alloc();
  v8[18] = swift_task_alloc();
  sub_245748A50(&qword_257498CB8);
  v8[19] = swift_task_alloc();
  v8[20] = swift_task_alloc();
  v8[21] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24576D04C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void);
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;

  sub_245776CC0();
  v4 = v0[20];
  v5 = v0[21];
  v6 = v0[18];
  v7 = v0[12];
  sub_245767E58(v5, v0[3], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 16));
  sub_2457772A8(v5);
  v8 = sub_245777654();
  v0[22] = v8;
  sub_24575908C(v6, v9, v10, v8);
  sub_245765EEC(v5, v4, &qword_257498CB8);
  sub_245776BB0(v4, 1, v7);
  if (v11)
  {
    v12 = v0[22];
    v13 = v0[17];
    sub_245765F18(v0[20], &qword_257498CB8);
    sub_2457776F4(v14, v15, &qword_257498CF0);
    result = sub_245776BB0(v13, 1, v12);
    if (v11)
    {
      __break(1u);
    }
    else
    {
      sub_24577707C();
      sub_245765F18(v1, &qword_257498CF0);
      sub_24577749C(v16, &qword_257498CB8);
      sub_245776F2C(v3, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32));
      sub_245757044();
      sub_245776BF0();
      sub_245776C34();
      sub_245776C6C();
      sub_245776C90();
      sub_245776C64();
      sub_245776C74();
      sub_2457773F8();
      v17 = (uint64_t (*)(void))sub_245776FC4();
      return sub_245776B18(v17);
    }
  }
  else
  {
    v18 = v0[12];
    v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0[13] + 32);
    v0[23] = (uint64_t)v19;
    v20 = v0[5];
    v19(v0[14], v0[20], v18);
    sub_2457513E4();
    sub_245777474();
    sub_2457776A0();
    v0[24] = v20;
    v21 = (_QWORD *)swift_task_alloc();
    v0[25] = (uint64_t)v21;
    v22 = sub_245776FA0(v21);
    return sub_245776DB0(v22, v23, v24, v25, v26, v27, v28);
  }
  return result;
}

uint64_t sub_24576D1BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 208) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24576D210()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  char v8;
  _QWORD *v9;

  v1 = v0[22];
  v2 = v0[18];
  v4 = v0[15];
  v3 = v0[16];
  sub_245777060(v2);
  sub_245776EC8(v3, 0);
  v5 = sub_245777400();
  sub_245765CC8(v5, v6, &qword_257498CF0);
  sub_245776F0C(v2);
  result = sub_245776BB0(v4, 1, v1);
  if (v8)
  {
    __break(1u);
  }
  else
  {
    v9 = (_QWORD *)swift_task_alloc();
    v0[27] = (uint64_t)v9;
    *v9 = v0;
    v9[1] = sub_24576D2CC;
    return sub_24576F82C(v0[19], v0[15], v0[11]);
  }
  return result;
}

uint64_t sub_24576D2CC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 224) = v1;
  swift_task_dealloc();
  if (!v1)
    sub_24577702C(*(_QWORD *)(*(_QWORD *)(v0 + 176) - 8));
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24576D328()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  char v14;
  uint64_t v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  sub_245776CC0();
  v3 = *(_QWORD *)(v0 + 160);
  v4 = *(_QWORD *)(v0 + 168);
  v5 = *(_QWORD *)(v0 + 96);
  sub_245751168(*(_QWORD *)(v0 + 112), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 104) + 8));
  sub_245777060(v4);
  sub_245777384();
  sub_245765CC8(v6, v7, v8);
  sub_245765EEC(v4, v3, &qword_257498CB8);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v3, 1, v5) == 1)
  {
    v9 = *(_QWORD *)(v0 + 176);
    v10 = *(_QWORD *)(v0 + 136);
    sub_245765F18(*(_QWORD *)(v0 + 160), &qword_257498CB8);
    sub_2457776F4(v11, v12, &qword_257498CF0);
    result = sub_245776BB0(v10, 1, v9);
    if (v14)
    {
      __break(1u);
    }
    else
    {
      sub_24577707C();
      sub_245765F18((uint64_t)&qword_257498CB8, &qword_257498CF0);
      sub_24577749C(v15, &qword_257498CB8);
      sub_245776F2C(v2, v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32));
      sub_245757044();
      sub_245776BF0();
      sub_245776C34();
      sub_245776C6C();
      sub_245776C90();
      sub_245776C64();
      sub_245776C74();
      sub_2457773F8();
      v16 = (uint64_t (*)(void))sub_245776FC4();
      return sub_245776B18(v16);
    }
  }
  else
  {
    v17 = *(_QWORD *)(v0 + 40);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(v0 + 184))(*(_QWORD *)(v0 + 112), *(_QWORD *)(v0 + 160), *(_QWORD *)(v0 + 96));
    sub_2457513E4();
    sub_245777474();
    sub_2457776A0();
    *(_QWORD *)(v0 + 192) = v17;
    v18 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 200) = v18;
    v19 = sub_245776FA0(v18);
    return sub_245776DB0(v19, v20, v21, v22, v23, v24, v25);
  }
  return result;
}

uint64_t sub_24576D494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = sub_24577702C(*(_QWORD *)(v0 + 104));
  sub_24577749C(v1, &qword_257498CF0);
  sub_245777700(v2, &qword_257498CB8);
  sub_2457770F0();
  sub_245757044();
  sub_245776BF0();
  sub_245776C34();
  sub_245776C6C();
  sub_245776C90();
  sub_245776C64();
  sub_245776C74();
  return sub_245776E10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24576D510()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 144);
  v3 = *(_QWORD *)(v0 + 120);
  sub_24577702C(*(_QWORD *)(v0 + 104));
  sub_245765F18(v2, &qword_257498CF0);
  sub_24577749C(v4, &qword_257498CB8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  sub_2457770F0();
  sub_245757044();
  sub_245776BF0();
  sub_245776C34();
  sub_245776C6C();
  sub_245776C90();
  sub_245776C64();
  sub_245776C74();
  return sub_245776E10(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24576D5A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  *(_QWORD *)(v8 + 448) = v15;
  *(_QWORD *)(v8 + 456) = v16;
  *(_OWORD *)(v8 + 432) = v14;
  *(_QWORD *)(v8 + 416) = a7;
  *(_QWORD *)(v8 + 424) = a8;
  *(_QWORD *)(v8 + 400) = a5;
  *(_QWORD *)(v8 + 408) = a6;
  *(_QWORD *)(v8 + 384) = a1;
  *(_QWORD *)(v8 + 392) = a2;
  v9 = sub_2457BABB8();
  *(_QWORD *)(v8 + 464) = v9;
  *(_QWORD *)(v8 + 472) = *(_QWORD *)(v9 - 8);
  *(_QWORD *)(v8 + 480) = swift_task_alloc();
  sub_245748A50(&qword_257498CC0);
  *(_QWORD *)(v8 + 488) = swift_task_alloc();
  *(_QWORD *)(v8 + 496) = swift_task_alloc();
  v10 = sub_245748A50(&qword_257498C90);
  *(_QWORD *)(v8 + 504) = v10;
  *(_QWORD *)(v8 + 512) = *(_QWORD *)(v10 - 8);
  *(_QWORD *)(v8 + 520) = swift_task_alloc();
  sub_245748A50(&qword_257498CA8);
  *(_QWORD *)(v8 + 528) = swift_task_alloc();
  *(_QWORD *)(v8 + 536) = swift_task_alloc();
  sub_245748A50(&qword_257498CB8);
  *(_QWORD *)(v8 + 544) = swift_task_alloc();
  *(_QWORD *)(v8 + 552) = swift_task_alloc();
  *(_QWORD *)(v8 + 560) = swift_task_alloc();
  v11 = sub_2457BB0E0();
  *(_QWORD *)(v8 + 568) = v11;
  *(_QWORD *)(v8 + 576) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 584) = swift_task_alloc();
  v12 = sub_2457BB08C();
  *(_QWORD *)(v8 + 592) = v12;
  *(_QWORD *)(v8 + 600) = *(_QWORD *)(v12 - 8);
  *(_QWORD *)(v8 + 608) = swift_task_alloc();
  *(_QWORD *)(v8 + 616) = swift_projectBox();
  *(_QWORD *)(v8 + 624) = swift_projectBox();
  *(_QWORD *)(v8 + 632) = swift_projectBox();
  return swift_task_switch();
}

uint64_t sub_24576D77C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  os_log_type_t v8;
  _WORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;
  uint64_t (*v16)(_QWORD, _QWORD, _QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = v0[49] + 16;
  sub_245776B0C();
  v2 = MEMORY[0x24953B3A8](v1);
  v0[80] = v2;
  if (!v2)
  {
    if (qword_257497E28 != -1)
      swift_once();
    sub_24574E0F8(v0[74], (uint64_t)qword_257498A58);
    sub_245776B0C();
    sub_245776B6C();
    sub_245777058();
    v8 = sub_245751514();
    if (sub_245748AE8(v8))
    {
      v9 = (_WORD *)sub_2457513BC();
      sub_245777070(v9);
      sub_245776B94(&dword_245746000, v10, v11, "Provider has been destroyed, can't complete request");
      sub_24575105C();
    }
    v12 = v0[76];
    v13 = v0[75];

    sub_245776E28(v12, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    sub_245776F34();
    sub_245776EA4(&qword_257498B90, v14, (uint64_t (*)(uint64_t))MEMORY[0x24BE3B470], MEMORY[0x24BE3B480]);
    sub_245776B80();
    sub_2457BAFC0();
    sub_245776E9C();
    swift_task_dealloc();
    sub_245757044();
    sub_245776BF0();
    sub_245776C34();
    sub_245776C6C();
    sub_245776C90();
    sub_245776C64();
    sub_245776C74();
    sub_245776D28();
    swift_task_dealloc();
    sub_2457772A0();
    v7 = (uint64_t (*)(void))v0[1];
    return sub_245776D4C(v7);
  }
  v3 = v0[77];
  v29 = v0[71];
  v4 = v0[70];
  sub_245776B0C();
  sub_245776B0C();
  sub_245756E1C();
  sub_245776B0C();
  sub_245756E1C();
  sub_245777554();
  sub_245776B0C();
  sub_245756E1C();
  sub_245756E1C();
  sub_245765EEC(v3, v4, &qword_257498CB8);
  sub_245776BB0(v4, 1, v29);
  if (v5)
  {
    sub_2457775B0();
    sub_245777700(v6, &qword_257498CB8);
    *(_OWORD *)v4 = 0u;
    *(_OWORD *)(v4 + 16) = 0u;
    *(_QWORD *)(v4 + 32) = 0;
    sub_245776BC4();
    sub_2457775D8();
    sub_245756FCC();
    sub_245757044();
    sub_245776BF0();
    sub_245776C34();
    sub_245776C6C();
    sub_245776C90();
    sub_245776C64();
    sub_245776C74();
    sub_245776D28();
    sub_2457772A0();
    v7 = (uint64_t (*)(void))sub_245776FC4();
    return sub_245776D4C(v7);
  }
  v16 = *(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[72] + 32);
  v0[81] = v16;
  sub_245776FD8(v16);
  sub_245776F0C((uint64_t)(v0 + 21));
  v17 = sub_245748A50(&qword_257498CB0);
  sub_245776E6C(v17);
  if ((_DWORD)v0 == -167)
  {
    v27 = v0[78];
    v28 = v0[79];
    sub_245777538();
    v25 = v19;
    v26 = v18;
    swift_bridgeObjectRetain();
    v20 = swift_bridgeObjectRetain();
    sub_245776998(v20);
    sub_24577751C();
    sub_24576E88C();
    sub_245776B64();
    sub_2457773D4();
    sub_245777314(v3, *(uint64_t (**)(uint64_t, uint64_t))(v25 + 8));
    sub_2457770B8();
    sub_245776A94((uint64_t)(v0 + 24), v27, &qword_257498CA8);
    sub_2457BAB7C();
    v21 = sub_24577710C();
    sub_245776E44(v26, 0, v22, v21);
    sub_245776A94(v26, v28, &qword_257498CC0);
  }
  v23 = v0[78];
  sub_245756E1C();
  result = sub_245776BB0(v23, 1, v4);
  if (v5)
  {
    __break(1u);
  }
  else
  {
    v24 = (_QWORD *)swift_task_alloc();
    v0[83] = v24;
    sub_2457773A0(v24);
    return sub_245776D68();
  }
  return result;
}

uint64_t sub_24576DBA4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 672) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_endAccess();
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24576DBF8()
{
  uint64_t v0;
  __int128 *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  char v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = (__int128 *)(v0 + 16);
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = *(_QWORD *)(v0 + 632);
    sub_245776AC0(v1, v0 + 56);
    sub_245756E1C();
    v3 = sub_24577710C();
    result = sub_245776BB0(v2, 1, v3);
    if (!v5)
    {
      v6 = *(void **)(v0 + 640);
      v7 = *(_QWORD *)(v0 + 584);
      v8 = *(_QWORD *)(v0 + 576);
      v9 = *(_QWORD *)(v0 + 384);
      sub_2457BAB70();
      swift_endAccess();

      sub_2457512B0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
      sub_245776AC0((__int128 *)(v0 + 56), v9);
      sub_245776BC4();
      swift_task_dealloc();
      sub_245756FCC();
      sub_245757044();
      sub_245776BF0();
      sub_245776C34();
      sub_245776C6C();
      sub_245776C90();
      sub_245776C64();
      sub_245776C74();
      sub_245776D28();
      swift_task_dealloc();
      sub_245776FC4();
      sub_2457773B8();
      __asm { BR              X0 }
    }
    __break(1u);
  }
  else
  {
    v11 = *(_QWORD *)(v0 + 632);
    v12 = *(_QWORD *)(v0 + 624);
    v13 = *(_QWORD *)(v0 + 528);
    v14 = *(_QWORD *)(v0 + 488);
    sub_245765F18((uint64_t)v1, &qword_257498CE0);
    sub_245776EC8(v13, 1);
    sub_245776A94(v13, v12, &qword_257498CA8);
    sub_245765EEC(v11, v14, &qword_257498CC0);
    v15 = sub_24577710C();
    result = sub_245776BB0(v14, 1, v15);
    if (!v5)
    {
      v16 = *(_QWORD *)(v0 + 488);
      sub_2457BAB64();
      sub_245751140(v16, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8));
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 680) = v17;
      *v17 = v0;
      v17[1] = sub_24576DDD0;
      sub_2457773B8();
      return sub_24576F82C(v18, v19, v20);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_24576DDD0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 688) = v1;
  swift_task_dealloc();
  sub_24577702C(*(_QWORD *)(v0 + 472));
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24576DE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t (*v12)(void);
  uint64_t result;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = *(_QWORD *)(v0 + 616);
  v3 = *(_QWORD *)(v0 + 568);
  v4 = *(_QWORD *)(v0 + 544);
  sub_245751140(*(_QWORD *)(v0 + 584), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 + 576) + 8));
  sub_245777384();
  sub_245776A94(v5, v6, v7);
  sub_245776F0C(v2);
  sub_245776BB0(v4, 1, v3);
  if (v10
    || (v8 = *(_QWORD *)(v0 + 616),
        v3 = *(_QWORD *)(v0 + 568),
        v9 = *(_QWORD *)(v0 + 560),
        sub_245765F18(*(_QWORD *)(v0 + 544), &qword_257498CB8),
        sub_245765EEC(v8, v9, &qword_257498CB8),
        sub_245776BB0(v9, 1, v3),
        v10))
  {
    sub_2457775B0();
    sub_245777700(v11, &qword_257498CB8);
    *(_OWORD *)v3 = 0u;
    *(_OWORD *)(v3 + 16) = 0u;
    *(_QWORD *)(v3 + 32) = 0;
    sub_245776BC4();
    swift_task_dealloc();
    sub_245756FCC();
    sub_245757044();
    sub_245776BF0();
    sub_245776C34();
    sub_245776C6C();
    sub_245776C90();
    sub_245776C64();
    sub_245776C74();
    sub_245776D28();
    swift_task_dealloc();
    v12 = (uint64_t (*)(void))sub_245776FC4();
    return sub_245776D4C(v12);
  }
  else
  {
    sub_245776FD8(*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 648));
    sub_245776F0C(v8);
    v14 = sub_245748A50(&qword_257498CB0);
    sub_245776E6C(v14);
    if ((_DWORD)v8 == 1)
    {
      v24 = *(_QWORD *)(v0 + 624);
      v25 = *(_QWORD *)(v0 + 632);
      sub_245777538();
      v22 = v16;
      v23 = v15;
      swift_bridgeObjectRetain();
      v17 = swift_bridgeObjectRetain();
      sub_245776998(v17);
      sub_24577751C();
      sub_24576E88C();
      sub_245776B64();
      sub_2457773D4();
      sub_245777314((uint64_t)&qword_257498CB8, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
      sub_2457770B8();
      sub_245776A94(v1, v24, &qword_257498CA8);
      sub_2457BAB7C();
      v18 = sub_24577710C();
      sub_245776E44(v23, 0, v19, v18);
      sub_245776A94(v23, v25, &qword_257498CC0);
    }
    v20 = *(_QWORD *)(v0 + 624);
    sub_245756E1C();
    result = sub_245776BB0(v20, 1, v3);
    if (v10)
    {
      __break(1u);
    }
    else
    {
      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 664) = v21;
      sub_2457773A0(v21);
      return sub_245776D68();
    }
  }
  return result;
}

uint64_t sub_24576E0B8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;

  sub_245776CC0();
  v1 = *(void **)(v0 + 640);
  v2 = *(_QWORD *)(v0 + 584);
  v3 = *(_QWORD *)(v0 + 576);
  swift_endAccess();

  sub_245751140(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_245776CDC();
  sub_245757044();
  sub_245776BF0();
  sub_245776C34();
  sub_245776C6C();
  sub_245776C90();
  sub_245776C64();
  sub_245776C74();
  sub_245776D28();
  sub_245756FCC();
  sub_2457773F8();
  return sub_245776B18(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24576E138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_245776CC0();
  v1 = *(_QWORD *)(v0 + 584);
  v2 = *(_QWORD *)(v0 + 576);

  sub_245751140(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  sub_245776CDC();
  sub_245757044();
  sub_245776BF0();
  sub_245776C34();
  sub_245776C6C();
  sub_245776C90();
  sub_245776C64();
  sub_245776C74();
  sub_245776D28();
  sub_245756FCC();
  sub_2457773F8();
  return sub_245776B18(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24576E1B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v8[8] = a7;
  v8[9] = v7;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v8[2] = a1;
  v8[3] = a2;
  v9 = sub_245776CA0();
  v8[10] = v9;
  v8[11] = *(_QWORD *)(v9 - 8);
  v8[12] = sub_245776B4C();
  sub_245756E10();
  return sub_245776D30();
}

uint64_t sub_24576E200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v1 = *(_QWORD *)(v0 + 96);
  v2 = *(_QWORD *)(v0 + 72);
  v7 = *(_OWORD *)(v0 + 40);
  v8 = *(_OWORD *)(v0 + 24);
  v6 = *(_OWORD *)(v0 + 56);
  sub_2457BAAC8();
  v3 = swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  *(_OWORD *)(v3 + 32) = v8;
  *(_OWORD *)(v3 + 48) = v7;
  *(_OWORD *)(v3 + 64) = v6;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v4;
  sub_245777654();
  *v4 = v0;
  v4[1] = sub_24576E2D4;
  sub_245756E10();
  return sub_2457BB6C8();
}

uint64_t sub_24576E2D4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  sub_245757044();
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24576E330()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  sub_245776F18(*(_QWORD *)(v0 + 88));
  sub_245756FCC();
  v1 = (uint64_t (*)(void))sub_245776FC4();
  return sub_245756DF8(v1);
}

uint64_t sub_24576E360()
{
  uint64_t v0;

  sub_245776F18(*(_QWORD *)(v0 + 88));
  sub_245756FCC();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24576E394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t result;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[2];
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v33 = a7;
  v34 = a8;
  v32 = a6;
  v13 = sub_2457BB08C();
  v30 = *(_QWORD *)(v13 - 8);
  v31 = v13;
  MEMORY[0x24BDAC7A8](v13);
  v29 = (char *)v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_245748A50(&qword_257498B68);
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_2457BAAD4();
  MEMORY[0x24BDAC7A8](v18);
  v27 = *(void (**)(char *, uint64_t))(v20 + 16);
  v28 = v21;
  v27((char *)v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  v22 = sub_245748A50(&qword_257498B70);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v17, a1, v22);
  v26[1] = v22;
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v17, 0, 1, v22);
  swift_beginAccess();
  sub_24576B96C();
  result = swift_endAccess();
  if (*(_QWORD *)(a2 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client))
  {
    MEMORY[0x24BDAC7A8](result);
    v26[-8] = a4;
    v26[-7] = a5;
    v24 = v33;
    v26[-6] = v32;
    v26[-5] = v24;
    v26[-4] = v34;
    v26[-3] = v25;
    v26[-2] = a3;
    v26[-1] = a2;
    swift_retain();
    sub_2457BAE64();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24576E88C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_245759004();
  v2 = sub_245748A50(&qword_257498BD0);
  sub_245777304();
  MEMORY[0x24BDAC7A8](v3);
  sub_24577744C();
  sub_245748A50(&qword_257498BD8);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v0 + 104))(v1, *MEMORY[0x24BEE6CA0], v2);
  sub_2457BB308();
  sub_245758FB4();
}

uint64_t sub_24576E950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v44 = a6;
  v43 = a5;
  v42 = a4;
  v55 = a1;
  v47 = sub_2457BB08C();
  v41[1] = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  v49 = (char *)v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = sub_2457BAAD4();
  v13 = *(_QWORD *)(v54 - 8);
  MEMORY[0x24BDAC7A8](v54);
  v48 = v14;
  v51 = (char *)v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_245748A50(&qword_257498B48);
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = sub_245748A50(&qword_257498B20);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v53 = (char *)v41 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)v41 - v22;
  v24 = a2;
  v25 = (uint64_t *)(a2 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests);
  swift_beginAccess();
  v52 = v25;
  v26 = *v25;
  swift_bridgeObjectRetain();
  v50 = a3;
  sub_24576B84C(a3, v26, (uint64_t)v23);
  swift_bridgeObjectRelease();
  v27 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v23, 1, v15);
  v46 = a8;
  v45 = a7;
  if (v27)
  {
    sub_245765F18((uint64_t)v23, &qword_257498B20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v18, v23, v15);
    sub_245765F18((uint64_t)v23, &qword_257498B20);
    v56 = 0;
    sub_2457BB2D8();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  }
  v28 = v15;
  v29 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v31 = v50;
  v30 = v51;
  v32 = v54;
  v29(v51, v50, v54);
  v33 = (uint64_t)v53;
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v53, v55, v28);
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v33, 0, 1, v28);
  swift_beginAccess();
  sub_24576B96C();
  swift_endAccess();
  v34 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v41[0] = v29;
  v29(v30, v31, v32);
  v35 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = v34;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v36 + v35, v30, v32);
  result = sub_2457BB2C0();
  if (*(_QWORD *)(v24 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client))
  {
    MEMORY[0x24BDAC7A8](result);
    v38 = v43;
    v41[-8] = v42;
    v41[-7] = v38;
    v39 = v45;
    v41[-6] = v44;
    v41[-5] = v39;
    v41[-4] = v46;
    v41[-3] = v40;
    v41[-2] = v31;
    v41[-1] = v24;
    swift_retain();
    sub_2457BAE64();
    return swift_release();
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_24576F058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int (*v10)(uint64_t);

  v7 = (_QWORD *)sub_245748A50(a4);
  v8 = *(v7 - 1);
  MEMORY[0x24BDAC7A8](v7);
  sub_24575136C();
  sub_245776F2C(v4, a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  v9 = sub_2457773EC();
  if (v10(v9) == *MEMORY[0x24BEE6C58])
  {
    sub_245777258();
    sub_245776B0C();
    if (MEMORY[0x24953B3A8](a2 + 16))
    {
      sub_245767A8C();
      sub_24576F574();

    }
  }
  else
  {
    sub_245777258();
  }
  sub_245767BCC();
}

void sub_24576F114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,SEL *a22)
{
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  void *v28;
  void *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  void (*v57)(uint64_t);
  id v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  id v67;
  uint64_t v68;
  id v69;
  void *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  void (*v76)(char *, uint64_t, uint64_t);
  uint64_t v77;
  id v78;
  id v79;
  void *v80;
  void *v81;
  id v82;
  void *v83;
  void *v84;
  void *v85;
  void *v86;
  void *v87;
  void *v88;
  void *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  void *v100;
  uint64_t v101;
  void *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  SEL *v109;
  uint64_t v110;
  id v111;
  uint64_t v112;
  uint64_t v113;

  sub_245759004();
  v107 = v23;
  v108 = v24;
  v100 = v25;
  v101 = v26;
  v99 = v27;
  v29 = v28;
  v109 = a22;
  v110 = v30;
  v31 = sub_2457BAF90();
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v32);
  sub_245777464();
  v35 = v33 - v34;
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&v91 - v37;
  sub_245748A50(&qword_2574984E0);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v39);
  sub_245777190(v40, v91);
  v41 = sub_245777048();
  v103 = *(_QWORD *)(v41 - 8);
  v104 = v41;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v42);
  sub_245777174(v43, v91);
  v44 = sub_2457BB008();
  v112 = *(_QWORD *)(v44 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v45);
  sub_245777464();
  v48 = (char *)(v46 - v47);
  MEMORY[0x24BDAC7A8](v49);
  v51 = (char *)&v91 - v50;
  v52 = sub_245777050();
  v96 = *(_QWORD *)(v52 - 8);
  v97 = v52;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v53);
  sub_245750F48();
  v98 = v54;
  v55 = sub_245759064();
  MEMORY[0x24BDAC7A8](v55);
  sub_24575136C();
  v56 = sub_2457773EC();
  v57(v56);
  v58 = objc_allocWithZone((Class)type metadata accessor for ChatMessagesXPCEnvelope());
  v111 = v29;
  v59 = v99;
  swift_unknownObjectRetain();
  sub_24575B050();
  v102 = v60;
  v61 = *(_QWORD *)(v59 + 16);
  if (v61)
  {
    v92 = v38;
    v93 = v35;
    v94 = v22;
    v95 = v31;
    v113 = MEMORY[0x24BEE4AF8];
    sub_245777640();
    sub_245776DE0();
    v63 = v59 + v62;
    v65 = *(_QWORD *)(v64 + 72);
    v66 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
    do
    {
      v66(v51, v63, v44);
      v66(v48, (uint64_t)v51, v44);
      v67 = objc_allocWithZone((Class)sub_24577764C());
      ToolXPCEnvelope.init(sealing:)();
      sub_245776E28((uint64_t)v51, *(uint64_t (**)(uint64_t, uint64_t))(v112 + 8));
      sub_2457BB488();
      sub_245777510();
      sub_2457BB4B8();
      sub_2457BB494();
      v63 += v65;
      --v61;
    }
    while (v61);
    v99 = v113;
    v22 = v94;
    v31 = v95;
    v35 = v93;
    v38 = v92;
  }
  else
  {
    v99 = MEMORY[0x24BEE4AF8];
  }
  v68 = a21;
  (*(void (**)(uint64_t, void *, uint64_t))(v96 + 16))(v98, v100, v97);
  v69 = objc_allocWithZone((Class)type metadata accessor for ToolChoiceXPCEnvelope());
  sub_245767A8C();
  ToolChoiceXPCEnvelope.init(sealing:)();
  v100 = v70;
  v71 = v101;
  v72 = *(_QWORD *)(v101 + 16);
  if (v72)
  {
    v98 = a21;
    v113 = MEMORY[0x24BEE4AF8];
    sub_245777640();
    sub_245776DE0();
    v74 = v71 + v73;
    v112 = *(_QWORD *)(v22 + 72);
    v75 = v22;
    v76 = *(void (**)(char *, uint64_t, uint64_t))(v22 + 16);
    do
    {
      v76(v38, v74, v31);
      v77 = sub_245777554();
      ((void (*)(uint64_t))v76)(v77);
      v78 = objc_allocWithZone((Class)sub_24577765C());
      DocumentIdentifierXPCEnvelope.init(sealing:)(v35);
      (*(void (**)(char *, uint64_t))(v75 + 8))(v38, v31);
      sub_2457BB488();
      sub_245777510();
      sub_2457BB4B8();
      sub_2457BB494();
      v74 += v112;
      --v72;
    }
    while (v72);
    v68 = v98;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v103 + 16))(v105, v107, v104);
  v79 = objc_allocWithZone((Class)type metadata accessor for SamplingParametersXPCEnvelope());
  sub_245767A8C();
  sub_24575B3A8();
  v81 = v80;
  sub_245765EEC(v108, v106, &qword_2574984E0);
  v82 = objc_allocWithZone((Class)type metadata accessor for SchemaXPCEnvelope());
  SchemaXPCEnvelope.init(sealing:)();
  v84 = v83;
  sub_24577764C();
  v85 = (void *)sub_2457BB224();
  sub_24577765C();
  v86 = (void *)sub_2457BB224();
  v87 = (void *)sub_2457BAAB0();
  v90 = v68;
  v88 = v102;
  v89 = v100;
  objc_msgSend(v111, *v109, v102, v85, v100, v86, v81, v84, v87, v90);
  swift_unknownObjectRelease();

  sub_245751384();
  sub_2457513F4();

  sub_245758FB4();
}

void sub_24576F574()
{
  uint64_t v0;
  NSObject *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  sub_245759004();
  v4 = v3;
  v5 = sub_245751504();
  sub_24577701C();
  MEMORY[0x24BDAC7A8](v6);
  sub_24575136C();
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_client))
  {
    MEMORY[0x24BDAC7A8](v7);
    sub_245748AF8();
    sub_245776F7C();
    if (v4)
    {
      swift_release();
      if (qword_257497E28 != -1)
        swift_once();
      sub_24574E0F8(v5, (uint64_t)qword_257498A58);
      sub_245776B0C();
      v8 = sub_2457773EC();
      sub_245759158(v8, v9, v10);
      sub_2457511D8();
      sub_2457511D8();
      sub_2457BB068();
      v11 = sub_245751514();
      if (os_log_type_enabled(v1, v11))
      {
        v12 = sub_2457513BC();
        v13 = (_QWORD *)sub_2457513BC();
        v15 = sub_2457513BC();
        *(_DWORD *)v12 = 136315394;
        sub_245776FF0(20, 0x80000002457C9DE0, &v15);
        sub_2457771FC();
        *(_WORD *)(v12 + 12) = 2112;
        sub_2457511D8();
        v14 = sub_245776FD0();
        sub_2457771FC();
        *v13 = v14;
        sub_245751068();
        sub_245751068();
        sub_245776F24(&dword_245746000, v1, v11, "%s error %@", (uint8_t *)v12);
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        sub_245757020();
        sub_24575105C();
      }
      sub_245751068();
      sub_245751068();
      sub_245751068();

      sub_245751140((uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    }
    else
    {
      swift_release();
    }
    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

void sub_24576F7D8(void *a1)
{
  id v2;

  swift_unknownObjectRetain();
  v2 = (id)sub_2457BAAB0();
  objc_msgSend(a1, sel_cancelRequestWithUuid_, v2);
  swift_unknownObjectRelease();

}

uint64_t sub_24576F82C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[8] = a3;
  v4[9] = v3;
  v4[6] = a1;
  v4[7] = a2;
  v5 = sub_245751504();
  v4[10] = v5;
  v4[11] = *(_QWORD *)(v5 - 8);
  v4[12] = sub_245776B4C();
  v6 = sub_2457BB140();
  v4[13] = v6;
  v4[14] = *(_QWORD *)(v6 - 8);
  v4[15] = sub_245776B4C();
  sub_245748A50(&qword_257498BB8);
  v4[16] = sub_245776B4C();
  v7 = sub_2457BABAC();
  v4[17] = v7;
  v4[18] = *(_QWORD *)(v7 - 8);
  v4[19] = sub_245776B4C();
  sub_245756E10();
  return sub_245776D30();
}

uint64_t sub_24576F8C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  os_log_type_t v7;
  os_log_type_t v8;
  _BOOL4 v9;
  uint64_t v10;
  uint64_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(void);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  sub_245776CC0();
  v25 = v1;
  v26 = v2;
  v24 = v0;
  v4 = *(_QWORD *)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 136);
  v5 = sub_2457BAB94();
  sub_2457AD30C(v5, v4);
  sub_245776CB8();
  sub_245776BB0(v4, 1, v3);
  if (v6)
  {
    sub_245765F18(*(_QWORD *)(v0 + 128), &qword_257498BB8);
    if (qword_257497E28 != -1)
      swift_once();
    v7 = sub_24574E0F8(*(_QWORD *)(v0 + 80), (uint64_t)qword_257498A58);
    sub_245776B0C();
    sub_245776B6C();
    sub_245777058();
    v8 = sub_245751514();
    v9 = sub_245751158(v8);
    v11 = *(_QWORD *)(v0 + 88);
    v10 = *(_QWORD *)(v0 + 96);
    if (v9)
    {
      v12 = (uint8_t *)sub_2457513BC();
      v23 = sub_2457513BC();
      *(_DWORD *)v12 = 136315138;
      sub_245777574();
      *(_QWORD *)(v0 + 40) = sub_245776FF0(26, v13, &v23);
      sub_2457BB3BC();
      sub_245777114(&dword_245746000, (v0 + 16), v7, "%s Response was missing candidates", v12);
      sub_245757020();
      sub_24575105C();
    }

    sub_245776E28(v10, *(uint64_t (**)(uint64_t, uint64_t))(v11 + 8));
    v14 = *(_QWORD *)(v0 + 48);
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 144) + 32))(*(_QWORD *)(v0 + 152), *(_QWORD *)(v0 + 128), *(_QWORD *)(v0 + 136));
    v15 = *(_QWORD *)(sub_2457BABA0() + 16);
    swift_bridgeObjectRelease();
    if (v15)
    {
      v16 = sub_2457BABA0();
      *(_QWORD *)(v0 + 160) = v16;
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 168) = v17;
      *v17 = v0;
      v17[1] = sub_24576FB0C;
      return sub_245770000(*(_QWORD *)(v0 + 64), v16);
    }
    v14 = *(_QWORD *)(v0 + 48);
    sub_24577702C(*(_QWORD *)(v0 + 144));
  }
  v19 = sub_245759064();
  sub_24575908C(v14, v20, v21, v19);
  sub_245777358();
  sub_245756FCC();
  sub_245757044();
  sub_245776BF0();
  v22 = (uint64_t (*)(void))sub_245776FC4();
  return sub_245776B18(v22);
}

uint64_t sub_24576FB0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v3 = *v2;
  *(_QWORD *)(v3 + 176) = a1;
  *(_QWORD *)(v3 + 184) = v1;
  swift_task_dealloc();
  sub_245751474();
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24576FB70()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(void);
  uint64_t v13;
  uint64_t v14;

  sub_245776CC0();
  v1 = v0[22];
  if (*(_QWORD *)(v1 + 16))
  {
    v2 = v0[18];
    v13 = v0[17];
    v14 = v0[19];
    v3 = v0[14];
    v4 = v0[15];
    v5 = v0[13];
    v6 = v0[6];
    sub_245748A50(&qword_257498468);
    sub_2457BB0D4();
    sub_245777010();
    *(_OWORD *)(swift_allocObject() + 16) = xmmword_2457BDEE0;
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v4, *MEMORY[0x24BE7ABF8], v5);
    *(_QWORD *)(swift_task_alloc() + 16) = v1;
    sub_2457BB0C8();
    sub_245751474();
    sub_245776C64();
    sub_2457BB0EC();
    (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v14, v13);
    v7 = sub_245759064();
    v8 = v6;
    v9 = 0;
  }
  else
  {
    v10 = v0[6];
    sub_24577702C(v0[18]);
    sub_245751474();
    v7 = sub_245759064();
    v8 = v10;
    v9 = 1;
  }
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v8, v9, 1, v7);
  sub_245777358();
  sub_245756FCC();
  sub_245757044();
  sub_245776BF0();
  v11 = (uint64_t (*)(void))sub_245776FC4();
  return sub_245776B18(v11);
}

uint64_t sub_24576FCBC()
{
  uint64_t v0;

  sub_245776F18(*(_QWORD *)(v0 + 144));
  sub_245756FCC();
  sub_245757044();
  sub_245776BF0();
  sub_245776C34();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24576FD14(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD v11[5];

  v2 = sub_2457BB134();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v11[-1] - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11[3] = &type metadata for GenerativeExperiencesSessionClient.ToolCallResults;
  v11[4] = sub_245774BCC();
  v11[0] = a1;
  swift_bridgeObjectRetain();
  v6 = MEMORY[0x24BE7AB78];
  sub_2457BB104();
  sub_245749564((uint64_t)v11);
  sub_245748A50(&qword_257498BC8);
  v7 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_2457BDEE0;
  (*(void (**)(unint64_t, char *, uint64_t))(v3 + 16))(v8 + v7, v5, v2);
  MEMORY[0x24953A7C0](v8, v2, v6);
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_24576FE50@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[2];
  _QWORD *v17;
  uint64_t v18;

  v4 = sub_2457BB11C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a1 + 16);
  v9 = MEMORY[0x24BEE4AF8];
  if (v8)
  {
    v17 = a2;
    v18 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_24577408C(0, v8, 0);
    v9 = v18;
    v16[1] = a1;
    v10 = a1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2457BB110();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = v9;
      v12 = *(_QWORD *)(v9 + 16);
      v11 = *(_QWORD *)(v9 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_24577408C(v11 > 1, v12 + 1, 1);
        v9 = v18;
      }
      v10 += 32;
      *(_QWORD *)(v9 + 16) = v12 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v5 + 32))(v9+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v12, v7, v4);
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    a2 = v17;
  }
  *a2 = v9;
  v13 = *MEMORY[0x24BE7AAA8];
  v14 = sub_2457BB128();
  return (*(uint64_t (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(a2, v13, v14);
}

uint64_t sub_24576FFF8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_24576FE50(*v1, a1);
}

uint64_t sub_245770000(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2[54] = a1;
  v2[55] = a2;
  v3 = sub_2457BAFA8();
  v2[56] = v3;
  v2[57] = *(_QWORD *)(v3 - 8);
  v2[58] = sub_245776B4C();
  v4 = sub_245751504();
  v2[59] = v4;
  v2[60] = *(_QWORD *)(v4 - 8);
  v2[61] = sub_245776E64();
  v2[62] = sub_245776E64();
  v2[63] = sub_245776E64();
  v2[64] = sub_245776E64();
  v2[65] = sub_245776E64();
  v2[66] = sub_245776E64();
  v5 = sub_2457BADD4();
  v2[67] = v5;
  v2[68] = *(_QWORD *)(v5 - 8);
  v2[69] = sub_245776B4C();
  v6 = sub_2457BADA4();
  v2[70] = v6;
  v2[71] = *(_QWORD *)(v6 - 8);
  v2[72] = sub_245776E64();
  v2[73] = sub_245776E64();
  v7 = sub_2457BADE0();
  v2[74] = v7;
  v2[75] = *(_QWORD *)(v7 - 8);
  v2[76] = sub_245776B4C();
  sub_245756E10();
  return sub_245776D30();
}

uint64_t sub_2457700FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v23;
  uint64_t v25;
  uint64_t v26;
  os_log_type_t v27;
  _WORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t);
  os_log_type_t v38;
  _WORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  os_log_type_t v50;
  _BOOL4 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(uint64_t, uint64_t);
  uint64_t v59;
  uint64_t AssociatedTypeWitness;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;
  uint64_t v80[3];

  v1 = *(_QWORD *)(v0 + 440);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 616) = v2;
  if (!v2)
  {
    swift_task_dealloc();
    sub_245756FCC();
    sub_245757044();
    sub_245776BF0();
    sub_245776C34();
    sub_245776C6C();
    sub_245776C90();
    sub_245776C64();
    sub_245776C74();
    sub_245776D28();
    swift_task_dealloc();
    sub_24577720C();
    __asm { BR              X1 }
  }
  v3 = *(_QWORD *)(v0 + 600);
  v4 = *(_QWORD *)(v0 + 568);
  v5 = *(_DWORD *)(v3 + 80);
  *(_DWORD *)(v0 + 736) = v5;
  v6 = *MEMORY[0x24BEB85D8];
  *(_DWORD *)(v0 + 740) = *MEMORY[0x24BEB85D8];
  *(_QWORD *)(v0 + 624) = *(_QWORD *)(v3 + 72);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  *(_QWORD *)(v0 + 632) = v7;
  *(_QWORD *)(v0 + 648) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 640) = 0;
  v8 = *(_QWORD *)(v0 + 608);
  v9 = *(_QWORD *)(v0 + 592);
  v10 = *(_QWORD *)(v0 + 584);
  v11 = *(_QWORD *)(v0 + 560);
  v12 = v1 + ((v5 + 32) & ~(unint64_t)v5);
  swift_bridgeObjectRetain();
  v7(v8, v12, v9);
  sub_2457BADB0();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v4 + 88))(v10, v11) != v6)
  {
    sub_2457774D4();
    swift_bridgeObjectRelease();
    if (qword_257497E28 != -1)
      swift_once();
    v25 = *(_QWORD *)(v0 + 472);
    v26 = sub_24574E0F8(v25, (uint64_t)qword_257498A58);
    sub_245776B0C();
    sub_245776B6C();
    sub_245777058();
    v27 = sub_24577709C();
    if (sub_245748AE8(v27))
    {
      v28 = (_WORD *)sub_2457513BC();
      sub_245777070(v28);
      sub_245776B94(&dword_245746000, v29, v30, "Unknown tool call was requested");
      sub_24575105C();
    }
    sub_2457774C0();
    v71 = v32;
    v75 = v31;
    v65 = v33;
    v68 = *(_QWORD *)(v0 + 568);
    sub_245777280();
    v79 = v34;

    sub_245751140((uint64_t)v7, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    sub_2457BB440();
    swift_bridgeObjectRelease();
    v80[0] = 0xD000000000000018;
    v80[1] = 0x80000002457C9C10;
    sub_2457774B4();
    sub_2457775F4();
    sub_2457BB1D0();
    sub_245751474();
    sub_245777248();
    sub_245776F34();
    sub_245776EA4(&qword_257498B90, v35, (uint64_t (*)(uint64_t))MEMORY[0x24BE3B470], MEMORY[0x24BE3B480]);
    sub_245776B80();
    sub_245776CA8();
    sub_2457771DC(v25, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 448), v64, v65, v68, v71, v75, v79);
    sub_245776E9C();
    v36 = sub_24577731C();
    v37(v36, v72);
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v76, v26);
    goto LABEL_23;
  }
  sub_245777594();
  v13 = *(_QWORD *)(v0 + 544);
  v14 = *(_QWORD *)(v0 + 432);
  sub_245777560(v15);
  sub_245776C98(v9, v8, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
  v16 = *(_QWORD *)(v14 + 16);
  if (!v16)
    goto LABEL_18;
  v67 = (__int128 *)(v0 + 96);
  v74 = v0 + 176;
  v78 = (_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  v17 = 32;
  while (1)
  {
    sub_24575E8C0(*(_QWORD *)(v0 + 432) + v17, v0 + 136);
    sub_245749280((_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    v18 = sub_2457775A8();
    v20 = v19;
    if (v18 == sub_2457BADBC() && v20 == v21)
      break;
    v23 = sub_2457776C8();
    sub_245776CB8();
    sub_245776B64();
    if ((v23 & 1) != 0)
      goto LABEL_25;
    sub_245749564(v0 + 136);
    v17 += 40;
    if (!--v16)
    {
      swift_bridgeObjectRelease();
LABEL_18:
      sub_2457774D4();
      sub_245751474();
      if (qword_257497E28 != -1)
        swift_once();
      sub_24574E0F8(*(_QWORD *)(v0 + 472), (uint64_t)qword_257498A58);
      sub_245776B0C();
      sub_245776B6C();
      sub_245777058();
      v38 = sub_245751514();
      if (sub_245748AE8(v38))
      {
        v39 = (_WORD *)sub_2457513BC();
        sub_245777070(v39);
        sub_245776B94(&dword_245746000, v40, v41, "Requested function call from model does not exist");
        sub_24575105C();
      }
      v42 = *(_QWORD *)(v0 + 600);
      v66 = *(_QWORD *)(v0 + 592);
      v43 = *(_QWORD *)(v0 + 552);
      v70 = *(_QWORD *)(v0 + 544);
      v73 = *(_QWORD *)(v0 + 608);
      v77 = *(_QWORD *)(v0 + 536);
      sub_245777160();
      sub_245776F84();
      sub_2457BADBC();
      sub_2457772B8();
      sub_245776F34();
      sub_245776EA4(&qword_257498B90, v44, (uint64_t (*)(uint64_t))MEMORY[0x24BE3B470], MEMORY[0x24BE3B480]);
      sub_245776B80();
      sub_245776CA8();
      sub_245777268();
      sub_245776E9C();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v73, v66);
      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v43, v77);
LABEL_23:
      sub_245776C3C();
      swift_task_dealloc();
      sub_245757044();
      sub_245776BF0();
      sub_245776C34();
      sub_245776C6C();
      sub_245776C90();
      sub_245776C64();
      sub_245776C74();
      sub_245776D28();
      sub_245756FCC();
      swift_task_dealloc();
      sub_24577720C();
      __asm { BR              X0 }
    }
  }
  sub_245776B64();
  sub_245776CB8();
LABEL_25:
  sub_245776B64();
  sub_245776AC0((__int128 *)(v0 + 136), (uint64_t)v67);
  sub_245776AC0(v67, (uint64_t)v78);
  if (qword_257497E28 != -1)
    swift_once();
  v46 = *(NSObject **)(v0 + 528);
  v47 = *(_QWORD *)(v0 + 480);
  v48 = sub_24574E0F8(*(_QWORD *)(v0 + 472), (uint64_t)qword_257498A58);
  *(_QWORD *)(v0 + 656) = v48;
  sub_245776B0C();
  v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v47 + 16);
  *(_QWORD *)(v0 + 664) = v49;
  sub_245767E58((uint64_t)v46, v48, v49);
  sub_24575E8C0((uint64_t)v78, v74);
  sub_2457BB068();
  v50 = sub_24577709C();
  v51 = sub_2457772C8(v50);
  v52 = *(_QWORD *)(v0 + 528);
  v54 = *(_QWORD *)(v0 + 472);
  v53 = *(_QWORD *)(v0 + 480);
  if (v51)
  {
    v55 = sub_2457513BC();
    v80[0] = sub_2457513BC();
    *(_DWORD *)v55 = 136315138;
    sub_24575E8C0(v74, v0 + 16);
    sub_245748A50(&qword_257498BA0);
    v56 = sub_2457BB1B8();
    *(_QWORD *)(v55 + 4) = sub_245773478(v56, v57, v80);
    sub_245751384();
    sub_245749564(v74);
    sub_245777114(&dword_245746000, v46, (os_log_type_t)(v0 - 120), "Invoking tool: %s", (uint8_t *)v55);
    sub_245757020();
    sub_24575105C();
  }
  sub_245749564(v74);

  v58 = *(void (**)(uint64_t, uint64_t))(v53 + 8);
  v58(v52, v54);
  *(_QWORD *)(v0 + 672) = v58;
  sub_245749280(v78, *(_QWORD *)(v0 + 80));
  sub_2457BADC8();
  *(_QWORD *)(v0 + 680) = v59;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v61 = sub_245777374(AssociatedTypeWitness);
  *(_QWORD *)(v0 + 696) = v61;
  *(_QWORD *)(v0 + 704) = *(_QWORD *)(v61 - 8);
  *(_QWORD *)(v0 + 712) = sub_245776B4C();
  v62 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v62;
  *v62 = v0;
  v62[1] = sub_2457708AC;
  sub_245777384();
  sub_24577720C();
  return sub_2457BB050();
}

uint64_t sub_2457708AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 728) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_245751474();
    sub_245776CB8();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_245770914()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  os_log_type_t v7;
  _WORD *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v52)(uint8_t *, uint64_t, uint64_t);
  uint64_t v53;
  uint8_t *v54;
  uint64_t v55;
  NSObject *v56;
  os_log_type_t v57;
  _WORD *v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  NSObject *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  os_log_type_t v68;
  uint8_t *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  BOOL v87;
  char v88;
  void (*v89)(uint64_t, uint64_t);
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  os_log_type_t v106;
  _WORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void (*v115)(uint64_t, uint64_t);
  os_log_type_t v116;
  _WORD *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  NSObject *v123;
  uint64_t v124;
  uint64_t v125;
  void (*v126)(void);
  os_log_type_t v127;
  _BOOL4 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  void (*v135)(uint64_t, uint64_t);
  uint64_t v136;
  uint64_t AssociatedTypeWitness;
  uint64_t v138;
  _QWORD *v139;
  char *v140;
  int64_t v141;
  char v142;
  uint64_t v143;
  _BOOL8 v144;
  int64_t v145;
  int64_t v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __int128 *v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  unint64_t v187;

  v1 = *(void **)(v0 + 712);
  v2 = *(_QWORD *)(v0 + 688);
  sub_245776BB0((uint64_t)v1, 1, v2);
  v179 = v0 + 56;
  if (v87)
  {
    v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 664);
    v4 = *(_QWORD *)(v0 + 656);
    v5 = *(_QWORD *)(v0 + 512);
    v6 = *(_QWORD *)(v0 + 472);
    sub_245776F18(*(_QWORD *)(v0 + 704));
    sub_245751420();
    sub_245756FCC();
    sub_2457513F4();
    v3(v5, v4, v6);
    sub_2457774EC();
    v7 = sub_245751514();
    if (sub_245748AE8(v7))
    {
      v8 = (_WORD *)sub_2457513BC();
      sub_245777070(v8);
      sub_245776B94(&dword_245746000, v9, v10, "Tool returned no response. Exiting tool calling loop.");
      sub_24575105C();
    }
    v11 = *(void (**)(uint64_t, uint64_t))(v0 + 672);
    v12 = *(_QWORD *)(v0 + 608);
    v13 = *(_QWORD *)(v0 + 600);
    v183 = *(_QWORD *)(v0 + 552);
    v14 = *(_QWORD *)(v0 + 544);
    v15 = *(_QWORD *)(v0 + 512);
    v16 = *(_QWORD *)(v0 + 472);

    v11(v15, v16);
    sub_245776E28(v12, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    v17 = sub_2457512B0(v183, *(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    sub_24577756C(v17, v18, v19, v20, v21, v22, v23, v24, v148, v151, v154, v157, v161, v165, v169, v173, v179);
    v184 = (char *)MEMORY[0x24BEE4AF8];
    goto LABEL_13;
  }
  *(_QWORD *)(v0 + 304) = v2;
  v25 = sub_245774B38((uint64_t *)(v0 + 280));
  sub_245759158((uint64_t)v25, (uint64_t)v1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  sub_245756FCC();
  sub_245758044((_OWORD *)(v0 + 280), (_OWORD *)(v0 + 216));
  sub_245774B74(v0 + 216, v0 + 248);
  v26 = swift_dynamicCast();
  v174 = v0 + 216;
  if ((v26 & 1) == 0)
  {
    v52 = *(void (**)(uint8_t *, uint64_t, uint64_t))(v0 + 664);
    v53 = *(_QWORD *)(v0 + 656);
    v54 = *(uint8_t **)(v0 + 520);
    v55 = *(_QWORD *)(v0 + 472);
    swift_bridgeObjectRelease();
    sub_245751474();
    v52(v54, v53, v55);
    v56 = sub_2457BB068();
    v57 = sub_2457BB350();
    if (os_log_type_enabled(v56, v57))
    {
      v58 = (_WORD *)sub_2457513BC();
      sub_245777070(v58);
      _os_log_impl(&dword_245746000, v56, v57, "Only tools that output strings are currently supported.", v54, 2u);
      sub_24575105C();
    }
    v59 = *(void (**)(uint64_t, uint64_t))(v0 + 672);
    v60 = *(_QWORD *)(v0 + 520);
    v61 = *(_QWORD *)(v0 + 464);
    v62 = *(_QWORD *)(v0 + 472);
    v63 = *(_QWORD *)(v0 + 456);

    v59(v60, v62);
    sub_2457BADBC();
    sub_2457BAF9C();
    v64 = sub_245776F34();
    sub_245776EA4(&qword_257498B90, v65, (uint64_t (*)(uint64_t))MEMORY[0x24BE3B470], MEMORY[0x24BE3B480]);
    v164 = v66;
    v67 = sub_2457535A0();
    sub_2457BAFB4();
    sub_245776E28(v61, *(uint64_t (**)(uint64_t, uint64_t))(v63 + 8));
    swift_willThrow();
    sub_245749564(v174);
    sub_245776FF8();
    sub_2457775C8();
    sub_2457775C8();
    sub_2457BB068();
    v68 = sub_24577709C();
    if (os_log_type_enabled(v64, v68))
    {
      v69 = (uint8_t *)sub_2457513BC();
      v70 = (_QWORD *)sub_2457513BC();
      *(_DWORD *)v69 = 138412290;
      sub_2457775C8();
      v71 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)(v0 + 416) = v71;
      sub_2457BB3BC();
      *v70 = v71;
      sub_2457770CC();
      sub_2457770CC();
      sub_245777114(&dword_245746000, v64, v68, "Encountered failure while invoking function: %@", v69);
      sub_245748A50((uint64_t *)&unk_25749A9C0);
      sub_245757020();
      sub_24575105C();
    }
    sub_2457770CC();
    sub_2457770CC();
    v89 = *(void (**)(uint64_t, uint64_t))(v0 + 672);
    v150 = *(_QWORD *)(v0 + 600);
    v153 = *(_QWORD *)(v0 + 592);
    v90 = *(_QWORD *)(v0 + 552);
    v156 = *(_QWORD *)(v0 + 544);
    v160 = *(_QWORD *)(v0 + 608);
    v176 = *(_QWORD *)(v0 + 536);
    v91 = *(_QWORD *)(v0 + 488);
    v92 = *(_QWORD *)(v0 + 464);
    v93 = *(_QWORD *)(v0 + 472);
    v94 = *(_QWORD *)(v0 + 456);

    v89(v91, v93);
    sub_2457BADBC();
    sub_24577712C();
    v95 = v187;
    *(_QWORD *)(v0 + 384) = v186;
    *(_QWORD *)(v0 + 392) = v95;
    sub_245777574();
    sub_2457BB1D0();
    *(_QWORD *)(v0 + 424) = v67;
    sub_245748A50(&qword_257498B98);
    sub_2457BB4C4();
    sub_2457BAF9C();
    sub_2457535A0();
    sub_245776CA8();
    sub_245777530(v92, *(uint64_t (**)(uint64_t, uint64_t))(v94 + 8));
    sub_245776E9C();
    sub_2457770CC();
    (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v160, v153);
    v96 = (*(uint64_t (**)(uint64_t, uint64_t))(v156 + 8))(v90, v176);
    sub_24577756C(v96, v97, v98, v99, v100, v101, v102, v103, v150, v153, v156, v160, v164, (uint64_t)v64, v0 + 384, v176, v179);
    goto LABEL_39;
  }
  v27 = *(_QWORD *)(v0 + 400);
  v28 = *(_QWORD *)(v0 + 408);
  v29 = sub_2457BAD98();
  v31 = v30;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v184 = *(char **)(v0 + 648);
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v140 = (char *)sub_2457771F0();
    v184 = sub_24577293C(v140, v141, v142, v143);
  }
  v34 = *((_QWORD *)v184 + 2);
  v33 = *((_QWORD *)v184 + 3);
  v35 = v34 + 1;
  v166 = v27;
  v170 = v28;
  v162 = v31;
  v36 = v29;
  if (v34 >= v33 >> 1)
  {
    v144 = sub_2457770A4(v33);
    v146 = v145;
    v147 = sub_24577293C((char *)v144, v145, 1, (uint64_t)v184);
    v35 = v146;
    v184 = v147;
  }
  v158 = *(_QWORD *)(v0 + 616);
  v37 = *(_QWORD *)(v0 + 608);
  v38 = *(_QWORD *)(v0 + 600);
  v39 = *(_QWORD *)(v0 + 592);
  v40 = *(_QWORD *)(v0 + 536);
  v41 = *(_QWORD *)(v0 + 640) + 1;
  *((_QWORD *)v184 + 2) = v35;
  v42 = &v184[32 * v34];
  *((_QWORD *)v42 + 4) = v36;
  *((_QWORD *)v42 + 5) = v162;
  *((_QWORD *)v42 + 6) = v166;
  *((_QWORD *)v42 + 7) = v170;
  sub_245749564(v174);
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
  v43 = sub_245776F84();
  sub_24577756C(v43, v44, v45, v46, v47, v48, v49, v50, v148, v151, v154, v158, v162, v166, v170, v174, v179);
  if (v41 == v159)
  {
    swift_bridgeObjectRelease();
LABEL_13:
    sub_2457775D8();
    sub_245756FCC();
    sub_245757044();
    sub_245776C34();
    sub_245776C6C();
    sub_245776C90();
    sub_245776C64();
    sub_245776C74();
    sub_245776D28();
    sub_245776BF0();
    sub_2457772A0();
    return (*(uint64_t (**)(char *))(v0 + 8))(v184);
  }
  v72 = *(_QWORD *)(v0 + 640) + 1;
  *(_QWORD *)(v0 + 648) = v184;
  *(_QWORD *)(v0 + 640) = v72;
  v73 = *(_DWORD *)(v0 + 740);
  v74 = *(_QWORD *)(v0 + 608);
  v75 = *(_QWORD *)(v0 + 584);
  v76 = *(_QWORD *)(v0 + 568);
  v77 = *(_QWORD *)(v0 + 560);
  (*(void (**)(uint64_t, unint64_t, _QWORD))(v0 + 632))(v74, *(_QWORD *)(v0 + 440)+ ((*(unsigned __int8 *)(v0 + 736) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 736))+ *(_QWORD *)(v0 + 624) * v72, *(_QWORD *)(v0 + 592));
  sub_2457BADB0();
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v76 + 88))(v75, v77) != v73)
  {
    swift_bridgeObjectRelease();
    sub_245777670();
    if (qword_257497E28 != -1)
      swift_once();
    v104 = *(_QWORD *)(v0 + 472);
    v105 = sub_24574E0F8(v104, (uint64_t)qword_257498A58);
    sub_245776B0C();
    sub_245776B6C();
    sub_245777058();
    v106 = sub_24577709C();
    if (sub_245748AE8(v106))
    {
      v107 = (_WORD *)sub_2457513BC();
      sub_245777070(v107);
      sub_245776B94(&dword_245746000, v108, v109, "Unknown tool call was requested");
      sub_24575105C();
    }
    sub_2457774C0();
    v177 = v111;
    v181 = v110;
    v171 = *(_QWORD *)(v0 + 568);
    sub_245777280();
    v185 = v112;

    sub_245751140(v40, *(uint64_t (**)(uint64_t, uint64_t))(v39 + 8));
    sub_2457BB440();
    swift_bridgeObjectRelease();
    v186 = 0xD000000000000018;
    v187 = 0x80000002457C9C10;
    sub_2457774B4();
    sub_2457775F4();
    sub_2457BB1D0();
    sub_245751474();
    sub_245777248();
    sub_245776F34();
    sub_245776EA4(&qword_257498B90, v113, (uint64_t (*)(uint64_t))MEMORY[0x24BE3B470], MEMORY[0x24BE3B480]);
    sub_245776B80();
    sub_245776CA8();
    (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v104, v185);
    sub_245776E9C();
    v114 = sub_24577731C();
    v115(v114, v177);
    (*(void (**)(uint64_t, uint64_t))(v171 + 8))(v181, v105);
    goto LABEL_39;
  }
  sub_245777594();
  v78 = *(_QWORD *)(v0 + 544);
  v79 = *(_QWORD *)(v0 + 432);
  sub_245777560(v80);
  sub_245767E58(v75, v74, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v78 + 32));
  v81 = *(_QWORD *)(v79 + 16);
  if (!v81)
  {
LABEL_34:
    sub_2457774D4();
    sub_245777670();
    if (qword_257497E28 != -1)
      swift_once();
    sub_24574E0F8(*(_QWORD *)(v0 + 472), (uint64_t)qword_257498A58);
    sub_245776B0C();
    sub_245776B6C();
    sub_245777058();
    v116 = sub_245751514();
    if (sub_245748AE8(v116))
    {
      v117 = (_WORD *)sub_2457513BC();
      sub_245777070(v117);
      sub_245776B94(&dword_245746000, v118, v119, "Requested function call from model does not exist");
      sub_24575105C();
    }
    v120 = *(_QWORD *)(v0 + 600);
    v168 = *(_QWORD *)(v0 + 592);
    v121 = *(_QWORD *)(v0 + 552);
    v172 = *(_QWORD *)(v0 + 544);
    v178 = *(_QWORD *)(v0 + 608);
    v182 = *(_QWORD *)(v0 + 536);
    sub_245777160();
    sub_245776F84();
    sub_2457BADBC();
    sub_2457772B8();
    sub_245776F34();
    sub_245776EA4(&qword_257498B90, v122, (uint64_t (*)(uint64_t))MEMORY[0x24BE3B470], MEMORY[0x24BE3B480]);
    sub_245776B80();
    sub_245776CA8();
    sub_245777268();
    sub_245776E9C();
    sub_2457771DC(v178, *(uint64_t (**)(uint64_t, uint64_t))(v120 + 8), v149, v152, v155, v159, v163, v168);
    (*(void (**)(uint64_t, uint64_t))(v172 + 8))(v121, v182);
LABEL_39:
    sub_245776C3C();
    sub_2457775D8();
    sub_245757044();
    sub_245776BF0();
    sub_245776C34();
    sub_245776C6C();
    sub_245776C90();
    sub_245776C64();
    sub_245776C74();
    sub_245776D28();
    sub_245756FCC();
    sub_2457772A0();
    return sub_245776D84(*(uint64_t (**)(void))(v0 + 8));
  }
  v163 = v0 + 16;
  v167 = (__int128 *)(v0 + 96);
  v175 = v0 + 176;
  swift_bridgeObjectRetain();
  v82 = 32;
  while (1)
  {
    sub_24575E8C0(*(_QWORD *)(v0 + 432) + v82, v0 + 136);
    sub_245749280((_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 160));
    sub_245767A8C();
    v83 = sub_2457775A8();
    v85 = v84;
    v87 = v83 == sub_2457BADBC() && v85 == v86;
    if (v87)
      break;
    v88 = sub_2457776C8();
    sub_245776CB8();
    sub_245751474();
    if ((v88 & 1) != 0)
      goto LABEL_41;
    sub_245749564(v0 + 136);
    v82 += 40;
    if (!--v81)
    {
      sub_245777670();
      goto LABEL_34;
    }
  }
  sub_245751474();
  sub_245776CB8();
LABEL_41:
  sub_245751474();
  sub_245776AC0((__int128 *)(v0 + 136), (uint64_t)v167);
  sub_245776AC0(v167, (uint64_t)v180);
  if (qword_257497E28 != -1)
    swift_once();
  v123 = *(NSObject **)(v0 + 528);
  v124 = *(_QWORD *)(v0 + 472);
  v125 = *(_QWORD *)(v0 + 480);
  *(_QWORD *)(v0 + 656) = sub_24574E0F8(v124, (uint64_t)qword_257498A58);
  sub_245776B0C();
  *(_QWORD *)(v0 + 664) = *(_QWORD *)(v125 + 16);
  sub_245777034();
  v126();
  sub_24575E8C0((uint64_t)v180, v175);
  sub_2457BB068();
  v127 = sub_24577709C();
  v128 = sub_245748AE8(v127);
  v129 = *(_QWORD *)(v0 + 528);
  v130 = *(_QWORD *)(v0 + 472);
  v131 = *(_QWORD *)(v0 + 480);
  if (v128)
  {
    v132 = sub_2457513BC();
    v186 = sub_2457513BC();
    *(_DWORD *)v132 = 136315138;
    sub_24575E8C0(v175, v163);
    sub_245748A50(&qword_257498BA0);
    v133 = sub_2457BB1B8();
    *(_QWORD *)(v132 + 4) = sub_245773478(v133, v134, &v186);
    swift_bridgeObjectRelease();
    sub_245749564(v175);
    sub_245777114(&dword_245746000, v123, (os_log_type_t)v124, "Invoking tool: %s", (uint8_t *)v132);
    sub_245757020();
    sub_24575105C();
  }
  sub_245749564(v175);

  v135 = *(void (**)(uint64_t, uint64_t))(v131 + 8);
  v135(v129, v130);
  *(_QWORD *)(v0 + 672) = v135;
  sub_245749280(v180, *(_QWORD *)(v0 + 80));
  sub_2457BADC8();
  *(_QWORD *)(v0 + 680) = v136;
  sub_245777034();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v138 = sub_245777374(AssociatedTypeWitness);
  *(_QWORD *)(v0 + 696) = v138;
  *(_QWORD *)(v0 + 704) = *(_QWORD *)(v138 - 8);
  *(_QWORD *)(v0 + 712) = sub_245776B4C();
  v139 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 720) = v139;
  *v139 = v0;
  v139[1] = sub_2457708AC;
  sub_245777384();
  return sub_2457BB050();
}

uint64_t sub_245771628()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  _QWORD *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  swift_task_dealloc();
  v3 = *(_QWORD *)(v1 + 728);
  sub_245776FF8();
  sub_2457510D8();
  sub_2457510D8();
  sub_2457BB068();
  v4 = sub_24577709C();
  if (sub_245751158(v4))
  {
    v5 = (uint8_t *)sub_2457513BC();
    v6 = (_QWORD *)sub_2457513BC();
    *(_DWORD *)v5 = 138412290;
    sub_2457510D8();
    v7 = _swift_stdlib_bridgeErrorToNSError();
    *(_QWORD *)(v1 + 416) = v7;
    sub_2457BB3BC();
    *v6 = v7;
    sub_24575103C();
    sub_24575103C();
    sub_245777114(&dword_245746000, v0, v2, "Encountered failure while invoking function: %@", v5);
    sub_245748A50((uint64_t *)&unk_25749A9C0);
    sub_245757020();
    sub_24575105C();
  }
  sub_24575103C();
  sub_24575103C();
  v8 = *(void (**)(uint64_t, uint64_t))(v1 + 672);
  v18 = *(_QWORD *)(v1 + 600);
  v19 = *(_QWORD *)(v1 + 592);
  v20 = *(_QWORD *)(v1 + 608);
  v21 = *(_QWORD *)(v1 + 536);
  v9 = *(_QWORD *)(v1 + 488);
  v10 = *(_QWORD *)(v1 + 464);
  v11 = *(_QWORD *)(v1 + 472);
  v16 = *(_QWORD *)(v1 + 456);
  v17 = *(_QWORD *)(v1 + 448);

  v8(v9, v11);
  sub_2457BADBC();
  sub_24577712C();
  *(_QWORD *)(v1 + 384) = v22;
  *(_QWORD *)(v1 + 392) = v23;
  sub_245777574();
  sub_2457BB1D0();
  *(_QWORD *)(v1 + 424) = v3;
  sub_245748A50(&qword_257498B98);
  sub_245777554();
  sub_2457BB4C4();
  sub_2457BAF9C();
  sub_245776F34();
  sub_245776EA4(&qword_257498B90, v12, (uint64_t (*)(uint64_t))MEMORY[0x24BE3B470], MEMORY[0x24BE3B480]);
  sub_245776B80();
  sub_2457BAFB4();
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v10, v17);
  sub_245776E9C();
  sub_24575103C();
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v20, v19);
  v13 = sub_24577731C();
  v14(v13, v21);
  sub_245749564(v1 + 56);
  sub_245776C3C();
  swift_task_dealloc();
  sub_245757044();
  sub_245776BF0();
  sub_245776C34();
  sub_245776C6C();
  sub_245776C90();
  sub_245776C64();
  sub_245776C74();
  sub_245776D28();
  sub_245756FCC();
  swift_task_dealloc();
  return sub_245776D84(*(uint64_t (**)(void))(v1 + 8));
}

void sub_2457718C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  int v30;
  uint64_t v31;

  sub_245759004();
  v30 = v4;
  v29 = v5;
  v7 = v6;
  sub_245748A50(&qword_257498B58);
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v8);
  sub_24577741C();
  sub_245748A50(&qword_257498B20);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v9);
  sub_245776D14();
  v28 = v10;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - v12;
  v14 = sub_245748A50(&qword_257498B48);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  sub_245748AD0();
  v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests);
  sub_245776B0C();
  v17 = *v16;
  if (!*(_QWORD *)(*v16 + 16))
  {
    sub_245776EB8((uint64_t)v13);
LABEL_8:
    sub_245765F18((uint64_t)v13, &qword_257498B20);
    goto LABEL_14;
  }
  sub_2457513E4();
  v27 = v7;
  v18 = sub_2457773E4();
  if ((v19 & 1) != 0)
  {
    sub_245776C98((uint64_t)v13, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v15 + 72) * v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v13, v20, 1, v14);
  sub_245776CB8();
  sub_245776BB0((uint64_t)v13, 1, v14);
  if (v21)
    goto LABEL_8;
  v22 = sub_2457771E4();
  sub_245776C98(v22, v23, v24);
  if (v29)
  {
    v25 = v29;
    CompletePromptResponseElementXPCEnvelope.unseal()();
    sub_2457BB2CC();

    sub_245777314(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  }
  if ((v30 & 1) != 0)
  {
    v31 = 0;
    sub_2457BB2D8();
    sub_245756E1C();
    v26 = sub_2457744B8(v27, &qword_257498C30, &qword_257498B48, v28);
    sub_2457776E4(v26, &qword_257498B20);
    swift_endAccess();
  }
  sub_245776E28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
LABEL_14:
  sub_245758FB4();
}

void sub_245771BA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  void *v16;
  id v17;
  char v18;
  uint64_t v19;

  sub_245759004();
  v18 = v4;
  v16 = v5;
  v19 = v6;
  v8 = v7;
  sub_2457BAF78();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v9);
  sub_245759128();
  sub_245748A50(&qword_257498B60);
  sub_245777304();
  MEMORY[0x24BDAC7A8](v10);
  sub_245748AD0();
  v11 = sub_245748A50(&qword_257498B38);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_245767CF8();
  v13 = v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests;
  sub_245776B0C();
  if (*(_QWORD *)(*(_QWORD *)v13 + 16))
  {
    sub_2457513E4();
    sub_245773C88(v8);
    if ((v14 & 1) != 0)
    {
      sub_245777390();
      sub_245776CB8();
      if (*(_QWORD *)(v8 + 16) > v19 && (v19 & 0x8000000000000000) == 0)
      {
        v15 = *(_QWORD *)(v8 + 16);
        sub_245767DE0(v2, v8+ ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80))+ *(_QWORD *)(v12 + 72) * v19, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 16));
        if (v16)
        {
          v17 = v16;
          DocumentRegistrationXPCResponse.unseal()();
          sub_2457BB2CC();

          sub_245777530(v3, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
        }
        if ((v18 & 1) != 0)
        {
          sub_2457BB2D8();
          swift_bridgeObjectRelease();
          if (v15 - 1 != v19)
          {
LABEL_13:
            sub_245750FF0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v12 + 8));
            goto LABEL_11;
          }
          sub_245756E1C();
          sub_245774374(v8);
          sub_2457774DC();
        }
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_11:
  sub_245758FB4();
}

void sub_245771E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t, uint64_t);
  id v25;
  uint64_t v26;
  void *v27;

  sub_245759004();
  v4 = v3;
  v6 = v5;
  sub_245748A50(&qword_257498B20);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v7);
  sub_245777464();
  v10 = v8 - v9;
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v27 - v12;
  v14 = sub_245748A50(&qword_257498B48);
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v15);
  sub_245767CF8();
  v16 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionRequests);
  sub_245776B0C();
  v17 = *v16;
  if (!*(_QWORD *)(*v16 + 16))
  {
    sub_245776EB8((uint64_t)v13);
LABEL_8:
    sub_245765F18((uint64_t)v13, &qword_257498B20);
    goto LABEL_9;
  }
  sub_2457513E4();
  v18 = sub_245773C88(v6);
  if ((v19 & 1) != 0)
  {
    sub_245776C98((uint64_t)v13, *(_QWORD *)(v17 + 56) + *(_QWORD *)(v2 + 72) * v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
    v20 = 0;
  }
  else
  {
    v20 = 1;
  }
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v13, v20, 1, v14);
  sub_245776CB8();
  sub_245776BB0((uint64_t)v13, 1, v14);
  if (v21)
    goto LABEL_8;
  v22 = sub_245777554();
  sub_245776C98(v22, v23, v24);
  v27 = v4;
  v25 = v4;
  sub_2457BB2D8();
  sub_245756E1C();
  v26 = sub_2457744B8(v6, &qword_257498C30, &qword_257498B48, v10);
  sub_2457776E4(v26, &qword_257498B20);
  sub_2457774DC();
  sub_245776E28(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
LABEL_9:
  sub_245758FB4();
}

void sub_245772010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  id v14;

  sub_245759004();
  v5 = v4;
  v7 = v6;
  v9 = v8;
  sub_245748A50(&qword_257498B38);
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v10);
  sub_245777434();
  v11 = v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_registrationRequests;
  sub_245776B0C();
  if (*(_QWORD *)(*(_QWORD *)v11 + 16))
  {
    sub_2457513E4();
    sub_2457773E4();
    if ((v12 & 1) == 0 || (sub_245777390(), sub_245776CB8(), v13 = *(_QWORD *)(v2 + 16), v13 <= v7) || v7 < 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_245759158(v1, v2+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v7, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
      v14 = v5;
      sub_2457BB2D8();
      swift_bridgeObjectRelease();
      if (v13 - 1 == v7)
      {
        sub_245756E1C();
        sub_245774374(v9);
        sub_2457774DC();
        sub_245776CB8();
      }
      sub_245751140(v1, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    }
  }
  sub_245758FB4();
}

void sub_24577220C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t);

  sub_245759004();
  v5 = v4;
  sub_245777654();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v6);
  sub_245777434();
  sub_245748A50(&qword_257498B68);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v7);
  sub_245767CF8();
  v8 = sub_245748A50(&qword_257498B70);
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v9);
  sub_245748AD0();
  v10 = (uint64_t *)(v0 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionOneShotRequest);
  sub_245776B0C();
  v11 = *v10;
  if (!*(_QWORD *)(*v10 + 16))
  {
    sub_245767DE8(v1, 1);
LABEL_8:
    sub_245765F18(v1, &qword_257498B68);
    goto LABEL_9;
  }
  sub_2457776D4();
  v12 = sub_245773C88(v5);
  if ((v13 & 1) != 0)
  {
    sub_245767DE0(v1, *(_QWORD *)(v11 + 56) + *(_QWORD *)(v3 + 72) * v12, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16));
    v14 = 0;
  }
  else
  {
    v14 = 1;
  }
  sub_245767DE8(v1, v14);
  sub_245751420();
  sub_245776BB0(v1, 1, v8);
  if (v15)
    goto LABEL_8;
  v16 = sub_2457771E4();
  sub_245767DE0(v16, v17, v18);
  CompletePromptResponseXPCEnvelope.unseal()();
  sub_2457BB284();
  sub_245750FF0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
LABEL_9:
  sub_245758FB4();
}

void sub_245772418(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  char v15;

  sub_245748A50(&qword_257498B68);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v6);
  sub_24575136C();
  v7 = sub_245748A50(&qword_257498B70);
  sub_24577701C();
  MEMORY[0x24BDAC7A8](v8);
  sub_245767CF8();
  v9 = (uint64_t *)(v1 + OBJC_IVAR____TtC4Sage34GenerativeExperiencesSessionClient_completionOneShotRequest);
  sub_245776B0C();
  v10 = *v9;
  if (!*(_QWORD *)(*v9 + 16))
  {
    v14 = sub_245776EB8(v2);
LABEL_8:
    sub_2457776E4(v14, &qword_257498B68);
    goto LABEL_9;
  }
  sub_2457774AC();
  v11 = sub_245773C88(a1);
  if ((v12 & 1) != 0)
  {
    sub_245776C98(v2, *(_QWORD *)(v10 + 56) + *(_QWORD *)(v4 + 72) * v11, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
    v13 = 0;
  }
  else
  {
    v13 = 1;
  }
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v2, v13, 1, v7);
  swift_bridgeObjectRelease();
  v14 = sub_245776BB0(v2, 1, v7);
  if (v15)
    goto LABEL_8;
  sub_245776C98(v3, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32));
  sub_2457510D8();
  sub_2457BB278();
  sub_245776E28(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
LABEL_9:
  sub_245767AD4();
}

void sub_245772570(void *a1, uint64_t a2, uint64_t a3, void *a4, void (*a5)(uint64_t, id))
{
  uint64_t v5;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t v12;
  void (*v13)(uint64_t);

  v9 = sub_245776CA0();
  MEMORY[0x24BDAC7A8](v9);
  sub_245748AD0();
  sub_2457BAABC();
  v10 = a4;
  v11 = a1;
  a5(v5, v10);

  v12 = sub_2457771E4();
  v13(v12);
  sub_245767AD4();
}

id GenerativeExperiencesSessionClient.__allocating_init()()
{
  return objc_msgSend(sub_2457514D8(), sel_init);
}

void GenerativeExperiencesSessionClient.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void GenerativeExperiencesSessionClient.__deallocating_deinit()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for GenerativeExperiencesSessionClient();
  objc_msgSendSuper2(&v1, sel_dealloc);
  sub_245777104();
}

uint64_t sub_2457726DC()
{
  type metadata accessor for GenerativeExperiencesSessionClient();
  return sub_2457BAEA0();
}

uint64_t sub_24577271C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x24953B288](&unk_2457BF8B0, a1);
  return nullsub_1(a1, v2);
}

uint64_t sub_24577275C(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_24;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_245748A50(&qword_257498C58);
  v10 = *(_QWORD *)(sub_245748A50(&qword_257498B28) - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_24:
    result = sub_2457BB4E8();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(unsigned __int8 *)(*(_QWORD *)(sub_245748A50(&qword_257498B28) - 8) + 80);
  v17 = (v16 + 32) & ~v16;
  if ((a1 & 1) != 0)
  {
    sub_245772F58(a4 + v17, v8);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_245772C00(0, v8, (unint64_t)v13 + v17, a4);
  }
  return (uint64_t)v13;
}

char *sub_24577293C(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_245748A50(&qword_257498BA8);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  if ((v5 & 1) != 0)
  {
    sub_245773068((char *)(a4 + 32), v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_245772D24(0, v8, (unint64_t)v12, a4);
  }
  return v10;
}

uint64_t sub_245772A28(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  size_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_24;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (!v9)
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
    goto LABEL_19;
  }
  sub_245748A50(&qword_257498CE8);
  v10 = *(_QWORD *)(sub_2457BB008() - 8);
  v11 = *(_QWORD *)(v10 + 72);
  v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  v13 = (_QWORD *)swift_allocObject();
  v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (v15 = v11 == -1) : (v15 = 0), v15))
  {
LABEL_24:
    result = sub_2457BB4E8();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  v16 = *(unsigned __int8 *)(*(_QWORD *)(sub_2457BB008() - 8) + 80);
  v17 = (v16 + 32) & ~v16;
  if ((a1 & 1) != 0)
  {
    sub_2457730EC(a4 + v17, v8);
    *(_QWORD *)(a4 + 16) = 0;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_245772E38(0, v8, (unint64_t)v13 + v17, a4);
  }
  return (uint64_t)v13;
}

uint64_t sub_245772C00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_245748A50(&qword_257498B28) - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  result = sub_2457BB518();
  __break(1u);
  return result;
}

uint64_t sub_245772D24(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v5 = a4 + 32 * a1 + 32;
    v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_245748A50(&qword_257498BB0);
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v6;
    }
  }
  result = sub_2457BB518();
  __break(1u);
  return result;
}

uint64_t sub_245772E38(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t result;

  v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    v8 = *(_QWORD *)(sub_2457BB008() - 8);
    v9 = *(unsigned __int8 *)(v8 + 80);
    v10 = *(_QWORD *)(v8 + 72);
    v11 = a4 + ((v9 + 32) & ~v9) + v10 * a1;
    v12 = v10 * v4;
    v13 = a3 + v12;
    v14 = v11 + v12;
    if (v11 >= v13 || v14 <= a3)
    {
      swift_arrayInitWithCopy();
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  result = sub_2457BB518();
  __break(1u);
  return result;
}

void sub_245772F58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  if (a2 < 0)
  {
    sub_245776C7C();
    sub_245776EAC();
    __break(1u);
  }
  else
  {
    sub_2457771AC();
    if (v4 && (sub_2457776DC(), sub_2457775E0(), !v5 & v4))
    {
      if (v3 == v2)
      {
        sub_245756F1C();
      }
      else
      {
        sub_245776DCC();
        sub_245776F6C();
      }
    }
    else
    {
      sub_2457776DC();
      sub_245776DCC();
      sub_245776F4C();
    }
  }
}

char *sub_245772FE4(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_2457BB518();
    __break(1u);
  }
  else if (__dst != __src || &__src[16 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 16 * a2);
  }
  return __src;
}

char *sub_245773068(char *__src, uint64_t a2, char *__dst)
{
  if (a2 < 0)
  {
    __src = (char *)sub_2457BB518();
    __break(1u);
  }
  else if (__dst != __src || &__src[32 * a2] <= __dst)
  {
    return (char *)memmove(__dst, __src, 32 * a2);
  }
  return __src;
}

void sub_2457730EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD);
  char v5;
  char v6;

  if (a2 < 0)
  {
    sub_245776C7C();
    sub_245776EAC();
    __break(1u);
  }
  else
  {
    sub_2457771AC();
    if (v5 && (v4(0), sub_2457775E0(), !v6 & v5))
    {
      if (v3 == v2)
      {
        sub_245756F1C();
      }
      else
      {
        sub_245776DCC();
        sub_245776F6C();
      }
    }
    else
    {
      v4(0);
      sub_245776DCC();
      sub_245776F4C();
    }
  }
}

uint64_t sub_245773180(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t *a4)
{
  unint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0
    || ((sub_245748A50(a4), sub_2457770D4(), !v7 && v6) ? (v6 = v5 >= a3, v7 = v5 == a3) : (v6 = 0, v7 = 0), !v7 && v6))
  {
    sub_245776C7C();
    result = sub_245776EAC();
    __break(1u);
  }
  else
  {
    sub_245777034();
    return sub_245776F5C();
  }
  return result;
}

uint64_t sub_245773230(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_2457BB518();
  __break(1u);
  return result;
}

uint64_t sub_2457732FC(uint64_t a1, uint64_t a2, unint64_t a3, void (*a4)(_QWORD))
{
  unint64_t v5;
  BOOL v6;
  BOOL v7;
  uint64_t result;

  if (a2 < 0 || ((a4(0), sub_2457770D4(), !v7 && v6) ? (v6 = v5 >= a3, v7 = v5 == a3) : (v6 = 0, v7 = 0), !v7 && v6))
  {
    sub_245776C7C();
    result = sub_245776EAC();
    __break(1u);
  }
  else
  {
    sub_245777034();
    return sub_245776F5C();
  }
  return result;
}

uint64_t sub_2457733AC(unint64_t a1, uint64_t a2, unint64_t a3)
{
  uint64_t result;

  if ((a2 & 0x8000000000000000) == 0 && (a3 + 16 * a2 <= a1 || a1 + 16 * a2 <= a3))
    return swift_arrayInitWithCopy();
  result = sub_2457BB518();
  __break(1u);
  return result;
}

uint64_t sub_245773478(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;
  _QWORD *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[3];
  uint64_t ObjectType;

  sub_245777664();
  sub_245756E10();
  v9 = sub_2457735F0(v6, v7, v8, 1, v4, v3);
  v10 = v15[0];
  if (v9)
  {
    v11 = v9;
    ObjectType = swift_getObjectType();
    v15[0] = v11;
    v12 = *a3;
    if (*a3)
    {
      sub_245774B74((uint64_t)v15, *a3);
      *a3 = v12 + 32;
    }
  }
  else
  {
    ObjectType = MEMORY[0x24BEE2520];
    v15[0] = v4;
    v15[1] = v3;
    v13 = *a3;
    if (*a3)
    {
      sub_245774B74((uint64_t)v15, *a3);
      *a3 = v13 + 32;
    }
    sub_245756F54();
  }
  sub_245749564((uint64_t)v15);
  return v10;
}

#error "245773574: call analysis failed (funcsize=13)"

#error "2457735B8: call analysis failed (funcsize=13)"

uint64_t sub_2457735C4()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2457735E8(void *a1)
{
  uint64_t v1;

  return sub_24576A680(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

uint64_t sub_2457735F0(_QWORD *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8;
  uint64_t result;
  uint64_t v11;
  _QWORD __src[2];

  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0 && __dst && a3 - (uint64_t)__dst > (uint64_t)(HIBYTE(a6) & 0xF))
    {
      __src[0] = a5;
      __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
      sub_245773744((char *)__src, HIBYTE(a6) & 0xF, __dst);
      sub_2457BB3C8();
      result = 0;
      *a1 = __dst;
      return result;
    }
    goto LABEL_11;
  }
  if ((a6 & 0x1000000000000000) != 0)
  {
LABEL_11:
    result = sub_245773808(a5, a6);
    *a1 = v11;
    return result;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
  }
  else
  {
    v8 = sub_2457BB47C();
    if (!v8)
    {
      result = sub_2457BB4E8();
      __break(1u);
      return result;
    }
  }
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0)
    return 0;
  else
    return swift_unknownObjectRetain();
}

void *sub_245773744(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_2457BB518();
  __break(1u);
  return result;
}

uint64_t sub_245773808(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;

  v2 = sub_24577389C(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = (uint64_t)sub_245773A70(0, *(_QWORD *)(v2 + 16) + 1, 1, v2);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  if (v4 >= v3 >> 1)
    v2 = (uint64_t)sub_245773A70((char *)(v3 > 1), v4 + 1, 1, v2);
  *(_QWORD *)(v2 + 16) = v4 + 1;
  *(_BYTE *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_24577389C(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  if ((a2 & 0x1000000000000000) != 0)
  {
    v2 = sub_2457BB1DC();
    if (v2)
      goto LABEL_6;
    return MEMORY[0x24BEE4AF8];
  }
  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (!v2)
    return MEMORY[0x24BEE4AF8];
LABEL_6:
  v3 = sub_245773A0C(v2, 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    v4 = v3;
    v5 = sub_2457BB44C();
    if ((v6 & 1) != 0 || v5 != v2)
      goto LABEL_14;
    return (uint64_t)v4;
  }
  sub_2457BB518();
  __break(1u);
LABEL_14:
  result = sub_2457BB4E8();
  __break(1u);
  return result;
}

_QWORD *sub_245773A0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_245748A50(&qword_257498C78);
  v4 = (_QWORD *)swift_allocObject();
  v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

char *sub_245773A70(char *result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_245748A50(&qword_257498C78);
    v10 = (char *)swift_allocObject();
    v11 = j__malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = (char *)(a4 + 32);
  if ((v5 & 1) != 0)
  {
    sub_245773C08(v13, v8, v12);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_245773B44(v13, v8, v12);
  }
  swift_bridgeObjectRelease();
  return v10;
}

void *sub_245773B44(char *__src, size_t __n, char *__dst)
{
  void *result;

  if ((__n & 0x8000000000000000) == 0 && (&__dst[__n] <= __src || &__src[__n] <= __dst))
    return memcpy(__dst, __src, __n);
  result = (void *)sub_2457BB518();
  __break(1u);
  return result;
}

char *sub_245773C08(char *__src, size_t __len, char *__dst)
{
  if ((__len & 0x8000000000000000) != 0)
  {
    __src = (char *)sub_2457BB518();
    __break(1u);
  }
  else if (__dst != __src || &__src[__len] <= __dst)
  {
    return (char *)memmove(__dst, __src, __len);
  }
  return __src;
}

unint64_t sub_245773C88(uint64_t a1)
{
  uint64_t v2;

  sub_2457BAAD4();
  sub_2457567FC(&qword_257498BF0, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA88]);
  v2 = sub_2457BB17C();
  return sub_245773D58(a1, v2);
}

unint64_t sub_245773CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_245777664();
  sub_2457BB728();
  sub_2457BB1C4();
  v2 = sub_2457BB764();
  return sub_245773E9C(v1, v0, v2);
}

unint64_t sub_245773D58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, unint64_t, uint64_t);
  char v14;
  _QWORD v16[2];

  v3 = v2;
  v16[1] = a1;
  v5 = sub_2457BAAD4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = a2 & ~v9;
  if (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = ~v9;
    v12 = *(_QWORD *)(v6 + 72);
    v13 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    do
    {
      v13(v8, *(_QWORD *)(v3 + 48) + v12 * v10, v5);
      sub_2457567FC(&qword_257498C38, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58], MEMORY[0x24BDCEA98]);
      v14 = sub_2457BB194();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      if ((v14 & 1) != 0)
        break;
      v10 = (v10 + 1) & v11;
    }
    while (((*(_QWORD *)(v3 + 64 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
  }
  return v10;
}

unint64_t sub_245773E9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2457BB6B0() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2457BB6B0() & 1) == 0);
    }
  }
  return v6;
}

void sub_245773F7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2457740EC(a1, a2, a3, *v3, &qword_257498C60);
  *v3 = v4;
}

void sub_245773FA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2457740EC(a1, a2, a3, *v3, &qword_257498C70);
  *v3 = v4;
}

void sub_245773FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2457741C4(a1, a2, a3, *v3, &qword_257498CE8, (void (*)(_QWORD))MEMORY[0x24BE3B918]);
  *v3 = v4;
}

void sub_245774000(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2457742A4(a1, a2, a3, *v3, &qword_257498C88, (void (*)(uint64_t, uint64_t, _QWORD *))sub_245772FE4, (void (*)(uint64_t, uint64_t, _QWORD *))sub_245773230);
  *v3 = v4;
}

void sub_245774034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2457741C4(a1, a2, a3, *v3, &qword_257498C80, (void (*)(_QWORD))MEMORY[0x24BEB8100]);
  *v3 = v4;
}

void sub_245774060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2457741C4(a1, a2, a3, *v3, &qword_257498C50, (void (*)(_QWORD))MEMORY[0x24BE3C800]);
  *v3 = v4;
}

void sub_24577408C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2457741C4(a1, a2, a3, *v3, &qword_257498CF8, (void (*)(_QWORD))MEMORY[0x24BE7A968]);
  *v3 = v4;
}

void sub_2457740B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;

  sub_2457742A4(a1, a2, a3, *v3, &qword_257498C18, (void (*)(uint64_t, uint64_t, _QWORD *))sub_245772FE4, (void (*)(uint64_t, uint64_t, _QWORD *))sub_2457733AC);
  *v3 = v4;
}

void sub_2457740EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v5;
  uint64_t v6;
  char v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  size_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;

  v8 = a1;
  if ((a3 & 1) != 0)
  {
    sub_245777238();
    if (v10 != v11)
    {
      if (v9 + 0x4000000000000000 < 0)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_245777228();
    }
  }
  else
  {
    v9 = a2;
  }
  v12 = *(_QWORD *)(a4 + 16);
  if (v9 <= v12)
    v13 = *(_QWORD *)(a4 + 16);
  else
    v13 = v9;
  if (!v13)
    goto LABEL_17;
  sub_245777508(a1, a2, a3, a4, a5);
  sub_2457514D0();
  v14 = (_QWORD *)sub_245776DEC();
  v15 = j__malloc_size(v14);
  if (!v5)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v15 - v6 == 0x8000000000000000 && v5 == -1)
    goto LABEL_22;
  v14[2] = v12;
  v14[3] = 2 * ((uint64_t)(v15 - v6) / v5);
LABEL_17:
  v17 = sub_2457514D0();
  v18 = sub_245776EE8(v17);
  if ((v8 & 1) != 0)
  {
    sub_245772F58(v18, v19);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_245773180(v18, v19, v20, v21);
  }
  sub_245776E5C();
  sub_245767AD4();
}

void sub_2457741C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  void (*v23)(_QWORD);

  v10 = a1;
  if ((a3 & 1) != 0)
  {
    sub_245777238();
    if (v12 != v13)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_23:
        __break(1u);
        return;
      }
      sub_245777228();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (!v15)
    goto LABEL_17;
  sub_245777508(a1, a2, a3, a4, a5);
  a6(0);
  v16 = (_QWORD *)sub_245776DEC();
  v17 = j__malloc_size(v16);
  if (!v6)
  {
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (v17 - v7 == 0x8000000000000000 && v6 == -1)
    goto LABEL_22;
  v16[2] = v14;
  v16[3] = 2 * ((uint64_t)(v17 - v7) / v6);
LABEL_17:
  v19 = ((uint64_t (*)(_QWORD))a6)(0);
  v20 = sub_245776EE8(v19);
  if ((v10 & 1) != 0)
  {
    sub_2457730EC(v20, v21);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_2457732FC(v20, v21, v22, v23);
  }
  sub_245776E5C();
  sub_245767AD4();
}

void sub_2457742A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t, uint64_t, _QWORD *), void (*a7)(uint64_t, uint64_t, _QWORD *))
{
  char v10;
  uint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  size_t v17;
  _QWORD *v18;
  uint64_t v19;

  v10 = a1;
  if ((a3 & 1) != 0)
  {
    sub_245777238();
    if (v12 != v13)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      sub_245777228();
    }
  }
  else
  {
    v11 = a2;
  }
  v14 = *(_QWORD *)(a4 + 16);
  if (v11 <= v14)
    v15 = *(_QWORD *)(a4 + 16);
  else
    v15 = v11;
  if (v15)
  {
    sub_245777508(a1, a2, a3, a4, a5);
    v16 = (_QWORD *)sub_245776B5C();
    v17 = j__malloc_size(v16);
    v16[2] = v14;
    v16[3] = 2 * ((uint64_t)(v17 - 32) / 16);
  }
  else
  {
    v16 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  v18 = v16 + 4;
  v19 = a4 + 32;
  if ((v10 & 1) != 0)
  {
    a6(v19, v14, v18);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    a7(v19, v14, v18);
  }
  sub_245776E5C();
}

uint64_t sub_245774374(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v11;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_245773C88(a1);
  LOBYTE(a1) = v5;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0)
    return 0;
  swift_isUniquelyReferenced_nonNull_native();
  v11 = *v2;
  *v2 = 0x8000000000000000;
  sub_245748A50(&qword_257498C20);
  sub_2457BB4D0();
  v6 = *(_QWORD *)(v11 + 48);
  v7 = sub_2457BAAD4();
  v8 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6 + *(_QWORD *)(*(_QWORD *)(v7 - 8) + 72) * v4, v7);
  v9 = *(_QWORD *)(*(_QWORD *)(v11 + 56) + 8 * v4);
  sub_245748A50(&qword_257498C28);
  sub_2457567FC(&qword_257498BF0, 255, v8, MEMORY[0x24BDCEA88]);
  sub_2457BB4DC();
  *v2 = v11;
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_2457744B8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t *v4;
  uint64_t *v7;
  unint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;

  v7 = v4;
  sub_2457776D4();
  v10 = sub_245773C88(a1);
  LOBYTE(a1) = v11;
  sub_245751420();
  if ((a1 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v25 = *v7;
    *v7 = 0x8000000000000000;
    sub_245748A50(a2);
    sub_2457BB4D0();
    v12 = *(_QWORD *)(v25 + 48);
    sub_245776CA0();
    v13 = (uint64_t (*)(uint64_t))MEMORY[0x24BDCEA58];
    sub_245777010();
    sub_2457512B0(v12 + v14 * v10, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    v16 = *(_QWORD *)(v25 + 56);
    v17 = sub_245748A50(a3);
    sub_245777010();
    sub_245767E58(a4, v16 + v18 * v10, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 32));
    sub_2457567FC(&qword_257498BF0, 255, v13, MEMORY[0x24BDCEA88]);
    sub_245777384();
    sub_2457BB4DC();
    *v7 = v25;
    swift_bridgeObjectRelease();
    v20 = sub_24577747C();
    v23 = v17;
  }
  else
  {
    sub_245748A50(a3);
    v20 = sub_24577748C();
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v20, v21, v22, v23);
}

uint64_t sub_245774608@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_245773CF8();
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v11 = *v2;
    *v2 = 0x8000000000000000;
    sub_245748A50(&qword_257498C10);
    sub_2457BB4D0();
    swift_bridgeObjectRelease();
    v7 = *(_QWORD *)(v11 + 56);
    v8 = sub_245748A50(&qword_257498C00);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v4, v8);
    sub_2457BB4DC();
    *v2 = v11;
    swift_bridgeObjectRelease();
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 0, 1, v8);
  }
  else
  {
    v10 = sub_245748A50(&qword_257498C00);
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, v10);
  }
}

double sub_245774758@<D0>(_OWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  unint64_t v4;
  char v5;
  char v6;
  double result;
  uint64_t v8;

  v2 = v1;
  swift_bridgeObjectRetain();
  v4 = sub_245773CF8();
  v6 = v5;
  swift_bridgeObjectRelease();
  if ((v6 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_245748A50(&qword_257498BF8);
    sub_2457BB4D0();
    swift_bridgeObjectRelease();
    sub_245758044((_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v4), a1);
    sub_2457BB4DC();
    *v2 = v8;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a1 = 0u;
    a1[1] = 0u;
  }
  return result;
}

uint64_t sub_24577487C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  *v2 = 0x8000000000000000;
  sub_245774EE0(a1, a2);
  *v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457748E8()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

void sub_245774910(uint64_t a1)
{
  sub_245774C94(a1, &qword_257498C68);
}

void sub_24577491C(void *a1)
{
  uint64_t *v1;

  sub_24576BB94(a1, v1[2], v1[3], v1[4]);
}

uint64_t sub_245774928()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24577494C(void *a1)
{
  uint64_t v1;

  return sub_24576BF04(a1, *(_QWORD *)(v1 + 16), *(void **)(v1 + 24));
}

void sub_245774954(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_2457567FC(&qword_257498B10, a2, (uint64_t (*)(uint64_t))type metadata accessor for GenerativeExperiencesSessionClient, (uint64_t)&protocol conformance descriptor for GenerativeExperiencesSessionClient);
  *(_QWORD *)(a1 + 8) = v3;
}

ValueMetadata *type metadata accessor for GenerativeExperiencesSessionXPCService()
{
  return &type metadata for GenerativeExperiencesSessionXPCService;
}

uint64_t method lookup function for GenerativeExperiencesSessionClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.__allocating_init(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.__allocating_init(identifier:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.terminateSession(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionID()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.register(documents:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.registeredDocuments()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.complete<A>(generating:query:tools:tooling:toolChoice:documents:parameters:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x100))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.complete(query:tools:tooling:toolChoice:documents:parameters:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x108))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidProduceCompletionResponse(for:element:isComplete:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x140))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidProduceDocumentRegistrationStatus(for:documentID:registrationStatus:isComplete:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x148))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidEncounterCompletionError(for:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x150))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidEncounterRegistrationError(for:documentID:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x158))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidProduceOneShotCompletion(for:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x160))();
}

uint64_t dispatch thunk of GenerativeExperiencesSessionClient.sessionDidProduceOneShotCompletionError(for:error:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x168))();
}

void sub_245774B14()
{
  sub_24577695C((unint64_t *)&qword_257498470, &qword_257498478);
}

uint64_t *sub_245774B38(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_245774B74(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_245774BB4()
{
  uint64_t v0;

  return sub_24576FD14(*(_QWORD *)(v0 + 16));
}

unint64_t sub_245774BCC()
{
  unint64_t result;

  result = qword_257498BC0;
  if (!qword_257498BC0)
  {
    result = MEMORY[0x24953B288](&unk_2457BF998, &type metadata for GenerativeExperiencesSessionClient.ToolCallResults);
    atomic_store(result, (unint64_t *)&qword_257498BC0);
  }
  return result;
}

void sub_245774C08(void *a1)
{
  sub_24576F7D8(a1);
}

void sub_245774C10(uint64_t a1)
{
  sub_245774CFC(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24576E950);
}

uint64_t sub_245774C20()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;

  v1 = *(_QWORD *)(sub_245776CA0() - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  sub_2457776EC();
  sub_245751140(v0 + v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  return swift_deallocObject();
}

void sub_245774C88(uint64_t a1)
{
  sub_245774C94(a1, &qword_257498BE0);
}

void sub_245774C94(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(sub_245776CA0() - 8) + 80);
  sub_24576F058(a1, *(_QWORD *)(v2 + 16), v2 + ((v5 + 24) & ~v5), a2);
}

uint64_t sub_245774CE4(uint64_t a1)
{
  return sub_245774D38(a1, &selRef_completeStreamWithQuery_tools_toolChoice_documents_parameters_schema_requestUUID_delegate_);
}

void sub_245774CF0(uint64_t a1)
{
  sub_245774CFC(a1, (void (*)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24576E394);
}

void sub_245774CFC(uint64_t a1, void (*a2)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  _QWORD *v2;

  a2(a1, v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8], v2[9]);
  sub_245777104();
}

uint64_t sub_245774D2C(uint64_t a1)
{
  return sub_245774D38(a1, &selRef_completeWithQuery_tools_toolChoice_documents_parameters_schema_requestUUID_delegate_);
}

#error "245774D5C: call analysis failed (funcsize=12)"

uint64_t sub_245774D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  swift_isUniquelyReferenced_nonNull_native();
  v15 = *v4;
  *v4 = 0x8000000000000000;
  v7 = sub_2457771E4();
  sub_245775024(v7, v8, v9, a3, a4, v10, v11, v12, v14, v15, v17, v18);
  *v4 = v16;
  return swift_bridgeObjectRelease();
}

uint64_t sub_245774DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_24577514C(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_245774E64(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_245775278(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_245774EE0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD *v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;

  v3 = (_QWORD **)v2;
  v6 = sub_2457BAAD4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (_QWORD *)*v2;
  v11 = sub_245773C88(a2);
  if (__OFADD__(v10[2], (v12 & 1) == 0))
  {
    __break(1u);
    goto LABEL_10;
  }
  v13 = v11;
  v14 = v12;
  sub_245748A50(&qword_257498C20);
  if ((sub_2457BB4D0() & 1) == 0)
    goto LABEL_5;
  v15 = sub_245773C88(a2);
  if ((v14 & 1) != (v16 & 1))
  {
LABEL_10:
    result = sub_2457BB6E0();
    __break(1u);
    return result;
  }
  v13 = v15;
LABEL_5:
  v17 = *v3;
  if ((v14 & 1) != 0)
  {
    v18 = v17[7];
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + 8 * v13) = a1;
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, a2, v6);
    return sub_245775394(v13, (uint64_t)v9, a1, v17);
  }
  return result;
}

void sub_245775024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t *v18;
  _QWORD **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  char v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;

  sub_245759004();
  v39 = v16;
  v40 = v15;
  v18 = v17;
  v19 = (_QWORD **)v12;
  v21 = v20;
  sub_245776CA0();
  sub_245777304();
  MEMORY[0x24BDAC7A8](v22);
  sub_2457535E8();
  v23 = (_QWORD *)*v12;
  v24 = sub_2457773E4();
  if (__OFADD__(v23[2], (v25 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v26 = v24;
  v27 = v25;
  sub_245748A50(v18);
  if ((sub_2457BB4D0() & 1) == 0)
    goto LABEL_5;
  v28 = sub_2457773E4();
  if ((v27 & 1) != (v29 & 1))
  {
LABEL_9:
    sub_2457BB6E0();
    __break(1u);
    return;
  }
  v26 = v28;
LABEL_5:
  v30 = *v19;
  if ((v27 & 1) != 0)
  {
    sub_245748A50(v39);
    sub_245777010();
    sub_245758FB4();
    v34(v31, v32, v33, v34, v35, v36, v37, v38, a9, a10, a11, a12);
  }
  else
  {
    sub_245767E58(v14, v21, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
    sub_24577542C(v26, v14, v40, v30);
    sub_245758FB4();
  }
}

uint64_t sub_24577514C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_245773CF8();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_245748A50(&qword_257498C10);
  if ((sub_2457BB4D0() & 1) == 0)
    goto LABEL_5;
  v13 = sub_245773CF8();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_2457BB6E0();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = v15[7];
    v17 = sub_245748A50(&qword_257498C00);
    return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v16 + *(_QWORD *)(*(_QWORD *)(v17 - 8) + 72) * v11, a1, v17);
  }
  else
  {
    sub_2457754CC(v11, a2, a3, a1, v15);
    return swift_bridgeObjectRetain();
  }
}

_OWORD *sub_245775278(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  _OWORD *v16;
  _OWORD *result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_245773CF8();
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_245748A50(&qword_257498BF8);
  if ((sub_2457BB4D0() & 1) == 0)
    goto LABEL_5;
  v13 = sub_245773CF8();
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = (_OWORD *)sub_2457BB6E0();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
  {
    v16 = (_OWORD *)(v15[7] + 32 * v11);
    sub_245749564((uint64_t)v16);
    return sub_245758044(a1, v16);
  }
  else
  {
    sub_245775560(v11, a2, a3, a1, v15);
    return (_OWORD *)swift_bridgeObjectRetain();
  }
}

uint64_t sub_245775394(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  v9 = sub_2457BAAD4();
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v8 + *(_QWORD *)(*(_QWORD *)(v9 - 8) + 72) * a1, a2, v9);
  *(_QWORD *)(a4[7] + 8 * a1) = a3;
  v11 = a4[2];
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    a4[2] = v13;
  return result;
}

void sub_24577542C(unint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  v8 = a4[6];
  sub_245776CA0();
  sub_245777010();
  (*(void (**)(unint64_t, uint64_t))(v10 + 32))(v8 + v9 * a1, a2);
  v11 = a4[7];
  sub_2457514D0();
  sub_245777010();
  (*(void (**)(unint64_t, uint64_t))(v13 + 32))(v11 + v12 * a1, a3);
  v14 = a4[2];
  v15 = __OFADD__(v14, 1);
  v16 = v14 + 1;
  if (v15)
  {
    __break(1u);
  }
  else
  {
    a4[2] = v16;
    sub_245767BCC();
  }
}

uint64_t sub_2457754CC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v8 = (_QWORD *)(a5[6] + 16 * a1);
  *v8 = a2;
  v8[1] = a3;
  v9 = a5[7];
  v10 = sub_245748A50(&qword_257498C00);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v9 + *(_QWORD *)(*(_QWORD *)(v10 - 8) + 72) * a1, a4, v10);
  v12 = a5[2];
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    a5[2] = v14;
  return result;
}

_OWORD *sub_245775560(unint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v6;
  _OWORD *result;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(a1 >> 6) + 8] |= 1 << a1;
  v6 = (_QWORD *)(a5[6] + 16 * a1);
  *v6 = a2;
  v6[1] = a3;
  result = sub_245758044(a4, (_OWORD *)(a5[7] + 32 * a1));
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_2457755C8(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

uint64_t sub_2457755E4(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_2457BAF90();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_2457567FC(&qword_2574986E8, 255, v11, MEMORY[0x24BE3C818]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_2457BB17C();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_2457567FC(&qword_257498C40, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C800], MEMORY[0x24BE3C820]);
      v21 = sub_2457BB194();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_245775BB4((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_245775848()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, unint64_t, uint64_t);
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  char v28;
  unint64_t v29;
  BOOL v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int64_t v34;
  _QWORD *v35;
  uint64_t v36;

  v1 = v0;
  v2 = sub_2457BAF90();
  v36 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *v0;
  sub_245748A50(&qword_257498C48);
  v6 = sub_2457BB428();
  v7 = v6;
  if (*(_QWORD *)(v5 + 16))
  {
    v8 = 1 << *(_BYTE *)(v5 + 32);
    v9 = *(_QWORD *)(v5 + 56);
    v35 = (_QWORD *)(v5 + 56);
    if (v8 < 64)
      v10 = ~(-1 << v8);
    else
      v10 = -1;
    v11 = v10 & v9;
    v33 = v0;
    v34 = (unint64_t)(v8 + 63) >> 6;
    v12 = v6 + 56;
    result = swift_retain();
    v14 = 0;
    if (!v11)
      goto LABEL_7;
LABEL_6:
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v18)) + (v14 << 6))
    {
      v20 = v5;
      v21 = *(_QWORD *)(v5 + 48);
      v22 = *(_QWORD *)(v36 + 72);
      v23 = *(void (**)(char *, unint64_t, uint64_t))(v36 + 32);
      v23(v4, v21 + v22 * i, v2);
      sub_2457567FC(&qword_2574986E8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C800], MEMORY[0x24BE3C818]);
      result = sub_2457BB17C();
      v24 = -1 << *(_BYTE *)(v7 + 32);
      v25 = result & ~v24;
      v26 = v25 >> 6;
      if (((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6))) == 0)
      {
        v28 = 0;
        v29 = (unint64_t)(63 - v24) >> 6;
        while (++v26 != v29 || (v28 & 1) == 0)
        {
          v30 = v26 == v29;
          if (v26 == v29)
            v26 = 0;
          v28 |= v30;
          v31 = *(_QWORD *)(v12 + 8 * v26);
          if (v31 != -1)
          {
            v27 = __clz(__rbit64(~v31)) + (v26 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v27 = __clz(__rbit64((-1 << v25) & ~*(_QWORD *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v12 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v23)(*(_QWORD *)(v7 + 48) + v27 * v22, v4, v2);
      ++*(_QWORD *)(v7 + 16);
      v5 = v20;
      if (v11)
        goto LABEL_6;
LABEL_7:
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_38;
      if (v17 >= v34)
        goto LABEL_32;
      v18 = v35[v17];
      ++v14;
      if (!v18)
      {
        v14 = v17 + 1;
        if (v17 + 1 >= v34)
          goto LABEL_32;
        v18 = v35[v14];
        if (!v18)
        {
          v14 = v17 + 2;
          if (v17 + 2 >= v34)
            goto LABEL_32;
          v18 = v35[v14];
          if (!v18)
          {
            v19 = v17 + 3;
            if (v19 >= v34)
            {
LABEL_32:
              swift_release();
              v1 = v33;
              v32 = 1 << *(_BYTE *)(v5 + 32);
              if (v32 > 63)
                sub_2457755C8(0, (unint64_t)(v32 + 63) >> 6, v35);
              else
                *v35 = -1 << v32;
              *(_QWORD *)(v5 + 16) = 0;
              break;
            }
            v18 = v35[v19];
            if (!v18)
            {
              while (1)
              {
                v14 = v19 + 1;
                if (__OFADD__(v19, 1))
                  goto LABEL_39;
                if (v14 >= v34)
                  goto LABEL_32;
                v18 = v35[v14];
                ++v19;
                if (v18)
                  goto LABEL_20;
              }
            }
            v14 = v19;
          }
        }
      }
LABEL_20:
      v11 = (v18 - 1) & v18;
    }
  }
  result = swift_release();
  *v1 = v7;
  return result;
}

uint64_t sub_245775BB4(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(char *, unint64_t, uint64_t);
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;

  v26 = a1;
  v6 = sub_2457BAF90();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v25 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  if ((a3 & 1) != 0)
  {
    sub_245775848();
  }
  else
  {
    if (v11 > v10)
    {
      sub_245775DC0();
      goto LABEL_12;
    }
    sub_245775FE8();
  }
  v12 = *v3;
  sub_2457567FC(&qword_2574986E8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C800], MEMORY[0x24BE3C818]);
  v13 = sub_2457BB17C();
  v14 = -1 << *(_BYTE *)(v12 + 32);
  a2 = v13 & ~v14;
  if (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v15 = ~v14;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v17(v9, *(_QWORD *)(v12 + 48) + v16 * a2, v6);
      sub_2457567FC(&qword_257498C40, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C800], MEMORY[0x24BE3C820]);
      v18 = sub_2457BB194();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v18 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v15;
    }
    while (((*(_QWORD *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v19 = v26;
  v20 = *v25;
  *(_QWORD *)(*v25 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v20 + 48) + *(_QWORD *)(v7 + 72) * a2, v19, v6);
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (!v23)
  {
    *(_QWORD *)(v20 + 16) = v24;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_2457BB6D4();
  __break(1u);
  return result;
}

void *sub_245775DC0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *result;
  uint64_t v10;
  unint64_t v11;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t i;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t *v26;

  v1 = v0;
  v2 = sub_2457BAF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245748A50(&qword_257498C48);
  v6 = *v0;
  v7 = sub_2457BB41C();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v1 = v8;
    return result;
  }
  v26 = v1;
  result = (void *)(v7 + 56);
  v10 = v6 + 56;
  v11 = (unint64_t)((1 << *(_BYTE *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11)
    result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  v13 = 0;
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v6 + 16);
  v14 = 1 << *(_BYTE *)(v6 + 32);
  v15 = *(_QWORD *)(v6 + 56);
  v16 = -1;
  if (v14 < 64)
    v16 = ~(-1 << v14);
  v17 = v16 & v15;
  v18 = (unint64_t)(v14 + 63) >> 6;
  if ((v16 & v15) == 0)
    goto LABEL_12;
LABEL_11:
  v19 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v19 | (v13 << 6); ; i = __clz(__rbit64(v22)) + (v13 << 6))
  {
    v24 = *(_QWORD *)(v3 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v24, v2);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v24, v5, v2);
    if (v17)
      goto LABEL_11;
LABEL_12:
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v21 >= v18)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        goto LABEL_28;
      v22 = *(_QWORD *)(v10 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          goto LABEL_28;
        v22 = *(_QWORD *)(v10 + 8 * v13);
        if (!v22)
          break;
      }
    }
LABEL_25:
    v17 = (v22 - 1) & v22;
  }
  v23 = v21 + 3;
  if (v23 >= v18)
  {
LABEL_28:
    result = (void *)swift_release();
    v1 = v26;
    goto LABEL_30;
  }
  v22 = *(_QWORD *)(v10 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      goto LABEL_28;
    v22 = *(_QWORD *)(v10 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_25;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_245775FE8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t result;
  int64_t v15;
  unint64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  char v26;
  unint64_t v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  int64_t v33;

  v1 = v0;
  v2 = sub_2457BAF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *v0;
  sub_245748A50(&qword_257498C48);
  v7 = sub_2457BB428();
  v8 = v7;
  if (!*(_QWORD *)(v6 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v8;
    return result;
  }
  v9 = 1 << *(_BYTE *)(v6 + 32);
  v10 = *(_QWORD *)(v6 + 56);
  v31 = v0;
  v32 = v6 + 56;
  if (v9 < 64)
    v11 = ~(-1 << v9);
  else
    v11 = -1;
  v12 = v11 & v10;
  v33 = (unint64_t)(v9 + 63) >> 6;
  v13 = v7 + 56;
  result = swift_retain();
  v15 = 0;
  if (!v12)
    goto LABEL_7;
LABEL_6:
  v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  for (i = v16 | (v15 << 6); ; i = __clz(__rbit64(v19)) + (v15 << 6))
  {
    v21 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(_QWORD *)(v6 + 48) + v21 * i, v2);
    sub_2457567FC(&qword_2574986E8, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BE3C800], MEMORY[0x24BE3C818]);
    result = sub_2457BB17C();
    v22 = -1 << *(_BYTE *)(v8 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6))) == 0)
    {
      v26 = 0;
      v27 = (unint64_t)(63 - v22) >> 6;
      while (++v24 != v27 || (v26 & 1) == 0)
      {
        v28 = v24 == v27;
        if (v24 == v27)
          v24 = 0;
        v26 |= v28;
        v29 = *(_QWORD *)(v13 + 8 * v24);
        if (v29 != -1)
        {
          v25 = __clz(__rbit64(~v29)) + (v24 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v25 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v13 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v13 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v8 + 48) + v25 * v21, v5, v2);
    ++*(_QWORD *)(v8 + 16);
    if (v12)
      goto LABEL_6;
LABEL_7:
    v18 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_36;
    if (v18 >= v33)
      goto LABEL_32;
    v19 = *(_QWORD *)(v32 + 8 * v18);
    ++v15;
    if (!v19)
    {
      v15 = v18 + 1;
      if (v18 + 1 >= v33)
        goto LABEL_32;
      v19 = *(_QWORD *)(v32 + 8 * v15);
      if (!v19)
      {
        v15 = v18 + 2;
        if (v18 + 2 >= v33)
          goto LABEL_32;
        v19 = *(_QWORD *)(v32 + 8 * v15);
        if (!v19)
          break;
      }
    }
LABEL_20:
    v12 = (v19 - 1) & v19;
  }
  v20 = v18 + 3;
  if (v20 >= v33)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v31;
    goto LABEL_34;
  }
  v19 = *(_QWORD *)(v32 + 8 * v20);
  if (v19)
  {
    v15 = v20;
    goto LABEL_20;
  }
  while (1)
  {
    v15 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v15 >= v33)
      goto LABEL_32;
    v19 = *(_QWORD *)(v32 + 8 * v15);
    ++v20;
    if (v19)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_245776314(unint64_t a1)
{
  uint64_t v1;

  sub_24576C074(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_24577631C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24577632C()
{
  return swift_release();
}

void sub_245776338(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24576A768(a1, a2, *(_QWORD *)(v2 + 16), *(NSObject **)(v2 + 24));
}

void sub_245776344(char a1)
{
  uint64_t v1;

  sub_24576A36C(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_245776364()
{
  uint64_t v0;

  sub_2457776EC();

  return swift_deallocObject();
}

uint64_t sub_24577638C()
{
  return swift_release();
}

uint64_t sub_245776394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = sub_245759064();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = (*(_QWORD *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = (v4 + 15) & 0xFFFFFFFFFFFFFFF8;
  v17 = v1;
  v20 = sub_245777050();
  v5 = *(_QWORD *)(v20 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + ((v16 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = (*(_QWORD *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v15 = v7;
  v18 = sub_245777048();
  v8 = *(_QWORD *)(v18 - 8);
  v9 = (*(unsigned __int8 *)(v8 + 80) + v7 + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v10 = *(_QWORD *)(v8 + 64);
  v11 = *(_QWORD *)(sub_245748A50(&qword_2574984E0) - 8);
  v12 = (v10 + *(unsigned __int8 *)(v11 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v17);

  sub_245777298();
  sub_245777298();
  sub_2457771DC(v0 + v6, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8), v15, (v16 + 15) & 0xFFFFFFFFFFFFFFF8, v16, v17, v18, v20);
  sub_245777298();
  (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v0 + v9, v19);
  v13 = sub_245759100();
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v0 + v12, 1, v13))
    sub_245776E28(v0 + v12, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8));
  sub_245777298();
  sub_245777034();
  return swift_deallocObject();
}

uint64_t sub_245776548()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_245759064();
  sub_245776EDC();
  sub_245777050();
  sub_245776EDC();
  sub_245777048();
  sub_245776EDC();
  sub_245748A50(&qword_2574984E0);
  sub_245776EDC();
  sub_245777580();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_245756B08;
  sub_24577760C();
  sub_2457773B8();
  return sub_24576CF4C(v2, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_245776670()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(unint64_t, uint64_t);
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v18 = sub_245777050();
  v1 = *(_QWORD *)(v18 - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  v3 = (*(_QWORD *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  v17 = sub_245777048();
  v4 = *(_QWORD *)(v17 - 8);
  v5 = (v3 + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v6 = *(_QWORD *)(v4 + 64);
  v7 = *(_QWORD *)(sub_245748A50(&qword_2574984E0) - 8);
  v8 = (v5 + v6 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  v20 = *(_QWORD *)(v7 + 64);
  v21 = sub_245776CA0();
  v9 = *(_QWORD *)(v21 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v19 = *(_QWORD *)(v9 + 64);
  sub_2457776EC();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = *(void (**)(unint64_t, uint64_t))(v1 + 8);
  v12 = v8;
  v11(v0 + v2, v18);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v17);
  v13 = v0 + v8;
  v14 = sub_245759100();
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v13, 1, v14))
    sub_245750FF0(v13, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8));
  sub_2457771DC(v0 + ((v12 + v20 + v10) & ~v10), *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8), v16, v17, v18, v19, v20, v21);
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_245776824()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_245777050();
  sub_245776EDC();
  sub_245777048();
  sub_245776EDC();
  sub_245748A50(&qword_2574984E0);
  sub_245776EDC();
  sub_245776CA0();
  sub_245776EDC();
  sub_245777580();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_245756D5C;
  sub_24577760C();
  return sub_24576D5A4(v2, v3, v4, v5, v6, v7, v8, v9);
}

void sub_24577695C(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = sub_24574B5EC(a2);
    atomic_store(MEMORY[0x24953B288](MEMORY[0x24BEE6D38], v3), a1);
  }
  sub_245748A90();
}

uint64_t sub_245776998(uint64_t result)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  int64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  v2 = *(_QWORD *)(result + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  v6 = result;
  result = swift_isUniquelyReferenced_nonNull_native();
  if (!(_DWORD)result || v5 > *(_QWORD *)(v3 + 24) >> 1)
  {
    if (v4 <= v5)
      v7 = v4 + v2;
    else
      v7 = v4;
    result = sub_245772A28(result, v7, 1, v3);
    v3 = result;
  }
  if (!*(_QWORD *)(v6 + 16))
  {
    if (!v2)
      goto LABEL_14;
    goto LABEL_16;
  }
  v8 = *(_QWORD *)(v3 + 16);
  v9 = (*(_QWORD *)(v3 + 24) >> 1) - v8;
  result = sub_2457BB008();
  if (v9 < v2)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  v10 = *(_QWORD *)(result - 8);
  v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  result = sub_2457732FC(v6 + v11, v2, v3 + v11 + *(_QWORD *)(v10 + 72) * v8, (void (*)(_QWORD))MEMORY[0x24BE3B918]);
  if (!v2)
  {
LABEL_14:
    result = swift_bridgeObjectRelease();
    *v1 = v3;
    return result;
  }
  v12 = *(_QWORD *)(v3 + 16);
  v13 = __OFADD__(v12, v2);
  v14 = v12 + v2;
  if (!v13)
  {
    *(_QWORD *)(v3 + 16) = v14;
    goto LABEL_14;
  }
LABEL_18:
  __break(1u);
  return result;
}

void sub_245776A94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = sub_245767D48(a1, a2, a3);
  sub_245767B90(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  sub_245748A90();
}

uint64_t sub_245776AC0(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

ValueMetadata *type metadata accessor for GenerativeExperiencesSessionClient.ToolCallResults()
{
  return &type metadata for GenerativeExperiencesSessionClient.ToolCallResults;
}

uint64_t sub_245776B0C()
{
  return swift_beginAccess();
}

uint64_t sub_245776B18(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_245776B34()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245776B40()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245776B4C()
{
  return swift_task_alloc();
}

uint64_t sub_245776B5C()
{
  return swift_allocObject();
}

uint64_t sub_245776B64()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245776B6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v2, v1);
}

uint64_t sub_245776B80()
{
  return swift_allocError();
}

void sub_245776B94(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  os_log_type_t v4;
  NSObject *v5;
  uint8_t *v6;

  _os_log_impl(a1, v5, v4, a4, v6, 2u);
}

id sub_245776BA8(id a1, SEL a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return objc_msgSend(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_245776BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, a2, a3);
}

uint64_t sub_245776BC4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 608);
}

uint64_t sub_245776BF0()
{
  return swift_task_dealloc();
}

uint64_t sub_245776BF8(uint64_t a1)
{
  uint64_t v1;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v1 - 112);
  return 0;
}

uint64_t sub_245776C0C()
{
  uint64_t v0;

  return sub_245769158(v0);
}

void sub_245776C14()
{
  void *v0;

}

uint64_t sub_245776C34()
{
  return swift_task_dealloc();
}

uint64_t sub_245776C3C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 608);
}

uint64_t sub_245776C64()
{
  return swift_task_dealloc();
}

uint64_t sub_245776C6C()
{
  return swift_task_dealloc();
}

uint64_t sub_245776C74()
{
  return swift_task_dealloc();
}

uint64_t sub_245776C90()
{
  return swift_task_dealloc();
}

uint64_t sub_245776C98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_245776CA0()
{
  return sub_2457BAAD4();
}

uint64_t sub_245776CA8()
{
  return sub_2457BAFB4();
}

uint64_t sub_245776CB8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245776CDC()
{
  return swift_task_dealloc();
}

void sub_245776D0C()
{
  JUMPOUT(0x24953AA60);
}

uint64_t sub_245776D28()
{
  return swift_task_dealloc();
}

uint64_t sub_245776D30()
{
  return swift_task_switch();
}

uint64_t sub_245776D3C()
{
  return sub_2457BB3BC();
}

uint64_t sub_245776D4C(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_245776D68()
{
  return sub_2457BB2F0();
}

uint64_t sub_245776D84(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_245776DA0()
{
  return sub_2457BAE64();
}

uint64_t sub_245776DB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_24576E1B0(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_245776DCC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245776DEC()
{
  return swift_allocObject();
}

uint64_t sub_245776E10(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_245776E28@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void sub_245776E30(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0x16u);
}

uint64_t sub_245776E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, 1, a4);
}

void sub_245776E4C()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t sub_245776E5C()
{
  return swift_release();
}

uint64_t sub_245776E64()
{
  return swift_task_alloc();
}

void sub_245776E6C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  *(_QWORD *)(v1 + 656) = a1;
  _s4Sage24ClassificationXPCRequestC7RequestOwet_0(v2, 1, a1);
  sub_245765F18(v2, v3);
}

uint64_t sub_245776E9C()
{
  return swift_willThrow();
}

void sub_245776EA4(unint64_t *a1, uint64_t a2, uint64_t (*a3)(uint64_t), uint64_t a4)
{
  sub_2457567FC(a1, 255, a3, a4);
}

uint64_t sub_245776EAC()
{
  return sub_2457BB518();
}

uint64_t sub_245776EB8(uint64_t a1)
{
  uint64_t v1;

  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, v1);
}

uint64_t sub_245776EC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, 1, v2);
}

uint64_t sub_245776ED4@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

uint64_t sub_245776EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  return v1 + ((v2 + 32) & ~v2);
}

void sub_245776F0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  sub_245765EEC(a1, v1, v2);
}

uint64_t sub_245776F18@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

void sub_245776F24(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0x16u);
}

uint64_t sub_245776F2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_245776F34()
{
  return sub_2457BAFCC();
}

BOOL sub_245776F3C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_245776F4C()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t sub_245776F5C()
{
  return swift_arrayInitWithCopy();
}

uint64_t sub_245776F6C()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t sub_245776F7C()
{
  return sub_2457BAE64();
}

uint64_t sub_245776F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v1, v2);
}

uint64_t sub_245776FA0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 128);
}

uint64_t sub_245776FC4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_245776FD0()
{
  return _swift_stdlib_bridgeErrorToNSError();
}

uint64_t sub_245776FD8@<X0>(uint64_t (*a1)(_QWORD, _QWORD, _QWORD)@<X8>)
{
  _QWORD *v1;

  return a1(v1[73], v1[70], v1[71]);
}

uint64_t sub_245776FF0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_245773478(a1 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a2, a3);
}

uint64_t sub_245776FF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0 + 664))(*(_QWORD *)(v0 + 488), *(_QWORD *)(v0 + 656), *(_QWORD *)(v0 + 472));
}

uint64_t sub_24577702C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

void sub_245777040(uint64_t a1, unint64_t *a2)
{
  sub_245769EE0(0, a2);
}

uint64_t sub_245777048()
{
  return sub_2457BACB4();
}

uint64_t sub_245777050()
{
  return sub_2457BAFE4();
}

uint64_t sub_245777058()
{
  return sub_2457BB068();
}

void sub_245777060(uint64_t a1)
{
  uint64_t *v1;

  sub_245765F18(a1, v1);
}

uint64_t sub_245777068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

_WORD *sub_245777070(_WORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_24577709C()
{
  return sub_2457BB344();
}

BOOL sub_2457770A4@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t sub_2457770B0()
{
  return sub_2457BB320();
}

uint64_t sub_2457770B8()
{
  uint64_t v0;
  uint64_t v1;

  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 0, 1, v0);
}

void sub_2457770CC()
{
  void *v0;

}

uint64_t sub_2457770F0()
{
  return swift_task_dealloc();
}

uint64_t sub_24577710C()
{
  return sub_2457BAB88();
}

void sub_245777114(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 0xCu);
}

void sub_24577711C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  sub_245768128(a1, a2, a3, a3 + 1);
}

uint64_t sub_245777124(uint64_t *a1)
{
  return sub_2457680D8(a1);
}

uint64_t sub_24577712C()
{
  return sub_2457BB440();
}

uint64_t sub_245777140()
{
  return sub_2457BB320();
}

void sub_245777160()
{
  void *v0;

}

void sub_245777174(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_245777190(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t sub_2457771DC@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return a2(a1, a8);
}

uint64_t sub_2457771E4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457771F0()
{
  return 0;
}

uint64_t sub_2457771FC()
{
  return sub_2457BB3BC();
}

uint64_t sub_245777248()
{
  return sub_2457BAF9C();
}

uint64_t sub_245777258()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_245777268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_245777278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t sub_245777298()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457772A0()
{
  return swift_task_dealloc();
}

uint64_t sub_2457772A8(uint64_t a1)
{
  uint64_t v1;

  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 0, 1, v1);
}

uint64_t sub_2457772B8()
{
  return sub_2457BAF9C();
}

BOOL sub_2457772C8(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_2457772E8()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2457772F0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457772F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245777314@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_24577731C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245777328()
{
  return sub_2457BB3BC();
}

uint64_t sub_245777338()
{
  return sub_2457BB3BC();
}

void sub_245777348()
{
  unint64_t *v0;

  sub_245769EE0(0, v0);
}

uint64_t sub_245777358()
{
  return swift_task_dealloc();
}

void sub_245777368(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_245777374(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 688) = a1;
  return sub_2457BB3B0();
}

uint64_t sub_245777390()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2457773A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t sub_2457773D4()
{
  return sub_2457BB2E4();
}

unint64_t sub_2457773E4()
{
  uint64_t v0;

  return sub_245773C88(v0);
}

uint64_t sub_2457773EC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457773F8()
{
  return swift_task_dealloc();
}

uint64_t sub_245777400()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24577740C()
{
  return sub_2457BB320();
}

uint64_t sub_245777474()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24577747C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24577748C()
{
  uint64_t v0;

  return v0;
}

void sub_24577749C(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_245765F18(v2, a2);
}

uint64_t sub_2457774A4()
{
  return swift_release();
}

uint64_t sub_2457774AC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2457774B4()
{
  return sub_2457BADB0();
}

uint64_t sub_2457774D4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457774DC()
{
  return swift_endAccess();
}

uint64_t sub_2457774E4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457774EC()
{
  return sub_2457BB068();
}

__n128 sub_2457774F4(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 144);
  a1[1] = result;
  a1[2].n128_u64[0] = *(_QWORD *)(v1 - 152);
  return result;
}

uint64_t sub_245777508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return sub_245748A50(a5);
}

uint64_t sub_245777510()
{
  return sub_2457BB4AC();
}

uint64_t sub_245777530@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_24577754C()
{
  return swift_release();
}

uint64_t sub_245777554()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245777560@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 96))(v1);
}

uint64_t sub_24577756C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return sub_245749564(a17);
}

uint64_t sub_2457775A8()
{
  return sub_2457BB044();
}

void sub_2457775B0()
{
  uint64_t v0;

}

__n128 sub_2457775BC(__n128 *a1)
{
  uint64_t v1;
  __n128 result;

  result = *(__n128 *)(v1 - 112);
  a1[1] = result;
  return result;
}

id sub_2457775C8()
{
  void *v0;

  return v0;
}

uint64_t sub_2457775D0()
{
  return swift_release();
}

uint64_t sub_2457775D8()
{
  return swift_task_dealloc();
}

uint64_t sub_2457775F4()
{
  return sub_2457BB1B8();
}

uint64_t sub_245777600()
{
  return sub_2457BB320();
}

uint64_t sub_245777620@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, _QWORD, _QWORD)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, *(_QWORD *)(v2 - 256), *(_QWORD *)(v3 - 208));
}

uint64_t sub_245777640()
{
  return sub_2457BB4A0();
}

uint64_t sub_24577764C()
{
  return type metadata accessor for ToolXPCEnvelope();
}

uint64_t sub_245777654()
{
  return sub_2457BABB8();
}

uint64_t sub_24577765C()
{
  return type metadata accessor for DocumentIdentifierXPCEnvelope();
}

uint64_t sub_245777670()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245777698()
{
  return sub_2457BB068();
}

uint64_t sub_2457776A0()
{
  uint64_t v0;

  return sub_245776998(v0);
}

uint64_t sub_2457776B4()
{
  return swift_allocObject();
}

void sub_2457776C0(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_QWORD *)(a1 + 56) = a2;
  *(_QWORD *)(a1 + 64) = v2;
  JUMPOUT(0x24953AA60);
}

uint64_t sub_2457776C8()
{
  return sub_2457BB6B0();
}

uint64_t sub_2457776D4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2457776DC()
{
  uint64_t *v0;

  return sub_245748A50(v0);
}

void sub_2457776E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_245765F18(v2, a2);
}

uint64_t sub_2457776EC()
{
  return swift_release();
}

void sub_2457776F4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_245765EEC(v3, v4, a3);
}

void sub_245777700(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_245765F18(v2, a2);
}

uint64_t sub_245777708()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t sub_24577771C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6C69616D65 && a2 == 0xE500000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6D754E656E6F6870 && a2 == 0xEB00000000726562;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x726568746FLL && a2 == 0xE500000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2457BB6B0();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_245777870(char a1)
{
  if (!a1)
    return 0x6C69616D65;
  if (a1 == 1)
    return 0x6D754E656E6F6870;
  return 0x726568746FLL;
}

uint64_t sub_2457778C8()
{
  char *v0;

  return sub_245777870(*v0);
}

uint64_t sub_2457778D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24577771C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457778F4()
{
  sub_245777C94();
  return sub_2457BB788();
}

uint64_t sub_24577791C()
{
  sub_245777C94();
  return sub_2457BB794();
}

uint64_t sub_245777944()
{
  sub_245777D48();
  return sub_2457BB788();
}

uint64_t sub_24577796C()
{
  sub_245777D48();
  return sub_2457BB794();
}

uint64_t sub_245777994()
{
  sub_245777CD0();
  return sub_2457BB788();
}

uint64_t sub_2457779BC()
{
  sub_245777CD0();
  return sub_2457BB794();
}

uint64_t sub_2457779E4()
{
  sub_245777D0C();
  return sub_2457BB788();
}

uint64_t sub_245777A0C()
{
  sub_245777D0C();
  return sub_2457BB794();
}

void Handle.Kind.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  sub_245758054();
  v2 = v1;
  v3 = sub_245748A50(&qword_257498D00);
  v27 = *(_QWORD *)(v3 - 8);
  v28 = v3;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_245750F48();
  v26 = v5;
  v6 = sub_245748A50(&qword_257498D08);
  v24 = *(_QWORD *)(v6 - 8);
  v25 = v6;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v7);
  sub_245749FF4();
  v10 = v9 - v8;
  v11 = sub_245748A50(&qword_257498D10);
  v23 = *(_QWORD *)(v11 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v12);
  sub_245749FF4();
  v15 = v14 - v13;
  v16 = sub_245748A50(&qword_257498D18);
  v29 = *(_QWORD *)(v16 - 8);
  v30 = v16;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v17);
  sub_245749FF4();
  v20 = v19 - v18;
  v21 = *(unsigned __int8 *)(v0 + 16);
  sub_245749280(v2, v2[3]);
  sub_245777C94();
  sub_2457BB77C();
  if (v21)
  {
    if (v21 == 1)
    {
      sub_245779758();
      v22 = v30;
      sub_24577971C();
      sub_245779738();
      (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v10, v25);
    }
    else
    {
      sub_24577974C();
      v22 = v30;
      sub_24577971C();
      sub_245779738();
      (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v26, v28);
    }
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v20, v22);
  }
  else
  {
    sub_245777D48();
    sub_24577971C();
    sub_245779738();
    (*(void (**)(uint64_t, uint64_t))(v23 + 8))(v15, v11);
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v20, v30);
  }
  sub_245751240();
}

unint64_t sub_245777C94()
{
  unint64_t result;

  result = qword_257498D20;
  if (!qword_257498D20)
  {
    result = MEMORY[0x24953B288](&unk_2457BFFD0, &type metadata for Handle.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498D20);
  }
  return result;
}

unint64_t sub_245777CD0()
{
  unint64_t result;

  result = qword_257498D28;
  if (!qword_257498D28)
  {
    result = MEMORY[0x24953B288](&unk_2457BFF80, &type metadata for Handle.Kind.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498D28);
  }
  return result;
}

unint64_t sub_245777D0C()
{
  unint64_t result;

  result = qword_257498D30;
  if (!qword_257498D30)
  {
    result = MEMORY[0x24953B288](&unk_2457BFF30, &type metadata for Handle.Kind.PhoneNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498D30);
  }
  return result;
}

unint64_t sub_245777D48()
{
  unint64_t result;

  result = qword_257498D38;
  if (!qword_257498D38)
  {
    result = MEMORY[0x24953B288](&unk_2457BFEE0, &type metadata for Handle.Kind.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498D38);
  }
  return result;
}

void Handle.Kind.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  char v47;

  sub_245758054();
  v3 = v2;
  v42 = v4;
  v5 = sub_245748A50(&qword_257498D40);
  v39 = *(_QWORD *)(v5 - 8);
  v40 = v5;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_245750F48();
  v45 = v7;
  v41 = sub_245748A50(&qword_257498D48);
  v38 = *(_QWORD *)(v41 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v8);
  sub_245750F48();
  v43 = v9;
  v10 = sub_245748A50(&qword_257498D50);
  MEMORY[0x24BDAC7A8](v10);
  sub_245748AD0();
  v11 = sub_245748A50(&qword_257498D58);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  sub_245749FF4();
  v15 = v14 - v13;
  v46 = v3;
  sub_245749280(v3, v3[3]);
  sub_245777C94();
  sub_2457BB770();
  if (v0)
  {
    v16 = (uint64_t)v3;
LABEL_11:
    sub_245749564(v16);
    goto LABEL_12;
  }
  v37 = v12;
  v17 = sub_2457BB5E4();
  v18 = *(_QWORD *)(v17 + 16);
  v19 = v11;
  if (!v18)
  {
    v16 = (uint64_t)v3;
LABEL_10:
    v28 = sub_2457BB470();
    swift_allocError();
    v30 = v29;
    sub_245748A50(&qword_2574980B0);
    *v30 = &type metadata for Handle.Kind;
    sub_2457BB53C();
    sub_2457BB464();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v28 - 8) + 104))(v30, *MEMORY[0x24BEE26D0], v28);
    swift_willThrow();
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v15, v19);
    goto LABEL_11;
  }
  v20 = *(unsigned __int8 *)(v17 + 32);
  sub_245750D90(1, v18, v17, v17 + 32, 0, (2 * v18) | 1);
  v22 = v21;
  v24 = v23;
  swift_bridgeObjectRelease();
  if (v22 != v24 >> 1)
  {
    v16 = (uint64_t)v3;
    v19 = v11;
    goto LABEL_10;
  }
  v47 = v20;
  if (v20)
  {
    if (v20 == 1)
    {
      sub_245779758();
      sub_2457796C8();
      v25 = sub_245779740();
      v26 = (uint64_t)v3;
      v27 = v12;
      v33 = v32;
      (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v43, v41);
    }
    else
    {
      sub_24577974C();
      sub_2457796C8();
      v31 = sub_2457BB584();
      v26 = (uint64_t)v3;
      v27 = v12;
      v36 = v35;
      v44 = v31;
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v45, v40);
      v25 = v44;
      v33 = v36;
    }
  }
  else
  {
    sub_245777D48();
    sub_2457796C8();
    v25 = sub_245779740();
    v27 = v12;
    v33 = v34;
    sub_245779728(v1);
    v26 = (uint64_t)v46;
  }
  sub_245779714();
  sub_2457796F4(*(uint64_t (**)(uint64_t, uint64_t))(v27 + 8));
  *(_QWORD *)v42 = v25;
  *(_QWORD *)(v42 + 8) = v33;
  *(_BYTE *)(v42 + 16) = v47;
  sub_245749564(v26);
LABEL_12:
  sub_245751240();
}

void sub_24577820C()
{
  Handle.Kind.init(from:)();
}

void sub_245778220()
{
  Handle.Kind.encode(to:)();
}

uint64_t Handle.name.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void Handle.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*Handle.name.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Handle.handleKind.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unsigned __int8 v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_BYTE *)(v1 + 32);
  *(_BYTE *)(a1 + 16) = v4;
  return sub_245778A84(v2, v3, v4);
}

void Handle.handleKind.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_BYTE *)a1 + 16);
  sub_245778A98(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_BYTE *)(v1 + 32));
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  sub_245749FB4();
}

uint64_t (*Handle.handleKind.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Handle.contactID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void Handle.contactID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  sub_245749FB4();
}

uint64_t (*Handle.contactID.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Handle.isOwner.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t Handle.isOwner.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 56) = result;
  return result;
}

uint64_t (*Handle.isOwner.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

__n128 Handle.init(name:handleKind:contactID:isOwner:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unsigned __int8 a6@<W5>, __n128 *a7@<X8>)
{
  unsigned __int8 v7;
  __n128 result;

  v7 = a3[1].n128_u8[0];
  a7->n128_u64[0] = a1;
  a7->n128_u64[1] = a2;
  result = *a3;
  a7[1] = *a3;
  a7[2].n128_u8[0] = v7;
  a7[2].n128_u64[1] = a4;
  a7[3].n128_u64[0] = a5;
  a7[3].n128_u8[8] = a6;
  return result;
}

uint64_t sub_24577839C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x694B656C646E6168 && a2 == 0xEA0000000000646ELL;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x49746361746E6F63 && a2 == 0xE900000000000044;
      if (v7 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x72656E774F7369 && a2 == 0xE700000000000000)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_2457BB6B0();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_245778550(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24577857C + 4 * byte_2457BF9C0[a1]))(1701667182, 0xE400000000000000);
}

uint64_t sub_24577857C()
{
  return 0x694B656C646E6168;
}

uint64_t sub_245778598()
{
  return 0x49746361746E6F63;
}

uint64_t sub_2457785B4()
{
  return 0x72656E774F7369;
}

uint64_t sub_2457785CC()
{
  unsigned __int8 *v0;

  return sub_245778550(*v0);
}

uint64_t sub_2457785D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24577839C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457785F8()
{
  sub_245778AAC();
  return sub_2457BB788();
}

uint64_t sub_245778620()
{
  sub_245778AAC();
  return sub_2457BB794();
}

void Handle.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_245758054();
  v2 = v1;
  v3 = sub_245748A50(&qword_257498D60);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_245749FF4();
  v7 = v6 - v5;
  sub_245749280(v2, v2[3]);
  sub_245778AAC();
  sub_2457BB77C();
  sub_2457BB608();
  if (!v0)
  {
    sub_245778AE8();
    sub_2457BB638();
    sub_2457BB608();
    sub_2457BB650();
  }
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
  sub_245751240();
}

void Handle.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned __int8 v21;

  sub_245758054();
  v2 = v1;
  v4 = v3;
  v5 = sub_245748A50(&qword_257498D78);
  MEMORY[0x24BDAC7A8](v5);
  sub_245748AD0();
  sub_245749280(v2, v2[3]);
  sub_245778AAC();
  sub_2457BB770();
  if (v0)
  {
    v9 = -1;
    sub_245749564((uint64_t)v2);
    sub_245751384();
    v14 = 0;
    v15 = 0;
  }
  else
  {
    LOBYTE(v19) = 0;
    v6 = sub_245779700();
    v8 = v7;
    sub_245778B24();
    swift_bridgeObjectRetain();
    sub_2457BB578();
    v17 = v6;
    v18 = v4;
    v9 = v21;
    sub_245778A84(v19, v20, v21);
    v10 = sub_245779700();
    v12 = v11;
    v16 = v10;
    swift_bridgeObjectRetain();
    v13 = sub_2457BB590();
    sub_2457796E4();
    swift_bridgeObjectRetain();
    sub_245778A84(v19, v20, v21);
    sub_245778A98(v19, v20, v21);
    sub_245751384();
    *(_QWORD *)v18 = v17;
    *(_QWORD *)(v18 + 8) = v8;
    *(_QWORD *)(v18 + 16) = v19;
    *(_QWORD *)(v18 + 24) = v20;
    *(_BYTE *)(v18 + 32) = v21;
    *(_QWORD *)(v18 + 40) = v16;
    *(_QWORD *)(v18 + 48) = v12;
    *(_BYTE *)(v18 + 56) = v13 & 1;
    sub_245749564((uint64_t)v2);
    sub_245751384();
    v14 = v19;
    v15 = v20;
  }
  sub_245778A98(v14, v15, v9);
  swift_bridgeObjectRelease();
  sub_245751240();
}

void sub_245778A5C()
{
  Handle.init(from:)();
}

void sub_245778A70()
{
  Handle.encode(to:)();
}

uint64_t sub_245778A84(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_24574E938(a1, a2, a3);
  return a1;
}

uint64_t sub_245778A98(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 0xFF)
    return sub_24574EBF0(a1, a2, a3);
  return a1;
}

unint64_t sub_245778AAC()
{
  unint64_t result;

  result = qword_257498D68;
  if (!qword_257498D68)
  {
    result = MEMORY[0x24953B288](&unk_2457BFE90, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498D68);
  }
  return result;
}

unint64_t sub_245778AE8()
{
  unint64_t result;

  result = qword_257498D70;
  if (!qword_257498D70)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for Handle.Kind, &type metadata for Handle.Kind);
    atomic_store(result, (unint64_t *)&qword_257498D70);
  }
  return result;
}

unint64_t sub_245778B24()
{
  unint64_t result;

  result = qword_257498D80;
  if (!qword_257498D80)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for Handle.Kind, &type metadata for Handle.Kind);
    atomic_store(result, (unint64_t *)&qword_257498D80);
  }
  return result;
}

uint64_t destroy for Handle(uint64_t a1)
{
  int v2;

  swift_bridgeObjectRelease();
  v2 = *(unsigned __int8 *)(a1 + 32);
  if (v2 != 255)
    sub_24574EBF0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), v2);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Handle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(unsigned __int8 *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 255)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 16);
    v7 = *(_QWORD *)(a2 + 24);
    sub_24574E938(v6, v7, v5);
    *(_QWORD *)(a1 + 16) = v6;
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = v5;
  }
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Handle(uint64_t a1, uint64_t a2)
{
  __int128 *v4;
  __int128 *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned __int8 v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  __int128 v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (__int128 *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a2 + 32);
  if (*(unsigned __int8 *)(a1 + 32) == 255)
  {
    if (v6 == 255)
    {
      v15 = *v5;
      *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
      *v4 = v15;
    }
    else
    {
      v12 = *(_QWORD *)(a2 + 16);
      v13 = *(_QWORD *)(a2 + 24);
      sub_24574E938(v12, v13, *(_BYTE *)(a2 + 32));
      *(_QWORD *)(a1 + 16) = v12;
      *(_QWORD *)(a1 + 24) = v13;
      *(_BYTE *)(a1 + 32) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_245778D50(a1 + 16);
    v14 = *(_BYTE *)(a2 + 32);
    *v4 = *v5;
    *(_BYTE *)(a1 + 32) = v14;
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 16);
    v8 = *(_QWORD *)(a2 + 24);
    sub_24574E938(v7, v8, *(_BYTE *)(a2 + 32));
    v9 = *(_QWORD *)(a1 + 16);
    v10 = *(_QWORD *)(a1 + 24);
    *(_QWORD *)(a1 + 16) = v7;
    *(_QWORD *)(a1 + 24) = v8;
    v11 = *(_BYTE *)(a1 + 32);
    *(_BYTE *)(a1 + 32) = v6;
    sub_24574EBF0(v9, v10, v11);
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t sub_245778D50(uint64_t a1)
{
  destroy for Handle.Kind(a1);
  return a1;
}

__n128 initializeWithTake for Handle(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for Handle(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = (_OWORD *)(a2 + 16);
  v6 = *(unsigned __int8 *)(a1 + 32);
  if (v6 == 255)
    goto LABEL_5;
  v7 = *(unsigned __int8 *)(a2 + 32);
  if (v7 == 255)
  {
    sub_245778D50(a1 + 16);
LABEL_5:
    *(_OWORD *)(a1 + 16) = *v5;
    *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 16);
  v9 = *(_QWORD *)(a1 + 24);
  *(_OWORD *)(a1 + 16) = *v5;
  *(_BYTE *)(a1 + 32) = v7;
  sub_24574EBF0(v8, v9, v6);
LABEL_6:
  v10 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v10;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for Handle(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 57))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Handle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Handle()
{
  return &type metadata for Handle;
}

uint64_t destroy for Handle.Kind(uint64_t a1)
{
  return sub_24574EBF0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s4Sage6HandleV4KindOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24574E938(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Handle.Kind(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_24574E938(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_24574EBF0(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for Handle.Kind(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Handle.Kind(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_24574EBF0(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Handle.Kind(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Handle.Kind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_245779090(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_245779098(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Handle.Kind()
{
  return &type metadata for Handle.Kind;
}

uint64_t storeEnumTagSinglePayload for Handle.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2457790FC + 4 * byte_2457BF9C9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_245779130 + 4 * byte_2457BF9C4[v4]))();
}

uint64_t sub_245779130(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245779138(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245779140);
  return result;
}

uint64_t sub_24577914C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245779154);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_245779158(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245779160(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Handle.CodingKeys()
{
  return &type metadata for Handle.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for Handle.Kind.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2457791C8 + 4 * byte_2457BF9D3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2457791FC + 4 * byte_2457BF9CE[v4]))();
}

uint64_t sub_2457791FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245779204(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24577920CLL);
  return result;
}

uint64_t sub_245779218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245779220);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_245779224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577922C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Handle.Kind.CodingKeys()
{
  return &type metadata for Handle.Kind.CodingKeys;
}

ValueMetadata *type metadata accessor for Handle.Kind.EmailCodingKeys()
{
  return &type metadata for Handle.Kind.EmailCodingKeys;
}

ValueMetadata *type metadata accessor for Handle.Kind.PhoneNumberCodingKeys()
{
  return &type metadata for Handle.Kind.PhoneNumberCodingKeys;
}

uint64_t _s4Sage6HandleV4KindO15EmailCodingKeysOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2457792AC + 4 * byte_2457BF9D8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2457792CC + 4 * byte_2457BF9DD[v4]))();
}

_BYTE *sub_2457792AC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2457792CC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2457792D4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2457792DC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2457792E4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2457792EC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for Handle.Kind.OtherCodingKeys()
{
  return &type metadata for Handle.Kind.OtherCodingKeys;
}

unint64_t sub_24577930C()
{
  unint64_t result;

  result = qword_257498D88;
  if (!qword_257498D88)
  {
    result = MEMORY[0x24953B288](&unk_2457BFB88, &type metadata for Handle.Kind.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498D88);
  }
  return result;
}

unint64_t sub_24577934C()
{
  unint64_t result;

  result = qword_257498D90;
  if (!qword_257498D90)
  {
    result = MEMORY[0x24953B288](&unk_2457BFC40, &type metadata for Handle.Kind.PhoneNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498D90);
  }
  return result;
}

unint64_t sub_24577938C()
{
  unint64_t result;

  result = qword_257498D98;
  if (!qword_257498D98)
  {
    result = MEMORY[0x24953B288](&unk_2457BFCF8, &type metadata for Handle.Kind.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498D98);
  }
  return result;
}

unint64_t sub_2457793CC()
{
  unint64_t result;

  result = qword_257498DA0;
  if (!qword_257498DA0)
  {
    result = MEMORY[0x24953B288](&unk_2457BFDB0, &type metadata for Handle.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DA0);
  }
  return result;
}

unint64_t sub_24577940C()
{
  unint64_t result;

  result = qword_257498DA8;
  if (!qword_257498DA8)
  {
    result = MEMORY[0x24953B288](&unk_2457BFE68, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DA8);
  }
  return result;
}

unint64_t sub_24577944C()
{
  unint64_t result;

  result = qword_257498DB0;
  if (!qword_257498DB0)
  {
    result = MEMORY[0x24953B288](&unk_2457BFDD8, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DB0);
  }
  return result;
}

unint64_t sub_24577948C()
{
  unint64_t result;

  result = qword_257498DB8;
  if (!qword_257498DB8)
  {
    result = MEMORY[0x24953B288](&unk_2457BFE00, &type metadata for Handle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DB8);
  }
  return result;
}

unint64_t sub_2457794CC()
{
  unint64_t result;

  result = qword_257498DC0;
  if (!qword_257498DC0)
  {
    result = MEMORY[0x24953B288](&unk_2457BFC68, &type metadata for Handle.Kind.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DC0);
  }
  return result;
}

unint64_t sub_24577950C()
{
  unint64_t result;

  result = qword_257498DC8;
  if (!qword_257498DC8)
  {
    result = MEMORY[0x24953B288](&unk_2457BFC90, &type metadata for Handle.Kind.EmailCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DC8);
  }
  return result;
}

unint64_t sub_24577954C()
{
  unint64_t result;

  result = qword_257498DD0;
  if (!qword_257498DD0)
  {
    result = MEMORY[0x24953B288](&unk_2457BFBB0, &type metadata for Handle.Kind.PhoneNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DD0);
  }
  return result;
}

unint64_t sub_24577958C()
{
  unint64_t result;

  result = qword_257498DD8;
  if (!qword_257498DD8)
  {
    result = MEMORY[0x24953B288](&unk_2457BFBD8, &type metadata for Handle.Kind.PhoneNumberCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DD8);
  }
  return result;
}

unint64_t sub_2457795CC()
{
  unint64_t result;

  result = qword_257498DE0;
  if (!qword_257498DE0)
  {
    result = MEMORY[0x24953B288](&unk_2457BFAF8, &type metadata for Handle.Kind.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DE0);
  }
  return result;
}

unint64_t sub_24577960C()
{
  unint64_t result;

  result = qword_257498DE8;
  if (!qword_257498DE8)
  {
    result = MEMORY[0x24953B288](&unk_2457BFB20, &type metadata for Handle.Kind.OtherCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DE8);
  }
  return result;
}

unint64_t sub_24577964C()
{
  unint64_t result;

  result = qword_257498DF0;
  if (!qword_257498DF0)
  {
    result = MEMORY[0x24953B288](&unk_2457BFD20, &type metadata for Handle.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DF0);
  }
  return result;
}

unint64_t sub_24577968C()
{
  unint64_t result;

  result = qword_257498DF8;
  if (!qword_257498DF8)
  {
    result = MEMORY[0x24953B288](&unk_2457BFD48, &type metadata for Handle.Kind.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498DF8);
  }
  return result;
}

uint64_t sub_2457796C8()
{
  return sub_2457BB530();
}

uint64_t sub_2457796E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t sub_2457796F4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_245779700()
{
  return sub_2457BB548();
}

uint64_t sub_245779714()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_24577971C()
{
  return sub_2457BB5FC();
}

uint64_t sub_245779728(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 184) + 8))(a1, v1);
}

uint64_t sub_245779738()
{
  return sub_2457BB644();
}

uint64_t sub_245779740()
{
  return sub_2457BB584();
}

unint64_t sub_24577974C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_245777CD0();
}

unint64_t sub_245779758()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_245777D0C();
}

void InferenceEnvironmentInfo.modelIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void InferenceEnvironmentInfo.modelIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_24575147C();
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v0;
  sub_245749FB4();
}

uint64_t (*InferenceEnvironmentInfo.modelIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void InferenceEnvironmentInfo.modelVersion.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void InferenceEnvironmentInfo.modelVersion.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24575147C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  sub_245749FB4();
}

uint64_t (*InferenceEnvironmentInfo.modelVersion.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void InferenceEnvironmentInfo.tokenizerIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void InferenceEnvironmentInfo.tokenizerIdentifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24575147C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  sub_245749FB4();
}

uint64_t (*InferenceEnvironmentInfo.tokenizerIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void InferenceEnvironmentInfo.tokenizerVersion.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void InferenceEnvironmentInfo.tokenizerVersion.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24575147C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  sub_245749FB4();
}

uint64_t (*InferenceEnvironmentInfo.tokenizerVersion.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void InferenceEnvironmentInfo.baseModelIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void InferenceEnvironmentInfo.baseModelIdentifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24575147C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v0;
  sub_245749FB4();
}

uint64_t (*InferenceEnvironmentInfo.baseModelIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void InferenceEnvironmentInfo.baseModelVersion.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void InferenceEnvironmentInfo.baseModelVersion.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24575147C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v0;
  sub_245749FB4();
}

uint64_t (*InferenceEnvironmentInfo.baseModelVersion.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void InferenceEnvironmentInfo.draftModelIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void InferenceEnvironmentInfo.draftModelIdentifier.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24575147C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = v2;
  *(_QWORD *)(v1 + 104) = v0;
  sub_245749FB4();
}

uint64_t (*InferenceEnvironmentInfo.draftModelIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void InferenceEnvironmentInfo.draftModelVersion.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void InferenceEnvironmentInfo.draftModelVersion.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24575147C();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 112) = v2;
  *(_QWORD *)(v1 + 120) = v0;
  sub_245749FB4();
}

uint64_t (*InferenceEnvironmentInfo.draftModelVersion.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void __swiftcall InferenceEnvironmentInfo.init(modelIdentifier:modelVersion:tokenizerIdentifier:tokenizerVersion:baseModelIdentifier:baseModelVersion:draftModelIdentifier:draftModelVersion:)(Sage::InferenceEnvironmentInfo *__return_ptr retstr, Swift::String_optional modelIdentifier, Swift::String_optional modelVersion, Swift::String_optional tokenizerIdentifier, Swift::String_optional tokenizerVersion, Swift::String_optional baseModelIdentifier, Swift::String_optional baseModelVersion, Swift::String_optional draftModelIdentifier, Swift::String_optional draftModelVersion)
{
  retstr->modelIdentifier = modelIdentifier;
  retstr->modelVersion = modelVersion;
  retstr->tokenizerIdentifier = tokenizerIdentifier;
  retstr->tokenizerVersion = tokenizerVersion;
  retstr->baseModelIdentifier = baseModelIdentifier;
  retstr->baseModelVersion = baseModelVersion;
  retstr->draftModelIdentifier = draftModelIdentifier;
  retstr->draftModelVersion = draftModelVersion;
}

uint64_t sub_245779A50(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6564496C65646F6DLL && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7265566C65646F6DLL && a2 == 0xEC0000006E6F6973;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000002457CA160 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000002457CA180 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000013 && a2 == 0x80000002457CA1A0 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD000000000000010 && a2 == 0x80000002457CA1C0 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000002457CA1E0 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD000000000000011 && a2 == 0x80000002457CA200)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else
    {
      v7 = sub_2457BB6B0();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 7;
      else
        return 8;
    }
  }
}

uint64_t sub_245779D84(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_245779DC4 + 4 * byte_2457C0020[a1]))(0x6564496C65646F6DLL, 0xEF7265696669746ELL);
}

uint64_t sub_245779DC4()
{
  return 0x7265566C65646F6DLL;
}

unint64_t sub_245779DE4()
{
  return 0xD000000000000013;
}

uint64_t sub_245779E74()
{
  unsigned __int8 *v0;

  return sub_245779D84(*v0);
}

uint64_t sub_245779E7C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245779A50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245779EA0()
{
  sub_24577A0FC();
  return sub_2457BB788();
}

uint64_t sub_245779EC8()
{
  sub_24577A0FC();
  return sub_2457BB794();
}

void InferenceEnvironmentInfo.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v15[16];
  char v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v3 = sub_245748A50(&qword_257498E00);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v15[13] = v1[3];
  v15[14] = v7;
  v8 = v1[4];
  v15[11] = v1[5];
  v15[12] = v8;
  v9 = v1[6];
  v15[9] = v1[7];
  v15[10] = v9;
  v10 = v1[8];
  v15[7] = v1[9];
  v15[8] = v10;
  v11 = v1[10];
  v15[5] = v1[11];
  v15[6] = v11;
  v12 = v1[13];
  v15[3] = v1[12];
  v15[4] = v12;
  v13 = v1[14];
  v15[1] = v1[15];
  v15[2] = v13;
  sub_245749280(a1, a1[3]);
  sub_24577A0FC();
  sub_2457BB77C();
  v23 = 0;
  v14 = v15[15];
  sub_2457BB608();
  if (!v14)
  {
    v22 = 1;
    sub_24577AC44();
    v21 = 2;
    sub_24577AC44();
    v20 = 3;
    sub_24577AC44();
    v19 = 4;
    sub_24577AC44();
    v18 = 5;
    sub_24577AC44();
    v17 = 6;
    sub_24577AC44();
    v16 = 7;
    sub_24577AC44();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_245751240();
}

unint64_t sub_24577A0FC()
{
  unint64_t result;

  result = qword_257498E08;
  if (!qword_257498E08)
  {
    result = MEMORY[0x24953B288](&unk_2457C018C, &type metadata for InferenceEnvironmentInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498E08);
  }
  return result;
}

void InferenceEnvironmentInfo.init(from:)(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t (*v29)(uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  void *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD v55[16];
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char v72;

  v45 = a2;
  v46 = sub_245748A50(&qword_257498E10);
  v4 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  v6 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1[3];
  v8 = a1[4];
  v9 = sub_245749280(a1, v7);
  sub_24577A0FC();
  sub_2457BB770();
  v48 = a1;
  if (v2)
  {
    v47 = v2;
    sub_24577AC74();
    v53 = 0;
    v54 = 0;
    sub_245749564((uint64_t)v48);
    v56 = 0;
    v57 = v54;
    v58 = 0;
    v59 = v53;
    v60 = v7;
    v61 = v52;
    v62 = a1;
    v63 = v51;
    v64 = v9;
    v65 = v50;
    v66 = v6;
    v67 = v2;
    v68 = v8;
    v69 = v49;
    v70 = 0;
    v71 = 0;
  }
  else
  {
    v10 = v45;
    LOBYTE(v56) = 0;
    v11 = sub_2457BB548();
    v13 = v12;
    v44 = v11;
    LOBYTE(v56) = 1;
    sub_24577ACBC();
    v14 = sub_24577AC98();
    v54 = v13;
    v43 = v14;
    LOBYTE(v56) = 2;
    v16 = v15;
    sub_24577ACBC();
    v17 = sub_24577AC98();
    v53 = v16;
    v19 = v18;
    v42 = v17;
    LOBYTE(v56) = 3;
    sub_24577ACBC();
    v20 = sub_24577AC98();
    v52 = v19;
    v41 = v20;
    sub_24577ACC4(4);
    v21 = sub_24577AC98();
    v51 = v19;
    v40 = v21;
    sub_24577ACC4(5);
    v22 = sub_24577AC98();
    v50 = v19;
    v24 = v23;
    v39 = v22;
    LOBYTE(v56) = 6;
    sub_24577ACBC();
    v38 = sub_24577AC98();
    v72 = 7;
    v49 = v25;
    sub_24577ACBC();
    v26 = sub_2457BB548();
    v47 = 0;
    v28 = v27;
    v29 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    v37 = v26;
    sub_24577AC68(v29);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v30 = v53;
    v55[0] = v44;
    v55[1] = v54;
    v55[2] = v43;
    v55[3] = v53;
    v36 = v24;
    v31 = v52;
    v55[4] = v42;
    v55[5] = v52;
    v32 = v50;
    v55[6] = v41;
    v55[7] = v51;
    v55[8] = v40;
    v55[9] = v50;
    v55[10] = v39;
    v55[11] = v24;
    v33 = v49;
    v55[12] = v38;
    v55[13] = v49;
    v55[14] = v37;
    v55[15] = v28;
    sub_24577A640((uint64_t)v55);
    sub_24577ACAC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v34 = v51;
    sub_245776B64();
    swift_bridgeObjectRelease();
    v35 = v36;
    sub_24577ACAC();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v10, v55, 0x80uLL);
    sub_245749564((uint64_t)v48);
    v56 = v44;
    v57 = v54;
    v58 = v43;
    v59 = v30;
    v60 = v42;
    v61 = v31;
    v62 = (_QWORD *)v41;
    v63 = v34;
    v64 = (_QWORD *)v40;
    v65 = v32;
    v66 = (char *)v39;
    v67 = v35;
    v68 = v38;
    v69 = v33;
    v70 = v37;
    v71 = v28;
  }
  sub_24577A5AC((uint64_t)&v56);
  sub_245751240();
}

uint64_t sub_24577A5AC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_24577A640(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void sub_24577A6D4(_QWORD *a1@<X0>, void *a2@<X8>)
{
  InferenceEnvironmentInfo.init(from:)(a1, a2);
}

void sub_24577A6E8(_QWORD *a1)
{
  InferenceEnvironmentInfo.encode(to:)(a1);
}

uint64_t destroy for InferenceEnvironmentInfo()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for InferenceEnvironmentInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for InferenceEnvironmentInfo(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for InferenceEnvironmentInfo(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

_QWORD *assignWithTake for InferenceEnvironmentInfo(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InferenceEnvironmentInfo(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 128))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InferenceEnvironmentInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for InferenceEnvironmentInfo()
{
  return &type metadata for InferenceEnvironmentInfo;
}

uint64_t storeEnumTagSinglePayload for InferenceEnvironmentInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_24577AB04 + 4 * byte_2457C002D[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_24577AB38 + 4 * byte_2457C0028[v4]))();
}

uint64_t sub_24577AB38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577AB40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24577AB48);
  return result;
}

uint64_t sub_24577AB54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24577AB5CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_24577AB60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577AB68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for InferenceEnvironmentInfo.CodingKeys()
{
  return &type metadata for InferenceEnvironmentInfo.CodingKeys;
}

unint64_t sub_24577AB88()
{
  unint64_t result;

  result = qword_257498E18;
  if (!qword_257498E18)
  {
    result = MEMORY[0x24953B288](&unk_2457C0164, &type metadata for InferenceEnvironmentInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498E18);
  }
  return result;
}

unint64_t sub_24577ABC8()
{
  unint64_t result;

  result = qword_257498E20;
  if (!qword_257498E20)
  {
    result = MEMORY[0x24953B288](&unk_2457C00D4, &type metadata for InferenceEnvironmentInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498E20);
  }
  return result;
}

unint64_t sub_24577AC08()
{
  unint64_t result;

  result = qword_257498E28;
  if (!qword_257498E28)
  {
    result = MEMORY[0x24953B288](&unk_2457C00FC, &type metadata for InferenceEnvironmentInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498E28);
  }
  return result;
}

uint64_t sub_24577AC44()
{
  return sub_2457BB608();
}

uint64_t sub_24577AC54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v0 + 88) = v2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v1, v4);
}

uint64_t sub_24577AC68@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void sub_24577AC74()
{
  _QWORD *v0;

  v0[13] = 0;
  v0[14] = 0;
  v0[15] = 0;
  v0[16] = 0;
}

uint64_t sub_24577AC98()
{
  return sub_2457BB548();
}

uint64_t sub_24577ACA4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24577ACAC()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24577ACB4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24577ACBC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_24577ACC4@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 216) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_24577ACD4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24577ACF0()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_24577AD0C(uint64_t a1)
{
  return sub_24577AE28(a1, qword_257498E30);
}

uint64_t static GenerativeModelsLogging.summarization.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24577AD9C(&qword_257497E38, (uint64_t)qword_257498E30, a1);
}

uint64_t sub_24577AD54(uint64_t a1)
{
  return sub_24577AE28(a1, qword_257498E48);
}

uint64_t static GenerativeModelsLogging.classification.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24577AD9C(&qword_257497E40, (uint64_t)qword_257498E48, a1);
}

uint64_t sub_24577AD9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_2457BB08C();
  v6 = sub_24574E0F8(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_24577AE04(uint64_t a1)
{
  return sub_24577AE28(a1, qword_257498E60);
}

uint64_t sub_24577AE28(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_2457BB08C();
  sub_245756D18(v3, a2);
  sub_24574E0F8(v3, (uint64_t)a2);
  sub_2457BAED0();
  return sub_2457BB074();
}

uint64_t static GenerativeModelsLogging.generativeSession.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_24577AD9C(&qword_257497E48, (uint64_t)qword_257498E60, a1);
}

void MailMessage.SummarizationOptions.requestIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void MailMessage.SummarizationOptions.requestIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_2457805A4();
  *v1 = v2;
  v1[1] = v0;
  sub_245749FB4();
}

uint64_t (*MailMessage.SummarizationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void MailMessage.SummarizationOptions.requestedSummarizationStyles.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_24578086C();
  *(_QWORD *)(v1 + 16) = v0;
  sub_245748A90();
}

uint64_t (*MailMessage.SummarizationOptions.requestedSummarizationStyles.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t MailMessage.SummarizationOptions.isUserInitiated.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t MailMessage.SummarizationOptions.isUserInitiated.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*MailMessage.SummarizationOptions.isUserInitiated.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*MailMessage.SummarizationOptions.onBehalfOfProcess.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t MailMessage.SummarizationOptions.previousMessages.getter()
{
  return swift_bridgeObjectRetain();
}

void MailMessage.SummarizationOptions.previousMessages.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = a1;
  sub_245748A90();
}

uint64_t (*MailMessage.SummarizationOptions.previousMessages.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t MailMessage.SummarizationOptions.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24577B284((uint64_t)&unk_25168F880, a1);
}

uint64_t sub_24577AFB4()
{
  return 5;
}

uint64_t sub_24577AFBC(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_24577AFF4 + 4 * byte_2457C01E0[a1]))(0xD000000000000011, 0x80000002457C8FB0);
}

uint64_t sub_24577AFF4(uint64_t a1)
{
  return a1 + 11;
}

uint64_t sub_24577B04C()
{
  unsigned __int8 *v0;

  return sub_24577AFBC(*v0);
}

void sub_24577B054(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_24577B338(a1, a2);
  *a3 = v4;
}

uint64_t sub_24577B078@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24577AFB4();
  *a1 = result;
  return result;
}

uint64_t sub_24577B09C()
{
  sub_24577E0D8();
  return sub_2457BB788();
}

uint64_t sub_24577B0C4()
{
  sub_24577E0D8();
  return sub_2457BB794();
}

void MailMessage.SummarizationOptions.encode(to:)()
{
  sub_24577B584();
}

void MailMessage.SummarizationOptions.init(from:)()
{
  sub_24577B7CC();
}

void sub_24577B144()
{
  MailMessage.SummarizationOptions.init(from:)();
}

void sub_24577B158()
{
  MailMessage.SummarizationOptions.encode(to:)();
}

uint64_t (*MailMessage.ThreadSummarizationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*MailMessage.ThreadSummarizationOptions.requestedSummarizationStyles.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*MailMessage.ThreadSummarizationOptions.isUserInitiated.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsV17onBehalfOfProcessAA06ClientI4InfoVSgvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_DWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

void _s4Sage11MailMessageV20SummarizationOptionsV17onBehalfOfProcessAA06ClientI4InfoVSgvs_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_DWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v3;
  *(_DWORD *)(v1 + 48) = v4;
  sub_245749FB4();
}

uint64_t (*MailMessage.ThreadSummarizationOptions.onBehalfOfProcess.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*MailMessage.ThreadSummarizationOptions.previousMessages.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

__n128 _s4Sage11MailMessageV20SummarizationOptionsV17requestIdentifier09requestedD6Styles15isUserInitiated17onBehalfOfProcess16previousMessagesAESS_ShyAA0D6ClientC0D5StyleOGSbAA0sP4InfoVSgSayACGtcfC_0@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unsigned __int8 a4@<W3>, __n128 *a5@<X4>, unint64_t a6@<X5>, __n128 *a7@<X8>)
{
  unsigned __int32 v7;
  __n128 result;

  v7 = a5[1].n128_u32[0];
  a7->n128_u64[0] = a1;
  a7->n128_u64[1] = a2;
  a7[1].n128_u64[0] = a3;
  a7[1].n128_u8[8] = a4;
  result = *a5;
  a7[2] = *a5;
  a7[3].n128_u32[0] = v7;
  a7[3].n128_u64[1] = a6;
  return result;
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsV17requestIdentifier09requestedD6Styles16previousMessagesAESS_ShyAA0D6ClientC0D5StyleOGSayACGtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(_QWORD *)a5 = result;
  *(_QWORD *)(a5 + 8) = a2;
  *(_QWORD *)(a5 + 16) = a3;
  *(_BYTE *)(a5 + 24) = 0;
  *(_QWORD *)(a5 + 32) = 0;
  *(_QWORD *)(a5 + 40) = 0;
  *(_DWORD *)(a5 + 48) = 0;
  *(_QWORD *)(a5 + 56) = a4;
  return result;
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsV17requestIdentifier09requestedD6StylesAESS_ShyAA0D6ClientC0D5StyleOGtcfC_0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(_QWORD *)a4 = result;
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = a3;
  *(_BYTE *)(a4 + 24) = 0;
  *(_QWORD *)(a4 + 32) = 0;
  *(_QWORD *)(a4 + 40) = 0;
  *(_DWORD *)(a4 + 48) = 0;
  *(_QWORD *)(a4 + 56) = MEMORY[0x24BEE4AF8];
  return result;
}

uint64_t MailMessage.ThreadSummarizationOptions.init()@<X0>(uint64_t a1@<X8>)
{
  return sub_24577B284((uint64_t)&unk_25168FA80, a1);
}

uint64_t sub_24577B284@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v5 = sub_2457BAAD4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_245767B9C();
  v7 = sub_24577DF8C(a1);
  sub_2457BAAC8();
  v8 = sub_2457BAAA4();
  v10 = v9;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
  *(_QWORD *)a2 = v8;
  *(_QWORD *)(a2 + 8) = v10;
  *(_QWORD *)(a2 + 16) = v7;
  *(_BYTE *)(a2 + 24) = 0;
  *(_QWORD *)(a2 + 32) = 0;
  *(_QWORD *)(a2 + 40) = 0;
  *(_DWORD *)(a2 + 48) = 0;
  *(_QWORD *)(a2 + 56) = MEMORY[0x24BEE4AF8];
  return result;
}

void sub_24577B338(uint64_t a1, uint64_t a2)
{
  BOOL v4;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002457C8FB0
    || (sub_245780540() & 1) != 0
    || a1 == 0xD00000000000001CLL && a2 == 0x80000002457CA240
    || (sub_245780540() & 1) != 0
    || (a1 == 0x6E49726573557369 ? (v4 = a2 == 0xEF64657461697469) : (v4 = 0),
        v4
     || (sub_245780540() & 1) != 0
     || a1 == 0xD000000000000011 && a2 == 0x80000002457CA260
     || (sub_245780540() & 1) != 0
     || a1 == 0xD000000000000010 && a2 == 0x80000002457CA280))
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_245780540();
    sub_245751474();
  }
  sub_245749FB4();
}

uint64_t sub_24577B508()
{
  sub_24577E2F4();
  return sub_2457BB788();
}

uint64_t sub_24577B530()
{
  sub_24577E2F4();
  return sub_2457BB794();
}

void MailMessage.ThreadSummarizationOptions.encode(to:)()
{
  sub_24577B584();
}

void sub_24577B584()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(void);

  sub_245758054();
  v11 = v2;
  v4 = v3;
  v6 = sub_245748A50(v5);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v7);
  sub_245749FF4();
  v10 = v9 - v8;
  sub_245749280(v4, v4[3]);
  v11();
  sub_2457BB77C();
  sub_2457BB644();
  if (!v0)
  {
    sub_245748A50(&qword_257498E88);
    sub_24577E1C4((uint64_t)&unk_257498E90);
    sub_245780780();
    sub_2457BB68C();
    sub_2457BB650();
    sub_24577E150();
    sub_245780780();
    sub_2457BB638();
    sub_245748A50(&qword_257498EA8);
    sub_24577E29C((uint64_t)&unk_257498EB0);
    sub_245780780();
    sub_2457BB68C();
  }
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v10, v6);
  sub_245751240();
}

void MailMessage.ThreadSummarizationOptions.init(from:)()
{
  sub_24577B7CC();
}

void sub_24577B7CC()
{
  uint64_t v0;
  void (*v1)(void);
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;

  sub_245758054();
  v2 = v1;
  v4 = v3;
  v15 = v5;
  v16 = sub_245748A50(v6);
  v7 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  sub_245749280(v4, v4[3]);
  v2();
  sub_2457BB770();
  if (v0)
  {
    sub_245748AB0();
  }
  else
  {
    LOBYTE(v17) = 0;
    v8 = sub_2457BB584();
    v10 = v9;
    v14 = v8;
    sub_245748A50(&qword_257498E88);
    v11 = sub_24577E1C4((uint64_t)&unk_257498EC0);
    swift_bridgeObjectRetain();
    sub_245780824();
    if (v11)
    {
      sub_245750FA0(*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8));
      sub_245751420();
      sub_245748AB0();
      sub_245751420();
    }
    else
    {
      v12 = v17;
      LOBYTE(v17) = 2;
      swift_bridgeObjectRetain();
      v13 = sub_2457BB590();
      sub_24577E260();
      sub_2457BB578();
      sub_245748A50(&qword_257498EA8);
      sub_24577E29C((uint64_t)&unk_257498ED8);
      sub_245780898();
      sub_245780824();
      sub_2457807B0();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_2457513E4();
      sub_245751420();
      sub_24577ACAC();
      *(_QWORD *)v15 = v14;
      *(_QWORD *)(v15 + 8) = v10;
      *(_QWORD *)(v15 + 16) = v12;
      *(_BYTE *)(v15 + 24) = v13 & 1;
      *(_QWORD *)(v15 + 32) = v17;
      *(_QWORD *)(v15 + 40) = v18;
      *(_DWORD *)(v15 + 48) = v19;
      *(_QWORD *)(v15 + 56) = v17;
      sub_245780768();
      sub_2457512F4();
      sub_24577ACAC();
    }
  }
  swift_bridgeObjectRelease();
  sub_245751240();
}

void sub_24577BAD4()
{
  MailMessage.ThreadSummarizationOptions.init(from:)();
}

void sub_24577BAE8()
{
  MailMessage.ThreadSummarizationOptions.encode(to:)();
}

void MailMessage.ClassificationOptions.requestIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void MailMessage.ClassificationOptions.requestIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_2457805A4();
  *v1 = v2;
  v1[1] = v0;
  sub_245749FB4();
}

uint64_t (*MailMessage.ClassificationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t MailMessage.ClassificationOptions.isSenderImportant.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t MailMessage.ClassificationOptions.isSenderImportant.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*MailMessage.ClassificationOptions.isSenderImportant.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t MailMessage.ClassificationOptions.previousMessages.getter()
{
  return swift_bridgeObjectRetain();
}

void MailMessage.ClassificationOptions.previousMessages.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  sub_245748A90();
}

uint64_t (*MailMessage.ClassificationOptions.previousMessages.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::MailMessage::ClassificationOptions __swiftcall MailMessage.ClassificationOptions.init(requestIdentifier:isSenderImportant:previousMessages:)(Sage::MailMessage::ClassificationOptions requestIdentifier, Swift::Bool_optional isSenderImportant, Swift::OpaquePointer previousMessages)
{
  uint64_t v3;

  *(Swift::String *)v3 = requestIdentifier.requestIdentifier;
  *(Swift::Bool_optional *)(v3 + 16) = isSenderImportant;
  *(Swift::OpaquePointer *)(v3 + 24) = previousMessages;
  requestIdentifier.previousMessages = previousMessages;
  requestIdentifier.isSenderImportant = isSenderImportant;
  return requestIdentifier;
}

Sage::MailMessage::ClassificationOptions __swiftcall MailMessage.ClassificationOptions.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Swift::Bool v10;
  void *v11;
  Sage::MailMessage::ClassificationOptions result;

  v2 = v0;
  v3 = sub_2457BAAD4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_245767B9C();
  sub_2457BAAC8();
  v5 = sub_2457BAAA4();
  v7 = v6;
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  *(_QWORD *)v2 = v5;
  *(_QWORD *)(v2 + 8) = v7;
  *(_BYTE *)(v2 + 16) = 2;
  *(_QWORD *)(v2 + 24) = MEMORY[0x24BEE4AF8];
  result.previousMessages._rawValue = v11;
  result.requestIdentifier._object = v9;
  result.requestIdentifier._countAndFlagsBits = v8;
  result.isSenderImportant.value = v10;
  return result;
}

uint64_t sub_24577BC4C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002457C8FB0 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002457CA2A0 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002457CA280)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_24577BD88(unsigned __int8 a1)
{
  unint64_t result;

  result = 0xD000000000000011;
  if (a1 >= 2u)
    return 0xD000000000000010;
  return result;
}

unint64_t sub_24577BDE4()
{
  unsigned __int8 *v0;

  return sub_24577BD88(*v0);
}

uint64_t sub_24577BDEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24577BC4C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24577BE10()
{
  sub_24577E330();
  return sub_2457BB788();
}

uint64_t sub_24577BE38()
{
  sub_24577E330();
  return sub_2457BB794();
}

void MailMessage.ClassificationOptions.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_245758054();
  v3 = v2;
  v4 = sub_245748A50(&qword_257498EF8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_24575136C();
  sub_245749280(v3, v3[3]);
  sub_24577E330();
  sub_2457BB77C();
  sub_2457BB644();
  if (!v0)
  {
    sub_2457807F8();
    sub_2457BB614();
    sub_245748A50(&qword_257498EA8);
    sub_24577E29C((uint64_t)&unk_257498EB0);
    sub_245780550();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_245751240();
}

void MailMessage.ClassificationOptions.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  sub_245758054();
  v2 = v1;
  sub_245748A50(&qword_257498F08);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v3);
  sub_245780584();
  sub_24577E330();
  sub_24578064C();
  if (v0)
  {
    sub_245748AB0();
  }
  else
  {
    v4 = sub_24578083C();
    v6 = v5;
    sub_2457807F8();
    swift_bridgeObjectRetain();
    v8 = sub_2457BB554();
    sub_245748A50(&qword_257498EA8);
    sub_24577E29C((uint64_t)&unk_257498ED8);
    sub_245780830();
    sub_245780530();
    *(_QWORD *)v2 = v4;
    *(_QWORD *)(v2 + 8) = v6;
    *(_BYTE *)(v2 + 16) = v8;
    *(_QWORD *)(v2 + 24) = v7;
    sub_2457513E4();
    sub_245780768();
    sub_2457512F4();
  }
  sub_245751240();
}

void sub_24577C144()
{
  MailMessage.ClassificationOptions.init(from:)();
}

void sub_24577C158()
{
  MailMessage.ClassificationOptions.encode(to:)();
}

void MailMessage.ThreadClassificationOptions.requestIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void MailMessage.ThreadClassificationOptions.requestIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_2457805A4();
  *v1 = v2;
  v1[1] = v0;
  sub_245749FB4();
}

uint64_t (*MailMessage.ThreadClassificationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void MailMessage.ThreadClassificationOptions.previousMessages.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_24578086C();
  *(_QWORD *)(v1 + 16) = v0;
  sub_245748A90();
}

uint64_t (*MailMessage.ThreadClassificationOptions.previousMessages.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::MailMessage::ThreadClassificationOptions __swiftcall MailMessage.ThreadClassificationOptions.init(requestIdentifier:previousMessages:)(Swift::String requestIdentifier, Swift::OpaquePointer previousMessages)
{
  uint64_t v2;
  Sage::MailMessage::ThreadClassificationOptions result;

  *(Swift::String *)v2 = requestIdentifier;
  *(Swift::OpaquePointer *)(v2 + 16) = previousMessages;
  result.requestIdentifier = requestIdentifier;
  result.previousMessages = previousMessages;
  return result;
}

uint64_t sub_24577C1F8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002457C8FB0 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002457CA280)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_24577C2E0(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000010;
  else
    return 0xD000000000000011;
}

unint64_t sub_24577C31C()
{
  char *v0;

  return sub_24577C2E0(*v0);
}

uint64_t sub_24577C324@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24577C1F8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24577C348()
{
  sub_24577E36C();
  return sub_2457BB788();
}

uint64_t sub_24577C370()
{
  sub_24577E36C();
  return sub_2457BB794();
}

void MailMessage.ThreadClassificationOptions.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_245758054();
  v2 = v1;
  v4 = *(_QWORD *)(sub_245748A50(&qword_257498F10) - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245749280(v2, v2[3]);
  sub_24577E36C();
  sub_245780740();
  sub_2457513AC();
  if (!v0)
  {
    sub_2457807F8();
    sub_245748A50(&qword_257498EA8);
    sub_24577E29C((uint64_t)&unk_257498EB0);
    sub_245780550();
  }
  sub_24578072C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_245751240();
}

void MailMessage.ThreadClassificationOptions.init(from:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  sub_245758054();
  v2 = v1;
  sub_245748A50(&qword_257498F20);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v3);
  sub_245780584();
  sub_24577E36C();
  sub_24578064C();
  if (v0)
  {
    sub_245748AB0();
  }
  else
  {
    v4 = sub_24578083C();
    v6 = v5;
    sub_245748A50(&qword_257498EA8);
    sub_2457807F8();
    sub_24577E29C((uint64_t)&unk_257498ED8);
    sub_245780898();
    sub_245780830();
    sub_245748AC0();
    *v2 = v4;
    v2[1] = v6;
    v2[2] = v7;
    sub_2457513E4();
    sub_245780768();
    sub_2457512F4();
  }
  sub_245751240();
}

void sub_24577C5F8()
{
  MailMessage.ThreadClassificationOptions.init(from:)();
}

void sub_24577C60C()
{
  MailMessage.ThreadClassificationOptions.encode(to:)();
}

void MailMessage.VisualPromptOptions.useCase.getter(_BYTE *a1@<X8>)
{
  sub_24578081C(a1);
}

uint64_t (*MailMessage.VisualPromptOptions.useCase.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t MailMessage.VisualPromptOptions.extractVisualConcepts.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t MailMessage.VisualPromptOptions.extractVisualConcepts.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*MailMessage.VisualPromptOptions.extractVisualConcepts.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t MailMessage.VisualPromptOptions.extractVisualTopLine.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t MailMessage.VisualPromptOptions.extractVisualTopLine.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*MailMessage.VisualPromptOptions.extractVisualTopLine.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::MailMessage::VisualPromptOptions __swiftcall MailMessage.VisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  uint64_t v1;
  Sage::MailMessage::VisualPromptOptions result;

  *(_BYTE *)v1 = *(_BYTE *)useCase;
  *(_WORD *)(v1 + 1) = 1;
  result.useCase = useCase;
  return result;
}

uint64_t sub_24577C690(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65736143657375 && a2 == 0xE700000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002457CA2C0 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000002457CA2E0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_24577C7D8(char a1)
{
  if (!a1)
    return 0x65736143657375;
  if (a1 == 1)
    return 0xD000000000000015;
  return 0xD000000000000014;
}

uint64_t sub_24577C83C()
{
  char *v0;

  return sub_24577C7D8(*v0);
}

uint64_t sub_24577C844@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24577C690(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24577C868()
{
  sub_24577E3A8();
  return sub_2457BB788();
}

uint64_t sub_24577C890()
{
  sub_24577E3A8();
  return sub_2457BB794();
}

void MailMessage.VisualPromptOptions.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_245758054();
  v2 = v1;
  v3 = sub_245748A50(&qword_257498F28);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245749280(v2, v2[3]);
  sub_24577E3A8();
  sub_245780740();
  sub_24577E3E4();
  sub_2457BB68C();
  if (!v0)
  {
    sub_2457807A0();
    sub_2457807A0();
  }
  sub_24578072C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_245751240();
}

void MailMessage.VisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;

  sub_245758054();
  v15 = v14;
  sub_245748A50(&qword_257498F40);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v16);
  sub_245780584();
  sub_24577E3A8();
  sub_24578064C();
  if (!v13)
  {
    sub_24577E420();
    sub_2457806C4();
    v17 = sub_2457807C0();
    v18 = sub_2457807C0();
    sub_245780530();
    *v15 = a13;
    v15[1] = v17 & 1;
    v15[2] = v18 & 1;
  }
  sub_245748AB0();
  sub_245751240();
}

void sub_24577CAEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  MailMessage.VisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_24577CB00()
{
  MailMessage.VisualPromptOptions.encode(to:)();
}

void MailMessage.ThreadVisualPromptOptions.useCase.getter(_BYTE *a1@<X8>)
{
  sub_24578081C(a1);
}

uint64_t (*MailMessage.ThreadVisualPromptOptions.useCase.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::MailMessage::ThreadVisualPromptOptions __swiftcall MailMessage.ThreadVisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  _BYTE *v1;
  Sage::MailMessage::ThreadVisualPromptOptions result;

  sub_24578081C(v1);
  return result;
}

uint64_t sub_24577CB38(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x65736143657375 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_24577CBBC()
{
  return 0x65736143657375;
}

uint64_t sub_24577CBD4()
{
  sub_2457BB728();
  sub_2457BB734();
  return sub_2457BB764();
}

uint64_t sub_24577CC14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24577CB38(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_24577CC3C()
{
  sub_24577E45C();
  return sub_2457BB788();
}

uint64_t sub_24577CC64()
{
  sub_24577E45C();
  return sub_2457BB794();
}

void MailMessage.ThreadVisualPromptOptions.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_245758054();
  v1 = v0;
  v2 = sub_245748A50(&qword_257498F50);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_245748AD0();
  sub_245749280(v1, v1[3]);
  sub_24577E45C();
  sub_2457807E8();
  sub_24577E3E4();
  sub_2457BB68C();
  sub_245780848(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_245751240();
}

void MailMessage.ThreadVisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;

  sub_245758054();
  v16 = v15;
  sub_245748A50(&qword_257498F60);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v17);
  sub_245748AD0();
  sub_245780584();
  sub_24577E45C();
  sub_24578064C();
  if (!v13)
  {
    sub_24577E420();
    sub_2457BB5CC();
    sub_245780848(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    *v16 = a13;
  }
  sub_245748AB0();
  sub_245751240();
}

void sub_24577CE0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  MailMessage.ThreadVisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_24577CE20()
{
  MailMessage.ThreadVisualPromptOptions.encode(to:)();
}

void MailMessage.messageID.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void MailMessage.messageID.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_2457805A4();
  *v1 = v2;
  v1[1] = v0;
  sub_245749FB4();
}

uint64_t (*MailMessage.messageID.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t MailMessage.sender.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v8 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v7;
  swift_bridgeObjectRetain();
  sub_245778A84(v3, v4, v8);
  return swift_bridgeObjectRetain();
}

__n128 MailMessage.sender.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  __n128 result;
  unsigned __int8 v11;
  __n128 v12;

  v12 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = a1[2].n128_u64[1];
  v6 = a1[3].n128_u64[0];
  v11 = a1[3].n128_u8[8];
  v7 = v1[2].n128_i64[0];
  v8 = v1[2].n128_i64[1];
  v9 = v1[3].n128_u8[0];
  swift_bridgeObjectRelease();
  sub_245778A98(v7, v8, v9);
  swift_bridgeObjectRelease();
  result = v12;
  v1[1] = v12;
  v1[2].n128_u64[0] = v2;
  v1[2].n128_u64[1] = v3;
  v1[3].n128_u8[0] = v4;
  v1[3].n128_u64[1] = v5;
  v1[4].n128_u64[0] = v6;
  v1[4].n128_u8[8] = v11;
  return result;
}

uint64_t (*MailMessage.sender.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t MailMessage.recipients.getter()
{
  return swift_bridgeObjectRetain();
}

void MailMessage.recipients.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  sub_245748A90();
}

uint64_t (*MailMessage.recipients.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t MailMessage.dateReceived.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_245780528();
  sub_2457806FC();
  v0 = sub_245748AA4();
  return sub_24574A004(v0, v1, v2, v3);
}

uint64_t MailMessage.dateReceived.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(sub_245780528() + 28);
  v4 = sub_2457806FC();
  return sub_24574A004(v3, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 40));
}

uint64_t (*MailMessage.dateReceived.modify())(_QWORD, _QWORD)
{
  sub_245780528();
  return nullsub_1;
}

uint64_t MailMessage.isUnread.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(sub_245780528() + 32));
}

void MailMessage.isUnread.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(sub_245780528() + 32)) = a1;
  sub_245748A90();
}

uint64_t (*MailMessage.isUnread.modify())(_QWORD, _QWORD)
{
  sub_245780528();
  return nullsub_1;
}

void MailMessage.subject.getter()
{
  sub_245780528();
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void MailMessage.subject.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_245780528();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*MailMessage.subject.modify())(_QWORD, _QWORD)
{
  sub_245780528();
  return nullsub_1;
}

void MailMessage.body.getter()
{
  sub_245780528();
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void MailMessage.body.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_245780528();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*MailMessage.body.modify())(_QWORD, _QWORD)
{
  sub_245780528();
  return nullsub_1;
}

uint64_t MailMessage.attachments.getter()
{
  sub_245780528();
  return swift_bridgeObjectRetain();
}

void MailMessage.attachments.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_245780528() + 44);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  sub_245749FB4();
}

uint64_t (*MailMessage.attachments.modify())(_QWORD, _QWORD)
{
  sub_245780528();
  return nullsub_1;
}

uint64_t MailMessage.init(messageID:sender:recipients:dateReceived:isUnread:subject:body:attachments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  int *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  __int128 v25;

  v25 = *a3;
  v13 = *((_QWORD *)a3 + 2);
  v14 = *((_QWORD *)a3 + 3);
  v15 = *((_BYTE *)a3 + 32);
  v16 = *((_QWORD *)a3 + 5);
  v17 = *((_QWORD *)a3 + 6);
  v18 = *((_BYTE *)a3 + 56);
  v19 = (int *)sub_245780528();
  v20 = (_QWORD *)(a9 + v19[9]);
  v21 = (_QWORD *)(a9 + v19[10]);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_OWORD *)(a9 + 16) = v25;
  *(_QWORD *)(a9 + 32) = v13;
  *(_QWORD *)(a9 + 40) = v14;
  *(_BYTE *)(a9 + 48) = v15;
  *(_QWORD *)(a9 + 56) = v16;
  *(_QWORD *)(a9 + 64) = v17;
  *(_BYTE *)(a9 + 72) = v18;
  *(_QWORD *)(a9 + 80) = a4;
  v22 = a9 + v19[7];
  v23 = sub_2457806FC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v22, a5, v23);
  *(_BYTE *)(a9 + v19[8]) = a6;
  *v20 = a7;
  v20[1] = a8;
  *v21 = a10;
  v21[1] = a11;
  *(_QWORD *)(a9 + v19[11]) = a12;
  return result;
}

uint64_t sub_24577D35C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  char v13;

  v2 = a1 == 0x496567617373656DLL && a2 == 0xE900000000000044;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E65697069636572 && a2 == 0xEA00000000007374;
      if (v7 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6563655265746164 && a2 == 0xEC00000064657669;
        if (v8 || (sub_2457BB6B0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x646165726E557369 && a2 == 0xE800000000000000;
          if (v9 || (sub_2457BB6B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x7463656A627573 && a2 == 0xE700000000000000;
            if (v10 || (sub_2457BB6B0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 2036625250 && a2 == 0xE400000000000000;
              if (v11 || (sub_2457BB6B0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else if (a1 == 0x656D686361747461 && a2 == 0xEB0000000073746ELL)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v13 = sub_2457BB6B0();
                swift_bridgeObjectRelease();
                if ((v13 & 1) != 0)
                  return 7;
                else
                  return 8;
              }
            }
          }
        }
      }
    }
  }
}

void sub_24577D6B8()
{
  sub_2457BB728();
  sub_2457BB734();
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_24577D6F0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24577D728 + 4 * byte_2457C01E5[a1]))(0x496567617373656DLL, 0xE900000000000044);
}

uint64_t sub_24577D728()
{
  return 0x7265646E6573;
}

uint64_t sub_24577D73C()
{
  return 0x6E65697069636572;
}

uint64_t sub_24577D758()
{
  return 0x6563655265746164;
}

uint64_t sub_24577D778()
{
  return 0x646165726E557369;
}

uint64_t sub_24577D790()
{
  return 0x7463656A627573;
}

uint64_t sub_24577D7A8()
{
  return 2036625250;
}

uint64_t sub_24577D7B8()
{
  return 0x656D686361747461;
}

void sub_24577D7D8()
{
  sub_24577D6B8();
}

uint64_t sub_24577D7F0()
{
  unsigned __int8 *v0;

  return sub_24577D6F0(*v0);
}

uint64_t sub_24577D7F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24577D35C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24577D81C()
{
  sub_24577E498();
  return sub_2457BB788();
}

uint64_t sub_24577D844()
{
  sub_24577E498();
  return sub_2457BB794();
}

uint64_t MailMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = sub_245748A50(&qword_257498F68);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245749280(a1, a1[3]);
  sub_24577E498();
  sub_2457807E8();
  sub_2457513AC();
  if (!v1)
  {
    sub_24577E4D4();
    sub_245780790();
    sub_245780550();
    sub_245748A50(&qword_257498F80);
    sub_24577E1C4((uint64_t)&unk_257498F88);
    sub_245780790();
    sub_245780550();
    type metadata accessor for MailMessage();
    sub_2457BAA98();
    sub_2457804C0((uint64_t)&unk_257498F90);
    sub_245780550();
    sub_2457BB650();
    sub_245780668(5);
    sub_245780668(6);
    sub_245748A50(&qword_257498F98);
    sub_24577E510((uint64_t)&unk_257498FA0);
    sub_245780790();
    sub_245780550();
  }
  return sub_24578072C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
}

void MailMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  __int128 v25;
  __int128 v26;
  char v27;
  __int128 v28;
  char v29;

  sub_245758054();
  v3 = v2;
  v18 = v4;
  v5 = sub_2457BAA98();
  v21 = *(_QWORD *)(v5 - 8);
  v22 = v5;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_245749FF4();
  v9 = v8 - v7;
  v19 = sub_245748A50(&qword_257498FB0);
  v10 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  sub_245749FF4();
  type metadata accessor for MailMessage();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v11);
  sub_24575136C();
  v13 = (uint64_t *)(v1 + v12[9]);
  *v13 = 0;
  v13[1] = 0;
  v24 = v13;
  v20 = v12;
  v14 = (uint64_t *)(v1 + v12[10]);
  *v14 = 0;
  v14[1] = 0;
  v23 = v14;
  sub_245749280(v3, v3[3]);
  sub_24577E498();
  sub_2457BB770();
  if (v0)
  {
    sub_2457808B8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v25) = 0;
    *(_QWORD *)v1 = sub_2457BB584();
    *(_QWORD *)(v1 + 8) = v15;
    sub_24577E568();
    sub_2457806C4();
    *(_OWORD *)(v1 + 16) = v25;
    *(_OWORD *)(v1 + 32) = v26;
    *(_BYTE *)(v1 + 48) = v27;
    *(_OWORD *)(v1 + 56) = v28;
    *(_BYTE *)(v1 + 72) = v29;
    sub_245748A50(&qword_257498F80);
    sub_24577E1C4((uint64_t)&unk_257498FC0);
    sub_2457806C4();
    *(_QWORD *)(v1 + 80) = v25;
    sub_2457804C0((uint64_t)&unk_257498FC8);
    sub_2457806C4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 32))(v1 + v20[7], v9, v22);
    LOBYTE(v25) = 4;
    *(_BYTE *)(v1 + v20[8]) = sub_2457BB590() & 1;
    *v24 = sub_245780718(5);
    v24[1] = v16;
    *v23 = sub_245780718(6);
    v23[1] = v17;
    sub_245748A50(&qword_257498F98);
    sub_24577E510((uint64_t)&unk_257498FD0);
    sub_2457806C4();
    sub_245750FA0(*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    *(_QWORD *)(v1 + v20[11]) = v25;
    sub_24577E5A4(v1, v18);
    sub_2457808B8();
    sub_24577E5E8(v1);
  }
  sub_245751240();
}

void sub_24577DF40()
{
  MailMessage.init(from:)();
}

uint64_t sub_24577DF54(_QWORD *a1)
{
  return MailMessage.encode(to:)(a1);
}

Sage::MailMessage::VisualPromptOptions __swiftcall MailMessage.VisualPromptOptions.init()()
{
  uint64_t v0;
  Sage::MailMessage::VisualPromptOptions result;

  *(_WORD *)v0 = 259;
  *(_BYTE *)(v0 + 2) = 0;
  return result;
}

Sage::MailMessage::VisualPromptOptions __swiftcall MailMessage.VisualPromptOptions.init(extractVisualConcepts:extractVisualTopLine:)(Swift::Bool extractVisualConcepts, Swift::Bool extractVisualTopLine)
{
  _BYTE *v2;
  Sage::MailMessage::VisualPromptOptions result;

  *v2 = 3;
  v2[1] = extractVisualConcepts;
  v2[2] = extractVisualTopLine;
  result.useCase = extractVisualConcepts;
  return result;
}

uint64_t sub_24577DF8C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = MEMORY[0x24BEE4B08];
    goto LABEL_16;
  }
  sub_245748A50(&qword_257499108);
  result = sub_245780658();
  v3 = result;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_16:
    sub_245751474();
    return v3;
  }
  v5 = 0;
  v6 = result + 56;
  while (v5 < *(_QWORD *)(a1 + 16))
  {
    v7 = *(unsigned __int8 *)(a1 + 32 + v5);
    sub_2457BB728();
    sub_2457BB734();
    result = sub_2457513DC();
    v8 = -1 << *(_BYTE *)(v3 + 32);
    v9 = result & ~v8;
    v10 = v9 >> 6;
    v11 = *(_QWORD *)(v6 + 8 * (v9 >> 6));
    v12 = 1 << v9;
    v13 = *(_QWORD *)(v3 + 48);
    if (((1 << v9) & v11) != 0)
    {
      if (*(unsigned __int8 *)(v13 + v9) == v7)
        goto LABEL_13;
      v14 = ~v8;
      while (1)
      {
        v9 = (v9 + 1) & v14;
        v10 = v9 >> 6;
        v11 = *(_QWORD *)(v6 + 8 * (v9 >> 6));
        v12 = 1 << v9;
        if ((v11 & (1 << v9)) == 0)
          break;
        if (*(unsigned __int8 *)(v13 + v9) == v7)
          goto LABEL_13;
      }
    }
    *(_QWORD *)(v6 + 8 * v10) = v12 | v11;
    *(_BYTE *)(v13 + v9) = v7;
    v15 = *(_QWORD *)(v3 + 16);
    v16 = __OFADD__(v15, 1);
    v17 = v15 + 1;
    if (v16)
      goto LABEL_18;
    *(_QWORD *)(v3 + 16) = v17;
LABEL_13:
    if (++v5 == v4)
      goto LABEL_16;
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

unint64_t sub_24577E0D8()
{
  unint64_t result;

  result = qword_257498E80;
  if (!qword_257498E80)
  {
    result = MEMORY[0x24953B288](&unk_2457C0D40, &type metadata for MailMessage.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498E80);
  }
  return result;
}

unint64_t sub_24577E114()
{
  unint64_t result;

  result = qword_257498E98;
  if (!qword_257498E98)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.SummarizationStyle, &type metadata for SummarizationClient.SummarizationStyle);
    atomic_store(result, (unint64_t *)&qword_257498E98);
  }
  return result;
}

unint64_t sub_24577E150()
{
  unint64_t result;

  result = qword_257498EA0;
  if (!qword_257498EA0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClientProcessInfo, &type metadata for ClientProcessInfo);
    atomic_store(result, (unint64_t *)&qword_257498EA0);
  }
  return result;
}

uint64_t type metadata accessor for MailMessage()
{
  uint64_t result;

  result = qword_257499020;
  if (!qword_257499020)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_24577E1C4(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t *v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t v8;
  uint64_t v9;

  result = sub_245780878(a1);
  if (!result)
  {
    v6 = v5;
    v7 = v4;
    v8 = sub_24574B5EC(v3);
    v9 = v7();
    result = MEMORY[0x24953B288](v6, v8, &v9);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_24577E224()
{
  unint64_t result;

  result = qword_257498EC8;
  if (!qword_257498EC8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.SummarizationStyle, &type metadata for SummarizationClient.SummarizationStyle);
    atomic_store(result, (unint64_t *)&qword_257498EC8);
  }
  return result;
}

unint64_t sub_24577E260()
{
  unint64_t result;

  result = qword_257498ED0;
  if (!qword_257498ED0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for ClientProcessInfo, &type metadata for ClientProcessInfo);
    atomic_store(result, (unint64_t *)&qword_257498ED0);
  }
  return result;
}

void sub_24577E29C(uint64_t a1)
{
  if (!sub_245780878(a1))
  {
    sub_24574B5EC(&qword_257498EA8);
    sub_245780860();
    sub_245780754();
  }
  sub_2457806B0();
}

unint64_t sub_24577E2F4()
{
  unint64_t result;

  result = qword_257498EE8;
  if (!qword_257498EE8)
  {
    result = MEMORY[0x24953B288](&unk_2457C0CF0, &type metadata for MailMessage.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498EE8);
  }
  return result;
}

unint64_t sub_24577E330()
{
  unint64_t result;

  result = qword_257498F00;
  if (!qword_257498F00)
  {
    result = MEMORY[0x24953B288](&unk_2457C0CA0, &type metadata for MailMessage.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498F00);
  }
  return result;
}

unint64_t sub_24577E36C()
{
  unint64_t result;

  result = qword_257498F18;
  if (!qword_257498F18)
  {
    result = MEMORY[0x24953B288](&unk_2457C0C50, &type metadata for MailMessage.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498F18);
  }
  return result;
}

unint64_t sub_24577E3A8()
{
  unint64_t result;

  result = qword_257498F30;
  if (!qword_257498F30)
  {
    result = MEMORY[0x24953B288](&unk_2457C0C00, &type metadata for MailMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498F30);
  }
  return result;
}

unint64_t sub_24577E3E4()
{
  unint64_t result;

  result = qword_257498F38;
  if (!qword_257498F38)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.VisualPromptUseCase, &type metadata for SummarizationClient.VisualPromptUseCase);
    atomic_store(result, (unint64_t *)&qword_257498F38);
  }
  return result;
}

unint64_t sub_24577E420()
{
  unint64_t result;

  result = qword_257498F48;
  if (!qword_257498F48)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.VisualPromptUseCase, &type metadata for SummarizationClient.VisualPromptUseCase);
    atomic_store(result, (unint64_t *)&qword_257498F48);
  }
  return result;
}

unint64_t sub_24577E45C()
{
  unint64_t result;

  result = qword_257498F58;
  if (!qword_257498F58)
  {
    result = MEMORY[0x24953B288](&unk_2457C0BB0, &type metadata for MailMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498F58);
  }
  return result;
}

unint64_t sub_24577E498()
{
  unint64_t result;

  result = qword_257498F70;
  if (!qword_257498F70)
  {
    result = MEMORY[0x24953B288](&unk_2457C0B60, &type metadata for MailMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257498F70);
  }
  return result;
}

unint64_t sub_24577E4D4()
{
  unint64_t result;

  result = qword_257498F78;
  if (!qword_257498F78)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for Handle, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_257498F78);
  }
  return result;
}

void sub_24577E510(uint64_t a1)
{
  if (!sub_245780878(a1))
  {
    sub_24574B5EC(&qword_257498F98);
    sub_245780860();
    sub_245780754();
  }
  sub_2457806B0();
}

unint64_t sub_24577E568()
{
  unint64_t result;

  result = qword_257498FB8;
  if (!qword_257498FB8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for Handle, &type metadata for Handle);
    atomic_store(result, (unint64_t *)&qword_257498FB8);
  }
  return result;
}

uint64_t sub_24577E5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MailMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24577E5E8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MailMessage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_24577E630()
{
  unint64_t result;

  result = qword_257498FE0;
  if (!qword_257498FE0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.SummarizationOptions, &type metadata for MailMessage.SummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_257498FE0);
  }
  return result;
}

unint64_t sub_24577E670()
{
  unint64_t result;

  result = qword_257498FE8;
  if (!qword_257498FE8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.SummarizationOptions, &type metadata for MailMessage.SummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_257498FE8);
  }
  return result;
}

unint64_t sub_24577E6B8()
{
  unint64_t result;

  result = qword_257498FF0;
  if (!qword_257498FF0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.ThreadSummarizationOptions, &type metadata for MailMessage.ThreadSummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_257498FF0);
  }
  return result;
}

unint64_t sub_24577E6F8()
{
  unint64_t result;

  result = qword_257498FF8;
  if (!qword_257498FF8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.ThreadSummarizationOptions, &type metadata for MailMessage.ThreadSummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_257498FF8);
  }
  return result;
}

unint64_t sub_24577E73C()
{
  unint64_t result;

  result = qword_257499000;
  if (!qword_257499000)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.ThreadVisualPromptOptions, &type metadata for MailMessage.ThreadVisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499000);
  }
  return result;
}

unint64_t sub_24577E77C()
{
  unint64_t result;

  result = qword_257499008;
  if (!qword_257499008)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.ThreadVisualPromptOptions, &type metadata for MailMessage.ThreadVisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499008);
  }
  return result;
}

unint64_t sub_24577E7BC()
{
  unint64_t result;

  result = qword_257499010;
  if (!qword_257499010)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.VisualPromptOptions, &type metadata for MailMessage.VisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499010);
  }
  return result;
}

unint64_t sub_24577E7FC()
{
  unint64_t result;

  result = qword_257499018;
  if (!qword_257499018)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for MailMessage.VisualPromptOptions, &type metadata for MailMessage.VisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499018);
  }
  return result;
}

void sub_24577E838(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_2457804C0((uint64_t)&unk_257498108);
  *(_QWORD *)(a1 + 8) = v2;
  sub_2457804C0((uint64_t)&qword_257498050);
  *(_QWORD *)(a1 + 16) = v3;
  sub_245748A90();
}

uint64_t initializeBufferWithCopyOfBuffer for MailMessage(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = *((unsigned __int8 *)a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9 == 255)
    {
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    }
    else
    {
      v10 = a2[4];
      v11 = a2[5];
      sub_24574E938(v10, v11, v9);
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v11;
      *(_BYTE *)(a1 + 48) = v9;
    }
    v13 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v13;
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 80) = a2[10];
    v14 = a3[7];
    v15 = a1 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_2457BAA98();
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    v19 = a3[9];
    *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v20 = (_QWORD *)(a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[10];
    v24 = a3[11];
    v25 = (_QWORD *)(a1 + v23);
    v26 = (uint64_t *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(_QWORD *)(a1 + v24) = *(uint64_t *)((char *)a2 + v24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for MailMessage(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(unsigned __int8 *)(a1 + 48);
  if (v4 != 255)
    sub_24574EBF0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for MailMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    sub_24574E938(v9, v10, v8);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = v8;
  }
  v11 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_2457BAA98();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[10];
  v22 = a3[11];
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailMessage(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 *v6;
  __int128 *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 32);
  v7 = (__int128 *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v8 == 255)
    {
      v17 = *v7;
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *v6 = v17;
    }
    else
    {
      v14 = *(_QWORD *)(a2 + 32);
      v15 = *(_QWORD *)(a2 + 40);
      sub_24574E938(v14, v15, *(_BYTE *)(a2 + 48));
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v15;
      *(_BYTE *)(a1 + 48) = v8;
    }
  }
  else if (v8 == 255)
  {
    sub_245778D50(a1 + 32);
    v16 = *(_BYTE *)(a2 + 48);
    *v6 = *v7;
    *(_BYTE *)(a1 + 48) = v16;
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    sub_24574E938(v9, v10, *(_BYTE *)(a2 + 48));
    v11 = *(_QWORD *)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    v13 = *(_BYTE *)(a1 + 48);
    *(_BYTE *)(a1 + 48) = v8;
    sub_24574EBF0(v11, v12, v13);
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for MailMessage(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 57);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v9 = a3[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 57) = v8;
  v12 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  return a1;
}

uint64_t assignWithTake for MailMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = (_OWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a1 + 48);
  if (v9 == 255)
    goto LABEL_5;
  v10 = *(unsigned __int8 *)(a2 + 48);
  if (v10 == 255)
  {
    sub_245778D50(a1 + 32);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *v8;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v8;
  *(_BYTE *)(a1 + 48) = v10;
  sub_24574EBF0(v11, v12, v9);
LABEL_6:
  v13 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v13;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MailMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_24577F008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_245749FB4();
  }
  else
  {
    v6 = sub_2457806FC();
    _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for MailMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_24577F07C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_245749FB4();
  }
  else
  {
    v7 = sub_2457806FC();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

uint64_t sub_24577F0DC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2457BAA98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 initializeWithTake for MailMessage.SummarizationOptions(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void type metadata accessor for MailMessage.SummarizationOptions()
{
  sub_245751428();
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s4Sage11MailMessageV20SummarizationOptionsVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2457807D0(a1, a2);
  *(_BYTE *)(v2 + 24) = *(_BYTE *)(v3 + 24);
  v4 = *(_QWORD *)(v3 + 40);
  *(_QWORD *)(v2 + 32) = *(_QWORD *)(v3 + 32);
  *(_QWORD *)(v2 + 40) = v4;
  *(_DWORD *)(v2 + 48) = *(_DWORD *)(v3 + 48);
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(v3 + 56);
  swift_bridgeObjectRetain();
  sub_2457513E4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_245749FB4();
}

void _s4Sage11MailMessageV20SummarizationOptionsVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2457808A4(a1, a2);
  *(_QWORD *)(v3 + 8) = *(_QWORD *)(v4 + 8);
  swift_bridgeObjectRetain();
  sub_2457513F4();
  *(_QWORD *)(v3 + 16) = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  sub_2457513F4();
  *(_BYTE *)(v3 + 24) = *(_BYTE *)(v2 + 24);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v3 + 40) = *(_QWORD *)(v2 + 40);
  swift_bridgeObjectRetain();
  sub_2457513F4();
  *(_DWORD *)(v3 + 48) = *(_DWORD *)(v2 + 48);
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v2 + 56);
  swift_bridgeObjectRetain();
  sub_245751474();
  sub_245749FB4();
}

void _s4Sage11MailMessageV20SummarizationOptionsVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_2457808A4(a1, a2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(v2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(v3 + 24) = *(_BYTE *)(v2 + 24);
  v4 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v3 + 32) = *(_QWORD *)(v2 + 32);
  *(_QWORD *)(v3 + 40) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(v3 + 48) = *(_DWORD *)(v2 + 48);
  *(_QWORD *)(v3 + 56) = *(_QWORD *)(v2 + 56);
  swift_bridgeObjectRelease();
  sub_245748A90();
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsVwet_0(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24577F374(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MailMessage.ThreadSummarizationOptions()
{
  sub_245751428();
}

uint64_t initializeWithCopy for MailMessage.ClassificationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MailMessage.ClassificationOptions(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MailMessage.ClassificationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

void type metadata accessor for MailMessage.ClassificationOptions()
{
  sub_245751428();
}

uint64_t destroy for MailMessage.ThreadClassificationOptions()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s4Sage11MailMessageV27ThreadClassificationOptionsVwCP_0(_QWORD *a1, _QWORD *a2)
{
  sub_2457807D0(a1, a2);
  swift_bridgeObjectRetain();
  sub_2457513E4();
  sub_245748A90();
}

_QWORD *assignWithCopy for MailMessage.ThreadClassificationOptions(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for MailMessage.ThreadClassificationOptions(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MailMessage.ThreadClassificationOptions(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MailMessage.ThreadClassificationOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MailMessage.ThreadClassificationOptions()
{
  sub_245751428();
}

uint64_t initializeBufferWithCopyOfBuffer for MailMessage.VisualPromptOptions(uint64_t result, __int16 *a2)
{
  __int16 v2;

  v2 = *a2;
  *(_BYTE *)(result + 2) = *((_BYTE *)a2 + 2);
  *(_WORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for MailMessage.VisualPromptOptions(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  unsigned int v4;
  BOOL v5;

  if (!a2)
  {
    v3 = -1;
    return (v3 + 1);
  }
  if (a2 >= 0xFF)
  {
    if ((a2 + 33554177) >> 24)
    {
      v2 = a1[3];
      if (a1[3])
        goto LABEL_5;
    }
    else
    {
      v2 = *(unsigned __int16 *)(a1 + 3);
      if (*(_WORD *)(a1 + 3))
      {
LABEL_5:
        v3 = (*(unsigned __int16 *)a1 | (a1[2] << 16) | (v2 << 24)) - 16776962;
        return (v3 + 1);
      }
    }
  }
  v4 = a1[1];
  v5 = v4 >= 2;
  v3 = (v4 + 2147483646) & 0x7FFFFFFF;
  if (!v5)
    v3 = -1;
  return (v3 + 1);
}

uint64_t storeEnumTagSinglePayload for MailMessage.VisualPromptOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  int v3;
  unsigned int v4;

  if ((a3 + 33554177) >> 24)
    v3 = 1;
  else
    v3 = 2;
  if (a3 <= 0xFE)
    v3 = 0;
  if (a2 > 0xFE)
  {
    *(_WORD *)result = a2 - 255;
    *(_BYTE *)(result + 2) = (a2 - 255) >> 16;
    if (v3)
    {
      v4 = ((a2 - 255) >> 24) + 1;
      if (v3 == 2)
        *(_WORD *)(result + 3) = v4;
      else
        *(_BYTE *)(result + 3) = v4;
    }
  }
  else
  {
    if (!v3)
      goto LABEL_10;
    if (v3 == 2)
    {
      *(_WORD *)(result + 3) = 0;
LABEL_10:
      if (!a2)
        return result;
LABEL_16:
      *(_BYTE *)(result + 1) = a2 + 1;
      return result;
    }
    *(_BYTE *)(result + 3) = 0;
    if (a2)
      goto LABEL_16;
  }
  return result;
}

void type metadata accessor for MailMessage.VisualPromptOptions()
{
  sub_245751428();
}

uint64_t storeEnumTagSinglePayload for MailMessage.ThreadVisualPromptOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24577F7CC + 4 * byte_2457C01F2[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24577F800 + 4 * byte_2457C01ED[v4]))();
}

uint64_t sub_24577F800(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577F808(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24577F810);
  return result;
}

uint64_t sub_24577F81C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24577F824);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24577F828(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577F830(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for MailMessage.ThreadVisualPromptOptions()
{
  sub_245751428();
}

uint64_t storeEnumTagSinglePayload for MailMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_24577F894 + 4 * byte_2457C01FC[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_24577F8C8 + 4 * byte_2457C01F7[v4]))();
}

uint64_t sub_24577F8C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577F8D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24577F8D8);
  return result;
}

uint64_t sub_24577F8E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24577F8ECLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_24577F8F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577F8F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MailMessage.CodingKeys()
{
  return &type metadata for MailMessage.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MailMessage.ThreadVisualPromptOptions.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24577F954 + 4 * byte_2457C0201[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24577F974 + 4 * byte_2457C0206[v4]))();
}

_BYTE *sub_24577F954(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24577F974(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24577F97C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24577F984(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24577F98C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24577F994(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for MailMessage.ThreadVisualPromptOptions.CodingKeys()
{
  return &type metadata for MailMessage.ThreadVisualPromptOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for MailMessage.VisualPromptOptions.CodingKeys()
{
  return &type metadata for MailMessage.VisualPromptOptions.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for MailMessage.ThreadClassificationOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24577FA10 + 4 * byte_2457C0210[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24577FA44 + 4 * byte_2457C020B[v4]))();
}

uint64_t sub_24577FA44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577FA4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24577FA54);
  return result;
}

uint64_t sub_24577FA60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24577FA68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24577FA6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577FA74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MailMessage.ThreadClassificationOptions.CodingKeys()
{
  return &type metadata for MailMessage.ThreadClassificationOptions.CodingKeys;
}

uint64_t _s4Sage11MailMessageV19VisualPromptOptionsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24577FADC + 4 * byte_2457C021A[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24577FB10 + 4 * byte_2457C0215[v4]))();
}

uint64_t sub_24577FB10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577FB18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24577FB20);
  return result;
}

uint64_t sub_24577FB2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24577FB34);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24577FB38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577FB40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MailMessage.ClassificationOptions.CodingKeys()
{
  return &type metadata for MailMessage.ClassificationOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for MailMessage.ThreadSummarizationOptions.CodingKeys()
{
  return &type metadata for MailMessage.ThreadSummarizationOptions.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SummarizationXPCResult.Result.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s4Sage11MailMessageV26ThreadSummarizationOptionsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_24577FC48 + 4 * byte_2457C0224[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_24577FC7C + 4 * byte_2457C021F[v4]))();
}

uint64_t sub_24577FC7C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577FC84(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24577FC8CLL);
  return result;
}

uint64_t sub_24577FC98(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24577FCA0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_24577FCA4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24577FCAC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MailMessage.SummarizationOptions.CodingKeys()
{
  return &type metadata for MailMessage.SummarizationOptions.CodingKeys;
}

unint64_t sub_24577FCCC()
{
  unint64_t result;

  result = qword_257499030;
  if (!qword_257499030)
  {
    result = MEMORY[0x24953B288](&unk_2457C06E8, &type metadata for MailMessage.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499030);
  }
  return result;
}

unint64_t sub_24577FD0C()
{
  unint64_t result;

  result = qword_257499038;
  if (!qword_257499038)
  {
    result = MEMORY[0x24953B288](&unk_2457C07A0, &type metadata for MailMessage.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499038);
  }
  return result;
}

unint64_t sub_24577FD4C()
{
  unint64_t result;

  result = qword_257499040;
  if (!qword_257499040)
  {
    result = MEMORY[0x24953B288](&unk_2457C0858, &type metadata for MailMessage.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499040);
  }
  return result;
}

unint64_t sub_24577FD8C()
{
  unint64_t result;

  result = qword_257499048;
  if (!qword_257499048)
  {
    result = MEMORY[0x24953B288](&unk_2457C0910, &type metadata for MailMessage.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499048);
  }
  return result;
}

unint64_t sub_24577FDCC()
{
  unint64_t result;

  result = qword_257499050;
  if (!qword_257499050)
  {
    result = MEMORY[0x24953B288](&unk_2457C09C8, &type metadata for MailMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499050);
  }
  return result;
}

unint64_t sub_24577FE0C()
{
  unint64_t result;

  result = qword_257499058;
  if (!qword_257499058)
  {
    result = MEMORY[0x24953B288](&unk_2457C0A80, &type metadata for MailMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499058);
  }
  return result;
}

unint64_t sub_24577FE4C()
{
  unint64_t result;

  result = qword_257499060;
  if (!qword_257499060)
  {
    result = MEMORY[0x24953B288](&unk_2457C0B38, &type metadata for MailMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499060);
  }
  return result;
}

unint64_t sub_24577FE8C()
{
  unint64_t result;

  result = qword_257499068;
  if (!qword_257499068)
  {
    result = MEMORY[0x24953B288](&unk_2457C0AA8, &type metadata for MailMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499068);
  }
  return result;
}

unint64_t sub_24577FECC()
{
  unint64_t result;

  result = qword_257499070;
  if (!qword_257499070)
  {
    result = MEMORY[0x24953B288](&unk_2457C0AD0, &type metadata for MailMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499070);
  }
  return result;
}

unint64_t sub_24577FF0C()
{
  unint64_t result;

  result = qword_257499078;
  if (!qword_257499078)
  {
    result = MEMORY[0x24953B288](&unk_2457C09F0, &type metadata for MailMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499078);
  }
  return result;
}

unint64_t sub_24577FF4C()
{
  unint64_t result;

  result = qword_257499080;
  if (!qword_257499080)
  {
    result = MEMORY[0x24953B288](&unk_2457C0A18, &type metadata for MailMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499080);
  }
  return result;
}

unint64_t sub_24577FF8C()
{
  unint64_t result;

  result = qword_257499088;
  if (!qword_257499088)
  {
    result = MEMORY[0x24953B288](&unk_2457C0938, &type metadata for MailMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499088);
  }
  return result;
}

unint64_t sub_24577FFCC()
{
  unint64_t result;

  result = qword_257499090;
  if (!qword_257499090)
  {
    result = MEMORY[0x24953B288](&unk_2457C0960, &type metadata for MailMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499090);
  }
  return result;
}

unint64_t sub_24578000C()
{
  unint64_t result;

  result = qword_257499098;
  if (!qword_257499098)
  {
    result = MEMORY[0x24953B288](&unk_2457C0880, &type metadata for MailMessage.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499098);
  }
  return result;
}

unint64_t sub_24578004C()
{
  unint64_t result;

  result = qword_2574990A0;
  if (!qword_2574990A0)
  {
    result = MEMORY[0x24953B288](&unk_2457C08A8, &type metadata for MailMessage.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574990A0);
  }
  return result;
}

unint64_t sub_24578008C()
{
  unint64_t result;

  result = qword_2574990A8;
  if (!qword_2574990A8)
  {
    result = MEMORY[0x24953B288](&unk_2457C07C8, &type metadata for MailMessage.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574990A8);
  }
  return result;
}

unint64_t sub_2457800CC()
{
  unint64_t result;

  result = qword_2574990B0;
  if (!qword_2574990B0)
  {
    result = MEMORY[0x24953B288](&unk_2457C07F0, &type metadata for MailMessage.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574990B0);
  }
  return result;
}

unint64_t sub_24578010C()
{
  unint64_t result;

  result = qword_2574990B8;
  if (!qword_2574990B8)
  {
    result = MEMORY[0x24953B288](&unk_2457C0710, &type metadata for MailMessage.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574990B8);
  }
  return result;
}

unint64_t sub_24578014C()
{
  unint64_t result;

  result = qword_2574990C0;
  if (!qword_2574990C0)
  {
    result = MEMORY[0x24953B288](&unk_2457C0738, &type metadata for MailMessage.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574990C0);
  }
  return result;
}

unint64_t sub_24578018C()
{
  unint64_t result;

  result = qword_2574990C8;
  if (!qword_2574990C8)
  {
    result = MEMORY[0x24953B288](&unk_2457C0658, &type metadata for MailMessage.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574990C8);
  }
  return result;
}

unint64_t sub_2457801CC()
{
  unint64_t result;

  result = qword_2574990D0;
  if (!qword_2574990D0)
  {
    result = MEMORY[0x24953B288](&unk_2457C0680, &type metadata for MailMessage.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574990D0);
  }
  return result;
}

void sub_245780208(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;

  sub_2457BADEC();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_2457806E0();
  MEMORY[0x24BDAC7A8](v5);
  sub_245780884();
  if (v1 && (sub_245748A50(&qword_2574990F0), v6 = sub_245780658(), (v14 = *(_QWORD *)(a1 + 16)) != 0))
  {
    sub_245780600();
    while (v2 < *(_QWORD *)(a1 + 16))
    {
      sub_2457805E0();
      v7 = *(_QWORD *)(v6 + 40);
      sub_2457804C0((uint64_t)&unk_2574990F8);
      sub_2457806CC();
      sub_2457805B4();
      if (v10)
      {
LABEL_11:
        sub_24578055C(v8);
        v11 = *(_QWORD *)(v6 + 16);
        v12 = __OFADD__(v11, 1);
        v13 = v11 + 1;
        if (v12)
          goto LABEL_17;
        *(_QWORD *)(v6 + 16) = v13;
      }
      else
      {
        a1 = ~v9;
        while (1)
        {
          sub_245780704();
          sub_2457804C0((uint64_t)&unk_257499100);
          sub_245780680();
          sub_245780698();
          if ((v7 & 1) != 0)
            break;
          sub_245780628();
          if (v10)
          {
            sub_245780804();
            goto LABEL_11;
          }
        }
        sub_245780854();
        sub_245780804();
      }
      if (++v2 == v14)
        goto LABEL_15;
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_245758FB4();
  }
}

void sub_245780364(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  uint64_t v14;

  sub_2457BAE04();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_2457806E0();
  MEMORY[0x24BDAC7A8](v5);
  sub_245780884();
  if (v1 && (sub_245748A50(&qword_2574990D8), v6 = sub_245780658(), (v14 = *(_QWORD *)(a1 + 16)) != 0))
  {
    sub_245780600();
    while (v2 < *(_QWORD *)(a1 + 16))
    {
      sub_2457805E0();
      v7 = *(_QWORD *)(v6 + 40);
      sub_2457804C0((uint64_t)&unk_2574990E0);
      sub_2457806CC();
      sub_2457805B4();
      if (v10)
      {
LABEL_11:
        sub_24578055C(v8);
        v11 = *(_QWORD *)(v6 + 16);
        v12 = __OFADD__(v11, 1);
        v13 = v11 + 1;
        if (v12)
          goto LABEL_17;
        *(_QWORD *)(v6 + 16) = v13;
      }
      else
      {
        a1 = ~v9;
        while (1)
        {
          sub_245780704();
          sub_2457804C0((uint64_t)&unk_2574990E8);
          sub_245780680();
          sub_245780698();
          if ((v7 & 1) != 0)
            break;
          sub_245780628();
          if (v10)
          {
            sub_245780804();
            goto LABEL_11;
          }
        }
        sub_245780854();
        sub_245780804();
      }
      if (++v2 == v14)
        goto LABEL_15;
    }
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    sub_245758FB4();
  }
}

void sub_2457804C0(uint64_t a1)
{
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  if (!sub_245780878(a1))
  {
    v4 = v3;
    v5 = v2(255);
    atomic_store(MEMORY[0x24953B288](v4, v5), v1);
  }
  sub_245748A90();
}

uint64_t sub_245780528()
{
  return type metadata accessor for MailMessage();
}

uint64_t sub_245780530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t sub_245780540()
{
  return sub_2457BB6B0();
}

uint64_t sub_245780550()
{
  return sub_2457BB68C();
}

uint64_t sub_24578055C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(*(_QWORD *)(v8 - 96) + 8 * a1) = v2 | v1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 88) + 32))(*(_QWORD *)(v5 + 48) + v3 * v7, v6, v4);
}

_QWORD *sub_245780584()
{
  _QWORD *v0;

  return sub_245749280(v0, v0[3]);
}

uint64_t sub_2457805A4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457805E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 88) + 16))(v1, *(_QWORD *)(v3 - 120) + *(_QWORD *)(*(_QWORD *)(v3 - 88) + 72) * v2, v0);
}

void sub_245780600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 - 96) = v0 + 56;
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 88) + 80);
  *(_QWORD *)(v2 - 128) = v1;
  *(_QWORD *)(v2 - 120) = v1 + ((v3 + 32) & ~v3);
}

uint64_t sub_24578064C()
{
  return sub_2457BB770();
}

uint64_t sub_245780658()
{
  return sub_2457BB434();
}

uint64_t sub_245780668@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = a1;
  return sub_2457BB608();
}

uint64_t sub_245780680()
{
  return sub_2457BB194();
}

uint64_t sub_245780698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 88) + 8))(v1, v0);
}

uint64_t sub_2457806C4()
{
  return sub_2457BB5CC();
}

uint64_t sub_2457806CC()
{
  return sub_2457BB17C();
}

uint64_t sub_2457806FC()
{
  return sub_2457BAA98();
}

uint64_t sub_245780704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);

  return v5(v2, *(_QWORD *)(v3 + 48) + v0 * v4, v1);
}

uint64_t sub_245780718@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 144) = a1;
  return sub_2457BB548();
}

uint64_t sub_24578072C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t _s4Sage11MailMessageV20SummarizationOptionsV09requestedD6StylesShyAA0D6ClientC0D5StyleOGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_245780740()
{
  return sub_2457BB77C();
}

void sub_245780754()
{
  JUMPOUT(0x24953B288);
}

uint64_t sub_245780768()
{
  uint64_t v0;

  sub_245749564(v0);
  return swift_bridgeObjectRelease();
}

uint64_t sub_245780780()
{
  uint64_t v0;

  return v0 - 104;
}

uint64_t sub_245780790()
{
  uint64_t v0;

  return v0 - 128;
}

uint64_t sub_2457807A0()
{
  return sub_2457BB650();
}

uint64_t sub_2457807B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 112));
}

uint64_t sub_2457807C0()
{
  return sub_2457BB590();
}

uint64_t sub_2457807D0(_QWORD *a1, _QWORD *a2)
{
  uint64_t result;

  result = a2[1];
  *a1 = *a2;
  a1[1] = result;
  a1[2] = a2[2];
  return result;
}

uint64_t sub_2457807E8()
{
  return sub_2457BB77C();
}

void sub_2457807F8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
}

_BYTE *_s4Sage11MailMessageV19VisualPromptOptionsV7useCaseAA19SummarizationClientC0de3UseH0Ovs_0(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

void sub_24578081C(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t sub_245780824()
{
  return sub_2457BB5CC();
}

uint64_t sub_245780830()
{
  return sub_2457BB5CC();
}

uint64_t sub_24578083C()
{
  return sub_2457BB584();
}

uint64_t sub_245780848@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_245780854()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

void sub_245780860()
{
  uint64_t v0;

  sub_2457804C0(v0);
}

uint64_t sub_24578086C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_245780878(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t sub_245780898()
{
  return swift_bridgeObjectRetain();
}

_QWORD *sub_2457808A4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_2457808B8()
{
  uint64_t v0;

  return sub_245749564(*(_QWORD *)(v0 - 168));
}

void NoteMessage.VisualPromptOptions.useCase.getter(_BYTE *a1@<X8>)
{
  sub_24578081C(a1);
}

uint64_t (*NoteMessage.VisualPromptOptions.useCase.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t NoteMessage.VisualPromptOptions.extractVisualConcepts.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t NoteMessage.VisualPromptOptions.extractVisualConcepts.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*NoteMessage.VisualPromptOptions.extractVisualConcepts.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t NoteMessage.VisualPromptOptions.extractVisualTopLine.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t NoteMessage.VisualPromptOptions.extractVisualTopLine.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*NoteMessage.VisualPromptOptions.extractVisualTopLine.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::NoteMessage::VisualPromptOptions __swiftcall NoteMessage.VisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  uint64_t v1;
  Sage::NoteMessage::VisualPromptOptions result;

  *(_BYTE *)v1 = *(_BYTE *)useCase;
  *(_WORD *)(v1 + 1) = 1;
  result.useCase = useCase;
  return result;
}

uint64_t sub_245780930()
{
  sub_245780AA0();
  return sub_2457BB788();
}

uint64_t sub_245780958()
{
  sub_245780AA0();
  return sub_2457BB794();
}

void NoteMessage.VisualPromptOptions.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_245758054();
  v2 = v1;
  v3 = sub_245748A50(&qword_257499110);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245749280(v2, v2[3]);
  sub_245780AA0();
  sub_2457BB77C();
  sub_24577E3E4();
  sub_2457BB68C();
  if (!v0)
  {
    sub_2457807A0();
    sub_2457807A0();
  }
  sub_24578072C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_245751240();
}

unint64_t sub_245780AA0()
{
  unint64_t result;

  result = qword_257499118;
  if (!qword_257499118)
  {
    result = MEMORY[0x24953B288](&unk_2457C1200, &type metadata for NoteMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499118);
  }
  return result;
}

void NoteMessage.VisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  char v19;
  char v20;

  sub_245758054();
  v15 = v14;
  v17 = v16;
  sub_245748A50(&qword_257499120);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v18);
  sub_245749280(v15, v15[3]);
  sub_245780AA0();
  sub_245781BD0();
  if (!v13)
  {
    sub_24577E420();
    sub_2457BB5CC();
    v19 = sub_2457807C0();
    v20 = sub_2457807C0();
    sub_245780530();
    *v17 = a13;
    v17[1] = v19 & 1;
    v17[2] = v20 & 1;
  }
  sub_245748AB0();
  sub_245751240();
}

void sub_245780C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  NoteMessage.VisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_245780C2C()
{
  NoteMessage.VisualPromptOptions.encode(to:)();
}

void NoteMessage.ThreadVisualPromptOptions.useCase.getter(_BYTE *a1@<X8>)
{
  sub_24578081C(a1);
}

uint64_t (*NoteMessage.ThreadVisualPromptOptions.useCase.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::NoteMessage::ThreadVisualPromptOptions __swiftcall NoteMessage.ThreadVisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  _BYTE *v1;
  Sage::NoteMessage::ThreadVisualPromptOptions result;

  sub_24578081C(v1);
  return result;
}

uint64_t sub_245780C64()
{
  sub_245780D7C();
  return sub_2457BB788();
}

uint64_t sub_245780C8C()
{
  sub_245780D7C();
  return sub_2457BB794();
}

void NoteMessage.ThreadVisualPromptOptions.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_245758054();
  v1 = v0;
  v2 = sub_245748A50(&qword_257499128);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_245748AD0();
  sub_245749280(v1, v1[3]);
  sub_245780D7C();
  sub_2457BB77C();
  sub_24577E3E4();
  sub_2457BB68C();
  sub_245780848(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_245751240();
}

unint64_t sub_245780D7C()
{
  unint64_t result;

  result = qword_257499130;
  if (!qword_257499130)
  {
    result = MEMORY[0x24953B288](&unk_2457C11B0, &type metadata for NoteMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499130);
  }
  return result;
}

void NoteMessage.ThreadVisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  _BYTE *v17;
  _BYTE *v18;
  uint64_t v19;

  sub_245758054();
  v16 = v15;
  v18 = v17;
  sub_245748A50(&qword_257499138);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v19);
  sub_245748AD0();
  sub_245749280(v16, v16[3]);
  sub_245780D7C();
  sub_245781BD0();
  if (!v13)
  {
    sub_24577E420();
    sub_2457BB5CC();
    sub_245780848(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    *v18 = a13;
  }
  sub_245748AB0();
  sub_245751240();
}

void sub_245780E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  NoteMessage.ThreadVisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_245780EA4()
{
  NoteMessage.ThreadVisualPromptOptions.encode(to:)();
}

uint64_t NoteMessage.title.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2457513E4();
  return v1;
}

void NoteMessage.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*NoteMessage.title.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t NoteMessage.textualContext.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  sub_2457513E4();
  return v1;
}

void NoteMessage.textualContext.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_245749FB4();
}

uint64_t (*NoteMessage.textualContext.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::NoteMessage __swiftcall NoteMessage.init(title:textualContext:)(Swift::String_optional title, Swift::String_optional textualContext)
{
  Swift::String_optional *v2;
  Sage::NoteMessage result;

  *v2 = title;
  v2[1] = textualContext;
  result.textualContext = textualContext;
  result.title = title;
  return result;
}

uint64_t sub_245780F8C(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x436C617574786574 && a2 == 0xEE00747865746E6FLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_245781094(char a1)
{
  if ((a1 & 1) != 0)
    return 0x436C617574786574;
  else
    return 0x656C746974;
}

uint64_t sub_2457810D4()
{
  char *v0;

  return sub_245781094(*v0);
}

uint64_t sub_2457810DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245780F8C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245781100()
{
  sub_245781238();
  return sub_2457BB788();
}

uint64_t sub_245781128()
{
  sub_245781238();
  return sub_2457BB794();
}

void NoteMessage.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_245758054();
  v2 = v1;
  v3 = sub_245748A50(&qword_257499140);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245749280(v2, v2[3]);
  sub_245781238();
  sub_2457BB77C();
  sub_245781BB0();
  if (!v0)
    sub_245781BB0();
  sub_24578072C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_245751240();
}

unint64_t sub_245781238()
{
  unint64_t result;

  result = qword_257499148;
  if (!qword_257499148)
  {
    result = MEMORY[0x24953B288](&unk_2457C1160, &type metadata for NoteMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499148);
  }
  return result;
}

void NoteMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  sub_245758054();
  v3 = v2;
  v5 = v4;
  sub_245748A50(&qword_257499150);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v6);
  sub_245749280(v3, v3[3]);
  sub_245781238();
  sub_245781BD0();
  if (!v0)
  {
    v7 = sub_245781BC0();
    v9 = v8;
    swift_bridgeObjectRetain();
    v10 = sub_245781BC0();
    v12 = v11;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8);
    v14 = v10;
    sub_245781BA4(v13);
    sub_2457513E4();
    swift_bridgeObjectRelease();
    *v5 = v7;
    v5[1] = v9;
    v5[2] = v14;
    v5[3] = v12;
  }
  sub_245748AB0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_245751240();
}

void sub_2457813B8()
{
  NoteMessage.init(from:)();
}

void sub_2457813CC()
{
  NoteMessage.encode(to:)();
}

Sage::NoteMessage::VisualPromptOptions __swiftcall NoteMessage.VisualPromptOptions.init()()
{
  uint64_t v0;
  Sage::NoteMessage::VisualPromptOptions result;

  *(_WORD *)v0 = 259;
  *(_BYTE *)(v0 + 2) = 0;
  return result;
}

Sage::NoteMessage::VisualPromptOptions __swiftcall NoteMessage.VisualPromptOptions.init(extractVisualConcepts:extractVisualTopLine:)(Swift::Bool extractVisualConcepts, Swift::Bool extractVisualTopLine)
{
  _BYTE *v2;
  Sage::NoteMessage::VisualPromptOptions result;

  *v2 = 3;
  v2[1] = extractVisualConcepts;
  v2[2] = extractVisualTopLine;
  result.useCase = extractVisualConcepts;
  return result;
}

unint64_t sub_245781408()
{
  unint64_t result;

  result = qword_257499158;
  if (!qword_257499158)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for NoteMessage.ThreadVisualPromptOptions, &type metadata for NoteMessage.ThreadVisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499158);
  }
  return result;
}

unint64_t sub_245781448()
{
  unint64_t result;

  result = qword_257499160;
  if (!qword_257499160)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for NoteMessage.ThreadVisualPromptOptions, &type metadata for NoteMessage.ThreadVisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499160);
  }
  return result;
}

unint64_t sub_245781488()
{
  unint64_t result;

  result = qword_257499168;
  if (!qword_257499168)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for NoteMessage.VisualPromptOptions, &type metadata for NoteMessage.VisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499168);
  }
  return result;
}

unint64_t sub_2457814C8()
{
  unint64_t result;

  result = qword_257499170;
  if (!qword_257499170)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for NoteMessage.VisualPromptOptions, &type metadata for NoteMessage.VisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499170);
  }
  return result;
}

unint64_t sub_245781504(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_245781530();
  result = sub_24578156C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_245781530()
{
  unint64_t result;

  result = qword_257499178;
  if (!qword_257499178)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for NoteMessage, &type metadata for NoteMessage);
    atomic_store(result, (unint64_t *)&qword_257499178);
  }
  return result;
}

unint64_t sub_24578156C()
{
  unint64_t result;

  result = qword_257499180;
  if (!qword_257499180)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for NoteMessage, &type metadata for NoteMessage);
    atomic_store(result, (unint64_t *)&qword_257499180);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NoteMessage(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 32))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 8);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for NoteMessage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 32) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

void type metadata accessor for NoteMessage()
{
  sub_245751428();
}

void type metadata accessor for NoteMessage.VisualPromptOptions()
{
  sub_245751428();
}

uint64_t storeEnumTagSinglePayload for NoteMessage.ThreadVisualPromptOptions(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2457816B4 + 4 * byte_2457C0D95[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2457816E8 + 4 * byte_2457C0D90[v4]))();
}

uint64_t sub_2457816E8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457816F0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457816F8);
  return result;
}

uint64_t sub_245781704(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24578170CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_245781710(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245781718(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for NoteMessage.ThreadVisualPromptOptions()
{
  sub_245751428();
}

uint64_t storeEnumTagSinglePayload for NoteMessage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24578177C + 4 * byte_2457C0D9F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2457817B0 + 4 * byte_2457C0D9A[v4]))();
}

uint64_t sub_2457817B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457817B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457817C0);
  return result;
}

uint64_t sub_2457817CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457817D4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2457817D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457817E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NoteMessage.CodingKeys()
{
  return &type metadata for NoteMessage.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for NoteMessage.ThreadVisualPromptOptions.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24578183C + 4 * byte_2457C0DA4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24578185C + 4 * byte_2457C0DA9[v4]))();
}

_BYTE *sub_24578183C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24578185C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245781864(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24578186C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245781874(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24578187C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for NoteMessage.ThreadVisualPromptOptions.CodingKeys()
{
  return &type metadata for NoteMessage.ThreadVisualPromptOptions.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for NoteMessage.VisualPromptOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2457818E4 + 4 * byte_2457C0DB3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_245781918 + 4 * byte_2457C0DAE[v4]))();
}

uint64_t sub_245781918(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245781920(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245781928);
  return result;
}

uint64_t sub_245781934(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24578193CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_245781940(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245781948(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NoteMessage.VisualPromptOptions.CodingKeys()
{
  return &type metadata for NoteMessage.VisualPromptOptions.CodingKeys;
}

unint64_t sub_245781968()
{
  unint64_t result;

  result = qword_257499188;
  if (!qword_257499188)
  {
    result = MEMORY[0x24953B288](&unk_2457C0FC8, &type metadata for NoteMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499188);
  }
  return result;
}

unint64_t sub_2457819A8()
{
  unint64_t result;

  result = qword_257499190;
  if (!qword_257499190)
  {
    result = MEMORY[0x24953B288](&unk_2457C1080, &type metadata for NoteMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499190);
  }
  return result;
}

unint64_t sub_2457819E8()
{
  unint64_t result;

  result = qword_257499198;
  if (!qword_257499198)
  {
    result = MEMORY[0x24953B288](&unk_2457C1138, &type metadata for NoteMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499198);
  }
  return result;
}

unint64_t sub_245781A28()
{
  unint64_t result;

  result = qword_2574991A0;
  if (!qword_2574991A0)
  {
    result = MEMORY[0x24953B288](&unk_2457C10A8, &type metadata for NoteMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574991A0);
  }
  return result;
}

unint64_t sub_245781A68()
{
  unint64_t result;

  result = qword_2574991A8;
  if (!qword_2574991A8)
  {
    result = MEMORY[0x24953B288](&unk_2457C10D0, &type metadata for NoteMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574991A8);
  }
  return result;
}

unint64_t sub_245781AA8()
{
  unint64_t result;

  result = qword_2574991B0;
  if (!qword_2574991B0)
  {
    result = MEMORY[0x24953B288](&unk_2457C0FF0, &type metadata for NoteMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574991B0);
  }
  return result;
}

unint64_t sub_245781AE8()
{
  unint64_t result;

  result = qword_2574991B8;
  if (!qword_2574991B8)
  {
    result = MEMORY[0x24953B288](&unk_2457C1018, &type metadata for NoteMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574991B8);
  }
  return result;
}

unint64_t sub_245781B28()
{
  unint64_t result;

  result = qword_2574991C0;
  if (!qword_2574991C0)
  {
    result = MEMORY[0x24953B288](&unk_2457C0F38, &type metadata for NoteMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574991C0);
  }
  return result;
}

unint64_t sub_245781B68()
{
  unint64_t result;

  result = qword_2574991C8;
  if (!qword_2574991C8)
  {
    result = MEMORY[0x24953B288](&unk_2457C0F60, &type metadata for NoteMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574991C8);
  }
  return result;
}

uint64_t sub_245781BA4@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_245781BB0()
{
  return sub_2457BB608();
}

uint64_t sub_245781BC0()
{
  return sub_2457BB548();
}

uint64_t sub_245781BD0()
{
  return sub_2457BB770();
}

float PriorityResult.urgency.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void PriorityResult.urgency.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*PriorityResult.urgency.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t PriorityResult.llmClassifierWasInvoked.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 4);
}

uint64_t PriorityResult.llmClassifierWasInvoked.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 4) = result;
  return result;
}

uint64_t (*PriorityResult.llmClassifierWasInvoked.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

_QWORD *PriorityResult.inferenceEnvironmentInfo.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[16];

  sub_245781C64(v1 + 8, (uint64_t)v4);
  sub_245781C64((uint64_t)v4, a1);
  return sub_245781D00(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245752618);
}

uint64_t sub_245781C64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_245748A50(&qword_2574991D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t PriorityResult.inferenceEnvironmentInfo.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[128];
  _QWORD v4[17];

  sub_245781C64(a1, (uint64_t)v3);
  sub_245781C64(v1 + 8, (uint64_t)v4);
  sub_245781D00(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24575277C);
  return sub_245781C64((uint64_t)v3, v1 + 8);
}

_QWORD *sub_245781D00(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

uint64_t (*PriorityResult.inferenceEnvironmentInfo.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

float PriorityResult.importance.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 136);
}

void PriorityResult.importance.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 136) = a1;
}

uint64_t (*PriorityResult.importance.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void __swiftcall PriorityResult.init(urgency:llmClassifierWasInvoked:inferenceEnvironmentInfo:)(Sage::PriorityResult *__return_ptr retstr, Swift::Float urgency, Swift::Bool llmClassifierWasInvoked, Sage::InferenceEnvironmentInfo_optional *inferenceEnvironmentInfo)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t __src;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;

  v6 = sub_245781C64((uint64_t)inferenceEnvironmentInfo, (uint64_t)&v22);
  *(Swift::Float *)&__src = urgency;
  BYTE4(__src) = llmClassifierWasInvoked;
  v14 = sub_245782D98(v6, v7, v8, v9, v10, v11, v12, v13, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32,
          v33,
          v34,
          v35,
          v36,
          v37,
          __src,
          v39);
  sub_245782DD4(v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32,
    v33,
    v34,
    v35,
    v36,
    v37,
    __src,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55);
  sub_245782DEC();
}

uint64_t sub_245781DD8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x79636E65677275 && a2 == 0xE700000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000002457CA300 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000002457CA320 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6174726F706D69 && a2 == 0xEA00000000006563)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v7 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_245781F8C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_245781FC0 + 4 * byte_2457C1250[a1]))(0x79636E65677275, 0xE700000000000000);
}

unint64_t sub_245781FC0()
{
  return 0xD000000000000017;
}

unint64_t sub_245781FDC()
{
  return 0xD000000000000018;
}

uint64_t sub_245781FFC()
{
  return 0x6E6174726F706D69;
}

uint64_t sub_245782018()
{
  unsigned __int8 *v0;

  return sub_245781F8C(*v0);
}

uint64_t sub_245782020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245781DD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245782044()
{
  sub_245782210();
  return sub_2457BB788();
}

uint64_t sub_24578206C()
{
  sub_245782210();
  return sub_2457BB794();
}

void PriorityResult.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v9[128];
  _DWORD v10[41];
  char v11;

  v4 = sub_245748A50(&qword_2574991D8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = &v9[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v10[40] = *(unsigned __int8 *)(v1 + 4);
  sub_245781C64(v1 + 8, (uint64_t)v10);
  sub_245749280(a1, a1[3]);
  sub_245782210();
  sub_2457BB77C();
  v9[0] = 0;
  sub_245782E00();
  if (!v2)
  {
    v9[0] = 1;
    sub_2457BB650();
    sub_245781C64((uint64_t)v10, (uint64_t)v9);
    v11 = 2;
    sub_24578224C();
    sub_2457BB638();
    v9[0] = 3;
    sub_245782E00();
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_245782DA8();
}

unint64_t sub_245782210()
{
  unint64_t result;

  result = qword_2574991E0;
  if (!qword_2574991E0)
  {
    result = MEMORY[0x24953B288](&unk_2457C1394, &type metadata for PriorityResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574991E0);
  }
  return result;
}

unint64_t sub_24578224C()
{
  unint64_t result;

  result = qword_2574991E8;
  if (!qword_2574991E8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for InferenceEnvironmentInfo, &type metadata for InferenceEnvironmentInfo);
    atomic_store(result, (unint64_t *)&qword_2574991E8);
  }
  return result;
}

void PriorityResult.init(from:)(_QWORD *a1@<X0>, void *a2@<X8>)
{
  uint64_t v2;
  void *v5;
  int v6;
  int v7;
  char v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  _DWORD v13[36];
  _QWORD v14[18];
  _QWORD v15[16];
  uint64_t v16;
  _DWORD v17[36];
  _OWORD v18[8];
  int v19;
  char v20;
  char v21;

  v12 = sub_245748A50(&qword_2574991F0);
  MEMORY[0x24BDAC7A8](v12);
  sub_2457824F0(v18);
  sub_245781C64((uint64_t)v18, (uint64_t)&v17[2]);
  v17[34] = -1082130432;
  sub_245749280(a1, a1[3]);
  sub_245782210();
  sub_2457BB770();
  if (v2)
  {
    sub_245749564((uint64_t)a1);
    sub_245781C64((uint64_t)&v17[2], (uint64_t)v14);
    sub_245781D00(v14, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24575277C);
  }
  else
  {
    v5 = a2;
    sub_245782E10();
    v7 = v6;
    v17[0] = v6;
    LOBYTE(v14[0]) = 1;
    v8 = sub_2457BB590();
    v9 = v8 & 1;
    LOBYTE(v17[1]) = v8 & 1;
    v21 = 2;
    sub_245782510();
    sub_2457BB578();
    v19 = v9;
    sub_245781C64((uint64_t)&v16, (uint64_t)v15);
    sub_245781C64((uint64_t)v15, (uint64_t)&v17[2]);
    v20 = 3;
    sub_245781D00(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245752618);
    sub_245782E10();
    v11 = v10;
    sub_245782DC4();
    v17[34] = v11;
    v13[0] = v7;
    LOBYTE(v13[1]) = v19;
    sub_245781C64((uint64_t)v15, (uint64_t)&v13[2]);
    v13[34] = v11;
    memcpy(v5, v13, 0x8CuLL);
    sub_245749564((uint64_t)a1);
    memcpy(v14, v17, 0x8CuLL);
    sub_24578254C((uint64_t)v14);
  }
  sub_245782DA8();
}

double sub_2457824F0(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_2457C13F0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  return result;
}

unint64_t sub_245782510()
{
  unint64_t result;

  result = qword_2574991F8;
  if (!qword_2574991F8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for InferenceEnvironmentInfo, &type metadata for InferenceEnvironmentInfo);
    atomic_store(result, (unint64_t *)&qword_2574991F8);
  }
  return result;
}

uint64_t sub_24578254C(uint64_t a1)
{
  sub_24575277C(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return a1;
}

void sub_2457825A8(_QWORD *a1@<X0>, void *a2@<X8>)
{
  PriorityResult.init(from:)(a1, a2);
}

void sub_2457825BC(_QWORD *a1)
{
  PriorityResult.encode(to:)(a1);
}

void __swiftcall PriorityResult.init(urgency:llmClassifierWasInvoked:)(Sage::PriorityResult *__return_ptr retstr, Swift::Float urgency, Swift::Bool llmClassifierWasInvoked)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t __src;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  int v53;

  sub_2457824F0(&v21);
  *(Swift::Float *)&__src = urgency;
  BYTE4(__src) = llmClassifierWasInvoked;
  v13 = sub_245782D98(v5, v6, v7, v8, v9, v10, v11, v12, v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25, v26, v27, v28, v29, v30,
          v31,
          v32,
          v33,
          v34,
          v35,
          __src,
          v37);
  sub_245782DD4(v13, v14, v15, v16, v17, v18, v19, v20, v21, *((uint64_t *)&v21 + 1), v22, v23, v24, v25, v26, v27, v28, v29, v30,
    v31,
    v32,
    v33,
    v34,
    v35,
    __src,
    v37,
    v38,
    v39,
    v40,
    v41,
    v42,
    v43,
    v44,
    v45,
    v46,
    v47,
    v48,
    v49,
    v50,
    v51,
    v52,
    v53);
  sub_245782DEC();
}

void __swiftcall PriorityResult.init(urgency:importance:)(Sage::PriorityResult *__return_ptr retstr, Swift::Float urgency, Swift::Float importance)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t __src[18];

  sub_2457824F0(&v14);
  *(Swift::Float *)__src = urgency;
  BYTE4(__src[0]) = 0;
  sub_245782D98(v6, v7, v8, v9, v10, v11, v12, v13, v14, *((uint64_t *)&v14 + 1), v15, v16, v17, v18, v19, v20, v21, v22, v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    __src[0],
    __src[1]);
  *(Swift::Float *)&__src[17] = importance;
  memcpy(retstr, __src, sizeof(Sage::PriorityResult));
}

uint64_t destroy for PriorityResult(uint64_t a1)
{
  uint64_t result;

  result = *(_QWORD *)(a1 + 16);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PriorityResult(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = *(_QWORD *)(a2 + 16);
  if (v4 == 1)
  {
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x80uLL);
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v4;
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v5;
    v6 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = v6;
    v7 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = v7;
    v8 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v8;
    v9 = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = v9;
    v10 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = v10;
    v11 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  return a1;
}

uint64_t assignWithCopy for PriorityResult(uint64_t a1, uint64_t a2)
{
  void *v4;
  const void *v5;
  uint64_t v6;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = (void *)(a1 + 8);
  v5 = (const void *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) != 1)
  {
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_245752EBC(a1 + 8);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    memcpy(v4, v5, 0x80uLL);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_8:
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  return a1;
}

uint64_t assignWithTake for PriorityResult(uint64_t a1, uint64_t a2)
{
  void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(a2 + 4);
  v4 = (void *)(a1 + 8);
  v5 = (const void *)(a2 + 8);
  if (*(_QWORD *)(a1 + 16) != 1)
  {
    v6 = *(_QWORD *)(a2 + 16);
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = v6;
      swift_bridgeObjectRelease();
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = v7;
      swift_bridgeObjectRelease();
      v8 = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = v9;
      swift_bridgeObjectRelease();
      v10 = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = v10;
      swift_bridgeObjectRelease();
      v11 = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = v11;
      swift_bridgeObjectRelease();
      v12 = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = v12;
      swift_bridgeObjectRelease();
      v13 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v13;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_245752EBC((uint64_t)v4);
  }
  memcpy(v4, v5, 0x80uLL);
LABEL_6:
  *(_DWORD *)(a1 + 136) = *(_DWORD *)(a2 + 136);
  return a1;
}

uint64_t getEnumTagSinglePayload for PriorityResult(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;
  int v4;
  BOOL v5;

  if (a2)
  {
    if (a2 > 0x7FFFFFFD && *(_BYTE *)(a1 + 140))
    {
      v2 = *(_DWORD *)a1 + 2147483645;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v4 = v3 - 1;
      if (v4 < 0)
        v4 = -1;
      v5 = __OFSUB__(v4, 1);
      v2 = v4 - 1;
      if (v2 < 0 != v5)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PriorityResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 136) = 0;
    *(_QWORD *)result = a2 - 2147483646;
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 140) = 1;
  }
  else
  {
    if (a3 > 0x7FFFFFFD)
      *(_BYTE *)(result + 140) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PriorityResult()
{
  return &type metadata for PriorityResult;
}

uint64_t storeEnumTagSinglePayload for PriorityResult.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_245782C58 + 4 * byte_2457C1259[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_245782C8C + 4 * byte_2457C1254[v4]))();
}

uint64_t sub_245782C8C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245782C94(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245782C9CLL);
  return result;
}

uint64_t sub_245782CA8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245782CB0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_245782CB4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245782CBC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PriorityResult.CodingKeys()
{
  return &type metadata for PriorityResult.CodingKeys;
}

unint64_t sub_245782CDC()
{
  unint64_t result;

  result = qword_257499200;
  if (!qword_257499200)
  {
    result = MEMORY[0x24953B288](&unk_2457C136C, &type metadata for PriorityResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499200);
  }
  return result;
}

unint64_t sub_245782D1C()
{
  unint64_t result;

  result = qword_257499208;
  if (!qword_257499208)
  {
    result = MEMORY[0x24953B288](&unk_2457C12DC, &type metadata for PriorityResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499208);
  }
  return result;
}

unint64_t sub_245782D5C()
{
  unint64_t result;

  result = qword_257499210;
  if (!qword_257499210)
  {
    result = MEMORY[0x24953B288](&unk_2457C1304, &type metadata for PriorityResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499210);
  }
  return result;
}

uint64_t sub_245782D98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_245781C64((uint64_t)&a9, (uint64_t)&a26);
}

uint64_t sub_245782DC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

void *sub_245782DD4(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char __src,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  void *v42;

  a42 = -1082130432;
  return memcpy(v42, &__src, 0x8CuLL);
}

uint64_t sub_245782E00()
{
  return sub_2457BB668();
}

uint64_t sub_245782E10()
{
  return sub_2457BB5A8();
}

void SessionConfiguration.init(timeToLive:tokenGeneratorConfig:identifier:instructions:)(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  *(_QWORD *)a5 = a1;
  *(_BYTE *)(a5 + 8) = a2 & 1;
  v8 = sub_245783B3C();
  v9 = sub_245783B44();
  sub_245783B80(v9);
  v10 = sub_245767D20();
  sub_245783B68(v10);
  v11 = (_QWORD *)(a5 + *(int *)(v8 + 28));
  *v11 = a3;
  v11[1] = a4;
  sub_245767AD4();
}

uint64_t type metadata accessor for SessionConfiguration()
{
  uint64_t result;

  result = qword_257499228;
  if (!qword_257499228)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SessionConfiguration.timeToLive.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SessionConfiguration.timeToLive.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*SessionConfiguration.timeToLive.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SessionConfiguration.tokenGeneratorConfig.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_245783B3C();
  sub_245783B44();
  v0 = sub_245783BC8();
  return sub_24574A004(v0, v1, v2, v3);
}

uint64_t SessionConfiguration.tokenGeneratorConfig.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_245783B3C();
  sub_245783B44();
  v0 = sub_245783BE0();
  return sub_24574A004(v0, v1, v2, v3);
}

uint64_t (*SessionConfiguration.tokenGeneratorConfig.modify())(_QWORD, _QWORD)
{
  sub_245783B3C();
  return nullsub_1;
}

uint64_t SessionConfiguration.instructions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_245783B3C();
  sub_245767D20();
  v0 = sub_245783BC8();
  return sub_24574A004(v0, v1, v2, v3);
}

uint64_t SessionConfiguration.instructions.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_245783B3C();
  sub_245767D20();
  v0 = sub_245783BE0();
  return sub_24574A004(v0, v1, v2, v3);
}

uint64_t (*SessionConfiguration.instructions.modify())(_QWORD, _QWORD)
{
  sub_245783B3C();
  return nullsub_1;
}

uint64_t SessionConfiguration.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(sub_245783B3C() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

void SessionConfiguration.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(sub_245783B3C() + 28));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  sub_245749FB4();
}

uint64_t (*SessionConfiguration.identifier.modify())(_QWORD, _QWORD)
{
  sub_245783B3C();
  return nullsub_1;
}

void SessionConfiguration.init(tokenGeneratorConfig:identifier:instructions:)(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  *(_QWORD *)a3 = 0;
  *(_BYTE *)(a3 + 8) = 1;
  v6 = sub_245783B3C();
  v7 = sub_245783B44();
  sub_245783B80(v7);
  v8 = sub_245767D20();
  sub_245783B68(v8);
  v9 = (_QWORD *)(a3 + *(int *)(v6 + 28));
  *v9 = a1;
  v9[1] = a2;
  sub_245767AD4();
}

void SessionConfiguration.init(timeToLive:tokenGeneratorConfig:instructions:)(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;

  v5 = sub_245783C14();
  v6 = sub_245783C20(v5);
  MEMORY[0x24BDAC7A8](v6);
  sub_245767B9C();
  *(_QWORD *)v2 = a1;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  v7 = sub_245783B3C();
  v8 = sub_245783B44();
  sub_245783B4C(v8);
  v9 = *(_QWORD *)(sub_245767D20() - 8);
  sub_245783BA8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
  sub_2457BAAC8();
  v10 = sub_2457BAAA4();
  v12 = v11;
  sub_245783C08(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
  sub_245783B98();
  sub_245783BB8();
  v13 = (uint64_t *)(v2 + *(int *)(v7 + 28));
  *v13 = v10;
  v13[1] = v12;
  sub_245758FB4();
}

void SessionConfiguration.init(tokenGeneratorConfig:instructions:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  v1 = sub_245783C14();
  v2 = sub_245783C20(v1);
  MEMORY[0x24BDAC7A8](v2);
  sub_245767B9C();
  *(_QWORD *)v0 = 0;
  *(_BYTE *)(v0 + 8) = 1;
  v3 = sub_245783B3C();
  v4 = sub_245783B44();
  sub_245783B4C(v4);
  v5 = *(_QWORD *)(sub_245767D20() - 8);
  sub_245783BA8(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 16));
  sub_2457BAAC8();
  v6 = sub_2457BAAA4();
  v8 = v7;
  sub_245783C08(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_245783B98();
  sub_245783BB8();
  v9 = (uint64_t *)(v0 + *(int *)(v3 + 28));
  *v9 = v6;
  v9[1] = v8;
  sub_245758FB4();
}

uint64_t SessionConfiguration.hash(into:)()
{
  uint64_t v0;

  if (*(_BYTE *)(v0 + 8) == 1)
  {
    sub_2457BB740();
  }
  else
  {
    sub_2457BB740();
    sub_2457BB758();
  }
  sub_245783B3C();
  sub_245783B44();
  sub_2457834D8(&qword_257499218, (uint64_t (*)(uint64_t))MEMORY[0x24BEB8420], MEMORY[0x24BEB8430]);
  sub_245783BF8();
  sub_245767D20();
  sub_2457834D8(&qword_2574986B8, (uint64_t (*)(uint64_t))MEMORY[0x24BE7A858], MEMORY[0x24BE7A870]);
  sub_245783BF8();
  swift_bridgeObjectRetain();
  sub_2457BB1C4();
  return swift_bridgeObjectRelease();
}

void static SessionConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  v4 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if (!*(_BYTE *)(a2 + 8))
      goto LABEL_14;
  }
  else
  {
    if (*(double *)a1 != *(double *)a2)
      v4 = 1;
    if ((v4 & 1) != 0)
      goto LABEL_14;
  }
  v5 = sub_245783B3C();
  if ((sub_2457BAD2C() & 1) != 0 && (sub_2457BB0B0() & 1) != 0)
  {
    v6 = *(int *)(v5 + 28);
    v7 = *(_QWORD *)(a1 + v6);
    v8 = *(_QWORD *)(a1 + v6 + 8);
    v9 = (_QWORD *)(a2 + v6);
    if (v7 != *v9 || v8 != v9[1])
    {
      sub_2457BB6B0();
      return;
    }
  }
LABEL_14:
  sub_245749FB4();
}

uint64_t SessionConfiguration.hashValue.getter()
{
  sub_2457BB728();
  SessionConfiguration.hash(into:)();
  return sub_2457BB764();
}

uint64_t sub_245783474()
{
  sub_2457BB728();
  SessionConfiguration.hash(into:)();
  return sub_2457BB764();
}

uint64_t sub_2457834AC()
{
  return sub_2457834D8(&qword_257499220, (uint64_t (*)(uint64_t))type metadata accessor for SessionConfiguration, (uint64_t)&protocol conformance descriptor for SessionConfiguration);
}

uint64_t sub_2457834D8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24953B288](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SessionConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a3[5];
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_2457BAD44();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    v11 = a3[6];
    v12 = (char *)v4 + v11;
    v13 = (uint64_t)a2 + v11;
    v14 = sub_2457BB0D4();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    v15 = a3[7];
    v16 = (_QWORD *)((char *)v4 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for SessionConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_2457BAD44();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = sub_2457BB0D4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2457BAD44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2457BB0D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SessionConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_2457BAD44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = (uint64_t)a2 + v11;
  v14 = sub_2457BB0D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2457BAD44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2457BB0D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for SessionConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_2457BAD44();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_2457BB0D4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (uint64_t *)(a2 + v14);
  v18 = *v16;
  v17 = v16[1];
  *v15 = v18;
  v15[1] = v17;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SessionConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_245783974(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v6 = sub_245783B44();
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = *(int *)(a3 + 20);
LABEL_5:
    _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1 + v8, a2, v7);
    return;
  }
  v9 = sub_245767D20();
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v9;
    v8 = *(int *)(a3 + 24);
    goto LABEL_5;
  }
  sub_245749FB4();
}

uint64_t storeEnumTagSinglePayload for SessionConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_245783A14(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = sub_245783B44();
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a4[5];
LABEL_5:
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1 + v10, a2, a2, v9);
    return;
  }
  v11 = sub_245767D20();
  if (*(_DWORD *)(*(_QWORD *)(v11 - 8) + 84) == a3)
  {
    v9 = v11;
    v10 = a4[6];
    goto LABEL_5;
  }
  *(_QWORD *)(a1 + a4[7] + 8) = (a2 - 1);
  sub_245749FB4();
}

uint64_t sub_245783AA4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_2457BAD44();
  if (v1 <= 0x3F)
  {
    result = sub_2457BB0D4();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_245783B3C()
{
  return type metadata accessor for SessionConfiguration();
}

uint64_t sub_245783B44()
{
  return sub_2457BAD44();
}

uint64_t sub_245783B4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t sub_245783B68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_245783B80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
}

uint64_t sub_245783B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v2 - 104), v1);
}

uint64_t sub_245783BA8@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v1, v3, v2);
}

uint64_t sub_245783BB8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 96) + 8))(v0, *(_QWORD *)(v1 - 88));
}

uint64_t sub_245783BC8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245783BE0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245783BF8()
{
  return sub_2457BB188();
}

uint64_t sub_245783C08@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_245783C14()
{
  return sub_2457BAAD4();
}

uint64_t sub_245783C20(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(result - 8);
  *(_QWORD *)(v1 - 88) = result;
  return result;
}

uint64_t static SuggestedAction.== infix(_:_:)()
{
  return 1;
}

uint64_t SuggestedAction.hash(into:)()
{
  return sub_2457BB734();
}

uint64_t sub_245783C60(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x796C706572 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_245783CDC()
{
  return 0x796C706572;
}

uint64_t sub_245783CF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245783C60(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_245783D1C()
{
  sub_245783ECC();
  return sub_2457BB788();
}

uint64_t sub_245783D44()
{
  sub_245783ECC();
  return sub_2457BB794();
}

uint64_t sub_245783D6C()
{
  sub_245783F08();
  return sub_2457BB788();
}

uint64_t sub_245783D94()
{
  sub_245783F08();
  return sub_2457BB794();
}

void SuggestedAction.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;

  v2 = sub_245748A50(&qword_257499238);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_245767CF8();
  v4 = sub_245748A50(&qword_257499240);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v8 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245749280(a1, a1[3]);
  sub_245783ECC();
  sub_2457BB77C();
  sub_245783F08();
  sub_2457BB5FC();
  sub_245784478(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_245751240();
}

unint64_t sub_245783ECC()
{
  unint64_t result;

  result = qword_257499248;
  if (!qword_257499248)
  {
    result = MEMORY[0x24953B288](&unk_2457C172C, &type metadata for SuggestedAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499248);
  }
  return result;
}

unint64_t sub_245783F08()
{
  unint64_t result;

  result = qword_257499250;
  if (!qword_257499250)
  {
    result = MEMORY[0x24953B288](&unk_2457C16DC, &type metadata for SuggestedAction.ReplyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499250);
  }
  return result;
}

void SuggestedAction.hashValue.getter()
{
  sub_2457BB728();
  sub_2457514AC();
  sub_2457BB764();
  sub_24575118C();
}

void SuggestedAction.init(from:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v21 = sub_245748A50(&qword_257499258);
  v2 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_245748A50(&qword_257499260);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_245767CF8();
  sub_245749280(a1, a1[3]);
  sub_245783ECC();
  v7 = v22;
  v8 = a1;
  sub_2457BB770();
  if (v7)
    goto LABEL_6;
  v20 = v2;
  v22 = v6;
  v9 = sub_2457BB5E4();
  v10 = *(_QWORD *)(v9 + 16);
  if (!v10
    || (sub_245750D90(1, v10, v9, v9 + 32, 0, (2 * v10) | 1),
        v12 = v11,
        v14 = v13,
        swift_bridgeObjectRelease(),
        v12 != v14 >> 1))
  {
    v15 = sub_2457BB470();
    swift_allocError();
    v17 = v16;
    sub_245748A50(&qword_2574980B0);
    *v17 = &type metadata for SuggestedAction;
    sub_2457BB53C();
    sub_2457BB464();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v17, *MEMORY[0x24BEE26D0], v15);
    swift_willThrow();
    v18 = v22;
    v8 = a1;
    swift_unknownObjectRelease();
    sub_245784478(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
LABEL_6:
    v19 = (uint64_t)v8;
    goto LABEL_7;
  }
  sub_245783F08();
  sub_2457BB530();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v4, v21);
  swift_unknownObjectRelease();
  sub_245784478(*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
  v19 = (uint64_t)a1;
LABEL_7:
  sub_245749564(v19);
  sub_245751240();
}

void sub_2457841E8()
{
  SuggestedAction.hashValue.getter();
}

uint64_t sub_2457841FC()
{
  return SuggestedAction.hash(into:)();
}

void sub_245784210(_QWORD *a1)
{
  SuggestedAction.init(from:)(a1);
}

void sub_245784224(_QWORD *a1)
{
  SuggestedAction.encode(to:)(a1);
}

unint64_t sub_24578423C()
{
  unint64_t result;

  result = qword_257499268;
  if (!qword_257499268)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SuggestedAction, &type metadata for SuggestedAction);
    atomic_store(result, (unint64_t *)&qword_257499268);
  }
  return result;
}

ValueMetadata *type metadata accessor for SuggestedAction()
{
  return &type metadata for SuggestedAction;
}

uint64_t _s4Sage15SuggestedActionOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2457842CC + 4 * byte_2457C14D8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2457842EC + 4 * byte_2457C14DD[v4]))();
}

_BYTE *sub_2457842CC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2457842EC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2457842F4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2457842FC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245784304(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24578430C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SuggestedAction.CodingKeys()
{
  return &type metadata for SuggestedAction.CodingKeys;
}

ValueMetadata *type metadata accessor for SuggestedAction.ReplyCodingKeys()
{
  return &type metadata for SuggestedAction.ReplyCodingKeys;
}

unint64_t sub_24578433C()
{
  unint64_t result;

  result = qword_257499270;
  if (!qword_257499270)
  {
    result = MEMORY[0x24953B288](&unk_2457C16B4, &type metadata for SuggestedAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499270);
  }
  return result;
}

unint64_t sub_24578437C()
{
  unint64_t result;

  result = qword_257499278;
  if (!qword_257499278)
  {
    result = MEMORY[0x24953B288](&unk_2457C15D4, &type metadata for SuggestedAction.ReplyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499278);
  }
  return result;
}

unint64_t sub_2457843BC()
{
  unint64_t result;

  result = qword_257499280;
  if (!qword_257499280)
  {
    result = MEMORY[0x24953B288](&unk_2457C15FC, &type metadata for SuggestedAction.ReplyCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499280);
  }
  return result;
}

unint64_t sub_2457843FC()
{
  unint64_t result;

  result = qword_257499288;
  if (!qword_257499288)
  {
    result = MEMORY[0x24953B288](&unk_2457C1624, &type metadata for SuggestedAction.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499288);
  }
  return result;
}

unint64_t sub_24578443C()
{
  unint64_t result;

  result = qword_257499290[0];
  if (!qword_257499290[0])
  {
    result = MEMORY[0x24953B288](&unk_2457C164C, &type metadata for SuggestedAction.CodingKeys);
    atomic_store(result, qword_257499290);
  }
  return result;
}

uint64_t sub_245784478@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t (*SummarizableThread.elements.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void sub_245784494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_245784864(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD))sub_24574AA5C);
}

uint64_t sub_2457844A0(uint64_t a1, uint64_t a2)
{
  return sub_2457848A0(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_245784DB0);
}

uint64_t sub_2457844AC(uint64_t a1)
{
  MEMORY[0x24953B288](&unk_2457C1C40, a1);
  return sub_2457BB788();
}

uint64_t sub_2457844E0(uint64_t a1)
{
  MEMORY[0x24953B288](&unk_2457C1C40, a1);
  return sub_2457BB794();
}

void SummarizableThread.encode(to:)(_QWORD *a1, uint64_t a2)
{
  sub_24578494C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for SummarizableThread.CodingKeys, (uint64_t)&unk_2457C1C40);
}

uint64_t type metadata accessor for SummarizableThread.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245748A24(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SummarizableThread.CodingKeys);
}

void SummarizableThread.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  sub_245784AC0(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for SummarizableThread.CodingKeys, (uint64_t)&unk_2457C1C40, a3);
}

void sub_245784568(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  SummarizableThread.init(from:)(a1, *(_QWORD *)(a2 + 24), a3);
}

void sub_245784584(_QWORD *a1, uint64_t a2)
{
  SummarizableThread.encode(to:)(a1, a2);
}

uint64_t ClassifiableThread.elements.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ClassifiableThread.elements.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*ClassifiableThread.elements.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t ClassifiableThread.init(elements:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_2457845E0()
{
  return 0x73746E656D656C65;
}

uint64_t sub_2457845F8()
{
  return sub_24574A0C4();
}

void sub_245784600()
{
  sub_24578482C();
}

uint64_t sub_24578461C()
{
  return sub_24574A60C();
}

void sub_245784628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_245784864(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD))sub_24574A60C);
}

uint64_t sub_245784634()
{
  return sub_2457845E0();
}

uint64_t sub_245784640@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457847A8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_245784670(uint64_t a1, uint64_t a2)
{
  return sub_2457848A0(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_245748F98);
}

uint64_t sub_24578467C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24574A0C4();
  *a1 = result & 1;
  return result;
}

uint64_t sub_2457846AC(uint64_t a1)
{
  MEMORY[0x24953B288](&unk_2457C1BF0, a1);
  return sub_2457BB788();
}

uint64_t sub_2457846E0(uint64_t a1)
{
  MEMORY[0x24953B288](&unk_2457C1BF0, a1);
  return sub_2457BB794();
}

void ClassifiableThread.encode(to:)(_QWORD *a1, uint64_t a2)
{
  sub_24578494C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for ClassifiableThread.CodingKeys, (uint64_t)&unk_2457C1BF0);
}

uint64_t type metadata accessor for ClassifiableThread.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245748A24(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ClassifiableThread.CodingKeys);
}

void ClassifiableThread.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  sub_245784AC0(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for ClassifiableThread.CodingKeys, (uint64_t)&unk_2457C1BF0, a3);
}

void sub_245784768(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  ClassifiableThread.init(from:)(a1, *(_QWORD *)(a2 + 24), a3);
}

void sub_245784784(_QWORD *a1, uint64_t a2)
{
  ClassifiableThread.encode(to:)(a1, a2);
}

uint64_t (*VisualPromptSummarizableThread.elements.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_2457847A8(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x73746E656D656C65 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_24578482C()
{
  sub_2457BB728();
  sub_2457BB734();
  sub_2457BB764();
  sub_24575118C();
}

void sub_245784864(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD))
{
  _BYTE v6[72];

  sub_2457BB728();
  a4(v6, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24));
  sub_2457BB764();
  sub_24575118C();
}

uint64_t sub_2457848A0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  return a3(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
}

uint64_t sub_2457848C0(uint64_t a1)
{
  MEMORY[0x24953B288](&unk_2457C1BA0, a1);
  return sub_2457BB788();
}

uint64_t sub_2457848F4(uint64_t a1)
{
  MEMORY[0x24953B288](&unk_2457C1BA0, a1);
  return sub_2457BB794();
}

void VisualPromptSummarizableThread.encode(to:)(_QWORD *a1, uint64_t a2)
{
  sub_24578494C(a1, a2, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for VisualPromptSummarizableThread.CodingKeys, (uint64_t)&unk_2457C1BA0);
}

void sub_24578494C(_QWORD *a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t), uint64_t a4)
{
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];

  v8 = *(_QWORD *)(a2 + 24);
  v16 = *(_QWORD *)(a2 + 16);
  v17 = v8;
  v9 = a3(255, v16);
  MEMORY[0x24953B288](a4, v9);
  v10 = sub_2457BB6A4();
  v18 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - v11;
  v13 = *v4;
  sub_245749280(a1, a1[3]);
  sub_2457BB77C();
  v19[2] = v13;
  v14 = sub_2457BB260();
  v19[0] = *(_QWORD *)(v17 + 16);
  MEMORY[0x24953B288](MEMORY[0x24BEE12A0], v14, v19);
  sub_2457BB68C();
  (*(void (**)(char *, uint64_t))(v18 + 8))(v12, v10);
  sub_245751240();
}

uint64_t type metadata accessor for VisualPromptSummarizableThread.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245748A24(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VisualPromptSummarizableThread.CodingKeys);
}

void VisualPromptSummarizableThread.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X2>, _QWORD *a3@<X8>)
{
  sub_245784AC0(a1, a2, (uint64_t (*)(uint64_t))type metadata accessor for VisualPromptSummarizableThread.CodingKeys, (uint64_t)&unk_2457C1BA0, a3);
}

void sub_245784AC0(_QWORD *a1@<X0>, uint64_t a2@<X2>, uint64_t (*a3)(uint64_t)@<X3>, uint64_t a4@<X4>, _QWORD *a5@<X8>)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v13[3];

  v8 = a3(255);
  MEMORY[0x24953B288](a4, v8);
  v9 = sub_2457BB5F0();
  MEMORY[0x24BDAC7A8](v9);
  sub_245749280(a1, a1[3]);
  sub_2457BB770();
  if (!v5)
  {
    v10 = sub_2457BB260();
    v13[0] = *(_QWORD *)(a2 + 8);
    MEMORY[0x24953B288](MEMORY[0x24BEE12D0], v10, v13);
    sub_2457BB5CC();
    sub_245784DC8();
    *a5 = v13[2];
  }
  sub_245749564((uint64_t)a1);
  sub_245751240();
}

void sub_245784C10(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  VisualPromptSummarizableThread.init(from:)(a1, *(_QWORD *)(a2 + 24), a3);
}

void sub_245784C2C(_QWORD *a1, uint64_t a2)
{
  VisualPromptSummarizableThread.encode(to:)(a1, a2);
}

uint64_t sub_245784C40()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for SummarizableThread(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245748A24(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SummarizableThread);
}

uint64_t type metadata accessor for ClassifiableThread(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245748A24(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ClassifiableThread);
}

uint64_t type metadata accessor for VisualPromptSummarizableThread(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245748A24(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for VisualPromptSummarizableThread);
}

uint64_t sub_245784C6C()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_245784C78(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_245784CB8 + 4 * byte_2457C1780[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_245784CD8 + 4 * byte_2457C1785[v4]))();
}

_BYTE *sub_245784CB8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_245784CD8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245784CE0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245784CE8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245784CF0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245784CF8(_DWORD *result)
{
  *result = 0;
  return result;
}

void sub_245784D04()
{
  JUMPOUT(0x24953B288);
}

void sub_245784D14()
{
  JUMPOUT(0x24953B288);
}

void sub_245784D24()
{
  JUMPOUT(0x24953B288);
}

void sub_245784D34()
{
  JUMPOUT(0x24953B288);
}

void sub_245784D44()
{
  JUMPOUT(0x24953B288);
}

void sub_245784D54()
{
  JUMPOUT(0x24953B288);
}

void sub_245784D64()
{
  JUMPOUT(0x24953B288);
}

void sub_245784D74()
{
  JUMPOUT(0x24953B288);
}

void sub_245784D84()
{
  JUMPOUT(0x24953B288);
}

uint64_t sub_245784DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t static SummarizationXPCRequest.Error.== infix(_:_:)()
{
  return 1;
}

void SummarizationXPCRequest.Error.hash(into:)()
{
  sub_2457BB734();
  sub_245748A90();
}

void SummarizationXPCRequest.Error.hashValue.getter()
{
  sub_2457514C4();
  sub_2457514AC();
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_245784E2C(uint64_t a1, uint64_t a2)
{
  BOOL v5;
  char v6;

  if (a1 == 0xD000000000000014 && a2 == 0x80000002457CA3F0 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v5 = a1 == 0x6D726177657270 && a2 == 0xE700000000000000;
    if (v5 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000002457C8030 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002457C8090 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 3;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000002457C8050 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 4;
    }
    else if (a1 == 0xD00000000000001ALL && a2 == 0x80000002457C80B0 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 5;
    }
    else if (a1 == 0xD000000000000019 && a2 == 0x80000002457C8070 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 6;
    }
    else if (a1 == 0xD00000000000001FLL && a2 == 0x80000002457C80D0 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 7;
    }
    else if (a1 == 0xD00000000000002FLL && a2 == 0x80000002457CA410 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 8;
    }
    else if (a1 == 0xD00000000000002BLL && a2 == 0x80000002457CA440 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 9;
    }
    else if (a1 == 0xD00000000000001DLL && a2 == 0x80000002457CA470 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 10;
    }
    else if (a1 == 0xD00000000000002DLL && a2 == 0x80000002457CA490 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 11;
    }
    else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002457CA4C0 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 12;
    }
    else if (a1 == 0xD000000000000022 && a2 == 0x80000002457CA4E0 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 13;
    }
    else if (a1 == 0xD000000000000028 && a2 == 0x80000002457CA510 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 14;
    }
    else if (a1 == 0xD000000000000022 && a2 == 0x80000002457CA540 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 15;
    }
    else if (a1 == 0xD000000000000028 && a2 == 0x80000002457CA570 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 16;
    }
    else if (a1 == 0xD000000000000022 && a2 == 0x80000002457CA5A0 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 17;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000002457C8F90)
    {
      swift_bridgeObjectRelease();
      return 18;
    }
    else
    {
      v6 = sub_2457BB6B0();
      swift_bridgeObjectRelease();
      if ((v6 & 1) != 0)
        return 18;
      else
        return 19;
    }
  }
}

uint64_t sub_2457854D0()
{
  return 19;
}

uint64_t sub_2457854D8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_245785510 + 4 * byte_2457C1C90[a1]))(0xD000000000000014, 0x80000002457CA3F0);
}

uint64_t sub_245785510()
{
  return 0x6D726177657270;
}

uint64_t sub_245785634(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_24579033C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_24579033C();
    sub_245751474();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_2457856E4(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_24579033C();
    sub_245751474();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

void sub_245785744()
{
  SummarizationXPCRequest.Error.hashValue.getter();
}

void sub_245785758()
{
  SummarizationXPCRequest.Error.hash(into:)();
}

uint64_t sub_24578576C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457856E4(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_245785794()
{
  sub_245787D14();
  return sub_2457BB788();
}

uint64_t sub_2457857BC()
{
  sub_245787D14();
  return sub_2457BB794();
}

uint64_t sub_2457857E4()
{
  unsigned __int8 *v0;

  return sub_2457854D8(*v0);
}

uint64_t sub_2457857EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245784E2C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245785810@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2457854D0();
  *a1 = result;
  return result;
}

uint64_t sub_245785834()
{
  sub_245787648();
  return sub_2457BB788();
}

uint64_t sub_24578585C()
{
  sub_245787648();
  return sub_2457BB794();
}

uint64_t sub_245785884()
{
  sub_24578786C();
  return sub_2457BB788();
}

uint64_t sub_2457858AC()
{
  sub_24578786C();
  return sub_2457BB794();
}

uint64_t sub_2457858D4()
{
  sub_245787830();
  return sub_2457BB788();
}

uint64_t sub_2457858FC()
{
  sub_245787830();
  return sub_2457BB794();
}

uint64_t sub_245785924()
{
  sub_245787704();
  return sub_2457BB788();
}

uint64_t sub_24578594C()
{
  sub_245787704();
  return sub_2457BB794();
}

uint64_t sub_245785974()
{
  sub_2457878DC();
  return sub_2457BB788();
}

uint64_t sub_24578599C()
{
  sub_2457878DC();
  return sub_2457BB794();
}

uint64_t sub_2457859C4()
{
  sub_2457877B8();
  return sub_2457BB788();
}

uint64_t sub_2457859EC()
{
  sub_2457877B8();
  return sub_2457BB794();
}

uint64_t sub_245785A14()
{
  sub_245787740();
  return sub_2457BB788();
}

uint64_t sub_245785A3C()
{
  sub_245787740();
  return sub_2457BB794();
}

uint64_t sub_245785A64()
{
  sub_245787A44();
  return sub_2457BB788();
}

uint64_t sub_245785A8C()
{
  sub_245787A44();
  return sub_2457BB794();
}

uint64_t sub_245785AB4()
{
  sub_245787A08();
  return sub_2457BB788();
}

uint64_t sub_245785ADC()
{
  sub_245787A08();
  return sub_2457BB794();
}

uint64_t sub_245785B04()
{
  sub_245787954();
  return sub_2457BB788();
}

uint64_t sub_245785B2C()
{
  sub_245787954();
  return sub_2457BB794();
}

uint64_t sub_245785B54()
{
  sub_245787CD8();
  return sub_2457BB788();
}

uint64_t sub_245785B7C()
{
  sub_245787CD8();
  return sub_2457BB794();
}

uint64_t sub_245785BA4()
{
  sub_245787C9C();
  return sub_2457BB788();
}

uint64_t sub_245785BCC()
{
  sub_245787C9C();
  return sub_2457BB794();
}

uint64_t sub_245785BF4()
{
  sub_245787C60();
  return sub_2457BB788();
}

uint64_t sub_245785C1C()
{
  sub_245787C60();
  return sub_2457BB794();
}

uint64_t sub_245785C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245785634(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245785C68()
{
  sub_2457879CC();
  return sub_2457BB788();
}

uint64_t sub_245785C90()
{
  sub_2457879CC();
  return sub_2457BB794();
}

uint64_t sub_245785CB8()
{
  sub_245787BE8();
  return sub_2457BB788();
}

uint64_t sub_245785CE0()
{
  sub_245787BE8();
  return sub_2457BB794();
}

uint64_t sub_245785D08()
{
  sub_245787B70();
  return sub_2457BB788();
}

uint64_t sub_245785D30()
{
  sub_245787B70();
  return sub_2457BB794();
}

uint64_t sub_245785D58()
{
  sub_245787AF8();
  return sub_2457BB788();
}

uint64_t sub_245785D80()
{
  sub_245787AF8();
  return sub_2457BB794();
}

uint64_t sub_245785DA8()
{
  sub_245787A80();
  return sub_2457BB788();
}

uint64_t sub_245785DD0()
{
  sub_245787A80();
  return sub_2457BB794();
}

uint64_t sub_245785DF8()
{
  sub_2457876C8();
  return sub_2457BB788();
}

uint64_t sub_245785E20()
{
  sub_2457876C8();
  return sub_2457BB794();
}

void SummarizationXPCRequest.Request.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  _QWORD v86[15];
  uint64_t v87;
  uint64_t v88;
  _BYTE v89[8];
  uint64_t v90;
  uint64_t v91;
  _BYTE v92[8];
  _BYTE v93[8];
  _BYTE v94[8];
  _BYTE v95[8];
  _BYTE v96[8];
  char *v97;
  _QWORD v98[3];
  _QWORD v99[6];
  uint64_t v100;
  uint64_t v101;
  _BYTE v102[8];
  _BYTE v103[8];
  _BYTE v104[8];
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;

  v2 = sub_245748A50(&qword_257499598);
  sub_245751028(v2, (uint64_t)v104);
  sub_24578FFEC(v3);
  MEMORY[0x24BDAC7A8](v4);
  sub_245751408((uint64_t)v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v6 = sub_245748A50(&qword_2574995A0);
  sub_245751028(v6, (uint64_t)&v107);
  sub_24578FFEC(v7);
  MEMORY[0x24BDAC7A8](v8);
  sub_245751408((uint64_t)v86 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = sub_245748A50(&qword_2574995A8);
  sub_245751028(v10, (uint64_t)&v106);
  sub_24578FFEC(v11);
  MEMORY[0x24BDAC7A8](v12);
  sub_245751408((uint64_t)v86 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  v14 = sub_245748A50(&qword_2574995B0);
  sub_245751028(v14, (uint64_t)&v105);
  sub_24578FFEC(v15);
  MEMORY[0x24BDAC7A8](v16);
  sub_245751408((uint64_t)v86 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = sub_245748A50(&qword_2574995B8);
  sub_245751028(v18, (uint64_t)v103);
  sub_24578FFEC(v19);
  MEMORY[0x24BDAC7A8](v20);
  sub_245751408((uint64_t)v86 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = sub_245748A50(&qword_2574995C0);
  sub_245751028(v22, (uint64_t)v102);
  sub_24578FFEC(v23);
  MEMORY[0x24BDAC7A8](v24);
  sub_245750F48();
  sub_245751408(v25);
  v91 = sub_245748A50(&qword_2574995C8);
  sub_24578FFEC(*(_QWORD *)(v91 - 8));
  MEMORY[0x24BDAC7A8](v26);
  sub_245750F48();
  sub_245751408(v27);
  v90 = sub_245748A50(&qword_2574995D0);
  sub_24578FFEC(*(_QWORD *)(v90 - 8));
  MEMORY[0x24BDAC7A8](v28);
  sub_245750F48();
  sub_245751408(v29);
  v30 = sub_245748A50(&qword_2574995D8);
  sub_245751028(v30, (uint64_t)v99);
  sub_24578FFEC(v31);
  MEMORY[0x24BDAC7A8](v32);
  sub_245750F48();
  sub_245751408(v33);
  v34 = sub_245748A50(&qword_2574995E0);
  sub_245751028(v34, (uint64_t)v98);
  sub_24578FFEC(v35);
  MEMORY[0x24BDAC7A8](v36);
  sub_245750F48();
  sub_245751408(v37);
  v38 = sub_245748A50(&qword_2574995E8);
  sub_245751028(v38, (uint64_t)&v97);
  sub_24578FFEC(v39);
  MEMORY[0x24BDAC7A8](v40);
  sub_245750F48();
  sub_24575134C(v41);
  v42 = sub_2457BAAE0();
  v98[2] = *(_QWORD *)(v42 - 8);
  v99[0] = v42;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v43);
  sub_245750F48();
  v98[1] = v44;
  v88 = sub_245748A50(&qword_2574995F0);
  sub_24578FFEC(*(_QWORD *)(v88 - 8));
  MEMORY[0x24BDAC7A8](v45);
  sub_245750F48();
  sub_245751408(v46);
  v47 = sub_245748A50(&qword_2574995F8);
  sub_245751028(v47, (uint64_t)v96);
  sub_24578FFEC(v48);
  MEMORY[0x24BDAC7A8](v49);
  sub_245750F48();
  sub_24575134C(v50);
  v51 = type metadata accessor for UserNotification();
  sub_245751028(v51, (uint64_t)v94);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v52);
  sub_245750F48();
  v98[0] = v53;
  v87 = sub_245748A50(&qword_257499600);
  sub_24578FFEC(*(_QWORD *)(v87 - 8));
  MEMORY[0x24BDAC7A8](v54);
  sub_245750F48();
  sub_245751408(v55);
  v56 = sub_245748A50(&qword_257499608);
  sub_245751028(v56, (uint64_t)v95);
  sub_24578FFEC(v57);
  MEMORY[0x24BDAC7A8](v58);
  sub_245750F48();
  sub_24575134C(v59);
  v99[2] = type metadata accessor for TextMessage();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v60);
  sub_245776D14();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v61);
  v97 = (char *)v86 - v62;
  v63 = sub_245748A50(&qword_257499610);
  sub_245751028(v63, (uint64_t)v93);
  sub_24578FFEC(v64);
  MEMORY[0x24BDAC7A8](v65);
  sub_245750F48();
  sub_245751408(v66);
  v67 = sub_245748A50(&qword_257499618);
  sub_245751028(v67, (uint64_t)v92);
  sub_24578FFEC(v68);
  MEMORY[0x24BDAC7A8](v69);
  sub_245750F48();
  sub_24575134C(v70);
  v99[1] = type metadata accessor for MailMessage();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v71);
  sub_245776D14();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v72);
  sub_245751408((uint64_t)v86 - v73);
  v86[0] = sub_245748A50(&qword_257499620);
  MEMORY[0x24BDAC7A8](v86[0]);
  sub_24577741C();
  v74 = sub_245748A50(&qword_257499628);
  sub_245751028(v74, (uint64_t)v89);
  sub_24578FFEC(v75);
  MEMORY[0x24BDAC7A8](v76);
  sub_245749FF4();
  type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v77);
  sub_245749FF4();
  v80 = v79 - v78;
  v100 = sub_245748A50(&qword_257499630);
  v99[3] = *(_QWORD *)(v100 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v81);
  sub_245749FF4();
  v84 = v83 - v82;
  sub_245749280(a1, a1[3]);
  sub_245787648();
  v101 = v84;
  sub_2457BB77C();
  sub_245787684(v99[5], v80);
  v85 = (char *)sub_245786440 + 4 * word_2457C1CA4[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_245786440()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = *v0;
  *(_BYTE *)(v1 - 160) = 0;
  sub_245787D14();
  sub_2457902D0();
  *(_QWORD *)(v1 - 160) = v2;
  sub_245748A50(&qword_2574997A0);
  sub_24578B538(&qword_2574997A8, (uint64_t (*)(void))sub_245787D50, MEMORY[0x24BEE12A0]);
  v3 = *(_QWORD *)(v1 - 704);
  sub_2457900DC();
  v4 = sub_24579036C();
  v5(v4, v3);
  sub_2457900B8(*(_QWORD *)(v1 - 200));
  swift_bridgeObjectRelease();
  sub_245751170();
}

uint64_t type metadata accessor for SummarizationXPCRequest.Request(uint64_t a1)
{
  return sub_24574E0C8(a1, (uint64_t *)&unk_257499918);
}

unint64_t sub_245787648()
{
  unint64_t result;

  result = qword_257499638;
  if (!qword_257499638)
  {
    result = MEMORY[0x24953B288](&unk_2457C3A50, &type metadata for SummarizationXPCRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499638);
  }
  return result;
}

uint64_t sub_245787684(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummarizationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_2457876C8()
{
  unint64_t result;

  result = qword_257499640;
  if (!qword_257499640)
  {
    result = MEMORY[0x24953B288](&unk_2457C3A00, &type metadata for SummarizationXPCRequest.Request.TestTaskCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499640);
  }
  return result;
}

unint64_t sub_245787704()
{
  unint64_t result;

  result = qword_257499648;
  if (!qword_257499648)
  {
    result = MEMORY[0x24953B288](&unk_2457C39B0, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForNoteMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499648);
  }
  return result;
}

unint64_t sub_245787740()
{
  unint64_t result;

  result = qword_257499650;
  if (!qword_257499650)
  {
    result = MEMORY[0x24953B288](&unk_2457C3960, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499650);
  }
  return result;
}

unint64_t sub_24578777C()
{
  unint64_t result;

  result = qword_257499668;
  if (!qword_257499668)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.ThreadVisualPromptOptions, &type metadata for TextMessage.ThreadVisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499668);
  }
  return result;
}

unint64_t sub_2457877B8()
{
  unint64_t result;

  result = qword_257499678;
  if (!qword_257499678)
  {
    result = MEMORY[0x24953B288](&unk_2457C3910, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499678);
  }
  return result;
}

unint64_t sub_2457877F4()
{
  unint64_t result;

  result = qword_257499680;
  if (!qword_257499680)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.VisualPromptOptions, &type metadata for TextMessage.VisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499680);
  }
  return result;
}

unint64_t sub_245787830()
{
  unint64_t result;

  result = qword_257499688;
  if (!qword_257499688)
  {
    result = MEMORY[0x24953B288](&unk_2457C38C0, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499688);
  }
  return result;
}

unint64_t sub_24578786C()
{
  unint64_t result;

  result = qword_2574996A8;
  if (!qword_2574996A8)
  {
    result = MEMORY[0x24953B288](&unk_2457C3870, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574996A8);
  }
  return result;
}

void sub_2457878A8(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v2;
  void (*v3)(uint64_t);

  a2(0);
  v2 = sub_24579036C();
  v3(v2);
  sub_245748A90();
}

unint64_t sub_2457878DC()
{
  unint64_t result;

  result = qword_2574996B0;
  if (!qword_2574996B0)
  {
    result = MEMORY[0x24953B288](&unk_2457C3820, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574996B0);
  }
  return result;
}

unint64_t sub_245787918()
{
  unint64_t result;

  result = qword_2574996B8;
  if (!qword_2574996B8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.VisualPromptOptions, &type metadata for SummarizationClient.VisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_2574996B8);
  }
  return result;
}

unint64_t sub_245787954()
{
  unint64_t result;

  result = qword_2574996C0;
  if (!qword_2574996C0)
  {
    result = MEMORY[0x24953B288](&unk_2457C37D0, &type metadata for SummarizationXPCRequest.Request.PerformStreamingSummarizeTextForTextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574996C0);
  }
  return result;
}

unint64_t sub_245787990()
{
  unint64_t result;

  result = qword_2574996C8;
  if (!qword_2574996C8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.TextAssistantSummarizationOptions, &type metadata for SummarizationClient.TextAssistantSummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_2574996C8);
  }
  return result;
}

unint64_t sub_2457879CC()
{
  unint64_t result;

  result = qword_2574996D0;
  if (!qword_2574996D0)
  {
    result = MEMORY[0x24953B288](&unk_2457C3780, &type metadata for SummarizationXPCRequest.Request.SummarizeTextForTextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574996D0);
  }
  return result;
}

unint64_t sub_245787A08()
{
  unint64_t result;

  result = qword_2574996D8;
  if (!qword_2574996D8)
  {
    result = MEMORY[0x24953B288](&unk_2457C3730, &type metadata for SummarizationXPCRequest.Request.IsTextEligibleForTextAssistantSummarizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574996D8);
  }
  return result;
}

unint64_t sub_245787A44()
{
  unint64_t result;

  result = qword_2574996E8;
  if (!qword_2574996E8)
  {
    result = MEMORY[0x24953B288](&unk_2457C36E0, &type metadata for SummarizationXPCRequest.Request.IsLanguageEligibleForTextAssistantSummarizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574996E8);
  }
  return result;
}

unint64_t sub_245787A80()
{
  unint64_t result;

  result = qword_2574996F8;
  if (!qword_2574996F8)
  {
    result = MEMORY[0x24953B288](&unk_2457C3690, &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574996F8);
  }
  return result;
}

unint64_t sub_245787ABC()
{
  unint64_t result;

  result = qword_257499710;
  if (!qword_257499710)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.ThreadSummarizationOptions, &type metadata for UserNotification.ThreadSummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_257499710);
  }
  return result;
}

unint64_t sub_245787AF8()
{
  unint64_t result;

  result = qword_257499720;
  if (!qword_257499720)
  {
    result = MEMORY[0x24953B288](&unk_2457C3640, &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499720);
  }
  return result;
}

unint64_t sub_245787B34()
{
  unint64_t result;

  result = qword_257499728;
  if (!qword_257499728)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.SummarizationOptions, &type metadata for UserNotification.SummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_257499728);
  }
  return result;
}

unint64_t sub_245787B70()
{
  unint64_t result;

  result = qword_257499730;
  if (!qword_257499730)
  {
    result = MEMORY[0x24953B288](&unk_2457C35F0, &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499730);
  }
  return result;
}

unint64_t sub_245787BAC()
{
  unint64_t result;

  result = qword_257499748;
  if (!qword_257499748)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.ThreadSummarizationOptions, &type metadata for TextMessage.ThreadSummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_257499748);
  }
  return result;
}

unint64_t sub_245787BE8()
{
  unint64_t result;

  result = qword_257499758;
  if (!qword_257499758)
  {
    result = MEMORY[0x24953B288](&unk_2457C35A0, &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499758);
  }
  return result;
}

unint64_t sub_245787C24()
{
  unint64_t result;

  result = qword_257499760;
  if (!qword_257499760)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.SummarizationOptions, &type metadata for TextMessage.SummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_257499760);
  }
  return result;
}

unint64_t sub_245787C60()
{
  unint64_t result;

  result = qword_257499768;
  if (!qword_257499768)
  {
    result = MEMORY[0x24953B288](&unk_2457C3550, &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499768);
  }
  return result;
}

unint64_t sub_245787C9C()
{
  unint64_t result;

  result = qword_257499788;
  if (!qword_257499788)
  {
    result = MEMORY[0x24953B288](&unk_2457C3500, &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499788);
  }
  return result;
}

unint64_t sub_245787CD8()
{
  unint64_t result;

  result = qword_257499790;
  if (!qword_257499790)
  {
    result = MEMORY[0x24953B288](&unk_2457C34B0, &type metadata for SummarizationXPCRequest.Request.PrewarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499790);
  }
  return result;
}

unint64_t sub_245787D14()
{
  unint64_t result;

  result = qword_257499798;
  if (!qword_257499798)
  {
    result = MEMORY[0x24953B288](&unk_2457C3460, &type metadata for SummarizationXPCRequest.Request.CheckIsClientEnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499798);
  }
  return result;
}

unint64_t sub_245787D50()
{
  unint64_t result;

  result = qword_2574997B0;
  if (!qword_2574997B0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.UseCase, &type metadata for SummarizationClient.UseCase);
    atomic_store(result, (unint64_t *)&qword_2574997B0);
  }
  return result;
}

void SummarizationXPCRequest.Request.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t *v119;
  uint64_t *v120;
  uint64_t v121;
  void (*v122)(uint64_t, uint64_t);
  _QWORD v123[29];
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128[8];
  char v129[8];
  char v130[8];
  char v131[8];
  char v132[8];
  char v133[8];
  char v134[8];
  char v135[8];
  uint64_t v136;
  _QWORD v137[2];
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD v144[2];
  __int128 v145;

  v137[0] = a2;
  v3 = sub_245748A50(&qword_2574997B8);
  sub_245751028(v3, (uint64_t)v144);
  v137[1] = v4;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v5);
  sub_245750F48();
  sub_245751408(v6);
  v7 = sub_245748A50(&qword_2574997C0);
  sub_245751028(v7, (uint64_t)&v145 + 8);
  v138 = v8;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v9);
  sub_245750F48();
  v136 = v10;
  v11 = sub_245748A50(&qword_2574997C8);
  sub_245751028(v11, (uint64_t)&v145);
  sub_24578FFEC(v12);
  MEMORY[0x24BDAC7A8](v13);
  sub_245750F48();
  sub_245751408(v14);
  v127 = sub_245748A50(&qword_2574997D0);
  sub_24578FFEC(*(_QWORD *)(v127 - 8));
  MEMORY[0x24BDAC7A8](v15);
  sub_245750F48();
  sub_245751408(v16);
  v126 = sub_245748A50(&qword_2574997D8);
  sub_24578FFEC(*(_QWORD *)(v126 - 8));
  MEMORY[0x24BDAC7A8](v17);
  sub_245750F48();
  sub_245751408(v18);
  v19 = sub_245748A50(&qword_2574997E0);
  sub_245751028(v19, (uint64_t)&v140);
  sub_24578FFEC(v20);
  MEMORY[0x24BDAC7A8](v21);
  sub_245750F48();
  sub_245751408(v22);
  v23 = sub_245748A50(&qword_2574997E8);
  sub_245751028(v23, (uint64_t)&v138);
  sub_24578FFEC(v24);
  MEMORY[0x24BDAC7A8](v25);
  sub_245751408((uint64_t)v123 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = sub_245748A50(&qword_2574997F0);
  sub_245751028(v27, (uint64_t)v137);
  sub_24578FFEC(v28);
  MEMORY[0x24BDAC7A8](v29);
  sub_245750F48();
  sub_245751408(v30);
  v31 = sub_245748A50(&qword_2574997F8);
  sub_245751028(v31, (uint64_t)v135);
  sub_24578FFEC(v32);
  MEMORY[0x24BDAC7A8](v33);
  sub_245750F48();
  sub_245751408(v34);
  v125 = sub_245748A50(&qword_257499800);
  sub_24578FFEC(*(_QWORD *)(v125 - 8));
  MEMORY[0x24BDAC7A8](v35);
  sub_245750F48();
  sub_245751408(v36);
  v37 = sub_245748A50(&qword_257499808);
  sub_245751028(v37, (uint64_t)v134);
  sub_24578FFEC(v38);
  MEMORY[0x24BDAC7A8](v39);
  sub_245751408((uint64_t)v123 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0));
  v41 = sub_245748A50(&qword_257499810);
  sub_245751028(v41, (uint64_t)v133);
  sub_24578FFEC(v42);
  MEMORY[0x24BDAC7A8](v43);
  sub_245750F48();
  sub_245751408(v44);
  v45 = sub_245748A50(&qword_257499818);
  sub_245751028(v45, (uint64_t)v132);
  sub_24578FFEC(v46);
  MEMORY[0x24BDAC7A8](v47);
  sub_245750F48();
  sub_245751408(v48);
  v124 = sub_245748A50(&qword_257499820);
  sub_24578FFEC(*(_QWORD *)(v124 - 8));
  MEMORY[0x24BDAC7A8](v49);
  sub_245750F48();
  sub_245751408(v50);
  v51 = sub_245748A50(&qword_257499828);
  sub_245751028(v51, (uint64_t)v131);
  sub_24578FFEC(v52);
  MEMORY[0x24BDAC7A8](v53);
  sub_245750F48();
  sub_245751408(v54);
  v55 = sub_245748A50(&qword_257499830);
  sub_245751028(v55, (uint64_t)v130);
  sub_24578FFEC(v56);
  MEMORY[0x24BDAC7A8](v57);
  sub_245751408((uint64_t)v123 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0));
  v59 = sub_245748A50(&qword_257499838);
  sub_245751028(v59, (uint64_t)v129);
  sub_24578FFEC(v60);
  MEMORY[0x24BDAC7A8](v61);
  sub_245751408((uint64_t)v123 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0));
  v63 = sub_245748A50(&qword_257499840);
  sub_245751028(v63, (uint64_t)&v127);
  sub_24578FFEC(v64);
  MEMORY[0x24BDAC7A8](v65);
  sub_245751408((uint64_t)v123 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  v67 = sub_245748A50(&qword_257499848);
  sub_245751028(v67, (uint64_t)v128);
  sub_24578FFEC(v68);
  MEMORY[0x24BDAC7A8](v69);
  sub_245750F48();
  sub_245751408(v70);
  v71 = sub_245748A50(&qword_257499850);
  v140 = *(_QWORD *)(v71 - 8);
  v141 = v71;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v72);
  sub_245750F48();
  v144[1] = v73;
  v139 = type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v74);
  sub_245776D14();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v75);
  sub_245790104();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v76);
  sub_245790104();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v77);
  sub_245790104();
  v142 = v78;
  MEMORY[0x24BDAC7A8](v79);
  sub_245790104();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v80);
  sub_245790104();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v81);
  sub_245790104();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v82);
  sub_245790104();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v83);
  sub_245790104();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v84);
  sub_245790104();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v85);
  sub_245790104();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v86);
  sub_245790104();
  sub_24575133C();
  MEMORY[0x24BDAC7A8](v87);
  sub_245790104();
  sub_24575133C();
  v89 = MEMORY[0x24BDAC7A8](v88);
  v91 = (char *)v123 - v90;
  v92 = MEMORY[0x24BDAC7A8](v89);
  v94 = (char *)v123 - v93;
  v95 = MEMORY[0x24BDAC7A8](v92);
  v97 = (char *)v123 - v96;
  v98 = MEMORY[0x24BDAC7A8](v95);
  v100 = (char *)v123 - v99;
  v101 = MEMORY[0x24BDAC7A8](v98);
  v103 = (char *)v123 - v102;
  MEMORY[0x24BDAC7A8](v101);
  v105 = (char *)v123 - v104;
  v106 = a1[3];
  v143 = a1;
  sub_245749280(a1, v106);
  sub_245787648();
  v107 = v144[0];
  sub_2457BB770();
  if (!v107)
  {
    v123[3] = v103;
    v123[1] = v97;
    v123[4] = v100;
    v123[2] = v91;
    v123[5] = v94;
    v108 = v141;
    v144[0] = v105;
    v109 = sub_2457BB5E4();
    v110 = *(_QWORD *)(v109 + 16);
    if (v110)
    {
      v111 = v108;
      v123[0] = 0;
      v112 = *(unsigned __int8 *)(v109 + 32);
      sub_245750D90(1, v110, v109, v109 + 32, 0, (2 * v110) | 1);
      v114 = v113;
      v116 = v115;
      swift_bridgeObjectRelease();
      if (v114 == v116 >> 1)
        __asm { BR              X9 }
      v108 = v111;
    }
    v117 = v139;
    v118 = sub_2457BB470();
    swift_allocError();
    v120 = v119;
    sub_245748A50(&qword_2574980B0);
    *v120 = v117;
    sub_2457BB53C();
    sub_2457BB464();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v118 - 8) + 104))(v120, *MEMORY[0x24BEE26D0], v118);
    swift_willThrow();
    sub_245750F98();
    v121 = sub_2457902BC();
    v122(v121, v108);
  }
  sub_245749564((uint64_t)v143);
  sub_245751170();
}

void sub_245789964(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  SummarizationXPCRequest.Request.init(from:)(a1, a2);
}

void sub_245789978(_QWORD *a1)
{
  SummarizationXPCRequest.Request.encode(to:)(a1);
}

uint64_t SummarizationXPCRequest.RequestInfo.requestIdentifier.getter()
{
  sub_2457513E4();
  return sub_245748AA4();
}

void SummarizationXPCRequest.RequestInfo.requestIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*SummarizationXPCRequest.RequestInfo.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SummarizationXPCRequest.RequestInfo.useCaseIdentifier.getter()
{
  sub_2457513E4();
  return sub_245748AA4();
}

void SummarizationXPCRequest.RequestInfo.useCaseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  sub_245749FB4();
}

uint64_t (*SummarizationXPCRequest.RequestInfo.useCaseIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::SummarizationXPCRequest::RequestInfo __swiftcall SummarizationXPCRequest.RequestInfo.init(requestIdentifier:useCaseIdentifier:)(Swift::String requestIdentifier, Swift::String useCaseIdentifier)
{
  Swift::String *v2;
  Sage::SummarizationXPCRequest::RequestInfo result;

  *v2 = requestIdentifier;
  v2[1] = useCaseIdentifier;
  result.useCaseIdentifier = useCaseIdentifier;
  result.requestIdentifier = requestIdentifier;
  return result;
}

uint64_t sub_245789A58()
{
  sub_24578B5DC();
  return sub_2457BB788();
}

uint64_t sub_245789A80()
{
  sub_24578B5DC();
  return sub_2457BB794();
}

void SummarizationXPCRequest.RequestInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v5 = *(_QWORD *)(sub_245748A50(&qword_2574998D8) - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_24575136C();
  sub_245749280(a1, a1[3]);
  sub_24578B5DC();
  sub_2457BB77C();
  sub_2457513AC();
  if (!v1)
    sub_2457513AC();
  sub_245751140(v2, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  sub_245751240();
}

void SummarizationXPCRequest.RequestInfo.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t);
  uint64_t v14;

  v5 = sub_245748A50(&qword_2574998E8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_245749FF4();
  sub_245749280(a1, a1[3]);
  sub_24578B5DC();
  sub_2457BB770();
  if (v2)
  {
    sub_245748AB0();
  }
  else
  {
    v7 = sub_24575135C();
    v9 = v8;
    swift_bridgeObjectRetain();
    v10 = sub_24575135C();
    v12 = v11;
    v13 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    v14 = v10;
    sub_245790034(v13);
    *a2 = v7;
    a2[1] = v9;
    a2[2] = v14;
    a2[3] = v12;
    sub_2457513E4();
    sub_245748AB0();
    swift_bridgeObjectRelease();
    sub_2457512F4();
  }
  sub_245751240();
}

void sub_245789CD4(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  SummarizationXPCRequest.RequestInfo.init(from:)(a1, a2);
}

void sub_245789CE8(_QWORD *a1)
{
  SummarizationXPCRequest.RequestInfo.encode(to:)(a1);
}

void sub_245789CFC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = type metadata accessor for SummarizationXPCRequest.Request(0);
  MEMORY[0x24BDAC7A8](v2);
  sub_245787684(a1, (uint64_t)&v4 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_245789DA8();
}

void sub_245789D74(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_245751220();
  sub_245787684(v1, a1);
  sub_2457512D4();
}

void sub_245789DA8()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v0 = sub_245748AA4();
  sub_24578FF64(v0, v1);
  swift_endAccess();
  sub_2457512D4();
}

double sub_245789DF4@<D0>(uint64_t a1@<X8>)
{
  double result;
  uint64_t v3;
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  sub_245789E80(&v5);
  result = *(double *)&v5;
  v3 = v6;
  v4 = v7;
  *(_OWORD *)a1 = v5;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  return result;
}

uint64_t sub_245789E34(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  *(_QWORD *)&v5 = *a1;
  *((_QWORD *)&v5 + 1) = v1;
  v6 = v2;
  v7 = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_245789EC0(&v5);
}

void sub_245789E80(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_245751220();
  v4 = *v1;
  v3 = v1[1];
  v5 = v1[2];
  v6 = v1[3];
  *a1 = v4;
  a1[1] = v3;
  a1[2] = v5;
  a1[3] = v6;
  swift_bridgeObjectRetain();
  sub_2457513E4();
  sub_2457512D4();
}

uint64_t sub_245789EC0(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __int128 v6;

  v6 = *a1;
  v2 = *((_QWORD *)a1 + 2);
  v3 = *((_QWORD *)a1 + 3);
  v4 = v1 + OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_requestInfo;
  sub_245790110();
  *(_OWORD *)v4 = v6;
  *(_QWORD *)(v4 + 16) = v2;
  *(_QWORD *)(v4 + 24) = v3;
  swift_bridgeObjectRelease();
  return sub_245776CB8();
}

void sub_245789F28(uint64_t a1@<X8>)
{
  sub_245789FC4(a1);
}

uint64_t sub_245789F34(uint64_t *a1)
{
  return sub_24578A008(a1, &OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_onBehalfOfProcess);
}

void sub_245789F40(void (*a1)(__int128 *__return_ptr)@<X3>, uint64_t a2@<X8>)
{
  int v3;
  __int128 v4;
  int v5;

  a1(&v4);
  v3 = v5;
  *(_OWORD *)a2 = v4;
  *(_DWORD *)(a2 + 16) = v3;
  sub_2457512D4();
}

void sub_245789F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD *))
{
  uint64_t v6;
  int v7;
  _QWORD v8[2];
  int v9;

  v6 = *(_QWORD *)(a1 + 8);
  v7 = *(_DWORD *)(a1 + 16);
  v8[0] = *(_QWORD *)a1;
  v8[1] = v6;
  v9 = v7;
  swift_bridgeObjectRetain();
  a5(v8);
  sub_2457512D4();
}

void sub_245789FB8(uint64_t a1@<X8>)
{
  sub_245789FC4(a1);
}

void sub_245789FC4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  sub_245751220();
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_DWORD *)(v1 + 16);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRetain();
  sub_2457512D4();
}

uint64_t sub_245789FFC(uint64_t *a1)
{
  return sub_24578A008(a1, &OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_originatingProcess);
}

uint64_t sub_24578A008(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  v3 = *a1;
  v4 = a1[1];
  v5 = *((_DWORD *)a1 + 4);
  v6 = v2 + *a2;
  sub_245790110();
  *(_QWORD *)v6 = v3;
  *(_QWORD *)(v6 + 8) = v4;
  *(_DWORD *)(v6 + 16) = v5;
  return swift_bridgeObjectRelease();
}

id SummarizationXPCRequest.__allocating_init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(uint64_t a1, __int128 *a2, uint64_t *a3, uint64_t *a4)
{
  sub_2457514D8();
  return SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(a1, a2, a3, a4);
}

id SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(uint64_t a1, __int128 *a2, uint64_t *a3, uint64_t *a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  id v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  objc_super v21;

  v18 = *a2;
  v6 = *((_QWORD *)a2 + 2);
  v7 = *((_QWORD *)a2 + 3);
  v9 = *a3;
  v8 = a3[1];
  v10 = *((_DWORD *)a3 + 4);
  v19 = a4[1];
  v20 = *a4;
  v11 = *((_DWORD *)a4 + 4);
  v12 = &v4[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_onBehalfOfProcess];
  *(_QWORD *)v12 = 0;
  *((_QWORD *)v12 + 1) = 0;
  *((_DWORD *)v12 + 4) = 0;
  v13 = &v4[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_originatingProcess];
  *(_QWORD *)v13 = 0;
  *((_QWORD *)v13 + 1) = 0;
  *((_DWORD *)v13 + 4) = 0;
  sub_245787684(a1, (uint64_t)&v4[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_request]);
  v14 = &v4[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_requestInfo];
  *(_OWORD *)v14 = v18;
  *((_QWORD *)v14 + 2) = v6;
  *((_QWORD *)v14 + 3) = v7;
  sub_245790110();
  *(_QWORD *)v12 = v9;
  *((_QWORD *)v12 + 1) = v8;
  *((_DWORD *)v12 + 4) = v10;
  v15 = v4;
  sub_245751384();
  sub_245790110();
  *(_QWORD *)v13 = v20;
  *((_QWORD *)v13 + 1) = v19;
  *((_DWORD *)v13 + 4) = v11;

  sub_2457513F4();
  v21.receiver = v15;
  v21.super_class = (Class)sub_24578B780();
  v16 = objc_msgSendSuper2(&v21, sel_init);
  sub_2457878A8(a1, (void (*)(_QWORD))type metadata accessor for SummarizationXPCRequest.Request);
  return v16;
}

void SummarizationXPCRequest.__allocating_init(coder:)(uint64_t a1)
{
  sub_2457514D8();
  SummarizationXPCRequest.init(coder:)(a1);
  sub_245748A90();
}

id SummarizationXPCRequest.init(coder:)(uint64_t a1)
{
  char *v1;
  uint64_t v2;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  objc_super v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;

  type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_24577741C();
  v5 = &v1[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_onBehalfOfProcess];
  *(_QWORD *)v5 = 0;
  *((_QWORD *)v5 + 1) = 0;
  *((_DWORD *)v5 + 4) = 0;
  v6 = &v1[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_originatingProcess];
  *((_DWORD *)v6 + 4) = 0;
  *(_QWORD *)v6 = 0;
  *((_QWORD *)v6 + 1) = 0;
  v7 = v1;
  sub_24574DA5C(a1);
  sub_24574B7D4(v2, (uint64_t)&v7[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_request], (void (*)(_QWORD))type metadata accessor for SummarizationXPCRequest.Request);
  sub_24578AB20();
  v9 = v25;
  v10 = v26;
  v11 = &v7[OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_requestInfo];
  *(_OWORD *)v11 = v24;
  *((_QWORD *)v11 + 2) = v9;
  *((_QWORD *)v11 + 3) = v10;
  sub_24578AD24();
  v12 = v6;
  v13 = v19;
  v14 = (void *)a1;
  LODWORD(a1) = v20;
  sub_245790110();
  *(_QWORD *)v5 = v18;
  *((_QWORD *)v5 + 1) = v13;
  *((_DWORD *)v5 + 4) = a1;
  swift_bridgeObjectRelease();
  sub_24578AD24();
  v15 = v22;
  LODWORD(v13) = v23;
  sub_245790110();
  *(_QWORD *)v12 = v21;
  *((_QWORD *)v12 + 1) = v15;
  *((_DWORD *)v12 + 4) = v13;

  sub_245776CB8();
  v17.receiver = v7;
  v17.super_class = (Class)type metadata accessor for XPCValue();
  v16 = objc_msgSendSuper2(&v17, sel_init);

  return v16;
}

void sub_24578A634(void *a1)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  void *v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  uint64_t v18;

  sub_2457BA2B8(a1);
  sub_245789E80(&v17);
  if (qword_257497EE0 != -1)
    swift_once();
  sub_24578B62C();
  v2 = sub_2457BA9FC();
  v4 = v3;
  swift_bridgeObjectRelease();
  sub_245751384();
  v5 = (void *)sub_2457BAA74();
  sub_24574E14C(v2, v4);
  sub_2457511B8();
  v6 = (void *)sub_2457BB1A0();
  sub_2457902F0();

  sub_245789F28((uint64_t)&v17);
  if (v18)
  {
    sub_245790434();
    v7 = sub_2457BA9FC();
    v9 = v8;
    sub_245751384();
    v10 = (void *)sub_2457BAA74();
    sub_24574E14C(v7, v9);
    v11 = (void *)sub_2457BB1A0();
    sub_2457902F0();

  }
  sub_245789FB8((uint64_t)&v17);
  if (v18)
  {
    sub_245790434();
    v12 = sub_2457BA9FC();
    v14 = v13;
    sub_245790398();
    v15 = (void *)sub_2457BAA74();
    sub_24574E14C(v12, v14);
    v16 = (void *)sub_2457BB1A0();
    objc_msgSend(a1, sel_encodeObject_forKey_, v15, v16);

  }
}

uint64_t sub_24578AA1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v2);
  sub_24575136C();
  v3 = v0 + OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_request;
  swift_beginAccess();
  sub_245787684(v3, v1);
  if (qword_257497EE0 != -1)
    swift_once();
  sub_2457904A0(&qword_257499B18);
  sub_2457BA9FC();
  sub_2457878A8(v1, (void (*)(_QWORD))type metadata accessor for SummarizationXPCRequest.Request);
  return sub_245748AA4();
}

uint64_t sub_24578AB20()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;

  sub_2457903C4();
  v3 = sub_2457BB3A4();
  if (v3 && (v4 = (void *)v3, sub_2457512A4(), v4, v13 >> 60 != 15))
  {
    if (qword_257497EE8 != -1)
      swift_once();
    sub_24578FFA8();
    sub_245790348();
    if (!v0)
      return sub_245750E8C(v12, v13);
    sub_245750E8C(v12, v13);
  }
  else
  {
    type metadata accessor for XPCValue();
    sub_2457511B8();
    sub_2457BA500();
    swift_willThrow();
  }
  if (qword_257497E38 != -1)
    swift_once();
  v5 = sub_2457BB08C();
  sub_24574E0F8(v5, (uint64_t)qword_257498E30);
  sub_2457510D8();
  sub_2457510D8();
  v6 = (void *)sub_2457BB068();
  v7 = sub_2457BB350();
  if (sub_245751158(v7))
  {
    sub_245751148();
    v8 = (_QWORD *)sub_2457511A8();
    *v1 = 138412290;
    sub_2457510D8();
    _swift_stdlib_bridgeErrorToNSError();
    sub_245750FD0();
    *v8 = v2;
    sub_24575103C();
    sub_24575103C();
    sub_24575108C(&dword_245746000, v9, v10, "SummarizationXPCRequest.decodeRequestInfo(coder:) failed with error: %@");
    sub_245748A50((uint64_t *)&unk_25749A9C0);
    sub_245751198();
    sub_24575105C();
  }
  sub_24575103C();
  sub_24575103C();

  return swift_willThrow();
}

void sub_24578AD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  os_log_type_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int v13;

  sub_2457903C4();
  v3 = sub_2457BB3A4();
  if (v3 && (v4 = (void *)v3, sub_2457512A4(), v4, v12 >> 60 != 15))
  {
    if (qword_257497EE8 != -1)
      swift_once();
    sub_24577E260();
    sub_245790348();
    if (v0)
    {
      sub_245750E8C(v11, v12);
      if (qword_257497E38 != -1)
        swift_once();
      v5 = sub_2457BB08C();
      sub_24574E0F8(v5, (uint64_t)qword_257498E30);
      sub_2457510D8();
      sub_2457510D8();
      v6 = (void *)sub_2457BB068();
      v7 = sub_2457BB350();
      if (sub_245751158(v7))
      {
        sub_245751148();
        v8 = (_QWORD *)sub_2457511A8();
        *(_DWORD *)v1 = 138412290;
        sub_2457510D8();
        _swift_stdlib_bridgeErrorToNSError();
        sub_245750FD0();
        *v8 = v2;
        sub_24575103C();
        sub_24575103C();
        sub_24575108C(&dword_245746000, v9, v10, "SummarizationXPCRequest.decodeClientProcessInfo(coder:) failed with error: %@");
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        sub_245751198();
        sub_24575105C();
      }
      sub_24575103C();
      sub_24575103C();

      swift_willThrow();
    }
    else
    {
      sub_245750E8C(v11, v12);
      *(_QWORD *)v1 = v11;
      *(_QWORD *)(v1 + 8) = v12;
      *(_DWORD *)(v1 + 16) = v13;
    }
  }
  else
  {
    *(_QWORD *)v1 = 0;
    *(_QWORD *)(v1 + 8) = 0;
    *(_DWORD *)(v1 + 16) = 0;
  }
}

id SummarizationXPCRequest.__allocating_init()()
{
  return objc_msgSend(sub_2457514D8(), sel_init);
}

void SummarizationXPCRequest.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_24578AF70()
{
  uint64_t v0;

  sub_2457878A8(v0 + OBJC_IVAR____TtC4Sage23SummarizationXPCRequest_request, (void (*)(_QWORD))type metadata accessor for SummarizationXPCRequest.Request);
  sub_2457902C8();
  sub_245751474();
  swift_bridgeObjectRelease();
  return sub_24575131C();
}

id SummarizationXPCRequest.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)sub_24578B780();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t SummarizationXPCRequest.Request.Category.description.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_245790464();
  return ((uint64_t (*)(uint64_t))((char *)sub_24578B098 + 4 * byte_2457C1CF0[v1]))(v0);
}

unint64_t sub_24578B0A4()
{
  return sub_24579030C();
}

uint64_t sub_24578B0B0()
{
  return 1953719668;
}

uint64_t SummarizationXPCRequest.Request.Category.rawValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_245790464();
  return ((uint64_t (*)(uint64_t))((char *)sub_24578B0E4 + 4 * byte_2457C1CF6[v1]))(v0);
}

unint64_t sub_24578B0F0()
{
  return sub_24579030C();
}

uint64_t sub_24578B0FC()
{
  return 1953719668;
}

Sage::SummarizationXPCRequest::Request::Category_optional __swiftcall SummarizationXPCRequest.Request.Category.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  Sage::SummarizationXPCRequest::Request::Category_optional result;

  v2 = v1;
  v3 = sub_2457BB524();
  sub_245751474();
  v4 = 6;
  if (v3 < 6)
    v4 = v3;
  *v2 = v4;
  sub_245749FB4();
  return result;
}

void sub_24578B158(char *a1)
{
  sub_2457B4F2C(*a1);
}

void sub_24578B164()
{
  sub_2457A402C();
}

void sub_24578B16C(uint64_t a1)
{
  char *v1;

  sub_2457A40F8(a1, *v1);
}

void sub_24578B174()
{
  sub_2457A46F8();
}

Sage::SummarizationXPCRequest::Request::Category_optional sub_24578B17C(Swift::String *a1)
{
  return SummarizationXPCRequest.Request.Category.init(rawValue:)(*a1);
}

void sub_24578B188(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SummarizationXPCRequest.Request.Category.rawValue.getter();
  a1[1] = v2;
  sub_245748A90();
}

void SummarizationXPCRequest.Request.category.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;

  type metadata accessor for SummarizationXPCRequest.Request(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v1);
  sub_245749FF4();
  sub_245787684(v0, v3 - v2);
  v4 = (char *)sub_24578B22C + 4 * byte_2457C1CFC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X11 }
}

void sub_24578B22C(uint64_t a1)
{
  _BYTE *v1;

  sub_245790390(a1, (void (*)(_QWORD))type metadata accessor for SummarizationXPCRequest.Request);
  *v1 = 3;
}

void sub_24578B2F0()
{
  uint64_t v0;
  void (*v1)(uint64_t);

  sub_245748A50(&qword_2574996E0);
  swift_bridgeObjectRelease();
  sub_2457BAAE0();
  v0 = sub_2457902BC();
  v1(v0);
  JUMPOUT(0x24578B2D4);
}

void sub_24578B33C(uint64_t a1)
{
  sub_245790390(a1, (void (*)(_QWORD))type metadata accessor for SummarizationXPCRequest.Request);
  JUMPOUT(0x24578B2D4);
}

void sub_24578B350()
{
  JUMPOUT(0x24578B2D4);
}

unint64_t sub_24578B358()
{
  unint64_t result;

  result = qword_257499860;
  if (!qword_257499860)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.ThreadVisualPromptOptions, &type metadata for TextMessage.ThreadVisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499860);
  }
  return result;
}

unint64_t sub_24578B394()
{
  unint64_t result;

  result = qword_257499868;
  if (!qword_257499868)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.VisualPromptOptions, &type metadata for TextMessage.VisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499868);
  }
  return result;
}

unint64_t sub_24578B3D0()
{
  unint64_t result;

  result = qword_257499878;
  if (!qword_257499878)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.VisualPromptOptions, &type metadata for SummarizationClient.VisualPromptOptions);
    atomic_store(result, (unint64_t *)&qword_257499878);
  }
  return result;
}

unint64_t sub_24578B40C()
{
  unint64_t result;

  result = qword_257499880;
  if (!qword_257499880)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.TextAssistantSummarizationOptions, &type metadata for SummarizationClient.TextAssistantSummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_257499880);
  }
  return result;
}

unint64_t sub_24578B448()
{
  unint64_t result;

  result = qword_257499898;
  if (!qword_257499898)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.ThreadSummarizationOptions, &type metadata for UserNotification.ThreadSummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_257499898);
  }
  return result;
}

unint64_t sub_24578B484()
{
  unint64_t result;

  result = qword_2574998A0;
  if (!qword_2574998A0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.SummarizationOptions, &type metadata for UserNotification.SummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_2574998A0);
  }
  return result;
}

unint64_t sub_24578B4C0()
{
  unint64_t result;

  result = qword_2574998B0;
  if (!qword_2574998B0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.ThreadSummarizationOptions, &type metadata for TextMessage.ThreadSummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_2574998B0);
  }
  return result;
}

unint64_t sub_24578B4FC()
{
  unint64_t result;

  result = qword_2574998B8;
  if (!qword_2574998B8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.SummarizationOptions, &type metadata for TextMessage.SummarizationOptions);
    atomic_store(result, (unint64_t *)&qword_2574998B8);
  }
  return result;
}

uint64_t sub_24578B538(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = sub_24574B5EC(&qword_2574997A0);
    v8 = a2();
    result = MEMORY[0x24953B288](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_24578B5A0()
{
  unint64_t result;

  result = qword_2574998D0;
  if (!qword_2574998D0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.UseCase, &type metadata for SummarizationClient.UseCase);
    atomic_store(result, (unint64_t *)&qword_2574998D0);
  }
  return result;
}

unint64_t sub_24578B5DC()
{
  unint64_t result;

  result = qword_2574998E0;
  if (!qword_2574998E0)
  {
    result = MEMORY[0x24953B288](&unk_2457C3410, &type metadata for SummarizationXPCRequest.RequestInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574998E0);
  }
  return result;
}

uint64_t type metadata accessor for SummarizationXPCRequest(uint64_t a1)
{
  return sub_24574E0C8(a1, (uint64_t *)&unk_257499908);
}

unint64_t sub_24578B62C()
{
  unint64_t result;

  result = qword_2574998F0;
  if (!qword_2574998F0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationXPCRequest.RequestInfo, &type metadata for SummarizationXPCRequest.RequestInfo);
    atomic_store(result, (unint64_t *)&qword_2574998F0);
  }
  return result;
}

unint64_t sub_24578B66C()
{
  unint64_t result;

  result = qword_2574998F8;
  if (!qword_2574998F8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationXPCRequest.Error, &type metadata for SummarizationXPCRequest.Error);
    atomic_store(result, (unint64_t *)&qword_2574998F8);
  }
  return result;
}

unint64_t sub_24578B6AC()
{
  unint64_t result;

  result = qword_257499900;
  if (!qword_257499900)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationXPCRequest.Request.Category, &type metadata for SummarizationXPCRequest.Request.Category);
    atomic_store(result, (unint64_t *)&qword_257499900);
  }
  return result;
}

void sub_24578B6E8(uint64_t a1@<X8>)
{
  sub_245789D74(a1);
  sub_245748A90();
}

void sub_24578B710(uint64_t a1@<X8>)
{
  sub_245789F40((void (*)(__int128 *__return_ptr))sub_245789F28, a1);
}

void sub_24578B72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_245789F78(a1, a2, a3, a4, (void (*)(_QWORD *))sub_245789F34);
}

void sub_24578B748(uint64_t a1@<X8>)
{
  sub_245789F40((void (*)(__int128 *__return_ptr))sub_245789FB8, a1);
}

void sub_24578B764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_245789F78(a1, a2, a3, a4, (void (*)(_QWORD *))sub_245789FFC);
}

uint64_t sub_24578B780()
{
  return type metadata accessor for SummarizationXPCRequest(0);
}

uint64_t sub_24578B788()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SummarizationXPCRequest.Request(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SummarizationXPCRequest()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SummarizationXPCRequest.request.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of SummarizationXPCRequest.requestInfo.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SummarizationXPCRequest.onBehalfOfProcess.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of SummarizationXPCRequest.originatingProcess.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of SummarizationXPCRequest.__allocating_init(request:requestInfo:onBehalfOfProcess:originatingProcess:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 248))();
}

void type metadata accessor for SummarizationXPCRequest.Error()
{
  sub_245751428();
}

char *initializeBufferWithCopyOfBuffer for SummarizationXPCRequest.Request(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int *v51;
  uint64_t v52;
  char *v53;
  unsigned __int8 *v54;
  uint64_t v55;
  void (*v56)(char *, unsigned __int8 *, uint64_t);
  uint64_t v57;
  char *v58;
  unsigned __int8 *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  unsigned __int8 *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  unsigned __int8 *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int *v71;
  uint64_t v72;
  char *v73;
  unsigned __int8 *v74;
  uint64_t v75;
  void (*v76)(char *, unsigned __int8 *, uint64_t);
  uint64_t v77;
  char *v78;
  unsigned __int8 *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  unsigned __int8 *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  unsigned __int8 *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int *v91;
  uint64_t v92;
  char *v93;
  unsigned __int8 *v94;
  uint64_t v95;
  void (*v96)(char *, unsigned __int8 *, uint64_t);
  uint64_t v97;
  char *v98;
  unsigned __int8 *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  unsigned __int8 *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  unsigned __int8 *v107;
  uint64_t v108;
  int *v109;
  uint64_t v110;
  char *v111;
  unsigned __int8 *v112;
  uint64_t v113;
  void (*v114)(char *, unsigned __int8 *, uint64_t);
  uint64_t v115;
  char *v116;
  unsigned __int8 *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  unsigned __int8 *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  unsigned __int8 *v125;
  uint64_t v126;
  uint64_t v127;
  int *v128;
  uint64_t v129;
  char *v130;
  unsigned __int8 *v131;
  uint64_t v132;
  void (*v133)(char *, unsigned __int8 *, uint64_t);
  uint64_t v134;
  char *v135;
  unsigned __int8 *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  unsigned __int8 *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  unsigned __int8 *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  unsigned __int8 *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  unsigned __int8 *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  unsigned __int8 *v156;
  uint64_t v157;
  uint64_t v158;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v7 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v7 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 1u:
        v8 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v8;
        v9 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v9;
        v10 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v10 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          v11 = *((_QWORD *)a2 + 4);
          v12 = *((_QWORD *)a2 + 5);
          sub_24574E938(v11, v12, v10);
          *((_QWORD *)a1 + 4) = v11;
          *((_QWORD *)a1 + 5) = v12;
          a1[48] = v10;
        }
        v50 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v50;
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v51 = (int *)type metadata accessor for MailMessage();
        v52 = v51[7];
        v53 = &a1[v52];
        v54 = &a2[v52];
        v55 = sub_2457BAA98();
        v56 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v55 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v56(v53, v54, v55);
        a1[v51[8]] = a2[v51[8]];
        v57 = v51[9];
        v58 = &a1[v57];
        v59 = &a2[v57];
        v60 = *((_QWORD *)v59 + 1);
        *(_QWORD *)v58 = *(_QWORD *)v59;
        *((_QWORD *)v58 + 1) = v60;
        v61 = v51[10];
        v62 = &a1[v61];
        v63 = &a2[v61];
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = *(_QWORD *)v63;
        *((_QWORD *)v62 + 1) = v64;
        *(_QWORD *)&a1[v51[11]] = *(_QWORD *)&a2[v51[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v65 = *(int *)(sub_245748A50(&qword_257499780) + 48);
        v66 = &a1[v65];
        v67 = &a2[v65];
        v68 = *((_QWORD *)v67 + 1);
        *(_QWORD *)v66 = *(_QWORD *)v67;
        *((_QWORD *)v66 + 1) = v68;
        *((_QWORD *)v66 + 2) = *((_QWORD *)v67 + 2);
        v66[24] = v67[24];
        v69 = *((_QWORD *)v67 + 5);
        *((_QWORD *)v66 + 4) = *((_QWORD *)v67 + 4);
        *((_QWORD *)v66 + 5) = v69;
        *((_DWORD *)v66 + 12) = *((_DWORD *)v67 + 12);
        *((_QWORD *)v66 + 7) = *((_QWORD *)v67 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 2u:
        v13 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v13;
        v14 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v14;
        a1[32] = a2[32];
        v15 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v15;
        *((_DWORD *)a1 + 14) = *((_DWORD *)a2 + 14);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 3u:
        v16 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v16;
        v17 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v17;
        v18 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v18 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          v19 = *((_QWORD *)a2 + 4);
          v20 = *((_QWORD *)a2 + 5);
          sub_24574E938(v19, v20, v18);
          *((_QWORD *)a1 + 4) = v19;
          *((_QWORD *)a1 + 5) = v20;
          a1[48] = v18;
        }
        v70 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v70;
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v71 = (int *)type metadata accessor for TextMessage();
        v72 = v71[7];
        v73 = &a1[v72];
        v74 = &a2[v72];
        v75 = sub_2457BAA98();
        v76 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v75 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v76(v73, v74, v75);
        a1[v71[8]] = a2[v71[8]];
        v77 = v71[9];
        v78 = &a1[v77];
        v79 = &a2[v77];
        v80 = *((_QWORD *)v79 + 1);
        *(_QWORD *)v78 = *(_QWORD *)v79;
        *((_QWORD *)v78 + 1) = v80;
        v81 = v71[10];
        v82 = &a1[v81];
        v83 = &a2[v81];
        v84 = *((_QWORD *)v83 + 1);
        *(_QWORD *)v82 = *(_QWORD *)v83;
        *((_QWORD *)v82 + 1) = v84;
        *(_QWORD *)&a1[v71[11]] = *(_QWORD *)&a2[v71[11]];
        *(_QWORD *)&a1[v71[12]] = *(_QWORD *)&a2[v71[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v85 = *(int *)(sub_245748A50(&qword_257499750) + 48);
        v86 = &a1[v85];
        v87 = &a2[v85];
        v88 = *((_QWORD *)v87 + 1);
        *(_QWORD *)v86 = *(_QWORD *)v87;
        *((_QWORD *)v86 + 1) = v88;
        v89 = *((_QWORD *)v87 + 3);
        *((_QWORD *)v86 + 2) = *((_QWORD *)v87 + 2);
        *((_QWORD *)v86 + 3) = v89;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 4u:
      case 6u:
        v21 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v21;
        v22 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v22;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 5u:
        v23 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v23;
        v24 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v24;
        v25 = *((_QWORD *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v25 == 1)
        {
          v26 = *((_OWORD *)a2 + 3);
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 3) = v26;
          *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
        }
        else
        {
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          *((_QWORD *)a1 + 5) = v25;
          v47 = a2[64];
          swift_bridgeObjectRetain();
          if (v47 == 255)
          {
            *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
            a1[64] = a2[64];
          }
          else
          {
            v48 = *((_QWORD *)a2 + 6);
            v49 = *((_QWORD *)a2 + 7);
            sub_24574E938(v48, v49, v47);
            *((_QWORD *)a1 + 6) = v48;
            *((_QWORD *)a1 + 7) = v49;
            a1[64] = v47;
          }
          v126 = *((_QWORD *)a2 + 10);
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = v126;
          a1[88] = a2[88];
          swift_bridgeObjectRetain();
        }
        v127 = *((_QWORD *)a2 + 13);
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = v127;
        v128 = (int *)type metadata accessor for UserNotification();
        v129 = v128[10];
        v130 = &a1[v129];
        v131 = &a2[v129];
        v132 = sub_2457BAA98();
        v133 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v132 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v133(v130, v131, v132);
        a1[v128[11]] = a2[v128[11]];
        v134 = v128[12];
        v135 = &a1[v134];
        v136 = &a2[v134];
        v137 = *((_QWORD *)v136 + 1);
        *(_QWORD *)v135 = *(_QWORD *)v136;
        *((_QWORD *)v135 + 1) = v137;
        v138 = v128[13];
        v139 = &a1[v138];
        v140 = &a2[v138];
        v141 = *((_QWORD *)v140 + 1);
        *(_QWORD *)v139 = *(_QWORD *)v140;
        *((_QWORD *)v139 + 1) = v141;
        v142 = v128[14];
        v143 = &a1[v142];
        v144 = &a2[v142];
        v145 = *((_QWORD *)v144 + 1);
        *(_QWORD *)v143 = *(_QWORD *)v144;
        *((_QWORD *)v143 + 1) = v145;
        v146 = v128[15];
        v147 = &a1[v146];
        v148 = &a2[v146];
        v149 = *((_QWORD *)v148 + 1);
        *(_QWORD *)v147 = *(_QWORD *)v148;
        *((_QWORD *)v147 + 1) = v149;
        v150 = v128[16];
        v151 = &a1[v150];
        v152 = &a2[v150];
        v153 = *((_QWORD *)v152 + 1);
        *(_QWORD *)v151 = *(_QWORD *)v152;
        *((_QWORD *)v151 + 1) = v153;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v154 = *(int *)(sub_245748A50(&qword_257499718) + 48);
        v155 = &a1[v154];
        v156 = &a2[v154];
        v157 = *((_QWORD *)v156 + 1);
        *(_QWORD *)v155 = *(_QWORD *)v156;
        *((_QWORD *)v155 + 1) = v157;
        v158 = *((_QWORD *)v156 + 3);
        *((_QWORD *)v155 + 2) = *((_QWORD *)v156 + 2);
        *((_QWORD *)v155 + 3) = v158;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 7u:
        v27 = sub_2457BAAE0();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(a1, a2, v27);
        v28 = *(int *)(sub_245748A50(&qword_2574996E0) + 48);
        v29 = &a1[v28];
        v30 = &a2[v28];
        *v29 = *v30;
        v31 = *((_QWORD *)v30 + 2);
        *((_QWORD *)v29 + 1) = *((_QWORD *)v30 + 1);
        *((_QWORD *)v29 + 2) = v31;
        *((_DWORD *)v29 + 6) = *((_DWORD *)v30 + 6);
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 8u:
      case 9u:
      case 0xAu:
        v32 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v32;
        a1[16] = a2[16];
        v33 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v33;
        *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 0xBu:
        v34 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v34;
        a1[16] = a2[16];
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 0xCu:
        v35 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v35;
        v36 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v36;
        v37 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v37 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          v38 = *((_QWORD *)a2 + 4);
          v39 = *((_QWORD *)a2 + 5);
          sub_24574E938(v38, v39, v37);
          *((_QWORD *)a1 + 4) = v38;
          *((_QWORD *)a1 + 5) = v39;
          a1[48] = v37;
        }
        v90 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v90;
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v91 = (int *)type metadata accessor for MailMessage();
        v92 = v91[7];
        v93 = &a1[v92];
        v94 = &a2[v92];
        v95 = sub_2457BAA98();
        v96 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v96(v93, v94, v95);
        a1[v91[8]] = a2[v91[8]];
        v97 = v91[9];
        v98 = &a1[v97];
        v99 = &a2[v97];
        v100 = *((_QWORD *)v99 + 1);
        *(_QWORD *)v98 = *(_QWORD *)v99;
        *((_QWORD *)v98 + 1) = v100;
        v101 = v91[10];
        v102 = &a1[v101];
        v103 = &a2[v101];
        v104 = *((_QWORD *)v103 + 1);
        *(_QWORD *)v102 = *(_QWORD *)v103;
        *((_QWORD *)v102 + 1) = v104;
        *(_QWORD *)&a1[v91[11]] = *(_QWORD *)&a2[v91[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v105 = *(int *)(sub_245748A50(&qword_2574996A0) + 48);
        v106 = &a1[v105];
        v107 = &a2[v105];
        *(_WORD *)v106 = *(_WORD *)v107;
        v106[2] = v107[2];
        goto LABEL_36;
      case 0xDu:
      case 0xFu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        goto LABEL_36;
      case 0xEu:
        v40 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v40;
        v41 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v41;
        v42 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v42 == 255)
        {
          *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
        }
        else
        {
          v43 = *((_QWORD *)a2 + 4);
          v44 = *((_QWORD *)a2 + 5);
          sub_24574E938(v43, v44, v42);
          *((_QWORD *)a1 + 4) = v43;
          *((_QWORD *)a1 + 5) = v44;
          a1[48] = v42;
        }
        v108 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v108;
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v109 = (int *)type metadata accessor for TextMessage();
        v110 = v109[7];
        v111 = &a1[v110];
        v112 = &a2[v110];
        v113 = sub_2457BAA98();
        v114 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v114(v111, v112, v113);
        a1[v109[8]] = a2[v109[8]];
        v115 = v109[9];
        v116 = &a1[v115];
        v117 = &a2[v115];
        v118 = *((_QWORD *)v117 + 1);
        *(_QWORD *)v116 = *(_QWORD *)v117;
        *((_QWORD *)v116 + 1) = v118;
        v119 = v109[10];
        v120 = &a1[v119];
        v121 = &a2[v119];
        v122 = *((_QWORD *)v121 + 1);
        *(_QWORD *)v120 = *(_QWORD *)v121;
        *((_QWORD *)v120 + 1) = v122;
        *(_QWORD *)&a1[v109[11]] = *(_QWORD *)&a2[v109[11]];
        *(_QWORD *)&a1[v109[12]] = *(_QWORD *)&a2[v109[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v123 = *(int *)(sub_245748A50(&qword_257499670) + 48);
        v124 = &a1[v123];
        v125 = &a2[v123];
        *(_WORD *)v124 = *(_WORD *)v125;
        v124[2] = v125[2];
        goto LABEL_36;
      case 0x10u:
        v45 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v45;
        v46 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v46;
        *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
        a1[34] = a2[34];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_36:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t destroy for SummarizationXPCRequest.Request(uint64_t a1)
{
  uint64_t result;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 11:
    case 13:
    case 15:
      goto LABEL_24;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = *(unsigned __int8 *)(a1 + 48);
      if (v3 != 255)
        sub_24574EBF0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v3);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 = a1 + *(int *)(type metadata accessor for MailMessage() + 28);
      v5 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_245748A50(&qword_257499780);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 = *(unsigned __int8 *)(a1 + 48);
      if (v6 != 255)
        sub_24574EBF0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = a1 + *(int *)(type metadata accessor for TextMessage() + 28);
      v8 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = &qword_257499750;
      goto LABEL_15;
    case 4:
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + 40) != 1)
      {
        swift_bridgeObjectRelease();
        v10 = *(unsigned __int8 *)(a1 + 64);
        if (v10 != 255)
          sub_24574EBF0(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v10);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = a1 + *(int *)(type metadata accessor for UserNotification() + 40);
      v12 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v9 = &qword_257499718;
LABEL_15:
      sub_245748A50(v9);
      swift_bridgeObjectRelease();
      goto LABEL_23;
    case 7:
      v13 = sub_2457BAAE0();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a1, v13);
      sub_245748A50(&qword_2574996E0);
      goto LABEL_24;
    case 8:
    case 9:
    case 10:
    case 16:
LABEL_23:
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = *(unsigned __int8 *)(a1 + 48);
      if (v14 != 255)
        sub_24574EBF0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v14);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v15 = a1 + *(int *)(type metadata accessor for MailMessage() + 28);
      v16 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_24;
    case 14:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = *(unsigned __int8 *)(a1 + 48);
      if (v17 != 255)
        sub_24574EBF0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v18 = a1 + *(int *)(type metadata accessor for TextMessage() + 28);
      v19 = sub_2457BAA98();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v18, v19);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_24:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *initializeWithCopy for SummarizationXPCRequest.Request(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  unsigned __int8 *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  char *v51;
  unsigned __int8 *v52;
  uint64_t v53;
  void (*v54)(char *, unsigned __int8 *, uint64_t);
  uint64_t v55;
  char *v56;
  unsigned __int8 *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  unsigned __int8 *v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  unsigned __int8 *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  int *v69;
  uint64_t v70;
  char *v71;
  unsigned __int8 *v72;
  uint64_t v73;
  void (*v74)(char *, unsigned __int8 *, uint64_t);
  uint64_t v75;
  char *v76;
  unsigned __int8 *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  unsigned __int8 *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  unsigned __int8 *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  int *v89;
  uint64_t v90;
  char *v91;
  unsigned __int8 *v92;
  uint64_t v93;
  void (*v94)(char *, unsigned __int8 *, uint64_t);
  uint64_t v95;
  char *v96;
  unsigned __int8 *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  unsigned __int8 *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  unsigned __int8 *v105;
  uint64_t v106;
  int *v107;
  uint64_t v108;
  char *v109;
  unsigned __int8 *v110;
  uint64_t v111;
  void (*v112)(char *, unsigned __int8 *, uint64_t);
  uint64_t v113;
  char *v114;
  unsigned __int8 *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  unsigned __int8 *v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  unsigned __int8 *v123;
  uint64_t v124;
  uint64_t v125;
  int *v126;
  uint64_t v127;
  char *v128;
  unsigned __int8 *v129;
  uint64_t v130;
  void (*v131)(char *, unsigned __int8 *, uint64_t);
  uint64_t v132;
  char *v133;
  unsigned __int8 *v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  unsigned __int8 *v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  unsigned __int8 *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  unsigned __int8 *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  unsigned __int8 *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  unsigned __int8 *v154;
  uint64_t v155;
  uint64_t v156;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 1u:
      v6 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      v7 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v7;
      v8 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        v9 = *((_QWORD *)a2 + 4);
        v10 = *((_QWORD *)a2 + 5);
        sub_24574E938(v9, v10, v8);
        *((_QWORD *)a1 + 4) = v9;
        *((_QWORD *)a1 + 5) = v10;
        a1[48] = v8;
      }
      v48 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v48;
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v49 = (int *)type metadata accessor for MailMessage();
      v50 = v49[7];
      v51 = &a1[v50];
      v52 = &a2[v50];
      v53 = sub_2457BAA98();
      v54 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v53 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v54(v51, v52, v53);
      a1[v49[8]] = a2[v49[8]];
      v55 = v49[9];
      v56 = &a1[v55];
      v57 = &a2[v55];
      v58 = *((_QWORD *)v57 + 1);
      *(_QWORD *)v56 = *(_QWORD *)v57;
      *((_QWORD *)v56 + 1) = v58;
      v59 = v49[10];
      v60 = &a1[v59];
      v61 = &a2[v59];
      v62 = *((_QWORD *)v61 + 1);
      *(_QWORD *)v60 = *(_QWORD *)v61;
      *((_QWORD *)v60 + 1) = v62;
      *(_QWORD *)&a1[v49[11]] = *(_QWORD *)&a2[v49[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v63 = *(int *)(sub_245748A50(&qword_257499780) + 48);
      v64 = &a1[v63];
      v65 = &a2[v63];
      v66 = *((_QWORD *)v65 + 1);
      *(_QWORD *)v64 = *(_QWORD *)v65;
      *((_QWORD *)v64 + 1) = v66;
      *((_QWORD *)v64 + 2) = *((_QWORD *)v65 + 2);
      v64[24] = v65[24];
      v67 = *((_QWORD *)v65 + 5);
      *((_QWORD *)v64 + 4) = *((_QWORD *)v65 + 4);
      *((_QWORD *)v64 + 5) = v67;
      *((_DWORD *)v64 + 12) = *((_DWORD *)v65 + 12);
      *((_QWORD *)v64 + 7) = *((_QWORD *)v65 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 2u:
      v11 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v11;
      v12 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v12;
      a1[32] = a2[32];
      v13 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v13;
      *((_DWORD *)a1 + 14) = *((_DWORD *)a2 + 14);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 3u:
      v14 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v14;
      v15 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v15;
      v16 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        v17 = *((_QWORD *)a2 + 4);
        v18 = *((_QWORD *)a2 + 5);
        sub_24574E938(v17, v18, v16);
        *((_QWORD *)a1 + 4) = v17;
        *((_QWORD *)a1 + 5) = v18;
        a1[48] = v16;
      }
      v68 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v68;
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v69 = (int *)type metadata accessor for TextMessage();
      v70 = v69[7];
      v71 = &a1[v70];
      v72 = &a2[v70];
      v73 = sub_2457BAA98();
      v74 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v73 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v74(v71, v72, v73);
      a1[v69[8]] = a2[v69[8]];
      v75 = v69[9];
      v76 = &a1[v75];
      v77 = &a2[v75];
      v78 = *((_QWORD *)v77 + 1);
      *(_QWORD *)v76 = *(_QWORD *)v77;
      *((_QWORD *)v76 + 1) = v78;
      v79 = v69[10];
      v80 = &a1[v79];
      v81 = &a2[v79];
      v82 = *((_QWORD *)v81 + 1);
      *(_QWORD *)v80 = *(_QWORD *)v81;
      *((_QWORD *)v80 + 1) = v82;
      *(_QWORD *)&a1[v69[11]] = *(_QWORD *)&a2[v69[11]];
      *(_QWORD *)&a1[v69[12]] = *(_QWORD *)&a2[v69[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v83 = *(int *)(sub_245748A50(&qword_257499750) + 48);
      v84 = &a1[v83];
      v85 = &a2[v83];
      v86 = *((_QWORD *)v85 + 1);
      *(_QWORD *)v84 = *(_QWORD *)v85;
      *((_QWORD *)v84 + 1) = v86;
      v87 = *((_QWORD *)v85 + 3);
      *((_QWORD *)v84 + 2) = *((_QWORD *)v85 + 2);
      *((_QWORD *)v84 + 3) = v87;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 4u:
    case 6u:
      v19 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v19;
      v20 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v20;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 5u:
      v21 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v21;
      v22 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v22;
      v23 = *((_QWORD *)a2 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v23 == 1)
      {
        v24 = *((_OWORD *)a2 + 3);
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 3) = v24;
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      }
      else
      {
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v23;
        v45 = a2[64];
        swift_bridgeObjectRetain();
        if (v45 == 255)
        {
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
          a1[64] = a2[64];
        }
        else
        {
          v46 = *((_QWORD *)a2 + 6);
          v47 = *((_QWORD *)a2 + 7);
          sub_24574E938(v46, v47, v45);
          *((_QWORD *)a1 + 6) = v46;
          *((_QWORD *)a1 + 7) = v47;
          a1[64] = v45;
        }
        v124 = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v124;
        a1[88] = a2[88];
        swift_bridgeObjectRetain();
      }
      v125 = *((_QWORD *)a2 + 13);
      *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
      *((_QWORD *)a1 + 13) = v125;
      v126 = (int *)type metadata accessor for UserNotification();
      v127 = v126[10];
      v128 = &a1[v127];
      v129 = &a2[v127];
      v130 = sub_2457BAA98();
      v131 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v130 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v131(v128, v129, v130);
      a1[v126[11]] = a2[v126[11]];
      v132 = v126[12];
      v133 = &a1[v132];
      v134 = &a2[v132];
      v135 = *((_QWORD *)v134 + 1);
      *(_QWORD *)v133 = *(_QWORD *)v134;
      *((_QWORD *)v133 + 1) = v135;
      v136 = v126[13];
      v137 = &a1[v136];
      v138 = &a2[v136];
      v139 = *((_QWORD *)v138 + 1);
      *(_QWORD *)v137 = *(_QWORD *)v138;
      *((_QWORD *)v137 + 1) = v139;
      v140 = v126[14];
      v141 = &a1[v140];
      v142 = &a2[v140];
      v143 = *((_QWORD *)v142 + 1);
      *(_QWORD *)v141 = *(_QWORD *)v142;
      *((_QWORD *)v141 + 1) = v143;
      v144 = v126[15];
      v145 = &a1[v144];
      v146 = &a2[v144];
      v147 = *((_QWORD *)v146 + 1);
      *(_QWORD *)v145 = *(_QWORD *)v146;
      *((_QWORD *)v145 + 1) = v147;
      v148 = v126[16];
      v149 = &a1[v148];
      v150 = &a2[v148];
      v151 = *((_QWORD *)v150 + 1);
      *(_QWORD *)v149 = *(_QWORD *)v150;
      *((_QWORD *)v149 + 1) = v151;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v152 = *(int *)(sub_245748A50(&qword_257499718) + 48);
      v153 = &a1[v152];
      v154 = &a2[v152];
      v155 = *((_QWORD *)v154 + 1);
      *(_QWORD *)v153 = *(_QWORD *)v154;
      *((_QWORD *)v153 + 1) = v155;
      v156 = *((_QWORD *)v154 + 3);
      *((_QWORD *)v153 + 2) = *((_QWORD *)v154 + 2);
      *((_QWORD *)v153 + 3) = v156;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 7u:
      v25 = sub_2457BAAE0();
      (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(a1, a2, v25);
      v26 = *(int *)(sub_245748A50(&qword_2574996E0) + 48);
      v27 = &a1[v26];
      v28 = &a2[v26];
      *v27 = *v28;
      v29 = *((_QWORD *)v28 + 2);
      *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
      *((_QWORD *)v27 + 2) = v29;
      *((_DWORD *)v27 + 6) = *((_DWORD *)v28 + 6);
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 8u:
    case 9u:
    case 0xAu:
      v30 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v30;
      a1[16] = a2[16];
      v31 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 4) = v31;
      *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 0xBu:
      v32 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v32;
      a1[16] = a2[16];
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 0xCu:
      v33 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v33;
      v34 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v34;
      v35 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v35 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        v36 = *((_QWORD *)a2 + 4);
        v37 = *((_QWORD *)a2 + 5);
        sub_24574E938(v36, v37, v35);
        *((_QWORD *)a1 + 4) = v36;
        *((_QWORD *)a1 + 5) = v37;
        a1[48] = v35;
      }
      v88 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v88;
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v89 = (int *)type metadata accessor for MailMessage();
      v90 = v89[7];
      v91 = &a1[v90];
      v92 = &a2[v90];
      v93 = sub_2457BAA98();
      v94 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v93 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v94(v91, v92, v93);
      a1[v89[8]] = a2[v89[8]];
      v95 = v89[9];
      v96 = &a1[v95];
      v97 = &a2[v95];
      v98 = *((_QWORD *)v97 + 1);
      *(_QWORD *)v96 = *(_QWORD *)v97;
      *((_QWORD *)v96 + 1) = v98;
      v99 = v89[10];
      v100 = &a1[v99];
      v101 = &a2[v99];
      v102 = *((_QWORD *)v101 + 1);
      *(_QWORD *)v100 = *(_QWORD *)v101;
      *((_QWORD *)v100 + 1) = v102;
      *(_QWORD *)&a1[v89[11]] = *(_QWORD *)&a2[v89[11]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v103 = *(int *)(sub_245748A50(&qword_2574996A0) + 48);
      v104 = &a1[v103];
      v105 = &a2[v103];
      *(_WORD *)v104 = *(_WORD *)v105;
      v104[2] = v105[2];
      goto LABEL_34;
    case 0xDu:
    case 0xFu:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      a1[8] = a2[8];
      swift_bridgeObjectRetain();
      goto LABEL_34;
    case 0xEu:
      v38 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v38;
      v39 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v39;
      v40 = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v40 == 255)
      {
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        a1[48] = a2[48];
      }
      else
      {
        v41 = *((_QWORD *)a2 + 4);
        v42 = *((_QWORD *)a2 + 5);
        sub_24574E938(v41, v42, v40);
        *((_QWORD *)a1 + 4) = v41;
        *((_QWORD *)a1 + 5) = v42;
        a1[48] = v40;
      }
      v106 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v106;
      a1[72] = a2[72];
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v107 = (int *)type metadata accessor for TextMessage();
      v108 = v107[7];
      v109 = &a1[v108];
      v110 = &a2[v108];
      v111 = sub_2457BAA98();
      v112 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v111 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v112(v109, v110, v111);
      a1[v107[8]] = a2[v107[8]];
      v113 = v107[9];
      v114 = &a1[v113];
      v115 = &a2[v113];
      v116 = *((_QWORD *)v115 + 1);
      *(_QWORD *)v114 = *(_QWORD *)v115;
      *((_QWORD *)v114 + 1) = v116;
      v117 = v107[10];
      v118 = &a1[v117];
      v119 = &a2[v117];
      v120 = *((_QWORD *)v119 + 1);
      *(_QWORD *)v118 = *(_QWORD *)v119;
      *((_QWORD *)v118 + 1) = v120;
      *(_QWORD *)&a1[v107[11]] = *(_QWORD *)&a2[v107[11]];
      *(_QWORD *)&a1[v107[12]] = *(_QWORD *)&a2[v107[12]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v121 = *(int *)(sub_245748A50(&qword_257499670) + 48);
      v122 = &a1[v121];
      v123 = &a2[v121];
      *(_WORD *)v122 = *(_WORD *)v123;
      v122[2] = v123[2];
      goto LABEL_34;
    case 0x10u:
      v43 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v43;
      v44 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v44;
      *((_WORD *)a1 + 16) = *((_WORD *)a2 + 16);
      a1[34] = a2[34];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_34:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *assignWithCopy for SummarizationXPCRequest.Request(char *a1, unsigned __int8 *a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  unsigned __int8 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  __int16 v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  int *v31;
  uint64_t v32;
  char *v33;
  unsigned __int8 *v34;
  uint64_t v35;
  void (*v36)(char *, unsigned __int8 *, uint64_t);
  uint64_t v37;
  char *v38;
  unsigned __int8 *v39;
  uint64_t v40;
  char *v41;
  unsigned __int8 *v42;
  uint64_t v43;
  char *v44;
  unsigned __int8 *v45;
  __int128 v46;
  int *v47;
  uint64_t v48;
  char *v49;
  unsigned __int8 *v50;
  uint64_t v51;
  void (*v52)(char *, unsigned __int8 *, uint64_t);
  uint64_t v53;
  char *v54;
  unsigned __int8 *v55;
  uint64_t v56;
  char *v57;
  unsigned __int8 *v58;
  uint64_t v59;
  char *v60;
  unsigned __int8 *v61;
  __int128 v62;
  int *v63;
  uint64_t v64;
  char *v65;
  unsigned __int8 *v66;
  uint64_t v67;
  void (*v68)(char *, unsigned __int8 *, uint64_t);
  uint64_t v69;
  char *v70;
  unsigned __int8 *v71;
  uint64_t v72;
  char *v73;
  unsigned __int8 *v74;
  uint64_t v75;
  char *v76;
  unsigned __int8 *v77;
  char v78;
  __int128 v79;
  int *v80;
  uint64_t v81;
  char *v82;
  unsigned __int8 *v83;
  uint64_t v84;
  void (*v85)(char *, unsigned __int8 *, uint64_t);
  uint64_t v86;
  char *v87;
  unsigned __int8 *v88;
  uint64_t v89;
  char *v90;
  unsigned __int8 *v91;
  uint64_t v92;
  char *v93;
  unsigned __int8 *v94;
  char v95;
  __int128 v96;
  int *v97;
  uint64_t v98;
  char *v99;
  unsigned __int8 *v100;
  uint64_t v101;
  void (*v102)(char *, unsigned __int8 *, uint64_t);
  uint64_t v103;
  char *v104;
  unsigned __int8 *v105;
  uint64_t v106;
  char *v107;
  unsigned __int8 *v108;
  uint64_t v109;
  char *v110;
  unsigned __int8 *v111;
  uint64_t v112;
  char *v113;
  unsigned __int8 *v114;
  uint64_t v115;
  char *v116;
  unsigned __int8 *v117;
  uint64_t v118;
  char *v119;
  unsigned __int8 *v120;

  if (a1 != (char *)a2)
  {
    sub_2457878A8((uint64_t)a1, (void (*)(_QWORD))type metadata accessor for SummarizationXPCRequest.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v6 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v6 == 255)
        {
          v30 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v30;
        }
        else
        {
          v7 = *((_QWORD *)a2 + 4);
          v8 = *((_QWORD *)a2 + 5);
          sub_24574E938(v7, v8, v6);
          *((_QWORD *)a1 + 4) = v7;
          *((_QWORD *)a1 + 5) = v8;
          a1[48] = v6;
        }
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v31 = (int *)type metadata accessor for MailMessage();
        v32 = v31[7];
        v33 = &a1[v32];
        v34 = &a2[v32];
        v35 = sub_2457BAA98();
        v36 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v35 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v36(v33, v34, v35);
        a1[v31[8]] = a2[v31[8]];
        v37 = v31[9];
        v38 = &a1[v37];
        v39 = &a2[v37];
        *(_QWORD *)v38 = *(_QWORD *)v39;
        *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
        v40 = v31[10];
        v41 = &a1[v40];
        v42 = &a2[v40];
        *(_QWORD *)v41 = *(_QWORD *)v42;
        *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
        *(_QWORD *)&a1[v31[11]] = *(_QWORD *)&a2[v31[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v43 = *(int *)(sub_245748A50(&qword_257499780) + 48);
        v44 = &a1[v43];
        v45 = &a2[v43];
        *(_QWORD *)v44 = *(_QWORD *)v45;
        *((_QWORD *)v44 + 1) = *((_QWORD *)v45 + 1);
        *((_QWORD *)v44 + 2) = *((_QWORD *)v45 + 2);
        v44[24] = v45[24];
        *((_QWORD *)v44 + 4) = *((_QWORD *)v45 + 4);
        *((_QWORD *)v44 + 5) = *((_QWORD *)v45 + 5);
        *((_DWORD *)v44 + 12) = *((_DWORD *)v45 + 12);
        *((_QWORD *)v44 + 7) = *((_QWORD *)v45 + 7);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 2u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        a1[32] = a2[32];
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_DWORD *)a1 + 14) = *((_DWORD *)a2 + 14);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v9 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v9 == 255)
        {
          v46 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v46;
        }
        else
        {
          v10 = *((_QWORD *)a2 + 4);
          v11 = *((_QWORD *)a2 + 5);
          sub_24574E938(v10, v11, v9);
          *((_QWORD *)a1 + 4) = v10;
          *((_QWORD *)a1 + 5) = v11;
          a1[48] = v9;
        }
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v47 = (int *)type metadata accessor for TextMessage();
        v48 = v47[7];
        v49 = &a1[v48];
        v50 = &a2[v48];
        v51 = sub_2457BAA98();
        v52 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v52(v49, v50, v51);
        a1[v47[8]] = a2[v47[8]];
        v53 = v47[9];
        v54 = &a1[v53];
        v55 = &a2[v53];
        *(_QWORD *)v54 = *(_QWORD *)v55;
        *((_QWORD *)v54 + 1) = *((_QWORD *)v55 + 1);
        v56 = v47[10];
        v57 = &a1[v56];
        v58 = &a2[v56];
        *(_QWORD *)v57 = *(_QWORD *)v58;
        *((_QWORD *)v57 + 1) = *((_QWORD *)v58 + 1);
        *(_QWORD *)&a1[v47[11]] = *(_QWORD *)&a2[v47[11]];
        *(_QWORD *)&a1[v47[12]] = *(_QWORD *)&a2[v47[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v59 = *(int *)(sub_245748A50(&qword_257499750) + 48);
        v60 = &a1[v59];
        v61 = &a2[v59];
        *(_QWORD *)v60 = *(_QWORD *)v61;
        *((_QWORD *)v60 + 1) = *((_QWORD *)v61 + 1);
        *((_QWORD *)v60 + 2) = *((_QWORD *)v61 + 2);
        *((_QWORD *)v60 + 3) = *((_QWORD *)v61 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 4u:
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v12 = *((_QWORD *)a2 + 5);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v12 == 1)
        {
          v13 = *((_OWORD *)a2 + 2);
          v14 = *((_OWORD *)a2 + 3);
          v15 = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
          *((_OWORD *)a1 + 3) = v14;
          *((_OWORD *)a1 + 4) = v15;
          *((_OWORD *)a1 + 2) = v13;
        }
        else
        {
          *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
          *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
          v27 = a2[64];
          swift_bridgeObjectRetain();
          if (v27 == 255)
          {
            v96 = *((_OWORD *)a2 + 3);
            a1[64] = a2[64];
            *((_OWORD *)a1 + 3) = v96;
          }
          else
          {
            v28 = *((_QWORD *)a2 + 6);
            v29 = *((_QWORD *)a2 + 7);
            sub_24574E938(v28, v29, v27);
            *((_QWORD *)a1 + 6) = v28;
            *((_QWORD *)a1 + 7) = v29;
            a1[64] = v27;
          }
          *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
          *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
          a1[88] = a2[88];
          swift_bridgeObjectRetain();
        }
        *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
        *((_QWORD *)a1 + 13) = *((_QWORD *)a2 + 13);
        v97 = (int *)type metadata accessor for UserNotification();
        v98 = v97[10];
        v99 = &a1[v98];
        v100 = &a2[v98];
        v101 = sub_2457BAA98();
        v102 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v101 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v102(v99, v100, v101);
        a1[v97[11]] = a2[v97[11]];
        v103 = v97[12];
        v104 = &a1[v103];
        v105 = &a2[v103];
        *(_QWORD *)v104 = *(_QWORD *)v105;
        *((_QWORD *)v104 + 1) = *((_QWORD *)v105 + 1);
        v106 = v97[13];
        v107 = &a1[v106];
        v108 = &a2[v106];
        *(_QWORD *)v107 = *(_QWORD *)v108;
        *((_QWORD *)v107 + 1) = *((_QWORD *)v108 + 1);
        v109 = v97[14];
        v110 = &a1[v109];
        v111 = &a2[v109];
        *(_QWORD *)v110 = *(_QWORD *)v111;
        *((_QWORD *)v110 + 1) = *((_QWORD *)v111 + 1);
        v112 = v97[15];
        v113 = &a1[v112];
        v114 = &a2[v112];
        *(_QWORD *)v113 = *(_QWORD *)v114;
        *((_QWORD *)v113 + 1) = *((_QWORD *)v114 + 1);
        v115 = v97[16];
        v116 = &a1[v115];
        v117 = &a2[v115];
        *(_QWORD *)v116 = *(_QWORD *)v117;
        *((_QWORD *)v116 + 1) = *((_QWORD *)v117 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v118 = *(int *)(sub_245748A50(&qword_257499718) + 48);
        v119 = &a1[v118];
        v120 = &a2[v118];
        *(_QWORD *)v119 = *(_QWORD *)v120;
        *((_QWORD *)v119 + 1) = *((_QWORD *)v120 + 1);
        *((_QWORD *)v119 + 2) = *((_QWORD *)v120 + 2);
        *((_QWORD *)v119 + 3) = *((_QWORD *)v120 + 3);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 7u:
        v16 = sub_2457BAAE0();
        (*(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a1, a2, v16);
        v17 = *(int *)(sub_245748A50(&qword_2574996E0) + 48);
        v18 = &a1[v17];
        v19 = &a2[v17];
        *v18 = *v19;
        *((_QWORD *)v18 + 1) = *((_QWORD *)v19 + 1);
        *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
        *((_DWORD *)v18 + 6) = *((_DWORD *)v19 + 6);
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 8u:
      case 9u:
      case 0xAu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_DWORD *)a1 + 10) = *((_DWORD *)a2 + 10);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 0xBu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        a1[16] = a2[16];
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 0xCu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v20 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v20 == 255)
        {
          v62 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v62;
        }
        else
        {
          v21 = *((_QWORD *)a2 + 4);
          v22 = *((_QWORD *)a2 + 5);
          sub_24574E938(v21, v22, v20);
          *((_QWORD *)a1 + 4) = v21;
          *((_QWORD *)a1 + 5) = v22;
          a1[48] = v20;
        }
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v63 = (int *)type metadata accessor for MailMessage();
        v64 = v63[7];
        v65 = &a1[v64];
        v66 = &a2[v64];
        v67 = sub_2457BAA98();
        v68 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v67 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v68(v65, v66, v67);
        a1[v63[8]] = a2[v63[8]];
        v69 = v63[9];
        v70 = &a1[v69];
        v71 = &a2[v69];
        *(_QWORD *)v70 = *(_QWORD *)v71;
        *((_QWORD *)v70 + 1) = *((_QWORD *)v71 + 1);
        v72 = v63[10];
        v73 = &a1[v72];
        v74 = &a2[v72];
        *(_QWORD *)v73 = *(_QWORD *)v74;
        *((_QWORD *)v73 + 1) = *((_QWORD *)v74 + 1);
        *(_QWORD *)&a1[v63[11]] = *(_QWORD *)&a2[v63[11]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v75 = *(int *)(sub_245748A50(&qword_2574996A0) + 48);
        v76 = &a1[v75];
        v77 = &a2[v75];
        v78 = v77[2];
        *(_WORD *)v76 = *(_WORD *)v77;
        v76[2] = v78;
        goto LABEL_35;
      case 0xDu:
      case 0xFu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        goto LABEL_35;
      case 0xEu:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v23 = a2[48];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v23 == 255)
        {
          v79 = *((_OWORD *)a2 + 2);
          a1[48] = a2[48];
          *((_OWORD *)a1 + 2) = v79;
        }
        else
        {
          v24 = *((_QWORD *)a2 + 4);
          v25 = *((_QWORD *)a2 + 5);
          sub_24574E938(v24, v25, v23);
          *((_QWORD *)a1 + 4) = v24;
          *((_QWORD *)a1 + 5) = v25;
          a1[48] = v23;
        }
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v80 = (int *)type metadata accessor for TextMessage();
        v81 = v80[7];
        v82 = &a1[v81];
        v83 = &a2[v81];
        v84 = sub_2457BAA98();
        v85 = *(void (**)(char *, unsigned __int8 *, uint64_t))(*(_QWORD *)(v84 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v85(v82, v83, v84);
        a1[v80[8]] = a2[v80[8]];
        v86 = v80[9];
        v87 = &a1[v86];
        v88 = &a2[v86];
        *(_QWORD *)v87 = *(_QWORD *)v88;
        *((_QWORD *)v87 + 1) = *((_QWORD *)v88 + 1);
        v89 = v80[10];
        v90 = &a1[v89];
        v91 = &a2[v89];
        *(_QWORD *)v90 = *(_QWORD *)v91;
        *((_QWORD *)v90 + 1) = *((_QWORD *)v91 + 1);
        *(_QWORD *)&a1[v80[11]] = *(_QWORD *)&a2[v80[11]];
        *(_QWORD *)&a1[v80[12]] = *(_QWORD *)&a2[v80[12]];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v92 = *(int *)(sub_245748A50(&qword_257499670) + 48);
        v93 = &a1[v92];
        v94 = &a2[v92];
        v95 = v94[2];
        *(_WORD *)v93 = *(_WORD *)v94;
        v93[2] = v95;
        goto LABEL_35;
      case 0x10u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        v26 = *((_WORD *)a2 + 16);
        a1[34] = a2[34];
        *((_WORD *)a1 + 16) = v26;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_35:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *initializeWithTake for SummarizationXPCRequest.Request(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      v7 = a2[3];
      a1[2] = a2[2];
      a1[3] = v7;
      *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v8 = (int *)type metadata accessor for MailMessage();
      v9 = v8[7];
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_2457BAA98();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
      *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
      *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
      *(_OWORD *)((char *)a1 + v8[10]) = *(_OWORD *)((char *)a2 + v8[10]);
      *(_QWORD *)((char *)a1 + v8[11]) = *(_QWORD *)((char *)a2 + v8[11]);
      v13 = *(int *)(sub_245748A50(&qword_257499780) + 48);
      v14 = (_OWORD *)((char *)a1 + v13);
      v15 = (_OWORD *)((char *)a2 + v13);
      v16 = v15[1];
      *v14 = *v15;
      v14[1] = v16;
      v17 = v15[3];
      v14[2] = v15[2];
      v14[3] = v17;
      goto LABEL_9;
    case 3u:
      v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      v19 = a2[3];
      a1[2] = a2[2];
      a1[3] = v19;
      *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v20 = (int *)type metadata accessor for TextMessage();
      v21 = v20[7];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      v24 = sub_2457BAA98();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
      *((_BYTE *)a1 + v20[8]) = *((_BYTE *)a2 + v20[8]);
      *(_OWORD *)((char *)a1 + v20[9]) = *(_OWORD *)((char *)a2 + v20[9]);
      *(_OWORD *)((char *)a1 + v20[10]) = *(_OWORD *)((char *)a2 + v20[10]);
      *(_QWORD *)((char *)a1 + v20[11]) = *(_QWORD *)((char *)a2 + v20[11]);
      *(_QWORD *)((char *)a1 + v20[12]) = *(_QWORD *)((char *)a2 + v20[12]);
      v25 = *(int *)(sub_245748A50(&qword_257499750) + 48);
      v26 = (_OWORD *)((char *)a1 + v25);
      v27 = (_OWORD *)((char *)a2 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      goto LABEL_9;
    case 5u:
      v29 = a2[1];
      *a1 = *a2;
      a1[1] = v29;
      v30 = a2[3];
      a1[2] = a2[2];
      a1[3] = v30;
      a1[4] = a2[4];
      *(_OWORD *)((char *)a1 + 73) = *(_OWORD *)((char *)a2 + 73);
      a1[6] = a2[6];
      v31 = (int *)type metadata accessor for UserNotification();
      v32 = v31[10];
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = sub_2457BAA98();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      *((_BYTE *)a1 + v31[11]) = *((_BYTE *)a2 + v31[11]);
      *(_OWORD *)((char *)a1 + v31[12]) = *(_OWORD *)((char *)a2 + v31[12]);
      *(_OWORD *)((char *)a1 + v31[13]) = *(_OWORD *)((char *)a2 + v31[13]);
      *(_OWORD *)((char *)a1 + v31[14]) = *(_OWORD *)((char *)a2 + v31[14]);
      *(_OWORD *)((char *)a1 + v31[15]) = *(_OWORD *)((char *)a2 + v31[15]);
      *(_OWORD *)((char *)a1 + v31[16]) = *(_OWORD *)((char *)a2 + v31[16]);
      v36 = *(int *)(sub_245748A50(&qword_257499718) + 48);
      v37 = (_OWORD *)((char *)a1 + v36);
      v38 = (_OWORD *)((char *)a2 + v36);
      v39 = v38[1];
      *v37 = *v38;
      v37[1] = v39;
      goto LABEL_9;
    case 7u:
      v40 = sub_2457BAAE0();
      (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(a1, a2, v40);
      v41 = *(int *)(sub_245748A50(&qword_2574996E0) + 48);
      v42 = (_OWORD *)((char *)a1 + v41);
      v43 = (_OWORD *)((char *)a2 + v41);
      *v42 = *v43;
      *(_OWORD *)((char *)v42 + 12) = *(_OWORD *)((char *)v43 + 12);
      goto LABEL_9;
    case 0xCu:
      v44 = a2[1];
      *a1 = *a2;
      a1[1] = v44;
      v45 = a2[3];
      a1[2] = a2[2];
      a1[3] = v45;
      *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v46 = (int *)type metadata accessor for MailMessage();
      v47 = v46[7];
      v48 = (char *)a1 + v47;
      v49 = (char *)a2 + v47;
      v50 = sub_2457BAA98();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
      *((_BYTE *)a1 + v46[8]) = *((_BYTE *)a2 + v46[8]);
      *(_OWORD *)((char *)a1 + v46[9]) = *(_OWORD *)((char *)a2 + v46[9]);
      *(_OWORD *)((char *)a1 + v46[10]) = *(_OWORD *)((char *)a2 + v46[10]);
      *(_QWORD *)((char *)a1 + v46[11]) = *(_QWORD *)((char *)a2 + v46[11]);
      v51 = *(int *)(sub_245748A50(&qword_2574996A0) + 48);
      v52 = (char *)a1 + v51;
      v53 = (char *)a2 + v51;
      *(_WORD *)v52 = *(_WORD *)v53;
      v52[2] = v53[2];
      goto LABEL_9;
    case 0xEu:
      v54 = a2[1];
      *a1 = *a2;
      a1[1] = v54;
      v55 = a2[3];
      a1[2] = a2[2];
      a1[3] = v55;
      *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v56 = (int *)type metadata accessor for TextMessage();
      v57 = v56[7];
      v58 = (char *)a1 + v57;
      v59 = (char *)a2 + v57;
      v60 = sub_2457BAA98();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
      *((_BYTE *)a1 + v56[8]) = *((_BYTE *)a2 + v56[8]);
      *(_OWORD *)((char *)a1 + v56[9]) = *(_OWORD *)((char *)a2 + v56[9]);
      *(_OWORD *)((char *)a1 + v56[10]) = *(_OWORD *)((char *)a2 + v56[10]);
      *(_QWORD *)((char *)a1 + v56[11]) = *(_QWORD *)((char *)a2 + v56[11]);
      *(_QWORD *)((char *)a1 + v56[12]) = *(_QWORD *)((char *)a2 + v56[12]);
      v61 = *(int *)(sub_245748A50(&qword_257499670) + 48);
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      *(_WORD *)v62 = *(_WORD *)v63;
      v62[2] = v63[2];
LABEL_9:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *assignWithTake for SummarizationXPCRequest.Request(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  _OWORD *v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  int *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  _OWORD *v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  _OWORD *v42;
  _OWORD *v43;
  __int128 v44;
  __int128 v45;
  int *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  __int128 v54;
  __int128 v55;
  int *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;

  if (a1 != a2)
  {
    sub_2457878A8((uint64_t)a1, (void (*)(_QWORD))type metadata accessor for SummarizationXPCRequest.Request);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        v7 = a2[3];
        a1[2] = a2[2];
        a1[3] = v7;
        *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v8 = (int *)type metadata accessor for MailMessage();
        v9 = v8[7];
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_2457BAA98();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
        *((_BYTE *)a1 + v8[8]) = *((_BYTE *)a2 + v8[8]);
        *(_OWORD *)((char *)a1 + v8[9]) = *(_OWORD *)((char *)a2 + v8[9]);
        *(_OWORD *)((char *)a1 + v8[10]) = *(_OWORD *)((char *)a2 + v8[10]);
        *(_QWORD *)((char *)a1 + v8[11]) = *(_QWORD *)((char *)a2 + v8[11]);
        v13 = *(int *)(sub_245748A50(&qword_257499780) + 48);
        v14 = (_OWORD *)((char *)a1 + v13);
        v15 = (_OWORD *)((char *)a2 + v13);
        v16 = v15[1];
        *v14 = *v15;
        v14[1] = v16;
        v17 = v15[3];
        v14[2] = v15[2];
        v14[3] = v17;
        goto LABEL_10;
      case 3u:
        v18 = a2[1];
        *a1 = *a2;
        a1[1] = v18;
        v19 = a2[3];
        a1[2] = a2[2];
        a1[3] = v19;
        *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v20 = (int *)type metadata accessor for TextMessage();
        v21 = v20[7];
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_2457BAA98();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
        *((_BYTE *)a1 + v20[8]) = *((_BYTE *)a2 + v20[8]);
        *(_OWORD *)((char *)a1 + v20[9]) = *(_OWORD *)((char *)a2 + v20[9]);
        *(_OWORD *)((char *)a1 + v20[10]) = *(_OWORD *)((char *)a2 + v20[10]);
        *(_QWORD *)((char *)a1 + v20[11]) = *(_QWORD *)((char *)a2 + v20[11]);
        *(_QWORD *)((char *)a1 + v20[12]) = *(_QWORD *)((char *)a2 + v20[12]);
        v25 = *(int *)(sub_245748A50(&qword_257499750) + 48);
        v26 = (_OWORD *)((char *)a1 + v25);
        v27 = (_OWORD *)((char *)a2 + v25);
        v28 = v27[1];
        *v26 = *v27;
        v26[1] = v28;
        goto LABEL_10;
      case 5u:
        v29 = a2[1];
        *a1 = *a2;
        a1[1] = v29;
        v30 = a2[3];
        a1[2] = a2[2];
        a1[3] = v30;
        a1[4] = a2[4];
        *(_OWORD *)((char *)a1 + 73) = *(_OWORD *)((char *)a2 + 73);
        a1[6] = a2[6];
        v31 = (int *)type metadata accessor for UserNotification();
        v32 = v31[10];
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_2457BAA98();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        *((_BYTE *)a1 + v31[11]) = *((_BYTE *)a2 + v31[11]);
        *(_OWORD *)((char *)a1 + v31[12]) = *(_OWORD *)((char *)a2 + v31[12]);
        *(_OWORD *)((char *)a1 + v31[13]) = *(_OWORD *)((char *)a2 + v31[13]);
        *(_OWORD *)((char *)a1 + v31[14]) = *(_OWORD *)((char *)a2 + v31[14]);
        *(_OWORD *)((char *)a1 + v31[15]) = *(_OWORD *)((char *)a2 + v31[15]);
        *(_OWORD *)((char *)a1 + v31[16]) = *(_OWORD *)((char *)a2 + v31[16]);
        v36 = *(int *)(sub_245748A50(&qword_257499718) + 48);
        v37 = (_OWORD *)((char *)a1 + v36);
        v38 = (_OWORD *)((char *)a2 + v36);
        v39 = v38[1];
        *v37 = *v38;
        v37[1] = v39;
        goto LABEL_10;
      case 7u:
        v40 = sub_2457BAAE0();
        (*(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v40 - 8) + 32))(a1, a2, v40);
        v41 = *(int *)(sub_245748A50(&qword_2574996E0) + 48);
        v42 = (_OWORD *)((char *)a1 + v41);
        v43 = (_OWORD *)((char *)a2 + v41);
        *v42 = *v43;
        *(_OWORD *)((char *)v42 + 12) = *(_OWORD *)((char *)v43 + 12);
        goto LABEL_10;
      case 0xCu:
        v44 = a2[1];
        *a1 = *a2;
        a1[1] = v44;
        v45 = a2[3];
        a1[2] = a2[2];
        a1[3] = v45;
        *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v46 = (int *)type metadata accessor for MailMessage();
        v47 = v46[7];
        v48 = (char *)a1 + v47;
        v49 = (char *)a2 + v47;
        v50 = sub_2457BAA98();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 32))(v48, v49, v50);
        *((_BYTE *)a1 + v46[8]) = *((_BYTE *)a2 + v46[8]);
        *(_OWORD *)((char *)a1 + v46[9]) = *(_OWORD *)((char *)a2 + v46[9]);
        *(_OWORD *)((char *)a1 + v46[10]) = *(_OWORD *)((char *)a2 + v46[10]);
        *(_QWORD *)((char *)a1 + v46[11]) = *(_QWORD *)((char *)a2 + v46[11]);
        v51 = *(int *)(sub_245748A50(&qword_2574996A0) + 48);
        v52 = (char *)a1 + v51;
        v53 = (char *)a2 + v51;
        *(_WORD *)v52 = *(_WORD *)v53;
        v52[2] = v53[2];
        goto LABEL_10;
      case 0xEu:
        v54 = a2[1];
        *a1 = *a2;
        a1[1] = v54;
        v55 = a2[3];
        a1[2] = a2[2];
        a1[3] = v55;
        *(_OWORD *)((char *)a1 + 57) = *(_OWORD *)((char *)a2 + 57);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v56 = (int *)type metadata accessor for TextMessage();
        v57 = v56[7];
        v58 = (char *)a1 + v57;
        v59 = (char *)a2 + v57;
        v60 = sub_2457BAA98();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 32))(v58, v59, v60);
        *((_BYTE *)a1 + v56[8]) = *((_BYTE *)a2 + v56[8]);
        *(_OWORD *)((char *)a1 + v56[9]) = *(_OWORD *)((char *)a2 + v56[9]);
        *(_OWORD *)((char *)a1 + v56[10]) = *(_OWORD *)((char *)a2 + v56[10]);
        *(_QWORD *)((char *)a1 + v56[11]) = *(_QWORD *)((char *)a2 + v56[11]);
        *(_QWORD *)((char *)a1 + v56[12]) = *(_QWORD *)((char *)a2 + v56[12]);
        v61 = *(int *)(sub_245748A50(&qword_257499670) + 48);
        v62 = (char *)a1 + v61;
        v63 = (char *)a2 + v61;
        *(_WORD *)v62 = *(_WORD *)v63;
        v62[2] = v63[2];
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_24578E980()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  char v8;
  char v9;
  char v10;
  uint64_t v11;
  char *v12;
  void *v13;
  char *v14;
  void *v15;
  char *v16;
  void *v17;
  char *v18;
  void *v19;
  void *v20;
  void *v21;
  void *v22;
  char *v23;
  void *v24;
  uint64_t *v25;
  void *v26;
  void *v27;
  uint64_t v28;

  v11 = MEMORY[0x24BEE0158] + 64;
  result = type metadata accessor for MailMessage();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v12 = &v10;
    v13 = &unk_2457C2088;
    result = type metadata accessor for TextMessage();
    if (v2 <= 0x3F)
    {
      swift_getTupleTypeLayout2();
      v14 = &v9;
      v15 = &unk_2457C20A0;
      result = type metadata accessor for UserNotification();
      if (v3 <= 0x3F)
      {
        swift_getTupleTypeLayout2();
        v16 = &v8;
        v17 = &unk_2457C20A0;
        result = sub_2457BAAE0();
        if (v4 <= 0x3F)
        {
          swift_getTupleTypeLayout2();
          v18 = &v7;
          v19 = &unk_2457C20D0;
          v20 = &unk_2457C20D0;
          v21 = &unk_2457C20D0;
          v22 = &unk_2457C20E8;
          swift_getTupleTypeLayout2();
          v23 = &v6;
          v24 = &unk_2457C2118;
          swift_getTupleTypeLayout2();
          v25 = &v5;
          v26 = &unk_2457C2118;
          v27 = &unk_2457C2130;
          v28 = MEMORY[0x24BEE0178] + 64;
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

void type metadata accessor for SummarizationXPCRequest.RequestInfo()
{
  sub_245751428();
}

uint64_t storeEnumTagSinglePayload for SummarizationXPCRequest.Request.Category(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_24578EB88 + 4 * byte_2457C1DB9[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_24578EBBC + 4 * byte_2457C1DB4[v4]))();
}

uint64_t sub_24578EBBC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24578EBC4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24578EBCCLL);
  return result;
}

uint64_t sub_24578EBD8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24578EBE0);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_24578EBE4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24578EBEC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SummarizationXPCRequest.Request.Category()
{
  sub_245751428();
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.RequestInfo.CodingKeys()
{
  return &type metadata for SummarizationXPCRequest.RequestInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for SummarizationXPCRequest.Request.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xEE)
  {
    if (a2 + 18 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 18) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 19;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v5 = v6 - 19;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarizationXPCRequest.Request.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_24578ECEC + 4 * byte_2457C1DC3[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_24578ED20 + 4 * byte_2457C1DBE[v4]))();
}

uint64_t sub_24578ED20(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24578ED28(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24578ED30);
  return result;
}

uint64_t sub_24578ED3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24578ED44);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_24578ED48(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24578ED50(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.CodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.CodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.CheckIsClientEnabledCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.CheckIsClientEnabledCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.PrewarmCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.PrewarmCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeMailMessageCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeMailMessageThreadCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageThreadCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeTextMessageCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeTextMessageThreadCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageThreadCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeUserNotificationCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeUserNotificationThreadCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationThreadCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.IsLanguageEligibleForTextAssistantSummarizationCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.IsLanguageEligibleForTextAssistantSummarizationCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.IsTextEligibleForTextAssistantSummarizationCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.IsTextEligibleForTextAssistantSummarizationCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.SummarizeTextForTextAssistantCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.SummarizeTextForTextAssistantCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.PerformStreamingSummarizeTextForTextAssistantCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.PerformStreamingSummarizeTextForTextAssistantCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForTextCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageThreadCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageThreadCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageThreadCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageThreadCodingKeys;
}

uint64_t _s4Sage23SummarizationXPCRequestC11RequestInfoV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24578EEC8 + 4 * byte_2457C1DCD[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24578EEFC + 4 * byte_2457C1DC8[v4]))();
}

uint64_t sub_24578EEFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24578EF04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24578EF0CLL);
  return result;
}

uint64_t sub_24578EF18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24578EF20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24578EF24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24578EF2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.GenerateVisualPromptForNoteMessageCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForNoteMessageCodingKeys;
}

uint64_t _s4Sage23SummarizationXPCRequestC5ErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24578EF88 + 4 * byte_2457C1DD2[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24578EFA8 + 4 * byte_2457C1DD7[v4]))();
}

_BYTE *sub_24578EF88(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24578EFA8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24578EFB0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24578EFB8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24578EFC0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24578EFC8(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCRequest.Request.TestTaskCancellationCodingKeys()
{
  return &type metadata for SummarizationXPCRequest.Request.TestTaskCancellationCodingKeys;
}

unint64_t sub_24578EFE8()
{
  unint64_t result;

  result = qword_257499928;
  if (!qword_257499928)
  {
    result = MEMORY[0x24953B288](&unk_2457C25F0, &type metadata for SummarizationXPCRequest.Request.TestTaskCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499928);
  }
  return result;
}

unint64_t sub_24578F028()
{
  unint64_t result;

  result = qword_257499930;
  if (!qword_257499930)
  {
    result = MEMORY[0x24953B288](&unk_2457C26A8, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForNoteMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499930);
  }
  return result;
}

unint64_t sub_24578F068()
{
  unint64_t result;

  result = qword_257499938;
  if (!qword_257499938)
  {
    result = MEMORY[0x24953B288](&unk_2457C2760, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499938);
  }
  return result;
}

unint64_t sub_24578F0A8()
{
  unint64_t result;

  result = qword_257499940;
  if (!qword_257499940)
  {
    result = MEMORY[0x24953B288](&unk_2457C2818, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499940);
  }
  return result;
}

unint64_t sub_24578F0E8()
{
  unint64_t result;

  result = qword_257499948;
  if (!qword_257499948)
  {
    result = MEMORY[0x24953B288](&unk_2457C28D0, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499948);
  }
  return result;
}

unint64_t sub_24578F128()
{
  unint64_t result;

  result = qword_257499950;
  if (!qword_257499950)
  {
    result = MEMORY[0x24953B288](&unk_2457C2988, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499950);
  }
  return result;
}

unint64_t sub_24578F168()
{
  unint64_t result;

  result = qword_257499958;
  if (!qword_257499958)
  {
    result = MEMORY[0x24953B288](&unk_2457C2A40, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499958);
  }
  return result;
}

unint64_t sub_24578F1A8()
{
  unint64_t result;

  result = qword_257499960;
  if (!qword_257499960)
  {
    result = MEMORY[0x24953B288](&unk_2457C2AF8, &type metadata for SummarizationXPCRequest.Request.PerformStreamingSummarizeTextForTextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499960);
  }
  return result;
}

unint64_t sub_24578F1E8()
{
  unint64_t result;

  result = qword_257499968;
  if (!qword_257499968)
  {
    result = MEMORY[0x24953B288](&unk_2457C2BB0, &type metadata for SummarizationXPCRequest.Request.SummarizeTextForTextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499968);
  }
  return result;
}

unint64_t sub_24578F228()
{
  unint64_t result;

  result = qword_257499970;
  if (!qword_257499970)
  {
    result = MEMORY[0x24953B288](&unk_2457C2C68, &type metadata for SummarizationXPCRequest.Request.IsTextEligibleForTextAssistantSummarizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499970);
  }
  return result;
}

unint64_t sub_24578F268()
{
  unint64_t result;

  result = qword_257499978;
  if (!qword_257499978)
  {
    result = MEMORY[0x24953B288](&unk_2457C2D20, &type metadata for SummarizationXPCRequest.Request.IsLanguageEligibleForTextAssistantSummarizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499978);
  }
  return result;
}

unint64_t sub_24578F2A8()
{
  unint64_t result;

  result = qword_257499980;
  if (!qword_257499980)
  {
    result = MEMORY[0x24953B288](&unk_2457C2DD8, &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499980);
  }
  return result;
}

unint64_t sub_24578F2E8()
{
  unint64_t result;

  result = qword_257499988;
  if (!qword_257499988)
  {
    result = MEMORY[0x24953B288](&unk_2457C2E90, &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499988);
  }
  return result;
}

unint64_t sub_24578F328()
{
  unint64_t result;

  result = qword_257499990;
  if (!qword_257499990)
  {
    result = MEMORY[0x24953B288](&unk_2457C2F48, &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499990);
  }
  return result;
}

unint64_t sub_24578F368()
{
  unint64_t result;

  result = qword_257499998;
  if (!qword_257499998)
  {
    result = MEMORY[0x24953B288](&unk_2457C3000, &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499998);
  }
  return result;
}

unint64_t sub_24578F3A8()
{
  unint64_t result;

  result = qword_2574999A0;
  if (!qword_2574999A0)
  {
    result = MEMORY[0x24953B288](&unk_2457C30B8, &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999A0);
  }
  return result;
}

unint64_t sub_24578F3E8()
{
  unint64_t result;

  result = qword_2574999A8;
  if (!qword_2574999A8)
  {
    result = MEMORY[0x24953B288](&unk_2457C3170, &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999A8);
  }
  return result;
}

unint64_t sub_24578F428()
{
  unint64_t result;

  result = qword_2574999B0;
  if (!qword_2574999B0)
  {
    result = MEMORY[0x24953B288](&unk_2457C3278, &type metadata for SummarizationXPCRequest.Request.CheckIsClientEnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999B0);
  }
  return result;
}

unint64_t sub_24578F468()
{
  unint64_t result;

  result = qword_2574999B8;
  if (!qword_2574999B8)
  {
    result = MEMORY[0x24953B288](&unk_2457C3330, &type metadata for SummarizationXPCRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999B8);
  }
  return result;
}

unint64_t sub_24578F4A8()
{
  unint64_t result;

  result = qword_2574999C0;
  if (!qword_2574999C0)
  {
    result = MEMORY[0x24953B288](&unk_2457C33E8, &type metadata for SummarizationXPCRequest.RequestInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999C0);
  }
  return result;
}

unint64_t sub_24578F4E8()
{
  unint64_t result;

  result = qword_2574999C8;
  if (!qword_2574999C8)
  {
    result = MEMORY[0x24953B288](&unk_2457C3358, &type metadata for SummarizationXPCRequest.RequestInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999C8);
  }
  return result;
}

unint64_t sub_24578F528()
{
  unint64_t result;

  result = qword_2574999D0;
  if (!qword_2574999D0)
  {
    result = MEMORY[0x24953B288](&unk_2457C3380, &type metadata for SummarizationXPCRequest.RequestInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999D0);
  }
  return result;
}

unint64_t sub_24578F568()
{
  unint64_t result;

  result = qword_2574999D8;
  if (!qword_2574999D8)
  {
    result = MEMORY[0x24953B288](&unk_2457C31E8, &type metadata for SummarizationXPCRequest.Request.CheckIsClientEnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999D8);
  }
  return result;
}

unint64_t sub_24578F5A8()
{
  unint64_t result;

  result = qword_2574999E0;
  if (!qword_2574999E0)
  {
    result = MEMORY[0x24953B288](&unk_2457C3210, &type metadata for SummarizationXPCRequest.Request.CheckIsClientEnabledCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999E0);
  }
  return result;
}

unint64_t sub_24578F5E8()
{
  unint64_t result;

  result = qword_2574999E8;
  if (!qword_2574999E8)
  {
    result = MEMORY[0x24953B288](&unk_2457C3198, &type metadata for SummarizationXPCRequest.Request.PrewarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999E8);
  }
  return result;
}

unint64_t sub_24578F628()
{
  unint64_t result;

  result = qword_2574999F0;
  if (!qword_2574999F0)
  {
    result = MEMORY[0x24953B288](&unk_2457C31C0, &type metadata for SummarizationXPCRequest.Request.PrewarmCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999F0);
  }
  return result;
}

unint64_t sub_24578F668()
{
  unint64_t result;

  result = qword_2574999F8;
  if (!qword_2574999F8)
  {
    result = MEMORY[0x24953B288](&unk_2457C30E0, &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_2574999F8);
  }
  return result;
}

unint64_t sub_24578F6A8()
{
  unint64_t result;

  result = qword_257499A00;
  if (!qword_257499A00)
  {
    result = MEMORY[0x24953B288](&unk_2457C3108, &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A00);
  }
  return result;
}

unint64_t sub_24578F6E8()
{
  unint64_t result;

  result = qword_257499A08;
  if (!qword_257499A08)
  {
    result = MEMORY[0x24953B288](&unk_2457C3028, &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A08);
  }
  return result;
}

unint64_t sub_24578F728()
{
  unint64_t result;

  result = qword_257499A10;
  if (!qword_257499A10)
  {
    result = MEMORY[0x24953B288](&unk_2457C3050, &type metadata for SummarizationXPCRequest.Request.SummarizeMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A10);
  }
  return result;
}

unint64_t sub_24578F768()
{
  unint64_t result;

  result = qword_257499A18;
  if (!qword_257499A18)
  {
    result = MEMORY[0x24953B288](&unk_2457C2F70, &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A18);
  }
  return result;
}

unint64_t sub_24578F7A8()
{
  unint64_t result;

  result = qword_257499A20;
  if (!qword_257499A20)
  {
    result = MEMORY[0x24953B288](&unk_2457C2F98, &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A20);
  }
  return result;
}

unint64_t sub_24578F7E8()
{
  unint64_t result;

  result = qword_257499A28;
  if (!qword_257499A28)
  {
    result = MEMORY[0x24953B288](&unk_2457C2EB8, &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A28);
  }
  return result;
}

unint64_t sub_24578F828()
{
  unint64_t result;

  result = qword_257499A30;
  if (!qword_257499A30)
  {
    result = MEMORY[0x24953B288](&unk_2457C2EE0, &type metadata for SummarizationXPCRequest.Request.SummarizeTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A30);
  }
  return result;
}

unint64_t sub_24578F868()
{
  unint64_t result;

  result = qword_257499A38;
  if (!qword_257499A38)
  {
    result = MEMORY[0x24953B288](&unk_2457C2E00, &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A38);
  }
  return result;
}

unint64_t sub_24578F8A8()
{
  unint64_t result;

  result = qword_257499A40;
  if (!qword_257499A40)
  {
    result = MEMORY[0x24953B288](&unk_2457C2E28, &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A40);
  }
  return result;
}

unint64_t sub_24578F8E8()
{
  unint64_t result;

  result = qword_257499A48;
  if (!qword_257499A48)
  {
    result = MEMORY[0x24953B288](&unk_2457C2D48, &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A48);
  }
  return result;
}

unint64_t sub_24578F928()
{
  unint64_t result;

  result = qword_257499A50;
  if (!qword_257499A50)
  {
    result = MEMORY[0x24953B288](&unk_2457C2D70, &type metadata for SummarizationXPCRequest.Request.SummarizeUserNotificationThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A50);
  }
  return result;
}

unint64_t sub_24578F968()
{
  unint64_t result;

  result = qword_257499A58;
  if (!qword_257499A58)
  {
    result = MEMORY[0x24953B288](&unk_2457C2C90, &type metadata for SummarizationXPCRequest.Request.IsLanguageEligibleForTextAssistantSummarizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A58);
  }
  return result;
}

unint64_t sub_24578F9A8()
{
  unint64_t result;

  result = qword_257499A60;
  if (!qword_257499A60)
  {
    result = MEMORY[0x24953B288](&unk_2457C2CB8, &type metadata for SummarizationXPCRequest.Request.IsLanguageEligibleForTextAssistantSummarizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A60);
  }
  return result;
}

unint64_t sub_24578F9E8()
{
  unint64_t result;

  result = qword_257499A68;
  if (!qword_257499A68)
  {
    result = MEMORY[0x24953B288](&unk_2457C2BD8, &type metadata for SummarizationXPCRequest.Request.IsTextEligibleForTextAssistantSummarizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A68);
  }
  return result;
}

unint64_t sub_24578FA28()
{
  unint64_t result;

  result = qword_257499A70;
  if (!qword_257499A70)
  {
    result = MEMORY[0x24953B288](&unk_2457C2C00, &type metadata for SummarizationXPCRequest.Request.IsTextEligibleForTextAssistantSummarizationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A70);
  }
  return result;
}

unint64_t sub_24578FA68()
{
  unint64_t result;

  result = qword_257499A78;
  if (!qword_257499A78)
  {
    result = MEMORY[0x24953B288](&unk_2457C2B20, &type metadata for SummarizationXPCRequest.Request.SummarizeTextForTextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A78);
  }
  return result;
}

unint64_t sub_24578FAA8()
{
  unint64_t result;

  result = qword_257499A80;
  if (!qword_257499A80)
  {
    result = MEMORY[0x24953B288](&unk_2457C2B48, &type metadata for SummarizationXPCRequest.Request.SummarizeTextForTextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A80);
  }
  return result;
}

unint64_t sub_24578FAE8()
{
  unint64_t result;

  result = qword_257499A88;
  if (!qword_257499A88)
  {
    result = MEMORY[0x24953B288](&unk_2457C2A68, &type metadata for SummarizationXPCRequest.Request.PerformStreamingSummarizeTextForTextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A88);
  }
  return result;
}

unint64_t sub_24578FB28()
{
  unint64_t result;

  result = qword_257499A90;
  if (!qword_257499A90)
  {
    result = MEMORY[0x24953B288](&unk_2457C2A90, &type metadata for SummarizationXPCRequest.Request.PerformStreamingSummarizeTextForTextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A90);
  }
  return result;
}

unint64_t sub_24578FB68()
{
  unint64_t result;

  result = qword_257499A98;
  if (!qword_257499A98)
  {
    result = MEMORY[0x24953B288](&unk_2457C29B0, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499A98);
  }
  return result;
}

unint64_t sub_24578FBA8()
{
  unint64_t result;

  result = qword_257499AA0;
  if (!qword_257499AA0)
  {
    result = MEMORY[0x24953B288](&unk_2457C29D8, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AA0);
  }
  return result;
}

unint64_t sub_24578FBE8()
{
  unint64_t result;

  result = qword_257499AA8;
  if (!qword_257499AA8)
  {
    result = MEMORY[0x24953B288](&unk_2457C28F8, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AA8);
  }
  return result;
}

unint64_t sub_24578FC28()
{
  unint64_t result;

  result = qword_257499AB0;
  if (!qword_257499AB0)
  {
    result = MEMORY[0x24953B288](&unk_2457C2920, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AB0);
  }
  return result;
}

unint64_t sub_24578FC68()
{
  unint64_t result;

  result = qword_257499AB8;
  if (!qword_257499AB8)
  {
    result = MEMORY[0x24953B288](&unk_2457C2840, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AB8);
  }
  return result;
}

unint64_t sub_24578FCA8()
{
  unint64_t result;

  result = qword_257499AC0;
  if (!qword_257499AC0)
  {
    result = MEMORY[0x24953B288](&unk_2457C2868, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForMailMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AC0);
  }
  return result;
}

unint64_t sub_24578FCE8()
{
  unint64_t result;

  result = qword_257499AC8;
  if (!qword_257499AC8)
  {
    result = MEMORY[0x24953B288](&unk_2457C2788, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AC8);
  }
  return result;
}

unint64_t sub_24578FD28()
{
  unint64_t result;

  result = qword_257499AD0;
  if (!qword_257499AD0)
  {
    result = MEMORY[0x24953B288](&unk_2457C27B0, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AD0);
  }
  return result;
}

unint64_t sub_24578FD68()
{
  unint64_t result;

  result = qword_257499AD8;
  if (!qword_257499AD8)
  {
    result = MEMORY[0x24953B288](&unk_2457C26D0, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AD8);
  }
  return result;
}

unint64_t sub_24578FDA8()
{
  unint64_t result;

  result = qword_257499AE0;
  if (!qword_257499AE0)
  {
    result = MEMORY[0x24953B288](&unk_2457C26F8, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForTextMessageThreadCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AE0);
  }
  return result;
}

unint64_t sub_24578FDE8()
{
  unint64_t result;

  result = qword_257499AE8;
  if (!qword_257499AE8)
  {
    result = MEMORY[0x24953B288](&unk_2457C2618, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForNoteMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AE8);
  }
  return result;
}

unint64_t sub_24578FE28()
{
  unint64_t result;

  result = qword_257499AF0;
  if (!qword_257499AF0)
  {
    result = MEMORY[0x24953B288](&unk_2457C2640, &type metadata for SummarizationXPCRequest.Request.GenerateVisualPromptForNoteMessageCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AF0);
  }
  return result;
}

unint64_t sub_24578FE68()
{
  unint64_t result;

  result = qword_257499AF8;
  if (!qword_257499AF8)
  {
    result = MEMORY[0x24953B288](&unk_2457C2560, &type metadata for SummarizationXPCRequest.Request.TestTaskCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499AF8);
  }
  return result;
}

unint64_t sub_24578FEA8()
{
  unint64_t result;

  result = qword_257499B00;
  if (!qword_257499B00)
  {
    result = MEMORY[0x24953B288](&unk_2457C2588, &type metadata for SummarizationXPCRequest.Request.TestTaskCancellationCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499B00);
  }
  return result;
}

unint64_t sub_24578FEE8()
{
  unint64_t result;

  result = qword_257499B08;
  if (!qword_257499B08)
  {
    result = MEMORY[0x24953B288](&unk_2457C32A0, &type metadata for SummarizationXPCRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499B08);
  }
  return result;
}

unint64_t sub_24578FF28()
{
  unint64_t result;

  result = qword_257499B10;
  if (!qword_257499B10)
  {
    result = MEMORY[0x24953B288](&unk_2457C32C8, &type metadata for SummarizationXPCRequest.Request.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499B10);
  }
  return result;
}

uint64_t sub_24578FF64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummarizationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_24578FFA8()
{
  unint64_t result;

  result = qword_257499B20;
  if (!qword_257499B20)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationXPCRequest.RequestInfo, &type metadata for SummarizationXPCRequest.RequestInfo);
    atomic_store(result, (unint64_t *)&qword_257499B20);
  }
  return result;
}

void sub_24578FFEC(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t sub_24578FFFC()
{
  return sub_2457BB530();
}

uint64_t sub_24579001C()
{
  return sub_2457BB530();
}

uint64_t sub_245790034@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t sub_245790040()
{
  return sub_2457BB5CC();
}

uint64_t sub_24579004C@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_245790058()
{
  return sub_2457BB5CC();
}

uint64_t sub_245790060@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_245790068@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v1, v2);
}

uint64_t sub_24579007C()
{
  return sub_2457BB530();
}

void sub_245790084()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 89) = 1;
}

uint64_t sub_245790090()
{
  return sub_2457BB68C();
}

unint64_t sub_245790098()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_BYTE *)(v2 - 160) = *(_DWORD *)(v2 - 184);
  *(_QWORD *)(v2 - 152) = *(_QWORD *)(v2 - 208);
  *(_QWORD *)(v2 - 144) = v0;
  *(_DWORD *)(v2 - 136) = v1;
  *(_BYTE *)(v2 - 89) = 1;
  return sub_245787990();
}

uint64_t sub_2457900B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

uint64_t sub_2457900C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_2457900DC()
{
  return sub_2457BB68C();
}

uint64_t sub_2457900E4()
{
  return sub_2457BB5FC();
}

uint64_t sub_2457900F8()
{
  return sub_2457BB5FC();
}

uint64_t sub_245790110()
{
  return swift_beginAccess();
}

uint64_t sub_24579011C()
{
  uint64_t v0;

  return v0;
}

void sub_245790128()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 184) = *(unsigned __int8 *)(v0 + 16);
  *(_QWORD *)(v1 - 208) = *(_QWORD *)(v0 + 24);
}

void sub_245790144()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 168) = 1;
}

uint64_t sub_245790158()
{
  return 0x7A6972616D6D7573;
}

uint64_t sub_24579017C()
{
  return sub_2457BB5FC();
}

uint64_t sub_245790190()
{
  return sub_2457BB644();
}

uint64_t sub_2457901A4()
{
  uint64_t v0;

  return v0 - 160;
}

uint64_t sub_2457901B4()
{
  return 0x6C69626967696C65;
}

uint64_t sub_2457901D4()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 - 200) + 8))(*(_QWORD *)(v0 - 168), *(_QWORD *)(v0 - 176));
}

uint64_t sub_2457901E4()
{
  return sub_2457BB5FC();
}

uint64_t sub_2457901F0()
{
  return swift_bridgeObjectRelease();
}

unint64_t sub_2457901F8()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 104) = 1;
  return sub_24578B40C();
}

uint64_t sub_245790214()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245790228()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245790238()
{
  uint64_t v0;
  uint64_t v1;

  *(_BYTE *)(v1 - 160) = 0;
  return v0;
}

uint64_t sub_24579024C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 296) + 8))(v0, v1);
}

uint64_t sub_245790264()
{
  return 0x6D726177657270;
}

uint64_t sub_24579027C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24579028C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 184) = *(unsigned __int8 *)(v1 + *(int *)(result + 48));
  return result;
}

uint64_t sub_2457902A8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457902BC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457902C8()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457902D0()
{
  return sub_2457BB5FC();
}

id sub_2457902F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return objc_msgSend(v0, (SEL)(v3 + 328), v2, v1);
}

void sub_245790304(_QWORD *a1)
{
  uint64_t *v1;

  sub_24574DF54(a1, v1);
}

unint64_t sub_24579030C()
{
  return 0xD000000000000016;
}

uint64_t sub_245790320()
{
  return sub_2457BB5FC();
}

uint64_t sub_245790334()
{
  uint64_t *v0;

  return sub_245748A50(v0);
}

uint64_t sub_24579033C()
{
  return sub_2457BB6B0();
}

uint64_t sub_245790348()
{
  return sub_2457BA9F0();
}

uint64_t sub_24579036C()
{
  uint64_t v0;

  return v0;
}

void sub_245790378()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[1];
  *(_QWORD *)(v1 - 184) = v0[2];
  v3 = v0[3];
  *(_QWORD *)(v1 - 216) = v2;
  *(_QWORD *)(v1 - 208) = v3;
}

void sub_245790390(uint64_t a1, void (*a2)(_QWORD))
{
  uint64_t v2;

  sub_2457878A8(v2, a2);
}

uint64_t sub_245790398()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457903A0()
{
  return swift_bridgeObjectRelease();
}

void sub_2457903A8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void (*v2)(_QWORD);

  sub_24574B7D4(a1, *(_QWORD *)(a2 - 256), v2);
}

unint64_t sub_2457903C4()
{
  return sub_245750E50();
}

uint64_t sub_2457903D0()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457903E4()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457903F8()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_24579040C()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245790420()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_245790434()
{
  return sub_24577E150();
}

uint64_t sub_245790440()
{
  uint64_t v0;

  return v0;
}

void sub_24579044C(void *a1, NSObject *a2, os_log_type_t a3, const char *a4)
{
  uint8_t *v4;

  _os_log_impl(a1, a2, a3, a4, v4, 0xCu);
}

void sub_245790458(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(_QWORD);

  sub_24574B7D4(a1, v1, v2);
}

uint64_t sub_245790464()
{
  return 0x6962616C69617661;
}

uint64_t sub_245790488()
{
  return swift_slowAlloc();
}

uint64_t sub_245790494()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 168) = 0;
  return v0 - 168;
}

void sub_2457904A0(_QWORD *a1)
{
  void (*v1)(uint64_t);

  sub_24574B84C(a1, v1);
}

uint64_t static SummarizationXPCResult.Error.== infix(_:_:)()
{
  return 1;
}

uint64_t SummarizationXPCResult.Error.hash(into:)()
{
  return sub_2457BB734();
}

void SummarizationXPCResult.Error.hashValue.getter()
{
  sub_2457514C4();
  sub_2457514AC();
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_245790500(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 1684631414 && a2 == 0xE400000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1819242338 && a2 == 0xE400000000000000;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x7972616D6D7573 && a2 == 0xE700000000000000;
      if (v7 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000014 && a2 == 0x80000002457CA620 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else if (a1 == 0xD00000000000001BLL && a2 == 0x80000002457CA640)
      {
        swift_bridgeObjectRelease();
        return 4;
      }
      else
      {
        v8 = sub_2457BB6B0();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 4;
        else
          return 5;
      }
    }
  }
}

uint64_t sub_2457906E8(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_245790714 + 4 * byte_2457C3AA0[a1]))(1684631414, 0xE400000000000000);
}

uint64_t sub_245790714()
{
  return 1819242338;
}

uint64_t sub_245790720()
{
  return 0x7972616D6D7573;
}

unint64_t sub_245790738()
{
  return 0xD000000000000014;
}

unint64_t sub_245790754()
{
  return 0xD00000000000001BLL;
}

void sub_245790774()
{
  SummarizationXPCResult.Error.hashValue.getter();
}

uint64_t sub_245790788()
{
  return SummarizationXPCResult.Error.hash(into:)();
}

uint64_t sub_24579079C()
{
  sub_245791038();
  return sub_2457BB788();
}

uint64_t sub_2457907C4()
{
  sub_245791038();
  return sub_2457BB794();
}

uint64_t sub_2457907EC()
{
  unsigned __int8 *v0;

  return sub_2457906E8(*v0);
}

uint64_t sub_2457907F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245790500(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245790818()
{
  sub_245790E4C();
  return sub_2457BB788();
}

uint64_t sub_245790840()
{
  sub_245790E4C();
  return sub_2457BB794();
}

uint64_t sub_245790868()
{
  sub_245790FFC();
  return sub_2457BB788();
}

uint64_t sub_245790890()
{
  sub_245790FFC();
  return sub_2457BB794();
}

uint64_t sub_2457908B8()
{
  sub_245790ECC();
  return sub_2457BB788();
}

uint64_t sub_2457908E0()
{
  sub_245790ECC();
  return sub_2457BB794();
}

uint64_t sub_245790908()
{
  sub_245790F08();
  return sub_2457BB788();
}

uint64_t sub_245790930()
{
  sub_245790F08();
  return sub_2457BB794();
}

uint64_t sub_245790958()
{
  sub_245791074();
  return sub_2457BB788();
}

uint64_t sub_245790980()
{
  sub_245791074();
  return sub_2457BB794();
}

void SummarizationXPCResult.Result.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  sub_245748A50(&qword_257499B28);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v3);
  sub_245750F48();
  sub_245748A50(&qword_257499B30);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_245750F48();
  sub_245748A50(&qword_257499B38);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v5);
  sub_245750F48();
  type metadata accessor for Summary();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_245750F48();
  sub_245748A50(&qword_257499B40);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v7);
  sub_24575136C();
  sub_245748A50(&qword_257499B48);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v8);
  sub_245794288();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v9);
  sub_2457535E8();
  sub_245748A50(&qword_257499B50);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v10);
  sub_245767CF8();
  sub_245749280(a1, a1[3]);
  sub_245790E4C();
  sub_2457BB77C();
  sub_245790E88(v12, v1);
  v11 = (char *)sub_245790BB0 + 4 * byte_2457C3AA5[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_245790BB0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(uint64_t);

  sub_245794244();
  v2 = v0[16];
  v1 = v0[17];
  sub_2457BB5FC();
  sub_2457BB650();
  v3 = sub_245794220();
  v4(v3);
  (*(void (**)(uint64_t, uint64_t))(v0[15] + 8))(v2, v1);
  sub_245751240();
}

uint64_t type metadata accessor for SummarizationXPCResult.Result(uint64_t a1)
{
  return sub_24574E0C8(a1, (uint64_t *)&unk_257499C28);
}

unint64_t sub_245790E4C()
{
  unint64_t result;

  result = qword_257499B58;
  if (!qword_257499B58)
  {
    result = MEMORY[0x24953B288](&unk_2457C4250, &type metadata for SummarizationXPCResult.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499B58);
  }
  return result;
}

uint64_t sub_245790E88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummarizationXPCResult.Result(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_245790ECC()
{
  unint64_t result;

  result = qword_257499B60;
  if (!qword_257499B60)
  {
    result = MEMORY[0x24953B288](&unk_2457C4200, &type metadata for SummarizationXPCResult.Result.TextAssistantPartialSummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499B60);
  }
  return result;
}

unint64_t sub_245790F08()
{
  unint64_t result;

  result = qword_257499B78;
  if (!qword_257499B78)
  {
    result = MEMORY[0x24953B288](&unk_2457C41B0, &type metadata for SummarizationXPCResult.Result.TextAssistantSummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499B78);
  }
  return result;
}

uint64_t sub_245790F44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v4;

  v2 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(a1 + 24);
  swift_bridgeObjectRelease();
  sub_24575277C(v4, v2);
  return a1;
}

unint64_t sub_245790FFC()
{
  unint64_t result;

  result = qword_257499B90;
  if (!qword_257499B90)
  {
    result = MEMORY[0x24953B288](&unk_2457C4160, &type metadata for SummarizationXPCResult.Result.SummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499B90);
  }
  return result;
}

unint64_t sub_245791038()
{
  unint64_t result;

  result = qword_257499BA0;
  if (!qword_257499BA0)
  {
    result = MEMORY[0x24953B288](&unk_2457C4110, &type metadata for SummarizationXPCResult.Result.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499BA0);
  }
  return result;
}

unint64_t sub_245791074()
{
  unint64_t result;

  result = qword_257499BA8;
  if (!qword_257499BA8)
  {
    result = MEMORY[0x24953B288](&unk_2457C40C0, &type metadata for SummarizationXPCResult.Result.VoidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499BA8);
  }
  return result;
}

void SummarizationXPCResult.Result.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  _QWORD v56[23];
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  _BYTE v60[8];
  _BYTE v61[8];
  _BYTE v62[8];
  _BYTE v63[8];
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;

  v56[13] = a2;
  v4 = sub_245748A50(&qword_257499BB0);
  sub_245751028(v4, (uint64_t)v63);
  v56[21] = v5;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_245750F48();
  sub_245751408(v7);
  v8 = sub_245748A50(&qword_257499BB8);
  sub_245751028(v8, (uint64_t)v62);
  v56[10] = v9;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v10);
  sub_245750F48();
  sub_245751408(v11);
  v12 = sub_245748A50(&qword_257499BC0);
  sub_245751028(v12, (uint64_t)v61);
  v56[8] = v13;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v14);
  sub_245750F48();
  sub_245751408(v15);
  v16 = sub_245748A50(&qword_257499BC8);
  sub_245751028(v16, (uint64_t)v60);
  v56[6] = v17;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v18);
  sub_245750F48();
  sub_245751408(v19);
  v20 = sub_245748A50(&qword_257499BD0);
  sub_245751028(v20, (uint64_t)&v65);
  v56[18] = v21;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v22);
  sub_245750F48();
  sub_245751408(v23);
  v58 = sub_245748A50(&qword_257499BD8);
  v57 = *(_QWORD *)(v58 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v24);
  sub_2457535E8();
  v25 = sub_245794288();
  sub_245751028(v25, (uint64_t)&v66);
  sub_245750F7C();
  v27 = MEMORY[0x24BDAC7A8](v26);
  v29 = (char *)v56 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = MEMORY[0x24BDAC7A8](v27);
  v32 = (char *)v56 - v31;
  v33 = MEMORY[0x24BDAC7A8](v30);
  v35 = (char *)v56 - v34;
  v36 = MEMORY[0x24BDAC7A8](v33);
  v38 = (char *)v56 - v37;
  MEMORY[0x24BDAC7A8](v36);
  v40 = (char *)v56 - v39;
  v41 = a1[3];
  v59 = a1;
  sub_245749280(a1, v41);
  sub_245790E4C();
  v42 = v64;
  sub_2457BB770();
  if (!v42)
  {
    v56[1] = v38;
    v56[4] = v35;
    v56[2] = v32;
    v56[3] = v29;
    v56[5] = v40;
    v43 = v58;
    v64 = v2;
    v44 = sub_2457BB5E4();
    v45 = *(_QWORD *)(v44 + 16);
    if (v45)
    {
      v56[0] = 0;
      v46 = *(unsigned __int8 *)(v44 + 32);
      sub_245750D90(1, v45, v44, v44 + 32, 0, (2 * v45) | 1);
      v48 = v47;
      v50 = v49;
      swift_bridgeObjectRelease();
      if (v48 == v50 >> 1)
        __asm { BR              X9 }
    }
    v51 = v56[22];
    v52 = sub_2457BB470();
    sub_2457535A0();
    v54 = v53;
    sub_245748A50(&qword_2574980B0);
    *v54 = v51;
    v55 = v64;
    sub_2457BB53C();
    sub_2457BB464();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v52 - 8) + 104))(v54, *MEMORY[0x24BEE26D0], v52);
    swift_willThrow();
    sub_2457941A0();
    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v55, v43);
  }
  sub_245749564((uint64_t)v59);
  sub_245751240();
}

void sub_2457918C0(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  SummarizationXPCResult.Result.init(from:)(a1, a2);
}

void sub_2457918D4(_QWORD *a1)
{
  SummarizationXPCResult.Result.encode(to:)(a1);
}

void sub_2457918E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = type metadata accessor for SummarizationXPCResult.Result(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245790E88(a1, (uint64_t)v4);
  sub_2457919A8((uint64_t)v4);
}

void sub_245791960(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result;
  swift_beginAccess();
  sub_245790E88(v3, a1);
  sub_2457512D4();
}

void sub_2457919A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result;
  swift_beginAccess();
  sub_245794110(a1, v3);
  swift_endAccess();
  sub_2457512D4();
}

id SummarizationXPCResult.__allocating_init(result:)(uint64_t a1)
{
  objc_class *v1;
  id v3;
  id v4;
  objc_super v6;

  v3 = sub_2457514D8();
  sub_245790E88(a1, (uint64_t)v3 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result);
  v6.receiver = v3;
  v6.super_class = v1;
  v4 = objc_msgSendSuper2(&v6, sel_init);
  sub_24574B880(a1, type metadata accessor for SummarizationXPCResult.Result);
  return v4;
}

id SummarizationXPCResult.init(result:)(uint64_t a1)
{
  void *v1;
  id v3;
  objc_super v5;

  sub_245790E88(a1, (uint64_t)v1 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result);
  v5.receiver = v1;
  v5.super_class = (Class)type metadata accessor for SummarizationXPCResult(0);
  v3 = objc_msgSendSuper2(&v5, sel_init);
  sub_24574B880(a1, type metadata accessor for SummarizationXPCResult.Result);
  return v3;
}

void SummarizationXPCResult.__allocating_init(coder:)(void *a1)
{
  sub_2457514D8();
  SummarizationXPCResult.init(coder:)(a1);
  sub_245748A90();
}

id SummarizationXPCResult.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  objc_super v12;

  sub_245748A50(&qword_257499BF8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v5);
  sub_24575136C();
  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_245767CF8();
  v7 = v1;
  sub_24574DA88((uint64_t)a1);
  sub_24579425C(v2, 0);
  v8 = sub_245794220();
  sub_245792190(v8, v9, type metadata accessor for SummarizationXPCResult.Result);
  sub_245790E88(v3, (uint64_t)v7 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result);

  v12.receiver = v7;
  v12.super_class = (Class)type metadata accessor for XPCValue();
  v10 = objc_msgSendSuper2(&v12, sel_init);

  sub_24574B880(v3, type metadata accessor for SummarizationXPCResult.Result);
  return v10;
}

void sub_245791C80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;

  sub_245794288();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_245794154();
  sub_245790E88(v0, (uint64_t)v3);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_24574B880((uint64_t)v3, type metadata accessor for SummarizationXPCResult.Result);
  if (EnumCaseMultiPayload != 4)
  {
    sub_245792224();
    sub_2457535A0();
    sub_2457512FC();
  }
  sub_245794290();
  sub_2457941A8();
}

uint64_t sub_245791D34()
{
  char *v0;
  uint64_t v1;
  uint64_t EnumCaseMultiPayload;
  char v3;

  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v1);
  sub_24575136C();
  swift_beginAccess();
  sub_2457941B8();
  sub_245794220();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload)
  {
    sub_24579422C(EnumCaseMultiPayload, type metadata accessor for SummarizationXPCResult.Result);
    sub_245792224();
    sub_2457535A0();
    sub_2457512FC();
  }
  else
  {
    v3 = *v0;
  }
  return v3 & 1;
}

void sub_245791DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);

  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v0);
  sub_24575136C();
  sub_245794154();
  sub_2457941B8();
  v1 = sub_245794204();
  if ((_DWORD)v1 == 1)
  {
    v2 = sub_245794220();
    sub_245792190(v2, v3, v4);
  }
  else
  {
    sub_24579422C(v1, type metadata accessor for SummarizationXPCResult.Result);
    sub_245792224();
    sub_2457535A0();
    sub_2457512FC();
  }
  sub_245794290();
  sub_2457941A8();
}

void sub_245791E8C(void *a1@<X8>)
{
  const void *v1;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245794154();
  sub_2457941B8();
  v4 = sub_245794204();
  if ((_DWORD)v4 == 2)
  {
    sub_2457941C4(a1, v1);
  }
  else
  {
    sub_24579422C(v4, type metadata accessor for SummarizationXPCResult.Result);
    sub_245792224();
    sub_2457535A0();
    sub_2457512FC();
  }
  sub_245794290();
  sub_2457941A8();
}

void sub_245791F2C(void *a1@<X8>)
{
  const void *v1;
  uint64_t v3;
  uint64_t v4;

  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245794154();
  sub_2457941B8();
  v4 = sub_245794204();
  if ((_DWORD)v4 == 3)
  {
    sub_2457941C4(a1, v1);
  }
  else
  {
    sub_24579422C(v4, type metadata accessor for SummarizationXPCResult.Result);
    sub_245792224();
    sub_2457535A0();
    sub_2457512FC();
  }
  sub_245794290();
  sub_2457941A8();
}

uint64_t sub_245791FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  type metadata accessor for SummarizationXPCResult.Result(0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v1);
  sub_24575136C();
  sub_245794154();
  sub_2457941B8();
  if (qword_257497EE0 != -1)
    swift_once();
  sub_24574B84C(&qword_257499CC0, (void (*)(uint64_t))type metadata accessor for SummarizationXPCResult.Result);
  sub_245794220();
  v2 = sub_2457BA9FC();
  sub_24574B880(v0, type metadata accessor for SummarizationXPCResult.Result);
  return v2;
}

id SummarizationXPCResult.__allocating_init()()
{
  return objc_msgSend(sub_2457514D8(), sel_init);
}

void SummarizationXPCResult.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

void sub_24579210C()
{
  uint64_t v0;

  sub_24574B880(v0 + OBJC_IVAR____TtC4Sage22SummarizationXPCResult_result, type metadata accessor for SummarizationXPCResult.Result);
}

id SummarizationXPCResult.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SummarizationXPCResult(0);
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

void sub_245792190(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  sub_245748A90();
}

uint64_t type metadata accessor for SummarizationXPCResult(uint64_t a1)
{
  return sub_24574E0C8(a1, (uint64_t *)&unk_257499C10);
}

uint64_t sub_2457921E4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_245748A50(&qword_257499BF8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_245792224()
{
  unint64_t result;

  result = qword_257499C00;
  if (!qword_257499C00)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationXPCResult.Error, &type metadata for SummarizationXPCResult.Error);
    atomic_store(result, (unint64_t *)&qword_257499C00);
  }
  return result;
}

unint64_t sub_245792264()
{
  unint64_t result;

  result = qword_257499C08;
  if (!qword_257499C08)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationXPCResult.Error, &type metadata for SummarizationXPCResult.Error);
    atomic_store(result, (unint64_t *)&qword_257499C08);
  }
  return result;
}

void sub_2457922A0(uint64_t a1@<X8>)
{
  sub_245791960(a1);
}

uint64_t sub_2457922C4()
{
  return type metadata accessor for SummarizationXPCResult(0);
}

uint64_t sub_2457922CC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for SummarizationXPCResult.Result(319);
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for SummarizationXPCResult()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SummarizationXPCResult.result.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of SummarizationXPCResult.__allocating_init(result:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of SummarizationXPCResult.toVoid()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of SummarizationXPCResult.toBool()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))() & 1;
}

uint64_t dispatch thunk of SummarizationXPCResult.toSummary()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of SummarizationXPCResult.toTextAssistantSummary()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of SummarizationXPCResult.toTextAssistantPartialSummary()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC0))();
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Error()
{
  return &type metadata for SummarizationXPCResult.Error;
}

_QWORD *initializeBufferWithCopyOfBuffer for SummarizationXPCResult.Result(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
    return a1;
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v12 = a2[4];
      swift_bridgeObjectRetain();
      if (v12 == 1)
      {
LABEL_9:
        memcpy(a1 + 3, a2 + 3, 0x80uLL);
LABEL_28:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_13:
      a1[3] = a2[3];
      a1[4] = v12;
      v14 = a2[6];
      a1[5] = a2[5];
      a1[6] = v14;
      v15 = a2[8];
      a1[7] = a2[7];
      a1[8] = v15;
      v16 = a2[10];
      a1[9] = a2[9];
      a1[10] = v16;
      v17 = a2[12];
      a1[11] = a2[11];
      a1[12] = v17;
      v18 = a2[14];
      a1[13] = a2[13];
      a1[14] = v18;
      v19 = a2[16];
      a1[15] = a2[15];
      a1[16] = v19;
      v20 = a2[17];
      v21 = a2[18];
      a1[17] = v20;
      a1[18] = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_28;
    case 2:
      v13 = a2[1];
      *a1 = *a2;
      a1[1] = v13;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v12 = a2[4];
      swift_bridgeObjectRetain();
      if (v12 == 1)
        goto LABEL_9;
      goto LABEL_13;
    case 1:
      v8 = sub_2457BAA14();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v8))
      {
        v9 = sub_245748A50(&qword_257499C20);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v8);
      }
      v22 = (int *)type metadata accessor for Summary();
      v23 = v22[5];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v23, 1, v8))
      {
        v26 = sub_245748A50(&qword_257499C20);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v24, v25, v8);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v24, 0, 1, v8);
      }
      v27 = v22[6];
      v28 = (char *)a1 + v27;
      v29 = (char *)a2 + v27;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v27, 1, v8))
      {
        v30 = sub_245748A50(&qword_257499C20);
        memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v28, v29, v8);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v28, 0, 1, v8);
      }
      *(_QWORD *)((char *)a1 + v22[7]) = *(_QWORD *)((char *)a2 + v22[7]);
      v31 = v22[8];
      v32 = (char *)a1 + v31;
      v33 = (char *)a2 + v31;
      swift_bridgeObjectRetain();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v33, 1, v8))
      {
        v34 = sub_245748A50(&qword_257499C20);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v32, v33, v8);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v32, 0, 1, v8);
      }
      *(_QWORD *)((char *)a1 + v22[9]) = *(_QWORD *)((char *)a2 + v22[9]);
      *((_BYTE *)a1 + v22[10]) = *((_BYTE *)a2 + v22[10]);
      v35 = v22[11];
      v36 = (_QWORD *)((char *)a1 + v35);
      v37 = (_QWORD *)((char *)a2 + v35);
      v38 = v37[1];
      swift_bridgeObjectRetain();
      if (v38 == 1)
      {
        memcpy(v36, v37, 0x80uLL);
      }
      else
      {
        *v36 = *v37;
        v36[1] = v38;
        v39 = v37[3];
        v36[2] = v37[2];
        v36[3] = v39;
        v40 = v37[5];
        v36[4] = v37[4];
        v36[5] = v40;
        v41 = v37[7];
        v36[6] = v37[6];
        v36[7] = v41;
        v42 = v37[9];
        v36[8] = v37[8];
        v36[9] = v42;
        v43 = v37[11];
        v36[10] = v37[10];
        v36[11] = v43;
        v44 = v37[13];
        v36[12] = v37[12];
        v36[13] = v44;
        v45 = v37[14];
        v46 = v37[15];
        v36[14] = v45;
        v36[15] = v46;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      goto LABEL_28;
  }
  memcpy(a1, a2, *(_QWORD *)(v5 + 64));
  return a1;
}

uint64_t destroy for SummarizationXPCResult.Result(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  if ((_DWORD)result == 3 || (_DWORD)result == 2)
  {
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + 32);
    if (result != 1)
    {
LABEL_16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else if ((_DWORD)result == 1)
  {
    v3 = sub_2457BAA14();
    if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
    v4 = (int *)type metadata accessor for Summary();
    v5 = a1 + v4[5];
    if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v5, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v5, v3);
    v6 = a1 + v4[6];
    if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v6, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v6, v3);
    swift_bridgeObjectRelease();
    v7 = a1 + v4[8];
    if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v7, 1, v3))
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v7, v3);
    swift_bridgeObjectRelease();
    result = *(_QWORD *)(a1 + v4[11] + 8);
    if (result != 1)
      goto LABEL_16;
  }
  return result;
}

_QWORD *initializeWithCopy for SummarizationXPCResult.Result(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v10 = a2[4];
      swift_bridgeObjectRetain();
      if (v10 == 1)
      {
LABEL_7:
        memcpy(a1 + 3, a2 + 3, 0x80uLL);
LABEL_26:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_11:
      a1[3] = a2[3];
      a1[4] = v10;
      v12 = a2[6];
      a1[5] = a2[5];
      a1[6] = v12;
      v13 = a2[8];
      a1[7] = a2[7];
      a1[8] = v13;
      v14 = a2[10];
      a1[9] = a2[9];
      a1[10] = v14;
      v15 = a2[12];
      a1[11] = a2[11];
      a1[12] = v15;
      v16 = a2[14];
      a1[13] = a2[13];
      a1[14] = v16;
      v17 = a2[16];
      a1[15] = a2[15];
      a1[16] = v17;
      v18 = a2[17];
      v19 = a2[18];
      a1[17] = v18;
      a1[18] = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_26;
    case 2:
      v11 = a2[1];
      *a1 = *a2;
      a1[1] = v11;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v10 = a2[4];
      swift_bridgeObjectRetain();
      if (v10 == 1)
        goto LABEL_7;
      goto LABEL_11;
    case 1:
      v7 = sub_2457BAA14();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v7))
      {
        v8 = sub_245748A50(&qword_257499C20);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v7);
      }
      v20 = (int *)type metadata accessor for Summary();
      v21 = v20[5];
      v22 = (char *)a1 + v21;
      v23 = (char *)a2 + v21;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v21, 1, v7))
      {
        v24 = sub_245748A50(&qword_257499C20);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v22, v23, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v22, 0, 1, v7);
      }
      v25 = v20[6];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v25, 1, v7))
      {
        v28 = sub_245748A50(&qword_257499C20);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v26, v27, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v26, 0, 1, v7);
      }
      *(_QWORD *)((char *)a1 + v20[7]) = *(_QWORD *)((char *)a2 + v20[7]);
      v29 = v20[8];
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      swift_bridgeObjectRetain();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v31, 1, v7))
      {
        v32 = sub_245748A50(&qword_257499C20);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v30, v31, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v30, 0, 1, v7);
      }
      *(_QWORD *)((char *)a1 + v20[9]) = *(_QWORD *)((char *)a2 + v20[9]);
      *((_BYTE *)a1 + v20[10]) = *((_BYTE *)a2 + v20[10]);
      v33 = v20[11];
      v34 = (_QWORD *)((char *)a1 + v33);
      v35 = (_QWORD *)((char *)a2 + v33);
      v36 = v35[1];
      swift_bridgeObjectRetain();
      if (v36 == 1)
      {
        memcpy(v34, v35, 0x80uLL);
      }
      else
      {
        *v34 = *v35;
        v34[1] = v36;
        v37 = v35[3];
        v34[2] = v35[2];
        v34[3] = v37;
        v38 = v35[5];
        v34[4] = v35[4];
        v34[5] = v38;
        v39 = v35[7];
        v34[6] = v35[6];
        v34[7] = v39;
        v40 = v35[9];
        v34[8] = v35[8];
        v34[9] = v40;
        v41 = v35[11];
        v34[10] = v35[10];
        v34[11] = v41;
        v42 = v35[13];
        v34[12] = v35[12];
        v34[13] = v42;
        v43 = v35[14];
        v44 = v35[15];
        v34[14] = v43;
        v34[15] = v44;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      goto LABEL_26;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

_QWORD *assignWithCopy for SummarizationXPCResult.Result(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  if (a1 == a2)
    return a1;
  sub_24574B880((uint64_t)a1, type metadata accessor for SummarizationXPCResult.Result);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v9 = a2[4];
      swift_bridgeObjectRetain();
      if (v9 == 1)
      {
LABEL_8:
        memcpy(a1 + 3, a2 + 3, 0x80uLL);
LABEL_27:
        swift_storeEnumTagMultiPayload();
        return a1;
      }
LABEL_12:
      a1[3] = a2[3];
      a1[4] = a2[4];
      a1[5] = a2[5];
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      a1[12] = a2[12];
      a1[13] = a2[13];
      a1[14] = a2[14];
      a1[15] = a2[15];
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    case 2:
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v10 = a2[4];
      swift_bridgeObjectRetain();
      if (v10 == 1)
        goto LABEL_8;
      goto LABEL_12;
    case 1:
      v7 = sub_2457BAA14();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v7))
      {
        v8 = sub_245748A50(&qword_257499C20);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v7);
      }
      v11 = (int *)type metadata accessor for Summary();
      v12 = v11[5];
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v12, 1, v7))
      {
        v15 = sub_245748A50(&qword_257499C20);
        memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v13, v14, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v13, 0, 1, v7);
      }
      v16 = v11[6];
      v17 = (char *)a1 + v16;
      v18 = (char *)a2 + v16;
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v16, 1, v7))
      {
        v19 = sub_245748A50(&qword_257499C20);
        memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v17, v18, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v17, 0, 1, v7);
      }
      *(_QWORD *)((char *)a1 + v11[7]) = *(_QWORD *)((char *)a2 + v11[7]);
      v20 = v11[8];
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      swift_bridgeObjectRetain();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v22, 1, v7))
      {
        v23 = sub_245748A50(&qword_257499C20);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v21, v22, v7);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v21, 0, 1, v7);
      }
      *(_QWORD *)((char *)a1 + v11[9]) = *(_QWORD *)((char *)a2 + v11[9]);
      *((_BYTE *)a1 + v11[10]) = *((_BYTE *)a2 + v11[10]);
      v24 = v11[11];
      v25 = (_QWORD *)((char *)a1 + v24);
      v26 = (_QWORD *)((char *)a2 + v24);
      v27 = v26[1];
      swift_bridgeObjectRetain();
      if (v27 == 1)
      {
        memcpy(v25, v26, 0x80uLL);
      }
      else
      {
        *v25 = *v26;
        v25[1] = v26[1];
        v25[2] = v26[2];
        v25[3] = v26[3];
        v25[4] = v26[4];
        v25[5] = v26[5];
        v25[6] = v26[6];
        v25[7] = v26[7];
        v25[8] = v26[8];
        v25[9] = v26[9];
        v25[10] = v26[10];
        v25[11] = v26[11];
        v25[12] = v26[12];
        v25[13] = v26[13];
        v25[14] = v26[14];
        v25[15] = v26[15];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      goto LABEL_27;
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

char *initializeWithTake for SummarizationXPCResult.Result(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v6 = sub_2457BAA14();
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6))
    {
      v7 = sub_245748A50(&qword_257499C20);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
    }
    v8 = (int *)type metadata accessor for Summary();
    v9 = v8[5];
    v10 = &a1[v9];
    v11 = &a2[v9];
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v9], 1, v6))
    {
      v12 = sub_245748A50(&qword_257499C20);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v10, v11, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v10, 0, 1, v6);
    }
    v13 = v8[6];
    v14 = &a1[v13];
    v15 = &a2[v13];
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v13], 1, v6))
    {
      v16 = sub_245748A50(&qword_257499C20);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v14, v15, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v14, 0, 1, v6);
    }
    *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
    v17 = v8[8];
    v18 = &a1[v17];
    v19 = &a2[v17];
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v17], 1, v6))
    {
      v20 = sub_245748A50(&qword_257499C20);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v18, v19, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v18, 0, 1, v6);
    }
    *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
    a1[v8[10]] = a2[v8[10]];
    memcpy(&a1[v8[11]], &a2[v8[11]], 0x80uLL);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

char *assignWithTake for SummarizationXPCResult.Result(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  if (a1 != a2)
  {
    sub_24574B880((uint64_t)a1, type metadata accessor for SummarizationXPCResult.Result);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_2457BAA14();
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6))
      {
        v7 = sub_245748A50(&qword_257499C20);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
      }
      v8 = (int *)type metadata accessor for Summary();
      v9 = v8[5];
      v10 = &a1[v9];
      v11 = &a2[v9];
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v9], 1, v6))
      {
        v12 = sub_245748A50(&qword_257499C20);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v10, v11, v6);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v10, 0, 1, v6);
      }
      v13 = v8[6];
      v14 = &a1[v13];
      v15 = &a2[v13];
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v13], 1, v6))
      {
        v16 = sub_245748A50(&qword_257499C20);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v14, v15, v6);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v14, 0, 1, v6);
      }
      *(_QWORD *)&a1[v8[7]] = *(_QWORD *)&a2[v8[7]];
      v17 = v8[8];
      v18 = &a1[v17];
      v19 = &a2[v17];
      if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v17], 1, v6))
      {
        v20 = sub_245748A50(&qword_257499C20);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v18, v19, v6);
        _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v18, 0, 1, v6);
      }
      *(_QWORD *)&a1[v8[9]] = *(_QWORD *)&a2[v8[9]];
      a1[v8[10]] = a2[v8[10]];
      memcpy(&a1[v8[11]], &a2[v8[11]], 0x80uLL);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_245793AAC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Summary();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SummarizationXPCResult.Result.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_245793B74 + 4 * byte_2457C3AB4[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_245793BA8 + 4 * byte_2457C3AAF[v4]))();
}

uint64_t sub_245793BA8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_245793BB0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x245793BB8);
  return result;
}

uint64_t sub_245793BC4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x245793BCCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_245793BD0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_245793BD8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.CodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.CodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.VoidCodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.VoidCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.BoolCodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.BoolCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.SummaryCodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.SummaryCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.TextAssistantSummaryCodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.TextAssistantSummaryCodingKeys;
}

uint64_t _s4Sage22SummarizationXPCResultC5ErrorOwst_0(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_245793C74 + 4 * byte_2457C3AB9[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_245793C94 + 4 * byte_2457C3ABE[v4]))();
}

_BYTE *sub_245793C74(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_245793C94(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245793C9C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245793CA4(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_245793CAC(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_245793CB4(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SummarizationXPCResult.Result.TextAssistantPartialSummaryCodingKeys()
{
  return &type metadata for SummarizationXPCResult.Result.TextAssistantPartialSummaryCodingKeys;
}

unint64_t sub_245793CD4()
{
  unint64_t result;

  result = qword_257499C38;
  if (!qword_257499C38)
  {
    result = MEMORY[0x24953B288](&unk_2457C3D68, &type metadata for SummarizationXPCResult.Result.TextAssistantPartialSummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C38);
  }
  return result;
}

unint64_t sub_245793D14()
{
  unint64_t result;

  result = qword_257499C40;
  if (!qword_257499C40)
  {
    result = MEMORY[0x24953B288](&unk_2457C3E20, &type metadata for SummarizationXPCResult.Result.TextAssistantSummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C40);
  }
  return result;
}

unint64_t sub_245793D54()
{
  unint64_t result;

  result = qword_257499C48;
  if (!qword_257499C48)
  {
    result = MEMORY[0x24953B288](&unk_2457C3ED8, &type metadata for SummarizationXPCResult.Result.SummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C48);
  }
  return result;
}

unint64_t sub_245793D94()
{
  unint64_t result;

  result = qword_257499C50;
  if (!qword_257499C50)
  {
    result = MEMORY[0x24953B288](&unk_2457C3F90, &type metadata for SummarizationXPCResult.Result.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C50);
  }
  return result;
}

unint64_t sub_245793DD4()
{
  unint64_t result;

  result = qword_257499C58;
  if (!qword_257499C58)
  {
    result = MEMORY[0x24953B288](&unk_2457C4098, &type metadata for SummarizationXPCResult.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C58);
  }
  return result;
}

unint64_t sub_245793E14()
{
  unint64_t result;

  result = qword_257499C60;
  if (!qword_257499C60)
  {
    result = MEMORY[0x24953B288](&unk_2457C3FB8, &type metadata for SummarizationXPCResult.Result.VoidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C60);
  }
  return result;
}

unint64_t sub_245793E54()
{
  unint64_t result;

  result = qword_257499C68;
  if (!qword_257499C68)
  {
    result = MEMORY[0x24953B288](&unk_2457C3FE0, &type metadata for SummarizationXPCResult.Result.VoidCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C68);
  }
  return result;
}

unint64_t sub_245793E94()
{
  unint64_t result;

  result = qword_257499C70;
  if (!qword_257499C70)
  {
    result = MEMORY[0x24953B288](&unk_2457C3F00, &type metadata for SummarizationXPCResult.Result.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C70);
  }
  return result;
}

unint64_t sub_245793ED4()
{
  unint64_t result;

  result = qword_257499C78;
  if (!qword_257499C78)
  {
    result = MEMORY[0x24953B288](&unk_2457C3F28, &type metadata for SummarizationXPCResult.Result.BoolCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C78);
  }
  return result;
}

unint64_t sub_245793F14()
{
  unint64_t result;

  result = qword_257499C80;
  if (!qword_257499C80)
  {
    result = MEMORY[0x24953B288](&unk_2457C3E48, &type metadata for SummarizationXPCResult.Result.SummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C80);
  }
  return result;
}

unint64_t sub_245793F54()
{
  unint64_t result;

  result = qword_257499C88;
  if (!qword_257499C88)
  {
    result = MEMORY[0x24953B288](&unk_2457C3E70, &type metadata for SummarizationXPCResult.Result.SummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C88);
  }
  return result;
}

unint64_t sub_245793F94()
{
  unint64_t result;

  result = qword_257499C90;
  if (!qword_257499C90)
  {
    result = MEMORY[0x24953B288](&unk_2457C3D90, &type metadata for SummarizationXPCResult.Result.TextAssistantSummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C90);
  }
  return result;
}

unint64_t sub_245793FD4()
{
  unint64_t result;

  result = qword_257499C98;
  if (!qword_257499C98)
  {
    result = MEMORY[0x24953B288](&unk_2457C3DB8, &type metadata for SummarizationXPCResult.Result.TextAssistantSummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499C98);
  }
  return result;
}

unint64_t sub_245794014()
{
  unint64_t result;

  result = qword_257499CA0;
  if (!qword_257499CA0)
  {
    result = MEMORY[0x24953B288](&unk_2457C3CD8, &type metadata for SummarizationXPCResult.Result.TextAssistantPartialSummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499CA0);
  }
  return result;
}

unint64_t sub_245794054()
{
  unint64_t result;

  result = qword_257499CA8;
  if (!qword_257499CA8)
  {
    result = MEMORY[0x24953B288](&unk_2457C3D00, &type metadata for SummarizationXPCResult.Result.TextAssistantPartialSummaryCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499CA8);
  }
  return result;
}

unint64_t sub_245794094()
{
  unint64_t result;

  result = qword_257499CB0;
  if (!qword_257499CB0)
  {
    result = MEMORY[0x24953B288](&unk_2457C4008, &type metadata for SummarizationXPCResult.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499CB0);
  }
  return result;
}

unint64_t sub_2457940D4()
{
  unint64_t result;

  result = qword_257499CB8;
  if (!qword_257499CB8)
  {
    result = MEMORY[0x24953B288](&unk_2457C4030, &type metadata for SummarizationXPCResult.Result.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499CB8);
  }
  return result;
}

uint64_t sub_245794110(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SummarizationXPCResult.Result(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_245794154()
{
  return swift_beginAccess();
}

uint64_t sub_24579416C()
{
  return sub_2457BB530();
}

uint64_t sub_245794188()
{
  return sub_2457BB5FC();
}

uint64_t sub_2457941A0()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_2457941B8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_245790E88(v0, v1);
}

void *sub_2457941C4(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x98uLL);
}

uint64_t sub_2457941CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 400) + 8))(v1, v0);
}

uint64_t sub_2457941E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 256) + 8))(v2, v1);
}

uint64_t sub_2457941F8()
{
  return sub_2457BB68C();
}

uint64_t sub_245794204()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t sub_245794220()
{
  uint64_t v0;

  return v0;
}

void sub_24579422C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_24574B880(v2, a2);
}

uint64_t sub_245794234@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 8))(v2, v1);
}

unint64_t sub_245794244()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 240) = 1;
  return sub_245791038();
}

uint64_t sub_245794250()
{
  return sub_2457BB5CC();
}

uint64_t sub_24579425C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, 1, v2);
}

unint64_t sub_245794268()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 240) = 2;
  return sub_245790FFC();
}

uint64_t sub_245794274()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_245794288()
{
  return type metadata accessor for SummarizationXPCResult.Result(0);
}

uint64_t sub_24579429C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;

  v5 = sub_2457BB2A8();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, 1, v5) == 1)
  {
    sub_24579FA80(a1, &qword_257498400);
  }
  else
  {
    sub_2457BB29C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2457BB26C();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

void SummarizationClient.UseCase.identifier.getter()
{
  sub_245748B24();
  swift_bridgeObjectRelease();
  sub_2457A00DC();
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457BB1D0();
  sub_245751474();
  sub_2457512D4();
}

void *sub_245794420()
{
  qword_257499CC8 = (uint64_t)&unk_2574B5798;
  return &unk_2574B5798;
}

id static SummarizationXPCService.interface.getter()
{
  if (qword_257497E50 != -1)
    swift_once();
  sub_245756E1C();
  return (id)qword_257499CC8;
}

void static SummarizationXPCService.interface.setter(uint64_t a1)
{
  void *v2;

  if (qword_257497E50 != -1)
    swift_once();
  sub_245756E1C();
  v2 = (void *)qword_257499CC8;
  qword_257499CC8 = a1;

  sub_2457512D4();
}

void static SummarizationXPCService.interface.modify()
{
  if (qword_257497E50 != -1)
    swift_once();
  sub_245756E1C();
  sub_245748A90();
}

void static SummarizationXPCService.serviceName.getter()
{
  sub_2457A04E0();
}

void static SummarizationXPCService.serviceName.setter(uint64_t a1, uint64_t a2)
{
  sub_245756FBC(a1, a2, qword_257499CD0);
}

void static SummarizationXPCService.serviceName.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void static SummarizationXPCService.entitlementName.getter()
{
  sub_2457A04E0();
}

void sub_2457945C0()
{
  sub_2457A091C();
  sub_245756E1C();
  sub_245777474();
  sub_2457512D4();
}

void static SummarizationXPCService.entitlementName.setter(uint64_t a1, uint64_t a2)
{
  sub_245756FBC(a1, a2, qword_257499CE0);
}

void static SummarizationXPCService.entitlementName.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

void sub_245794640()
{
  qword_257499CF0 = MEMORY[0x24BEE4AF8];
}

uint64_t static SummarizationXPCService.selectorClasses.getter()
{
  if (qword_257497E58 != -1)
    swift_once();
  sub_245756E1C();
  return swift_bridgeObjectRetain();
}

void static SummarizationXPCService.selectorClasses.setter(uint64_t a1)
{
  if (qword_257497E58 != -1)
    swift_once();
  sub_245756E1C();
  qword_257499CF0 = a1;
  swift_bridgeObjectRelease();
  sub_2457512D4();
}

void static SummarizationXPCService.selectorClasses.modify()
{
  if (qword_257497E58 != -1)
    swift_once();
  sub_245756E1C();
  sub_245748A90();
}

uint64_t sub_245794788()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v0 = sub_2457BB08C();
  sub_245756D18(v0, qword_257499CF8);
  v1 = sub_24574E0F8(v0, (uint64_t)qword_257499CF8);
  if (qword_257497E38 != -1)
    swift_once();
  v2 = sub_24574E0F8(v0, (uint64_t)qword_257498E30);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16))(v1, v2, v0);
}

void static SummarizationXPCService.logger.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_257497E60 != -1)
    swift_once();
  v2 = sub_245751504();
  v3 = sub_24574E0F8(v2, (uint64_t)qword_257499CF8);
  sub_245756E1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  sub_245756F1C();
}

void static SummarizationXPCService.logger.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t);

  if (qword_257497E60 != -1)
    swift_once();
  v2 = sub_245751504();
  sub_24574E0F8(v2, (uint64_t)qword_257499CF8);
  sub_245756E1C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = sub_245777400();
  v5(v4);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  sub_245756F1C();
}

void static SummarizationXPCService.logger.modify()
{
  uint64_t v0;

  if (qword_257497E60 != -1)
    swift_once();
  v0 = sub_245751504();
  sub_24574E0F8(v0, (uint64_t)qword_257499CF8);
  sub_245756E1C();
  sub_245748A90();
}

void static SummarizationXPCService.customize(serverInterface:)(void *a1)
{
  id v2;

  v2 = objc_msgSend((id)objc_opt_self(), sel_interfaceWithProtocol_, &unk_2574B4A60);
  objc_msgSend(a1, sel_setInterface_forSelector_argumentIndex_ofReply_, v2, sel_performStreamingSummarizationRequest_delegate_, 1, 0);

}

void SummarizationClient.__allocating_init()()
{
  sub_245776B5C();
  SummarizationClient.init()();
  sub_245748A90();
}

void SummarizationClient.init()()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = 0;
  type metadata accessor for TextAssistantStreamingState();
  sub_245776B5C();
  *(_QWORD *)(v0 + 24) = sub_24579DA24();
  sub_2457567FC(&qword_2574977D0, v1, (uint64_t (*)(uint64_t))type metadata accessor for SummarizationClient, (uint64_t)&protocol conformance descriptor for SummarizationClient);
  sub_245748A50(&qword_257497740);
  swift_allocObject();
  swift_retain();
  *(_QWORD *)(v0 + 16) = sub_2457BAE88();
  swift_release();
  sub_245749FB4();
}

uint64_t sub_245794B0C()
{
  NSObject *v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_257497E38 != -1)
    swift_once();
  v1 = sub_245751504();
  sub_2457A0860(v1, (uint64_t)qword_257498E30);
  v2 = sub_245751514();
  if (os_log_type_enabled(v0, v2))
  {
    v3 = (uint8_t *)sub_2457513BC();
    *(_WORD *)v3 = 0;
    sub_2457A07B8(&dword_245746000, v0, v2, "SummarizationClient.xpcConnectionWasInvalidated; client connection invalidated",
      v3);
    sub_24575105C();
  }

  return sub_245794BBC();
}

uint64_t sub_245794BBC()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  uint64_t v19;
  void *v20;

  v1 = sub_2457BA9CC();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_2457BA9D8();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_24579B0DC();
  v9 = *(_QWORD *)(v8 + 16);
  if (v9)
  {
    v19 = v8;
    v20 = v0;
    v10 = v8 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_2457BA9B4();
      sub_245757970(MEMORY[0x24BEE4AF8]);
      sub_2457567FC((unint64_t *)&qword_257498418, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BDCAEE8], MEMORY[0x24BDCAEE0]);
      sub_2457BAA20();
      v11 = (void *)sub_2457BA9A8();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      v12 = v4;
      v13 = v3;
      v14 = v5;
      v15 = (void *)sub_2457BAA2C();

      v16 = v20;
      v17 = (void *)sub_2457BB1A0();
      swift_bridgeObjectRelease();
      objc_msgSend(v16, sel_didEncounterTextAssistantStreamingError_forRequestIdentifier_, v15, v17, v19);

      v5 = v14;
      v3 = v13;
      v4 = v12;

      v10 += 16;
      --v9;
    }
    while (v9);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_245794D98(uint64_t a1)
{
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint8_t *v5;

  if (qword_257497E38 != -1)
    swift_once();
  v2 = sub_2457BB08C();
  sub_24574E0F8(v2, (uint64_t)qword_257498E30);
  v3 = sub_2457BB068();
  v4 = sub_2457BB350();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v5 = 0;
    _os_log_impl(&dword_245746000, v3, v4, "summarize(text:) is UNIMPLEMENTED", v5, 2u);
    MEMORY[0x24953B318](v5, -1, -1);
  }

  sub_2457A0330();
  return a1;
}

uint64_t SummarizationClient.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t SummarizationClient.__deallocating_deinit()
{
  SummarizationClient.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_245794ECC()
{
  type metadata accessor for SummarizationClient();
  return sub_2457BAEA0();
}

uint64_t sub_245794F0C(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x24953B288](&unk_2457C4378, a1);
  return nullsub_1(a1, v2);
}

uint64_t SummarizationClient.UseCase.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_245794F84 + 4 * byte_2457C42A0[*v0]))(0xD000000000000014, 0x80000002457C8030);
}

uint64_t sub_245795014()
{
  return 0x6E776F6E6B6E75;
}

uint64_t sub_24579502C()
{
  return sub_2457A0338();
}

uint64_t type metadata accessor for TextAssistantStreamingState()
{
  return objc_opt_self();
}

Sage::SummarizationClient::UseCase_optional __swiftcall SummarizationClient.UseCase.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  Sage::SummarizationClient::UseCase_optional result;

  v2 = v1;
  v3 = sub_2457BB524();
  sub_245751474();
  v4 = 14;
  if (v3 < 0xE)
    v4 = v3;
  *v2 = v4;
  sub_245749FB4();
  return result;
}

uint64_t sub_2457950AC()
{
  return sub_2457B5584();
}

void sub_2457950B8()
{
  sub_2457A4038();
}

uint64_t sub_2457950C0()
{
  return sub_2457A445C();
}

void sub_2457950C8()
{
  sub_2457A4600();
}

Sage::SummarizationClient::UseCase_optional sub_2457950D0(Swift::String *a1)
{
  return SummarizationClient.UseCase.init(rawValue:)(*a1);
}

void sub_2457950DC(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SummarizationClient.UseCase.rawValue.getter();
  a1[1] = v2;
  sub_245748A90();
}

uint64_t sub_2457950FC()
{
  sub_24579F99C();
  return sub_2457BB200();
}

uint64_t sub_245795158()
{
  sub_24579F99C();
  return sub_2457BB1E8();
}

uint64_t SummarizationClient.AvailabilityParameters.useCases.getter()
{
  return swift_bridgeObjectRetain();
}

void SummarizationClient.AvailabilityParameters.useCases.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  sub_245748A90();
}

uint64_t (*SummarizationClient.AvailabilityParameters.useCases.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*SummarizationClient.AvailabilityParameters.onBehalfOfProcess.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

__n128 SummarizationClient.AvailabilityParameters.init(useCases:onBehalfOfProcess:)@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int32 v3;
  __n128 result;

  v3 = a2[1].n128_u32[0];
  *(_QWORD *)a3 = a1;
  result = *a2;
  *(__n128 *)(a3 + 8) = *a2;
  *(_DWORD *)(a3 + 24) = v3;
  return result;
}

void SummarizationClient.currentAvailablity(parameters:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42[2];
  int v43;
  uint64_t v44[2];
  int v45;
  __int128 v46;
  uint64_t v47;
  unint64_t v48;

  sub_245759004();
  v2 = v1;
  sub_245748A50(&qword_257499D10);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v3);
  sub_245748AD0();
  v4 = sub_2457BAE1C();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v5);
  sub_24577741C();
  v41 = sub_2457BAE34();
  v6 = *(_QWORD *)(v41 - 8);
  MEMORY[0x24BDAC7A8](v41);
  sub_245750F48();
  v36 = v7;
  sub_2457A0084();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v8);
  sub_245749FF4();
  v11 = (_QWORD *)(v10 - v9);
  v12 = sub_245776CA0();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  sub_245749FF4();
  v16 = v15 - v14;
  v17 = *v2;
  if (*(_QWORD *)(*v2 + 16))
  {
    v35 = v6;
    v38 = *((_DWORD *)v2 + 6);
    v18 = v2[2];
    v37 = v2[1];
    sub_2457A0898();
    v19 = sub_2457BAAA4();
    v21 = v20;
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v16, v12);
    sub_245748B24();
    sub_2457A0874();
    sub_2457A01C8();
    SummarizationClient.UseCase.rawValue.getter();
    sub_2457BB1D0();
    sub_245751420();
    *v11 = v17;
    swift_storeEnumTagMultiPayload();
    *(_QWORD *)&v46 = v19;
    *((_QWORD *)&v46 + 1) = v21;
    v47 = 0;
    v48 = 0xE000000000000000;
    v44[0] = v37;
    v44[1] = v18;
    v45 = v38;
    v42[0] = 0;
    v42[1] = 0;
    v43 = 0;
    v22 = objc_allocWithZone((Class)sub_24578B780());
    sub_2457A0330();
    sub_2457A02E0();
    v23 = SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)((uint64_t)v11, &v46, v44, v42);
    v32 = sub_24579598C(v23);

    v33 = *(_QWORD *)(v17 + 16);
    if (v33)
    {
      v44[0] = MEMORY[0x24BEE4AF8];
      sub_2457A02E0();
      sub_2457740B8(0, v33, 0);
      v34 = *(unsigned __int8 *)(v17 + 32);
      *(_QWORD *)&v46 = 0;
      *((_QWORD *)&v46 + 1) = 0xE000000000000000;
      sub_245748B24();
      sub_2457A0874();
      sub_2457A01C8();
      __asm { BR              X8 }
    }
    sub_2457BAE28();
    sub_2457BAE4C();
    (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v36, v41);
  }
  else
  {
    if (qword_257497E38 != -1)
      swift_once();
    v24 = sub_245751504();
    v25 = sub_2457A0860(v24, (uint64_t)qword_257498E30);
    v26 = sub_2457BB35C();
    if (os_log_type_enabled(v25, v26))
    {
      v27 = (uint8_t *)sub_2457513BC();
      *(_WORD *)v27 = 0;
      sub_2457A07B8(&dword_245746000, v25, v26, "parameters.useCases was empty", v27);
      sub_24575105C();
    }

    sub_245748A50(&qword_257499D20);
    v28 = sub_2457BAE04();
    v29 = *(_QWORD *)(v28 - 8);
    v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
    v31 = sub_2457A07AC();
    *(_OWORD *)(v31 + 16) = xmmword_2457BDEE0;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v29 + 104))(v31 + v30, *MEMORY[0x24BE3BF70], v28);
    sub_245780364(v31);
    sub_2457BAE10();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v39 + 104))(v0, *MEMORY[0x24BE3BDF0], v40);
    sub_2457A0774();
    sub_2457BAE40();
  }
  sub_245758FB4();
}

id sub_24579598C(void *a1)
{
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  id v22;
  id v23;
  NSObject *v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  NSObject *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  id v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;

  v3 = v1;
  v5 = type metadata accessor for SummarizationXPCRequest.Request(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257497E38 != -1)
    swift_once();
  v8 = sub_2457BB08C();
  v9 = sub_24574E0F8(v8, (uint64_t)qword_257498E30);
  v10 = a1;
  v11 = sub_2457BB068();
  v12 = sub_2457BB368();
  if (os_log_type_enabled(v11, (os_log_type_t)v12))
  {
    LODWORD(v42) = v12;
    v43 = v3;
    v44 = (uint64_t)v2;
    v45 = (id)v9;
    v13 = swift_slowAlloc();
    v41 = swift_slowAlloc();
    v51 = v41;
    *(_DWORD *)v13 = 136315650;
    sub_245789E80(&v47);
    v14 = (uint64_t)v7;
    v15 = v47;
    v16 = v48;
    swift_bridgeObjectRelease();
    v47 = sub_245773478(v15, v16, &v51);
    sub_2457BB3BC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    sub_245789E80(&v47);
    v17 = v49;
    v18 = v50;
    swift_bridgeObjectRelease();
    v47 = sub_245773478(v17, v18, &v51);
    sub_2457BB3BC();

    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 22) = 2080;
    swift_beginAccess();
    sub_24579FB34();
    SummarizationXPCRequest.Request.category.getter();
    sub_24579FB64(v14);
    __asm { BR              X10 }
  }

  if (!*(_QWORD *)(v3 + 16))
  {
    __break(1u);
    JUMPOUT(0x2457962E8);
  }
  MEMORY[0x24BDAC7A8](v19);
  *(&v40 - 2) = (uint64_t)v10;
  type metadata accessor for SummarizationXPCResult(0);
  swift_retain();
  sub_2457BAE70();
  if (v2)
  {
    swift_release();
    v20 = v10;
    v21 = v2;
    v22 = v20;
    v23 = v2;
    v24 = sub_2457BB068();
    v25 = sub_2457BB350();
    if (os_log_type_enabled(v24, (os_log_type_t)v25))
    {
      LODWORD(v43) = v25;
      v45 = v24;
      v26 = (uint64_t)v7;
      v27 = swift_slowAlloc();
      v42 = swift_slowAlloc();
      v44 = swift_slowAlloc();
      v51 = v44;
      *(_DWORD *)v27 = 136315906;
      sub_245789E80(&v47);
      v28 = v47;
      v29 = v48;
      swift_bridgeObjectRelease();
      v47 = sub_245773478(v28, v29, &v51);
      sub_2457BB3BC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 12) = 2080;
      sub_245789E80(&v47);
      v30 = v49;
      v31 = v50;
      swift_bridgeObjectRelease();
      v47 = sub_245773478(v30, v31, &v51);
      sub_2457BB3BC();

      swift_bridgeObjectRelease();
      *(_WORD *)(v27 + 22) = 2080;
      swift_beginAccess();
      sub_24579FB34();
      SummarizationXPCRequest.Request.category.getter();
      sub_24579FB64(v26);
      __asm { BR              X10 }
    }

    swift_willThrow();
  }
  else
  {
    swift_release();
    v22 = (id)v47;
    v32 = v10;
    v33 = sub_2457BB068();
    v34 = sub_2457BB368();
    if (os_log_type_enabled(v33, v34))
    {
      v35 = (uint8_t *)swift_slowAlloc();
      v36 = swift_slowAlloc();
      v51 = v36;
      v45 = v22;
      *(_DWORD *)v35 = 136315138;
      v44 = (uint64_t)(v35 + 4);
      sub_245789E80(&v47);
      v38 = v47;
      v37 = v48;
      swift_bridgeObjectRelease();
      v47 = sub_245773478(v38, v37, &v51);
      v22 = v45;
      sub_2457BB3BC();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_245746000, v33, v34, "SummarizationClient received response for synchronous request with requestIdentifier=%s", v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x24953B318](v36, -1, -1);
      MEMORY[0x24953B318](v35, -1, -1);

    }
    else
    {

    }
  }
  return v22;
}

uint64_t sub_245796318(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v8;

  v2 = a1 == 0x6369706F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656E694C706F74 && a2 == 0xE700000000000000;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0x736973706F6E7973 && a2 == 0xE800000000000000)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v8 = sub_2457BB6B0();
      swift_bridgeObjectRelease();
      if ((v8 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

uint64_t sub_24579645C(char a1)
{
  if (!a1)
    return 0x6369706F74;
  if (a1 == 1)
    return 0x656E694C706F74;
  return 0x736973706F6E7973;
}

uint64_t sub_2457964B4()
{
  char *v0;

  return sub_24579645C(*v0);
}

uint64_t sub_2457964BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245796318(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457964E0()
{
  sub_24579DA84();
  return sub_2457BB788();
}

uint64_t sub_245796508()
{
  sub_24579DA84();
  return sub_2457BB794();
}

uint64_t sub_245796530()
{
  sub_24579DAC0();
  return sub_2457BB788();
}

uint64_t sub_245796558()
{
  sub_24579DAC0();
  return sub_2457BB794();
}

uint64_t sub_245796580()
{
  sub_24579DAFC();
  return sub_2457BB788();
}

uint64_t sub_2457965A8()
{
  sub_24579DAFC();
  return sub_2457BB794();
}

uint64_t sub_2457965D0()
{
  sub_24579DB38();
  return sub_2457BB788();
}

uint64_t sub_2457965F8()
{
  sub_24579DB38();
  return sub_2457BB794();
}

void SummarizationClient.SummarizationStyle.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_245758054();
  v3 = sub_245748A50(&qword_257499D28);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_2457A053C(v5, v12);
  sub_245748A50(&qword_257499D30);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_24577744C();
  v13 = sub_245748A50(&qword_257499D38);
  sub_245767C1C();
  MEMORY[0x24BDAC7A8](v7);
  sub_245748AD0();
  sub_245748A50(&qword_257499D40);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v8);
  sub_2457A08F8();
  sub_24579DA84();
  sub_2457A050C();
  if (v2)
  {
    if (v2 == 1)
    {
      sub_2457A08C0();
      sub_2457A00CC();
      v9 = sub_2457A0410();
    }
    else
    {
      sub_2457A08AC();
      sub_2457A00CC();
      v10 = v16;
      v11 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v9 = v14;
    }
    v11(v9, v10);
  }
  else
  {
    sub_24579DB38();
    sub_2457A00CC();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v13);
  }
  sub_2457A04CC();
  sub_245751240();
}

void SummarizationClient.SummarizationStyle.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _QWORD *v42;

  sub_245758054();
  v42 = (_QWORD *)v10;
  v12 = v11;
  v41 = v13;
  v40 = sub_245748A50(&qword_257499D68);
  v37 = *(_QWORD *)(v40 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v14);
  sub_2457A0520(v15, v34);
  v16 = sub_245748A50(&qword_257499D70);
  v38 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v17);
  sub_2457A0558(v18, v34);
  v36 = sub_245748A50(&qword_257499D78);
  sub_2457A068C();
  MEMORY[0x24BDAC7A8](v19);
  sub_24577744C();
  sub_245748A50(&qword_257499D80);
  sub_2457A087C();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v12[3];
  sub_245749280(v12, v23);
  sub_24579DA84();
  sub_2457A03F8();
  if (v10)
    goto LABEL_10;
  if (!*(_QWORD *)(sub_2457A030C() + 16)
    || (v24 = sub_2457A02E8(), sub_245750D90(v24, v25, v26, v27, v28, v29), sub_2457A0588(), v23 >> 1))
  {
    sub_2457BB470();
    sub_2457535A0();
    sub_245748A50(&qword_2574980B0);
    sub_2457A0814((uint64_t)&type metadata for SummarizationClient.SummarizationStyle);
    v33 = sub_2457A034C();
    sub_2457A0430(v33, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_2457A0420();
    sub_2457A0468();
    v12 = v42;
LABEL_10:
    sub_245749564((uint64_t)v12);
    goto LABEL_11;
  }
  if ((_DWORD)v12)
  {
    a10 = (char)v12;
    v30 = v35;
    if ((_DWORD)v12 == 1)
    {
      sub_2457A08C0();
      sub_2457A008C();
      sub_2457A0834();
      v31 = sub_2457A0410();
    }
    else
    {
      sub_2457A08AC();
      sub_2457A008C();
      sub_2457A0834();
      v31 = sub_2457A07CC();
    }
    v32(v31);
    sub_245753610();
    sub_2457A0150(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  }
  else
  {
    sub_24579DB38();
    sub_2457A008C();
    sub_2457A03A0();
    sub_2457A0420();
    sub_2457A0150(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
    v22 = v41;
  }
  *v22 = a10;
  sub_245749564((uint64_t)v42);
LABEL_11:
  sub_2457A07E8();
  sub_245751240();
}

void sub_245796A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  char vars8;

  SummarizationClient.SummarizationStyle.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_245796A7C()
{
  SummarizationClient.SummarizationStyle.encode(to:)();
}

void SummarizationClient.prewarm(for:onBehalfOfProcess:requestIdentifier:)()
{
  uint64_t v0;
  id v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t *v4;
  uint64_t *v5;
  id v6;
  id v7;

  sub_245759004();
  sub_2457A0084();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v0);
  sub_245749FF4();
  sub_2457A0330();
  sub_245748B24();
  swift_bridgeObjectRelease();
  sub_2457A00A4();
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457BB1D0();
  sub_2457512F4();
  swift_storeEnumTagMultiPayload();
  v1 = objc_allocWithZone((Class)sub_24578B780());
  sub_2457774AC();
  sub_2457A0750();
  v6 = sub_2457A009C(v2, v3, v4, v5);
  v7 = sub_24579598C(v6);

  sub_245758FB4();
}

void SummarizationClient.PrewarmCategory.identifier.getter()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_2457BB440();
  sub_245756F90();
  __asm { BR              X9 }
}

uint64_t sub_245796D48()
{
  uint64_t v1;

  sub_2457BB1D0();
  swift_bridgeObjectRelease();
  return v1;
}

uint64_t SummarizationClient.PrewarmCategory.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_245796E0C + 4 * byte_2457C42C0[*v0]))(0xD000000000000016, 0x80000002457C8160);
}

uint64_t sub_245796E14()
{
  return 0x72506C6175736976;
}

Sage::SummarizationClient::PrewarmCategory_optional __swiftcall SummarizationClient.PrewarmCategory.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Sage::SummarizationClient::PrewarmCategory_optional result;

  sub_24579BF7C(v1);
  return result;
}

void sub_245796E40(char *a1)
{
  sub_2457B5710(*a1);
}

void sub_245796E4C()
{
  sub_2457A4044();
}

void sub_245796E54(uint64_t a1)
{
  char *v1;

  sub_2457A4534(a1, *v1);
}

void sub_245796E5C()
{
  sub_2457A45E8();
}

Sage::SummarizationClient::PrewarmCategory_optional sub_245796E64(Swift::String *a1)
{
  return SummarizationClient.PrewarmCategory.init(rawValue:)(*a1);
}

void sub_245796E70(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SummarizationClient.PrewarmCategory.rawValue.getter();
  a1[1] = v2;
  sub_245748A90();
}

uint64_t sub_245796E90()
{
  sub_24579F960();
  return sub_2457BB200();
}

uint64_t sub_245796EEC()
{
  sub_24579F960();
  return sub_2457BB1E8();
}

Swift::Void __swiftcall SummarizationClient.prewarm(category:)(Sage::SummarizationClient::PrewarmCategory category)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = sub_245776CA0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_24575136C();
  sub_2457BAAC8();
  sub_2457BAAA4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  SummarizationClient.prewarm(for:onBehalfOfProcess:requestIdentifier:)();
  swift_bridgeObjectRelease();
  sub_245767BCC();
}

void SummarizationClient.TextAssistantSummarizationOptions.init()(_BYTE *a1@<X8>)
{
  *a1 = 0;
  sub_2457A0574((uint64_t)a1);
}

void static SummarizationClient.TextAssistantSummarizationOptions.default.getter(_BYTE *a1@<X8>)
{
  *a1 = 0;
  sub_2457A0574((uint64_t)a1);
}

BOOL static SummarizationClient.TextAssistantSummarizationOptions.Source.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void SummarizationClient.TextAssistantSummarizationOptions.Source.hash(into:)()
{
  sub_2457BB734();
  sub_245748A90();
}

uint64_t sub_245797038(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  char v7;

  v2 = a1 == 0x6973734174786574 && a2 == 0xED0000746E617473;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x6552697261666173 && a2 == 0xEC00000072656461;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else if (a1 == 0xD000000000000014 && a2 == 0x80000002457C8110)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = sub_2457BB6B0();
      swift_bridgeObjectRelease();
      if ((v7 & 1) != 0)
        return 2;
      else
        return 3;
    }
  }
}

void sub_2457971C0()
{
  sub_2457514C4();
  sub_2457A08E0();
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_2457971E8(char a1)
{
  if (!a1)
    return 0x6973734174786574;
  if (a1 == 1)
    return 0x6552697261666173;
  return 0xD000000000000014;
}

void sub_245797258()
{
  sub_2457971C0();
}

uint64_t sub_245797270()
{
  char *v0;

  return sub_2457971E8(*v0);
}

uint64_t sub_245797278@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245797038(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24579729C()
{
  sub_24579DB74();
  return sub_2457BB788();
}

uint64_t sub_2457972C4()
{
  sub_24579DB74();
  return sub_2457BB794();
}

uint64_t sub_2457972EC()
{
  sub_24579DBB0();
  return sub_2457BB788();
}

uint64_t sub_245797314()
{
  sub_24579DBB0();
  return sub_2457BB794();
}

uint64_t sub_24579733C()
{
  sub_24579DBEC();
  return sub_2457BB788();
}

uint64_t sub_245797364()
{
  sub_24579DBEC();
  return sub_2457BB794();
}

uint64_t sub_24579738C()
{
  sub_24579DC28();
  return sub_2457BB788();
}

uint64_t sub_2457973B4()
{
  sub_24579DC28();
  return sub_2457BB794();
}

void SummarizationClient.TextAssistantSummarizationOptions.Source.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  sub_245758054();
  v3 = sub_245748A50(&qword_257499D88);
  v15 = *(_QWORD *)(v3 - 8);
  v16 = v3;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_2457A053C(v5, v12);
  sub_245748A50(&qword_257499D90);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_24577744C();
  v13 = sub_245748A50(&qword_257499D98);
  sub_245767C1C();
  MEMORY[0x24BDAC7A8](v7);
  sub_245748AD0();
  sub_245748A50(&qword_257499DA0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v8);
  sub_2457A08F8();
  sub_24579DB74();
  sub_2457A050C();
  if (v2)
  {
    if (v2 == 1)
    {
      sub_2457A08CC();
      sub_2457A00CC();
      v9 = sub_2457A0410();
    }
    else
    {
      sub_2457A08A0();
      sub_2457A00CC();
      v10 = v16;
      v11 = *(void (**)(uint64_t, uint64_t))(v15 + 8);
      v9 = v14;
    }
    v11(v9, v10);
  }
  else
  {
    sub_24579DC28();
    sub_2457A00CC();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v0, v13);
  }
  sub_2457A04CC();
  sub_245751240();
}

void _s4Sage19SummarizationClientC0B5StyleO9hashValueSivg_0()
{
  sub_2457514C4();
  sub_245767EAC();
  sub_2457513DC();
  sub_24575118C();
}

void SummarizationClient.TextAssistantSummarizationOptions.Source.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _BYTE *v41;
  _QWORD *v42;

  sub_245758054();
  v42 = (_QWORD *)v10;
  v12 = v11;
  v41 = v13;
  v40 = sub_245748A50(&qword_257499DC8);
  v37 = *(_QWORD *)(v40 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v14);
  sub_2457A0520(v15, v34);
  v16 = sub_245748A50(&qword_257499DD0);
  v38 = *(_QWORD *)(v16 - 8);
  v39 = v16;
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v17);
  sub_2457A0558(v18, v34);
  v36 = sub_245748A50(&qword_257499DD8);
  sub_2457A068C();
  MEMORY[0x24BDAC7A8](v19);
  sub_24577744C();
  sub_245748A50(&qword_257499DE0);
  sub_2457A087C();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v34 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v12[3];
  sub_245749280(v12, v23);
  sub_24579DB74();
  sub_2457A03F8();
  if (v10)
    goto LABEL_10;
  if (!*(_QWORD *)(sub_2457A030C() + 16)
    || (v24 = sub_2457A02E8(), sub_245750D90(v24, v25, v26, v27, v28, v29), sub_2457A0588(), v23 >> 1))
  {
    sub_2457BB470();
    sub_2457535A0();
    sub_245748A50(&qword_2574980B0);
    sub_2457A0814((uint64_t)&type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source);
    v33 = sub_2457A034C();
    sub_2457A0430(v33, *MEMORY[0x24BEE26D0]);
    swift_willThrow();
    sub_2457A0420();
    sub_2457A0468();
    v12 = v42;
LABEL_10:
    sub_245749564((uint64_t)v12);
    goto LABEL_11;
  }
  if ((_DWORD)v12)
  {
    a10 = (char)v12;
    v30 = v35;
    if ((_DWORD)v12 == 1)
    {
      sub_2457A08CC();
      sub_2457A008C();
      sub_2457A0834();
      v31 = sub_2457A0410();
    }
    else
    {
      sub_2457A08A0();
      sub_2457A008C();
      sub_2457A0834();
      v31 = sub_2457A07CC();
    }
    v32(v31);
    sub_245753610();
    sub_2457A0150(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8));
  }
  else
  {
    sub_24579DC28();
    sub_2457A008C();
    sub_2457A03A0();
    sub_2457A0420();
    sub_2457A0150(*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8));
    v22 = v41;
  }
  *v22 = a10;
  sub_245749564((uint64_t)v42);
LABEL_11:
  sub_2457A07E8();
  sub_245751240();
}

void sub_245797848()
{
  sub_2457BB728();
  sub_245767EAC();
  sub_2457513DC();
  sub_24575118C();
}

void sub_245797874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  char vars8;

  SummarizationClient.TextAssistantSummarizationOptions.Source.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8);
}

void sub_245797888()
{
  SummarizationClient.TextAssistantSummarizationOptions.Source.encode(to:)();
}

void SummarizationClient.TextAssistantSummarizationOptions.source.getter(_BYTE *a1@<X8>)
{
  sub_24578081C(a1);
}

uint64_t (*SummarizationClient.TextAssistantSummarizationOptions.source.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t _s4Sage19SummarizationClientC22AvailabilityParametersV17onBehalfOfProcessAA0cI4InfoVSgvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_DWORD *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(a1 + 8) = v2;
  *(_DWORD *)(a1 + 16) = v3;
  return swift_bridgeObjectRetain();
}

void _s4Sage19SummarizationClientC22AvailabilityParametersV17onBehalfOfProcessAA0cI4InfoVSgvs_0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = *((_DWORD *)a1 + 4);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v3;
  *(_DWORD *)(v1 + 24) = v4;
  sub_245749FB4();
}

uint64_t (*SummarizationClient.TextAssistantSummarizationOptions.originatingProcess.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SummarizationClient.TextAssistantSummarizationOptions.init(source:originatingProcess:)@<X0>(char *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  NSObject *v3;
  os_log_type_t v4;
  char v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v11;
  os_log_type_t v12;
  uint8_t *v13;

  v6 = *a1;
  v8 = *a2;
  v7 = a2[1];
  v9 = *((_DWORD *)a2 + 4);
  if (*a1 || v7)
  {
    sub_245756F54();
  }
  else
  {
    if (qword_257497E38 != -1)
      swift_once();
    v11 = sub_245751504();
    sub_2457A0860(v11, (uint64_t)qword_257498E30);
    v12 = sub_245751514();
    if (sub_2457A0610(v12))
    {
      v13 = (uint8_t *)sub_2457513BC();
      *(_WORD *)v13 = 0;
      sub_2457A07B8(&dword_245746000, v3, v4, "Expected non-nil originatingProcess when source is .textAssistant.", v13);
      sub_24575105C();
    }

  }
  *(_BYTE *)a3 = v6;
  *(_QWORD *)(a3 + 8) = v8;
  *(_QWORD *)(a3 + 16) = v7;
  *(_DWORD *)(a3 + 24) = v9;
  return swift_bridgeObjectRelease();
}

void SummarizationClient.TextAssistantSummarizationOptions.init(source:)(_BYTE *a1@<X8>, _BYTE *a2@<X0>)
{
  *a1 = *a2;
  sub_2457A0574((uint64_t)a1);
}

uint64_t sub_245797A00(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000002457CA3D0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_245797AE4(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000012;
  else
    return 0x656372756F73;
}

uint64_t sub_245797B1C()
{
  char *v0;

  return sub_245797AE4(*v0);
}

uint64_t sub_245797B24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_245797A00(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245797B48()
{
  sub_24579DC64();
  return sub_2457BB788();
}

uint64_t sub_245797B70()
{
  sub_24579DC64();
  return sub_2457BB794();
}

void SummarizationClient.TextAssistantSummarizationOptions.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_245758054();
  v3 = v2;
  v4 = sub_245748A50(&qword_257499DE8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_24575136C();
  sub_245749280(v3, v3[3]);
  sub_24579DC64();
  sub_2457807E8();
  sub_24579DCA0();
  sub_2457A066C();
  sub_2457BB68C();
  if (!v0)
  {
    sub_24577E150();
    sub_2457A066C();
    sub_2457BB638();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_245751240();
}

void SummarizationClient.TextAssistantSummarizationOptions.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;

  sub_245758054();
  v2 = v1;
  v4 = v3;
  v5 = sub_245748A50(&qword_257499E00);
  MEMORY[0x24BDAC7A8](v5);
  sub_2457535E8();
  sub_245749280(v2, v2[3]);
  sub_24579DC64();
  sub_245781BD0();
  if (!v0)
  {
    sub_24579DCDC();
    sub_2457A0484();
    sub_2457BB5CC();
    sub_24577E260();
    sub_2457A0484();
    sub_2457BB578();
    sub_245748AC0();
    sub_2457513E4();
    swift_bridgeObjectRelease();
    *(_BYTE *)v4 = v6;
    *(_QWORD *)(v4 + 8) = v6;
    *(_QWORD *)(v4 + 16) = v7;
    *(_DWORD *)(v4 + 24) = v8;
  }
  sub_245748AB0();
  swift_bridgeObjectRelease();
  sub_245751240();
}

void sub_245797DDC()
{
  SummarizationClient.TextAssistantSummarizationOptions.init(from:)();
}

void sub_245797DF0()
{
  SummarizationClient.TextAssistantSummarizationOptions.encode(to:)();
}

uint64_t SummarizationClient.TextAssistantSummary.content.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t (*SummarizationClient.TextAssistantSummary.content.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void SummarizationClient.TextAssistantSummary.safetyClassification.getter(_BYTE *a1@<X8>)
{
  sub_24578081C(a1);
}

_BYTE *SummarizationClient.TextAssistantSummary.safetyClassification.setter(_BYTE *result, uint64_t a2)
{
  uint64_t v2;

  *(_BYTE *)(v2 + *(int *)(a2 + 44)) = *result;
  return result;
}

uint64_t (*SummarizationClient.TextAssistantSummary.safetyClassification.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*SummarizationClient.TextAssistantSummary.inferenceEnvironmentInfo.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SummarizationClient.TextAssistantSummary.init(content:safetyClassification:inferenceEnvironmentInfo:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_2457981BC(a1, a2, a3, a4, a5, a6, type metadata accessor for SummarizationClient.TextAssistantSummary, a7);
}

uint64_t SummarizationClient.TextAssistantSummary.init(content:safetyClassification:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_245798264(a1, a2, a3, a4, a5, type metadata accessor for SummarizationClient.TextAssistantSummary, a6);
}

uint64_t sub_245797E94(char a1)
{
  if (!a1)
    return 0x746E65746E6F63;
  if (a1 == 1)
    return 0xD000000000000014;
  return 0xD000000000000018;
}

BOOL sub_245797EF0(char *a1, char *a2)
{
  return sub_245748DB4(*a1, *a2);
}

void sub_245797F08()
{
  sub_2457971C0();
}

uint64_t sub_245797F28()
{
  return sub_245748DC4();
}

uint64_t sub_245797F38(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_245798418(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))sub_245748DC4);
}

uint64_t sub_245797F44()
{
  char *v0;

  return sub_245797E94(*v0);
}

uint64_t sub_245797F54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457982F0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_245797F84(_QWORD *a1, uint64_t a2)
{
  return sub_245798474(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_245748F98);
}

uint64_t sub_245797F90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_245748F4C();
  *a1 = result;
  return result;
}

uint64_t sub_245797FC0(uint64_t a1)
{
  MEMORY[0x24953B288](&unk_2457C5394, a1);
  return sub_2457BB788();
}

uint64_t sub_245797FF4(uint64_t a1)
{
  MEMORY[0x24953B288](&unk_2457C5394, a1);
  return sub_2457BB794();
}

void SummarizationClient.TextAssistantSummary.encode(to:)()
{
  sub_245798528();
}

void SummarizationClient.TextAssistantSummary.init(from:)()
{
  sub_2457986F0();
}

void sub_245798078()
{
  SummarizationClient.TextAssistantSummary.init(from:)();
}

void sub_245798098()
{
  SummarizationClient.TextAssistantSummary.encode(to:)();
}

uint64_t _s4Sage19SummarizationClientC20TextAssistantSummaryV7contentxvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*SummarizationClient.TextAssistantPartialSummary.content.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*SummarizationClient.TextAssistantPartialSummary.safetyClassification.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

_QWORD *_s4Sage19SummarizationClientC20TextAssistantSummaryV24inferenceEnvironmentInfoAA09InferencehI0VSgvg_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11[16];

  v2 = sub_245781C64(v1 + *(int *)(a1 + 48), (uint64_t)v11);
  sub_2457A07C0(v2, v3, v4, v5, v6, v7, v8, v9, v11[0]);
  return sub_245781D00(v11, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_245752618);
}

uint64_t _s4Sage19SummarizationClientC20TextAssistantSummaryV24inferenceEnvironmentInfoAA09InferencehI0VSgvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[128];
  _QWORD v7[17];

  sub_245781C64(a1, (uint64_t)v6);
  v4 = v2 + *(int *)(a2 + 48);
  sub_245781C64(v4, (uint64_t)v7);
  sub_245781D00(v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24575277C);
  return sub_245781C64((uint64_t)v6, v4);
}

uint64_t (*SummarizationClient.TextAssistantPartialSummary.inferenceEnvironmentInfo.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t SummarizationClient.TextAssistantPartialSummary.init(content:safetyClassification:inferenceEnvironmentInfo:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_2457981BC(a1, a2, a3, a4, a5, a6, type metadata accessor for SummarizationClient.TextAssistantPartialSummary, a7);
}

uint64_t sub_2457981BC@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(_QWORD, uint64_t, uint64_t, uint64_t)@<X6>, uint64_t a8@<X8>)
{
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25[16];

  v14 = *a2;
  sub_245781C64(a3, (uint64_t)v25);
  v15 = *(int *)(a7(0, a4, a5, a6) + 44);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a8, a1, a4);
  *(_BYTE *)(a8 + v15) = v14;
  return sub_2457A07C0(v16, v17, v18, v19, v20, v21, v22, v23, v25[0]);
}

uint64_t SummarizationClient.TextAssistantPartialSummary.init(content:safetyClassification:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_245798264(a1, a2, a3, a4, a5, type metadata accessor for SummarizationClient.TextAssistantPartialSummary, a6);
}

uint64_t sub_245798264@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t (*a6)(_QWORD, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a7@<X8>)
{
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _OWORD v15[8];

  v10 = *a2;
  v11 = a6(0, a3, a4, a5);
  v12 = *(int *)(v11 + 44);
  v13 = a7 + *(int *)(v11 + 48);
  sub_2457824F0(v15);
  sub_245781C64((uint64_t)v15, v13);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a7, a1, a3);
  *(_BYTE *)(a7 + v12) = v10;
  return result;
}

uint64_t sub_2457982F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  char v6;

  v4 = a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000;
  if (v4 || (sub_2457A091C(), (sub_245780540() & 1) != 0))
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (v3 == 0xD000000000000014 && v2 == 0x80000002457CA950 || (sub_245780540() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (v3 == 0xD000000000000018 && v2 == 0x80000002457CA320)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_245780540();
    sub_245751474();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_24579840C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  return sub_245798418(a1, a2, a3, (void (*)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))sub_24579FF18);
}

uint64_t sub_245798418(uint64_t a1, _QWORD *a2, uint64_t a3, void (*a4)(_BYTE *, _QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v4;
  _BYTE v8[72];

  sub_2457BB728();
  a4(v8, *v4, a2[2], a2[3], a2[4]);
  return sub_2457513DC();
}

uint64_t sub_245798468(_QWORD *a1, uint64_t a2)
{
  return sub_245798474(a1, a2, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_245784DB0);
}

uint64_t sub_245798474(_QWORD *a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD, _QWORD, _QWORD))
{
  unsigned __int8 *v3;

  return a3(*v3, a1[2], a1[3], a1[4]);
}

uint64_t sub_24579849C(uint64_t a1)
{
  MEMORY[0x24953B288](&unk_2457C5344, a1);
  return sub_2457BB788();
}

uint64_t sub_2457984D0(uint64_t a1)
{
  MEMORY[0x24953B288](&unk_2457C5344, a1);
  return sub_2457BB794();
}

void SummarizationClient.TextAssistantPartialSummary.encode(to:)()
{
  sub_245798528();
}

void sub_245798528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t);
  _QWORD *v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[3];
  uint64_t v20;
  uint64_t v21;
  _BYTE v22[136];

  sub_245758054();
  v3 = v2;
  v5 = v4;
  v20 = v0;
  v7 = v6;
  v10 = v8[2];
  v9 = v8[3];
  v19[0] = v8;
  v19[1] = v8[4];
  v19[2] = v10;
  v11 = v5(255, v10, v9);
  MEMORY[0x24953B288](v3, v11);
  v12 = sub_2457BB6A4();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v15 = (char *)v19 - v14;
  sub_245749280(v7, v7[3]);
  v16 = v20;
  sub_2457BB77C();
  v22[0] = 0;
  sub_2457BB68C();
  if (v1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  }
  else
  {
    v17 = v13;
    v18 = v19[0];
    sub_24579DD30();
    sub_2457A06CC();
    sub_245781C64(v16 + *(int *)(v18 + 48), (uint64_t)v22);
    sub_245781C64((uint64_t)v22, (uint64_t)&v21);
    sub_24578224C();
    sub_2457A06CC();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v12);
  }
  sub_2457A07E8();
  sub_245751240();
}

void SummarizationClient.TextAssistantPartialSummary.init(from:)()
{
  sub_2457986F0();
}

void sub_2457986F0()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t (*v2)(_QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[128];
  _QWORD v45[16];
  _QWORD v46[16];
  _OWORD v47[8];

  sub_245758054();
  v2 = v1;
  v4 = v3;
  v43 = v0;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v33 = v13;
  v36 = *(_QWORD *)(v9 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v14);
  sub_245750F48();
  v38 = v15;
  v17 = v16(255);
  v42 = MEMORY[0x24953B288](v4, v17);
  v40 = sub_2457BB5F0();
  v34 = *(_QWORD *)(v40 - 8);
  MEMORY[0x24BDAC7A8](v40);
  v19 = (char *)&v31 - v18;
  v35 = v10;
  v37 = v8;
  v20 = v2(0, v10, v8, v6);
  v32 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v31 - v22;
  v24 = *(int *)(v21 + 44);
  *((_BYTE *)&v31 + v24 - v22) = 2;
  v25 = (char *)&v31 + *(int *)(v21 + 48) - v22;
  sub_2457824F0(v47);
  v41 = v25;
  sub_245781C64((uint64_t)v47, (uint64_t)v25);
  sub_245749280(v12, v12[3]);
  v39 = v19;
  v26 = v43;
  sub_245781BD0();
  if (v26)
  {
    sub_2457A0798();
    sub_245781C64((uint64_t)v41, (uint64_t)v46);
    sub_245781D00(v46, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24575277C);
  }
  else
  {
    v43 = v24;
    v27 = v35;
    v28 = v36;
    LOBYTE(v46[0]) = 0;
    sub_2457BB5CC();
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v23, v38, v27);
    LOBYTE(v45[0]) = 1;
    sub_24579DD6C();
    sub_2457A0620();
    v23[v43] = v46[0];
    sub_245782510();
    sub_2457A0620();
    sub_2457A04A0();
    sub_245781C64((uint64_t)v46, (uint64_t)v44);
    v29 = (uint64_t)v41;
    sub_245781C64((uint64_t)v41, (uint64_t)v45);
    sub_245781D00(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24575277C);
    sub_245781C64((uint64_t)v44, v29);
    v30 = v32;
    (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v33, v23, v20);
    sub_2457A0798();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v23, v20);
  }
  sub_245751240();
}

void sub_2457989C4()
{
  SummarizationClient.TextAssistantPartialSummary.init(from:)();
}

void sub_2457989E4()
{
  SummarizationClient.TextAssistantPartialSummary.encode(to:)();
}

void SummarizationClient.isLanguageEligibleForSummarization(_:options:requestIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  void *v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  unint64_t v15;
  char *v16;
  uint64_t v17;
  objc_class *v18;
  __int128 *v19;
  uint64_t *v20;
  uint64_t *v21;
  id v22;
  _QWORD v23[2];
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;

  sub_245758054();
  v24 = v2;
  v25 = v0;
  v4 = v3;
  v6 = v5;
  sub_2457A0820(v7);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = (void *)*v6;
  v12 = *((_QWORD *)v6 + 2);
  v23[0] = *((_QWORD *)v6 + 1);
  v13 = *((_DWORD *)v6 + 6);
  v27 = 0;
  v28 = 0xE000000000000000;
  sub_2457774AC();
  sub_2457A07A0();
  swift_bridgeObjectRelease();
  sub_2457A00A4();
  v26 = (_BYTE)v11 + 6;
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457BB1D0();
  swift_bridgeObjectRelease();
  v14 = v27;
  v15 = v28;
  v16 = &v10[*(int *)(sub_245748A50(&qword_2574996E0) + 48)];
  v17 = sub_2457BAAE0();
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v10, v23[1], v17);
  *v16 = (char)v11;
  *((_QWORD *)v16 + 1) = v23[0];
  *((_QWORD *)v16 + 2) = v12;
  *((_DWORD *)v16 + 6) = v13;
  swift_storeEnumTagMultiPayload();
  v27 = v24;
  v28 = v4;
  v29 = v14;
  v30 = v15;
  v18 = (objc_class *)sub_2457A05E0();
  sub_2457A099C(v18);
  sub_2457A05F0();
  sub_2457A0750();
  v22 = SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)((uint64_t)v10, v19, v20, v21);
  sub_2457A05AC(v22);
  if (v1)
  {

  }
  else
  {
    sub_2457A0724();
    sub_2457A0928();

  }
  sub_245751240();
}

void SummarizationClient.isTextEligibleForSummarization(_:options:requestIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  void *v10;
  objc_class *v11;
  __int128 *v12;
  uint64_t *v13;
  uint64_t *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  sub_245758054();
  v3 = v2;
  v5 = v4;
  sub_2457A0820(v6);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v7);
  sub_245748AD0();
  v8 = *v3;
  v9 = *((_QWORD *)v3 + 2);
  v16 = *((_QWORD *)v3 + 1);
  v10 = (void *)*((unsigned int *)v3 + 6);
  sub_2457776D4();
  sub_2457A07A0();
  swift_bridgeObjectRelease();
  sub_2457A00A4();
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457BB1D0();
  swift_bridgeObjectRelease();
  *(_QWORD *)v1 = v17;
  *(_QWORD *)(v1 + 8) = v5;
  *(_BYTE *)(v1 + 16) = v8;
  *(_QWORD *)(v1 + 24) = v16;
  *(_QWORD *)(v1 + 32) = v9;
  *(_DWORD *)(v1 + 40) = (_DWORD)v10;
  swift_storeEnumTagMultiPayload();
  v11 = (objc_class *)sub_2457A05E0();
  sub_2457A099C(v11);
  sub_2457A02E0();
  sub_245777474();
  sub_2457A0750();
  v15 = SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v1, v12, v13, v14);
  sub_2457A05AC(v15);
  if (v0)
  {

  }
  else
  {
    sub_2457A0724();
    sub_2457A0928();

  }
  sub_245751240();
}

uint64_t SummarizationClient.isTextEligibleForSummarization(_:options:requestIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 32) = a4;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 56) = sub_2457A0084();
  *(_QWORD *)(v6 + 64) = sub_245756DC0();
  *(_BYTE *)(v6 + 124) = *(_BYTE *)a3;
  *(_OWORD *)(v6 + 72) = *(_OWORD *)(a3 + 8);
  *(_DWORD *)(v6 + 120) = *(_DWORD *)(a3 + 24);
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_245798CE4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_class *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _QWORD *v12;
  uint64_t v13;
  int v15;

  sub_2457A0134();
  v1 = *(_BYTE *)(v0 + 124);
  v15 = *(_DWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(_QWORD *)(v0 + 64);
  v6 = *(_QWORD *)(v0 + 16);
  v5 = *(_QWORD *)(v0 + 24);
  sub_2457774AC();
  sub_245748B24();
  sub_2457A0428();
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457A04C0();
  sub_2457512F4();
  *(_QWORD *)v4 = v6;
  *(_QWORD *)(v4 + 8) = v5;
  *(_BYTE *)(v4 + 16) = v1;
  *(_QWORD *)(v4 + 24) = v3;
  *(_QWORD *)(v4 + 32) = v2;
  *(_DWORD *)(v4 + 40) = v15;
  swift_storeEnumTagMultiPayload();
  sub_2457A06EC();
  v7 = (objc_class *)sub_24578B780();
  sub_2457A01F4(v7);
  sub_245756F54();
  v8 = sub_245756E64();
  v11 = sub_2457A0060(v8, v9, v10);
  sub_2457A06B8((uint64_t)v11);
  v12 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v12;
  *v12 = v0;
  v12[1] = sub_245798DE8;
  v13 = sub_2457A0100();
  return sub_24579FF28(v13);
}

uint64_t sub_245798DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24579FFE8();
  if (!v1)
    *(_QWORD *)(v2 + 112) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_245798E2C()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  char v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 104);
  v1 = *(void **)(v0 + 112);
  v3 = *(void **)(v0 + 88);
  v4 = sub_245791D34();

  sub_2457A06C4();
  if (v2)
    v5 = 0;
  else
    v5 = v4 & 1;
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v5);
}

uint64_t sub_245798E98()
{
  uint64_t v0;

  sub_2457A08D8();
  sub_2457A06C4();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(0);
}

uint64_t sub_245798ED0(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  v2[17] = a1;
  v2[18] = v1;
  type metadata accessor for SummarizationXPCRequest.Request(0);
  v2[19] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_245798F28(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, os_log_t log, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_QWORD *a29,uint64_t a30,uint64_t a31)
{
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id *v35;
  uint64_t v36;
  id v37;
  void *v38;
  os_log_type_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  id v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  _QWORD *v77;
  uint64_t v78;

  sub_2457A0734();
  a30 = v32;
  a31 = v33;
  a29 = v31;
  if (qword_257497E38 != -1)
    swift_once();
  v35 = (id *)(v31 + 17);
  v34 = (void *)v31[17];
  v36 = sub_245751504();
  v31[20] = sub_24574E0F8(v36, (uint64_t)qword_257498E30);
  v37 = v34;
  v38 = (void *)sub_2457BB068();
  v39 = sub_2457BB368();
  if (sub_245757038(v39))
  {
    v40 = v31[19];
    v41 = (void *)v31[17];
    v42 = sub_2457513BC();
    v78 = sub_2457513BC();
    a16 = v78;
    *(_DWORD *)v42 = 136315650;
    sub_2457A0890(v78, v43, v44, v45, v46, v47, v48);
    v49 = a17;
    swift_bridgeObjectRelease();
    v31[13] = sub_2457A06A4(v49, v50, &a16);
    sub_2457BB3BC();
    sub_245751474();

    *(_WORD *)(v42 + 12) = 2080;
    sub_2457A0890(v51, v52, v53, v54, v55, v56, v57);
    v58 = a19;
    v59 = a20;
    swift_bridgeObjectRelease();
    v31[14] = sub_245773478(v58, v59, &a16);
    sub_2457BB3BC();
    sub_245751420();

    *(_WORD *)(v42 + 22) = 2080;
    sub_245756E1C();
    sub_24579FB34();
    SummarizationXPCRequest.Request.category.getter();
    sub_24579FB64(v40);
    v60 = sub_2457A03D8();
    return ((uint64_t (*)(uint64_t))((char *)&loc_2457990EC + 4 * byte_2457C42C4[v61]))(v60);
  }
  else
  {
    v63 = *v35;

    v64 = v31[17];
    v65 = v31[18];
    sub_2457A0890(v66, v67, v68, v69, v70, v71, v72);
    v73 = a17;
    v74 = a18;
    v31[21] = a18;
    swift_bridgeObjectRelease();
    v75 = sub_245757030();
    v31[22] = v75;
    *(_QWORD *)(v75 + 16) = v65;
    *(_QWORD *)(v75 + 24) = v64;
    v76 = (_QWORD *)swift_task_alloc();
    v31[23] = v76;
    v76[2] = v65;
    v76[3] = v73;
    v76[4] = v74;
    v77 = (_QWORD *)swift_task_alloc();
    v31[24] = v77;
    type metadata accessor for SummarizationXPCResult(0);
    *v77 = v31;
    v77[1] = sub_2457992A8;
    sub_2457A05BC();
    return sub_2457BB6BC();
  }
}

uint64_t sub_2457992A8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_245777368(&v4);
  *(_QWORD *)(v2 + 200) = v0;
  swift_task_dealloc();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    sub_245756FCC();
    sub_245757044();
  }
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_245799314()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  os_log_type_t v4;
  void *v5;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v13;
  uint64_t v14;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(id *)(v0 + 136);
  v3 = (void *)sub_2457BB068();
  v4 = sub_2457BB368();
  if (sub_2457A059C(v4))
  {
    v5 = *(void **)(v0 + 136);
    v6 = (_DWORD *)sub_2457513BC();
    v13 = sub_2457513BC();
    *v6 = 136315138;
    sub_245789E80(&v14);
    v7 = v14;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v0 + 96) = sub_2457A06A4(v7, v8, &v13);
    sub_2457BB3BC();
    swift_bridgeObjectRelease();

    sub_2457A04AC(&dword_245746000, v9, v10, "SummarizationClient received response for request with requestIdentifier=%s");
    sub_245757020();
    sub_24575105C();
  }
  v11 = *(void **)(v0 + 136);

  swift_task_dealloc();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_24579946C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_QWORD *a28,uint64_t a29,uint64_t a30)
{
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  id v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  void *v47;
  void *v48;
  uint64_t (*v49)(_QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  sub_2457A0734();
  a29 = v31;
  a30 = v32;
  a28 = v30;
  v33 = (void *)v30[17];
  swift_bridgeObjectRelease();
  sub_245757044();
  swift_task_dealloc();
  v34 = v33;
  sub_2457A0950();
  v35 = v34;
  sub_2457A0950();
  v36 = (void *)sub_2457BB068();
  LOBYTE(v33) = sub_2457BB350();
  if (sub_245757038((os_log_type_t)v33))
  {
    v37 = v30[19];
    v38 = (void *)v30[17];
    v39 = sub_2457513BC();
    sub_2457513BC();
    a14 = sub_2457513BC();
    *(_DWORD *)v39 = 136315906;
    sub_245789E80(&a15);
    v41 = a15;
    v40 = a16;
    swift_bridgeObjectRelease();
    v30[9] = sub_245773478(v41, v40, &a14);
    sub_2457BB3BC();
    swift_bridgeObjectRelease();

    *(_WORD *)(v39 + 12) = 2080;
    sub_245789E80(&a15);
    v42 = a17;
    v43 = a18;
    swift_bridgeObjectRelease();
    v30[8] = sub_245773478(v42, v43, &a14);
    sub_2457BB3BC();
    sub_2457512F4();

    *(_WORD *)(v39 + 22) = 2080;
    sub_245756E1C();
    sub_24579FB34();
    SummarizationXPCRequest.Request.category.getter();
    sub_24579FB64(v37);
    v44 = sub_2457A03D8();
    return ((uint64_t (*)(uint64_t))((char *)&loc_245799640 + 4 * byte_2457C42CA[v45]))(v44);
  }
  else
  {
    v47 = (void *)v30[25];
    v48 = (void *)v30[17];

    swift_willThrow();
    sub_245756FCC();
    sub_2457A05BC();
    return v49(v49, v50, v51, v52, v53, v54, v55, v56, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22);
  }
}

uint64_t SummarizationClient.summarize(_:options:requestIdentifier:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 48) = a6;
  *(_QWORD *)(v7 + 56) = v6;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a5;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 64) = sub_2457A0084();
  *(_QWORD *)(v7 + 72) = sub_245756DC0();
  *(_BYTE *)(v7 + 132) = *(_BYTE *)a4;
  *(_OWORD *)(v7 + 80) = *(_OWORD *)(a4 + 8);
  *(_DWORD *)(v7 + 128) = *(_DWORD *)(a4 + 24);
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_245799838()
{
  uint64_t v0;
  char v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v14;

  sub_2457A0134();
  v1 = *(_BYTE *)(v0 + 132);
  v2 = *(_DWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 80);
  v3 = *(_QWORD *)(v0 + 88);
  v5 = *(_QWORD *)(v0 + 72);
  v6 = *(_QWORD *)(v0 + 32);
  v14 = *(_QWORD *)(v0 + 24);
  sub_2457774AC();
  sub_245748B24();
  sub_2457A0428();
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457A04C0();
  sub_2457512F4();
  *(_QWORD *)v5 = v14;
  *(_QWORD *)(v5 + 8) = v6;
  *(_BYTE *)(v5 + 16) = v1;
  *(_QWORD *)(v5 + 24) = v4;
  *(_QWORD *)(v5 + 32) = v3;
  *(_DWORD *)(v5 + 40) = v2;
  swift_storeEnumTagMultiPayload();
  sub_2457A06EC();
  v7 = objc_allocWithZone((Class)sub_24578B780());
  sub_2457A0328();
  v8 = sub_245756E64();
  *(_QWORD *)(v0 + 96) = sub_2457A0060(v8, v9, v10);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v11;
  *v11 = v0;
  v11[1] = sub_245799944;
  v12 = sub_2457A0100();
  return sub_24579FF28(v12);
}

uint64_t sub_245799944()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2457A01A4();
  if (!v1)
    *(_QWORD *)(v2 + 120) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_245799988()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 120);
  v2 = *(void **)(v0 + 96);
  sub_245791E8C(*(void **)(v0 + 16));

  sub_2457A069C();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2457999D8()
{
  uint64_t v0;

  sub_2457A069C();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

void SummarizationClient.partialSummaries(for:options:requestIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  id v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  id v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34;
  void *v35;
  os_log_type_t v36;
  _DWORD *v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50[2];
  int v51;
  uint64_t v52[2];
  int v53;
  __int128 v54[2];

  sub_245759004();
  v49 = v0;
  v6 = v5;
  v46 = v7;
  v47 = v8;
  v10 = v9;
  v45 = v11;
  sub_2457A0084();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v12);
  sub_245777434();
  v13 = sub_245748A50(&qword_257499E38);
  sub_2457A068C();
  MEMORY[0x24BDAC7A8](v14);
  sub_24575136C();
  v48 = sub_245748A50(&qword_257498C00);
  v42 = *(_QWORD *)(v48 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v15);
  sub_245748AD0();
  v16 = *v10;
  v17 = *((_QWORD *)v10 + 2);
  v44 = *((_QWORD *)v10 + 1);
  v43 = *((_DWORD *)v10 + 6);
  sub_245748A50(&qword_257499B68);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v2, *MEMORY[0x24BEE6CA0], v13);
  sub_2457BB2B4();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v13);
  sub_2457776D4();
  sub_245748B24();
  sub_2457A0874();
  sub_2457A00DC();
  *(_QWORD *)&v54[0] = v18;
  *((_QWORD *)&v54[0] + 1) = v19;
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457BB1D0();
  sub_245790398();
  v20 = v54[0];
  *(_QWORD *)v1 = v45;
  *(_QWORD *)(v1 + 8) = v46;
  *(_BYTE *)(v1 + 16) = v16;
  *(_QWORD *)(v1 + 24) = v44;
  *(_QWORD *)(v1 + 32) = v17;
  *(_DWORD *)(v1 + 40) = v43;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v54[0] = v47;
  *((_QWORD *)&v54[0] + 1) = v6;
  v54[1] = v20;
  v52[0] = 0;
  v52[1] = 0;
  v53 = 0;
  v50[0] = v44;
  v50[1] = v17;
  v51 = v43;
  v21 = objc_allocWithZone((Class)sub_24578B780());
  sub_2457A0328();
  sub_2457A02E0();
  v22 = SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v1, v54, v52, v50);
  v23 = *(_QWORD *)(v0 + 24);
  sub_24579A10C(v4, v47, v6);
  v24 = sub_245776B5C();
  swift_weakInit();
  v25 = (_QWORD *)sub_245776B5C();
  v25[2] = v23;
  v25[3] = v47;
  v25[4] = v6;
  v25[5] = v24;
  sub_2457776D4();
  swift_retain();
  sub_2457BB2C0();
  if (qword_257497E38 != -1)
    swift_once();
  v26 = sub_245751504();
  sub_24574E0F8(v26, (uint64_t)qword_257498E30);
  v27 = v22;
  v28 = sub_2457A0840();
  v29 = sub_2457BB368();
  if (sub_2457A0994(v28))
  {
    v30 = sub_2457513BC();
    v52[0] = sub_2457513BC();
    *(_DWORD *)v30 = 136315394;
    sub_2457A02B0();
    sub_2457A082C();
    v31 = sub_2457A015C();
    sub_2457A016C(v31);

    sub_2457512F4();
    *(_WORD *)(v30 + 12) = 2080;
    sub_2457A02B0();
    sub_2457A07F4();
    v32 = sub_2457A015C();
    sub_2457A016C(v32);

    swift_bridgeObjectRelease();
    sub_245776F24(&dword_245746000, v28, v29, "SummarizationClient sending streaming request with requestIdentifier=%s, useCaseIdentifier=%s", (uint8_t *)v30);
    sub_2457A047C();
    sub_24575105C();
  }

  if (*(_QWORD *)(v49 + 16))
  {
    MEMORY[0x24BDAC7A8](v33);
    sub_245748AF8();
    sub_2457BAE64();
    swift_release();
    v34 = v27;
    v35 = (void *)sub_2457A0840();
    v36 = sub_2457BB368();
    if (sub_2457A059C(v36))
    {
      v37 = (_DWORD *)sub_2457513BC();
      v52[0] = sub_2457513BC();
      *v37 = 136315138;
      sub_245789E80(v54);
      v38 = v54[0];
      sub_2457A082C();
      v39 = sub_245773478(v38, *((uint64_t *)&v38 + 1), v52);
      sub_2457A0800(v39);
      sub_2457BB3BC();

      swift_bridgeObjectRelease();
      sub_2457A04AC(&dword_245746000, v40, v41, "SummarizationClient streaming request with requestIdentifier=%s was successful");
      sub_245757020();
      sub_24575105C();
    }

    (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v4, v48);
    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

void sub_24579A10C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  os_unfair_lock_s *v7;
  uint64_t *v8;
  os_unfair_lock_s *v9;

  v7 = *(os_unfair_lock_s **)(v3 + 16);
  v8 = (uint64_t *)&v7[4];
  v9 = v7 + 6;
  os_unfair_lock_lock(v7 + 6);
  sub_24579D458(v8, a2, a3, a1);
  os_unfair_lock_unlock(v9);
}

uint64_t sub_24579A178(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;

  sub_24579A1F4();
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_24579A250(a3, a4);
    return swift_release();
  }
  return result;
}

void sub_24579A1F4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 24);
  os_unfair_lock_lock(v1);
  sub_24579D80C();
  os_unfair_lock_unlock(v1);
}

void sub_24579A250(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v5 = sub_245748A50(&qword_257498400);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_2457BB2A8();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v7, 1, 1, v8);
  v9 = (_QWORD *)swift_allocObject();
  v9[2] = 0;
  v9[3] = 0;
  v9[4] = v2;
  v9[5] = a1;
  v9[6] = a2;
  swift_retain();
  swift_bridgeObjectRetain();
  sub_24579429C((uint64_t)v7, (uint64_t)&unk_25749A160, (uint64_t)v9);
  swift_release();
  if (qword_257497E38 != -1)
    swift_once();
  v10 = sub_2457BB08C();
  sub_24574E0F8(v10, (uint64_t)qword_257498E30);
  swift_bridgeObjectRetain_n();
  v11 = sub_2457BB068();
  v12 = sub_2457BB368();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    v14 = swift_slowAlloc();
    v16 = v14;
    *(_DWORD *)v13 = 136315138;
    swift_bridgeObjectRetain();
    v15 = sub_245773478(a1, a2, &v16);
    sub_2457BB3BC();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_245746000, v11, v12, "Summarization request with identifier %s was cancelled by client.", v13, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x24953B318](v14, -1, -1);
    MEMORY[0x24953B318](v13, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void SummarizationClient.didProduceTextAssistantPartialSummary(_:forRequestIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v20[19];
  uint64_t v21[20];

  sub_245759004();
  v2 = v1;
  v4 = v3;
  v5 = sub_245748A50(&qword_257499E40);
  v16 = *(_QWORD *)(v5 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_245750F48();
  v17 = v7;
  sub_245748A50(&qword_257498C08);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v8);
  sub_245777434();
  v9 = sub_245748A50(&qword_257498C00);
  v19 = *(_QWORD *)(v9 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v10);
  sub_245750F48();
  v18 = v11;
  if (qword_257497E38 != -1)
    swift_once();
  v12 = sub_245751504();
  v13 = sub_24574E0F8(v12, (uint64_t)qword_257498E30);
  sub_2457A0328();
  sub_2457BB068();
  v14 = sub_2457A0964();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = sub_2457513BC();
    v21[0] = sub_2457513BC();
    *(_DWORD *)v15 = 136315394;
    sub_245776FF0(62, 0x80000002457CA6B0, v21);
    sub_2457BB3BC();
    *(_WORD *)(v15 + 12) = 2080;
    sub_2457A0330();
    v20[0] = sub_245773478(v4, v2, v21);
    sub_2457BB3BC();
    swift_bridgeObjectRelease_n();
    sub_245776F24(&dword_245746000, v13, v14, "%s called for requestIdentifier: %s", (uint8_t *)v15);
    sub_2457A047C();
    sub_24575105C();
  }

  sub_2457A08B8();
  sub_24579A7D8(v4, v2, 0xD00000000000003ELL, 0x80000002457CA6B0, v0);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v0, 1, v9) == 1)
  {
    sub_24579FA80(v0, &qword_257498C08);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 32))(v18, v0, v9);
    sub_245791F2C(v21);
    memcpy(v20, v21, sizeof(v20));
    sub_2457BB2CC();
    (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v17, v5);
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v9);
  }
  sub_245758FB4();
}

uint64_t sub_24579A7D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v10 = sub_245748A50(&qword_257498C08);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24579B138((uint64_t)v12);
  v13 = sub_245748A50(&qword_257498C00);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_24579FA80((uint64_t)v12, &qword_257498C08);
    if (qword_257497E38 != -1)
      swift_once();
    v14 = sub_2457BB08C();
    sub_24574E0F8(v14, (uint64_t)qword_257498E30);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain_n();
    v15 = sub_2457BB068();
    v16 = sub_2457BB350();
    if (os_log_type_enabled(v15, v16))
    {
      v17 = swift_slowAlloc();
      v22 = swift_slowAlloc();
      v25 = v22;
      *(_DWORD *)v17 = 136315394;
      swift_bridgeObjectRetain();
      v18 = sub_245773478(a3, a4, &v25);
      v23 = a5;
      v24 = v18;
      sub_2457BB3BC();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain();
      v24 = sub_245773478(a1, a2, &v25);
      a5 = v23;
      sub_2457BB3BC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245746000, v15, v16, "%s: no continuation found for: %s", (uint8_t *)v17, 0x16u);
      v19 = v22;
      swift_arrayDestroy();
      MEMORY[0x24953B318](v19, -1, -1);
      MEMORY[0x24953B318](v17, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
    }
    v20 = 1;
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(a5, v12, v13);
    v20 = 0;
  }
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a5, v20, 1, v13);
}

void SummarizationClient.didEncounterTextAssistantStreamingError(_:forRequestIdentifier:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  sub_245759004();
  v4 = v3;
  v6 = v5;
  sub_245748A50(&qword_257498C08);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v7);
  sub_24577741C();
  v8 = sub_245748A50(&qword_257498C00);
  sub_245767C1C();
  MEMORY[0x24BDAC7A8](v9);
  sub_24577744C();
  if (qword_257497E38 != -1)
    swift_once();
  v10 = sub_245751504();
  v11 = sub_24574E0F8(v10, (uint64_t)qword_257498E30);
  sub_2457A0328();
  sub_2457BB068();
  v12 = sub_2457A0964();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = sub_2457513BC();
    v19 = sub_2457513BC();
    *(_DWORD *)v13 = 136315394;
    sub_245776FF0(64, 0x80000002457CA6F0, &v19);
    sub_2457A0384();
    *(_WORD *)(v13 + 12) = 2080;
    sub_245777474();
    sub_2457A06A4(v4, v14, &v19);
    sub_2457BB3BC();
    sub_2457A08EC();
    sub_245776F24(&dword_245746000, v11, v12, "%s called for requestIdentifier: %s", (uint8_t *)v13);
    sub_2457A047C();
    sub_24575105C();
  }

  sub_2457A08B8();
  v15 = sub_245777400();
  sub_2457A0958(v15, v16, 64, v17, v18);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v1, 1, v8) == 1)
  {
    sub_24579FA80(v1, &qword_257498C08);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 32))(v2, v1, v8);
    v19 = v6;
    sub_2457A0950();
    sub_2457BB2D8();
    sub_2457A06DC();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v2, v8);
  }
  sub_245758FB4();
}

Swift::Void __swiftcall SummarizationClient.didFinishTextAssistantStreaming(forRequestIdentifier:)(Swift::String forRequestIdentifier)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_245759004();
  v4 = v3;
  sub_245748A50(&qword_257498C08);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v5);
  sub_2457535E8();
  v6 = sub_245748A50(&qword_257498C00);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  sub_24577741C();
  if (qword_257497E38 != -1)
    swift_once();
  v8 = sub_245751504();
  v9 = sub_24574E0F8(v8, (uint64_t)qword_257498E30);
  sub_2457A0328();
  sub_2457BB068();
  v10 = sub_2457A0964();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = sub_2457513BC();
    v17 = sub_2457513BC();
    *(_DWORD *)v11 = 136315394;
    sub_245776FF0(54, 0x80000002457CA740, &v17);
    sub_2457A0384();
    *(_WORD *)(v11 + 12) = 2080;
    sub_245777474();
    sub_2457A06A4(v4, v12, &v17);
    sub_2457BB3BC();
    sub_2457A08EC();
    sub_245776F24(&dword_245746000, v9, v10, "%s called for requestIdentifier: %s", (uint8_t *)v11);
    sub_2457A047C();
    sub_24575105C();
  }

  sub_2457A08B8();
  v13 = sub_245777400();
  sub_2457A0958(v13, v14, 54, v15, v16);
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v1, 1, v6) == 1)
  {
    sub_24579FA80(v1, &qword_257498C08);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(v2, v1, v6);
    v17 = 0;
    sub_2457BB2D8();
    sub_2457A06DC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v2, v6);
  }
  sub_245758FB4();
}

uint64_t sub_24579B0DC()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v3;

  v1 = (os_unfair_lock_s *)(*(_QWORD *)(v0 + 16) + 24);
  os_unfair_lock_lock(v1);
  sub_24579D9B4(&v3);
  os_unfair_lock_unlock(v1);
  return v3;
}

void sub_24579B138(uint64_t a1@<X8>)
{
  uint64_t v1;
  os_unfair_lock_s *v3;
  uint64_t *v4;
  os_unfair_lock_s *v5;

  v3 = *(os_unfair_lock_s **)(v1 + 16);
  v4 = (uint64_t *)&v3[4];
  v5 = v3 + 6;
  os_unfair_lock_lock(v3 + 6);
  sub_24579D8C0(v4, a1);
  os_unfair_lock_unlock(v5);
}

uint64_t SummarizationClient.summarize(_:options:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  *(_QWORD *)(v3 + 352) = a1;
  *(_QWORD *)(v3 + 360) = v2;
  v5 = sub_245776CA0();
  *(_QWORD *)(v3 + 368) = v5;
  *(_QWORD *)(v3 + 376) = *(_QWORD *)(v5 - 8);
  *(_QWORD *)(v3 + 384) = sub_245776B4C();
  *(_BYTE *)(v3 + 440) = *(_BYTE *)a2;
  *(_OWORD *)(v3 + 392) = *(_OWORD *)(a2 + 8);
  *(_DWORD *)(v3 + 348) = *(_DWORD *)(a2 + 24);
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24579B208()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v16;

  v1 = *(_DWORD *)(v0 + 348);
  v2 = *(_QWORD *)(v0 + 392);
  v3 = *(_QWORD *)(v0 + 400);
  v4 = *(_BYTE *)(v0 + 440);
  v6 = *(_QWORD *)(v0 + 376);
  v5 = *(_QWORD *)(v0 + 384);
  v16 = *(_QWORD *)(v0 + 368);
  v7 = objc_msgSend(*(id *)(v0 + 352), sel_string);
  v8 = sub_2457BB1AC();
  v10 = v9;

  *(_QWORD *)(v0 + 408) = v10;
  *(_BYTE *)(v0 + 320) = v4;
  *(_QWORD *)(v0 + 328) = v2;
  *(_QWORD *)(v0 + 336) = v3;
  *(_DWORD *)(v0 + 344) = v1;
  sub_2457A0898();
  v11 = sub_2457BAAA4();
  v13 = v12;
  *(_QWORD *)(v0 + 416) = v12;
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v16);
  v14 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 424) = v14;
  *v14 = v0;
  v14[1] = sub_24579B30C;
  return SummarizationClient.summarize(_:options:requestIdentifier:)(v0 + 16, v8, v10, v0 + 320, v11, v13);
}

uint64_t sub_24579B30C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_245777368(&v4);
  *(_QWORD *)(v2 + 432) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  sub_245776CB8();
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24579B378()
{
  uint64_t (**v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  memcpy(v0 + 21, v0 + 2, 0x98uLL);
  sub_24579DE34();
  sub_2457774AC();
  sub_24579B438();
  v2 = v1;
  sub_245790F44((uint64_t)(v0 + 21));
  swift_task_dealloc();
  return v0[1](v2);
}

uint64_t sub_24579B404()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void sub_24579B438()
{
  id v0;
  void *v1;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  sub_245777400();
  v1 = (void *)sub_2457BB1A0();
  sub_245751474();
  objc_msgSend(v0, sel_initWithString_, v1);

  sub_245749FB4();
}

uint64_t SummarizationClient.summarize(_:options:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  v4[3] = a2;
  v4[4] = v3;
  v4[2] = a1;
  v4[5] = sub_2457A0084();
  v6 = sub_245756DC0();
  v7 = *a3;
  v4[6] = v6;
  v4[7] = v7;
  sub_2457A0288();
  sub_245756E10();
  return sub_245756E04();
}

{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  v4[3] = a2;
  v4[4] = v3;
  v4[2] = a1;
  v4[5] = sub_2457A0084();
  v6 = sub_245756DC0();
  v7 = *a3;
  v4[6] = v6;
  v4[7] = v7;
  sub_2457A0224();
  sub_245756E10();
  return sub_245756E04();
}

{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;

  v4[3] = a2;
  v4[4] = v3;
  v4[2] = a1;
  v4[5] = sub_2457A0084();
  v6 = sub_245756DC0();
  v7 = *a3;
  v4[6] = v6;
  v4[7] = v7;
  sub_2457A0224();
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24579B4E4()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  char v16;
  uint64_t v17;

  sub_2457A0134();
  v1 = *(_DWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 88);
  v16 = *(_BYTE *)(v0 + 140);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 48);
  v17 = *(_QWORD *)(v0 + 96);
  sub_2457774AC();
  sub_245748B24();
  sub_2457A0428();
  v8 = v7 + *(int *)(sub_245748A50(&qword_257499780) + 48);
  sub_2457A04E8();
  *(_QWORD *)v8 = v6;
  *(_QWORD *)(v8 + 8) = v5;
  *(_QWORD *)(v8 + 16) = v4;
  *(_BYTE *)(v8 + 24) = v16;
  *(_QWORD *)(v8 + 32) = v3;
  *(_QWORD *)(v8 + 40) = v2;
  *(_DWORD *)(v8 + 48) = v1;
  *(_QWORD *)(v8 + 56) = v17;
  swift_storeEnumTagMultiPayload();
  v9 = (objc_class *)sub_24578B780();
  sub_2457A01F4(v9);
  sub_2457A0328();
  sub_245756E64();
  sub_2457774AC();
  v10 = sub_2457A02E0();
  *(_QWORD *)(v0 + 104) = sub_2457A0060(v10, v11, v12);
  v13 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v13;
  *v13 = v0;
  v13[1] = sub_24579B608;
  v14 = sub_2457A0100();
  return sub_24579FF28(v14);
}

uint64_t sub_24579B608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2457A0180();
  if (!v1)
    *(_QWORD *)(v2 + 128) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579B64C()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 128);
  v2 = *(void **)(v0 + 104);
  sub_2457A0238();

  sub_2457A05D8();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24579B698()
{
  uint64_t v0;

  sub_2457A05D8();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

#error "24579B7B0: call analysis failed (funcsize=47)"

uint64_t sub_24579B7E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24579FFE8();
  if (!v1)
    *(_QWORD *)(v2 + 112) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579B828()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 112);
  v2 = *(void **)(v0 + 88);
  sub_2457A0238();

  sub_2457A05D8();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24579B874()
{
  uint64_t v0;

  sub_2457A08D8();
  sub_2457A05D8();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

#error "24579B988: call analysis failed (funcsize=47)"

uint64_t sub_24579B9BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24579FFE8();
  if (!v1)
    *(_QWORD *)(v2 + 112) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t SummarizationClient.summarize(_:options:)(uint64_t a1, uint64_t *a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = v3;
  v4[4] = sub_2457A0084();
  v7 = sub_245756DC0();
  v8 = *a2;
  v4[5] = v7;
  v4[6] = v8;
  v4[7] = *a3;
  sub_2457A0288();
  sub_245756E10();
  return sub_245756D80();
}

{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = v3;
  v4[4] = sub_2457A0084();
  v7 = sub_245756DC0();
  v8 = *a2;
  v4[5] = v7;
  v4[6] = v8;
  v4[7] = *a3;
  sub_2457A0224();
  sub_245756E10();
  return sub_245756D80();
}

{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;

  v4[2] = a1;
  v4[3] = v3;
  v4[4] = sub_2457A0084();
  v7 = sub_245756DC0();
  v8 = *a2;
  v4[5] = v7;
  v4[6] = v8;
  v4[7] = *a3;
  sub_2457A0224();
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579BA58()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  __int128 v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19[2];
  int v20;
  uint64_t v21[2];
  int v22;

  v1 = *(_QWORD *)(v0 + 88);
  v2 = *(_DWORD *)(v0 + 136);
  v4 = *(_QWORD *)(v0 + 72);
  v3 = *(_QWORD *)(v0 + 80);
  v14 = *(_BYTE *)(v0 + 140);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  v8 = *(_QWORD *)(v0 + 48);
  v15 = *(_QWORD *)(v0 + 96);
  sub_245756E64();
  sub_245748B24();
  swift_bridgeObjectRelease();
  *(_QWORD *)v7 = v8;
  *(_QWORD *)(v7 + 8) = v6;
  *(_QWORD *)(v7 + 16) = v5;
  *(_QWORD *)(v7 + 24) = v4;
  *(_BYTE *)(v7 + 32) = v14;
  *(_QWORD *)(v7 + 40) = v3;
  *(_QWORD *)(v7 + 48) = v1;
  *(_DWORD *)(v7 + 56) = v2;
  *(_QWORD *)(v7 + 64) = v15;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v16 = v6;
  *((_QWORD *)&v16 + 1) = v5;
  v17 = 0xD000000000000028;
  v18 = 0x80000002457CA810;
  v19[0] = v3;
  v19[1] = v1;
  v20 = v2;
  v21[0] = 0;
  v21[1] = 0;
  v22 = 0;
  v9 = objc_allocWithZone((Class)sub_24578B780());
  sub_2457A0328();
  sub_2457774AC();
  swift_bridgeObjectRetain();
  sub_245756E64();
  v10 = sub_2457A02E0();
  *(_QWORD *)(v0 + 104) = sub_2457A009C(v10, &v16, v19, v21);
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 112) = v11;
  *v11 = v0;
  v11[1] = sub_24579BBA0;
  v12 = sub_2457A0100();
  return sub_245798ED0(v12);
}

uint64_t sub_24579BBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2457A0180();
  if (!v1)
    *(_QWORD *)(v2 + 128) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579BBE4()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 128);
  v2 = *(void **)(v0 + 104);
  sub_2457A0238();

  sub_2457A071C();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24579BC30()
{
  uint64_t v0;

  sub_2457A071C();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

#error "24579BD34: call analysis failed (funcsize=41)"

uint64_t sub_24579BD68()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24579FFE8();
  if (!v1)
    *(_QWORD *)(v2 + 112) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579BDAC()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 112);
  v2 = *(void **)(v0 + 88);
  sub_2457A0238();

  sub_2457A071C();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24579BDF8()
{
  uint64_t v0;

  sub_2457A08D8();
  sub_2457A071C();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

#error "24579BEF8: call analysis failed (funcsize=41)"

uint64_t sub_24579BF2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_24579FFE8();
  if (!v1)
    *(_QWORD *)(v2 + 112) = v0;
  sub_245756E10();
  return sub_245756D80();
}

Sage::SummarizationClient::VisualPromptUseCase_optional __swiftcall SummarizationClient.VisualPromptUseCase.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  Sage::SummarizationClient::VisualPromptUseCase_optional result;

  sub_24579BF7C(v1);
  return result;
}

void sub_24579BF7C(char *a1@<X8>)
{
  unint64_t v2;
  char v3;

  v2 = sub_2457BB524();
  sub_245751474();
  v3 = 4;
  if (v2 < 4)
    v3 = v2;
  *a1 = v3;
  sub_245749FB4();
}

uint64_t SummarizationClient.VisualPromptUseCase.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_24579BFF4 + 4 * byte_2457C42D0[*v0]))(0x696A6F6D6E6567, 0xE700000000000000);
}

unint64_t sub_24579BFF8()
{
  return 0xD000000000000014;
}

uint64_t sub_24579C014()
{
  return 0x6E776F6E6B6E75;
}

void sub_24579C028(char *a1)
{
  sub_2457B5600(*a1);
}

void sub_24579C034()
{
  sub_2457A4050();
}

void sub_24579C03C(uint64_t a1)
{
  char *v1;

  sub_2457A44A8(a1, *v1);
}

void sub_24579C044()
{
  sub_2457A45F4();
}

Sage::SummarizationClient::VisualPromptUseCase_optional sub_24579C04C(Swift::String *a1)
{
  return SummarizationClient.VisualPromptUseCase.init(rawValue:)(*a1);
}

void sub_24579C058(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = SummarizationClient.VisualPromptUseCase.rawValue.getter();
  a1[1] = v2;
  sub_245748A90();
}

uint64_t sub_24579C078()
{
  sub_24579F924();
  return sub_2457BB200();
}

uint64_t sub_24579C0D4()
{
  sub_24579F924();
  return sub_2457BB1E8();
}

void SummarizationClient.VisualPromptOptions.useCase.getter(_BYTE *a1@<X8>)
{
  sub_24578081C(a1);
}

uint64_t (*SummarizationClient.VisualPromptOptions.useCase.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::SummarizationClient::VisualPromptOptions __swiftcall SummarizationClient.VisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  _BYTE *v1;
  Sage::SummarizationClient::VisualPromptOptions result;

  sub_24578081C(v1);
  return result;
}

uint64_t sub_24579C144()
{
  sub_24579DE70();
  return sub_2457BB788();
}

uint64_t sub_24579C16C()
{
  sub_24579DE70();
  return sub_2457BB794();
}

void SummarizationClient.VisualPromptOptions.encode(to:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  sub_245758054();
  v1 = v0;
  v2 = sub_245748A50(&qword_257499E88);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  sub_245748AD0();
  sub_245749280(v1, v1[3]);
  sub_24579DE70();
  sub_2457807E8();
  sub_24577E3E4();
  sub_2457BB68C();
  sub_245780848(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  sub_245751240();
}

void SummarizationClient.VisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;

  sub_245758054();
  v15 = v14;
  v17 = v16;
  v18 = sub_245748A50(&qword_257499E98);
  v19 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  sub_245748AD0();
  sub_245749280(v15, v15[3]);
  sub_24579DE70();
  sub_245781BD0();
  if (!v13)
  {
    sub_24577E420();
    sub_2457BB5CC();
    sub_245780848(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8));
    *v17 = a13;
  }
  sub_245748AB0();
  sub_2457A07E8();
  sub_245751240();
}

void sub_24579C32C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  SummarizationClient.VisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_24579C340()
{
  SummarizationClient.VisualPromptOptions.encode(to:)();
}

uint64_t SummarizationClient.summarize(requestIdentifier:text:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 56) = v6;
  *(_QWORD *)(v7 + 32) = a3;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 16) = a1;
  *(_QWORD *)(v7 + 24) = a2;
  *(_QWORD *)(v7 + 64) = sub_2457A0084();
  *(_QWORD *)(v7 + 72) = sub_245756DC0();
  *(_BYTE *)(v7 + 112) = *a6;
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24579C3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, __int128 a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  objc_class *v40;
  id v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;

  sub_2457A0734();
  a27 = v29;
  a28 = v30;
  a26 = v28;
  v31 = *(_BYTE *)(v28 + 112);
  v32 = *(_QWORD *)(v28 + 72);
  v34 = *(_QWORD *)(v28 + 40);
  v33 = *(_QWORD *)(v28 + 48);
  v36 = *(_QWORD *)(v28 + 24);
  v35 = *(_QWORD *)(v28 + 32);
  *(_QWORD *)&a10 = 0;
  *((_QWORD *)&a10 + 1) = 0xE000000000000000;
  sub_245756E64();
  sub_245748B24();
  swift_bridgeObjectRelease();
  sub_2457A00DC();
  *(_QWORD *)&a10 = v37;
  *((_QWORD *)&a10 + 1) = v38;
  LOBYTE(a15) = v31 + 9;
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457BB1D0();
  sub_245751420();
  v39 = a10;
  *(_QWORD *)v32 = v34;
  *(_QWORD *)(v32 + 8) = v33;
  *(_BYTE *)(v32 + 16) = v31;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&a10 = v36;
  *((_QWORD *)&a10 + 1) = v35;
  a11 = v39;
  a12 = 0;
  a13 = 0;
  a14 = 0;
  v40 = (objc_class *)sub_24578B780();
  a15 = 0;
  a16 = 0;
  a17 = 0;
  v41 = objc_allocWithZone(v40);
  v42 = sub_245756F54();
  *(_QWORD *)(v28 + 80) = sub_2457A009C(v42, &a10, &a12, &a15);
  v43 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v28 + 88) = v43;
  *v43 = v28;
  v43[1] = sub_24579C4A4;
  sub_2457A0100();
  sub_2457A05BC();
  return sub_245798ED0(v44);
}

uint64_t sub_24579C4A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  sub_245777368(&v6);
  *(_QWORD *)(v4 + 96) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 104) = a1;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579C504()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 104);
  v2 = *(void **)(v0 + 80);
  sub_2457A0238();

  sub_2457A069C();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24579C550()
{
  uint64_t v0;

  sub_2457A069C();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SummarizationClient.summarize(requestIdentifier:message:options:)(uint64_t a1, uint64_t a2, uint64_t a3, _OWORD *a4, _BYTE *a5)
{
  uint64_t v5;
  uint64_t v6;
  __int128 v9;

  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = v5;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  *(_QWORD *)(v6 + 48) = sub_2457A0084();
  *(_QWORD *)(v6 + 56) = sub_245756DC0();
  v9 = a4[1];
  *(_OWORD *)(v6 + 64) = *a4;
  *(_OWORD *)(v6 + 80) = v9;
  *(_BYTE *)(v6 + 128) = *a5;
  *(_BYTE *)(v6 + 129) = a5[1];
  *(_BYTE *)(v6 + 130) = a5[2];
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579C5EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12, __int128 a13, uint64_t a14, uint64_t a15, int a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  objc_class *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v49;
  char v50;
  char v51;

  sub_2457A0134();
  a30 = v32;
  a31 = v33;
  a29 = v31;
  v34 = *(_BYTE *)(v31 + 128);
  v50 = *(_BYTE *)(v31 + 129);
  v51 = *(_BYTE *)(v31 + 130);
  v36 = *(_QWORD *)(v31 + 80);
  v35 = *(_QWORD *)(v31 + 88);
  v38 = *(_QWORD *)(v31 + 64);
  v37 = *(_QWORD *)(v31 + 72);
  v39 = *(_QWORD *)(v31 + 56);
  v40 = *(_QWORD *)(v31 + 32);
  v49 = *(_QWORD *)(v31 + 24);
  sub_2457774AC();
  sub_245748B24();
  sub_2457A0428();
  strcpy((char *)&a12, "summarization.");
  HIBYTE(a12) = -18;
  a18 = v34 + 9;
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457A04C0();
  sub_2457512F4();
  v41 = a12;
  *(_QWORD *)v39 = v38;
  *(_QWORD *)(v39 + 8) = v37;
  *(_QWORD *)(v39 + 16) = v36;
  *(_QWORD *)(v39 + 24) = v35;
  *(_BYTE *)(v39 + 32) = v34;
  *(_BYTE *)(v39 + 33) = v50;
  *(_BYTE *)(v39 + 34) = v51;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&a12 = v49;
  *((_QWORD *)&a12 + 1) = v40;
  a13 = v41;
  a14 = 0;
  a15 = 0;
  a16 = 0;
  v42 = (objc_class *)sub_24578B780();
  sub_2457A01F4(v42);
  sub_245756E64();
  v43 = sub_245756F54();
  *(_QWORD *)(v31 + 96) = sub_2457A0060(v43, v44, v45);
  v46 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v31 + 104) = v46;
  *v46 = v31;
  v46[1] = sub_24579C70C;
  v47 = sub_2457A0100();
  return sub_24579FF28(v47);
}

uint64_t sub_24579C70C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2457A01A4();
  if (!v1)
    *(_QWORD *)(v2 + 120) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579C750()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 120);
  v2 = *(void **)(v0 + 96);
  sub_2457A0238();

  sub_2457A0684();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24579C79C()
{
  uint64_t v0;

  sub_2457A0684();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SummarizationClient.summarize(requestIdentifier:message:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = sub_2457A0084();
  v6 = sub_245756DC0();
  sub_2457A0448(v6);
  sub_245756E10();
  return sub_245756E04();
}

{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  v5[7] = sub_2457A0084();
  v6 = sub_245756DC0();
  sub_2457A0448(v6);
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_24579C814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12, __int128 a13, uint64_t a14, uint64_t a15, int a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  objc_class *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v45;

  sub_2457A0134();
  a30 = v32;
  a31 = v33;
  a29 = v31;
  v34 = *(_BYTE *)(v31 + 104) + 9;
  v35 = *(_QWORD *)(v31 + 32);
  v45 = *(_QWORD *)(v31 + 24);
  sub_245756F54();
  sub_245748B24();
  sub_2457A0428();
  strcpy((char *)&a12, "summarization.");
  HIBYTE(a12) = -18;
  a18 = v34;
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457A0848();
  sub_245751420();
  v36 = a12;
  sub_245748A50(&qword_257499670);
  sub_2457A04E8();
  sub_2457A0630();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&a12 = v45;
  *((_QWORD *)&a12 + 1) = v35;
  a13 = v36;
  a14 = 0;
  a15 = 0;
  a16 = 0;
  v37 = (objc_class *)sub_24578B780();
  v38 = sub_2457A01F4(v37);
  v41 = sub_2457A0060((uint64_t)v38, v39, v40);
  sub_2457A06AC((uint64_t)v41);
  v42 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v31 + 80) = v42;
  *v42 = v31;
  v42[1] = sub_24579C924;
  v43 = sub_2457A0100();
  return sub_24579FF28(v43);
}

uint64_t sub_24579C924()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2457A000C();
  if (!v1)
    *(_QWORD *)(v2 + 96) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579C9B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, __int128 a12, __int128 a13, uint64_t a14, uint64_t a15, int a16, int a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  __int128 v36;
  objc_class *v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v45;

  sub_2457A0134();
  a30 = v32;
  a31 = v33;
  a29 = v31;
  v34 = *(_BYTE *)(v31 + 104) + 9;
  v35 = *(_QWORD *)(v31 + 32);
  v45 = *(_QWORD *)(v31 + 24);
  sub_245756F54();
  sub_245748B24();
  sub_2457A0428();
  strcpy((char *)&a12, "summarization.");
  HIBYTE(a12) = -18;
  a18 = v34;
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457A0848();
  sub_245751420();
  v36 = a12;
  sub_245748A50(&qword_2574996A0);
  sub_2457A04E8();
  sub_2457A0630();
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&a12 = v45;
  *((_QWORD *)&a12 + 1) = v35;
  a13 = v36;
  a14 = 0;
  a15 = 0;
  a16 = 0;
  v37 = (objc_class *)sub_24578B780();
  v38 = sub_2457A01F4(v37);
  v41 = sub_2457A0060((uint64_t)v38, v39, v40);
  sub_2457A06AC((uint64_t)v41);
  v42 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v31 + 80) = v42;
  *v42 = v31;
  v42[1] = sub_24579CAC0;
  v43 = sub_2457A0100();
  return sub_24579FF28(v43);
}

uint64_t sub_24579CAC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2457A000C();
  if (!v1)
    *(_QWORD *)(v2 + 96) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579CB04()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 96);
  v2 = *(void **)(v0 + 72);
  sub_2457A0238();

  sub_2457A06C4();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24579CB50()
{
  uint64_t v0;

  sub_2457A0948();
  sub_2457A06C4();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t SummarizationClient.summarize(requestIdentifier:thread:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = sub_2457A0084();
  v5 = sub_245756DC0();
  sub_2457A0980(v5);
  sub_245756E10();
  return sub_245756D80();
}

{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = sub_2457A0084();
  v5 = sub_245756DC0();
  sub_2457A0980(v5);
  sub_245756E10();
  return sub_245756D80();
}

#error "24579CC68: call analysis failed (funcsize=46)"

uint64_t sub_24579CC9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2457A000C();
  if (!v1)
    *(_QWORD *)(v2 + 96) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579CCE0()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 96);
  v2 = *(void **)(v0 + 72);
  sub_2457A0238();

  sub_2457A0684();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24579CD2C()
{
  uint64_t v0;

  sub_2457A0948();
  sub_2457A0684();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

#error "24579CE44: call analysis failed (funcsize=46)"

uint64_t sub_24579CE78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2457A000C();
  if (!v1)
    *(_QWORD *)(v2 + 96) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t SummarizationClient.testTaskCancellation(sleepDuration:)(double a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 24) = v1;
  *(double *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 32) = sub_2457A0084();
  *(_QWORD *)(v2 + 40) = sub_245756DC0();
  v3 = sub_245776CA0();
  *(_QWORD *)(v2 + 48) = v3;
  *(_QWORD *)(v2 + 56) = *(_QWORD *)(v3 - 8);
  *(_QWORD *)(v2 + 64) = sub_245776B4C();
  sub_245756E10();
  return swift_task_switch();
}

uint64_t sub_24579CF1C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_class *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  _QWORD *v19;
  uint64_t v20;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v0[7];
  v1 = v0[8];
  v3 = (_QWORD *)v0[5];
  v4 = v0[6];
  v5 = v0[2];
  sub_2457A0898();
  v6 = sub_2457BAAA4();
  v8 = v7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  sub_245748B24();
  sub_245756F90();
  *v3 = v5;
  swift_storeEnumTagMultiPayload();
  *(_QWORD *)&v22 = v6;
  *((_QWORD *)&v22 + 1) = v8;
  v9 = (objc_class *)sub_2457A0044();
  v10 = sub_2457A010C(v9);
  v18 = sub_2457A0030((uint64_t)v10, v11, v12, v13, v14, v15, v16, v17, v22, v23, v24, v25, v26, v27, v28);
  sub_2457A06AC((uint64_t)v18);
  v19 = (_QWORD *)swift_task_alloc();
  v0[10] = v19;
  *v19 = v0;
  v19[1] = sub_24579D004;
  v20 = sub_2457A0100();
  return sub_245798ED0(v20);
}

uint64_t sub_24579D004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_2457A000C();
  if (!v1)
    *(_QWORD *)(v2 + 96) = v0;
  sub_245756E10();
  return sub_245756D80();
}

uint64_t sub_24579D048()
{
  uint64_t v0;
  void *v1;
  void *v2;

  v1 = *(void **)(v0 + 96);
  v2 = *(void **)(v0 + 72);
  sub_245791C80();

  swift_task_dealloc();
  sub_245756FCC();
  return sub_245756E54(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24579D0A0()
{
  uint64_t v0;

  sub_2457A0948();
  swift_task_dealloc();
  sub_245757044();
  return sub_245756F98(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24579D0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

void sub_24579D0F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[3] + 16);
  v0[5] = v1;
  if (v1)
  {
    v2 = v0[4];
    v3 = sub_245757030();
    v0[6] = v3;
    *(_QWORD *)(v3 + 16) = v2;
    sub_245748AF8();
    v4 = (_QWORD *)swift_task_alloc();
    v0[7] = v4;
    type metadata accessor for SummarizationXPCResult(0);
    *v4 = v0;
    v4[1] = sub_24579D194;
    sub_2457BAE7C();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_24579D194()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  sub_245777368(&v4);
  *(_QWORD *)(v2 + 64) = v0;
  swift_task_dealloc();
  if (v0)
  {
    sub_245756E10();
    return sub_245756E04();
  }
  else
  {
    swift_release();
    sub_245756FCC();
    return sub_245756F98((uint64_t (*)(void))v1[1]);
  }
}

void sub_24579D1F8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v10[4] = sub_245756CC8;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_245755E98;
  v10[3] = &unk_251695610;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performSummarizationRequest_with_, a4, v9);
  _Block_release(v9);
}

void sub_24579D2C8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  void *v9;
  _QWORD v10[6];

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  v10[4] = sub_245756D7C;
  v10[5] = v8;
  v10[0] = MEMORY[0x24BDAC760];
  v10[1] = 1107296256;
  v10[2] = sub_245755E98;
  v10[3] = &unk_251696838;
  v9 = _Block_copy(v10);
  swift_retain();
  swift_release();
  objc_msgSend(a1, sel_performSummarizationRequest_with_, a4, v9);
  _Block_release(v9);
}

uint64_t sub_24579D398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;

  v6[4] = a5;
  v6[5] = a6;
  v6[2] = a1;
  v6[3] = a4;
  return swift_task_switch();
}

void sub_24579D3B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(*(_QWORD *)(v0 + 24) + 16))
  {
    v2 = *(_QWORD *)(v0 + 32);
    v1 = *(_QWORD *)(v0 + 40);
    v3 = sub_245757030();
    *(_QWORD *)(v3 + 16) = v2;
    *(_QWORD *)(v3 + 24) = v1;
    sub_245748AF8();
    sub_2457BAE64();
    swift_release();
    swift_task_dealloc();
    (*(void (**)(void))(v0 + 8))();
  }
  else
  {
    __break(1u);
  }
}

void sub_24579D458(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE v26[12];
  int v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v31 = a4;
  v7 = sub_245748A50(&qword_257498C08);
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = &v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v26[-v11];
  v13 = sub_245748A50(&qword_257498C00);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v16 = &v26[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = *a1;
  swift_bridgeObjectRetain();
  sub_24576B8E8(v17, (uint64_t)v12);
  swift_bridgeObjectRelease();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v12, 1, v13) == 1)
  {
    sub_24579FA80((uint64_t)v12, &qword_257498C08);
  }
  else
  {
    v30 = a2;
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v14 + 32))(v16, v12, v13);
    if (qword_257497E38 != -1)
      swift_once();
    v18 = sub_2457BB08C();
    sub_24574E0F8(v18, (uint64_t)qword_257498E30);
    swift_bridgeObjectRetain_n();
    v19 = sub_2457BB068();
    v20 = sub_2457BB350();
    v21 = v20;
    if (os_log_type_enabled(v19, v20))
    {
      v22 = swift_slowAlloc();
      v27 = v21;
      v23 = v22;
      v28 = swift_slowAlloc();
      v33 = v28;
      *(_DWORD *)v23 = 136315394;
      v29 = a1;
      v32 = sub_245773478(0xD000000000000028, 0x80000002457CA970, &v33);
      sub_2457BB3BC();
      *(_WORD *)(v23 + 12) = 2080;
      swift_bridgeObjectRetain();
      v32 = sub_245773478(v30, a3, &v33);
      sub_2457BB3BC();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_245746000, v19, (os_log_type_t)v27, "%s called with existing continuation for request identifier %s. Cancelling existing stream to prevent leak.", (uint8_t *)v23, 0x16u);
      v24 = v28;
      swift_arrayDestroy();
      MEMORY[0x24953B318](v24, -1, -1);
      MEMORY[0x24953B318](v23, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_2457BB290();
    sub_2457567FC(&qword_25749A168, 255, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6838], MEMORY[0x24BEE6848]);
    v25 = swift_allocError();
    sub_2457BB14C();
    v33 = v25;
    sub_2457BB2D8();
    (*(void (**)(_BYTE *, uint64_t))(v14 + 8))(v16, v13);
  }
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v14 + 16))(v10, v31, v13);
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v10, 0, 1, v13);
  swift_bridgeObjectRetain();
  sub_24576BA50();
}

void sub_24579D80C()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  v0 = sub_245748A50(&qword_257498C08);
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v4 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_245748A50(&qword_257498C00);
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v2, 1, 1, v3);
  swift_bridgeObjectRetain();
  sub_24576BA50();
}

uint64_t sub_24579D8C0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    v4 = sub_245773CF8();
    if ((v5 & 1) != 0)
    {
      v6 = v4;
      v7 = *(_QWORD *)(v3 + 56);
      v8 = sub_245748A50(&qword_257498C00);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a2, v7 + *(_QWORD *)(*(_QWORD *)(v8 - 8) + 72) * v6, v8);
      v9 = a2;
      v10 = 0;
      v11 = v8;
    }
    else
    {
      v11 = sub_245748A50(&qword_257498C00);
      v9 = a2;
      v10 = 1;
    }
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v9, v10, 1, v11);
    return swift_bridgeObjectRelease();
  }
  else
  {
    v12 = sub_245748A50(&qword_257498C00);
    return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a2, 1, 1, v12);
  }
}

uint64_t sub_24579D9B4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_24579FBEC(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_24579DA00()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_24579DA24()
{
  uint64_t v0;
  uint64_t v1;

  sub_245748A50(&qword_2574977E0);
  v1 = swift_allocObject();
  *(_DWORD *)(v1 + 24) = 0;
  *(_QWORD *)(v1 + 16) = MEMORY[0x24BEE4B00];
  *(_QWORD *)(v0 + 16) = v1;
  return v0;
}

uint64_t type metadata accessor for SummarizationClient()
{
  return objc_opt_self();
}

unint64_t sub_24579DA84()
{
  unint64_t result;

  result = qword_257499D48;
  if (!qword_257499D48)
  {
    result = MEMORY[0x24953B288](&unk_2457C5664, &type metadata for SummarizationClient.SummarizationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499D48);
  }
  return result;
}

unint64_t sub_24579DAC0()
{
  unint64_t result;

  result = qword_257499D50;
  if (!qword_257499D50)
  {
    result = MEMORY[0x24953B288](&unk_2457C5614, &type metadata for SummarizationClient.SummarizationStyle.SynopsisCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499D50);
  }
  return result;
}

unint64_t sub_24579DAFC()
{
  unint64_t result;

  result = qword_257499D58;
  if (!qword_257499D58)
  {
    result = MEMORY[0x24953B288](&unk_2457C55C4, &type metadata for SummarizationClient.SummarizationStyle.TopLineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499D58);
  }
  return result;
}

unint64_t sub_24579DB38()
{
  unint64_t result;

  result = qword_257499D60;
  if (!qword_257499D60)
  {
    result = MEMORY[0x24953B288](&unk_2457C5574, &type metadata for SummarizationClient.SummarizationStyle.TopicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499D60);
  }
  return result;
}

unint64_t sub_24579DB74()
{
  unint64_t result;

  result = qword_257499DA8;
  if (!qword_257499DA8)
  {
    result = MEMORY[0x24953B288](&unk_2457C5524, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499DA8);
  }
  return result;
}

unint64_t sub_24579DBB0()
{
  unint64_t result;

  result = qword_257499DB0;
  if (!qword_257499DB0)
  {
    result = MEMORY[0x24953B288](&unk_2457C54D4, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.NotesAudioTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499DB0);
  }
  return result;
}

unint64_t sub_24579DBEC()
{
  unint64_t result;

  result = qword_257499DB8;
  if (!qword_257499DB8)
  {
    result = MEMORY[0x24953B288](&unk_2457C5484, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.SafariReaderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499DB8);
  }
  return result;
}

unint64_t sub_24579DC28()
{
  unint64_t result;

  result = qword_257499DC0;
  if (!qword_257499DC0)
  {
    result = MEMORY[0x24953B288](&unk_2457C5434, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.TextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499DC0);
  }
  return result;
}

unint64_t sub_24579DC64()
{
  unint64_t result;

  result = qword_257499DF0;
  if (!qword_257499DF0)
  {
    result = MEMORY[0x24953B288](&unk_2457C53E4, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499DF0);
  }
  return result;
}

unint64_t sub_24579DCA0()
{
  unint64_t result;

  result = qword_257499DF8;
  if (!qword_257499DF8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.TextAssistantSummarizationOptions.Source, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source);
    atomic_store(result, (unint64_t *)&qword_257499DF8);
  }
  return result;
}

unint64_t sub_24579DCDC()
{
  unint64_t result;

  result = qword_257499E08;
  if (!qword_257499E08)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.TextAssistantSummarizationOptions.Source, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source);
    atomic_store(result, (unint64_t *)&qword_257499E08);
  }
  return result;
}

uint64_t type metadata accessor for SummarizationClient.TextAssistantSummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245748A24(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SummarizationClient.TextAssistantSummary);
}

uint64_t type metadata accessor for SummarizationClient.TextAssistantSummary.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245748A24(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SummarizationClient.TextAssistantSummary.CodingKeys);
}

unint64_t sub_24579DD30()
{
  unint64_t result;

  result = qword_257499E10;
  if (!qword_257499E10)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarySafetyClassification, &type metadata for SummarySafetyClassification);
    atomic_store(result, (unint64_t *)&qword_257499E10);
  }
  return result;
}

unint64_t sub_24579DD6C()
{
  unint64_t result;

  result = qword_257499E18;
  if (!qword_257499E18)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarySafetyClassification, &type metadata for SummarySafetyClassification);
    atomic_store(result, (unint64_t *)&qword_257499E18);
  }
  return result;
}

uint64_t type metadata accessor for SummarizationClient.TextAssistantPartialSummary(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245748A24(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SummarizationClient.TextAssistantPartialSummary);
}

uint64_t type metadata accessor for SummarizationClient.TextAssistantPartialSummary.CodingKeys(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_245748A24(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SummarizationClient.TextAssistantPartialSummary.CodingKeys);
}

uint64_t sub_24579DDC0()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_24579DDE4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24579DE18(uint64_t a1)
{
  uint64_t *v1;

  return sub_24579A178(a1, v1[2], v1[3], v1[4]);
}

id sub_24579DE24(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, sel_performStreamingSummarizationRequest_delegate_, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_24579DE34()
{
  unint64_t result;

  result = qword_257499E50;
  if (!qword_257499E50)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_257499E50);
  }
  return result;
}

unint64_t sub_24579DE70()
{
  unint64_t result;

  result = qword_257499E90;
  if (!qword_257499E90)
  {
    result = MEMORY[0x24953B288](&unk_2457C52F4, &type metadata for SummarizationClient.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_257499E90);
  }
  return result;
}

void sub_24579DEAC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_2457567FC(&qword_2574977D0, a2, (uint64_t (*)(uint64_t))type metadata accessor for SummarizationClient, (uint64_t)&protocol conformance descriptor for SummarizationClient);
  *(_QWORD *)(a1 + 8) = v3;
}

unint64_t sub_24579DEEC()
{
  unint64_t result;

  result = qword_257499ED8;
  if (!qword_257499ED8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.UseCase, &type metadata for SummarizationClient.UseCase);
    atomic_store(result, (unint64_t *)&qword_257499ED8);
  }
  return result;
}

unint64_t sub_24579DF2C()
{
  unint64_t result;

  result = qword_257499EE0;
  if (!qword_257499EE0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.SummarizationStyle, &type metadata for SummarizationClient.SummarizationStyle);
    atomic_store(result, (unint64_t *)&qword_257499EE0);
  }
  return result;
}

unint64_t sub_24579DF6C()
{
  unint64_t result;

  result = qword_257499EE8;
  if (!qword_257499EE8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.PrewarmCategory, &type metadata for SummarizationClient.PrewarmCategory);
    atomic_store(result, (unint64_t *)&qword_257499EE8);
  }
  return result;
}

unint64_t sub_24579DFAC()
{
  unint64_t result;

  result = qword_257499EF0;
  if (!qword_257499EF0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.TextAssistantSummarizationOptions.Source, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source);
    atomic_store(result, (unint64_t *)&qword_257499EF0);
  }
  return result;
}

unint64_t sub_24579DFEC()
{
  unint64_t result;

  result = qword_257499EF8[0];
  if (!qword_257499EF8[0])
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.VisualPromptUseCase, &type metadata for SummarizationClient.VisualPromptUseCase);
    atomic_store(result, qword_257499EF8);
  }
  return result;
}

void type metadata accessor for SummarizationXPCService()
{
  sub_245751428();
}

uint64_t method lookup function for SummarizationClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of SummarizationClient.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t dispatch thunk of SummarizationClient.xpcConnectionWasInvalidated()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of SummarizationClient.summarize(text:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t getEnumTagSinglePayload for SummarizationClient.UseCase(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF3)
  {
    if (a2 + 13 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 13) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 14;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xE;
  v5 = v6 - 14;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarizationClient.UseCase(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 13 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 13) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF3)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF2)
    return ((uint64_t (*)(void))((char *)&loc_24579E144 + 4 * byte_2457C42D9[v4]))();
  *a1 = a2 + 13;
  return ((uint64_t (*)(void))((char *)sub_24579E178 + 4 * byte_2457C42D4[v4]))();
}

uint64_t sub_24579E178(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24579E180(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24579E188);
  return result;
}

uint64_t sub_24579E194(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24579E19CLL);
  *(_BYTE *)result = a2 + 13;
  return result;
}

uint64_t sub_24579E1A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24579E1A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SummarizationClient.UseCase()
{
  sub_245751428();
}

uint64_t destroy for SummarizationClient.AvailabilityParameters()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SummarizationClient.AvailabilityParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SummarizationClient.AvailabilityParameters(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

__n128 initializeWithTake for SummarizationClient.TextAssistantSummarizationOptions(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for SummarizationClient.AvailabilityParameters(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SummarizationClient.AvailabilityParameters(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 28))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarizationClient.AvailabilityParameters(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 28) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 28) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for SummarizationClient.AvailabilityParameters()
{
  sub_245751428();
}

void type metadata accessor for SummarizationClient.SummarizationStyle()
{
  sub_245751428();
}

void type metadata accessor for SummarizationClient.PrewarmCategory()
{
  sub_245751428();
}

uint64_t destroy for SummarizationClient.TextAssistantSummarizationOptions()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SummarizationClient.TextAssistantSummarizationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SummarizationClient.TextAssistantSummarizationOptions(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for SummarizationClient.TextAssistantSummarizationOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for SummarizationClient.TextAssistantSummarizationOptions(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 28))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 16);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarizationClient.TextAssistantSummarizationOptions(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_DWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 28) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 28) = 0;
    if (a2)
      *(_QWORD *)(result + 16) = a2;
  }
  return result;
}

void type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions()
{
  sub_245751428();
}

void type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions.Source()
{
  sub_245751428();
}

uint64_t sub_24579E558()
{
  return swift_allocateGenericValueMetadata();
}

void sub_24579E584()
{
  unint64_t v0;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
  sub_2457512D4();
}

void sub_24579E5FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v8;
  _QWORD *v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v6 = *(_QWORD *)(v5 + 64);
  if ((*(_DWORD *)(v5 + 80) & 0x1000F8) != 0 || (v6 & 0xFFFFFFFFFFFFFFF8) + 136 > 0x18)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    sub_2457A0648(v5);
    *((_BYTE *)a1 + v6) = *((_BYTE *)a2 + v6);
    sub_2457A0658();
    if (v10 - 1 < 0)
    {
      sub_24579FF60(v8, v9);
      sub_2457513E4();
      sub_245756F54();
      sub_2457A0330();
      sub_245756E64();
      sub_2457774AC();
      sub_2457776D4();
      sub_2457A05F0();
    }
    else
    {
      sub_2457A0580(v8, v9);
    }
  }
  sub_245767AD4();
}

void sub_24579E6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (*(_QWORD *)(v3 + 64) + a1) & 0xFFFFFFFFFFFFFFF8;
  LODWORD(v5) = -1;
  if (*(_QWORD *)(v4 + 16) < 0xFFFFFFFFuLL)
    v5 = *(_QWORD *)(v4 + 16);
  if ((int)v5 - 1 < 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_245748A90();
  }
}

void sub_24579E760()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  int v4;

  sub_2457A038C();
  (*(void (**)(void))(v1 + 16))();
  sub_2457A04F0((_BYTE *)(*(_QWORD *)(v1 + 64) + v0));
  sub_2457A0658();
  if (v4 - 1 < 0)
  {
    sub_24579FF60(v2, v3);
    sub_2457513E4();
    sub_245756F54();
    sub_2457A0330();
    sub_245756E64();
    sub_2457774AC();
    sub_2457776D4();
    sub_2457A05F0();
  }
  else
  {
    sub_2457A0580(v2, v3);
  }
  sub_245767AD4();
}

uint64_t sub_24579E7D4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  unint64_t v7;
  int v8;

  sub_245759004();
  sub_2457A038C();
  (*(void (**)(void))(v2 + 24))();
  sub_2457A0240();
  if (*(_QWORD *)(v4 + 16) >= 0xFFFFFFFFuLL)
    v5 = -1;
  else
    v5 = *(_QWORD *)(v4 + 16);
  v6 = v5 - 1;
  v7 = *(_QWORD *)(v3 + 16);
  if (v7 >= 0xFFFFFFFF)
    LODWORD(v7) = -1;
  v8 = v7 - 1;
  if (v6 < 0)
  {
    if (v8 < 0)
    {
      sub_2457A096C();
      swift_bridgeObjectRetain();
      sub_245790398();
      v1[2] = *(_QWORD *)(v2 + 16);
      v1[3] = *(_QWORD *)(v2 + 24);
      swift_bridgeObjectRetain();
      sub_245790398();
      v1[4] = *(_QWORD *)(v2 + 32);
      v1[5] = *(_QWORD *)(v2 + 40);
      swift_bridgeObjectRetain();
      sub_245790398();
      v1[6] = *(_QWORD *)(v2 + 48);
      v1[7] = *(_QWORD *)(v2 + 56);
      swift_bridgeObjectRetain();
      sub_245790398();
      v1[8] = *(_QWORD *)(v2 + 64);
      v1[9] = *(_QWORD *)(v2 + 72);
      swift_bridgeObjectRetain();
      sub_245790398();
      v1[10] = *(_QWORD *)(v2 + 80);
      v1[11] = *(_QWORD *)(v2 + 88);
      swift_bridgeObjectRetain();
      sub_245790398();
      v1[12] = *(_QWORD *)(v2 + 96);
      v1[13] = *(_QWORD *)(v2 + 104);
      swift_bridgeObjectRetain();
      sub_245790398();
      v1[14] = *(_QWORD *)(v2 + 112);
      v1[15] = *(_QWORD *)(v2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return v0;
    }
    sub_245790398();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  if ((v8 & 0x80000000) == 0)
  {
LABEL_11:
    sub_2457A0580(v1, (const void *)v2);
    return v0;
  }
  sub_2457A096C();
  v1[2] = *(_QWORD *)(v2 + 16);
  v1[3] = *(_QWORD *)(v2 + 24);
  v1[4] = *(_QWORD *)(v2 + 32);
  v1[5] = *(_QWORD *)(v2 + 40);
  v1[6] = *(_QWORD *)(v2 + 48);
  v1[7] = *(_QWORD *)(v2 + 56);
  v1[8] = *(_QWORD *)(v2 + 64);
  v1[9] = *(_QWORD *)(v2 + 72);
  v1[10] = *(_QWORD *)(v2 + 80);
  v1[11] = *(_QWORD *)(v2 + 88);
  v1[12] = *(_QWORD *)(v2 + 96);
  v1[13] = *(_QWORD *)(v2 + 104);
  v1[14] = *(_QWORD *)(v2 + 112);
  v1[15] = *(_QWORD *)(v2 + 120);
  swift_bridgeObjectRetain();
  sub_2457A0330();
  sub_245756E64();
  sub_2457774AC();
  sub_2457776D4();
  sub_2457A05F0();
  sub_2457A02E0();
  sub_245756F54();
  return v0;
}

void sub_24579EA00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  const void *v4;

  sub_2457A091C();
  v2 = *(_QWORD *)(*(_QWORD *)(v1 + 16) - 8);
  (*(void (**)(void))(v2 + 32))();
  v3 = (void *)sub_2457A04F0((_BYTE *)(*(_QWORD *)(v2 + 64) + v0));
  sub_2457A0580(v3, v4);
  sub_245749FB4();
}

void sub_24579EA44()
{
  _QWORD *v0;
  const void *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  sub_2457A038C();
  (*((void (**)(void))v1 + 5))();
  sub_2457A0240();
  LODWORD(v3) = -1;
  if (*(_QWORD *)(v2 + 16) < 0xFFFFFFFFuLL)
    v3 = *(_QWORD *)(v2 + 16);
  if ((int)v3 - 1 < 0)
  {
    v4 = *((_QWORD *)v1 + 1);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    if ((int)v4 - 1 < 0)
    {
      *v0 = *(_QWORD *)v1;
      v0[1] = *((_QWORD *)v1 + 1);
      swift_bridgeObjectRelease();
      v0[2] = *((_QWORD *)v1 + 2);
      v0[3] = *((_QWORD *)v1 + 3);
      swift_bridgeObjectRelease();
      v0[4] = *((_QWORD *)v1 + 4);
      v0[5] = *((_QWORD *)v1 + 5);
      swift_bridgeObjectRelease();
      v0[6] = *((_QWORD *)v1 + 6);
      v0[7] = *((_QWORD *)v1 + 7);
      swift_bridgeObjectRelease();
      v0[8] = *((_QWORD *)v1 + 8);
      v0[9] = *((_QWORD *)v1 + 9);
      swift_bridgeObjectRelease();
      v0[10] = *((_QWORD *)v1 + 10);
      v0[11] = *((_QWORD *)v1 + 11);
      swift_bridgeObjectRelease();
      v0[12] = *((_QWORD *)v1 + 12);
      v0[13] = *((_QWORD *)v1 + 13);
      swift_bridgeObjectRelease();
      v0[14] = *((_QWORD *)v1 + 14);
      v0[15] = *((_QWORD *)v1 + 15);
      swift_bridgeObjectRelease();
      goto LABEL_9;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_2457A0580(v0, v1);
LABEL_9:
  sub_245749FB4();
}

uint64_t sub_24579EBA8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  int v13;
  int v14;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFD)
    v7 = 2147483645;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(_QWORD *)(v5 + 64);
  if (v7 >= a2)
  {
    if (v6 < 0x7FFFFFFD)
    {
      sub_2457A0658();
      v14 = v13 - 1;
      if (v14 < 0)
        v14 = -1;
      if ((v14 + 1) >= 2)
        return v14;
      else
        return 0;
    }
    else
    {
      return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, v6, v4);
    }
  }
  else
  {
    if ((((v8 & 0xFFFFFFFFFFFFFFF8) + 136) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_24579EC24 + 4 * byte_2457C42DE[v11]))();
  }
}

void sub_24579ECB0(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  int v9;
  unsigned int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFDu)
    v6 = 2147483645;
  else
    v6 = *(_DWORD *)(v5 + 84);
  if (v6 >= a3)
  {
    v9 = 0;
  }
  else
  {
    if ((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) == 0xFFFFFF78)
      v7 = a3 - v6 + 1;
    else
      v7 = 2;
    if (v7 >= 0x10000)
      v8 = 4;
    else
      v8 = 2;
    if (v7 < 0x100)
      v8 = 1;
    if (v7 >= 2)
      v9 = v8;
    else
      v9 = 0;
  }
  if (a2 > v6)
  {
    if ((*(_DWORD *)(v5 + 64) & 0xFFFFFFF8) != 0xFFFFFF78)
    {
      v10 = ~v6 + a2;
      bzero(a1, (*(_QWORD *)(v5 + 64) & 0xFFFFFFFFFFFFFFF8) + 136);
      *a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

void sub_24579ED9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;

  *(_BYTE *)(v5 + v6) = 0;
  if ((_DWORD)a2)
  {
    if (a3 >= 0x7FFFFFFD)
    {
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v5, a2, a3, a4);
      return;
    }
    v7 = (_OWORD *)(((v4 + v5) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (a2 > 0x7FFFFFFD)
    {
      *(_OWORD *)(((v4 + v5) & 0xFFFFFFFFFFFFFFF8) + 104) = 0u;
      *(_OWORD *)(((v4 + v5) & 0xFFFFFFFFFFFFFFF8) + 120) = 0u;
      *(_OWORD *)(((v4 + v5) & 0xFFFFFFFFFFFFFFF8) + 72) = 0u;
      *(_OWORD *)(((v4 + v5) & 0xFFFFFFFFFFFFFFF8) + 88) = 0u;
      *(_OWORD *)(((v4 + v5) & 0xFFFFFFFFFFFFFFF8) + 40) = 0u;
      *(_OWORD *)(((v4 + v5) & 0xFFFFFFFFFFFFFFF8) + 56) = 0u;
      *v7 = 0u;
      *(_OWORD *)(((v4 + v5) & 0xFFFFFFFFFFFFFFF8) + 24) = 0u;
      *(_DWORD *)v7 = a2 - 2147483646;
    }
    else
    {
      *(_QWORD *)(((v4 + v5) & 0xFFFFFFFFFFFFFFF8) + 16) = (a2 + 1);
    }
  }
  sub_245767BCC();
}

void type metadata accessor for SummarizationClient.VisualPromptUseCase()
{
  sub_245751428();
}

uint64_t _s4Sage19SummarizationClientC19VisualPromptUseCaseOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_2457A07E0(-1);
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_2457A07E0((*a1 | (v4 << 8)) - 4);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_2457A07E0((*a1 | (v4 << 8)) - 4);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_2457A07E0((*a1 | (v4 << 8)) - 4);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return sub_2457A07E0(v8);
}

uint64_t _s4Sage19SummarizationClientC19VisualPromptUseCaseOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24579EF20 + 4 * byte_2457C42F2[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24579EF54 + 4 * byte_2457C42ED[v4]))();
}

uint64_t sub_24579EF54(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24579EF5C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24579EF64);
  return result;
}

uint64_t sub_24579EF70(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24579EF78);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_24579EF7C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24579EF84(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for SummarizationClient.VisualPromptOptions()
{
  sub_245751428();
}

uint64_t storeEnumTagSinglePayload for SummarizationClient.VisualPromptOptions.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_24579EFDC + 4 * byte_2457C42F7[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_24579EFFC + 4 * byte_2457C42FC[v4]))();
}

_BYTE *sub_24579EFDC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_24579EFFC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24579F004(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24579F00C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_24579F014(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_24579F01C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SummarizationClient.VisualPromptOptions.CodingKeys()
{
  return &type metadata for SummarizationClient.VisualPromptOptions.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for SummarizationClient.TextAssistantSummarizationOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_24579F084 + 4 * byte_2457C4306[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_24579F0B8 + 4 * byte_2457C4301[v4]))();
}

uint64_t sub_24579F0B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24579F0C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24579F0C8);
  return result;
}

uint64_t sub_24579F0D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24579F0DCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_24579F0E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24579F0E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions.CodingKeys()
{
  return &type metadata for SummarizationClient.TextAssistantSummarizationOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions.Source.CodingKeys()
{
  return &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.CodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions.Source.TextAssistantCodingKeys()
{
  return &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.TextAssistantCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions.Source.SafariReaderCodingKeys()
{
  return &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.SafariReaderCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationClient.TextAssistantSummarizationOptions.Source.NotesAudioTranscriptCodingKeys()
{
  return &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.NotesAudioTranscriptCodingKeys;
}

uint64_t _s4Sage19SummarizationClientC18SummarizationStyleOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_2457A07E0(-1);
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_2457A07E0((*a1 | (v4 << 8)) - 3);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_2457A07E0((*a1 | (v4 << 8)) - 3);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_2457A07E0((*a1 | (v4 << 8)) - 3);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return sub_2457A07E0(v8);
}

uint64_t _s4Sage19SummarizationClientC18SummarizationStyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24579F214 + 4 * byte_2457C4310[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24579F248 + 4 * byte_2457C430B[v4]))();
}

uint64_t sub_24579F248(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24579F250(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24579F258);
  return result;
}

uint64_t sub_24579F264(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24579F26CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24579F270(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24579F278(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummarizationClient.SummarizationStyle.CodingKeys()
{
  return &type metadata for SummarizationClient.SummarizationStyle.CodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationClient.SummarizationStyle.TopicCodingKeys()
{
  return &type metadata for SummarizationClient.SummarizationStyle.TopicCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationClient.SummarizationStyle.TopLineCodingKeys()
{
  return &type metadata for SummarizationClient.SummarizationStyle.TopLineCodingKeys;
}

ValueMetadata *type metadata accessor for SummarizationClient.SummarizationStyle.SynopsisCodingKeys()
{
  return &type metadata for SummarizationClient.SummarizationStyle.SynopsisCodingKeys;
}

unint64_t sub_24579F2C8()
{
  unint64_t result;

  result = qword_25749A080;
  if (!qword_25749A080)
  {
    result = MEMORY[0x24953B288](&unk_2457C4E44, &type metadata for SummarizationClient.SummarizationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A080);
  }
  return result;
}

unint64_t sub_24579F308()
{
  unint64_t result;

  result = qword_25749A088;
  if (!qword_25749A088)
  {
    result = MEMORY[0x24953B288](&unk_2457C4FEC, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A088);
  }
  return result;
}

unint64_t sub_24579F348()
{
  unint64_t result;

  result = qword_25749A090;
  if (!qword_25749A090)
  {
    result = MEMORY[0x24953B288](&unk_2457C50A4, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A090);
  }
  return result;
}

void sub_24579F384()
{
  JUMPOUT(0x24953B288);
}

void sub_24579F394()
{
  JUMPOUT(0x24953B288);
}

unint64_t sub_24579F3A8()
{
  unint64_t result;

  result = qword_25749A098;
  if (!qword_25749A098)
  {
    result = MEMORY[0x24953B288](&unk_2457C52CC, &type metadata for SummarizationClient.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A098);
  }
  return result;
}

unint64_t sub_24579F3E8()
{
  unint64_t result;

  result = qword_25749A0A0;
  if (!qword_25749A0A0)
  {
    result = MEMORY[0x24953B288](&unk_2457C523C, &type metadata for SummarizationClient.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0A0);
  }
  return result;
}

unint64_t sub_24579F428()
{
  unint64_t result;

  result = qword_25749A0A8;
  if (!qword_25749A0A8)
  {
    result = MEMORY[0x24953B288](&unk_2457C5264, &type metadata for SummarizationClient.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0A8);
  }
  return result;
}

void sub_24579F464()
{
  JUMPOUT(0x24953B288);
}

void sub_24579F474()
{
  JUMPOUT(0x24953B288);
}

void sub_24579F484()
{
  JUMPOUT(0x24953B288);
}

void sub_24579F494()
{
  JUMPOUT(0x24953B288);
}

unint64_t sub_24579F4A8()
{
  unint64_t result;

  result = qword_25749A0B0;
  if (!qword_25749A0B0)
  {
    result = MEMORY[0x24953B288](&unk_2457C5014, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0B0);
  }
  return result;
}

unint64_t sub_24579F4E8()
{
  unint64_t result;

  result = qword_25749A0B8;
  if (!qword_25749A0B8)
  {
    result = MEMORY[0x24953B288](&unk_2457C503C, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0B8);
  }
  return result;
}

unint64_t sub_24579F528()
{
  unint64_t result;

  result = qword_25749A0C0;
  if (!qword_25749A0C0)
  {
    result = MEMORY[0x24953B288](&unk_2457C4F0C, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.TextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0C0);
  }
  return result;
}

unint64_t sub_24579F568()
{
  unint64_t result;

  result = qword_25749A0C8;
  if (!qword_25749A0C8)
  {
    result = MEMORY[0x24953B288](&unk_2457C4F34, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.TextAssistantCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0C8);
  }
  return result;
}

unint64_t sub_24579F5A8()
{
  unint64_t result;

  result = qword_25749A0D0;
  if (!qword_25749A0D0)
  {
    result = MEMORY[0x24953B288](&unk_2457C4EBC, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.SafariReaderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0D0);
  }
  return result;
}

unint64_t sub_24579F5E8()
{
  unint64_t result;

  result = qword_25749A0D8;
  if (!qword_25749A0D8)
  {
    result = MEMORY[0x24953B288](&unk_2457C4EE4, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.SafariReaderCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0D8);
  }
  return result;
}

unint64_t sub_24579F628()
{
  unint64_t result;

  result = qword_25749A0E0;
  if (!qword_25749A0E0)
  {
    result = MEMORY[0x24953B288](&unk_2457C4E6C, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.NotesAudioTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0E0);
  }
  return result;
}

unint64_t sub_24579F668()
{
  unint64_t result;

  result = qword_25749A0E8;
  if (!qword_25749A0E8)
  {
    result = MEMORY[0x24953B288](&unk_2457C4E94, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.NotesAudioTranscriptCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0E8);
  }
  return result;
}

unint64_t sub_24579F6A8()
{
  unint64_t result;

  result = qword_25749A0F0;
  if (!qword_25749A0F0)
  {
    result = MEMORY[0x24953B288](&unk_2457C4F5C, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0F0);
  }
  return result;
}

unint64_t sub_24579F6E8()
{
  unint64_t result;

  result = qword_25749A0F8;
  if (!qword_25749A0F8)
  {
    result = MEMORY[0x24953B288](&unk_2457C4F84, &type metadata for SummarizationClient.TextAssistantSummarizationOptions.Source.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A0F8);
  }
  return result;
}

unint64_t sub_24579F728()
{
  unint64_t result;

  result = qword_25749A100;
  if (!qword_25749A100)
  {
    result = MEMORY[0x24953B288](&unk_2457C4D64, &type metadata for SummarizationClient.SummarizationStyle.TopicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A100);
  }
  return result;
}

unint64_t sub_24579F768()
{
  unint64_t result;

  result = qword_25749A108;
  if (!qword_25749A108)
  {
    result = MEMORY[0x24953B288](&unk_2457C4D8C, &type metadata for SummarizationClient.SummarizationStyle.TopicCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A108);
  }
  return result;
}

unint64_t sub_24579F7A8()
{
  unint64_t result;

  result = qword_25749A110;
  if (!qword_25749A110)
  {
    result = MEMORY[0x24953B288](&unk_2457C4D14, &type metadata for SummarizationClient.SummarizationStyle.TopLineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A110);
  }
  return result;
}

unint64_t sub_24579F7E8()
{
  unint64_t result;

  result = qword_25749A118;
  if (!qword_25749A118)
  {
    result = MEMORY[0x24953B288](&unk_2457C4D3C, &type metadata for SummarizationClient.SummarizationStyle.TopLineCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A118);
  }
  return result;
}

unint64_t sub_24579F828()
{
  unint64_t result;

  result = qword_25749A120;
  if (!qword_25749A120)
  {
    result = MEMORY[0x24953B288](&unk_2457C4CC4, &type metadata for SummarizationClient.SummarizationStyle.SynopsisCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A120);
  }
  return result;
}

unint64_t sub_24579F868()
{
  unint64_t result;

  result = qword_25749A128;
  if (!qword_25749A128)
  {
    result = MEMORY[0x24953B288](&unk_2457C4CEC, &type metadata for SummarizationClient.SummarizationStyle.SynopsisCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A128);
  }
  return result;
}

unint64_t sub_24579F8A8()
{
  unint64_t result;

  result = qword_25749A130;
  if (!qword_25749A130)
  {
    result = MEMORY[0x24953B288](&unk_2457C4DB4, &type metadata for SummarizationClient.SummarizationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A130);
  }
  return result;
}

unint64_t sub_24579F8E8()
{
  unint64_t result;

  result = qword_25749A138;
  if (!qword_25749A138)
  {
    result = MEMORY[0x24953B288](&unk_2457C4DDC, &type metadata for SummarizationClient.SummarizationStyle.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A138);
  }
  return result;
}

unint64_t sub_24579F924()
{
  unint64_t result;

  result = qword_25749A140;
  if (!qword_25749A140)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.VisualPromptUseCase, &type metadata for SummarizationClient.VisualPromptUseCase);
    atomic_store(result, (unint64_t *)&qword_25749A140);
  }
  return result;
}

unint64_t sub_24579F960()
{
  unint64_t result;

  result = qword_25749A148;
  if (!qword_25749A148)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.PrewarmCategory, &type metadata for SummarizationClient.PrewarmCategory);
    atomic_store(result, (unint64_t *)&qword_25749A148);
  }
  return result;
}

unint64_t sub_24579F99C()
{
  unint64_t result;

  result = qword_25749A150;
  if (!qword_25749A150)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SummarizationClient.UseCase, &type metadata for SummarizationClient.UseCase);
    atomic_store(result, &qword_25749A150);
  }
  return result;
}

uint64_t sub_24579F9D8()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24579FA0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0[3];
  v3 = v0[4];
  v4 = v0[5];
  v5 = v0[6];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  v7 = sub_245757054(v6);
  return sub_24579D398(v7, v8, v2, v3, v4, v5);
}

void sub_24579FA80(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_245748A50(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  sub_245748A90();
}

uint64_t sub_24579FAB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(v0 + 24);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  v4 = sub_245757054(v3);
  return sub_24579D0D8(v4, v5, v2);
}

void sub_24579FB10()
{
  uint64_t v0;

  sub_24579A250(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  sub_245748A90();
}

void sub_24579FB34()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_2457A091C();
  v1 = v0(0);
  sub_2457A0648(*(_QWORD *)(v1 - 8));
  sub_245748A90();
}

uint64_t sub_24579FB64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SummarizationXPCRequest.Request(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24579FBA0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_24579D1F8(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

uint64_t sub_24579FBA8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24579FBCC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_24579FBDC()
{
  return swift_release();
}

void sub_24579FBE4(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_24579D2C8(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

_QWORD *sub_24579FBEC(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  uint64_t v5;
  uint64_t v7;

  v1 = *(_QWORD *)(a1 + 16);
  if (!v1)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_245748A50(&qword_257498C18);
  v3 = (_QWORD *)swift_allocObject();
  v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 16);
  v5 = sub_24579FCCC((uint64_t)&v7, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_24577638C();
  if (v5 != v1)
  {
    __break(1u);
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  return v3;
}

uint64_t sub_24579FCCC(uint64_t result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = (_QWORD *)(*(_QWORD *)(a4 + 48) + 16 * v16);
    v21 = v20[1];
    *v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    result = swift_bridgeObjectRetain();
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_24579FF28(uint64_t a1)
{
  return sub_245798ED0(a1);
}

uint64_t sub_24579FF44(uint64_t a1)
{
  return sub_245798ED0(a1);
}

uint64_t sub_24579FF60(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  return swift_bridgeObjectRetain();
}

uint64_t sub_24579FFE8()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 104) = v0;
  return swift_task_dealloc();
}

uint64_t sub_2457A000C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  return swift_task_dealloc();
}

id sub_2457A0030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __int128 a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  uint64_t v15;

  return SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v15, &a9, &a12, &a15);
}

uint64_t sub_2457A0044()
{
  return type metadata accessor for SummarizationXPCRequest(0);
}

id sub_2457A0060(uint64_t a1, uint64_t a2, uint64_t a3, ...)
{
  uint64_t v3;
  __int128 v5;
  va_list va;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  va_list va1;
  uint64_t v11;
  uint64_t v12;
  va_list va2;

  va_start(va2, a3);
  va_start(va1, a3);
  va_start(va, a3);
  v5 = va_arg(va1, __int128);
  v7 = va_arg(va1, _QWORD);
  v8 = va_arg(va1, _QWORD);
  va_copy(va2, va1);
  v9 = va_arg(va2, _QWORD);
  v11 = va_arg(va2, _QWORD);
  v12 = va_arg(va2, _QWORD);
  return SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v3, (__int128 *)va, (uint64_t *)va1, (uint64_t *)va2);
}

uint64_t sub_2457A0074()
{
  return type metadata accessor for SummarizationXPCRequest(0);
}

uint64_t sub_2457A0084()
{
  return type metadata accessor for SummarizationXPCRequest.Request(0);
}

uint64_t sub_2457A008C()
{
  return sub_2457BB530();
}

id sub_2457A009C(uint64_t a1, __int128 *a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v4;

  return SummarizationXPCRequest.init(request:requestInfo:onBehalfOfProcess:originatingProcess:)(v4, a2, a3, a4);
}

void sub_2457A00A4()
{
  uint64_t v0;

  strcpy((char *)(v0 - 112), "summarization.");
  *(_BYTE *)(v0 - 97) = -18;
}

uint64_t sub_2457A00CC()
{
  return sub_2457BB5FC();
}

uint64_t sub_2457A0100()
{
  uint64_t v0;

  return v0;
}

id sub_2457A010C(Class a1)
{
  return objc_allocWithZone(a1);
}

uint64_t sub_2457A0150@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_2457A015C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_245773478(v0, v1, (uint64_t *)(v2 - 144));
}

uint64_t sub_2457A016C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return sub_2457BB3BC();
}

uint64_t sub_2457A0180()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 120) = v0;
  return swift_task_dealloc();
}

uint64_t sub_2457A01A4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  return swift_task_dealloc();
}

void sub_2457A01C8()
{
  uint64_t v0;

  strcpy((char *)(v0 - 120), "summarization.");
  *(_BYTE *)(v0 - 105) = -18;
}

id sub_2457A01F4(Class a1)
{
  return objc_allocWithZone(a1);
}

uint64_t sub_2457A0200()
{
  return 0x6973734174786574;
}

__n128 sub_2457A0224()
{
  uint64_t v0;
  __n128 *v1;
  __n128 result;

  result = *(__n128 *)(v0 + 8);
  v1[4] = result;
  v1[5].n128_u64[0] = *(_QWORD *)(v0 + 24);
  return result;
}

void sub_2457A0238()
{
  sub_245791DE8();
}

void sub_2457A0240()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(v2 + 64) + v0) = *(_BYTE *)(*(_QWORD *)(v2 + 64) + v1);
}

uint64_t sub_2457A0268()
{
  return 0x6552697261666173;
}

__n128 sub_2457A0288()
{
  uint64_t v0;
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v0 + 8);
  *(_BYTE *)(v1 + 140) = *(_BYTE *)(v0 + 24);
  v3 = *(_OWORD *)(v0 + 32);
  *(__n128 *)(v1 + 64) = result;
  *(_OWORD *)(v1 + 80) = v3;
  *(_DWORD *)(v1 + 136) = *(_DWORD *)(v0 + 48);
  *(_QWORD *)(v1 + 96) = *(_QWORD *)(v0 + 56);
  return result;
}

void sub_2457A02B0()
{
  uint64_t v0;

  sub_245789E80((_QWORD *)(v0 - 120));
}

uint64_t sub_2457A02BC()
{
  return 0x7A6972616D6D7573;
}

uint64_t sub_2457A02E0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2457A02E8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = v0;
  return 1;
}

uint64_t sub_2457A030C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 - 176) = v1;
  *(_QWORD *)(v4 - 168) = v3;
  *(_QWORD *)(v4 - 160) = v0;
  *(_QWORD *)(v4 - 88) = v2;
  return sub_2457BB5E4();
}

uint64_t sub_2457A0328()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t sub_2457A0330()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2457A0338()
{
  return 0x6D726177657270;
}

uint64_t sub_2457A034C()
{
  return sub_2457BB464();
}

uint64_t sub_2457A0368()
{
  return 0x706150636967616DLL;
}

uint64_t sub_2457A0384()
{
  return sub_2457BB3BC();
}

uint64_t sub_2457A03A0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  *(_DWORD *)(v2 - 72) = v1;
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v2 - 176) + 8))(v0, *(_QWORD *)(v2 - 152));
}

uint64_t sub_2457A03B8()
{
  return 0x6C69626967696C65;
}

uint64_t sub_2457A03D8()
{
  return 0x6962616C69617661;
}

uint64_t sub_2457A03F8()
{
  return sub_2457BB770();
}

uint64_t sub_2457A0410()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457A0420()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_2457A0428()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457A0430(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 104))(v3, a2, v2);
}

uint64_t sub_2457A0448(uint64_t result)
{
  _BYTE *v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = result;
  *(_BYTE *)(v2 + 104) = *v1;
  *(_BYTE *)(v2 + 105) = v1[1];
  *(_BYTE *)(v2 + 106) = v1[2];
  return result;
}

uint64_t sub_2457A0468()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 160) + 8))(v0, v1);
}

uint64_t sub_2457A047C()
{
  return swift_arrayDestroy();
}

uint64_t sub_2457A04A0()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v1 + 8))(*(_QWORD *)(v0 + 64), *(_QWORD *)(v0 + 72));
}

void sub_2457A04AC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_2457A04C0()
{
  return sub_2457BB1D0();
}

uint64_t sub_2457A04CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 96) + 8))(v1, v0);
}

void sub_2457A04E0()
{
  sub_2457945C0();
}

void sub_2457A04E8()
{
  sub_24579FB34();
}

unint64_t sub_2457A04F0@<X0>(_BYTE *a1@<X8>)
{
  unint64_t v1;

  *(_BYTE *)v1 = *a1;
  return (v1 & 0xFFFFFFFFFFFFFFF8) + 8;
}

uint64_t sub_2457A050C()
{
  return sub_2457BB77C();
}

void sub_2457A0520(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 96) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_2457A053C(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_2457A0558(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void sub_2457A0574(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_DWORD *)(a1 + 24) = 0;
}

void *sub_2457A0580(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x80uLL);
}

uint64_t sub_2457A0588()
{
  return swift_bridgeObjectRelease();
}

BOOL sub_2457A059C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

id sub_2457A05AC(void *a1)
{
  return sub_24579598C(a1);
}

uint64_t sub_2457A05D8()
{
  return swift_task_dealloc();
}

uint64_t sub_2457A05E0()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 136) = 0;
  *(_QWORD *)(v0 - 128) = 0;
  *(_DWORD *)(v0 - 120) = 0;
  return type metadata accessor for SummarizationXPCRequest(0);
}

uint64_t sub_2457A05F0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2457A05F8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_QWORD *)v0 = v1;
  *(_BYTE *)(v0 + 8) = v2;
  return v0;
}

BOOL sub_2457A0610(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_2457A0620()
{
  return sub_2457BB578();
}

uint64_t sub_2457A0630()
{
  uint64_t v0;
  _BYTE *v1;
  char v2;
  char v3;
  char v4;

  *v1 = v3;
  v1[1] = v2;
  v1[2] = v4;
  return v0;
}

uint64_t sub_2457A0648@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 16))(v1, v2);
}

uint64_t sub_2457A066C()
{
  uint64_t v0;

  return v0 - 104;
}

uint64_t sub_2457A0684()
{
  return swift_task_dealloc();
}

uint64_t sub_2457A069C()
{
  return swift_task_dealloc();
}

uint64_t sub_2457A06A4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_245773478(a1, v3, a3);
}

uint64_t sub_2457A06AC(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t sub_2457A06B8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = result;
  return result;
}

uint64_t sub_2457A06C4()
{
  return swift_task_dealloc();
}

uint64_t sub_2457A06CC()
{
  return sub_2457BB638();
}

void sub_2457A06DC()
{
  sub_24579A1F4();
}

_QWORD *sub_2457A0704()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v0 = v4;
  v0[1] = v5;
  v0[2] = v3;
  v0[3] = v2;
  v0[4] = v1;
  return v0;
}

uint64_t sub_2457A071C()
{
  return swift_task_dealloc();
}

uint64_t sub_2457A0724()
{
  return sub_245791D34();
}

uint64_t sub_2457A0760()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *v1 = v5;
  v1[1] = v4;
  v1[2] = v3;
  v1[3] = v2;
  return v0;
}

uint64_t sub_2457A0774()
{
  uint64_t v0;
  uint64_t v1;

  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v0, 1, 1, *(_QWORD *)(v1 - 192));
}

uint64_t sub_2457A0798()
{
  uint64_t v0;

  return sub_245749564(v0);
}

uint64_t sub_2457A07A0()
{
  return sub_2457BB440();
}

uint64_t sub_2457A07AC()
{
  return swift_allocObject();
}

void sub_2457A07B8(void *a1, NSObject *a2, os_log_type_t a3, const char *a4, uint8_t *a5)
{
  _os_log_impl(a1, a2, a3, a4, a5, 2u);
}

uint64_t sub_2457A07C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_245781C64((uint64_t)&a9, v9);
}

uint64_t sub_2457A07CC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457A07E0@<X0>(int a1@<W8>)
{
  return (a1 + 1);
}

uint64_t sub_2457A07F4()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457A0800(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return v1 - 120;
}

uint64_t sub_2457A0814@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  return sub_2457BB53C();
}

uint64_t sub_2457A0820(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 184) = a1;
  return type metadata accessor for SummarizationXPCRequest.Request(0);
}

uint64_t sub_2457A082C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457A0840()
{
  return sub_2457BB068();
}

uint64_t sub_2457A0848()
{
  return sub_2457BB1D0();
}

uint64_t sub_2457A0854()
{
  return sub_2457BB1D0();
}

uint64_t sub_2457A0860(uint64_t a1, uint64_t a2)
{
  sub_24574E0F8(a1, a2);
  return sub_2457BB068();
}

uint64_t sub_2457A0874()
{
  return swift_bridgeObjectRelease();
}

void sub_2457A0890(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  sub_245789E80((uint64_t *)va);
}

uint64_t sub_2457A0898()
{
  return sub_2457BAAC8();
}

unint64_t sub_2457A08A0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_24579DBB0();
}

unint64_t sub_2457A08AC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 2;
  return sub_24579DAC0();
}

uint64_t sub_2457A08B8()
{
  return swift_bridgeObjectRelease_n();
}

unint64_t sub_2457A08C0()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_24579DAFC();
}

unint64_t sub_2457A08CC()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 1;
  return sub_24579DBEC();
}

void sub_2457A08D8()
{
  uint64_t v0;

}

uint64_t sub_2457A08E0()
{
  return sub_2457BB734();
}

uint64_t sub_2457A08EC()
{
  return swift_bridgeObjectRelease_n();
}

_QWORD *sub_2457A08F8()
{
  _QWORD *v0;

  return sub_245749280(v0, v0[3]);
}

void sub_2457A0928()
{
  void *v0;

}

unint64_t sub_2457A0934()
{
  return 0xD000000000000016;
}

void sub_2457A0948()
{
  uint64_t v0;

}

id sub_2457A0950()
{
  void *v0;

  return v0;
}

uint64_t sub_2457A0958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_24579A7D8(a1, a2, a3 & 0xFFFFFFFFFFFFLL | 0xD000000000000000, a4, a5);
}

uint64_t sub_2457A0964()
{
  return sub_2457BB368();
}

uint64_t sub_2457A096C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t result;

  *v0 = *v1;
  result = v1[1];
  v0[1] = result;
  return result;
}

uint64_t sub_2457A0980(uint64_t result)
{
  _BYTE *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v2;
  *(_QWORD *)(v3 + 56) = result;
  *(_QWORD *)(v3 + 64) = v4;
  *(_BYTE *)(v3 + 104) = *v1;
  return result;
}

BOOL sub_2457A0994(NSObject *a1)
{
  os_log_type_t v1;

  return os_log_type_enabled(a1, v1);
}

id sub_2457A099C(Class a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 160) = 0;
  *(_QWORD *)(v1 - 152) = 0;
  *(_DWORD *)(v1 - 144) = 0;
  return objc_allocWithZone(a1);
}

uint64_t Summary.topic.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_2457A09B4(v1, a1);
}

uint64_t sub_2457A09B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_245748A50(&qword_257499C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t Summary.topic.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_2457A0A04(a1, v1);
}

uint64_t sub_2457A0A04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_245748A50(&qword_257499C20);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*Summary.topic.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t Summary.topLine.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2457A38B4();
  return sub_2457A3964(v1 + *(int *)(v3 + 20), a1);
}

uint64_t type metadata accessor for Summary()
{
  uint64_t result;

  result = qword_25749A1E8;
  if (!qword_25749A1E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t Summary.topLine.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2457A38B4();
  return sub_2457A395C(a1, v1 + *(int *)(v3 + 20));
}

uint64_t (*Summary.topLine.modify())(_QWORD, _QWORD)
{
  sub_2457A38B4();
  return nullsub_1;
}

uint64_t Summary.synopsis.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2457A38B4();
  return sub_2457A3964(v1 + *(int *)(v3 + 24), a1);
}

uint64_t Summary.synopsis.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2457A38B4();
  return sub_2457A395C(a1, v1 + *(int *)(v3 + 24));
}

uint64_t (*Summary.synopsis.modify())(_QWORD, _QWORD)
{
  sub_2457A38B4();
  return nullsub_1;
}

uint64_t Summary.visualConcepts.getter()
{
  sub_2457A38B4();
  return swift_bridgeObjectRetain();
}

void Summary.visualConcepts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_2457A38B4() + 28);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  sub_245749FB4();
}

uint64_t (*Summary.visualConcepts.modify())(_QWORD, _QWORD)
{
  sub_2457A38B4();
  return nullsub_1;
}

uint64_t Summary.visualTopLine.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2457A38B4();
  return sub_2457A3964(v1 + *(int *)(v3 + 32), a1);
}

uint64_t Summary.visualTopLine.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_2457A38B4();
  return sub_2457A395C(a1, v1 + *(int *)(v3 + 32));
}

uint64_t (*Summary.visualTopLine.modify())(_QWORD, _QWORD)
{
  sub_2457A38B4();
  return nullsub_1;
}

uint64_t Summary.suggestedActions.getter()
{
  sub_2457A38B4();
  return swift_bridgeObjectRetain();
}

void Summary.suggestedActions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_2457A38B4() + 36);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  sub_245749FB4();
}

uint64_t (*Summary.suggestedActions.modify())(_QWORD, _QWORD)
{
  sub_2457A38B4();
  return nullsub_1;
}

uint64_t Summary.safetyClassification.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = sub_2457A38B4();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t Summary.safetyClassification.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = sub_2457A38B4();
  *(_BYTE *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*Summary.safetyClassification.modify())(_QWORD, _QWORD)
{
  sub_2457A38B4();
  return nullsub_1;
}

_QWORD *Summary.inferenceEnvironmentInfo.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[128];

  v1 = sub_2457A38B4();
  sub_245781C64(v0 + *(int *)(v1 + 44), (uint64_t)v3);
  sub_2457A3A0C((uint64_t)v3);
  return sub_2457A0DF0((uint64_t)v3);
}

uint64_t Summary.inferenceEnvironmentInfo.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[136];

  sub_245781C64(a1, (uint64_t)v4);
  v2 = sub_2457A38B4();
  sub_245781C64(v1 + *(int *)(v2 + 44), (uint64_t)v5);
  sub_2457A0DF0((uint64_t)v5);
  return sub_2457A3A0C((uint64_t)v4);
}

_QWORD *sub_2457A0DF0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);

  v2 = sub_245780878(a1);
  v3(v2, v1[1], v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9], v1[10], v1[11], v1[12], v1[13], v1[14], v1[15]);
  return v1;
}

uint64_t (*Summary.inferenceEnvironmentInfo.modify())(_QWORD, _QWORD)
{
  sub_2457A38B4();
  return nullsub_1;
}

uint64_t Summary.init(topic:topLine:synopsis:visualConcepts:visualTopLine:suggestedActions:safetyClassification:inferenceEnvironmentInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char *a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v33;
  _BYTE v36[128];
  _OWORD v37[8];
  _BYTE v38[136];

  v33 = *a7;
  sub_245781C64(a8, (uint64_t)v36);
  v12 = sub_2457A39B4();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a9, 1, 1, v12);
  v13 = (int *)sub_2457A38B4();
  sub_2457A3998(a9 + v13[5]);
  sub_2457A3998(a9 + v13[6]);
  v14 = v13[7];
  *(_QWORD *)(a9 + v14) = 0;
  sub_2457A3998(a9 + v13[8]);
  v15 = v13[10];
  *(_BYTE *)(a9 + v15) = 2;
  v16 = a9 + v13[11];
  sub_2457824F0(v37);
  sub_245781C64((uint64_t)v37, v16);
  sub_2457A39BC(a1);
  v17 = sub_245748B2C(a2);
  sub_2457A3A00(v17, v18, v19, v20, v21, v22, v23, v24, a3);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a9 + v14) = a4;
  sub_2457A39F8(a5);
  *(_QWORD *)(a9 + v13[9]) = a6;
  *(_BYTE *)(a9 + v15) = v33;
  sub_245781C64(v16, (uint64_t)v38);
  v25 = sub_2457A0DF0((uint64_t)v38);
  return sub_2457A39A8((uint64_t)v25, v26, v27, v28, v29);
}

uint64_t sub_2457A0FB8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  char v10;

  v2 = a1 == 0x6369706F74 && a2 == 0xE500000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x656E694C706F74 && a2 == 0xE700000000000000;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x736973706F6E7973 && a2 == 0xE800000000000000;
      if (v7 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6F436C6175736976 && a2 == 0xEE0073747065636ELL;
        if (v8 || (sub_2457BB6B0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x6F546C6175736976 && a2 == 0xED0000656E694C70;
          if (v9 || (sub_2457BB6B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else if (a1 == 0xD000000000000010 && a2 == 0x80000002457CAA70 || (sub_2457BB6B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else if (a1 == 0xD000000000000014 && a2 == 0x80000002457CA950 || (sub_2457BB6B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 6;
          }
          else if (a1 == 0xD000000000000018 && a2 == 0x80000002457CA320)
          {
            swift_bridgeObjectRelease();
            return 7;
          }
          else
          {
            v10 = sub_2457BB6B0();
            swift_bridgeObjectRelease();
            if ((v10 & 1) != 0)
              return 7;
            else
              return 8;
          }
        }
      }
    }
  }
}

uint64_t sub_2457A1318(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2457A1348 + 4 * byte_2457C56B8[a1]))(0x6369706F74, 0xE500000000000000);
}

uint64_t sub_2457A1348()
{
  return 0x656E694C706F74;
}

uint64_t sub_2457A1360()
{
  return 0x736973706F6E7973;
}

uint64_t sub_2457A1378()
{
  return 0x6F436C6175736976;
}

uint64_t sub_2457A139C()
{
  return 0x6F546C6175736976;
}

unint64_t sub_2457A13C0()
{
  return 0xD000000000000010;
}

unint64_t sub_2457A13DC()
{
  return 0xD000000000000014;
}

uint64_t sub_2457A1414()
{
  unsigned __int8 *v0;

  return sub_2457A1318(*v0);
}

uint64_t sub_2457A141C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457A0FB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457A1440()
{
  sub_2457A1798();
  return sub_2457BB788();
}

uint64_t sub_2457A1468()
{
  sub_2457A1798();
  return sub_2457BB794();
}

void Summary.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char v13[128];
  _QWORD v14[16];
  char v15;
  char v16;
  uint64_t v17;

  v3 = v1;
  v5 = sub_245748A50(&qword_25749A180);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_245749FF4();
  v9 = v8 - v7;
  sub_245749280(a1, a1[3]);
  sub_2457A1798();
  sub_2457BB77C();
  LOBYTE(v14[0]) = 0;
  sub_2457BAA14();
  sub_2457A1E48((uint64_t)&unk_25749A190);
  v17 = v3;
  v10 = v9;
  sub_2457A393C();
  if (!v2)
  {
    v11 = (int *)type metadata accessor for Summary();
    sub_2457A39EC(v11[5]);
    LOBYTE(v14[0]) = 1;
    sub_2457A393C();
    sub_2457A39EC(v11[6]);
    LOBYTE(v14[0]) = 2;
    sub_2457A393C();
    v14[0] = *(_QWORD *)(v17 + v11[7]);
    v13[0] = 3;
    sub_245748A50(&qword_25749A198);
    sub_2457A1E84((uint64_t)&unk_25749A1A0);
    sub_2457A3990();
    sub_2457A39EC(v11[8]);
    LOBYTE(v14[0]) = 4;
    sub_2457A393C();
    v14[0] = *(_QWORD *)(v17 + v11[9]);
    v13[0] = 5;
    sub_245748A50(&qword_25749A1A8);
    sub_2457A17D4((uint64_t)&unk_25749A1B0);
    sub_2457BB68C();
    v16 = *(_BYTE *)(v17 + v11[10]);
    v15 = 6;
    sub_24579DD30();
    sub_2457A3990();
    v12 = sub_2457A39EC(v11[11]);
    sub_245781C64(v12, (uint64_t)v14);
    sub_245781C64((uint64_t)v14, (uint64_t)v13);
    sub_24578224C();
    sub_2457A3990();
  }
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v10, v5);
  sub_245751240();
}

unint64_t sub_2457A1798()
{
  unint64_t result;

  result = qword_25749A188;
  if (!qword_25749A188)
  {
    result = MEMORY[0x24953B288](&unk_2457C587C, &type metadata for Summary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A188);
  }
  return result;
}

unint64_t sub_2457A17D4(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t (*v3)(void);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  uint64_t v7;
  uint64_t v8;

  result = sub_245780878(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_24574B5EC(&qword_25749A1A8);
    v8 = v6();
    result = MEMORY[0x24953B288](v5, v7, &v8);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_2457A1838()
{
  unint64_t result;

  result = qword_25749A1B8;
  if (!qword_25749A1B8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SuggestedAction, &type metadata for SuggestedAction);
    atomic_store(result, (unint64_t *)&qword_25749A1B8);
  }
  return result;
}

void Summary.init(from:)(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v35[2];
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  int *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _BYTE v51[128];
  _BYTE v52[128];
  _QWORD v53[16];
  _OWORD v54[8];
  char v55;

  v36 = a2;
  v3 = sub_245748A50(&qword_257499C20);
  v4 = MEMORY[0x24BDAC7A8](v3);
  v37 = (char *)v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v38 = (char *)v35 - v7;
  v8 = MEMORY[0x24BDAC7A8](v6);
  v39 = (char *)v35 - v9;
  MEMORY[0x24BDAC7A8](v8);
  v40 = (char *)v35 - v10;
  v42 = sub_245748A50(&qword_25749A1C0);
  v11 = *(_QWORD *)(v42 - 8);
  MEMORY[0x24BDAC7A8](v42);
  sub_245749FF4();
  v14 = v13 - v12;
  v15 = (int *)type metadata accessor for Summary();
  MEMORY[0x24BDAC7A8](v15);
  sub_245749FF4();
  v18 = v17 - v16;
  sub_2457BAA14();
  sub_2457A394C(v18);
  v47 = v18 + v15[5];
  sub_2457A394C(v47);
  v46 = v18 + v15[6];
  sub_2457A394C(v46);
  v50 = v15[7];
  *(_QWORD *)(v18 + v50) = 0;
  v49 = v18 + v15[8];
  sub_2457A394C(v49);
  v19 = v15[10];
  *(_BYTE *)(v18 + v19) = 2;
  v41 = v15;
  v20 = v18 + v15[11];
  sub_2457824F0(v54);
  v44 = v20;
  sub_245781C64((uint64_t)v54, v20);
  v21 = a1[3];
  v45 = a1;
  sub_245749280(a1, v21);
  sub_2457A1798();
  v43 = v14;
  v22 = v48;
  sub_2457BB770();
  if (v22)
  {
    v26 = v44;
    v28 = v46;
    v27 = v47;
    sub_245749564((uint64_t)v45);
    sub_2457A1E08(v18);
    sub_2457A1E08(v27);
    sub_2457A1E08(v28);
    swift_bridgeObjectRelease();
    sub_2457A1E08(v49);
    sub_245781C64(v26, (uint64_t)v53);
    sub_2457A0DF0((uint64_t)v53);
  }
  else
  {
    v23 = (uint64_t)v39;
    v48 = v19;
    v35[1] = v11;
    LOBYTE(v53[0]) = 0;
    v24 = sub_2457A1E48((uint64_t)&unk_25749A1C8);
    v25 = (uint64_t)v40;
    sub_2457A396C();
    sub_2457A0A04(v25, v18);
    LOBYTE(v53[0]) = 1;
    sub_2457A396C();
    sub_2457A0A04(v23, v47);
    LOBYTE(v53[0]) = 2;
    v29 = (uint64_t)v38;
    sub_2457A39C4();
    sub_2457A396C();
    v40 = (char *)v24;
    sub_2457A0A04(v29, v46);
    sub_245748A50(&qword_25749A198);
    v52[0] = 3;
    sub_2457A1E84((uint64_t)&unk_25749A1D0);
    sub_2457A396C();
    v30 = v53[0];
    v31 = v50;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v18 + v31) = v30;
    LOBYTE(v53[0]) = 4;
    v32 = (uint64_t)v37;
    sub_2457A39C4();
    sub_2457A396C();
    sub_2457A0A04(v32, v49);
    sub_245748A50(&qword_25749A1A8);
    v52[0] = 5;
    sub_2457A17D4((uint64_t)&unk_25749A1D8);
    sub_2457BB5CC();
    v34 = v44;
    v33 = (uint64_t)v45;
    *(_QWORD *)(v18 + v41[9]) = v53[0];
    v52[0] = 6;
    sub_24579DD6C();
    sub_2457A396C();
    *(_BYTE *)(v18 + v48) = v53[0];
    v55 = 7;
    sub_245782510();
    sub_2457A396C();
    sub_2457A392C();
    sub_245781C64((uint64_t)v53, (uint64_t)v51);
    sub_245781C64(v34, (uint64_t)v52);
    sub_2457A0DF0((uint64_t)v52);
    sub_245781C64((uint64_t)v51, v34);
    sub_2457A1F38(v18, v36);
    sub_245749564(v33);
    sub_2457A1F7C(v18);
  }
  sub_245751240();
}

uint64_t sub_2457A1E08(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_245748A50(&qword_257499C20);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2457A1E48(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = sub_245780878(a1);
  if (!result)
  {
    v4 = v3;
    v5 = sub_2457BAA14();
    result = MEMORY[0x24953B288](v4, v5);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_2457A1E84(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  result = sub_245780878(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = sub_24574B5EC(&qword_25749A198);
    v8 = sub_2457A1E48(v6);
    result = MEMORY[0x24953B288](v5, v7, &v8);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_2457A1EFC()
{
  unint64_t result;

  result = qword_25749A1E0;
  if (!qword_25749A1E0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for SuggestedAction, &type metadata for SuggestedAction);
    atomic_store(result, (unint64_t *)&qword_25749A1E0);
  }
  return result;
}

uint64_t sub_2457A1F38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Summary();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2457A1F7C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Summary();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_2457A1FB8(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  Summary.init(from:)(a1, a2);
}

void sub_2457A1FCC(_QWORD *a1)
{
  Summary.encode(to:)(a1);
}

void Summary.init(topic:topLine:synopsis:visualConcepts:visualTopLine:suggestedActions:safetyClassification:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unsigned __int8 *a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v8;
  uint64_t v12;
  int *v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v39;
  char v40;
  _OWORD v43[8];

  HIDWORD(v39) = *a7;
  v12 = sub_2457A39B4();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a8, 1, 1, v12);
  v13 = (int *)sub_2457A38B4();
  sub_2457A38BC(v13);
  *(_BYTE *)(a8 + v8) = 2;
  v14 = sub_2457824F0(v43);
  sub_2457A39A8(v15, v16, v17, v18, v19, v14);
  sub_2457A39F8(a1);
  v20 = sub_245748B2C(a2);
  sub_2457A3A00(v20, v21, v22, v23, v24, v25, v26, v27, a3);
  sub_2457A39BC(a5);
  v28 = swift_bridgeObjectRelease();
  sub_2457A39D8(v28, v29, v30, v31, v32, v33, v34, v35, v37, a5, v39, a4, a6);
  *(_BYTE *)(a8 + v8) = v40;
  sub_2457A3974();
}

uint64_t Summary.init(topic:topLine:synopsis:suggestedActions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t result;
  _OWORD v17[8];

  sub_2457A39B4();
  sub_245776EB8(a5);
  v7 = (int *)sub_2457A38B4();
  v8 = a5 + v7[5];
  sub_245776EB8(v8);
  v9 = a5 + v7[6];
  sub_245776EB8(v9);
  v10 = v7[7];
  *(_QWORD *)(a5 + v10) = 0;
  v11 = a5 + v7[8];
  sub_245776EB8(v11);
  v12 = v7[10];
  *(_BYTE *)(a5 + v12) = 2;
  sub_2457824F0(v17);
  sub_2457A3A0C((uint64_t)v17);
  sub_2457A39BC(a1);
  sub_2457A0A04(a2, v8);
  sub_2457A0A04(a3, v9);
  sub_2457A1E08(v11);
  sub_245776EB8(v11);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a5 + v10) = 0;
  *(_QWORD *)(a5 + v7[9]) = a4;
  *(_BYTE *)(a5 + v12) = 2;
  return result;
}

void Summary.init(topic:topLine:synopsis:visualConcepts:visualTopLine:suggestedActions:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v11;
  int *v12;
  double v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _OWORD v32[8];

  v11 = sub_2457A39B4();
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a7, 1, 1, v11);
  v12 = (int *)sub_2457A38B4();
  sub_2457A38BC(v12);
  *(_BYTE *)(a7 + v8) = 2;
  v13 = sub_2457824F0(v32);
  sub_2457A39A8(v14, v15, v16, v17, v18, v13);
  sub_2457A39F8(a1);
  sub_245748B2C(a2);
  sub_2457A0A04(a3, v7);
  sub_2457A39BC(a5);
  v19 = swift_bridgeObjectRelease();
  sub_2457A39D8(v19, v20, v21, v22, v23, v24, v25, v26, a2, a3, a5, a4, a6);
  *(_BYTE *)(a7 + v8) = 2;
  sub_2457A3974();
}

uint64_t *initializeBufferWithCopyOfBuffer for Summary(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_2457BAA14();
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v7))
    {
      v8 = sub_245748A50(&qword_257499C20);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v7);
    }
    v10 = a3[5];
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v10, 1, v7))
    {
      v13 = sub_245748A50(&qword_257499C20);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v11, v12, v7);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v11, 0, 1, v7);
    }
    v14 = a3[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2 + v14, 1, v7))
    {
      v17 = sub_245748A50(&qword_257499C20);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v15, v16, v7);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v15, 0, 1, v7);
    }
    v18 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v19 = (char *)a1 + v18;
    v20 = (char *)a2 + v18;
    swift_bridgeObjectRetain();
    if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v20, 1, v7))
    {
      v21 = sub_245748A50(&qword_257499C20);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v19, v20, v7);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v19, 0, 1, v7);
    }
    v22 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    *((_BYTE *)a1 + v22) = *((_BYTE *)a2 + v22);
    v23 = a3[11];
    v24 = (uint64_t *)((char *)a1 + v23);
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = v25[1];
    swift_bridgeObjectRetain();
    if (v26 == 1)
    {
      memcpy(v24, v25, 0x80uLL);
    }
    else
    {
      *v24 = *v25;
      v24[1] = v26;
      v27 = v25[3];
      v24[2] = v25[2];
      v24[3] = v27;
      v28 = v25[5];
      v24[4] = v25[4];
      v24[5] = v28;
      v29 = v25[7];
      v24[6] = v25[6];
      v24[7] = v29;
      v30 = v25[9];
      v24[8] = v25[8];
      v24[9] = v30;
      v31 = v25[11];
      v24[10] = v25[10];
      v24[11] = v31;
      v32 = v25[13];
      v24[12] = v25[12];
      v24[13] = v32;
      v33 = v25[14];
      v34 = v25[15];
      v24[14] = v33;
      v24[15] = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t destroy for Summary(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = sub_2457BAA14();
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v5, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v5, v4);
  v6 = a1 + a2[6];
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v6, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v6, v4);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[8];
  if (!_s4Sage24ClassificationXPCRequestC7RequestOwet_0(v7, 1, v4))
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v7, v4);
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[11] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

char *initializeWithCopy for Summary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_2457BAA14();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_245748A50(&qword_257499C20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_245748A50(&qword_257499C20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v9, v10, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v12], 1, v6))
  {
    v15 = sub_245748A50(&qword_257499C20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v13, v14, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v13, 0, 1, v6);
  }
  v16 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  swift_bridgeObjectRetain();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v18, 1, v6))
  {
    v19 = sub_245748A50(&qword_257499C20);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v17, v18, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v17, 0, 1, v6);
  }
  v20 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  a1[v20] = a2[v20];
  v21 = a3[11];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = *((_QWORD *)v23 + 1);
  swift_bridgeObjectRetain();
  if (v24 == 1)
  {
    memcpy(v22, v23, 0x80uLL);
  }
  else
  {
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *((_QWORD *)v22 + 1) = v24;
    v25 = *((_QWORD *)v23 + 3);
    *((_QWORD *)v22 + 2) = *((_QWORD *)v23 + 2);
    *((_QWORD *)v22 + 3) = v25;
    v26 = *((_QWORD *)v23 + 5);
    *((_QWORD *)v22 + 4) = *((_QWORD *)v23 + 4);
    *((_QWORD *)v22 + 5) = v26;
    v27 = *((_QWORD *)v23 + 7);
    *((_QWORD *)v22 + 6) = *((_QWORD *)v23 + 6);
    *((_QWORD *)v22 + 7) = v27;
    v28 = *((_QWORD *)v23 + 9);
    *((_QWORD *)v22 + 8) = *((_QWORD *)v23 + 8);
    *((_QWORD *)v22 + 9) = v28;
    v29 = *((_QWORD *)v23 + 11);
    *((_QWORD *)v22 + 10) = *((_QWORD *)v23 + 10);
    *((_QWORD *)v22 + 11) = v29;
    v30 = *((_QWORD *)v23 + 13);
    *((_QWORD *)v22 + 12) = *((_QWORD *)v23 + 12);
    *((_QWORD *)v22 + 13) = v30;
    v31 = *((_QWORD *)v23 + 14);
    v32 = *((_QWORD *)v23 + 15);
    *((_QWORD *)v22 + 14) = v31;
    *((_QWORD *)v22 + 15) = v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

char *assignWithCopy for Summary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_2457BAA14();
  v7 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a1, 1, v6);
  v8 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_245748A50(&qword_257499C20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 24))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v11], 1, v6);
  v15 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v13, 1, v6);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v12, v13, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v12, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v16 = *(_QWORD *)(v6 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
LABEL_12:
    v17 = sub_245748A50(&qword_257499C20);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 24))(v12, v13, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v18], 1, v6);
  v22 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v19, v20, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  v23 = *(_QWORD *)(v6 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v6);
LABEL_18:
    v24 = sub_245748A50(&qword_257499C20);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 24))(v19, v20, v6);
LABEL_19:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v25], 1, v6);
  v29 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v27, 1, v6);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(v26, v27, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v26, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  v30 = *(_QWORD *)(v6 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v6);
LABEL_24:
    v31 = sub_245748A50(&qword_257499C20);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 24))(v26, v27, v6);
LABEL_25:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[a3[10]] = a2[a3[10]];
  v32 = a3[11];
  v33 = &a1[v32];
  v34 = &a2[v32];
  v35 = *(_QWORD *)&a1[v32 + 8];
  v36 = *((_QWORD *)v34 + 1);
  if (v35 != 1)
  {
    if (v36 != 1)
    {
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
      *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
      *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v33 + 6) = *((_QWORD *)v34 + 6);
      *((_QWORD *)v33 + 7) = *((_QWORD *)v34 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v33 + 8) = *((_QWORD *)v34 + 8);
      *((_QWORD *)v33 + 9) = *((_QWORD *)v34 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v33 + 10) = *((_QWORD *)v34 + 10);
      *((_QWORD *)v33 + 11) = *((_QWORD *)v34 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v33 + 12) = *((_QWORD *)v34 + 12);
      *((_QWORD *)v33 + 13) = *((_QWORD *)v34 + 13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *((_QWORD *)v33 + 14) = *((_QWORD *)v34 + 14);
      *((_QWORD *)v33 + 15) = *((_QWORD *)v34 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_245752EBC((uint64_t)v33);
    goto LABEL_30;
  }
  if (v36 == 1)
  {
LABEL_30:
    memcpy(v33, v34, 0x80uLL);
    return a1;
  }
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
  *((_QWORD *)v33 + 3) = *((_QWORD *)v34 + 3);
  *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
  *((_QWORD *)v33 + 5) = *((_QWORD *)v34 + 5);
  *((_QWORD *)v33 + 6) = *((_QWORD *)v34 + 6);
  *((_QWORD *)v33 + 7) = *((_QWORD *)v34 + 7);
  *((_QWORD *)v33 + 8) = *((_QWORD *)v34 + 8);
  *((_QWORD *)v33 + 9) = *((_QWORD *)v34 + 9);
  *((_QWORD *)v33 + 10) = *((_QWORD *)v34 + 10);
  *((_QWORD *)v33 + 11) = *((_QWORD *)v34 + 11);
  *((_QWORD *)v33 + 12) = *((_QWORD *)v34 + 12);
  *((_QWORD *)v33 + 13) = *((_QWORD *)v34 + 13);
  *((_QWORD *)v33 + 14) = *((_QWORD *)v34 + 14);
  *((_QWORD *)v33 + 15) = *((_QWORD *)v34 + 15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

char *initializeWithTake for Summary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;

  v6 = sub_2457BAA14();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6))
  {
    v7 = sub_245748A50(&qword_257499C20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
  }
  v8 = a3[5];
  v9 = &a1[v8];
  v10 = &a2[v8];
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v8], 1, v6))
  {
    v11 = sub_245748A50(&qword_257499C20);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v9, v10, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v9, 0, 1, v6);
  }
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v12], 1, v6))
  {
    v15 = sub_245748A50(&qword_257499C20);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v13, v14, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v13, 0, 1, v6);
  }
  v16 = a3[8];
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  v17 = &a1[v16];
  v18 = &a2[v16];
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a2[v16], 1, v6))
  {
    v19 = sub_245748A50(&qword_257499C20);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v17, v18, v6);
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v17, 0, 1, v6);
  }
  v20 = a3[10];
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  a1[v20] = a2[v20];
  memcpy(&a1[a3[11]], &a2[a3[11]], 0x80uLL);
  return a1;
}

char *assignWithTake for Summary(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v6 = sub_2457BAA14();
  v7 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a1, 1, v6);
  v8 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)a2, 1, v6);
  if (v7)
  {
    if (!v8)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  v9 = *(_QWORD *)(v6 - 8);
  if (v8)
  {
    (*(void (**)(char *, uint64_t))(v9 + 8))(a1, v6);
LABEL_6:
    v10 = sub_245748A50(&qword_257499C20);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(a1, a2, v6);
LABEL_7:
  v11 = a3[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v11], 1, v6);
  v15 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v13, 1, v6);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v12, v13, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v12, 0, 1, v6);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  v16 = *(_QWORD *)(v6 - 8);
  if (v15)
  {
    (*(void (**)(char *, uint64_t))(v16 + 8))(v12, v6);
LABEL_12:
    v17 = sub_245748A50(&qword_257499C20);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v16 + 40))(v12, v13, v6);
LABEL_13:
  v18 = a3[6];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v18], 1, v6);
  v22 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v20, 1, v6);
  if (v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v19, v20, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v19, 0, 1, v6);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  v23 = *(_QWORD *)(v6 - 8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v19, v6);
LABEL_18:
    v24 = sub_245748A50(&qword_257499C20);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v23 + 40))(v19, v20, v6);
LABEL_19:
  *(_QWORD *)&a1[a3[7]] = *(_QWORD *)&a2[a3[7]];
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)&a1[v25], 1, v6);
  v29 = _s4Sage24ClassificationXPCRequestC7RequestOwet_0((uint64_t)v27, 1, v6);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(v26, v27, v6);
      _s4Sage24ClassificationXPCRequestC7RequestOwst_0((uint64_t)v26, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_24;
  }
  v30 = *(_QWORD *)(v6 - 8);
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v30 + 8))(v26, v6);
LABEL_24:
    v31 = sub_245748A50(&qword_257499C20);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v30 + 40))(v26, v27, v6);
LABEL_25:
  *(_QWORD *)&a1[a3[9]] = *(_QWORD *)&a2[a3[9]];
  swift_bridgeObjectRelease();
  v32 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v33 = &a1[v32];
  v34 = &a2[v32];
  if (*(_QWORD *)&a1[v32 + 8] != 1)
  {
    v35 = *((_QWORD *)v34 + 1);
    if (v35 != 1)
    {
      *(_QWORD *)v33 = *(_QWORD *)v34;
      *((_QWORD *)v33 + 1) = v35;
      swift_bridgeObjectRelease();
      v36 = *((_QWORD *)v34 + 3);
      *((_QWORD *)v33 + 2) = *((_QWORD *)v34 + 2);
      *((_QWORD *)v33 + 3) = v36;
      swift_bridgeObjectRelease();
      v37 = *((_QWORD *)v34 + 5);
      *((_QWORD *)v33 + 4) = *((_QWORD *)v34 + 4);
      *((_QWORD *)v33 + 5) = v37;
      swift_bridgeObjectRelease();
      v38 = *((_QWORD *)v34 + 7);
      *((_QWORD *)v33 + 6) = *((_QWORD *)v34 + 6);
      *((_QWORD *)v33 + 7) = v38;
      swift_bridgeObjectRelease();
      v39 = *((_QWORD *)v34 + 9);
      *((_QWORD *)v33 + 8) = *((_QWORD *)v34 + 8);
      *((_QWORD *)v33 + 9) = v39;
      swift_bridgeObjectRelease();
      v40 = *((_QWORD *)v34 + 11);
      *((_QWORD *)v33 + 10) = *((_QWORD *)v34 + 10);
      *((_QWORD *)v33 + 11) = v40;
      swift_bridgeObjectRelease();
      v41 = *((_QWORD *)v34 + 13);
      *((_QWORD *)v33 + 12) = *((_QWORD *)v34 + 12);
      *((_QWORD *)v33 + 13) = v41;
      swift_bridgeObjectRelease();
      v42 = *((_QWORD *)v34 + 15);
      *((_QWORD *)v33 + 14) = *((_QWORD *)v34 + 14);
      *((_QWORD *)v33 + 15) = v42;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_245752EBC((uint64_t)&a1[v32]);
  }
  memcpy(v33, v34, 0x80uLL);
  return a1;
}

uint64_t getEnumTagSinglePayload for Summary()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_2457A3544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v8;

  v6 = sub_245748A50(&qword_257499C20);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
    return _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, a2, v6);
  v8 = *(_QWORD *)(a1 + *(int *)(a3 + 36));
  if (v8 >= 0xFFFFFFFF)
    LODWORD(v8) = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Summary()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2457A35CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;

  v8 = sub_245748A50(&qword_257499C20);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, a2, a2, v8);
  }
  else
  {
    *(_QWORD *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
    sub_245749FB4();
  }
}

void sub_2457A363C()
{
  unint64_t v0;

  sub_2457A36D4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_2457A36D4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25749A1F8)
  {
    sub_2457BAA14();
    v0 = sub_2457BB3B0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25749A1F8);
  }
}

uint64_t storeEnumTagSinglePayload for Summary.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_2457A3774 + 4 * byte_2457C56C5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_2457A37A8 + 4 * byte_2457C56C0[v4]))();
}

uint64_t sub_2457A37A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457A37B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457A37B8);
  return result;
}

uint64_t sub_2457A37C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457A37CCLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_2457A37D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457A37D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Summary.CodingKeys()
{
  return &type metadata for Summary.CodingKeys;
}

unint64_t sub_2457A37F8()
{
  unint64_t result;

  result = qword_25749A200;
  if (!qword_25749A200)
  {
    result = MEMORY[0x24953B288](&unk_2457C5854, &type metadata for Summary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A200);
  }
  return result;
}

unint64_t sub_2457A3838()
{
  unint64_t result;

  result = qword_25749A208;
  if (!qword_25749A208)
  {
    result = MEMORY[0x24953B288](&unk_2457C57C4, &type metadata for Summary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A208);
  }
  return result;
}

unint64_t sub_2457A3878()
{
  unint64_t result;

  result = qword_25749A210;
  if (!qword_25749A210)
  {
    result = MEMORY[0x24953B288](&unk_2457C57EC, &type metadata for Summary.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A210);
  }
  return result;
}

uint64_t sub_2457A38B4()
{
  return type metadata accessor for Summary();
}

uint64_t sub_2457A38BC(int *a1)
{
  uint64_t v1;
  uint64_t v2;

  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1 + a1[5], 1, 1, v2);
  _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1 + a1[6], 1, 1, v2);
  *(_QWORD *)(v1 + a1[7]) = 0;
  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1 + a1[8], 1, 1, v2);
}

uint64_t sub_2457A392C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0[1] + 8))(v0[9], v0[8]);
}

uint64_t sub_2457A393C()
{
  return sub_2457BB638();
}

uint64_t sub_2457A394C(uint64_t a1)
{
  uint64_t v1;

  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, v1);
}

uint64_t sub_2457A395C(uint64_t a1, uint64_t a2)
{
  return sub_2457A0A04(a1, a2);
}

uint64_t sub_2457A3964(uint64_t a1, uint64_t a2)
{
  return sub_2457A09B4(a1, a2);
}

uint64_t sub_2457A396C()
{
  return sub_2457BB578();
}

uint64_t sub_2457A3990()
{
  return sub_2457BB638();
}

uint64_t sub_2457A3998(uint64_t a1)
{
  uint64_t v1;

  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1, 1, 1, v1);
}

uint64_t sub_2457A39A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  uint64_t v5;
  va_list va;

  va_start(va, a5);
  return sub_245781C64((uint64_t)va, v5);
}

uint64_t sub_2457A39B4()
{
  return sub_2457BAA14();
}

uint64_t sub_2457A39BC(uint64_t a1)
{
  uint64_t v1;

  return sub_2457A0A04(a1, v1);
}

uint64_t sub_2457A39C4()
{
  uint64_t v0;

  return v0;
}

void sub_2457A39D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v13 + v14) = a12;
  *(_QWORD *)(v13 + *(int *)(v15 + 36)) = a13;
}

uint64_t sub_2457A39EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 - 72) + a1;
}

uint64_t sub_2457A39F8(uint64_t a1)
{
  uint64_t v1;

  return sub_2457A0A04(a1, v1);
}

uint64_t sub_2457A3A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;

  return sub_2457A0A04(a9, v9);
}

uint64_t sub_2457A3A0C(uint64_t a1)
{
  uint64_t v1;

  return sub_245781C64(a1, v1);
}

uint64_t SummarySafetyClassification.isSafe.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

Sage::SummarySafetyClassification __swiftcall SummarySafetyClassification.init(isSafe:)(Sage::SummarySafetyClassification isSafe)
{
  Sage::SummarySafetyClassification *v1;

  v1->isSafe = isSafe.isSafe;
  return isSafe;
}

uint64_t sub_2457A3A24(uint64_t a1, uint64_t a2)
{
  char v3;
  char v4;

  if (a1 == 0x656661537369 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    v4 = 0;
  }
  else
  {
    v3 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    v4 = v3 ^ 1;
  }
  return v4 & 1;
}

uint64_t sub_2457A3AA0()
{
  return 0x656661537369;
}

uint64_t sub_2457A3AB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457A3A24(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_2457A3AE0()
{
  sub_2457A3BDC();
  return sub_2457BB788();
}

uint64_t sub_2457A3B08()
{
  sub_2457A3BDC();
  return sub_2457BB794();
}

void SummarySafetyClassification.encode(to:)(_QWORD *a1)
{
  uint64_t v2;

  sub_245748A50(&qword_25749A218);
  sub_2457A3FDC();
  MEMORY[0x24BDAC7A8](v2);
  sub_245748AD0();
  sub_245749280(a1, a1[3]);
  sub_2457A3BDC();
  sub_2457BB77C();
  sub_2457BB650();
  sub_2457A3FCC();
  sub_245751240();
}

unint64_t sub_2457A3BDC()
{
  unint64_t result;

  result = qword_25749A220;
  if (!qword_25749A220)
  {
    result = MEMORY[0x24953B288](&unk_2457C5A20, &type metadata for SummarySafetyClassification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A220);
  }
  return result;
}

void SummarySafetyClassification.init(from:)(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  char v6;

  sub_245748A50(&qword_25749A228);
  sub_2457A3FDC();
  MEMORY[0x24BDAC7A8](v5);
  sub_245748AD0();
  sub_245749280(a1, a1[3]);
  sub_2457A3BDC();
  sub_2457BB770();
  if (!v2)
  {
    v6 = sub_2457BB590();
    sub_2457A3FCC();
    *a2 = v6 & 1;
  }
  sub_245749564((uint64_t)a1);
  sub_245751240();
}

void sub_2457A3CE4(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  SummarySafetyClassification.init(from:)(a1, a2);
}

void sub_2457A3CF8(_QWORD *a1)
{
  SummarySafetyClassification.encode(to:)(a1);
}

uint64_t getEnumTagSinglePayload for SummarySafetyClassification(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SummarySafetyClassification(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2457A3DF0 + 4 * byte_2457C58D5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2457A3E24 + 4 * byte_2457C58D0[v4]))();
}

uint64_t sub_2457A3E24(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457A3E2C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457A3E34);
  return result;
}

uint64_t sub_2457A3E40(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457A3E48);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2457A3E4C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457A3E54(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SummarySafetyClassification()
{
  return &type metadata for SummarySafetyClassification;
}

uint64_t storeEnumTagSinglePayload for SummarySafetyClassification.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2457A3EB0 + 4 * byte_2457C58DA[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2457A3ED0 + 4 * byte_2457C58DF[v4]))();
}

_BYTE *sub_2457A3EB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2457A3ED0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2457A3ED8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2457A3EE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2457A3EE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2457A3EF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SummarySafetyClassification.CodingKeys()
{
  return &type metadata for SummarySafetyClassification.CodingKeys;
}

unint64_t sub_2457A3F10()
{
  unint64_t result;

  result = qword_25749A230;
  if (!qword_25749A230)
  {
    result = MEMORY[0x24953B288](&unk_2457C59F8, &type metadata for SummarySafetyClassification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A230);
  }
  return result;
}

unint64_t sub_2457A3F50()
{
  unint64_t result;

  result = qword_25749A238;
  if (!qword_25749A238)
  {
    result = MEMORY[0x24953B288](&unk_2457C5968, &type metadata for SummarySafetyClassification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A238);
  }
  return result;
}

unint64_t sub_2457A3F90()
{
  unint64_t result;

  result = qword_25749A240;
  if (!qword_25749A240)
  {
    result = MEMORY[0x24953B288](&unk_2457C5990, &type metadata for SummarySafetyClassification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A240);
  }
  return result;
}

uint64_t sub_2457A3FCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

void sub_2457A3FF0(char a1)
{
  sub_2457A4730(0, a1);
}

void sub_2457A3FFC()
{
  sub_2457514C4();
  sub_2457ACF80();
  sub_2457513DC();
  sub_24575118C();
}

void sub_2457A4020()
{
  sub_2457A405C();
}

void sub_2457A402C()
{
  sub_2457A405C();
}

void sub_2457A4038()
{
  sub_2457A4600();
}

void sub_2457A4044()
{
  sub_2457A405C();
}

void sub_2457A4050()
{
  sub_2457A405C();
}

void sub_2457A405C()
{
  uint64_t v0;

  v0 = sub_2457514C4();
  sub_2457AD2D4(v0);
  sub_2457513DC();
  sub_24575118C();
}

uint64_t sub_2457A4088()
{
  return sub_2457A4678();
}

uint64_t sub_2457A4094(uint64_t a1, char a2)
{
  if (!a2)
    sub_2457ACF28();
  sub_2457ACF5C();
  return sub_24575131C();
}

void sub_2457A40F8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2457A4140()
{
  sub_2457ACF5C();
  return sub_24575131C();
}

uint64_t sub_2457A41C4()
{
  sub_2457BB1C4();
  return swift_bridgeObjectRelease();
}

void sub_2457A4218(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2457A4254()
{
  sub_2457BB1C4();
  return swift_bridgeObjectRelease();
}

void sub_2457A4370(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2457A43B4()
{
  sub_2457ACF5C();
  return sub_24575131C();
}

void sub_2457A4414()
{
  sub_2457AD218();
  JUMPOUT(0x2457A4404);
}

void sub_2457A4420()
{
  JUMPOUT(0x2457A4404);
}

uint64_t sub_2457A4444()
{
  return sub_2457BB1C4();
}

uint64_t sub_2457A445C()
{
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457BB1C4();
  return swift_bridgeObjectRelease();
}

void sub_2457A44A8(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2457A44E8()
{
  sub_2457ACF5C();
  return sub_24575131C();
}

void sub_2457A4534(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_2457A4578()
{
  sub_2457ACF5C();
  return sub_24575131C();
}

void sub_2457A45E8()
{
  sub_2457A4704();
}

void sub_2457A45F4()
{
  sub_2457A4704();
}

void sub_2457A4600()
{
  sub_245767DD8();
  SummarizationClient.UseCase.rawValue.getter();
  sub_2457ACF5C();
  sub_245751474();
  sub_2457513DC();
  sub_24575118C();
}

void sub_2457A4648()
{
  sub_245767DD8();
  sub_2457ACF80();
  sub_2457513DC();
  sub_24575118C();
}

void sub_2457A466C()
{
  sub_2457A4704();
}

uint64_t sub_2457A4678()
{
  sub_2457BB728();
  sub_2457BB1C4();
  swift_bridgeObjectRelease();
  return sub_2457BB764();
}

void sub_2457A46F8()
{
  sub_2457A4704();
}

void sub_2457A4704()
{
  uint64_t v0;

  v0 = sub_245767DD8();
  sub_2457AD2D4(v0);
  sub_2457513DC();
  sub_24575118C();
}

void sub_2457A4730(uint64_t a1, char a2)
{
  sub_245767DD8();
  if (!a2)
    sub_2457ACF28();
  sub_2457ACF5C();
  sub_245751474();
  sub_2457513DC();
  sub_24575118C();
}

void *sub_2457A47A8()
{
  qword_254416DE8 = (uint64_t)&unk_2574B5AE8;
  return &unk_2574B5AE8;
}

id static TextCompositionXPCService.interface.getter()
{
  if (qword_254416DD0 != -1)
    swift_once();
  sub_245756E1C();
  return (id)qword_254416DE8;
}

void static TextCompositionXPCService.interface.setter(uint64_t a1)
{
  void *v2;

  if (qword_254416DD0 != -1)
    swift_once();
  sub_245756E1C();
  v2 = (void *)qword_254416DE8;
  qword_254416DE8 = a1;

  sub_2457512D4();
}

void static TextCompositionXPCService.interface.modify()
{
  if (qword_254416DD0 != -1)
    swift_once();
  sub_245756E1C();
  sub_245748A90();
}

uint64_t static TextCompositionXPCService.serviceName.getter()
{
  return sub_2457AD09C();
}

void static TextCompositionXPCService.serviceName.setter(uint64_t a1, uint64_t a2)
{
  sub_245756FBC(a1, a2, qword_25749A248);
}

void static TextCompositionXPCService.serviceName.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

uint64_t static TextCompositionXPCService.entitlementName.getter()
{
  return sub_2457AD09C();
}

uint64_t sub_2457A4948()
{
  sub_245756E1C();
  sub_2457AD164();
  return sub_2457AD128();
}

void static TextCompositionXPCService.entitlementName.setter(uint64_t a1, uint64_t a2)
{
  sub_245756FBC(a1, a2, qword_25749A258);
}

void static TextCompositionXPCService.entitlementName.modify()
{
  sub_245756E1C();
  sub_245748A90();
}

uint64_t sub_2457A49C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  sub_245748A50(&qword_254416E30);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2457BDEE0;
  *(_QWORD *)(v0 + 32) = sel_reviewWithString_range_options_with_;
  *(_QWORD *)(v0 + 40) = 0;
  sub_245748A50(&qword_254416E38);
  v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_2457BF810;
  sub_245769EE0(0, &qword_254416E08);
  v3 = v2;
  *(_QWORD *)(v1 + 56) = sub_245748A50(&qword_254416E10);
  *(_QWORD *)(v1 + 32) = v3;
  sub_245769EE0(0, &qword_254416DF0);
  v5 = v4;
  *(_QWORD *)(v1 + 88) = sub_245748A50(&qword_254416DF8);
  *(_QWORD *)(v1 + 64) = v5;
  sub_245769EE0(0, &qword_254416E00);
  v6 = (void *)MEMORY[0x24953AA54](v1);
  sub_245769EE0(0, &qword_254416E20);
  sub_245769E90();
  v7 = sub_2457BB320();

  v8 = sub_245769158(v7);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 48) = v8;
  qword_254416DE0 = v0;
  return result;
}

uint64_t static TextCompositionXPCService.selectorClasses.getter()
{
  if (qword_254416DD8 != -1)
    swift_once();
  sub_245756E1C();
  return swift_bridgeObjectRetain();
}

void static TextCompositionXPCService.selectorClasses.setter(uint64_t a1)
{
  if (qword_254416DD8 != -1)
    swift_once();
  sub_245756E1C();
  qword_254416DE0 = a1;
  swift_bridgeObjectRelease();
  sub_2457512D4();
}

void static TextCompositionXPCService.selectorClasses.modify()
{
  if (qword_254416DD8 != -1)
    swift_once();
  sub_245756E1C();
  sub_245748A90();
}

uint64_t sub_2457A4C5C()
{
  uint64_t v0;

  v0 = sub_2457BB08C();
  sub_245756D18(v0, qword_254416DB0);
  sub_24574E0F8(v0, (uint64_t)qword_254416DB0);
  return sub_2457BAEB8();
}

void static TextCompositionXPCService.logger.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_254416DC8 != -1)
    swift_once();
  v2 = sub_245751504();
  v3 = sub_24574E0F8(v2, (uint64_t)qword_254416DB0);
  sub_245756E1C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
  sub_245756F1C();
}

void static TextCompositionXPCService.logger.setter(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (qword_254416DC8 != -1)
    swift_once();
  v2 = sub_245751504();
  v3 = sub_24574E0F8(v2, (uint64_t)qword_254416DB0);
  sub_245756E1C();
  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
  sub_245756F1C();
}

void static TextCompositionXPCService.logger.modify()
{
  uint64_t v0;

  if (qword_254416DC8 != -1)
    swift_once();
  v0 = sub_245751504();
  sub_24574E0F8(v0, (uint64_t)qword_254416DB0);
  sub_245756E1C();
  sub_245748A90();
}

uint64_t sub_2457A4E44()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A268 = result;
  unk_25749A270 = v1;
  return result;
}

void static TextCompositionClient.textCompositionIsPrecomputationRequestKey.getter()
{
  sub_2457ACC40(&qword_257497E68);
}

uint64_t sub_2457A4E8C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A278 = result;
  unk_25749A280 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientRespondOnlyIfCached.getter()
{
  sub_2457ACC40(&qword_257497E70);
}

uint64_t sub_2457A4ED4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A288 = result;
  unk_25749A290 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientAppProcessIdentifierKey.getter()
{
  sub_2457ACC40(&qword_257497E78);
}

uint64_t sub_2457A4F1C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A298 = result;
  unk_25749A2A0 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientProcessIdentifierKey.getter()
{
  sub_2457ACC40(&qword_257497E80);
}

uint64_t sub_2457A4F64()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_2574977E8 = result;
  unk_2574977F0 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientTokenKey.getter()
{
  sub_2457ACC40(&qword_2574977F8);
}

id sub_2457A4FAC()
{
  qword_25749A2A8 = *MEMORY[0x24BEB4C88];
  return (id)qword_25749A2A8;
}

id static TextCompositionClient.textCompositionClientUseCaseIdentifierKey.getter()
{
  if (qword_257497E88 != -1)
    swift_once();
  return (id)qword_25749A2A8;
}

uint64_t sub_2457A5004()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A2B0 = result;
  *(_QWORD *)algn_25749A2B8 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientUserPreferredLanguageKey.getter()
{
  sub_2457ACC40(&qword_257497E90);
}

uint64_t sub_2457A504C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A2C0 = result;
  *(_QWORD *)algn_25749A2C8 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientResultIndexKey.getter()
{
  sub_2457ACC40(&qword_257497E98);
}

uint64_t sub_2457A5094()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A2D0 = result;
  *(_QWORD *)algn_25749A2D8 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientResultCountKey.getter()
{
  sub_2457ACC40(&qword_257497EA0);
}

uint64_t sub_2457A50DC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A2E0 = result;
  *(_QWORD *)algn_25749A2E8 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientFinishedKey.getter()
{
  sub_2457ACC40(&qword_257497EA8);
}

uint64_t sub_2457A5124()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A2F0 = result;
  *(_QWORD *)algn_25749A2F8 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientRewritingTypeKey.getter()
{
  sub_2457ACC40(&qword_257497EB0);
}

uint64_t sub_2457A516C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A300 = result;
  *(_QWORD *)algn_25749A308 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientLanguageKey.getter()
{
  sub_2457ACC40(&qword_257497EB8);
}

uint64_t sub_2457A51B4()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A310 = result;
  *(_QWORD *)algn_25749A318 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientInstructionsKey.getter()
{
  sub_2457ACC40(&qword_257497EC0);
}

uint64_t sub_2457A51FC()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A320 = result;
  *(_QWORD *)algn_25749A328 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientSeedKey.getter()
{
  sub_2457ACC40(&qword_257497EC8);
}

uint64_t sub_2457A5244()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A330 = result;
  *(_QWORD *)algn_25749A338 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientSmartQuotesTypeKey.getter()
{
  sub_2457ACC40(&qword_257497ED0);
}

uint64_t sub_2457A528C()
{
  uint64_t result;
  uint64_t v1;

  result = sub_2457BB1AC();
  qword_25749A340 = result;
  *(_QWORD *)algn_25749A348 = v1;
  return result;
}

void static TextCompositionClient.textCompositionClientSmartDashesTypeKey.getter()
{
  sub_2457ACC40(&qword_257497ED8);
}

void sub_2457A52D4(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  sub_2457AD164();
  sub_2457AD128();
  sub_245748A90();
}

Sage::TextCompositionClient::RewritingType_optional __swiftcall TextCompositionClient.RewritingType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  char v4;
  Sage::TextCompositionClient::RewritingType_optional result;

  v2 = v1;
  v3 = sub_2457BB524();
  sub_245751474();
  v4 = 11;
  if (v3 < 0xB)
    v4 = v3;
  *v2 = v4;
  sub_245749FB4();
  return result;
}

uint64_t TextCompositionClient.RewritingType.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2457A5388 + 4 * byte_2457C5A91[*v0]))(0x636967614DLL, 0xE500000000000000);
}

uint64_t sub_2457A5388()
{
  return 0x657369636E6F43;
}

uint64_t sub_2457A53A0()
{
  return 0x796C646E65697246;
}

uint64_t sub_2457A53B8()
{
  return 0x69737365666F7250;
}

uint64_t sub_2457A53D8()
{
  return 0x6574696C6F50;
}

uint64_t sub_2457A53EC()
{
  return 0x65646E456E65704FLL;
}

unint64_t sub_2457A5408()
{
  return 0xD000000000000011;
}

uint64_t sub_2457A5424()
{
  return 0x7374656C6C7542;
}

uint64_t sub_2457A543C()
{
  return 0x79617761656B6154;
}

uint64_t sub_2457A545C()
{
  return 0x616572666F6F7250;
}

uint64_t sub_2457A547C()
{
  return 0x73656C626154;
}

void sub_2457A5490(char *a1)
{
  sub_2457B5160(*a1);
}

void sub_2457A549C()
{
  sub_2457A405C();
}

void sub_2457A54BC(uint64_t a1)
{
  char *v1;

  sub_2457A4218(a1, *v1);
}

void sub_2457A54C4()
{
  sub_2457A4704();
}

Sage::TextCompositionClient::RewritingType_optional sub_2457A54E4(Swift::String *a1)
{
  return TextCompositionClient.RewritingType.init(rawValue:)(*a1);
}

uint64_t sub_2457A54F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = TextCompositionClient.RewritingType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Sage::TextCompositionClient::TCDocumentType_optional __swiftcall TextCompositionClient.TCDocumentType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  char v4;
  Sage::TextCompositionClient::TCDocumentType_optional result;

  v2 = v1;
  v3 = sub_2457BB524();
  sub_245751474();
  if (v3 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v3)
    v4 = 0;
  *v2 = v4;
  sub_245749FB4();
  return result;
}

uint64_t TextCompositionClient.TCDocumentType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x7373654D74786554;
  else
    return 0x7373654D6C69614DLL;
}

uint64_t sub_2457A55A4(char *a1, char *a2)
{
  return sub_2457B50D0(*a1, *a2);
}

uint64_t sub_2457A55B0()
{
  return sub_2457A4088();
}

uint64_t sub_2457A55B8()
{
  return sub_2457A41C4();
}

uint64_t sub_2457A55C0()
{
  return sub_2457A4678();
}

Sage::TextCompositionClient::TCDocumentType_optional sub_2457A55C8(Swift::String *a1)
{
  return TextCompositionClient.TCDocumentType.init(rawValue:)(*a1);
}

uint64_t sub_2457A55D4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = TextCompositionClient.TCDocumentType.rawValue.getter();
  *a1 = result;
  a1[1] = 0xEB00000000656761;
  return result;
}

id TextCompositionClient.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

uint64_t sub_2457A5624(uint64_t a1, char a2, uint64_t a3, char a4, uint64_t a5, char a6)
{
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  if (!a1)
    a1 = sub_2457BB170();
  v16 = a1;
  v11 = qword_257497EA8;
  swift_bridgeObjectRetain();
  if (v11 != -1)
    swift_once();
  v15 = MEMORY[0x24BEE1328];
  LOBYTE(v14[0]) = a2 & 1;
  swift_bridgeObjectRetain();
  sub_24576BB20((uint64_t)v14);
  v12 = MEMORY[0x24BEE1768];
  if ((a4 & 1) == 0)
  {
    if (qword_257497E98 != -1)
      swift_once();
    v15 = v12;
    v14[0] = a3;
    swift_bridgeObjectRetain();
    sub_24576BB20((uint64_t)v14);
  }
  if ((a6 & 1) == 0)
  {
    if (qword_257497EA0 != -1)
      swift_once();
    v15 = v12;
    v14[0] = a5;
    swift_bridgeObjectRetain();
    sub_24576BB20((uint64_t)v14);
  }
  return v16;
}

uint64_t sub_2457A57DC(uint64_t result)
{
  uint64_t v1;
  unint64_t v2;
  char v3;
  unsigned __int8 v4;
  __int128 v5;
  __int128 v6;

  if (result)
  {
    v1 = result;
    if (*(_QWORD *)(result + 16))
    {
      swift_bridgeObjectRetain();
      v2 = sub_245773CF8();
      if ((v3 & 1) != 0)
      {
        sub_245774B74(*(_QWORD *)(v1 + 56) + 32 * v2, (uint64_t)&v5);
        sub_245751474();
        if (*((_QWORD *)&v6 + 1))
        {
          result = swift_dynamicCast();
          if ((_DWORD)result)
            return v4;
          return result;
        }
      }
      else
      {
        v5 = 0u;
        v6 = 0u;
        sub_245751474();
      }
    }
    else
    {
      v5 = 0u;
      v6 = 0u;
    }
    sub_24579FA80((uint64_t)&v5, &qword_2574984A8);
    return 0;
  }
  return result;
}

void sub_2457A58AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  NSObject *v11;
  id v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  os_log_type_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  _QWORD v22[6];

  sub_245759004();
  v5 = v4;
  sub_245751504();
  sub_2457ACED0();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = ((char *)v22 - v10);
  if (v5 >= 0x7FFFFFFFFFFFFFFFLL)
  {
    sub_2457BB080();
    sub_2457BB068();
    v20 = sub_2457A0964();
    if (os_log_type_enabled(v11, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)v21 = 134217984;
      v22[2] = v5;
      sub_2457BB3BC();
      _os_log_impl(&dword_245746000, v11, v20, "Error cancelling request: %lu - token value needs to be smaller than MAXINT", v21, 0xCu);
      sub_24575105C();
    }

    (*(void (**)(NSObject *, uint64_t))(v2 + 8))(v11, v0);
    goto LABEL_13;
  }
  v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
  objc_msgSend(v12, sel_requestCancellationForToken_, v5);

  v14 = *(void **)(v1 + OBJC_IVAR___TextCompositionClient_client);
  if (v14)
  {
    MEMORY[0x24BDAC7A8](v13);
    v22[-2] = v5;
    sub_245748AF8();
    sub_2457AD118();
    if (v5)
    {
      v15 = swift_release();
      if (qword_254416DC8 != -1)
        v15 = swift_once();
      sub_2457ACD00(v15, (uint64_t)qword_254416DB0);
      sub_2457ACE3C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
      sub_2457511D8();
      sub_2457511D8();
      sub_2457AD094();
      v16 = sub_2457A0964();
      if (sub_2457ACE5C(v16))
      {
        sub_2457ACE4C();
        v22[0] = sub_2457ACE6C();
        sub_2457ACDB4(5.7779e-34);
        v17 = sub_245776FD0();
        sub_2457ACC80(v17);
        *(_QWORD *)v22[0] = v3;
        sub_245751068();
        sub_245751068();
        sub_2457ACDDC(&dword_245746000, v18, v19, "Cancellation error %@");
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        sub_2457AD2EC();
        sub_24575105C();
      }
      sub_245751068();
      sub_245751068();
      sub_245751068();

      (*(void (**)(char *, uint64_t))(v2 + 8))(v9, v0);
    }
    else
    {
      swift_release();
    }
LABEL_13:
    sub_245758FB4();
    return;
  }
  __break(1u);
}

id sub_2457A5B4C(id result, uint64_t a2)
{
  if ((a2 & 0x8000000000000000) == 0)
    return objc_msgSend(result, sel_cancelWithToken_, a2);
  __break(1u);
  return result;
}

void sub_2457A5B64()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id v4;
  uint64_t v5;

  sub_245759004();
  v2 = v1;
  sub_245751504();
  sub_2457ACED0();
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
  objc_msgSend(v4, sel_requestCancellationForToken_, v2);

  if (*(_QWORD *)(v0 + OBJC_IVAR___TextCompositionClient_client))
  {
    MEMORY[0x24BDAC7A8](v5);
    swift_retain();
    sub_2457BAE64();
    swift_release();
    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

void sub_2457A5D34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  id v8;
  id v9;
  id v10;
  void *v11;
  _BYTE v12[48];

  sub_245759004();
  v1 = v0;
  v3 = v2;
  v4 = sub_245751504();
  MEMORY[0x24BDAC7A8](v4);
  sub_24575136C();
  sub_2457BAA14();
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v5);
  sub_245749FF4();
  sub_245777040(v6, (unint64_t *)&qword_257499E50);
  sub_2457BAA08();
  v7 = (id)sub_2457BB380();
  v8 = objc_msgSend(v7, sel_length);
  v9 = objc_allocWithZone(MEMORY[0x24BEB4C00]);
  v10 = sub_2457AB7C0(v7, 0, (uint64_t)v8, 0);
  if (*(_QWORD *)(v1 + OBJC_IVAR___TextCompositionClient_client))
  {
    v11 = v10;
    *(_QWORD *)&v12[-16] = MEMORY[0x24BDAC7A8](v10);
    *(_QWORD *)&v12[-8] = v3;
    sub_245748AF8();
    sub_2457BAE64();
    swift_release();

    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

void sub_2457A5FBC(void *a1, uint64_t a2)
{
  id v4;

  swift_unknownObjectRetain();
  v4 = (id)sub_2457BB224();
  objc_msgSend(a1, sel_prewarmWithInput_rewritingTypes_, a2, v4);
  swift_unknownObjectRelease();

}

void sub_2457A602C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_245759004();
  sub_245751504();
  sub_2457ACED0();
  MEMORY[0x24BDAC7A8](v1);
  sub_24575136C();
  if (*(_QWORD *)(v0 + OBJC_IVAR___TextCompositionClient_client))
  {
    MEMORY[0x24BDAC7A8](v2);
    sub_245748AF8();
    sub_2457BAE64();
    swift_release();
    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

void sub_2457A61C8(void *a1)
{
  id v2;

  swift_unknownObjectRetain();
  v2 = (id)sub_2457BB1A0();
  objc_msgSend(a1, sel_prewarmSmartRepliesWithDocumentType_, v2);
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();

}

void sub_2457A6260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  uint64_t v8;
  os_log_type_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_245759004();
  v4 = v3;
  sub_245751504();
  sub_2457ACED0();
  MEMORY[0x24BDAC7A8](v5);
  sub_24575136C();
  v7 = *(void **)(v0 + OBJC_IVAR___TextCompositionClient_client);
  if (v7)
  {
    MEMORY[0x24BDAC7A8](v6);
    sub_245748AF8();
    sub_2457AD118();
    if (v4)
    {
      v8 = swift_release();
      if (qword_254416DC8 != -1)
        v8 = swift_once();
      sub_2457ACD00(v8, (uint64_t)qword_254416DB0);
      sub_2457ACE3C(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
      sub_2457511D8();
      sub_2457511D8();
      sub_2457AD094();
      v9 = sub_2457A0964();
      if (sub_2457ACE5C(v9))
      {
        sub_2457ACE4C();
        v10 = (_QWORD *)sub_2457ACE6C();
        sub_2457ACDB4(5.7779e-34);
        v11 = sub_245776FD0();
        sub_2457ACC80(v11);
        *v10 = v2;
        sub_245751068();
        sub_245751068();
        sub_2457ACDDC(&dword_245746000, v12, v13, "Prewarming error %@");
        sub_245748A50((uint64_t *)&unk_25749A9C0);
        sub_2457ACF40();
        sub_24575105C();
      }
      sub_245751068();
      sub_245751068();
      sub_245751068();

      sub_24578072C(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    }
    else
    {
      swift_release();
    }
    sub_245758FB4();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457A63F8(void *a1, char a2, uint64_t a3)
{
  uint64_t v5;

  if ((a2 & 1) != 0)
    v5 = 0x7373654D74786554;
  else
    v5 = 0x7373654D6C69614DLL;
  swift_unknownObjectRetain();
  sub_2457A647C(v5, 0xEB00000000656761, a3, a1);
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457A647C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  uint64_t v7;
  id v8;

  v6 = (void *)sub_2457BB1A0();
  if (a3)
    v7 = sub_2457BB158();
  else
    v7 = 0;
  v8 = (id)v7;
  objc_msgSend(a4, sel_prewarmSmartRepliesWithDocumentType_options_, v6);

}

id sub_2457A6508(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v10;
  id location;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  unint64_t v17;
  id v18;
  uint64_t v19;
  NSUInteger v20;
  uint64_t v21;
  NSUInteger v22;
  NSUInteger v23;
  id v24;
  void *v25;
  NSUInteger v26;
  NSUInteger length;
  NSRange v28;
  id v29;
  uint64_t v31;
  id v32[5];
  NSRange v33;
  NSRange v34;

  v32[4] = *(id *)MEMORY[0x24BDAC8D0];
  v10 = *a4;
  location = (id)sub_2457BA9E4();
  if (a5)
    v12 = a5;
  else
    v12 = sub_2457BB170();
  if ((_DWORD)v10 != 11)
  {
    v13 = qword_257497EB0;
    sub_2457A05F0();
    if (v13 != -1)
      swift_once();
    sub_2457AD1D8();
    __asm { BR              X11 }
  }
  sub_2457A05F0();
  v14 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
  v32[0] = 0;
  v15 = sub_2457AB9C8(a1, a2, a3, v12, (uint64_t)v32, v14);

  v16 = v32[0];
  if (v15)
  {
    sub_245769EE0(0, (unint64_t *)&unk_25749A358);
    v17 = sub_2457BB230();
    v18 = v16;

    if (v17 >> 62)
    {
      swift_bridgeObjectRetain();
      v19 = sub_2457BB500();
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = *(_QWORD *)((v17 & 0xFFFFFFFFFFFFF8) + 0x10);
    }
    v31 = v5;
    if (v19)
    {
      if (v19 < 1)
        __break(1u);
      v20 = 0;
      v21 = 0;
      v22 = 0;
      v23 = (NSUInteger)location;
      do
      {
        if ((v17 & 0xC000000000000001) != 0)
          v24 = (id)MEMORY[0x24953AB20](v21, v17);
        else
          v24 = *(id *)(v17 + 8 * v21 + 32);
        v25 = v24;
        location = objc_msgSend(v24, sel_actualRange, v31);
        length = v26;
        if (v20)
        {
          v33.location = v23;
          v33.length = v22;
          v34.location = (NSUInteger)location;
          v34.length = length;
          v28 = NSUnionRange(v33, v34);
          location = (id)v28.location;
          length = v28.length;
        }
        ++v21;

        v20 = length;
        v23 = (NSUInteger)location;
        v22 = length;
      }
      while (v19 != v21);
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    v29 = v32[0];
    sub_2457BAA38();

    swift_willThrow();
  }
  return location;
}

id sub_2457A688C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  id v7;

  v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
  v7 = objc_msgSend(v6, sel_canHandleAttributedString_range_, a1, a2, a3);

  return v7;
}

uint64_t sub_2457A68F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[6] = a4;
  v5[7] = v4;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return sub_2457ACC48();
}

void sub_2457A6910()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  __int128 v7;

  sub_2457AD2C8(*(_QWORD *)(v1 + 56));
  if (v0)
  {
    v3 = *(_QWORD *)(v1 + 40);
    v2 = *(_QWORD *)(v1 + 48);
    v7 = *(_OWORD *)(v1 + 24);
    v4 = sub_2457AD184();
    *(_QWORD *)(v1 + 72) = v4;
    *(_OWORD *)(v4 + 16) = v7;
    *(_QWORD *)(v4 + 32) = v3;
    *(_QWORD *)(v4 + 40) = v2;
    v5 = (_QWORD *)*(unsigned int *)(MEMORY[0x24BE798A0] + 4);
    sub_245748AF8();
    v6 = sub_2457ACE1C();
    sub_2457AD24C(v6);
    sub_245748A50(&qword_25749A368);
    *v5 = v1;
    v5[1] = sub_2457A69BC;
    sub_2457ACD24();
    sub_2457ACC54();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457A69BC()
{
  uint64_t v0;

  sub_2457ACD54();
  if (!v0)
  {
    sub_2457AD17C();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457A6A00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if (!*(_QWORD *)(v0 + 48))
  {
    sub_2457BB170();
    sub_2457ACF50();
  }
  sub_2457AD0A4();
  v1 = sub_2457ACFC4();
  return sub_2457ACDF0(v1, v2, v3);
}

uint64_t sub_2457A6A68()
{
  uint64_t v0;

  sub_2457AD270();
  sub_245756FCC();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2457A6A94(void *a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  v15 = objc_msgSend(a4, sel_string);
  v16 = sub_2457BB1AC();
  v18 = v17;

  sub_2457A6B74(v16, v18, a5, a6, a7, (uint64_t)sub_2457ACC3C, v14, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457A6B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  void *v14;
  void *v15;
  _QWORD v16[6];

  v14 = (void *)sub_2457BB1A0();
  if (a5)
    a5 = (void *)sub_2457BB158();
  v16[4] = a6;
  v16[5] = a7;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1107296256;
  v16[2] = sub_2457A6C7C;
  v16[3] = &unk_251697030;
  v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a8, sel_reviewWithString_range_options_with_, v14, a3, a4, a5, v15);
  _Block_release(v15);

}

uint64_t sub_2457A6C7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_245769EE0(0, &qword_254416DF0);
    v4 = sub_2457BB230();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_2457A6D08()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;

  sub_245759004();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v11 = v10;
  sub_245748A50(&qword_257498400);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v12);
  sub_24575136C();
  if (v11 >> 62)
  {
    sub_2457AD06C();
    v13 = sub_2457BB500();
    sub_2457513F4();
  }
  else
  {
    v13 = *(_QWORD *)((v11 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v13 <= v9)
    goto LABEL_7;
  sub_2457ACFD8();
  if (v7)
    sub_2457AD2E0();
  v14 = sub_2457AD22C();
  v15 = sub_2457AD154(v14);
  v16 = (char *)objc_msgSend(v1, sel_offset);
  if (!__OFADD__(v15, v16))
  {
    v23 = &v16[(_QWORD)v15];
    objc_msgSend(v1, (SEL)0x295);
    v22 = v17;
    sub_2457ABBB0(v1, (SEL *)&selRef_filteredOptions);
    v18 = sub_2457ACFAC();
    sub_2457AD0D4(v18);
    v19 = sub_245776B5C();
    *(_QWORD *)(v19 + 16) = 0;
    *(_QWORD *)(v19 + 24) = 0;
    *(_QWORD *)(v19 + 32) = v0;
    *(_QWORD *)(v19 + 40) = v1;
    *(_QWORD *)(v19 + 48) = v24;
    *(_QWORD *)(v19 + 56) = 0;
    *(_QWORD *)(v19 + 64) = v5;
    *(_QWORD *)(v19 + 72) = v3;
    *(_QWORD *)(v19 + 80) = v23;
    *(_QWORD *)(v19 + 88) = v22;
    *(_BYTE *)(v19 + 96) = (_BYTE)v15;
    *(_QWORD *)(v19 + 104) = v9;
    *(_QWORD *)(v19 + 112) = v11;
    sub_245756F54();
    v20 = v0;
    v21 = swift_retain();
    sub_2457AD1EC(v21, (uint64_t)&unk_25749A4D0);
    swift_release();
LABEL_7:
    sub_245758FB4();
    return;
  }
  __break(1u);
}

uint64_t sub_2457A6E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 88) = v13;
  *(_QWORD *)(v8 + 96) = v14;
  *(_BYTE *)(v8 + 136) = v12;
  *(_QWORD *)(v8 + 80) = v11;
  *(_OWORD *)(v8 + 64) = v10;
  *(_QWORD *)(v8 + 48) = a7;
  *(_QWORD *)(v8 + 56) = a8;
  *(_QWORD *)(v8 + 32) = a5;
  *(_QWORD *)(v8 + 40) = a6;
  *(_QWORD *)(v8 + 24) = a4;
  return swift_task_switch();
}

void sub_2457A6E94()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *(_QWORD *)(v0[3] + OBJC_IVAR___TextCompositionClient_client);
  v0[13] = v1;
  if (v1)
  {
    v2 = v0[4];
    v3 = swift_task_alloc();
    v0[14] = v3;
    *(_QWORD *)(v3 + 16) = v2;
    sub_245748AF8();
    v4 = (_QWORD *)sub_2457ACE1C();
    v0[15] = v4;
    sub_245777040((uint64_t)v4, &qword_25749A4D8);
    *v4 = v0;
    v4[1] = sub_2457A6F40;
    sub_2457ACD24();
    sub_2457AD0B0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457A6F40()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 128) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457A6F98()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(_QWORD, uint64_t, uint64_t, uint64_t, id);
  uint64_t v7;
  uint64_t v8;
  id v9;
  id v10;
  id v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(void **)(v0 + 16);
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
  LODWORD(v1) = objc_msgSend(v3, sel_cancellationRequestedForToken_, v1);

  if ((_DWORD)v1)
  {
    v5 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 80);
    v6 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, id))(v0 + 56);
    v7 = *(_QWORD *)(v0 + 40);
    v8 = sub_2457ACD74(*(_QWORD *)(v0 + 48));
    v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
    v10 = objc_msgSend(v9, sel_cancellationErrorForToken_, v7);

    v11 = v10;
    v6(0, v5, v4, v8, v10);
    swift_bridgeObjectRelease();

LABEL_8:
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  v12 = *(_QWORD *)(v0 + 96);
  sub_2457ABBB0(v2, (SEL *)&selRef_options);
  v14 = v13;
  if (v12 >> 62)
  {
    sub_245756F54();
    v15 = sub_2457BB500();
    sub_2457513F4();
  }
  else
  {
    v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v16 = *(_QWORD *)(v0 + 80);
  v17 = *(_BYTE *)(v0 + 136);
  v18 = *(_QWORD *)(v0 + 72);
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v0 + 56);
  v20 = sub_2457A5624(v14, v17, *(_QWORD *)(v0 + 88), 0, v15, 0);
  v21 = sub_2457512F4();
  v22 = sub_2457AD278(v21, sel_results);
  sub_245777040((uint64_t)v22, &qword_254416DF0);
  v23 = sub_2457AD258();

  v19(v23, v18, v16, v20, 0);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if ((v17 & 1) != 0)
    goto LABEL_8;
  if (!__OFADD__(*(_QWORD *)(v0 + 88), 1))
  {
    sub_2457A6D08();
    goto LABEL_8;
  }
  __break(1u);
  return result;
}

uint64_t sub_2457A71A8()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  void (*v4)(_QWORD, uint64_t, uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  id v7;

  sub_2457AD1A0();
  v1 = *(void **)(v0 + 128);
  v3 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 80);
  v4 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, void *))(v0 + 56);
  v5 = *(_QWORD *)(v0 + 48);
  swift_release();
  swift_task_dealloc();
  v6 = sub_2457ACD74(v5);
  v7 = v1;
  v4(0, v3, v2, v6, v1);
  sub_24575103C();
  sub_24577ACAC();
  sub_24575103C();
  return sub_2457ACEE4(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2457A7224(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2457A72AC(a4, (uint64_t)sub_2457ACC3C, v8, a1);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_2457A72AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  void *v6;
  _QWORD v7[6];

  v7[4] = a2;
  v7[5] = a3;
  v7[0] = MEMORY[0x24BDAC760];
  v7[1] = 1107296256;
  v7[2] = sub_2457A7358;
  v7[3] = &unk_251692E30;
  v6 = _Block_copy(v7);
  swift_retain();
  swift_release();
  objc_msgSend(a4, sel_reviewWithInput_with_, a1, v6);
  _Block_release(v6);
}

uint64_t sub_2457A735C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2457BB2A8();
  if (_s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1, 1, v6) == 1)
  {
    sub_24579FA80(a1, &qword_257498400);
  }
  else
  {
    sub_2457BB29C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2457BB26C();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

void sub_2457A74A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  id v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  unint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v25;
  id v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v29 = *MEMORY[0x24BDAC8D0];
  v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
  v10 = objc_msgSend(v9, sel_nextToken);

  if (a4)
    v11 = a4;
  else
    v11 = sub_2457BB170();
  v25 = v11;
  v12 = qword_2574977F8;
  sub_2457513E4();
  if (v12 != -1)
    swift_once();
  v28 = MEMORY[0x24BEE1768];
  v26 = v10;
  sub_2457772E8();
  sub_24576BB20((uint64_t)&v26);
  v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
  v26 = 0;
  sub_2457A05F0();
  v14 = sub_2457AB9C8(a1, a2, a3, v25, (uint64_t)&v26, v13);

  if (v14)
  {
    v15 = v26;
    v16 = sub_2457512F4();
    sub_245777040(v16, (unint64_t *)&unk_25749A358);
    sub_2457BB230();

    sub_2457A6D08();
    sub_24577ACAC();
  }
  else
  {
    v17 = v26;
    v18 = (void *)sub_2457BAA38();

    swift_willThrow();
    sub_245748A50(&qword_254416E38);
    v19 = sub_245776B5C();
    *(_OWORD *)(v19 + 16) = xmmword_2457BDEE0;
    v26 = 0;
    v27 = 0xE000000000000000;
    sub_2457BB1D0();
    sub_245748A50(&qword_257498B98);
    sub_2457BB4C4();
    v20 = v26;
    v21 = v27;
    *(_QWORD *)(v19 + 56) = MEMORY[0x24BEE0D00];
    *(_QWORD *)(v19 + 32) = v20;
    *(_QWORD *)(v19 + 40) = v21;
    sub_2457BB71C();
    sub_2457513F4();
    sub_2457ACD74(v25);
    sub_2457512F4();
    v22 = v18;
    v23 = sub_2457AD2F8();
    a5(v23);

    sub_2457513F4();
  }
  sub_2457ACF64();
}

void sub_2457A7774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_245759004();
  v0 = sub_245748A50(&qword_25749A370);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  sub_245749FF4();
  v4 = v3 - v2;
  sub_245748A50((uint64_t *)&unk_25749A378);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BEE6CA0], v0);
  sub_2457BB308();
  sub_245758FB4();
}

uint64_t sub_2457A7838(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v22;
  uint64_t v23;

  v23 = a6;
  v11 = sub_245748A50(&qword_25749A4B0);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(_QWORD *)(v12 + 64);
  MEMORY[0x24BDAC7A8](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  v16 = a2;
  sub_2457A74A0(a3, a4, a5, v23, (void (*)(uint64_t))sub_2457AC98C);
  v18 = v17;
  swift_release();
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v16;
  *(_QWORD *)(v19 + 24) = v18;
  v20 = v16;
  return sub_2457BB2C0();
}

uint64_t sub_2457A798C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  uint64_t result;
  id v17;
  _QWORD v18[4];

  v10 = sub_245748A50(&qword_25749A4C0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257497EA8 != -1)
    swift_once();
  v14 = sub_2457A57DC(a4);
  if (a1)
  {
    v15 = v14;
    v18[0] = a1;
    v18[1] = a2;
    v18[2] = a3;
    v18[3] = a4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_245748A50(&qword_25749A4B0);
    sub_2457BB2CC();
    result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if ((v15 & 1) == 0)
      return result;
    v18[0] = 0;
  }
  else
  {
    if (a5)
    {
      v18[0] = a5;
      v17 = a5;
    }
    else
    {
      v18[0] = 0;
    }
    sub_245748A50(&qword_25749A4B0);
  }
  return sub_2457BB2D8();
}

uint64_t sub_2457A7AF0(uint64_t a1, uint64_t a2, uint64_t a3, _BYTE *a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 56) = a5;
  *(_QWORD *)(v6 + 64) = v5;
  *(_QWORD *)(v6 + 40) = a2;
  *(_QWORD *)(v6 + 48) = a3;
  *(_QWORD *)(v6 + 32) = a1;
  *(_BYTE *)(v6 + 104) = *a4;
  return sub_2457ACC48();
}

void sub_2457A7B10()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __n128 v13;
  uint64_t v14;
  _QWORD *v15;

  sub_2457ACE24();
  sub_2457AD2BC(*(_QWORD *)(v1 + 64));
  if (v0)
  {
    v2 = *(_BYTE *)(v1 + 104);
    v4 = *(_QWORD *)(v1 + 48);
    v3 = *(_QWORD *)(v1 + 56);
    v5 = (__n128 *)sub_2457ACFF0();
    sub_2457AD1F8(v5, v6, v7, v8, v9, v10, v11, v12, v13);
    *(_QWORD *)(v14 + 32) = v4;
    *(_BYTE *)(v14 + 40) = v2;
    *(_QWORD *)(v14 + 48) = v3;
    sub_245748AF8();
    v15 = (_QWORD *)sub_2457ACE1C();
    *(_QWORD *)(v1 + 88) = v15;
    *v15 = v1;
    v15[1] = sub_2457A7BC0;
    sub_2457ACC54();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457A7BC0()
{
  uint64_t v0;

  sub_2457ACD34();
  if (!v0)
  {
    sub_2457AD174();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457A7C04()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(void);

  sub_2457AD18C();
  v1 = v0[7];
  sub_245777040(v2, (unint64_t *)&qword_257499E50);
  sub_2457AD128();
  sub_24579B438();
  v4 = v3;
  if (v1)
    v5 = v0[7];
  else
    v5 = sub_2457BB170();
  v9 = (uint64_t (*)(void))v0[1];
  v7 = v0[5];
  v6 = v0[6];
  swift_bridgeObjectRetain();
  return sub_2457ACCA0(v4, v7, v6, v5, v9);
}

uint64_t sub_2457A7CBC()
{
  uint64_t (*v0)(void);

  sub_2457AD14C();
  sub_245756FCC();
  v0 = (uint64_t (*)(void))sub_2457AD264();
  return v0();
}

void sub_2457A7CEC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v11;
  id v12;

  v11 = swift_allocObject();
  *(_QWORD *)(v11 + 16) = a2;
  *(_QWORD *)(v11 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  v12 = objc_msgSend(a4, sel_string);
  sub_2457BB1AC();

  __asm { BR              X10 }
}

uint64_t sub_2457A7DB0()
{
  void *v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  sub_2457A7F44(v6, v5, v3, v2, 0x657369636E6F43, 0xE700000000000000, v1, (uint64_t)sub_2457AC628, v4, v0);
  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457A7F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[6];

  v14 = (void *)sub_2457BB1A0();
  v15 = (void *)sub_2457BB1A0();
  if (a7)
    a7 = (void *)sub_2457BB158();
  v17[4] = a8;
  v17[5] = a9;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = sub_2457A8070;
  v17[3] = &unk_251696F40;
  v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(a10, sel_rewriteWithString_range_rewritingType_options_with_, v14, a3, a4, v15, a7, v16);
  _Block_release(v16);

}

uint64_t sub_2457A8070(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, uint64_t, void *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;

  v4 = *(void (**)(uint64_t, uint64_t, void *))(a1 + 32);
  if (a2)
  {
    v5 = sub_2457BB1AC();
    v7 = v6;
  }
  else
  {
    v5 = 0;
    v7 = 0;
  }
  swift_retain();
  v8 = a3;
  v4(v5, v7, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_2457A80F0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 *v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  id v16;
  id v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;

  sub_245759004();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  sub_245748A50(&qword_257498400);
  sub_24574A084();
  MEMORY[0x24BDAC7A8](v13);
  sub_24575136C();
  v14 = (void *)*v6;
  if (v12 >> 62)
  {
    sub_2457AD06C();
    v15 = sub_2457BB500();
    sub_2457513F4();
  }
  else
  {
    v15 = *(_QWORD *)((v12 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  if (v15 <= v10)
    goto LABEL_7;
  sub_2457ACFD8();
  if (v8)
    sub_2457AD2E0();
  v16 = sub_2457AD22C();
  v17 = sub_2457AD154(v16);
  v18 = (char *)objc_msgSend(v14, sel_offset);
  if (!__OFADD__(v17, v18))
  {
    v25 = &v18[(_QWORD)v17];
    objc_msgSend(v14, (SEL)0x295);
    v24 = v19;
    sub_2457ABBB0(v14, (SEL *)&selRef_filteredOptions);
    v20 = sub_2457ACFAC();
    sub_2457AD0D4(v20);
    v21 = sub_245776B5C();
    *(_QWORD *)(v21 + 16) = 0;
    *(_QWORD *)(v21 + 24) = 0;
    *(_QWORD *)(v21 + 32) = v0;
    *(_QWORD *)(v21 + 40) = v14;
    *(_BYTE *)(v21 + 48) = (_BYTE)v14;
    *(_QWORD *)(v21 + 56) = v26;
    *(_QWORD *)(v21 + 64) = v4;
    *(_QWORD *)(v21 + 72) = v2;
    *(_QWORD *)(v21 + 80) = v25;
    *(_QWORD *)(v21 + 88) = v24;
    *(_BYTE *)(v21 + 96) = (_BYTE)v17;
    *(_QWORD *)(v21 + 104) = v10;
    *(_QWORD *)(v21 + 112) = v12;
    *(_QWORD *)(v21 + 120) = 0;
    sub_245756F54();
    v22 = v0;
    v23 = swift_retain();
    sub_2457AD1EC(v23, (uint64_t)&unk_25749A490);
    swift_release();
LABEL_7:
    sub_245758FB4();
    return;
  }
  __break(1u);
}

uint64_t sub_2457A8250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)(v8 + 136) = v14;
  *(_QWORD *)(v8 + 144) = v15;
  *(_BYTE *)(v8 + 185) = v12;
  *(_QWORD *)(v8 + 120) = v11;
  *(_QWORD *)(v8 + 128) = v13;
  *(_OWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 88) = a7;
  *(_QWORD *)(v8 + 96) = a8;
  *(_BYTE *)(v8 + 184) = a6;
  *(_QWORD *)(v8 + 72) = a4;
  *(_QWORD *)(v8 + 80) = a5;
  return swift_task_switch();
}

void sub_2457A8298()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_2457AD18C();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR___TextCompositionClient_client);
  *(_QWORD *)(v0 + 152) = v1;
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 184);
    v3 = *(_QWORD *)(v0 + 80);
    v4 = swift_task_alloc();
    *(_QWORD *)(v0 + 160) = v4;
    *(_QWORD *)(v4 + 16) = v3;
    *(_BYTE *)(v4 + 24) = v2;
    sub_245748AF8();
    v5 = (_QWORD *)sub_2457ACE1C();
    *(_QWORD *)(v0 + 168) = v5;
    sub_245777040((uint64_t)v5, &qword_25749A4A8);
    *v5 = v0;
    v5[1] = sub_2457A8344;
    sub_2457ACD24();
    sub_2457ACEFC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457A8344()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 176) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

void sub_2457A839C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  id v12;
  id v13;
  uint64_t v14;
  uint64_t v15;

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_BYTE *)(v0 + 185);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v6 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 104);
  v7 = *(_QWORD *)(v0 + 88);
  v14 = *(_QWORD *)(v0 + 136);
  v15 = *(_QWORD *)(v0 + 80);
  v9 = *(void **)(v0 + 64);
  v8 = *(void **)(v0 + 72);
  v10 = sub_245776B5C();
  *(_QWORD *)(v10 + 16) = v7;
  *(_QWORD *)(v10 + 24) = v8;
  *(_QWORD *)(v10 + 32) = v6;
  *(_QWORD *)(v10 + 40) = v5;
  *(_QWORD *)(v10 + 48) = v4;
  *(_QWORD *)(v10 + 56) = v3;
  *(_BYTE *)(v10 + 64) = v2;
  *(_QWORD *)(v10 + 72) = v9;
  *(_QWORD *)(v10 + 80) = v1;
  *(_QWORD *)(v0 + 16) = MEMORY[0x24BDAC760];
  *(_QWORD *)(v10 + 88) = v14;
  *(_QWORD *)(v0 + 48) = sub_2457AC894;
  *(_QWORD *)(v0 + 56) = v10;
  *(_QWORD *)(v0 + 24) = 1107296256;
  *(_QWORD *)(v0 + 32) = sub_2457A8A2C;
  *(_QWORD *)(v0 + 40) = &unk_251696EA0;
  v11 = _Block_copy((const void *)(v0 + 16));
  v12 = v8;
  swift_retain();
  v13 = v9;
  sub_2457A05F0();
  swift_release();
  objc_msgSend(v13, sel_enumerateRewrittenAttributedStringsWithInput_usingBlock_, v15, v11);
  _Block_release(v11);
  if ((v2 & 1) != 0)
    goto LABEL_4;
  if (!__OFADD__(*(_QWORD *)(v0 + 128), 1))
  {
    sub_2457A80F0();
LABEL_4:

    (*(void (**)(void))(v0 + 8))();
    return;
  }
  __break(1u);
}

uint64_t sub_2457A84F0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(_QWORD, uint64_t, uint64_t, uint64_t, void *);
  uint64_t v6;
  id v7;

  sub_2457AD1A0();
  v1 = *(void **)(v0 + 176);
  v2 = *(_QWORD *)(v0 + 144);
  v4 = *(_QWORD *)(v0 + 112);
  v3 = *(_QWORD *)(v0 + 120);
  v5 = *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, void *))(v0 + 96);
  swift_release();
  swift_task_dealloc();
  v6 = sub_2457ACD74(v2);
  v7 = v1;
  v5(0, v4, v3, v6, v1);
  sub_24575103C();
  sub_2457513F4();
  sub_24575103C();
  return sub_2457ACEE4(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2457A856C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v8;

  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  __asm { BR              X10 }
}

uint64_t sub_2457A85E0()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  swift_unknownObjectRetain();
  sub_2457A8740(v1, 0x657369636E6F43, 0xE700000000000000, (uint64_t)sub_2457ACC3C, v2, v0);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457A8740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v10;
  void *v11;
  _QWORD v12[6];

  v10 = (void *)sub_2457BB1A0();
  v12[4] = a4;
  v12[5] = a5;
  v12[0] = MEMORY[0x24BDAC760];
  v12[1] = 1107296256;
  v12[2] = sub_2457A7358;
  v12[3] = &unk_251696EF0;
  v11 = _Block_copy(v12);
  swift_retain();
  swift_release();
  objc_msgSend(a6, sel_rewriteWithInput_rewritingType_with_, a1, v10, v11);
  _Block_release(v11);

}

void sub_2457A8808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void (*a8)(_QWORD, uint64_t, uint64_t, uint64_t, id), uint64_t a9, uint64_t a10, uint64_t a11, char a12, void *a13, uint64_t a14, uint64_t a15)
{
  id v19;
  unsigned int v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  char v27;
  void (*v28)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);
  uint64_t v29;
  uint64_t v30;
  id v32;

  v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
  v20 = objc_msgSend(v19, sel_cancellationRequestedForToken_, a6);

  if (v20)
  {
    v21 = sub_2457A5624(a4, 1, 0, 1, 0, 1);
    v22 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
    v23 = objc_msgSend(v22, sel_cancellationErrorForToken_, a6);

    v32 = v23;
    a8(0, a10, a11, v21, v23);
    swift_bridgeObjectRelease();

    return;
  }
  if ((a12 & 1) != 0)
  {
    v24 = a2;
    v25 = objc_msgSend(a13, sel_range);
    v27 = a3 + a2 >= (uint64_t)v25 + v26;
    if ((a15 & 0x8000000000000000) == 0)
      goto LABEL_5;
LABEL_9:
    v28 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))a8;
    goto LABEL_10;
  }
  v27 = 0;
  v24 = a2;
  if (a15 < 0)
    goto LABEL_9;
LABEL_5:
  v28 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))a8;
  if ((a15 & 0x4000000000000000) != 0)
  {
LABEL_10:
    swift_bridgeObjectRetain();
    v29 = sub_2457BB500();
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  v29 = *(_QWORD *)((a15 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_7:
  v30 = sub_2457A5624(a4, v27, a14, 0, v29, 0);
  v28(a1, v24, a3, v30, 0);
  swift_bridgeObjectRelease();
}

uint64_t sub_2457A8A2C(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v6)(void);
  id v7;

  v6 = *(void (**)(void))(a1 + 32);
  if (a5)
    sub_2457BB164();
  swift_retain();
  v7 = a2;
  v6();
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_2457A8AD8(uint64_t a1, uint64_t a2, uint64_t a3, unsigned __int8 *a4, uint64_t a5)
{
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *a4;
  v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BEB4BF8]), sel_init);
  objc_msgSend(v7, sel_nextToken);

  if (!a5)
    sub_2457BB170();
  v8 = qword_2574977F8;
  sub_2457513E4();
  if (v8 != -1)
    swift_once();
  v9 = sub_2457772E8();
  sub_2457AD080(v9, v10, v11, v12, v13);
  if (qword_257497EB0 != -1)
    swift_once();
  sub_2457AD1D8();
  __asm { BR              X11 }
}

void sub_2457A8DC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_245759004();
  sub_2457AD134();
  v0 = sub_245748A50(&qword_25749A388);
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  sub_245749FF4();
  v4 = v3 - v2;
  sub_245748A50(qword_25749A390);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v1 + 104))(v4, *MEMORY[0x24BEE6CA0], v0);
  sub_2457BB308();
  sub_245758FB4();
}

uint64_t sub_2457A8E80(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;

  v24 = a5;
  v25 = a7;
  v12 = sub_245748A50(&qword_25749A470);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(_QWORD *)(v13 + 64);
  MEMORY[0x24BDAC7A8](v12);
  v26 = a6;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))((char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v12);
  v15 = (*(unsigned __int8 *)(v13 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v13 + 32))(v16 + v15, (char *)&v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0), v12);
  v17 = a2;
  sub_2457A8AD8(a3, a4, v24, &v26, v25);
  v19 = v18;
  swift_release();
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v17;
  *(_QWORD *)(v20 + 24) = v19;
  v21 = v17;
  return sub_2457BB2C0();
}

void sub_2457A8FD8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char v14;
  char v15;
  id v16;
  id v17;
  _QWORD v18[4];

  v10 = sub_245748A50(&qword_25749A480);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_257497EA8 != -1)
    swift_once();
  v14 = sub_2457A57DC(a4);
  if (a1)
  {
    v15 = v14;
    v18[0] = a1;
    v18[1] = a2;
    v18[2] = a3;
    v18[3] = a4;
    v16 = a1;
    swift_bridgeObjectRetain();
    sub_245748A50(&qword_25749A470);
    sub_2457BB2CC();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    if ((v15 & 1) != 0)
    {
      v18[0] = 0;
      sub_2457BB2D8();
    }

  }
  else
  {
    if (a5)
    {
      v18[0] = a5;
      v17 = a5;
    }
    else
    {
      v18[0] = 0;
    }
    sub_245748A50(&qword_25749A470);
    sub_2457BB2D8();
  }
}

void sub_2457A9148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;

  v5 = sub_245748A50(a4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_245749FF4();
  v9 = v8 - v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(v8 - v7, a1, v5);
  LODWORD(a1) = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 88))(v9, v5);
  v10 = *MEMORY[0x24BEE6C58];
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  if ((_DWORD)a1 == v10)
    sub_2457A5B64();
}

uint64_t sub_2457A920C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[7] = a4;
  v5[8] = v4;
  v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  return sub_2457ACC48();
}

void sub_2457A9224()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __n128 v12;
  uint64_t v13;
  _QWORD *v14;

  sub_2457AD2BC(v1[8]);
  if (v0)
  {
    v3 = v1[6];
    v2 = v1[7];
    v4 = (__n128 *)sub_2457AD184();
    sub_2457AD1F8(v4, v5, v6, v7, v8, v9, v10, v11, v12);
    *(_QWORD *)(v13 + 32) = v3;
    *(_QWORD *)(v13 + 40) = v2;
    sub_245748AF8();
    v14 = (_QWORD *)sub_2457ACE1C();
    v1[11] = v14;
    *v14 = v1;
    v14[1] = sub_2457A92C8;
    sub_2457ACC54();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457A92C8()
{
  uint64_t v0;

  sub_2457ACD34();
  if (!v0)
  {
    sub_2457AD174();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457A930C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v3)(uint64_t);

  if (!*(_QWORD *)(v0 + 56))
    sub_2457BB170();
  v3 = *(uint64_t (**)(uint64_t))(v0 + 8);
  swift_bridgeObjectRetain();
  v1 = sub_2457AD128();
  return v3(v1);
}

uint64_t sub_2457A9398()
{
  uint64_t (*v0)(void);

  sub_2457AD14C();
  sub_245756FCC();
  v0 = (uint64_t (*)(void))sub_2457AD264();
  return sub_245756DF8(v0);
}

uint64_t sub_2457A93C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7)
{
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  v15 = objc_msgSend(a6, sel_string);
  v16 = sub_2457BB1AC();
  v18 = v17;

  sub_2457A94A0(a4, a5, v16, v18, a7, (uint64_t)sub_2457AC628, v14, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457A94A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  void *v14;
  void *v15;
  _QWORD v16[6];

  v14 = (void *)sub_2457BB1A0();
  if (a5)
    a5 = (void *)sub_2457BB158();
  v16[4] = a6;
  v16[5] = a7;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1107296256;
  v16[2] = sub_2457A8070;
  v16[3] = &unk_25168F858;
  v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a8, sel_describeWithResult_index_string_options_with_, a1, a2, v14, a5, v15);
  _Block_release(v15);

}

uint64_t sub_2457A95B0(uint64_t a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(v4 + 32) = a3;
  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 24) = a1;
  *(_BYTE *)(v4 + 80) = *a2;
  return sub_2457ACC48();
}

void sub_2457A95CC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 40) + OBJC_IVAR___TextCompositionClient_client);
  *(_QWORD *)(v0 + 48) = v1;
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 80);
    v4 = *(_QWORD *)(v0 + 24);
    v3 = *(_QWORD *)(v0 + 32);
    v5 = sub_2457AD184();
    *(_QWORD *)(v0 + 56) = v5;
    *(_QWORD *)(v5 + 16) = v4;
    *(_BYTE *)(v5 + 24) = v2;
    *(_QWORD *)(v5 + 32) = v3;
    sub_245748AF8();
    v6 = (_QWORD *)sub_2457ACE1C();
    *(_QWORD *)(v0 + 64) = v6;
    sub_245777040((uint64_t)v6, qword_25749A3A8);
    *v6 = v0;
    v6[1] = sub_2457A9688;
    sub_2457ACD24();
    sub_2457AD0B0();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457A9688()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457A96E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_2457AD064(a1, (SEL *)&selRef_options);
  if (!v2)
  {
    if (!*(_QWORD *)(v1 + 32))
    {
      sub_2457BB170();
      sub_2457ACF50();
    }
    swift_bridgeObjectRetain();
  }
  v3 = sub_2457ACEBC();
  return sub_2457ACD8C(v3, v4, v5);
}

uint64_t sub_2457A975C()
{
  uint64_t v0;

  swift_release();
  sub_245756FCC();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2457A978C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v12;
  uint64_t v13;

  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = a2;
  *(_QWORD *)(v12 + 24) = a3;
  if ((a5 & 1) != 0)
    v13 = 0x7373654D74786554;
  else
    v13 = 0x7373654D6C69614DLL;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2457A9870(a4, v13, 0xEB00000000656761, a6, (uint64_t)sub_2457ACC3C, v12, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457A9870(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, void *a7)
{
  void *v12;
  void *v13;
  _QWORD v14[6];

  v12 = (void *)sub_2457BB1A0();
  if (a4)
    a4 = (void *)sub_2457BB158();
  v14[4] = a5;
  v14[5] = a6;
  v14[0] = MEMORY[0x24BDAC760];
  v14[1] = 1107296256;
  v14[2] = sub_2457A7358;
  v14[3] = &unk_251696D88;
  v13 = _Block_copy(v14);
  swift_retain();
  swift_release();
  objc_msgSend(a7, sel_requestShortFormSmartRepliesWithInputContextHistory_documentType_options_with_, a1, v12, a4, v13);
  _Block_release(v13);

}

uint64_t sub_2457A9978(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 24) = a1;
  *(_BYTE *)(v6 + 96) = *a2;
  return sub_2457ACC48();
}

void sub_2457A9998()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  sub_2457ACE24();
  sub_2457AD2C8(*(_QWORD *)(v1 + 56));
  if (v0)
  {
    v2 = (__n128 *)sub_2457ACDFC();
    sub_2457ACE7C(v2, v3, v4, v5, v6, v7, v8, v9, v10);
    v11 = (_QWORD *)*(unsigned int *)(MEMORY[0x24BE798A0] + 4);
    sub_245748AF8();
    v12 = sub_2457ACE1C();
    v13 = sub_2457AD24C(v12);
    sub_245777040(v13, qword_25749A3A8);
    *v11 = v1;
    v11[1] = sub_2457A9A2C;
    sub_2457ACD24();
    sub_2457ACC54();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457A9A2C()
{
  uint64_t v0;

  sub_2457ACD54();
  if (!v0)
  {
    sub_2457AD17C();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457A9A70(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16;
  uint64_t v17;

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if ((a5 & 1) != 0)
    v17 = 0x7373654D74786554;
  else
    v17 = 0x7373654D6C69614DLL;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2457A9E24(a4, v17, 0xEB00000000656761, a6, a7, a8, (uint64_t)sub_2457ACC3C, v16, a1, (uint64_t)sub_2457A7358, (uint64_t)&unk_251696D38, (SEL *)&selRef_requestLongFormSmartRepliesWithInputContextHistory_documentType_replyType_options_with_);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457A9B90(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 24) = a1;
  *(_BYTE *)(v6 + 96) = *a2;
  return sub_2457ACC48();
}

void sub_2457A9BB0()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  sub_2457ACE24();
  sub_2457AD2C8(*(_QWORD *)(v1 + 56));
  if (v0)
  {
    v2 = (__n128 *)sub_2457ACDFC();
    sub_2457ACE7C(v2, v3, v4, v5, v6, v7, v8, v9, v10);
    v11 = (_QWORD *)*(unsigned int *)(MEMORY[0x24BE798A0] + 4);
    sub_245748AF8();
    v12 = sub_2457ACE1C();
    v13 = sub_2457AD24C(v12);
    sub_245777040(v13, qword_25749A3C0);
    *v11 = v1;
    v11[1] = sub_2457A9C44;
    sub_2457ACD24();
    sub_2457ACC54();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457A9C44()
{
  uint64_t v0;

  sub_2457ACD54();
  if (!v0)
  {
    sub_2457AD17C();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457A9C88(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_2457AD064(a1, (SEL *)&selRef_options);
  if (!v2)
  {
    if (!*(_QWORD *)(v1 + 48))
    {
      sub_2457BB170();
      sub_2457ACF50();
    }
    swift_bridgeObjectRetain();
  }
  v3 = sub_2457ACEBC();
  return sub_2457ACD8C(v3, v4, v5);
}

uint64_t sub_2457A9D04(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16;
  uint64_t v17;

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if ((a5 & 1) != 0)
    v17 = 0x7373654D74786554;
  else
    v17 = 0x7373654D6C69614DLL;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2457A9E24(a4, v17, 0xEB00000000656761, a6, a7, a8, (uint64_t)sub_2457ACC3C, v16, a1, (uint64_t)sub_2457A7358, (uint64_t)&unk_251696CE8, (SEL *)&selRef_requestUserQuestionnaireWithInputContextHistory_documentType_replyType_options_with_);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457A9E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, SEL *a12)
{
  void *v15;
  void *v16;
  void *v17;
  _QWORD aBlock[6];

  v15 = (void *)sub_2457BB1A0();
  v16 = (void *)sub_2457BB1A0();
  if (a6)
    a6 = (void *)sub_2457BB158();
  aBlock[4] = a7;
  aBlock[5] = a8;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = a10;
  aBlock[3] = a11;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a9, *a12, a1, v15, v16, a6, v17);
  _Block_release(v17);

}

uint64_t sub_2457A9F44(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v9 + 72) = a8;
  *(_QWORD *)(v9 + 80) = v8;
  *(_QWORD *)(v9 + 56) = a6;
  *(_QWORD *)(v9 + 64) = a7;
  *(_QWORD *)(v9 + 40) = a4;
  *(_QWORD *)(v9 + 48) = a5;
  *(_QWORD *)(v9 + 24) = a1;
  *(_QWORD *)(v9 + 32) = a3;
  *(_BYTE *)(v9 + 120) = *a2;
  return sub_2457ACC48();
}

void sub_2457A9F68()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;
  __int128 v9;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 80) + OBJC_IVAR___TextCompositionClient_client);
  *(_QWORD *)(v0 + 88) = v1;
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 120);
    v3 = *(_QWORD *)(v0 + 72);
    v4 = *(_QWORD *)(v0 + 48);
    v9 = *(_OWORD *)(v0 + 32);
    v5 = *(_QWORD *)(v0 + 24);
    v6 = swift_task_alloc();
    *(_QWORD *)(v0 + 96) = v6;
    v7 = *(_OWORD *)(v0 + 56);
    *(_QWORD *)(v6 + 16) = v5;
    *(_BYTE *)(v6 + 24) = v2;
    *(_OWORD *)(v6 + 32) = v9;
    *(_QWORD *)(v6 + 48) = v4;
    *(_OWORD *)(v6 + 56) = v7;
    *(_QWORD *)(v6 + 72) = v3;
    sub_245748AF8();
    v8 = (_QWORD *)sub_2457ACE1C();
    *(_QWORD *)(v0 + 104) = v8;
    sub_245777040((uint64_t)v8, qword_25749A3A8);
    *v8 = v0;
    v8[1] = sub_2457AA050;
    sub_2457ACD24();
    sub_2457AD038();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457AA050()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457AA0A8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_2457AD064(a1, (SEL *)&selRef_options);
  if (!v2)
  {
    if (!*(_QWORD *)(v1 + 72))
    {
      sub_2457BB170();
      sub_2457ACF50();
    }
    swift_bridgeObjectRetain();
  }
  v3 = sub_2457ACEBC();
  return sub_2457ACD8C(v3, v4, v5);
}

uint64_t sub_2457AA124()
{
  uint64_t v0;

  swift_release();
  sub_245756FCC();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2457AA154(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{
  uint64_t v17;
  uint64_t v18;

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if ((a5 & 1) != 0)
    v18 = 0x7373654D74786554;
  else
    v18 = 0x7373654D6C69614DLL;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2457AA260(a4, v18, 0xEB00000000656761, a6, a7, a8, a9, a10, a11, (uint64_t)sub_2457ACC3C, v17, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457AA260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9, uint64_t a10, uint64_t a11, void *a12)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  void *v17;
  _QWORD aBlock[6];

  v13 = a9;
  v14 = (void *)sub_2457BB1A0();
  v15 = (void *)sub_2457BB1A0();
  v16 = (void *)sub_2457BB1A0();
  if (a9)
    v13 = (void *)sub_2457BB158();
  aBlock[4] = a10;
  aBlock[5] = a11;
  aBlock[0] = MEMORY[0x24BDAC760];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_2457A7358;
  aBlock[3] = &unk_251696C98;
  v17 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a12, sel_requestLongFormSmartRepliesWithInputContextHistory_documentType_replyType_baseResponse_userFilledQuestionnaire_options_with_, a1, v14, v15, v16, a8, v13, v17);
  _Block_release(v17);

}

uint64_t sub_2457AA3B0(uint64_t a1, uint64_t a2, _BYTE *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 + 40) = a4;
  *(_QWORD *)(v5 + 48) = v4;
  *(_QWORD *)(v5 + 24) = a1;
  *(_QWORD *)(v5 + 32) = a2;
  *(_BYTE *)(v5 + 88) = *a3;
  return sub_2457ACC48();
}

void sub_2457AA3CC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;

  sub_2457AD18C();
  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 48) + OBJC_IVAR___TextCompositionClient_client);
  *(_QWORD *)(v0 + 56) = v1;
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 88);
    v3 = *(_QWORD *)(v0 + 40);
    v4 = sub_2457AD184();
    *(_QWORD *)(v0 + 64) = v4;
    *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 24);
    *(_BYTE *)(v4 + 32) = v2;
    *(_QWORD *)(v4 + 40) = v3;
    sub_245748AF8();
    v5 = (_QWORD *)sub_2457ACE1C();
    *(_QWORD *)(v0 + 72) = v5;
    sub_245748A50(&qword_257497DF8);
    *v5 = v0;
    v5[1] = sub_2457AA474;
    sub_2457ACD24();
    sub_2457ACEFC();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457AA474()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 80) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457AA4CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if (!*(_QWORD *)(v0 + 40))
  {
    sub_2457BB170();
    sub_2457ACF50();
  }
  sub_2457AD0A4();
  v1 = sub_2457ACFC4();
  return sub_2457ACDF0(v1, v2, v3);
}

uint64_t sub_2457AA534()
{
  uint64_t v0;

  swift_release();
  sub_245756FCC();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2457AA564(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void *a7)
{
  uint64_t v14;
  uint64_t v15;

  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if ((a6 & 1) != 0)
    v15 = 0x7373654D74786554;
  else
    v15 = 0x7373654D6C69614DLL;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2457AA650(a4, a5, v15, 0xEB00000000656761, a7, (uint64_t)sub_2457AC5FC, v14, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457AA650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  void *v13;
  void *v14;
  void *v15;
  _QWORD v16[6];

  v13 = (void *)sub_2457BB224();
  v14 = (void *)sub_2457BB1A0();
  if (a5)
    a5 = (void *)sub_2457BB158();
  v16[4] = a6;
  v16[5] = a7;
  v16[0] = MEMORY[0x24BDAC760];
  v16[1] = 1107296256;
  v16[2] = sub_2457AA780;
  v16[3] = &unk_251696C48;
  v15 = _Block_copy(v16);
  swift_retain();
  swift_release();
  objc_msgSend(a8, sel_requestEmojiSmartRepliesWithInputContextHistory_tapbackMessageGUIDs_documentType_options_with_, a1, v13, v14, a5, v15);
  _Block_release(v15);

}

uint64_t sub_2457AA780(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  void (*v5)(uint64_t, void *);
  id v6;

  v4 = a2;
  v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_245748A50(&qword_257497E00);
    v4 = sub_2457BB164();
  }
  swift_retain();
  v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_2457AA810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;

  v6[7] = a5;
  v6[8] = v5;
  v6[5] = a3;
  v6[6] = a4;
  v6[3] = a1;
  v6[4] = a2;
  return sub_2457ACC48();
}

void sub_2457AA828()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  __int128 v5;
  __int128 v6;

  sub_2457AD2BC(*(_QWORD *)(v1 + 64));
  if (v0)
  {
    v2 = *(_QWORD *)(v1 + 56);
    v5 = *(_OWORD *)(v1 + 24);
    v6 = *(_OWORD *)(v1 + 40);
    v3 = sub_2457ACFF0();
    *(_QWORD *)(v1 + 80) = v3;
    *(_OWORD *)(v3 + 16) = v5;
    *(_OWORD *)(v3 + 32) = v6;
    *(_QWORD *)(v3 + 48) = v2;
    sub_245748AF8();
    v4 = (_QWORD *)sub_2457ACE1C();
    *(_QWORD *)(v1 + 88) = v4;
    sub_245777040((uint64_t)v4, qword_25749A3A8);
    *v4 = v1;
    v4[1] = sub_2457AA8E8;
    sub_2457ACD24();
    sub_2457ACC54();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457AA8E8()
{
  uint64_t v0;

  sub_2457ACD34();
  if (!v0)
  {
    sub_2457AD174();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457AA92C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  if (!*(_QWORD *)(v0 + 56))
  {
    sub_2457BB170();
    sub_2457ACF50();
  }
  sub_2457AD0A4();
  v1 = sub_2457ACFC4();
  return sub_2457ACDF0(v1, v2, v3);
}

uint64_t sub_2457AA994(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16;

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2457AAA4C(a4, a5, a6, a7, a8, (uint64_t)sub_2457ACC3C, v16, a1);
  swift_release();
  return swift_unknownObjectRelease();
}

void sub_2457AAA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, void *a8)
{
  void *v12;
  void *v13;
  void *v14;
  _QWORD v15[6];

  v12 = (void *)sub_2457BB1A0();
  v13 = (void *)sub_2457BB1A0();
  if (a5)
    a5 = (void *)sub_2457BB158();
  v15[4] = a6;
  v15[5] = a7;
  v15[0] = MEMORY[0x24BDAC760];
  v15[1] = 1107296256;
  v15[2] = sub_2457A7358;
  v15[3] = &unk_251696BF8;
  v14 = _Block_copy(v15);
  swift_retain();
  swift_release();
  objc_msgSend(a8, sel_requestEmojiSmartRepliesWithMessageID_messageText_options_with_, v12, v13, a5, v14);
  _Block_release(v14);

}

uint64_t sub_2457AAB64(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = v6;
  *(_QWORD *)(v7 + 40) = a4;
  *(_QWORD *)(v7 + 48) = a5;
  *(_QWORD *)(v7 + 24) = a1;
  *(_QWORD *)(v7 + 32) = a3;
  *(_BYTE *)(v7 + 104) = *a2;
  return sub_2457ACC48();
}

void sub_2457AAB84()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  _QWORD *v8;

  sub_2457AD1A0();
  sub_2457AD2BC(*(_QWORD *)(v1 + 64));
  if (v0)
  {
    v2 = *(_BYTE *)(v1 + 104);
    v3 = *(_QWORD *)(v1 + 56);
    v5 = *(_QWORD *)(v1 + 24);
    v4 = *(_QWORD *)(v1 + 32);
    v6 = sub_2457ACFF0();
    *(_QWORD *)(v1 + 80) = v6;
    v7 = *(_OWORD *)(v1 + 40);
    *(_QWORD *)(v6 + 16) = v5;
    *(_BYTE *)(v6 + 24) = v2;
    *(_QWORD *)(v6 + 32) = v4;
    *(_OWORD *)(v6 + 40) = v7;
    *(_QWORD *)(v6 + 56) = v3;
    sub_245748AF8();
    v8 = (_QWORD *)sub_2457ACE1C();
    *(_QWORD *)(v1 + 88) = v8;
    sub_245777040((uint64_t)v8, qword_25749A3A8);
    *v8 = v1;
    v8[1] = sub_2457AAC48;
    sub_2457ACD24();
    sub_2457ACC54();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457AAC48()
{
  uint64_t v0;

  sub_2457ACD34();
  if (!v0)
  {
    sub_2457AD174();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457AAC8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_2457AD064(a1, (SEL *)&selRef_options);
  if (!v2)
  {
    if (!*(_QWORD *)(v1 + 56))
    {
      sub_2457BB170();
      sub_2457ACF50();
    }
    swift_bridgeObjectRetain();
  }
  v3 = sub_2457ACEBC();
  return sub_2457ACD8C(v3, v4, v5);
}

uint64_t sub_2457AAD08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v17;
  uint64_t v18;

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if ((a5 & 1) != 0)
    v18 = 0x7373654D74786554;
  else
    v18 = 0x7373654D6C69614DLL;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2457AAE10(a4, v18, 0xEB00000000656761, a6, a7, a8, a9, (uint64_t)sub_2457ACC3C, v17, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457AAE10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, void *a10)
{
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[6];

  v14 = (void *)sub_2457BB1A0();
  v15 = (void *)sub_2457BB1A0();
  if (a7)
    a7 = (void *)sub_2457BB158();
  v17[4] = a8;
  v17[5] = a9;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = sub_2457A7358;
  v17[3] = &unk_251696BA8;
  v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(a10, sel_requestLongFormSmartRepliesWithInputContextHistory_documentType_replyType_userFilledQuestionnaire_options_with_, a1, v14, v15, a6, a7, v16);
  _Block_release(v16);

}

uint64_t sub_2457AAF44(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)(v8 + 64) = a7;
  *(_QWORD *)(v8 + 72) = v7;
  *(_QWORD *)(v8 + 48) = a5;
  *(_QWORD *)(v8 + 56) = a6;
  *(_QWORD *)(v8 + 32) = a3;
  *(_QWORD *)(v8 + 40) = a4;
  *(_QWORD *)(v8 + 24) = a1;
  *(_BYTE *)(v8 + 112) = *a2;
  return sub_2457ACC48();
}

void sub_2457AAF68()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  __int128 v7;
  __int128 v8;

  v1 = *(_QWORD *)(*(_QWORD *)(v0 + 72) + OBJC_IVAR___TextCompositionClient_client);
  *(_QWORD *)(v0 + 80) = v1;
  if (v1)
  {
    v2 = *(_BYTE *)(v0 + 112);
    v3 = *(_QWORD *)(v0 + 64);
    v7 = *(_OWORD *)(v0 + 32);
    v8 = *(_OWORD *)(v0 + 48);
    v4 = *(_QWORD *)(v0 + 24);
    v5 = swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v5;
    *(_QWORD *)(v5 + 16) = v4;
    *(_BYTE *)(v5 + 24) = v2;
    *(_OWORD *)(v5 + 32) = v7;
    *(_OWORD *)(v5 + 48) = v8;
    *(_QWORD *)(v5 + 64) = v3;
    sub_245748AF8();
    v6 = (_QWORD *)sub_2457ACE1C();
    *(_QWORD *)(v0 + 96) = v6;
    sub_245777040((uint64_t)v6, qword_25749A3C0);
    *v6 = v0;
    v6[1] = sub_2457AB048;
    sub_2457ACD24();
    sub_2457AD038();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457AB048()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  sub_245776E4C();
  sub_245777368(v2);
  *(_QWORD *)(v0 + 104) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    swift_release();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

uint64_t sub_2457AB0A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  sub_2457AD064(a1, (SEL *)&selRef_options);
  if (!v2)
  {
    if (!*(_QWORD *)(v1 + 64))
    {
      sub_2457BB170();
      sub_2457ACF50();
    }
    swift_bridgeObjectRetain();
  }
  v3 = sub_2457ACEBC();
  return sub_2457ACD8C(v3, v4, v5);
}

uint64_t sub_2457AB11C()
{
  uint64_t v0;

  swift_release();
  sub_245756FCC();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2457AB14C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  uint64_t v17;
  uint64_t v18;

  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = a2;
  *(_QWORD *)(v17 + 24) = a3;
  if ((a5 & 1) != 0)
    v18 = 0x7373654D74786554;
  else
    v18 = 0x7373654D6C69614DLL;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2457AB25C(a4, v18, 0xEB00000000656761, a6, a7, a8, a9, a10, (uint64_t)sub_2457ACC3C, v17, a1);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457AB25C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, void *a8, uint64_t a9, uint64_t a10, void *a11)
{
  void *v13;
  void *v14;
  void *v15;
  void *v16;
  _QWORD v17[6];

  v13 = (void *)sub_2457BB1A0();
  v14 = (void *)sub_2457BB1A0();
  v15 = (void *)sub_2457BB1A0();
  if (a8)
    a8 = (void *)sub_2457BB158();
  v17[4] = a9;
  v17[5] = a10;
  v17[0] = MEMORY[0x24BDAC760];
  v17[1] = 1107296256;
  v17[2] = sub_2457A7358;
  v17[3] = &unk_251696B58;
  v16 = _Block_copy(v17);
  swift_retain();
  swift_release();
  objc_msgSend(a11, sel_requestUserQuestionnaireWithInputContextHistory_documentType_replyType_baseResponse_options_with_, a1, v13, v14, v15, a8, v16);
  _Block_release(v16);

}

uint64_t sub_2457AB3A8(uint64_t a1, _BYTE *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(v6 + 48) = a5;
  *(_QWORD *)(v6 + 56) = v5;
  *(_QWORD *)(v6 + 32) = a3;
  *(_QWORD *)(v6 + 40) = a4;
  *(_QWORD *)(v6 + 24) = a1;
  *(_BYTE *)(v6 + 96) = *a2;
  return sub_2457ACC48();
}

void sub_2457AB3C8()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;

  sub_2457ACE24();
  sub_2457AD2C8(*(_QWORD *)(v1 + 56));
  if (v0)
  {
    v2 = (__n128 *)sub_2457ACDFC();
    sub_2457ACE7C(v2, v3, v4, v5, v6, v7, v8, v9, v10);
    v11 = (_QWORD *)*(unsigned int *)(MEMORY[0x24BE798A0] + 4);
    sub_245748AF8();
    v12 = sub_2457ACE1C();
    v13 = sub_2457AD24C(v12);
    sub_245777040(v13, &qword_25749A3F8);
    *v11 = v1;
    v11[1] = sub_2457AB45C;
    sub_2457ACD24();
    sub_2457ACC54();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_2457AB45C()
{
  uint64_t v0;

  sub_2457ACD54();
  if (!v0)
  {
    sub_2457AD17C();
    sub_245756FCC();
  }
  sub_245756E10();
  return sub_245756E04();
}

id sub_2457AB4A0(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)(v1 + 16);
  result = sub_2457AD278(a1, sel_response);
  if (result)
  {
    v4 = (uint64_t)result;
    result = sub_2457AD278((uint64_t)result, sel_questionnaire);
    if (result)
    {
      v5 = (uint64_t)result;
      sub_2457ABBB0(v2, (SEL *)&selRef_options);
      if (!v6)
      {
        v7 = *(_QWORD *)(v1 + 48);
        if (v7)
        {
          swift_bridgeObjectRetain();
          goto LABEL_7;
        }
        v6 = sub_2457BB170();
      }
      v7 = v6;
LABEL_7:

      return (id)sub_2457ACF9C(v4, v5, v7, *(uint64_t (**)(void))(v1 + 8));
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_2457AB574(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, void *a8)
{
  uint64_t v16;
  uint64_t v17;

  v16 = swift_allocObject();
  *(_QWORD *)(v16 + 16) = a2;
  *(_QWORD *)(v16 + 24) = a3;
  if ((a5 & 1) != 0)
    v17 = 0x7373654D74786554;
  else
    v17 = 0x7373654D6C69614DLL;
  swift_retain();
  swift_unknownObjectRetain();
  sub_2457A9E24(a4, v17, 0xEB00000000656761, a6, a7, a8, (uint64_t)sub_2457ACC3C, v16, a1, (uint64_t)sub_2457A7358, (uint64_t)&unk_251695638, (SEL *)&selRef_requestBasicLongFormRepliesAndQuestionnaireWithInputContextHistory_documentType_replyType_options_with_);
  swift_release();
  swift_unknownObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_2457AB694(uint64_t a1, void *a2, void *a3)
{
  void (*v5)(uint64_t);
  id v6;
  uint64_t v7;
  id v8;

  v5 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v8 = a2;
  v6 = a3;
  v7 = sub_2457AD128();
  v5(v7);
  swift_release();

}

void TextCompositionClient.__deallocating_deinit()
{
  void *v0;
  objc_super v1;

  v1.receiver = v0;
  v1.super_class = (Class)type metadata accessor for TextCompositionClient();
  objc_msgSendSuper2(&v1, sel_dealloc);
  sub_245777104();
}

uint64_t sub_2457AB740()
{
  type metadata accessor for TextCompositionClient();
  return sub_2457BAEA0();
}

uint64_t sub_2457AB780(uint64_t a1)
{
  uint64_t v2;

  v2 = MEMORY[0x24953B288](&unk_2457C5C68, a1);
  return nullsub_1(a1, v2);
}

id sub_2457AB7C0(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v5;
  void *v9;
  id v10;
  id v11;
  id v12;
  id v14[2];

  v5 = v4;
  v14[1] = *(id *)MEMORY[0x24BDAC8D0];
  if (a4)
  {
    v9 = (void *)sub_2457BB158();
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = 0;
  }
  v14[0] = 0;
  v10 = objc_msgSend(v5, sel_initWithAttributedString_range_options_error_, a1, a2, a3, v9, v14);

  if (v10)
  {
    v11 = v14[0];
  }
  else
  {
    v12 = v14[0];
    sub_2457BAA38();

    swift_willThrow();
  }

  return v10;
}

uint64_t sub_2457AB8E4(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_2457AB948;
  return v6(a1);
}

uint64_t sub_2457AB948()
{
  uint64_t v0;

  sub_2457ACC60();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

id sub_2457AB970(void *a1)
{
  uint64_t v1;

  return sub_2457A5B4C(a1, *(_QWORD *)(v1 + 16));
}

id sub_2457AB978(void *a1)
{
  uint64_t v1;

  return objc_msgSend(a1, sel_cancelWithToken_, *(_QWORD *)(v1 + 16));
}

void sub_2457AB988(void *a1)
{
  uint64_t v1;

  sub_2457A5FBC(a1, *(_QWORD *)(v1 + 16));
}

void sub_2457AB990(void *a1)
{
  sub_2457A61C8(a1);
}

uint64_t sub_2457AB998(void *a1)
{
  uint64_t v1;

  return sub_2457A63F8(a1, *(_BYTE *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

unint64_t sub_2457AB9A4(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

id sub_2457AB9C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  void *v11;
  id v12;

  v11 = (void *)sub_2457BB158();
  swift_bridgeObjectRelease();
  v12 = objc_msgSend(a6, sel_inputArrayForAttributedString_range_options_error_, a1, a2, a3, v11, a5);

  return v12;
}

uint64_t sub_2457ABA78(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2457A6A94(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_2457ABA84(uint64_t a1)
{
  uint64_t v1;

  return sub_2457A7838(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
}

void sub_2457ABA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_2457A7CEC(a1, a2, a3, *(void **)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_BYTE *)(v3 + 40));
}

uint64_t sub_2457ABAA8(uint64_t a1)
{
  uint64_t v1;

  return sub_2457A8E80(a1, *(void **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_BYTE *)(v1 + 48), *(_QWORD *)(v1 + 56));
}

uint64_t sub_2457ABABC(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2457A93C0(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(void **)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_2457ABAC8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2457A978C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24), *(void **)(v3 + 32));
}

uint64_t sub_2457ABAD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2457ABB98(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2457A9A70);
}

uint64_t sub_2457ABAE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2457ABB98(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2457A9D04);
}

void sub_2457ABAF0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_2457AA154(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48), *(_QWORD *)(v3 + 56), *(_QWORD *)(v3 + 64), *(void **)(v3 + 72));
  sub_2457AD1D0();
}

uint64_t sub_2457ABB28(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2457AA564(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32), *(void **)(v3 + 40));
}

uint64_t sub_2457ABB38(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2457AA994(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32), *(_QWORD *)(v3 + 40), *(void **)(v3 + 48));
}

void sub_2457ABB48()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;

  sub_2457AD280();
  sub_2457AAD08(v0, v1, v2, v3, v4, v5, v6, v7, v8);
  sub_245777104();
}

void sub_2457ABB68()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_2457AD280();
  sub_2457AB14C(v1, v2, v3, v4, v5, v6, v7, v8, v9, *(void **)(v0 + 64));
  sub_245777104();
}

uint64_t sub_2457ABB8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2457ABB98(a1, a2, a3, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2457AB574);
}

uint64_t sub_2457ABB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  uint64_t v4;

  return a4(a1, a2, a3, *(_QWORD *)(v4 + 16), *(unsigned __int8 *)(v4 + 24), *(_QWORD *)(v4 + 32), *(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48));
}

void sub_2457ABBB0(void *a1, SEL *a2)
{
  id v2;
  void *v3;

  v2 = objc_msgSend(a1, *a2);
  if (v2)
  {
    v3 = v2;
    sub_2457BB164();

  }
  sub_245748A90();
}

unint64_t sub_2457ABC14()
{
  unint64_t result;

  result = qword_25749A400;
  if (!qword_25749A400)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextCompositionClient.RewritingType, &type metadata for TextCompositionClient.RewritingType);
    atomic_store(result, (unint64_t *)&qword_25749A400);
  }
  return result;
}

unint64_t sub_2457ABC54()
{
  unint64_t result;

  result = qword_25749A408;
  if (!qword_25749A408)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextCompositionClient.TCDocumentType, &type metadata for TextCompositionClient.TCDocumentType);
    atomic_store(result, (unint64_t *)&qword_25749A408);
  }
  return result;
}

void sub_2457ABC90(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  sub_2457567FC(&qword_254416E98, a2, (uint64_t (*)(uint64_t))type metadata accessor for TextCompositionClient, (uint64_t)&protocol conformance descriptor for TextCompositionClient);
  *(_QWORD *)(a1 + 8) = v3;
}

uint64_t method lookup function for TextCompositionClient()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TextCompositionClient.requestCancellation(token:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of TextCompositionClient.cancelRequest(token:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x88))();
}

uint64_t dispatch thunk of TextCompositionClient.requestPrewarming(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x90))();
}

uint64_t dispatch thunk of TextCompositionClient.requestPrewarmingForSmartReplies(documentType:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x98))();
}

uint64_t dispatch thunk of TextCompositionClient.requestPrewarmingForSmartReplies(documentType:options:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of TextCompositionClient.actualRangeForRewritingOrReview(of:range:rewritingType:options:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of TextCompositionClient.canHandle(attributedString:range:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of TextCompositionClient.requestReview(of:range:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_2457AD18C();
  sub_2457ACF10();
  v1 = (_QWORD *)sub_2457ACDC8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_2457ACE9C(v1, (uint64_t)sub_2457ABDF8);
  return sub_2457ACCA0(v2, v3, v4, v5, v6);
}

uint64_t sub_2457ABDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_2457ACC60();
  return sub_2457ACDF0(a1, a2, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t dispatch thunk of TextCompositionClient.requestReview(of:range:options:resultHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of TextCompositionClient.streamForReview(of:range:options:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of TextCompositionClient.requestRewriting(of:range:rewritingType:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_2457ACE24();
  sub_2457ACD98();
  v1 = (_QWORD *)sub_2457ACCEC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_2457ACCC8(v1, (uint64_t)sub_2457ABEB8);
  return sub_2457ACCB4(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_2457ABEB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  sub_2457AD18C();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  sub_2457ACC60();
  return sub_2457ACCA0(v8, v6, v4, v2, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t dispatch thunk of TextCompositionClient.requestRewriting(of:range:rewritingType:options:resultHandler:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of TextCompositionClient.streamForRewriting(of:range:rewritingType:options:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of TextCompositionClient.requestDescription(for:index:in:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_2457AD18C();
  sub_2457ACF10();
  v1 = (_QWORD *)sub_2457ACDC8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_2457ACE9C(v1, (uint64_t)sub_2457ABF84);
  return sub_2457ACCA0(v2, v3, v4, v5, v6);
}

uint64_t sub_2457ABF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_2457ACC60();
  return sub_2457ACF9C(a1, a2, a3, *(uint64_t (**)(void))(v3 + 8));
}

uint64_t dispatch thunk of TextCompositionClient.requestShortFormSmartReplies(with:documentType:options:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)sub_2457ACCEC();
  *(_QWORD *)(v3 + 16) = v7;
  sub_2457AD20C(v7, (uint64_t)sub_2457ACB7C);
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of TextCompositionClient.requestLongFormSmartReplies(with:documentType:replyType:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_2457ACE24();
  sub_2457ACD98();
  v1 = (_QWORD *)sub_2457ACCEC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_2457ACCC8(v1, (uint64_t)sub_2457ACB7C);
  return sub_2457ACCB4(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of TextCompositionClient.requestUserQuestionnaire(with:documentType:replyType:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_2457ACE24();
  sub_2457ACD98();
  v1 = (_QWORD *)sub_2457ACCEC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_2457ACCC8(v1, (uint64_t)sub_2457ACB7C);
  return sub_2457ACCB4(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of TextCompositionClient.requestLongFormSmartReplies(with:documentType:replyType:baseResponse:userFilledQuestionnaire:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v17;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = (_QWORD *)sub_2457ACDC8();
  *(_QWORD *)(v8 + 16) = v17;
  sub_2457AD20C(v17, (uint64_t)sub_2457ACB7C);
  return v19(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of TextCompositionClient.requestEmojiSmartReplies(inputContextHistory:tapbackMessageGUIDs:documentType:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  sub_2457AD18C();
  sub_2457ACF10();
  v1 = (_QWORD *)sub_2457ACDC8();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_2457ACE9C(v1, (uint64_t)sub_2457ACB7C);
  return sub_2457ACCA0(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of TextCompositionClient.requestEmojiSmartReplies(messageID:messageText:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_2457ACE24();
  sub_2457ACD98();
  v1 = (_QWORD *)sub_2457ACCEC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_2457ACCC8(v1, (uint64_t)sub_2457ACB7C);
  return sub_2457ACCB4(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of TextCompositionClient.requestLongFormSmartReplies(with:documentType:replyType:userFilledQuestionnaire:options:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  sub_2457AD1A0();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = (_QWORD *)sub_2457ACDC8();
  *(_QWORD *)(v0 + 16) = v13;
  sub_2457AD20C(v13, (uint64_t)sub_2457ACB7C);
  return v15(v12, v10, v8, v6, v4, v2);
}

uint64_t dispatch thunk of TextCompositionClient.requestUserQuestionnaire(with:documentType:replyType:baseResponse:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  _QWORD *v15;
  uint64_t (*v17)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v15 = (_QWORD *)sub_2457ACCEC();
  *(_QWORD *)(v7 + 16) = v15;
  sub_2457AD20C(v15, (uint64_t)sub_2457ACB7C);
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t dispatch thunk of TextCompositionClient.requestBasicLongFormRepliesAndQuestionnaire(with:documentType:replyType:options:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_2457ACE24();
  sub_2457ACD98();
  v1 = (_QWORD *)sub_2457ACCEC();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = sub_2457ACCC8(v1, (uint64_t)sub_2457ACC34);
  return sub_2457ACCB4(v2, v3, v4, v5, v6, v7);
}

uint64_t getEnumTagSinglePayload for TextCompositionClient.RewritingType(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 10) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v5 = v6 - 11;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for TextCompositionClient.RewritingType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_2457AC47C + 4 * byte_2457C5AB7[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_2457AC4B0 + 4 * byte_2457C5AB2[v4]))();
}

uint64_t sub_2457AC4B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457AC4B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457AC4C0);
  return result;
}

uint64_t sub_2457AC4CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457AC4D4);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_2457AC4D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457AC4E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TextCompositionClient.RewritingType()
{
  sub_245751428();
}

uint64_t storeEnumTagSinglePayload for TextCompositionClient.TCDocumentType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2457AC544 + 4 * byte_2457C5AC1[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2457AC578 + 4 * byte_2457C5ABC[v4]))();
}

uint64_t sub_2457AC578(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457AC580(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457AC588);
  return result;
}

uint64_t sub_2457AC594(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457AC59CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2457AC5A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457AC5A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for TextCompositionClient.TCDocumentType()
{
  sub_245751428();
}

uint64_t sub_2457AC5C0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_2457AC5E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_2457AC5F4()
{
  return swift_release();
}

void sub_2457AC5FC(uint64_t a1)
{
  uint64_t v1;
  void (*v2)(uint64_t *);
  uint64_t v3;

  v2 = *(void (**)(uint64_t *))(v1 + 16);
  v3 = a1;
  v2(&v3);
  sub_2457AD1D0();
}

uint64_t sub_2457AC62C()
{
  return sub_2457AC91C(&qword_25749A470);
}

uint64_t sub_2457AC638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2457AC9A0(a1, a2, a3, a4, a5, (uint64_t)&qword_25749A470, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_2457A8FD8);
}

uint64_t sub_2457AC64C()
{
  uint64_t v0;

  return swift_deallocObject();
}

void sub_2457AC670(uint64_t a1)
{
  uint64_t v1;

  sub_2457A9148(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), &qword_25749A478);
}

uint64_t sub_2457AC690()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2457AC6DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v12 = *(_QWORD *)(v1 + 56);
  v11 = *(_QWORD *)(v1 + 64);
  v8 = *(_BYTE *)(v1 + 48);
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v9;
  *v9 = v2;
  v9[1] = sub_2457ACB84;
  return sub_2457A8250(a1, v4, v5, v6, v7, v8, v12, v11);
}

uint64_t sub_2457AC7B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_2457AC828;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_25749A498 + dword_25749A498))(a1, v4);
}

uint64_t sub_2457AC828()
{
  uint64_t v0;

  sub_2457ACC60();
  return sub_245756DF8(*(uint64_t (**)(void))(v0 + 8));
}

void sub_2457AC84C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_2457A856C(a1, a2, a3, *(_QWORD *)(v3 + 16), *(_BYTE *)(v3 + 24));
}

uint64_t sub_2457AC858()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void sub_2457AC894(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  sub_2457A8808(a1, a2, a3, a4, a5, *(_QWORD *)(v5 + 16), *(_QWORD *)(v5 + 24), *(void (**)(_QWORD, uint64_t, uint64_t, uint64_t, id))(v5 + 32), *(_QWORD *)(v5 + 40), *(_QWORD *)(v5 + 48), *(_QWORD *)(v5 + 56), *(_BYTE *)(v5 + 64), *(void **)(v5 + 72), *(_QWORD *)(v5 + 80), *(_QWORD *)(v5 + 88));
}

void sub_2457AC8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  void (*v4)(_QWORD *, uint64_t);
  _QWORD v5[2];

  v4 = *(void (**)(_QWORD *, uint64_t))(v3 + 16);
  v5[0] = a1;
  v5[1] = a2;
  v4(v5, a3);
  sub_2457AD1D0();
}

uint64_t sub_2457AC910()
{
  return sub_2457AC91C(&qword_25749A4B0);
}

uint64_t sub_2457AC91C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = sub_245748A50(a1);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);

  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v1 + v4, v2);
  return swift_deallocObject();
}

uint64_t sub_2457AC98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2457AC9A0(a1, a2, a3, a4, a5, (uint64_t)&qword_25749A4B0, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))sub_2457A798C);
}

uint64_t sub_2457AC9A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  sub_2457AD134();
  v14 = *(unsigned __int8 *)(*(_QWORD *)(sub_245748A50(v13) - 8) + 80);
  return a7(v12, v11, v10, v9, v7, *(_QWORD *)(v8 + 16), v8 + ((v14 + 24) & ~v14));
}

void sub_2457ACA10(uint64_t a1)
{
  uint64_t v1;

  sub_2457A9148(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), &qword_25749A4B8);
}

uint64_t sub_2457ACA30()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_2457ACA7C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v11 = v1[3];
  v12 = v1[2];
  v4 = v1[5];
  v10 = v1[4];
  v5 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_2457ACB48;
  return sub_2457A6E50(a1, v12, v11, v10, v4, v5, v6, v7);
}

uint64_t sub_2457ACB48()
{
  uint64_t v0;

  sub_2457ACC60();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2457ACB74(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2457A7224(a1, a2, a3, *(_QWORD *)(v3 + 16));
}

void sub_2457ACC40(_QWORD *a1)
{
  sub_2457A52D4(a1);
}

uint64_t sub_2457ACC48()
{
  return swift_task_switch();
}

uint64_t sub_2457ACC54()
{
  return sub_2457BAE7C();
}

uint64_t sub_2457ACC60()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t sub_2457ACC80(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = a1;
  return sub_2457BB3BC();
}

uint64_t sub_2457ACCA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t sub_2457ACCB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t sub_2457ACCC8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t sub_2457ACCEC()
{
  return swift_task_alloc();
}

uint64_t sub_2457ACD00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_24574E0F8(v2, a2);
  return swift_beginAccess();
}

uint64_t sub_2457ACD24()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457ACD34()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 96) = v0;
  return swift_task_dealloc();
}

uint64_t sub_2457ACD54()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 88) = v0;
  return swift_task_dealloc();
}

uint64_t sub_2457ACD74(uint64_t a1)
{
  return sub_2457A5624(a1, 1, 0, 1, 0, 1);
}

uint64_t sub_2457ACD8C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

id sub_2457ACDB4(float a1)
{
  void *v1;
  float *v2;

  *v2 = a1;
  return v1;
}

uint64_t sub_2457ACDC8()
{
  return swift_task_alloc();
}

void sub_2457ACDDC(void *a1, uint64_t a2, uint64_t a3, const char *a4)
{
  NSObject *v4;
  uint8_t *v5;
  os_log_type_t v6;

  _os_log_impl(a1, v4, v6, a4, v5, 0xCu);
}

uint64_t sub_2457ACDF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t sub_2457ACDFC()
{
  return swift_task_alloc();
}

uint64_t sub_2457ACE1C()
{
  return swift_task_alloc();
}

uint64_t sub_2457ACE3C@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v3, v2, v1);
}

uint64_t sub_2457ACE4C()
{
  return swift_slowAlloc();
}

BOOL sub_2457ACE5C(os_log_type_t a1)
{
  NSObject *v1;

  return os_log_type_enabled(v1, a1);
}

uint64_t sub_2457ACE6C()
{
  return swift_slowAlloc();
}

__n128 sub_2457ACE7C(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  uint64_t v9;
  unsigned __int8 v10;
  unint64_t v11;
  unint64_t v12;
  __n128 result;

  *(_QWORD *)(v9 + 72) = a1;
  a1[1].n128_u64[0] = v12;
  a1[1].n128_u8[8] = v10;
  result = a9;
  a1[2] = a9;
  a1[3].n128_u64[0] = v11;
  return result;
}

uint64_t sub_2457ACE9C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t sub_2457ACEBC()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457ACEE4(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_2457ACEFC()
{
  return sub_2457BAE7C();
}

uint64_t sub_2457ACF40()
{
  return swift_arrayDestroy();
}

uint64_t sub_2457ACF50()
{
  return 0;
}

uint64_t sub_2457ACF5C()
{
  return sub_2457BB1C4();
}

uint64_t sub_2457ACF80()
{
  return sub_2457BB1C4();
}

uint64_t sub_2457ACF9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t sub_2457ACFAC()
{
  return sub_2457BB2A8();
}

uint64_t sub_2457ACFC4()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_2457ACFD8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 88) = v2;
  return sub_2457AB9A4(v1, (v0 & 0xC000000000000001) == 0, v0);
}

uint64_t sub_2457ACFF0()
{
  return swift_task_alloc();
}

uint64_t sub_2457AD038()
{
  return sub_2457BAE7C();
}

void sub_2457AD064(uint64_t a1, SEL *a2)
{
  void *v2;

  sub_2457ABBB0(v2, a2);
}

uint64_t sub_2457AD06C()
{
  return swift_bridgeObjectRetain();
}

void sub_2457AD080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, ...)
{
  va_list va;

  va_start(va, a5);
  sub_24576BB20((uint64_t)va);
}

uint64_t sub_2457AD094()
{
  return sub_2457BB068();
}

uint64_t sub_2457AD09C()
{
  return sub_2457A4948();
}

uint64_t sub_2457AD0A4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2457AD0B0()
{
  return sub_2457BAE7C();
}

uint64_t sub_2457AD0D4(uint64_t a1)
{
  uint64_t v1;

  return _s4Sage24ClassificationXPCRequestC7RequestOwst_0(v1, 1, 1, a1);
}

uint64_t sub_2457AD118()
{
  return sub_2457BAE64();
}

uint64_t sub_2457AD128()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457AD14C()
{
  return swift_release();
}

id sub_2457AD154(void *a1)
{
  return objc_msgSend(a1, sel_modifiedRange);
}

uint64_t sub_2457AD164()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2457AD174()
{
  return swift_release();
}

uint64_t sub_2457AD17C()
{
  return swift_release();
}

uint64_t sub_2457AD184()
{
  return swift_task_alloc();
}

uint64_t sub_2457AD1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  return sub_2457A735C(v2, a2, v3);
}

__n128 sub_2457AD1F8(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  uint64_t v9;
  __n128 result;

  *(_QWORD *)(v9 + 80) = a1;
  result = a9;
  a1[1] = a9;
  return result;
}

_QWORD *sub_2457AD20C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

id sub_2457AD22C()
{
  uint64_t v0;
  uint64_t v1;

  return *(id *)(v0 + 8 * v1 + 32);
}

uint64_t sub_2457AD24C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 80) = result;
  return result;
}

uint64_t sub_2457AD258()
{
  return sub_2457BB230();
}

uint64_t sub_2457AD264()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_2457AD270()
{
  return swift_release();
}

id sub_2457AD278(uint64_t a1, const char *a2)
{
  void *v2;

  return objc_msgSend(v2, a2);
}

void sub_2457AD2BC(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = *(_QWORD *)(a1 + v1);
}

void sub_2457AD2C8(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 64) = *(_QWORD *)(a1 + v1);
}

uint64_t sub_2457AD2D4(uint64_t a1, ...)
{
  uint64_t (*v1)(char *, uint64_t);
  uint64_t v2;
  va_list va;

  va_start(va, a1);
  return v1(va, v2);
}

void sub_2457AD2E0()
{
  JUMPOUT(0x24953AB20);
}

uint64_t sub_2457AD2EC()
{
  return swift_arrayDestroy();
}

uint64_t sub_2457AD2F8()
{
  return 0;
}

uint64_t sub_2457AD30C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = sub_2457BABAC();
  v6 = v5;
  if (v4)
  {
    (*(void (**)(uint64_t, unint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1+ ((*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v5 - 8) + 80)), v5);
    v7 = 0;
  }
  else
  {
    v7 = 1;
  }
  return sub_245767C04(a2, v7, 1, v6);
}

double sub_2457AD37C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  double result;

  if (*(_QWORD *)(a1 + 16))
  {
    v3 = *(_QWORD *)(a1 + 40);
    v2 = *(_QWORD *)(a1 + 48);
    v4 = *(_QWORD *)(a1 + 56);
    v5 = *(_QWORD *)(a1 + 64);
    v6 = *(_QWORD *)(a1 + 72);
    v7 = *(_QWORD *)(a1 + 80);
    v8 = *(_QWORD *)(a1 + 88);
    v9 = *(_QWORD *)(a1 + 104);
    v10 = *(_QWORD *)(a1 + 128);
    *(_BYTE *)a2 = *(_BYTE *)(a1 + 32);
    *(_QWORD *)(a2 + 8) = v3;
    *(_QWORD *)(a2 + 16) = v2;
    *(_QWORD *)(a2 + 24) = v4;
    *(_QWORD *)(a2 + 32) = v5;
    *(_QWORD *)(a2 + 40) = v6;
    *(_QWORD *)(a2 + 48) = v7;
    *(_QWORD *)(a2 + 56) = v8;
    *(_BYTE *)(a2 + 64) = *(_BYTE *)(a1 + 96);
    *(_QWORD *)(a2 + 72) = v9;
    *(_OWORD *)(a2 + 80) = *(_OWORD *)(a1 + 112);
    *(_QWORD *)(a2 + 96) = v10;
    sub_2457B2768(v3, v2, v4, v5, v6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    result = 0.0;
    *(_OWORD *)(a2 + 48) = 0u;
    *(_OWORD *)(a2 + 64) = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
    *(_QWORD *)(a2 + 88) = 0;
    *(_QWORD *)(a2 + 96) = 0;
    *(_QWORD *)(a2 + 80) = 1;
  }
  return result;
}

void TextMessage.SummarizationOptions.requestIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void TextMessage.SummarizationOptions.requestIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_2457805A4();
  *v1 = v2;
  v1[1] = v0;
  sub_245749FB4();
}

uint64_t (*TextMessage.SummarizationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void TextMessage.SummarizationOptions.requestedSummarizationStyles.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_24578086C();
  *(_QWORD *)(v1 + 16) = v0;
  sub_245748A90();
}

uint64_t (*TextMessage.SummarizationOptions.requestedSummarizationStyles.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TextMessage.SummarizationOptions.previousMessages.getter()
{
  return swift_bridgeObjectRetain();
}

void TextMessage.SummarizationOptions.previousMessages.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = a1;
  sub_245748A90();
}

uint64_t (*TextMessage.SummarizationOptions.previousMessages.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TextMessage.SummarizationOptions.init(requestIdentifier:requestedSummarizationStyles:previousMessages:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t TextMessage.SummarizationOptions.init(requestIdentifier:requestedSummarizationStyles:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  *a4 = result;
  a4[1] = a2;
  v4 = MEMORY[0x24BEE4AF8];
  a4[2] = a3;
  a4[3] = v4;
  return result;
}

uint64_t TextMessage.SummarizationOptions.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_2457ADDB0((uint64_t)&unk_25168FCC8, a1);
}

unint64_t sub_2457AD520(char a1)
{
  if (!a1)
    return 0xD000000000000011;
  if (a1 == 1)
    return 0xD00000000000001CLL;
  return 0xD000000000000010;
}

unint64_t sub_2457AD57C()
{
  char *v0;

  return sub_2457AD520(*v0);
}

void sub_2457AD584(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_2457ADE50(a1, a2);
  *a3 = v4;
}

uint64_t sub_2457AD5A8()
{
  sub_2457B2188();
  return sub_2457BB788();
}

uint64_t sub_2457AD5D0()
{
  sub_2457B2188();
  return sub_2457BB794();
}

void TextMessage.SummarizationOptions.encode(to:)()
{
  sub_2457ADFDC();
}

void TextMessage.SummarizationOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_2457AE170(a1, (uint64_t)&unk_25749A500, (uint64_t)sub_2457B2188, (uint64_t)&type metadata for TextMessage.SummarizationOptions.CodingKeys, a5, a6, a7, a8, vars0, vars8);
}

void sub_2457AD650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TextMessage.SummarizationOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_2457AD664()
{
  TextMessage.SummarizationOptions.encode(to:)();
}

uint64_t (*TextMessage.ClassificationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TextMessage.ClassificationOptions.isSenderImportant.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t TextMessage.ClassificationOptions.isSenderImportant.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*TextMessage.ClassificationOptions.isSenderImportant.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*TextMessage.ClassificationOptions.previousMessages.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::TextMessage::ClassificationOptions __swiftcall TextMessage.ClassificationOptions.init(requestIdentifier:isSenderImportant:previousMessages:)(Sage::TextMessage::ClassificationOptions requestIdentifier, Swift::Bool_optional isSenderImportant, Swift::OpaquePointer previousMessages)
{
  uint64_t v3;

  *(Swift::String *)v3 = requestIdentifier.requestIdentifier;
  *(Swift::Bool_optional *)(v3 + 16) = isSenderImportant;
  *(Swift::OpaquePointer *)(v3 + 24) = previousMessages;
  requestIdentifier.previousMessages = previousMessages;
  requestIdentifier.isSenderImportant = isSenderImportant;
  return requestIdentifier;
}

uint64_t sub_2457AD6C8()
{
  sub_2457B22B0();
  return sub_2457BB788();
}

uint64_t sub_2457AD6F0()
{
  sub_2457B22B0();
  return sub_2457BB794();
}

void TextMessage.ClassificationOptions.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_245758054();
  v2 = v1;
  v3 = sub_245748A50(&qword_25749A510);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245749280(v2, v2[3]);
  sub_2457B22B0();
  sub_2457BB77C();
  sub_2457B4CF8();
  if (!v0)
  {
    sub_2457807F8();
    sub_2457BB614();
    sub_245748A50(&qword_25749A4F0);
    sub_2457B2258((uint64_t)&unk_25749A4F8);
    sub_245780550();
  }
  sub_2457B4DF8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_2457B4E30();
  sub_245751240();
}

void TextMessage.ClassificationOptions.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  sub_245758054();
  v2 = v1;
  sub_245748A50(&qword_25749A520);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v3);
  sub_245780584();
  sub_2457B22B0();
  sub_24578064C();
  if (v0)
  {
    sub_245748AB0();
  }
  else
  {
    v4 = sub_24578083C();
    v6 = v5;
    sub_2457807F8();
    swift_bridgeObjectRetain();
    v8 = sub_2457BB554();
    sub_245748A50(&qword_25749A4F0);
    sub_2457B2258((uint64_t)&unk_25749A508);
    sub_245780830();
    sub_245780530();
    *(_QWORD *)v2 = v4;
    *(_QWORD *)(v2 + 8) = v6;
    *(_BYTE *)(v2 + 16) = v8;
    *(_QWORD *)(v2 + 24) = v7;
    sub_2457513E4();
    sub_245780768();
    sub_2457512F4();
  }
  sub_245751240();
}

void sub_2457AD9E4()
{
  TextMessage.ClassificationOptions.init(from:)();
}

void sub_2457AD9F8()
{
  TextMessage.ClassificationOptions.encode(to:)();
}

void TextMessage.ThreadClassificationOptions.requestIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void TextMessage.ThreadClassificationOptions.requestIdentifier.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_2457805A4();
  *v1 = v2;
  v1[1] = v0;
  sub_245749FB4();
}

uint64_t (*TextMessage.ThreadClassificationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void TextMessage.ThreadClassificationOptions.previousMessages.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_24578086C();
  *(_QWORD *)(v1 + 16) = v0;
  sub_245748A90();
}

uint64_t (*TextMessage.ThreadClassificationOptions.previousMessages.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::TextMessage::ThreadClassificationOptions __swiftcall TextMessage.ThreadClassificationOptions.init(requestIdentifier:previousMessages:)(Swift::String requestIdentifier, Swift::OpaquePointer previousMessages)
{
  uint64_t v2;
  Sage::TextMessage::ThreadClassificationOptions result;

  *(Swift::String *)v2 = requestIdentifier;
  *(Swift::OpaquePointer *)(v2 + 16) = previousMessages;
  result.requestIdentifier = requestIdentifier;
  result.previousMessages = previousMessages;
  return result;
}

uint64_t sub_2457ADA98()
{
  sub_2457B22EC();
  return sub_2457BB788();
}

uint64_t sub_2457ADAC0()
{
  sub_2457B22EC();
  return sub_2457BB794();
}

void TextMessage.ThreadClassificationOptions.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_245758054();
  v2 = v1;
  v4 = *(_QWORD *)(sub_245748A50(&qword_25749A528) - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245749280(v2, v2[3]);
  sub_2457B22EC();
  sub_245780740();
  sub_2457513AC();
  if (!v0)
  {
    sub_2457807F8();
    sub_245748A50(&qword_25749A4F0);
    sub_2457B2258((uint64_t)&unk_25749A4F8);
    sub_245780550();
  }
  sub_24578072C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_2457B4E30();
  sub_245751240();
}

void TextMessage.ThreadClassificationOptions.init(from:)()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  sub_245758054();
  v2 = v1;
  sub_245748A50(&qword_25749A538);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v3);
  sub_245780584();
  sub_2457B22EC();
  sub_24578064C();
  if (v0)
  {
    sub_245748AB0();
  }
  else
  {
    v4 = sub_24578083C();
    v6 = v5;
    sub_245748A50(&qword_25749A4F0);
    sub_2457807F8();
    sub_2457B2258((uint64_t)&unk_25749A508);
    v8 = v7;
    swift_bridgeObjectRetain();
    sub_245780830();
    sub_245748AC0();
    if (v8)
    {
      sub_2457512F4();
      sub_245748AB0();
    }
    else
    {
      *v2 = v4;
      v2[1] = v6;
      v2[2] = v9;
      sub_2457513E4();
      sub_245780768();
    }
    sub_2457512F4();
  }
  sub_245751240();
}

void sub_2457ADD4C()
{
  TextMessage.ThreadClassificationOptions.init(from:)();
}

void sub_2457ADD60()
{
  TextMessage.ThreadClassificationOptions.encode(to:)();
}

uint64_t (*TextMessage.ThreadSummarizationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*TextMessage.ThreadSummarizationOptions.requestedSummarizationStyles.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*TextMessage.ThreadSummarizationOptions.previousMessages.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TextMessage.ThreadSummarizationOptions.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_2457ADDB0((uint64_t)&unk_25168FF18, a1);
}

uint64_t sub_2457ADDB0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t);
  uint64_t result;
  uint64_t v12;

  sub_2457BAAD4();
  sub_245767C1C();
  MEMORY[0x24BDAC7A8](v4);
  sub_245749FF4();
  v5 = sub_24577DF8C(a1);
  sub_2457BAAC8();
  v6 = sub_2457BAAA4();
  v8 = v7;
  v9 = sub_2457B4D28();
  result = v10(v9);
  *a2 = v6;
  a2[1] = v8;
  v12 = MEMORY[0x24BEE4AF8];
  a2[2] = v5;
  a2[3] = v12;
  return result;
}

void sub_2457ADE50(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000002457C8FB0
    || (sub_245780540() & 1) != 0
    || a1 == 0xD00000000000001CLL && a2 == 0x80000002457CA240
    || (sub_245780540() & 1) != 0
    || a1 == 0xD000000000000010 && a2 == 0x80000002457CA280)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_245780540();
    sub_245751474();
  }
  sub_245749FB4();
}

uint64_t sub_2457ADF60()
{
  sub_2457B2328();
  return sub_2457BB788();
}

uint64_t sub_2457ADF88()
{
  sub_2457B2328();
  return sub_2457BB794();
}

void TextMessage.ThreadSummarizationOptions.encode(to:)()
{
  sub_2457ADFDC();
}

void sub_2457ADFDC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  _QWORD *v3;
  _QWORD *v4;
  uint64_t *v5;
  uint64_t v6;
  void (*v7)(void);

  sub_245758054();
  v7 = v2;
  v4 = v3;
  sub_245748A50(v5);
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v6);
  sub_24575136C();
  sub_245749280(v4, v4[3]);
  v7();
  sub_2457BB77C();
  sub_2457B4CF8();
  if (!v0)
  {
    sub_245748A50(&qword_257498E88);
    sub_2457B21FC((uint64_t)&unk_257498E90);
    sub_2457B4E10();
    sub_245780550();
    sub_245748A50(&qword_25749A4F0);
    sub_2457B2258((uint64_t)&unk_25749A4F8);
    sub_2457B4E10();
    sub_245780550();
  }
  sub_2457B4DF8(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  sub_2457B4E30();
  sub_245751240();
}

void TextMessage.ThreadSummarizationOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_2457AE170(a1, (uint64_t)&unk_25749A550, (uint64_t)sub_2457B2328, (uint64_t)&type metadata for TextMessage.ThreadSummarizationOptions.CodingKeys, a5, a6, a7, a8, vars0, vars8);
}

void sub_2457AE170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  void (*v11)(void);
  void (*v12)(void);
  _QWORD *v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t *v23;

  sub_245758054();
  v12 = v11;
  v14 = v13;
  v23 = v15;
  sub_245748A50(v16);
  sub_245767C1C();
  MEMORY[0x24BDAC7A8](v17);
  sub_245749FF4();
  sub_245749280(v14, v14[3]);
  v12();
  sub_2457BB770();
  if (v10)
  {
    sub_245748AB0();
  }
  else
  {
    LOBYTE(a10) = 0;
    v18 = sub_2457BB584();
    v20 = v19;
    v22 = v18;
    sub_2457514D0();
    v21 = sub_2457B4DE8((uint64_t)&unk_257498EC0);
    swift_bridgeObjectRetain();
    sub_2457806C4();
    if (v21)
    {
      sub_2457B4C08();
      sub_245751384();
      sub_245748AB0();
      sub_245751384();
    }
    else
    {
      sub_245748A50(&qword_25749A4F0);
      sub_2457B2258((uint64_t)&unk_25749A508);
      swift_bridgeObjectRetain();
      sub_2457BB5CC();
      sub_2457B4C08();
      swift_bridgeObjectRetain();
      sub_2457513E4();
      sub_245751384();
      *v23 = v22;
      v23[1] = v20;
      v23[2] = a10;
      v23[3] = a10;
      sub_245780768();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  sub_2457B4DC8();
  sub_245751240();
}

void sub_2457AE3A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  TextMessage.ThreadSummarizationOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_2457AE3B8()
{
  TextMessage.ThreadSummarizationOptions.encode(to:)();
}

uint64_t (*TextMessage.VisualPromptOptions.useCase.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TextMessage.VisualPromptOptions.extractVisualConcepts.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t TextMessage.VisualPromptOptions.extractVisualConcepts.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*TextMessage.VisualPromptOptions.extractVisualConcepts.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TextMessage.VisualPromptOptions.extractVisualTopLine.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 2);
}

uint64_t TextMessage.VisualPromptOptions.extractVisualTopLine.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = result;
  return result;
}

uint64_t (*TextMessage.VisualPromptOptions.extractVisualTopLine.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::TextMessage::VisualPromptOptions __swiftcall TextMessage.VisualPromptOptions.init(useCase:)(Sage::SummarizationClient::VisualPromptUseCase useCase)
{
  uint64_t v1;
  Sage::TextMessage::VisualPromptOptions result;

  *(_BYTE *)v1 = *(_BYTE *)useCase;
  *(_WORD *)(v1 + 1) = 1;
  result.useCase = useCase;
  return result;
}

uint64_t sub_2457AE438()
{
  sub_2457B2364();
  return sub_2457BB788();
}

uint64_t sub_2457AE460()
{
  sub_2457B2364();
  return sub_2457BB794();
}

void TextMessage.VisualPromptOptions.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_245758054();
  v2 = v1;
  v3 = sub_245748A50(&qword_25749A558);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245749280(v2, v2[3]);
  sub_2457B2364();
  sub_245780740();
  sub_24577E3E4();
  sub_2457BB68C();
  if (!v0)
  {
    sub_2457807A0();
    sub_2457807A0();
  }
  sub_24578072C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_2457B4DC8();
  sub_245751240();
}

void TextMessage.VisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  char v17;
  char v18;

  sub_245758054();
  v15 = v14;
  sub_245748A50(&qword_25749A568);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v16);
  sub_245780584();
  sub_2457B2364();
  sub_24578064C();
  if (!v13)
  {
    sub_24577E420();
    sub_2457806C4();
    v17 = sub_2457807C0();
    v18 = sub_2457807C0();
    sub_245780530();
    *v15 = a13;
    v15[1] = v17 & 1;
    v15[2] = v18 & 1;
  }
  sub_245748AB0();
  sub_2457B4DC8();
  sub_245751240();
}

void sub_2457AE6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TextMessage.VisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_2457AE6C8()
{
  TextMessage.VisualPromptOptions.encode(to:)();
}

uint64_t (*TextMessage.ThreadVisualPromptOptions.useCase.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::TextMessage::ThreadVisualPromptOptions __swiftcall TextMessage.ThreadVisualPromptOptions.init(useCase:)(Sage::TextMessage::ThreadVisualPromptOptions useCase)
{
  _BYTE *v1;

  *v1 = *(_BYTE *)useCase.useCase;
  return useCase;
}

uint64_t sub_2457AE700()
{
  sub_2457B23A0();
  return sub_2457BB788();
}

uint64_t sub_2457AE728()
{
  sub_2457B23A0();
  return sub_2457BB794();
}

void TextMessage.ThreadVisualPromptOptions.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  sub_245758054();
  v2 = v1;
  sub_245748A50(&qword_25749A570);
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v3);
  sub_245748AD0();
  sub_245749280(v2, v2[3]);
  sub_2457B23A0();
  sub_2457807E8();
  sub_24577E3E4();
  sub_2457BB68C();
  sub_245780848(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8));
  sub_245751240();
}

void TextMessage.ThreadVisualPromptOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, __int16 a11, char a12, char a13)
{
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  uint64_t v17;

  sub_245758054();
  v16 = v15;
  sub_245748A50(&qword_25749A580);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v17);
  sub_245748AD0();
  sub_245780584();
  sub_2457B23A0();
  sub_24578064C();
  if (!v13)
  {
    sub_24577E420();
    sub_2457BB5CC();
    sub_245780848(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8));
    *v16 = a13;
  }
  sub_245748AB0();
  sub_245751240();
}

void sub_2457AE8C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  TextMessage.ThreadVisualPromptOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8, vars0, vars8, SWORD2(vars8), SBYTE6(vars8), SHIBYTE(vars8));
}

void sub_2457AE8DC()
{
  TextMessage.ThreadVisualPromptOptions.encode(to:)();
}

void TextMessage.messageID.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void TextMessage.messageID.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  sub_2457805A4();
  *v1 = v2;
  v1[1] = v0;
  sub_245749FB4();
}

uint64_t (*TextMessage.messageID.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TextMessage.sender.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  unsigned __int8 v8;

  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  v8 = *(_BYTE *)(v1 + 48);
  *(_BYTE *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v5;
  *(_QWORD *)(a1 + 48) = v6;
  *(_BYTE *)(a1 + 56) = v7;
  swift_bridgeObjectRetain();
  sub_245778A84(v3, v4, v8);
  return swift_bridgeObjectRetain();
}

__n128 TextMessage.sender.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unint64_t v3;
  unsigned __int8 v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned __int8 v9;
  __n128 result;
  unsigned __int8 v11;
  __n128 v12;

  v12 = *a1;
  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u64[1];
  v4 = a1[2].n128_u8[0];
  v5 = a1[2].n128_u64[1];
  v6 = a1[3].n128_u64[0];
  v11 = a1[3].n128_u8[8];
  v7 = v1[2].n128_i64[0];
  v8 = v1[2].n128_i64[1];
  v9 = v1[3].n128_u8[0];
  swift_bridgeObjectRelease();
  sub_245778A98(v7, v8, v9);
  swift_bridgeObjectRelease();
  result = v12;
  v1[1] = v12;
  v1[2].n128_u64[0] = v2;
  v1[2].n128_u64[1] = v3;
  v1[3].n128_u8[0] = v4;
  v1[3].n128_u64[1] = v5;
  v1[4].n128_u64[0] = v6;
  v1[4].n128_u8[8] = v11;
  return result;
}

uint64_t (*TextMessage.sender.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TextMessage.recipients.getter()
{
  return swift_bridgeObjectRetain();
}

void TextMessage.recipients.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 80) = a1;
  sub_245748A90();
}

uint64_t (*TextMessage.recipients.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t TextMessage.dateReceived.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_2457B4BE0();
  sub_2457806FC();
  v0 = sub_245748AA4();
  return sub_24574A004(v0, v1, v2, v3);
}

uint64_t TextMessage.dateReceived.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(sub_2457B4BE0() + 28);
  v4 = sub_2457806FC();
  return sub_24574A004(v3, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 40));
}

uint64_t (*TextMessage.dateReceived.modify())(_QWORD, _QWORD)
{
  sub_2457B4BE0();
  return nullsub_1;
}

uint64_t TextMessage.isUnread.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(sub_2457B4BE0() + 32));
}

void TextMessage.isUnread.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(sub_2457B4BE0() + 32)) = a1;
  sub_245748A90();
}

uint64_t (*TextMessage.isUnread.modify())(_QWORD, _QWORD)
{
  sub_2457B4BE0();
  return nullsub_1;
}

void TextMessage.threadID.getter()
{
  sub_2457B4BE0();
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void TextMessage.threadID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_2457B4BE0();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*TextMessage.threadID.modify())(_QWORD, _QWORD)
{
  sub_2457B4BE0();
  return nullsub_1;
}

void TextMessage.body.getter()
{
  sub_2457B4BE0();
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void TextMessage.body.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_2457B4BE0();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*TextMessage.body.modify())(_QWORD, _QWORD)
{
  sub_2457B4BE0();
  return nullsub_1;
}

uint64_t TextMessage.tapbacks.getter()
{
  sub_2457B4BE0();
  return swift_bridgeObjectRetain();
}

void TextMessage.tapbacks.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_2457B4BE0() + 44);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  sub_245749FB4();
}

uint64_t (*TextMessage.tapbacks.modify())(_QWORD, _QWORD)
{
  sub_2457B4BE0();
  return nullsub_1;
}

uint64_t TextMessage.attachments.getter()
{
  sub_2457B4BE0();
  return swift_bridgeObjectRetain();
}

void TextMessage.attachments.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(sub_2457B4BE0() + 48);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  sub_245749FB4();
}

uint64_t (*TextMessage.attachments.modify())(_QWORD, _QWORD)
{
  sub_2457B4BE0();
  return nullsub_1;
}

uint64_t TextMessage.init(messageID:sender:recipients:dateReceived:isUnread:threadID:body:tapbacks:attachments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  int *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t, uint64_t);
  uint64_t result;
  __int128 v26;

  v26 = *a3;
  v15 = *((_QWORD *)a3 + 2);
  v14 = *((_QWORD *)a3 + 3);
  v16 = *((_BYTE *)a3 + 32);
  v17 = *((_QWORD *)a3 + 5);
  v18 = *((_QWORD *)a3 + 6);
  v19 = *((_BYTE *)a3 + 56);
  v20 = (int *)sub_2457B4BE0();
  v21 = (_QWORD *)(a9 + v20[9]);
  v22 = (_QWORD *)(a9 + v20[10]);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_OWORD *)(a9 + 16) = v26;
  *(_QWORD *)(a9 + 32) = v15;
  *(_QWORD *)(a9 + 40) = v14;
  *(_BYTE *)(a9 + 48) = v16;
  *(_QWORD *)(a9 + 56) = v17;
  *(_QWORD *)(a9 + 64) = v18;
  *(_BYTE *)(a9 + 72) = v19;
  *(_QWORD *)(a9 + 80) = a4;
  v23 = a9 + v20[7];
  sub_2457806FC();
  sub_2457B4D08();
  result = v24(v23, a5);
  *(_BYTE *)(a9 + v20[8]) = a6;
  *v21 = a7;
  v21[1] = a8;
  *v22 = a10;
  v22[1] = a11;
  *(_QWORD *)(a9 + v20[11]) = a12;
  *(_QWORD *)(a9 + v20[12]) = a13;
  return result;
}

uint64_t sub_2457AEE98(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v2 = a1 == 0x496567617373656DLL && a2 == 0xE900000000000044;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x6E65697069636572 && a2 == 0xEA00000000007374;
      if (v7 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x6563655265746164 && a2 == 0xEC00000064657669;
        if (v8 || (sub_2457BB6B0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x646165726E557369 && a2 == 0xE800000000000000;
          if (v9 || (sub_2457BB6B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x4449646165726874 && a2 == 0xE800000000000000;
            if (v10 || (sub_2457BB6B0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 2036625250 && a2 == 0xE400000000000000;
              if (v11 || (sub_2457BB6B0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x736B636162706174 && a2 == 0xE800000000000000;
                if (v12 || (sub_2457BB6B0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0x656D686361747461 && a2 == 0xEB0000000073746ELL)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v14 = sub_2457BB6B0();
                  swift_bridgeObjectRelease();
                  if ((v14 & 1) != 0)
                    return 8;
                  else
                    return 9;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2457AF25C()
{
  return 9;
}

uint64_t sub_2457AF264(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2457AF29C + 4 * byte_2457C5D80[a1]))(0x496567617373656DLL, 0xE900000000000044);
}

uint64_t sub_2457AF29C()
{
  return 0x7265646E6573;
}

uint64_t sub_2457AF2B0()
{
  return 0x6E65697069636572;
}

uint64_t sub_2457AF2CC()
{
  return 0x6563655265746164;
}

uint64_t sub_2457AF2EC()
{
  return 0x646165726E557369;
}

uint64_t sub_2457AF304()
{
  return 0x4449646165726874;
}

uint64_t sub_2457AF31C()
{
  return 2036625250;
}

uint64_t sub_2457AF32C()
{
  return 0x736B636162706174;
}

uint64_t sub_2457AF344()
{
  return 0x656D686361747461;
}

uint64_t sub_2457AF364()
{
  unsigned __int8 *v0;

  return sub_2457AF264(*v0);
}

uint64_t sub_2457AF36C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457AEE98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457AF390@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2457AF25C();
  *a1 = result;
  return result;
}

uint64_t sub_2457AF3B4()
{
  sub_2457B23DC();
  return sub_2457BB788();
}

uint64_t sub_2457AF3DC()
{
  sub_2457B23DC();
  return sub_2457BB794();
}

uint64_t TextMessage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  sub_245748A50(&qword_25749A588);
  sub_245767D78();
  MEMORY[0x24BDAC7A8](v4);
  sub_24575136C();
  sub_245749280(a1, a1[3]);
  sub_2457B23DC();
  sub_2457807E8();
  sub_2457513AC();
  if (!v1)
  {
    sub_24577E4D4();
    sub_245780790();
    sub_245780550();
    sub_2457514D0();
    sub_2457B4DE8((uint64_t)&unk_257498F88);
    sub_245780790();
    sub_245780550();
    type metadata accessor for TextMessage();
    sub_2457BAA98();
    sub_2457804C0((uint64_t)&unk_257498F90);
    sub_245780550();
    sub_2457BB650();
    sub_245781BB0();
    sub_245781BB0();
    sub_2457514D0();
    sub_2457B4DE8((uint64_t)&unk_25749A5A0);
    sub_245780790();
    sub_245780550();
    sub_245748A50(&qword_257498F98);
    sub_24577E510((uint64_t)&unk_257498FA0);
    sub_245780790();
    sub_245780550();
  }
  return sub_24578072C(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
}

void TextMessage.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  int *v23;
  __int128 v24;
  __int128 v25;
  char v26;
  __int128 v27;
  char v28;

  sub_245758054();
  v3 = v2;
  v18 = v4;
  v5 = sub_2457BAA98();
  v20 = *(_QWORD *)(v5 - 8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_24575136C();
  v19 = sub_245748A50(&qword_25749A5B0);
  MEMORY[0x24BDAC7A8](v19);
  sub_245749FF4();
  type metadata accessor for TextMessage();
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v7);
  sub_245749FF4();
  v10 = v9 - v8;
  v12 = (uint64_t *)(v10 + v11[9]);
  *v12 = 0;
  v12[1] = 0;
  v22 = v12;
  v23 = v11;
  v13 = v10;
  v14 = (uint64_t *)(v10 + v11[10]);
  *v14 = 0;
  v14[1] = 0;
  v21 = v14;
  sub_245749280(v3, v3[3]);
  sub_2457B23DC();
  sub_2457BB770();
  if (v0)
  {
    sub_2457B4D74();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    LOBYTE(v24) = 0;
    *(_QWORD *)v13 = sub_2457BB584();
    *(_QWORD *)(v13 + 8) = v15;
    sub_2457B4E48();
    sub_2457BB5CC();
    *(_OWORD *)(v13 + 16) = v24;
    *(_OWORD *)(v13 + 32) = v25;
    *(_BYTE *)(v13 + 48) = v26;
    *(_OWORD *)(v13 + 56) = v27;
    *(_BYTE *)(v13 + 72) = v28;
    sub_245748A50(&qword_257498F80);
    sub_2457B21FC((uint64_t)&unk_257498FC0);
    sub_2457B4D34();
    sub_2457806C4();
    *(_QWORD *)(v13 + 80) = v24;
    sub_2457804C0((uint64_t)&unk_257498FC8);
    sub_2457806C4();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 32))(v13 + v23[7], v1, v5);
    LOBYTE(v24) = 4;
    *(_BYTE *)(v13 + v23[8]) = sub_2457BB590() & 1;
    *v22 = sub_2457B4D18(5);
    v22[1] = v16;
    *v21 = sub_2457B4D18(6);
    v21[1] = v17;
    sub_245748A50(&qword_25749A598);
    sub_2457B21FC((uint64_t)&unk_25749A5B8);
    sub_2457B4D34();
    sub_2457806C4();
    *(_QWORD *)v23[11] = v24;
    sub_245748A50(&qword_257498F98);
    sub_24577E510((uint64_t)&unk_257498FD0);
    sub_2457B4D34();
    sub_2457BB5CC();
    sub_2457B4BE8();
    *(_QWORD *)v23[12] = v24;
    sub_2457B2490(0, v18);
    sub_2457B4D74();
    sub_2457B24D4(0);
  }
  sub_245751240();
}

void sub_2457AFBE8()
{
  TextMessage.init(from:)();
}

uint64_t sub_2457AFBFC(_QWORD *a1)
{
  return TextMessage.encode(to:)(a1);
}

BOOL static TextMessage.Tapback.TapbackType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void TextMessage.Tapback.TapbackType.hash(into:)()
{
  sub_2457BB734();
  sub_245748A90();
}

uint64_t sub_2457AFC48(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  char v14;

  v2 = a1 == 0x7472616568 && a2 == 0xE500000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701538156 && a2 == 0xE400000000000000;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x656B696C736964 && a2 == 0xE700000000000000;
      if (v7 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else
      {
        v8 = a1 == 0x7369736168706D65 && a2 == 0xE800000000000000;
        if (v8 || (sub_2457BB6B0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 3;
        }
        else
        {
          v9 = a1 == 0x686775616CLL && a2 == 0xE500000000000000;
          if (v9 || (sub_2457BB6B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 4;
          }
          else
          {
            v10 = a1 == 0x6E6F697473657571 && a2 == 0xE800000000000000;
            if (v10 || (sub_2457BB6B0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 5;
            }
            else
            {
              v11 = a1 == 0x696A6F6D65 && a2 == 0xE500000000000000;
              if (v11 || (sub_2457BB6B0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 6;
              }
              else
              {
                v12 = a1 == 0x69746172656E6567 && a2 == 0xEF696A6F6D456576;
                if (v12 || (sub_2457BB6B0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 7;
                }
                else if (a1 == 0x72656B63697473 && a2 == 0xE700000000000000)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v14 = sub_2457BB6B0();
                  swift_bridgeObjectRelease();
                  if ((v14 & 1) != 0)
                    return 8;
                  else
                    return 9;
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2457AFFD0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2457B0000 + 4 * byte_2457C5D89[a1]))(0x7472616568, 0xE500000000000000);
}

uint64_t sub_2457B0000()
{
  return 1701538156;
}

uint64_t sub_2457B0010()
{
  return 0x656B696C736964;
}

uint64_t sub_2457B0028()
{
  return 0x7369736168706D65;
}

uint64_t sub_2457B0040()
{
  return 0x686775616CLL;
}

uint64_t sub_2457B0050()
{
  return 0x6E6F697473657571;
}

uint64_t sub_2457B0068()
{
  return 0x696A6F6D65;
}

uint64_t sub_2457B0078()
{
  return 0x69746172656E6567;
}

uint64_t sub_2457B009C()
{
  return 0x72656B63697473;
}

uint64_t sub_2457B00B4()
{
  unsigned __int8 *v0;

  return sub_2457AFFD0(*v0);
}

uint64_t sub_2457B00BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457AFC48(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457B00E0()
{
  sub_2457B2510();
  return sub_2457BB788();
}

uint64_t sub_2457B0108()
{
  sub_2457B2510();
  return sub_2457BB794();
}

uint64_t sub_2457B0130()
{
  sub_2457B26B4();
  return sub_2457BB788();
}

uint64_t sub_2457B0158()
{
  sub_2457B26B4();
  return sub_2457BB794();
}

uint64_t sub_2457B0180()
{
  sub_2457B25C4();
  return sub_2457BB788();
}

uint64_t sub_2457B01A8()
{
  sub_2457B25C4();
  return sub_2457BB794();
}

uint64_t sub_2457B01D0()
{
  sub_2457B2678();
  return sub_2457BB788();
}

uint64_t sub_2457B01F8()
{
  sub_2457B2678();
  return sub_2457BB794();
}

uint64_t sub_2457B0220()
{
  sub_2457B2588();
  return sub_2457BB788();
}

uint64_t sub_2457B0248()
{
  sub_2457B2588();
  return sub_2457BB794();
}

uint64_t sub_2457B0270()
{
  sub_2457B272C();
  return sub_2457BB788();
}

uint64_t sub_2457B0298()
{
  sub_2457B272C();
  return sub_2457BB794();
}

uint64_t sub_2457B02C0()
{
  sub_2457B263C();
  return sub_2457BB788();
}

uint64_t sub_2457B02E8()
{
  sub_2457B263C();
  return sub_2457BB794();
}

uint64_t sub_2457B0310()
{
  sub_2457B26F0();
  return sub_2457BB788();
}

uint64_t sub_2457B0338()
{
  sub_2457B26F0();
  return sub_2457BB794();
}

uint64_t sub_2457B0360()
{
  sub_2457B2600();
  return sub_2457BB788();
}

uint64_t sub_2457B0388()
{
  sub_2457B2600();
  return sub_2457BB794();
}

uint64_t sub_2457B03B0()
{
  sub_2457B254C();
  return sub_2457BB788();
}

uint64_t sub_2457B03D8()
{
  sub_2457B254C();
  return sub_2457BB794();
}

void TextMessage.Tapback.TapbackType.encode(to:)()
{
  unsigned __int8 *v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  sub_245758054();
  v2 = v1;
  sub_245748A50(&qword_25749A5C8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v3);
  sub_245777190(v4, v16);
  sub_245748A50(&qword_25749A5D0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v5);
  sub_2457B4CA0(v6, v17);
  sub_245748A50(&qword_25749A5D8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v7);
  sub_245750F48();
  sub_245748A50(&qword_25749A5E0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v8);
  sub_245750F48();
  sub_245748A50(&qword_25749A5E8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v9);
  sub_245750F48();
  sub_245748A50(&qword_25749A5F0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v10);
  sub_245750F48();
  sub_245748A50(&qword_25749A5F8);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v11);
  sub_245750F48();
  sub_245748A50(&qword_25749A600);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v12);
  sub_24577744C();
  sub_245748A50(&qword_25749A608);
  sub_245767C1C();
  MEMORY[0x24BDAC7A8](v13);
  sub_24575136C();
  sub_245748A50(&qword_25749A610);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v14);
  sub_245749FF4();
  v15 = *v0;
  sub_245749280(v2, v2[3]);
  sub_2457B2510();
  sub_2457BB77C();
  __asm { BR              X9 }
}

void sub_2457B0660()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v5 - 89) = 0;
  sub_2457B272C();
  sub_2457B4BCC();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 120) + 8))(v1, v0);
  sub_245751240();
}

void TextMessage.Tapback.TapbackType.hashValue.getter()
{
  sub_2457514C4();
  sub_245767EAC();
  sub_2457513DC();
  sub_24575118C();
}

void TextMessage.Tapback.TapbackType.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  sub_245758054();
  v3 = v2;
  sub_245748A50(&qword_25749A668);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v4);
  sub_245750F48();
  sub_245748A50(&qword_25749A670);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v5);
  sub_245750F48();
  sub_245748A50(&qword_25749A678);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v6);
  sub_245750F48();
  sub_245748A50(&qword_25749A680);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v7);
  sub_245777190(v8, v29);
  sub_245748A50(&qword_25749A688);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v9);
  sub_245750F48();
  sub_245748A50(&qword_25749A690);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v10);
  sub_245750F48();
  sub_245748A50(&qword_25749A698);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v11);
  sub_2457B4CA0(v12, v30);
  sub_245748A50(&qword_25749A6A0);
  sub_245750F7C();
  MEMORY[0x24BDAC7A8](v13);
  sub_245750F48();
  v14 = sub_245748A50(&qword_25749A6A8);
  MEMORY[0x24BDAC7A8](v14);
  sub_24577744C();
  v15 = sub_245748A50(&qword_25749A6B0);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v16);
  sub_245749FF4();
  v19 = v18 - v17;
  v33 = (uint64_t)v3;
  sub_245749280(v3, v3[3]);
  sub_2457B2510();
  sub_2457BB770();
  if (!v0)
  {
    v32 = v15;
    v20 = sub_2457BB5E4();
    v21 = *(_QWORD *)(v20 + 16);
    if (v21)
    {
      v31 = *(unsigned __int8 *)(v20 + 32);
      sub_245750D90(1, v21, v20, v20 + 32, 0, (2 * v21) | 1);
      v23 = v22;
      v25 = v24;
      swift_bridgeObjectRelease();
      if (v23 == v25 >> 1)
        __asm { BR              X9 }
    }
    v26 = sub_2457BB470();
    swift_allocError();
    v28 = v27;
    sub_245748A50(&qword_2574980B0);
    *v28 = &type metadata for TextMessage.Tapback.TapbackType;
    sub_2457BB53C();
    sub_2457BB464();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v26 - 8) + 104))(v28, *MEMORY[0x24BEE26D0], v26);
    swift_willThrow();
    sub_2457B4C00();
    (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v19, v32);
  }
  sub_245749564(v33);
  sub_2457B4DC8();
  sub_245751240();
}

void sub_2457B0CA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, _QWORD);

  sub_2457B4E3C();
  sub_2457B4B94();
  if (!v0)
  {
    v2 = sub_2457B4C90();
    v3(v2, *(_QWORD *)(v1 - 304));
    sub_2457B4C00();
    sub_2457B4D28();
    JUMPOUT(0x2457B0E94);
  }
  sub_2457B4C00();
  sub_2457B4D28();
  JUMPOUT(0x2457B0C88);
}

void sub_2457B0DD0()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, _QWORD);

  sub_2457B4D50();
  v5 = *(_QWORD *)(v4 - 320);
  sub_2457B4BB8();
  if (v2)
  {
    sub_2457B4C00();
    JUMPOUT(0x2457B0C88);
  }
  v6 = sub_2457B4C64();
  v7(v6, *(_QWORD *)(v4 - 208));
  sub_2457B4C00();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v5);
  *v0 = *(_QWORD *)(v4 - 336);
  JUMPOUT(0x2457B0C8CLL);
}

void sub_2457B0E18()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);

  sub_2457B4D44();
  v5 = *(_QWORD *)(v4 - 320);
  sub_2457B4BB8();
  if (v2)
  {
    sub_2457B4C00();
    JUMPOUT(0x2457B0C80);
  }
  v6 = sub_2457B4C64();
  v7(v6);
  sub_2457B4C00();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v5);
  *v0 = *(_QWORD *)(v4 - 336);
  JUMPOUT(0x2457B0C8CLL);
}

void sub_2457B0EF8()
{
  TextMessage.Tapback.TapbackType.init(from:)();
}

void sub_2457B0F0C()
{
  TextMessage.Tapback.TapbackType.encode(to:)();
}

uint64_t TextMessage.Tapback.sender.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v1 + 64);
  return sub_2457B2768(v2, v3, v4, v5, v6);
}

void TextMessage.Tapback.emoji.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void TextMessage.Tapback.imageDescription.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void TextMessage.Tapback.init(type:sender:emoji:imageDescription:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  NSObject *v29;
  os_log_type_t v30;
  uint8_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v10 = *a1;
  v11 = *(_QWORD *)a2;
  v12 = *(_QWORD *)(a2 + 8);
  v14 = *(_QWORD *)(a2 + 16);
  v13 = *(_QWORD *)(a2 + 24);
  v15 = *(unsigned __int8 *)(a2 + 32);
  v16 = *(_QWORD *)(a2 + 40);
  v17 = *(_QWORD *)(a2 + 48);
  v18 = *(_BYTE *)(a2 + 56);
  if (v10 == 6)
  {
    if (!a4)
      goto LABEL_6;
    v19 = HIBYTE(a4) & 0xF;
    if ((a4 & 0x2000000000000000) == 0)
      v19 = a3 & 0xFFFFFFFFFFFFLL;
    if (!v19)
    {
LABEL_6:
      v35 = a3;
      v36 = a5;
      v20 = *(_QWORD *)a2;
      v21 = *(_QWORD *)(a2 + 8);
      v33 = *(_QWORD *)(a2 + 16);
      v22 = *(_QWORD *)(a2 + 24);
      v34 = *(unsigned __int8 *)(a2 + 32);
      v23 = *(_QWORD *)(a2 + 40);
      v24 = *(_QWORD *)(a2 + 48);
      v25 = *(_BYTE *)(a2 + 56);
      v26 = a4;
      sub_2457B2768(v11, v12, v33, v13, v15);
      v27 = qword_257497E38;
      v32 = v26;
      swift_bridgeObjectRetain();
      v37 = a6;
      sub_2457513E4();
      if (v27 != -1)
        swift_once();
      v28 = sub_245751504();
      v29 = sub_2457A0860(v28, (uint64_t)qword_257498E30);
      v30 = sub_2457BB350();
      if (os_log_type_enabled(v29, v30))
      {
        v31 = (uint8_t *)sub_2457B4C58();
        *(_WORD *)v31 = 0;
        sub_2457A07B8(&dword_245746000, v29, v30, ".emoji Tapback created without associated emoji character", v31);
        sub_24575105C();
      }

      v14 = v33;
      v15 = v34;
      sub_2457B27C0(v20, v21, v33, v22, v34);
      a6 = v37;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      a4 = v32;
      v18 = v25;
      v16 = v23;
      v17 = v24;
      v13 = v22;
      v12 = v21;
      v11 = v20;
      a3 = v35;
      a5 = v36;
      LOBYTE(v10) = 6;
    }
  }
  *(_BYTE *)a7 = v10;
  *(_QWORD *)(a7 + 8) = v11;
  *(_QWORD *)(a7 + 16) = v12;
  *(_QWORD *)(a7 + 24) = v14;
  *(_QWORD *)(a7 + 32) = v13;
  *(_QWORD *)(a7 + 40) = v15;
  *(_QWORD *)(a7 + 48) = v16;
  *(_QWORD *)(a7 + 56) = v17;
  *(_BYTE *)(a7 + 64) = v18;
  *(_QWORD *)(a7 + 72) = a3;
  *(_QWORD *)(a7 + 80) = a4;
  *(_QWORD *)(a7 + 88) = a5;
  *(_QWORD *)(a7 + 96) = a6;
  sub_2457B4C18();
}

double TextMessage.Tapback.init(type:emoji:imageDescription:)@<D0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned __int8 v17;
  NSObject *v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned __int8 v26;
  double result;

  v11 = *a1;
  if (v11 == 6)
  {
    if (!a3)
      goto LABEL_6;
    v12 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v12 = a2 & 0xFFFFFFFFFFFFLL;
    if (!v12)
    {
LABEL_6:
      v13 = sub_2457B4C34();
      sub_2457B2768(v13, v14, v15, v16, v17);
      v18 = qword_257497E38;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v18 != -1)
        swift_once();
      v19 = sub_245751504();
      sub_2457A0860(v19, (uint64_t)qword_257498E30);
      v20 = sub_245751514();
      if (os_log_type_enabled(v18, v20))
      {
        v21 = (uint8_t *)sub_2457B4C58();
        *(_WORD *)v21 = 0;
        sub_2457A07B8(&dword_245746000, v18, v20, ".emoji Tapback created without associated emoji character", v21);
        sub_24575105C();
      }

      v22 = sub_2457B4C34();
      sub_2457B27C0(v22, v23, v24, v25, v26);
      sub_245751474();
      swift_bridgeObjectRelease();
    }
  }
  *(_BYTE *)a6 = v11;
  *(_OWORD *)(a6 + 8) = xmmword_2457C13F0;
  result = 0.0;
  *(_OWORD *)(a6 + 24) = 0u;
  *(_OWORD *)(a6 + 40) = 0u;
  *(_OWORD *)(a6 + 49) = 0u;
  *(_QWORD *)(a6 + 72) = a2;
  *(_QWORD *)(a6 + 80) = a3;
  *(_QWORD *)(a6 + 88) = a4;
  *(_QWORD *)(a6 + 96) = a5;
  return result;
}

uint64_t sub_2457B12B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v8;

  v2 = a1 == 1701869940 && a2 == 0xE400000000000000;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x696A6F6D65 && a2 == 0xE500000000000000;
      if (v7 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0xD000000000000010 && a2 == 0x80000002457CACE0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = sub_2457BB6B0();
        swift_bridgeObjectRelease();
        if ((v8 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_2457B143C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2457B1468 + 4 * byte_2457C5DA4[a1]))(1701869940, 0xE400000000000000);
}

uint64_t sub_2457B1468()
{
  return 0x7265646E6573;
}

uint64_t sub_2457B147C()
{
  return 0x696A6F6D65;
}

unint64_t sub_2457B1490()
{
  return 0xD000000000000010;
}

uint64_t sub_2457B14AC()
{
  unsigned __int8 *v0;

  return sub_2457B143C(*v0);
}

uint64_t sub_2457B14B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457B12B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457B14D8()
{
  sub_2457B2818();
  return sub_2457BB788();
}

uint64_t sub_2457B1500()
{
  sub_2457B2818();
  return sub_2457BB794();
}

void TextMessage.Tapback.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_245758054();
  v2 = v1;
  v3 = sub_245748A50(&qword_25749A6B8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245749280(v2, v2[3]);
  sub_2457B2818();
  sub_2457BB77C();
  sub_2457B2854();
  sub_245780550();
  if (!v0)
  {
    sub_24577E4D4();
    sub_2457BB638();
    sub_245781BB0();
    sub_245781BB0();
  }
  sub_24578072C(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_2457B4E30();
  sub_245751240();
}

void TextMessage.Tapback.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;

  sub_245758054();
  v4 = v3;
  v6 = v5;
  sub_245748A50(&qword_25749A6D0);
  sub_245767D10();
  MEMORY[0x24BDAC7A8](v7);
  sub_24577744C();
  sub_245749280(v4, v4[3]);
  sub_2457B2818();
  sub_2457BB770();
  if (v0)
  {
    sub_2457B4DF0();
  }
  else
  {
    sub_2457B2890();
    sub_2457B4CDC();
    sub_2457BB5CC();
    sub_2457B4E48();
    sub_2457B4CDC();
    sub_2457BB578();
    sub_2457B2768(v14, v15, v16, v17, v18);
    v12 = sub_2457B4CC8();
    v13 = v8;
    swift_bridgeObjectRetain();
    v10 = sub_2457B4CC8();
    v11 = v9;
    sub_2457B4BF8(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
    sub_2457B2768(v14, v15, v16, v17, v18);
    swift_bridgeObjectRetain();
    sub_2457B27C0(v14, v15, v16, v17, v18);
    *(_BYTE *)v6 = v14;
    *(_QWORD *)(v6 + 8) = v14;
    *(_QWORD *)(v6 + 16) = v15;
    *(_QWORD *)(v6 + 24) = v16;
    *(_QWORD *)(v6 + 32) = v17;
    *(_QWORD *)(v6 + 40) = v18;
    *(_QWORD *)(v6 + 48) = v19;
    *(_QWORD *)(v6 + 56) = v20;
    *(_BYTE *)(v6 + 64) = v21;
    *(_QWORD *)(v6 + 72) = v12;
    *(_QWORD *)(v6 + 80) = v13;
    *(_QWORD *)(v6 + 88) = v10;
    *(_QWORD *)(v6 + 96) = v11;
    sub_2457B4DF0();
    sub_2457B27C0(v14, v15, v16, v17, v18);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_245751240();
}

void sub_2457B1A34()
{
  TextMessage.Tapback.init(from:)();
}

void sub_2457B1A48()
{
  TextMessage.Tapback.encode(to:)();
}

double TextMessage.tapback.getter@<D0>(uint64_t a1@<X8>)
{
  NSObject *v1;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  uint64_t v6;

  if (qword_257497E38 != -1)
    swift_once();
  v3 = sub_245751504();
  sub_2457A0860(v3, (uint64_t)qword_257498E30);
  v4 = sub_245751514();
  if (os_log_type_enabled(v1, v4))
  {
    v5 = (uint8_t *)sub_2457B4C58();
    *(_WORD *)v5 = 0;
    sub_2457A07B8(&dword_245746000, v1, v4, "TextMesssage.tapback is deperecated; use the array version.", v5);
    sub_24575105C();
  }

  v6 = *(uint64_t *)((char *)&v1->isa + *(int *)(sub_2457B4BE0() + 44));
  return sub_2457AD37C(v6, a1);
}

double sub_2457B1B24@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  __int128 v3;
  __int128 v4;
  double result;
  __int128 v6;
  _OWORD v7[4];
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  TextMessage.tapback.getter((uint64_t)v7);
  v2 = v10;
  v3 = v7[1];
  *(_OWORD *)a1 = v7[0];
  *(_OWORD *)(a1 + 16) = v3;
  v4 = v7[3];
  *(_OWORD *)(a1 + 32) = v7[2];
  *(_OWORD *)(a1 + 48) = v4;
  result = *(double *)&v8;
  v6 = v9;
  *(_OWORD *)(a1 + 64) = v8;
  *(_OWORD *)(a1 + 80) = v6;
  *(_QWORD *)(a1 + 96) = v2;
  return result;
}

void sub_2457B1B74(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13[13];

  v1 = a1[1];
  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v6 = a1[6];
  v7 = a1[7];
  v8 = a1[8];
  v9 = a1[9];
  v10 = a1[10];
  v11 = a1[11];
  v12 = a1[12];
  v13[0] = *a1;
  v13[1] = v1;
  v13[2] = v2;
  v13[3] = v3;
  v13[4] = v4;
  v13[5] = v5;
  v13[6] = v6;
  v13[7] = v7;
  v13[8] = v8;
  v13[9] = v9;
  v13[10] = v10;
  v13[11] = v11;
  v13[12] = v12;
  sub_2457B28CC(v13[0], v1, v2, v3, v4, v5, v6, v7, v8, v9, v10);
  TextMessage.tapback.setter(v13);
}

void TextMessage.tapback.setter(uint64_t *a1)
{
  NSObject *v1;
  NSObject *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_log_type_t v11;
  uint8_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = *a1;
  v3 = a1[1];
  v20 = a1[3];
  v21 = a1[2];
  v18 = a1[5];
  v19 = a1[4];
  v5 = a1[8];
  v16 = a1[7];
  v17 = a1[6];
  v6 = a1[9];
  v7 = a1[10];
  v8 = a1[11];
  v9 = a1[12];
  if (qword_257497E38 != -1)
    swift_once();
  v10 = sub_245751504();
  sub_2457A0860(v10, (uint64_t)qword_257498E30);
  v11 = sub_245751514();
  if (os_log_type_enabled(v1, v11))
  {
    v12 = (uint8_t *)sub_2457B4C58();
    *(_WORD *)v12 = 0;
    sub_2457A07B8(&dword_245746000, v1, v11, "TextMesssage.tapback is deperecated; use the array version.", v12);
    sub_24575105C();
  }

  if (v7 == 1)
  {
    v13 = *(int *)(sub_2457B4BE0() + 44);
    swift_bridgeObjectRelease();
    *(Class *)((char *)&v2->isa + v13) = (Class)MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_245748A50(&qword_25749A6E0);
    v14 = sub_2457B4E04();
    *(_OWORD *)(v14 + 16) = xmmword_2457BDEE0;
    *(_BYTE *)(v14 + 32) = v4;
    *(_QWORD *)(v14 + 40) = v3;
    *(_QWORD *)(v14 + 48) = v21;
    *(_QWORD *)(v14 + 56) = v20;
    *(_QWORD *)(v14 + 64) = v19;
    *(_QWORD *)(v14 + 72) = v18;
    *(_QWORD *)(v14 + 80) = v17;
    *(_QWORD *)(v14 + 88) = v16;
    *(_BYTE *)(v14 + 96) = v5;
    *(_QWORD *)(v14 + 104) = v6;
    *(_QWORD *)(v14 + 112) = v7;
    *(_QWORD *)(v14 + 120) = v8;
    *(_QWORD *)(v14 + 128) = v9;
    v15 = *(int *)(sub_2457B4BE0() + 44);
    swift_bridgeObjectRelease();
    *(Class *)((char *)&v2->isa + v15) = (Class)v14;
  }
  sub_2457B4C18();
}

void (*TextMessage.tapback.modify(_QWORD *a1))(uint64_t **a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[13] = v1;
  TextMessage.tapback.getter((uint64_t)v3);
  return sub_2457B1DF0;
}

void sub_2457B1DF0(uint64_t **a1)
{
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22[13];

  v1 = *a1;
  sub_2457B4DD4();
  if ((v2 & 1) != 0)
  {
    sub_2457B4C70();
    sub_2457B28CC(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13);
    TextMessage.tapback.setter(v22);
    v14 = sub_2457B4DD4();
    sub_2457B2934(v14, v15, v16, v17, v18, v19, v20, v21, v1[8], v1[9], v1[10]);
  }
  else
  {
    sub_2457B4C70();
    TextMessage.tapback.setter(v22);
  }
  free(v1);
}

uint64_t TextMessage.init(messageID:sender:recipients:dateReceived:isUnread:threadID:body:tapback:attachments:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t *a12, uint64_t a13)
{
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int *v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t (*v27)(uint64_t, uint64_t);
  uint64_t result;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  uint64_t v37;
  uint64_t v38;

  v14 = *a3;
  v15 = a3[3];
  v37 = a3[2];
  v38 = a3[1];
  v16 = *((_BYTE *)a3 + 32);
  v17 = a3[5];
  v18 = a3[6];
  v36 = *((_BYTE *)a3 + 56);
  v19 = a12[10];
  if (v19 == 1)
  {
    v20 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    v21 = a12[12];
    v34 = a12[9];
    v35 = a12[11];
    v32 = a12[7];
    v33 = a12[8];
    v30 = *(_OWORD *)(a12 + 3);
    v31 = *(_OWORD *)(a12 + 5);
    v29 = *(_OWORD *)(a12 + 1);
    v22 = *a12;
    sub_245748A50(&qword_25749A6E0);
    v20 = sub_2457B4E04();
    *(_OWORD *)(v20 + 16) = xmmword_2457BDEE0;
    *(_BYTE *)(v20 + 32) = v22;
    *(_OWORD *)(v20 + 40) = v29;
    *(_OWORD *)(v20 + 56) = v30;
    *(_OWORD *)(v20 + 72) = v31;
    *(_QWORD *)(v20 + 88) = v32;
    *(_BYTE *)(v20 + 96) = v33;
    *(_QWORD *)(v20 + 104) = v34;
    *(_QWORD *)(v20 + 112) = v19;
    *(_QWORD *)(v20 + 120) = v35;
    *(_QWORD *)(v20 + 128) = v21;
  }
  v23 = (int *)sub_2457B4BE0();
  v24 = (_QWORD *)(a9 + v23[9]);
  v25 = (_QWORD *)(a9 + v23[10]);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = v14;
  *(_QWORD *)(a9 + 24) = v38;
  *(_QWORD *)(a9 + 32) = v37;
  *(_QWORD *)(a9 + 40) = v15;
  *(_BYTE *)(a9 + 48) = v16;
  *(_QWORD *)(a9 + 56) = v17;
  *(_QWORD *)(a9 + 64) = v18;
  *(_BYTE *)(a9 + 72) = v36;
  *(_QWORD *)(a9 + 80) = a4;
  v26 = a9 + v23[7];
  sub_2457806FC();
  sub_2457B4D08();
  result = v27(v26, a5);
  *(_BYTE *)(a9 + v23[8]) = a6 & 1;
  *v24 = a7;
  v24[1] = a8;
  *v25 = a10;
  v25[1] = a11;
  *(_QWORD *)(a9 + v23[11]) = v20;
  *(_QWORD *)(a9 + v23[12]) = a13;
  return result;
}

__n128 TextMessage.init(messageID:sender:recipients:dateReceived:isUnread:threadID:body:attachments:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, __n128 *a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X4>, unsigned __int8 a6@<W5>, uint64_t a7@<X6>, uint64_t a8@<X7>, __n128 *a9@<X8>, uint64_t a10, uint64_t a11, unint64_t a12)
{
  unint64_t v14;
  unint64_t v15;
  unsigned __int8 v16;
  unint64_t v17;
  unint64_t v18;
  unsigned __int8 v19;
  int *v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  _QWORD *v23;
  _QWORD *v24;
  __n128 result;
  __n128 v26;

  v26 = *a3;
  v15 = a3[1].n128_u64[0];
  v14 = a3[1].n128_u64[1];
  v16 = a3[2].n128_u8[0];
  v17 = a3[2].n128_u64[1];
  v18 = a3[3].n128_u64[0];
  v19 = a3[3].n128_u8[8];
  v20 = (int *)sub_2457B4BE0();
  v21 = (char *)a9 + v20[7];
  sub_2457806FC();
  sub_2457B4D08();
  v22(v21, a5);
  v23 = (unint64_t *)((char *)a9->n128_u64 + v20[9]);
  v24 = (unint64_t *)((char *)a9->n128_u64 + v20[10]);
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  result = v26;
  a9[1] = v26;
  a9[2].n128_u64[0] = v15;
  a9[2].n128_u64[1] = v14;
  a9[3].n128_u8[0] = v16;
  a9[3].n128_u64[1] = v17;
  a9[4].n128_u64[0] = v18;
  a9[4].n128_u8[8] = v19;
  a9[5].n128_u64[0] = a4;
  a9->n128_u8[v20[8]] = a6;
  *v23 = a7;
  v23[1] = a8;
  *v24 = a10;
  v24[1] = a11;
  *(unint64_t *)((char *)a9->n128_u64 + v20[11]) = MEMORY[0x24BEE4AF8];
  *(unint64_t *)((char *)a9->n128_u64 + v20[12]) = a12;
  return result;
}

Sage::TextMessage::VisualPromptOptions __swiftcall TextMessage.VisualPromptOptions.init()()
{
  uint64_t v0;
  Sage::TextMessage::VisualPromptOptions result;

  *(_WORD *)v0 = 259;
  *(_BYTE *)(v0 + 2) = 0;
  return result;
}

Sage::TextMessage::VisualPromptOptions __swiftcall TextMessage.VisualPromptOptions.init(extractVisualConcepts:extractVisualTopLine:)(Swift::Bool extractVisualConcepts, Swift::Bool extractVisualTopLine)
{
  _BYTE *v2;
  Sage::TextMessage::VisualPromptOptions result;

  *v2 = 3;
  v2[1] = extractVisualConcepts;
  v2[2] = extractVisualTopLine;
  result.useCase = extractVisualConcepts;
  return result;
}

unint64_t sub_2457B2188()
{
  unint64_t result;

  result = qword_25749A4E8;
  if (!qword_25749A4E8)
  {
    result = MEMORY[0x24953B288](&unk_2457C72BC, &type metadata for TextMessage.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A4E8);
  }
  return result;
}

uint64_t type metadata accessor for TextMessage()
{
  uint64_t result;

  result = qword_25749A6F0;
  if (!qword_25749A6F0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_2457B21FC(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t *v3;
  void (*v4)(void);
  void (*v5)(void);
  uint64_t v6;

  result = sub_245780878(a1);
  if (!result)
  {
    v5 = v4;
    sub_24574B5EC(v3);
    v5();
    v6 = sub_2457B4D28();
    result = MEMORY[0x24953B288](v6);
    atomic_store(result, v1);
  }
  return result;
}

void sub_2457B2258(uint64_t a1)
{
  if (!sub_245780878(a1))
  {
    sub_24574B5EC(&qword_25749A4F0);
    sub_245780860();
    sub_245780754();
  }
  sub_2457806B0();
}

unint64_t sub_2457B22B0()
{
  unint64_t result;

  result = qword_25749A518;
  if (!qword_25749A518)
  {
    result = MEMORY[0x24953B288](&unk_2457C726C, &type metadata for TextMessage.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A518);
  }
  return result;
}

unint64_t sub_2457B22EC()
{
  unint64_t result;

  result = qword_25749A530;
  if (!qword_25749A530)
  {
    result = MEMORY[0x24953B288](&unk_2457C721C, &type metadata for TextMessage.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A530);
  }
  return result;
}

unint64_t sub_2457B2328()
{
  unint64_t result;

  result = qword_25749A548;
  if (!qword_25749A548)
  {
    result = MEMORY[0x24953B288](&unk_2457C71CC, &type metadata for TextMessage.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A548);
  }
  return result;
}

unint64_t sub_2457B2364()
{
  unint64_t result;

  result = qword_25749A560;
  if (!qword_25749A560)
  {
    result = MEMORY[0x24953B288](&unk_2457C717C, &type metadata for TextMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A560);
  }
  return result;
}

unint64_t sub_2457B23A0()
{
  unint64_t result;

  result = qword_25749A578;
  if (!qword_25749A578)
  {
    result = MEMORY[0x24953B288](&unk_2457C712C, &type metadata for TextMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A578);
  }
  return result;
}

unint64_t sub_2457B23DC()
{
  unint64_t result;

  result = qword_25749A590;
  if (!qword_25749A590)
  {
    result = MEMORY[0x24953B288](&unk_2457C70DC, &type metadata for TextMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A590);
  }
  return result;
}

unint64_t sub_2457B2418()
{
  unint64_t result;

  result = qword_25749A5A8;
  if (!qword_25749A5A8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.Tapback, &type metadata for TextMessage.Tapback);
    atomic_store(result, (unint64_t *)&qword_25749A5A8);
  }
  return result;
}

unint64_t sub_2457B2454()
{
  unint64_t result;

  result = qword_25749A5C0;
  if (!qword_25749A5C0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.Tapback, &type metadata for TextMessage.Tapback);
    atomic_store(result, (unint64_t *)&qword_25749A5C0);
  }
  return result;
}

uint64_t sub_2457B2490(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for TextMessage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2457B24D4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TextMessage();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2457B2510()
{
  unint64_t result;

  result = qword_25749A618;
  if (!qword_25749A618)
  {
    result = MEMORY[0x24953B288](&unk_2457C708C, &type metadata for TextMessage.Tapback.TapbackType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A618);
  }
  return result;
}

unint64_t sub_2457B254C()
{
  unint64_t result;

  result = qword_25749A620;
  if (!qword_25749A620)
  {
    result = MEMORY[0x24953B288](&unk_2457C703C, &type metadata for TextMessage.Tapback.TapbackType.StickerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A620);
  }
  return result;
}

unint64_t sub_2457B2588()
{
  unint64_t result;

  result = qword_25749A628;
  if (!qword_25749A628)
  {
    result = MEMORY[0x24953B288](&unk_2457C6FEC, &type metadata for TextMessage.Tapback.TapbackType.GenerativeEmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A628);
  }
  return result;
}

unint64_t sub_2457B25C4()
{
  unint64_t result;

  result = qword_25749A630;
  if (!qword_25749A630)
  {
    result = MEMORY[0x24953B288](&unk_2457C6F9C, &type metadata for TextMessage.Tapback.TapbackType.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A630);
  }
  return result;
}

unint64_t sub_2457B2600()
{
  unint64_t result;

  result = qword_25749A638;
  if (!qword_25749A638)
  {
    result = MEMORY[0x24953B288](&unk_2457C6F4C, &type metadata for TextMessage.Tapback.TapbackType.QuestionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A638);
  }
  return result;
}

unint64_t sub_2457B263C()
{
  unint64_t result;

  result = qword_25749A640;
  if (!qword_25749A640)
  {
    result = MEMORY[0x24953B288](&unk_2457C6EFC, &type metadata for TextMessage.Tapback.TapbackType.LaughCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A640);
  }
  return result;
}

unint64_t sub_2457B2678()
{
  unint64_t result;

  result = qword_25749A648;
  if (!qword_25749A648)
  {
    result = MEMORY[0x24953B288](&unk_2457C6EAC, &type metadata for TextMessage.Tapback.TapbackType.EmphasisCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A648);
  }
  return result;
}

unint64_t sub_2457B26B4()
{
  unint64_t result;

  result = qword_25749A650;
  if (!qword_25749A650)
  {
    result = MEMORY[0x24953B288](&unk_2457C6E5C, &type metadata for TextMessage.Tapback.TapbackType.DislikeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A650);
  }
  return result;
}

unint64_t sub_2457B26F0()
{
  unint64_t result;

  result = qword_25749A658;
  if (!qword_25749A658)
  {
    result = MEMORY[0x24953B288](&unk_2457C6E0C, &type metadata for TextMessage.Tapback.TapbackType.LikeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A658);
  }
  return result;
}

unint64_t sub_2457B272C()
{
  unint64_t result;

  result = qword_25749A660;
  if (!qword_25749A660)
  {
    result = MEMORY[0x24953B288](&unk_2457C6DBC, &type metadata for TextMessage.Tapback.TapbackType.HeartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A660);
  }
  return result;
}

uint64_t sub_2457B2768(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    sub_245778A84(a3, a4, a5);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2457B27C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned __int8 a5)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    sub_245778A98(a3, a4, a5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_2457B2818()
{
  unint64_t result;

  result = qword_25749A6C0;
  if (!qword_25749A6C0)
  {
    result = MEMORY[0x24953B288](&unk_2457C6D6C, &type metadata for TextMessage.Tapback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A6C0);
  }
  return result;
}

unint64_t sub_2457B2854()
{
  unint64_t result;

  result = qword_25749A6C8;
  if (!qword_25749A6C8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.Tapback.TapbackType, &type metadata for TextMessage.Tapback.TapbackType);
    atomic_store(result, (unint64_t *)&qword_25749A6C8);
  }
  return result;
}

unint64_t sub_2457B2890()
{
  unint64_t result;

  result = qword_25749A6D8;
  if (!qword_25749A6D8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.Tapback.TapbackType, &type metadata for TextMessage.Tapback.TapbackType);
    atomic_store(result, (unint64_t *)&qword_25749A6D8);
  }
  return result;
}

uint64_t sub_2457B28CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;

  if (a11 != 1)
  {
    sub_2457B2768(a2, a3, a4, a5, a6);
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2457B2934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned __int8 a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t result;

  if (a11 != 1)
  {
    sub_2457B27C0(a2, a3, a4, a5, a6);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_2457B29D0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_2457804C0((uint64_t)&unk_2574980F8);
  *(_QWORD *)(a1 + 8) = v2;
  sub_2457804C0((uint64_t)&unk_257498030);
  *(_QWORD *)(a1 + 16) = v3;
  sub_245748A90();
}

unint64_t sub_2457B2A2C()
{
  unint64_t result;

  result = qword_25749A6E8;
  if (!qword_25749A6E8)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for TextMessage.Tapback.TapbackType, &type metadata for TextMessage.Tapback.TapbackType);
    atomic_store(result, (unint64_t *)&qword_25749A6E8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for TextMessage(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t, uint64_t, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v12 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = *((unsigned __int8 *)a2 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9 == 255)
    {
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    }
    else
    {
      v10 = a2[4];
      v11 = a2[5];
      sub_24574E938(v10, v11, v9);
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v11;
      *(_BYTE *)(a1 + 48) = v9;
    }
    v13 = a2[8];
    *(_QWORD *)(a1 + 56) = a2[7];
    *(_QWORD *)(a1 + 64) = v13;
    *(_BYTE *)(a1 + 72) = *((_BYTE *)a2 + 72);
    *(_QWORD *)(a1 + 80) = a2[10];
    v14 = a3[7];
    v15 = a1 + v14;
    v16 = (uint64_t)a2 + v14;
    v17 = sub_2457BAA98();
    v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v18(v15, v16, v17);
    v19 = a3[9];
    *(_BYTE *)(a1 + a3[8]) = *((_BYTE *)a2 + a3[8]);
    v20 = (_QWORD *)(a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[10];
    v24 = a3[11];
    v25 = (_QWORD *)(a1 + v23);
    v26 = (uint64_t *)((char *)a2 + v23);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    *(_QWORD *)(a1 + v24) = *(uint64_t *)((char *)a2 + v24);
    *(_QWORD *)(a1 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TextMessage(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = *(unsigned __int8 *)(a1 + 48);
  if (v4 != 255)
    sub_24574EBF0(*(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 28);
  v6 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(uint64_t, uint64_t, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(unsigned __int8 *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    sub_24574E938(v9, v10, v8);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    *(_BYTE *)(a1 + 48) = v8;
  }
  v11 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v11;
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v12 = a3[7];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = sub_2457BAA98();
  v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v16(v13, v14, v15);
  v17 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = a3[10];
  v22 = a3[11];
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  *(_QWORD *)(a1 + v22) = *(_QWORD *)(a2 + v22);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextMessage(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 *v6;
  __int128 *v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned __int8 v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (__int128 *)(a1 + 32);
  v7 = (__int128 *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a2 + 48);
  if (*(unsigned __int8 *)(a1 + 48) == 255)
  {
    if (v8 == 255)
    {
      v17 = *v7;
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      *v6 = v17;
    }
    else
    {
      v14 = *(_QWORD *)(a2 + 32);
      v15 = *(_QWORD *)(a2 + 40);
      sub_24574E938(v14, v15, *(_BYTE *)(a2 + 48));
      *(_QWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 40) = v15;
      *(_BYTE *)(a1 + 48) = v8;
    }
  }
  else if (v8 == 255)
  {
    sub_245778D50(a1 + 32);
    v16 = *(_BYTE *)(a2 + 48);
    *v6 = *v7;
    *(_BYTE *)(a1 + 48) = v16;
  }
  else
  {
    v9 = *(_QWORD *)(a2 + 32);
    v10 = *(_QWORD *)(a2 + 40);
    sub_24574E938(v9, v10, *(_BYTE *)(a2 + 48));
    v11 = *(_QWORD *)(a1 + 32);
    v12 = *(_QWORD *)(a1 + 40);
    *(_QWORD *)(a1 + 32) = v9;
    *(_QWORD *)(a1 + 40) = v10;
    v13 = *(_BYTE *)(a1 + 48);
    *(_BYTE *)(a1 + 48) = v8;
    sub_24574EBF0(v11, v12, v13);
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 24))(v19, v20, v21);
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v25 = a3[10];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (_QWORD *)(a2 + v25);
  *v26 = *v27;
  v26[1] = v27[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TextMessage(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 57);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v9 = a3[7];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + 57) = v8;
  v12 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(_QWORD *)(a1 + v14) = *(_QWORD *)(a2 + v14);
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  return a1;
}

uint64_t assignWithTake for TextMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = (_OWORD *)(a2 + 32);
  v9 = *(unsigned __int8 *)(a1 + 48);
  if (v9 == 255)
    goto LABEL_5;
  v10 = *(unsigned __int8 *)(a2 + 48);
  if (v10 == 255)
  {
    sub_245778D50(a1 + 32);
LABEL_5:
    *(_OWORD *)(a1 + 32) = *v8;
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    goto LABEL_6;
  }
  v11 = *(_QWORD *)(a1 + 32);
  v12 = *(_QWORD *)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *v8;
  *(_BYTE *)(a1 + 48) = v10;
  sub_24574EBF0(v11, v12, v9);
LABEL_6:
  v13 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v13;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  v14 = a3[7];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = a3[9];
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  v19 = (_QWORD *)(a1 + v18);
  v20 = (uint64_t *)(a2 + v18);
  v22 = *v20;
  v21 = v20[1];
  *v19 = v22;
  v19[1] = v21;
  swift_bridgeObjectRelease();
  v23 = a3[10];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v27 = *v25;
  v26 = v25[1];
  *v24 = v27;
  v24[1] = v26;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[11]) = *(_QWORD *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[12]) = *(_QWORD *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2457B3258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_245749FB4();
  }
  else
  {
    v6 = sub_2457806FC();
    _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for TextMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2457B32CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_245749FB4();
  }
  else
  {
    v7 = sub_2457806FC();
    sub_245767C04(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

uint64_t sub_2457B3324()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2457BAA98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for TextMessage.SummarizationOptions()
{
  sub_245751428();
}

void type metadata accessor for TextMessage.ClassificationOptions()
{
  sub_245751428();
}

void sub_2457B33FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  sub_2457513E4();
  sub_245748A90();
}

void type metadata accessor for TextMessage.ThreadClassificationOptions()
{
  sub_245751428();
}

uint64_t _s4Sage11TextMessageV20SummarizationOptionsVwxx_0()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void _s4Sage11TextMessageV20SummarizationOptionsVwcp_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  sub_2457513E4();
  swift_bridgeObjectRetain();
  sub_245749FB4();
}

void _s4Sage11TextMessageV20SummarizationOptionsVwca_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  sub_2457808A4(a1, a2);
  v3[1] = *(_QWORD *)(v4 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3[2] = *(_QWORD *)(v2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v3[3] = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRetain();
  sub_245751474();
  sub_245749FB4();
}

void _s4Sage11TextMessageV20SummarizationOptionsVwta_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_2457808A4(a1, a2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v3 + 8) = *(_OWORD *)(v2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v3 + 24) = *(_QWORD *)(v2 + 24);
  swift_bridgeObjectRelease();
  sub_245748A90();
}

void type metadata accessor for TextMessage.ThreadSummarizationOptions()
{
  sub_245751428();
}

void type metadata accessor for TextMessage.VisualPromptOptions()
{
  sub_245751428();
}

void type metadata accessor for TextMessage.ThreadVisualPromptOptions()
{
  sub_245751428();
}

uint64_t destroy for TextMessage.Tapback(uint64_t a1)
{
  int v2;

  if (*(_QWORD *)(a1 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    v2 = *(unsigned __int8 *)(a1 + 40);
    if (v2 != 255)
      sub_24574EBF0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TextMessage.Tapback(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 == 1)
  {
    v6 = *(_OWORD *)(a2 + 24);
    *v4 = *(_OWORD *)(a2 + 8);
    v4[1] = v6;
    v4[2] = *(_OWORD *)(a2 + 40);
    *(_OWORD *)((char *)v4 + 41) = *(_OWORD *)(a2 + 49);
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v5;
    v7 = *(unsigned __int8 *)(a2 + 40);
    swift_bridgeObjectRetain();
    if (v7 == 255)
    {
      *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
      *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    }
    else
    {
      v8 = *(_QWORD *)(a2 + 24);
      v9 = *(_QWORD *)(a2 + 32);
      sub_24574E938(v8, v9, v7);
      *(_QWORD *)(a1 + 24) = v8;
      *(_QWORD *)(a1 + 32) = v9;
      *(_BYTE *)(a1 + 40) = v7;
    }
    v10 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v10;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    swift_bridgeObjectRetain();
  }
  v11 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v11;
  v12 = *(_QWORD *)(a2 + 88);
  v13 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v13;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for TextMessage.Tapback(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  __int128 *v16;
  __int128 *v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned __int8 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  __int128 v28;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = (__int128 *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 24);
      v9 = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 49) = *(_OWORD *)(a2 + 49);
      *(_OWORD *)(a1 + 24) = v8;
      *(_OWORD *)(a1 + 40) = v9;
      *v4 = v7;
    }
    else
    {
      *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      v13 = *(unsigned __int8 *)(a2 + 40);
      swift_bridgeObjectRetain();
      if (v13 == 255)
      {
        v24 = *(_OWORD *)(a2 + 24);
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        *(_OWORD *)(a1 + 24) = v24;
      }
      else
      {
        v14 = *(_QWORD *)(a2 + 24);
        v15 = *(_QWORD *)(a2 + 32);
        sub_24574E938(v14, v15, v13);
        *(_QWORD *)(a1 + 24) = v14;
        *(_QWORD *)(a1 + 32) = v15;
        *(_BYTE *)(a1 + 40) = v13;
      }
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_2457B38FC(a1 + 8);
    v11 = v5[1];
    v10 = v5[2];
    v12 = *v5;
    *(_OWORD *)((char *)v4 + 41) = *(__int128 *)((char *)v5 + 41);
    v4[1] = v11;
    v4[2] = v10;
    *v4 = v12;
  }
  else
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v16 = (__int128 *)(a1 + 24);
    v17 = (__int128 *)(a2 + 24);
    v18 = *(unsigned __int8 *)(a2 + 40);
    if (*(unsigned __int8 *)(a1 + 40) == 255)
    {
      if (v18 == 255)
      {
        v28 = *v17;
        *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
        *v16 = v28;
      }
      else
      {
        v25 = *(_QWORD *)(a2 + 24);
        v26 = *(_QWORD *)(a2 + 32);
        sub_24574E938(v25, v26, *(_BYTE *)(a2 + 40));
        *(_QWORD *)(a1 + 24) = v25;
        *(_QWORD *)(a1 + 32) = v26;
        *(_BYTE *)(a1 + 40) = v18;
      }
    }
    else if (v18 == 255)
    {
      sub_245778D50(a1 + 24);
      v27 = *(_BYTE *)(a2 + 40);
      *v16 = *v17;
      *(_BYTE *)(a1 + 40) = v27;
    }
    else
    {
      v19 = *(_QWORD *)(a2 + 24);
      v20 = *(_QWORD *)(a2 + 32);
      sub_24574E938(v19, v20, *(_BYTE *)(a2 + 40));
      v21 = *(_QWORD *)(a1 + 24);
      v22 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 24) = v19;
      *(_QWORD *)(a1 + 32) = v20;
      v23 = *(_BYTE *)(a1 + 40);
      *(_BYTE *)(a1 + 40) = v18;
      sub_24574EBF0(v21, v22, v23);
    }
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2457B38FC(uint64_t a1)
{
  destroy for Handle(a1);
  return a1;
}

void *initializeWithTake for TextMessage.Tapback(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for TextMessage.Tapback(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  _OWORD *v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 16) == 1)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 16);
  if (v6 != 1)
  {
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v6;
    swift_bridgeObjectRelease();
    v8 = (_OWORD *)(a2 + 24);
    v9 = *(unsigned __int8 *)(a1 + 40);
    if (v9 != 255)
    {
      v10 = *(unsigned __int8 *)(a2 + 40);
      if (v10 != 255)
      {
        v11 = *(_QWORD *)(a1 + 24);
        v12 = *(_QWORD *)(a1 + 32);
        *(_OWORD *)(a1 + 24) = *v8;
        *(_BYTE *)(a1 + 40) = v10;
        sub_24574EBF0(v11, v12, v9);
LABEL_10:
        v13 = *(_QWORD *)(a2 + 56);
        *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
        *(_QWORD *)(a1 + 56) = v13;
        swift_bridgeObjectRelease();
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        goto LABEL_11;
      }
      sub_245778D50(a1 + 24);
    }
    *(_OWORD *)(a1 + 24) = *v8;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    goto LABEL_10;
  }
  sub_2457B38FC((uint64_t)v4);
LABEL_4:
  v7 = v5[1];
  *v4 = *v5;
  v4[1] = v7;
  v4[2] = v5[2];
  *(_OWORD *)((char *)v4 + 41) = *(_OWORD *)((char *)v5 + 41);
LABEL_11:
  v14 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextMessage.Tapback(uint64_t a1, unsigned int a2)
{
  int v2;
  unint64_t v3;

  if (a2)
  {
    if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 104))
    {
      v2 = *(_DWORD *)a1 + 2147483646;
    }
    else
    {
      v3 = *(_QWORD *)(a1 + 80);
      if (v3 >= 0xFFFFFFFF)
        LODWORD(v3) = -1;
      v2 = v3 - 1;
      if (v2 < 0)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextMessage.Tapback(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 104) = 0;
    if (a2)
      *(_QWORD *)(result + 80) = a2;
  }
  return result;
}

void type metadata accessor for TextMessage.Tapback()
{
  sub_245751428();
}

void type metadata accessor for TextMessage.Tapback.TapbackType()
{
  sub_245751428();
}

uint64_t _s4Sage11TextMessageV25ThreadVisualPromptOptionsVwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2457B3B70 + 4 * byte_2457C5DAD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2457B3BA4 + 4 * byte_2457C5DA8[v4]))();
}

uint64_t sub_2457B3BA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457B3BB0);
  return result;
}

uint64_t sub_2457B3BB8(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457B3BC0);
  return sub_2457B4DB8();
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.CodingKeys()
{
  return &type metadata for TextMessage.Tapback.CodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.TapbackType.CodingKeys()
{
  return &type metadata for TextMessage.Tapback.TapbackType.CodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.TapbackType.HeartCodingKeys()
{
  return &type metadata for TextMessage.Tapback.TapbackType.HeartCodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.TapbackType.LikeCodingKeys()
{
  return &type metadata for TextMessage.Tapback.TapbackType.LikeCodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.TapbackType.DislikeCodingKeys()
{
  return &type metadata for TextMessage.Tapback.TapbackType.DislikeCodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.TapbackType.EmphasisCodingKeys()
{
  return &type metadata for TextMessage.Tapback.TapbackType.EmphasisCodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.TapbackType.LaughCodingKeys()
{
  return &type metadata for TextMessage.Tapback.TapbackType.LaughCodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.TapbackType.QuestionCodingKeys()
{
  return &type metadata for TextMessage.Tapback.TapbackType.QuestionCodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.TapbackType.EmojiCodingKeys()
{
  return &type metadata for TextMessage.Tapback.TapbackType.EmojiCodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.TapbackType.GenerativeEmojiCodingKeys()
{
  return &type metadata for TextMessage.Tapback.TapbackType.GenerativeEmojiCodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.Tapback.TapbackType.StickerCodingKeys()
{
  return &type metadata for TextMessage.Tapback.TapbackType.StickerCodingKeys;
}

uint64_t _s4Sage11TextMessageV7TapbackV11TapbackTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return sub_2457A07E0(-1);
  if (a2 < 0xF8)
    goto LABEL_17;
  if (a2 + 8 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 8) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return sub_2457A07E0((*a1 | (v4 << 8)) - 9);
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return sub_2457A07E0((*a1 | (v4 << 8)) - 9);
    }
    v4 = a1[1];
    if (a1[1])
      return sub_2457A07E0((*a1 | (v4 << 8)) - 9);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 9;
  v8 = v6 - 9;
  if (!v7)
    v8 = -1;
  return sub_2457A07E0(v8);
}

uint64_t _s4Sage11TextMessageV7TapbackV11TapbackTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 8 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 8) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF8)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF7)
    return ((uint64_t (*)(void))((char *)&loc_2457B3D50 + 4 * byte_2457C5DB7[v4]))();
  *a1 = a2 + 8;
  return ((uint64_t (*)(void))((char *)sub_2457B3D84 + 4 * byte_2457C5DB2[v4]))();
}

uint64_t sub_2457B3D88(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457B3D90);
  return result;
}

uint64_t sub_2457B3D98(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457B3DA0);
  return sub_2457B4DB8();
}

ValueMetadata *type metadata accessor for TextMessage.CodingKeys()
{
  return &type metadata for TextMessage.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for TextMessage.ThreadVisualPromptOptions.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2457B3E00 + 4 * byte_2457C5DBC[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2457B3E20 + 4 * byte_2457C5DC1[v4]))();
}

_BYTE *sub_2457B3E00(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2457B3E20(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2457B3E28(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2457B3E30(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2457B3E38(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2457B3E40(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for TextMessage.ThreadVisualPromptOptions.CodingKeys()
{
  return &type metadata for TextMessage.ThreadVisualPromptOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.VisualPromptOptions.CodingKeys()
{
  return &type metadata for TextMessage.VisualPromptOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.ThreadSummarizationOptions.CodingKeys()
{
  return &type metadata for TextMessage.ThreadSummarizationOptions.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for TextMessage.ThreadClassificationOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2457B3ECC + 4 * byte_2457C5DCB[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2457B3F00 + 4 * byte_2457C5DC6[v4]))();
}

uint64_t sub_2457B3F00(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B3F08(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457B3F10);
  return result;
}

uint64_t sub_2457B3F1C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457B3F24);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2457B3F28(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B3F30(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextMessage.ThreadClassificationOptions.CodingKeys()
{
  return &type metadata for TextMessage.ThreadClassificationOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for TextMessage.ClassificationOptions.CodingKeys()
{
  return &type metadata for TextMessage.ClassificationOptions.CodingKeys;
}

uint64_t _s4Sage11TextMessageV19VisualPromptOptionsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2457B3FA8 + 4 * byte_2457C5DD5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2457B3FDC + 4 * byte_2457C5DD0[v4]))();
}

uint64_t sub_2457B3FE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457B3FE8);
  return result;
}

uint64_t sub_2457B3FF0(uint64_t a1, int a2)
{
  *(_DWORD *)(a1 + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457B3FF8);
  return sub_2457B4DB8();
}

ValueMetadata *type metadata accessor for TextMessage.SummarizationOptions.CodingKeys()
{
  return &type metadata for TextMessage.SummarizationOptions.CodingKeys;
}

unint64_t sub_2457B401C()
{
  unint64_t result;

  result = qword_25749A700;
  if (!qword_25749A700)
  {
    result = MEMORY[0x24953B288](&unk_2457C64B4, &type metadata for TextMessage.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A700);
  }
  return result;
}

unint64_t sub_2457B405C()
{
  unint64_t result;

  result = qword_25749A708;
  if (!qword_25749A708)
  {
    result = MEMORY[0x24953B288](&unk_2457C656C, &type metadata for TextMessage.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A708);
  }
  return result;
}

unint64_t sub_2457B409C()
{
  unint64_t result;

  result = qword_25749A710;
  if (!qword_25749A710)
  {
    result = MEMORY[0x24953B288](&unk_2457C6624, &type metadata for TextMessage.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A710);
  }
  return result;
}

unint64_t sub_2457B40DC()
{
  unint64_t result;

  result = qword_25749A718;
  if (!qword_25749A718)
  {
    result = MEMORY[0x24953B288](&unk_2457C66DC, &type metadata for TextMessage.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A718);
  }
  return result;
}

unint64_t sub_2457B411C()
{
  unint64_t result;

  result = qword_25749A720;
  if (!qword_25749A720)
  {
    result = MEMORY[0x24953B288](&unk_2457C6794, &type metadata for TextMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A720);
  }
  return result;
}

unint64_t sub_2457B415C()
{
  unint64_t result;

  result = qword_25749A728;
  if (!qword_25749A728)
  {
    result = MEMORY[0x24953B288](&unk_2457C684C, &type metadata for TextMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A728);
  }
  return result;
}

unint64_t sub_2457B419C()
{
  unint64_t result;

  result = qword_25749A730;
  if (!qword_25749A730)
  {
    result = MEMORY[0x24953B288](&unk_2457C6904, &type metadata for TextMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A730);
  }
  return result;
}

unint64_t sub_2457B41DC()
{
  unint64_t result;

  result = qword_25749A738;
  if (!qword_25749A738)
  {
    result = MEMORY[0x24953B288](&unk_2457C6C8C, &type metadata for TextMessage.Tapback.TapbackType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A738);
  }
  return result;
}

unint64_t sub_2457B421C()
{
  unint64_t result;

  result = qword_25749A740;
  if (!qword_25749A740)
  {
    result = MEMORY[0x24953B288](&unk_2457C6D44, &type metadata for TextMessage.Tapback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A740);
  }
  return result;
}

unint64_t sub_2457B425C()
{
  unint64_t result;

  result = qword_25749A748;
  if (!qword_25749A748)
  {
    result = MEMORY[0x24953B288](&unk_2457C6CB4, &type metadata for TextMessage.Tapback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A748);
  }
  return result;
}

unint64_t sub_2457B429C()
{
  unint64_t result;

  result = qword_25749A750;
  if (!qword_25749A750)
  {
    result = MEMORY[0x24953B288](&unk_2457C6CDC, &type metadata for TextMessage.Tapback.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A750);
  }
  return result;
}

unint64_t sub_2457B42DC()
{
  unint64_t result;

  result = qword_25749A758;
  if (!qword_25749A758)
  {
    result = MEMORY[0x24953B288](&unk_2457C6BAC, &type metadata for TextMessage.Tapback.TapbackType.HeartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A758);
  }
  return result;
}

unint64_t sub_2457B431C()
{
  unint64_t result;

  result = qword_25749A760;
  if (!qword_25749A760)
  {
    result = MEMORY[0x24953B288](&unk_2457C6BD4, &type metadata for TextMessage.Tapback.TapbackType.HeartCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A760);
  }
  return result;
}

unint64_t sub_2457B435C()
{
  unint64_t result;

  result = qword_25749A768;
  if (!qword_25749A768)
  {
    result = MEMORY[0x24953B288](&unk_2457C6B5C, &type metadata for TextMessage.Tapback.TapbackType.LikeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A768);
  }
  return result;
}

unint64_t sub_2457B439C()
{
  unint64_t result;

  result = qword_25749A770;
  if (!qword_25749A770)
  {
    result = MEMORY[0x24953B288](&unk_2457C6B84, &type metadata for TextMessage.Tapback.TapbackType.LikeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A770);
  }
  return result;
}

unint64_t sub_2457B43DC()
{
  unint64_t result;

  result = qword_25749A778;
  if (!qword_25749A778)
  {
    result = MEMORY[0x24953B288](&unk_2457C6B0C, &type metadata for TextMessage.Tapback.TapbackType.DislikeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A778);
  }
  return result;
}

unint64_t sub_2457B441C()
{
  unint64_t result;

  result = qword_25749A780;
  if (!qword_25749A780)
  {
    result = MEMORY[0x24953B288](&unk_2457C6B34, &type metadata for TextMessage.Tapback.TapbackType.DislikeCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A780);
  }
  return result;
}

unint64_t sub_2457B445C()
{
  unint64_t result;

  result = qword_25749A788;
  if (!qword_25749A788)
  {
    result = MEMORY[0x24953B288](&unk_2457C6ABC, &type metadata for TextMessage.Tapback.TapbackType.EmphasisCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A788);
  }
  return result;
}

unint64_t sub_2457B449C()
{
  unint64_t result;

  result = qword_25749A790;
  if (!qword_25749A790)
  {
    result = MEMORY[0x24953B288](&unk_2457C6AE4, &type metadata for TextMessage.Tapback.TapbackType.EmphasisCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A790);
  }
  return result;
}

unint64_t sub_2457B44DC()
{
  unint64_t result;

  result = qword_25749A798;
  if (!qword_25749A798)
  {
    result = MEMORY[0x24953B288](&unk_2457C6A6C, &type metadata for TextMessage.Tapback.TapbackType.LaughCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A798);
  }
  return result;
}

unint64_t sub_2457B451C()
{
  unint64_t result;

  result = qword_25749A7A0;
  if (!qword_25749A7A0)
  {
    result = MEMORY[0x24953B288](&unk_2457C6A94, &type metadata for TextMessage.Tapback.TapbackType.LaughCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7A0);
  }
  return result;
}

unint64_t sub_2457B455C()
{
  unint64_t result;

  result = qword_25749A7A8;
  if (!qword_25749A7A8)
  {
    result = MEMORY[0x24953B288](&unk_2457C6A1C, &type metadata for TextMessage.Tapback.TapbackType.QuestionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7A8);
  }
  return result;
}

unint64_t sub_2457B459C()
{
  unint64_t result;

  result = qword_25749A7B0;
  if (!qword_25749A7B0)
  {
    result = MEMORY[0x24953B288](&unk_2457C6A44, &type metadata for TextMessage.Tapback.TapbackType.QuestionCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7B0);
  }
  return result;
}

unint64_t sub_2457B45DC()
{
  unint64_t result;

  result = qword_25749A7B8;
  if (!qword_25749A7B8)
  {
    result = MEMORY[0x24953B288](&unk_2457C69CC, &type metadata for TextMessage.Tapback.TapbackType.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7B8);
  }
  return result;
}

unint64_t sub_2457B461C()
{
  unint64_t result;

  result = qword_25749A7C0;
  if (!qword_25749A7C0)
  {
    result = MEMORY[0x24953B288](&unk_2457C69F4, &type metadata for TextMessage.Tapback.TapbackType.EmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7C0);
  }
  return result;
}

unint64_t sub_2457B465C()
{
  unint64_t result;

  result = qword_25749A7C8;
  if (!qword_25749A7C8)
  {
    result = MEMORY[0x24953B288](&unk_2457C697C, &type metadata for TextMessage.Tapback.TapbackType.GenerativeEmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7C8);
  }
  return result;
}

unint64_t sub_2457B469C()
{
  unint64_t result;

  result = qword_25749A7D0;
  if (!qword_25749A7D0)
  {
    result = MEMORY[0x24953B288](&unk_2457C69A4, &type metadata for TextMessage.Tapback.TapbackType.GenerativeEmojiCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7D0);
  }
  return result;
}

unint64_t sub_2457B46DC()
{
  unint64_t result;

  result = qword_25749A7D8;
  if (!qword_25749A7D8)
  {
    result = MEMORY[0x24953B288](&unk_2457C692C, &type metadata for TextMessage.Tapback.TapbackType.StickerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7D8);
  }
  return result;
}

unint64_t sub_2457B471C()
{
  unint64_t result;

  result = qword_25749A7E0;
  if (!qword_25749A7E0)
  {
    result = MEMORY[0x24953B288](&unk_2457C6954, &type metadata for TextMessage.Tapback.TapbackType.StickerCodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7E0);
  }
  return result;
}

unint64_t sub_2457B475C()
{
  unint64_t result;

  result = qword_25749A7E8;
  if (!qword_25749A7E8)
  {
    result = MEMORY[0x24953B288](&unk_2457C6BFC, &type metadata for TextMessage.Tapback.TapbackType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7E8);
  }
  return result;
}

unint64_t sub_2457B479C()
{
  unint64_t result;

  result = qword_25749A7F0;
  if (!qword_25749A7F0)
  {
    result = MEMORY[0x24953B288](&unk_2457C6C24, &type metadata for TextMessage.Tapback.TapbackType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7F0);
  }
  return result;
}

unint64_t sub_2457B47DC()
{
  unint64_t result;

  result = qword_25749A7F8;
  if (!qword_25749A7F8)
  {
    result = MEMORY[0x24953B288](&unk_2457C6874, &type metadata for TextMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A7F8);
  }
  return result;
}

unint64_t sub_2457B481C()
{
  unint64_t result;

  result = qword_25749A800;
  if (!qword_25749A800)
  {
    result = MEMORY[0x24953B288](&unk_2457C689C, &type metadata for TextMessage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A800);
  }
  return result;
}

unint64_t sub_2457B485C()
{
  unint64_t result;

  result = qword_25749A808;
  if (!qword_25749A808)
  {
    result = MEMORY[0x24953B288](&unk_2457C67BC, &type metadata for TextMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A808);
  }
  return result;
}

unint64_t sub_2457B489C()
{
  unint64_t result;

  result = qword_25749A810;
  if (!qword_25749A810)
  {
    result = MEMORY[0x24953B288](&unk_2457C67E4, &type metadata for TextMessage.ThreadVisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A810);
  }
  return result;
}

unint64_t sub_2457B48DC()
{
  unint64_t result;

  result = qword_25749A818;
  if (!qword_25749A818)
  {
    result = MEMORY[0x24953B288](&unk_2457C6704, &type metadata for TextMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A818);
  }
  return result;
}

unint64_t sub_2457B491C()
{
  unint64_t result;

  result = qword_25749A820;
  if (!qword_25749A820)
  {
    result = MEMORY[0x24953B288](&unk_2457C672C, &type metadata for TextMessage.VisualPromptOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A820);
  }
  return result;
}

unint64_t sub_2457B495C()
{
  unint64_t result;

  result = qword_25749A828;
  if (!qword_25749A828)
  {
    result = MEMORY[0x24953B288](&unk_2457C664C, &type metadata for TextMessage.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A828);
  }
  return result;
}

unint64_t sub_2457B499C()
{
  unint64_t result;

  result = qword_25749A830;
  if (!qword_25749A830)
  {
    result = MEMORY[0x24953B288](&unk_2457C6674, &type metadata for TextMessage.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A830);
  }
  return result;
}

unint64_t sub_2457B49DC()
{
  unint64_t result;

  result = qword_25749A838;
  if (!qword_25749A838)
  {
    result = MEMORY[0x24953B288](&unk_2457C6594, &type metadata for TextMessage.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A838);
  }
  return result;
}

unint64_t sub_2457B4A1C()
{
  unint64_t result;

  result = qword_25749A840;
  if (!qword_25749A840)
  {
    result = MEMORY[0x24953B288](&unk_2457C65BC, &type metadata for TextMessage.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A840);
  }
  return result;
}

unint64_t sub_2457B4A5C()
{
  unint64_t result;

  result = qword_25749A848;
  if (!qword_25749A848)
  {
    result = MEMORY[0x24953B288](&unk_2457C64DC, &type metadata for TextMessage.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A848);
  }
  return result;
}

unint64_t sub_2457B4A9C()
{
  unint64_t result;

  result = qword_25749A850;
  if (!qword_25749A850)
  {
    result = MEMORY[0x24953B288](&unk_2457C6504, &type metadata for TextMessage.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A850);
  }
  return result;
}

unint64_t sub_2457B4ADC()
{
  unint64_t result;

  result = qword_25749A858;
  if (!qword_25749A858)
  {
    result = MEMORY[0x24953B288](&unk_2457C6424, &type metadata for TextMessage.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A858);
  }
  return result;
}

unint64_t sub_2457B4B1C()
{
  unint64_t result;

  result = qword_25749A860;
  if (!qword_25749A860)
  {
    result = MEMORY[0x24953B288](&unk_2457C644C, &type metadata for TextMessage.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A860);
  }
  return result;
}

uint64_t sub_2457B4B94()
{
  return sub_2457BB530();
}

uint64_t sub_2457B4BB8()
{
  return sub_2457BB530();
}

uint64_t sub_2457B4BCC()
{
  return sub_2457BB5FC();
}

uint64_t sub_2457B4BE0()
{
  return type metadata accessor for TextMessage();
}

uint64_t sub_2457B4BE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t sub_2457B4BF8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t sub_2457B4C00()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_2457B4C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 96));
}

uint64_t sub_2457B4C34()
{
  return 0;
}

uint64_t sub_2457B4C58()
{
  return swift_slowAlloc();
}

uint64_t sub_2457B4C64()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_2457B4C90()
{
  uint64_t v0;

  return v0;
}

void sub_2457B4CA0(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void _s4Sage11TextMessageV19VisualPromptOptionsV7useCaseAA19SummarizationClientC0de3UseH0Ovg_0(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_2457B4CC8()
{
  return sub_2457BB548();
}

uint64_t sub_2457B4CF8()
{
  return sub_2457BB644();
}

uint64_t sub_2457B4D18@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 144) = a1;
  return sub_2457BB548();
}

uint64_t sub_2457B4D28()
{
  uint64_t v0;

  return v0;
}

unint64_t sub_2457B4D44()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 8;
  return sub_2457B254C();
}

unint64_t sub_2457B4D50()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 66) = 7;
  return sub_2457B2588();
}

unint64_t sub_2457B4D5C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 67) = 6;
  return sub_2457B25C4();
}

unint64_t sub_2457B4D68()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 68) = 5;
  return sub_2457B2600();
}

uint64_t sub_2457B4D74()
{
  uint64_t v0;

  return sub_245749564(v0);
}

unint64_t sub_2457B4D7C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 69) = 4;
  return sub_2457B263C();
}

unint64_t sub_2457B4D88()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 70) = 3;
  return sub_2457B2678();
}

uint64_t sub_2457B4D94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B4D9C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B4DA4()
{
  uint64_t v0;

  return v0;
}

_BYTE *sub_2457B4DB8@<X0>(_BYTE *result@<X0>, char a2@<W8>)
{
  *result = a2;
  return result;
}

uint64_t sub_2457B4DC0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B4DD4()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_2457B4DE8(uint64_t a1)
{
  return sub_2457B21FC(a1);
}

uint64_t sub_2457B4DF0()
{
  uint64_t v0;

  return sub_245749564(v0);
}

uint64_t sub_2457B4DF8@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t sub_2457B4E04()
{
  return swift_allocObject();
}

uint64_t sub_2457B4E10()
{
  uint64_t v0;

  return v0 - 72;
}

unint64_t sub_2457B4E24()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 71) = 2;
  return sub_2457B26B4();
}

unint64_t sub_2457B4E3C()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 72) = 1;
  return sub_2457B26F0();
}

unint64_t sub_2457B4E48()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
  return sub_24577E568();
}

void sub_2457B4E54()
{
  unsigned __int8 v0;
  char v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  sub_2457BA248();
  v3 = v0;
  if (v0)
  {
    if (v0 == 1)
      v4 = 0x6966697373616C63;
    else
      v4 = 1953719668;
    if (v3 == 1)
      v5 = 0xEE006E6F69746163;
    else
      v5 = 0xE400000000000000;
  }
  else
  {
    v5 = 0xE700000000000000;
    v4 = sub_2457A0338();
  }
  if (v1)
  {
    if (v1 == 1)
      v2 = 0x6966697373616C63;
    else
      v2 = 1953719668;
    if (v1 == 1)
      v6 = 0xEE006E6F69746163;
    else
      v6 = 0xE400000000000000;
  }
  else
  {
    v6 = 0xE700000000000000;
  }
  if (v4 == v2 && v5 == v6)
    sub_2457BA1C4();
  else
    sub_2457BA134();
  sub_245751474();
  sub_245776CB8();
  sub_245749FB4();
}

void sub_2457B4F2C(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2457B4F98(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2457B5024 + 4 * byte_2457C73E6[a2]))(0x6C69626967696C65);
}

void sub_2457B5024(uint64_t a1)
{
  uint64_t v1;

  if (a1 != 0x6C69626967696C65 || v1 != 0xEB00000000797469)
    sub_2457BA144();
  sub_245776CB8();
  sub_245751474();
  sub_245749FB4();
}

uint64_t sub_2457B50D0(char a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  if ((a1 & 1) != 0)
    v2 = 0x7373654D74786554;
  else
    v2 = 0x7373654D6C69614DLL;
  if ((a2 & 1) != 0)
    v3 = 0x7373654D74786554;
  else
    v3 = 0x7373654D6C69614DLL;
  if (v2 == v3)
    v4 = 1;
  else
    v4 = sub_2457BA144();
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

void sub_2457B5160(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2457B51B0(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2457B52C8 + 4 * byte_2457C73F7[a2]))(0x657369636E6F43);
}

void sub_2457B52C8(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x657369636E6F43 && v1 == 0xE700000000000000)
    sub_2457BA1C4();
  else
    sub_2457BA134();
  sub_245751474();
  sub_245776CB8();
  sub_245749FB4();
}

void sub_2457B53F0(char a1)
{
  __asm { BR              X14 }
}

uint64_t sub_2457B5464(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(void))((char *)sub_2457B54BC + 4 * byte_2457C740A[a2]))();
}

void sub_2457B54BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a1 == a3 && v4 == ((v3 - 32) | 0x8000000000000000))
    sub_2457BA1C4();
  else
    sub_2457BA134();
  sub_245751474();
  sub_245776CB8();
  sub_245749FB4();
}

void sub_2457B5554()
{
  sub_2457BA214();
  JUMPOUT(0x2457B5524);
}

void sub_2457B5560()
{
  JUMPOUT(0x2457B5524);
}

uint64_t sub_2457B5584()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = SummarizationClient.UseCase.rawValue.getter();
  v2 = v1;
  if (v0 == SummarizationClient.UseCase.rawValue.getter() && v2 == v3)
    sub_2457BA1C4();
  else
    LOBYTE(v0) = sub_2457BA134();
  sub_245751474();
  sub_245776CB8();
  return v0 & 1;
}

void sub_2457B5600(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_2457B5658(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2457B56AC + 4 * byte_2457C7416[a2]))(0x706150636967616DLL);
}

void sub_2457B56AC(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x706150636967616DLL && v1 == 0xEA00000000007265)
    sub_2457BA1C4();
  else
    sub_2457BA134();
  sub_245751474();
  sub_245776CB8();
  sub_245749FB4();
}

void sub_2457B5710(char a1)
{
  __asm { BR              X11 }
}

uint64_t sub_2457B575C(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_2457B57D8 + 4 * byte_2457C741E[a2]))(0x6973734174786574);
}

void sub_2457B57D8(uint64_t a1)
{
  uint64_t v1;

  if (a1 == 0x6973734174786574 && v1 == 0xED0000746E617473)
    sub_2457BA1C4();
  else
    sub_2457BA134();
  sub_245751474();
  sub_245776CB8();
  sub_245749FB4();
}

BOOL sub_2457B5864(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void UserNotification.SummarizationOptions.requestIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void UserNotification.SummarizationOptions.requestIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_2457BA16C();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*UserNotification.SummarizationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void UserNotification.SummarizationOptions.requestedSummarizationStyles.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_24578086C();
  *(_QWORD *)(v1 + 16) = v0;
  sub_245748A90();
}

uint64_t (*UserNotification.SummarizationOptions.requestedSummarizationStyles.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void UserNotification.SummarizationOptions.previousNotifications.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_2457BA228();
  *(_QWORD *)(v1 + 24) = v0;
  sub_245748A90();
}

uint64_t (*UserNotification.SummarizationOptions.previousNotifications.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UserNotification.SummarizationOptions.init(requestIdentifier:requestedSummarizationStyles:previousNotifications:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t UserNotification.SummarizationOptions.init(requestIdentifier:requestedSummarizationStyles:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;

  *a4 = result;
  a4[1] = a2;
  v4 = MEMORY[0x24BEE4AF8];
  a4[2] = a3;
  a4[3] = v4;
  return result;
}

uint64_t UserNotification.SummarizationOptions.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_2457B5AF0((uint64_t)&unk_251690168, a1);
}

unint64_t sub_2457B5954(char a1)
{
  unint64_t result;

  result = 0xD000000000000011;
  if (a1)
  {
    if (a1 == 1)
      return 0xD00000000000001CLL;
    else
      return 0xD000000000000015;
  }
  return result;
}

unint64_t sub_2457B59B8()
{
  char *v0;

  return sub_2457B5954(*v0);
}

void sub_2457B59C0(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v4;

  sub_2457B5B94(a1, a2);
  *a3 = v4;
}

uint64_t sub_2457B59E4()
{
  sub_2457B8920();
  return sub_2457BB788();
}

uint64_t sub_2457B5A0C()
{
  sub_2457B8920();
  return sub_2457BB794();
}

void UserNotification.SummarizationOptions.encode(to:)()
{
  sub_2457B5D38();
}

void UserNotification.SummarizationOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_2457B5EDC(a1, (uint64_t)&unk_25749A888, (uint64_t)sub_2457B8920, (uint64_t)&type metadata for UserNotification.SummarizationOptions.CodingKeys, a5, a6, a7, a8, vars0, vars8);
}

void sub_2457B5A8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  UserNotification.SummarizationOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_2457B5AA0()
{
  UserNotification.SummarizationOptions.encode(to:)();
}

uint64_t (*UserNotification.ThreadSummarizationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*UserNotification.ThreadSummarizationOptions.requestedSummarizationStyles.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*UserNotification.ThreadSummarizationOptions.previousNotifications.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UserNotification.ThreadSummarizationOptions.init()@<X0>(uint64_t *a1@<X8>)
{
  return sub_2457B5AF0((uint64_t)&unk_251690258, a1);
}

uint64_t sub_2457B5AF0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = sub_2457BAAD4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_245767B9C();
  v7 = sub_24577DF8C(a1);
  sub_2457BAAC8();
  v8 = sub_2457BAAA4();
  v10 = v9;
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8))(v2, v5);
  *a2 = v8;
  a2[1] = v10;
  v12 = MEMORY[0x24BEE4AF8];
  a2[2] = v7;
  a2[3] = v12;
  return result;
}

void sub_2457B5B94(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000002457C8FB0
    || (sub_2457BA144() & 1) != 0
    || a1 == 0xD00000000000001CLL && a2 == 0x80000002457CA240
    || (sub_2457BA144() & 1) != 0
    || a1 == 0xD000000000000015 && a2 == 0x80000002457CAD00)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_2457BA144();
    sub_245751474();
  }
  sub_245749FB4();
}

uint64_t sub_2457B5CBC()
{
  sub_2457B89EC();
  return sub_2457BB788();
}

uint64_t sub_2457B5CE4()
{
  sub_2457B89EC();
  return sub_2457BB794();
}

void UserNotification.ThreadSummarizationOptions.encode(to:)()
{
  sub_2457B5D38();
}

void sub_2457B5D38()
{
  uint64_t v0;
  void (*v1)(void);
  _QWORD *v2;
  _QWORD *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);

  sub_245758054();
  v7 = v1;
  v3 = v2;
  v5 = sub_245748A50(v4);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  sub_24575136C();
  sub_245749280(v3, v3[3]);
  v7();
  sub_2457BB77C();
  sub_2457B4CF8();
  if (!v0)
  {
    sub_245748A50(&qword_257498E88);
    sub_24577E1C4((uint64_t)&unk_257498E90);
    sub_2457B4E10();
    sub_2457BA194();
    sub_245748A50(&qword_25749A878);
    sub_2457B8994((uint64_t)&unk_25749A880);
    sub_2457B4E10();
    sub_2457BB68C();
  }
  sub_2457B4DF8(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  sub_245751240();
}

void UserNotification.ThreadSummarizationOptions.init(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_2457B5EDC(a1, (uint64_t)&unk_25749A8A8, (uint64_t)sub_2457B89EC, (uint64_t)&type metadata for UserNotification.ThreadSummarizationOptions.CodingKeys, a5, a6, a7, a8, vars0, vars8);
}

void sub_2457B5EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  void (*v11)(void);
  void (*v12)(void);
  _QWORD *v13;
  _QWORD *v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;

  sub_245758054();
  v12 = v11;
  v14 = v13;
  v21 = v15;
  v22 = sub_245748A50(v16);
  MEMORY[0x24BDAC7A8](v22);
  sub_245749FF4();
  sub_245749280(v14, v14[3]);
  v12();
  sub_2457BB770();
  if (v10)
  {
    sub_245748AB0();
  }
  else
  {
    LOBYTE(a10) = 0;
    v17 = sub_2457BB584();
    v19 = v18;
    v20 = v17;
    sub_245748A50(&qword_257498E88);
    sub_24577E1C4((uint64_t)&unk_257498EC0);
    swift_bridgeObjectRetain();
    sub_2457BB5CC();
    sub_245748A50(&qword_25749A878);
    sub_2457B8994((uint64_t)&unk_25749A890);
    swift_bridgeObjectRetain();
    sub_2457BB5CC();
    sub_2457B4C08();
    swift_bridgeObjectRetain();
    sub_2457513E4();
    sub_245751384();
    *v21 = v20;
    v21[1] = v19;
    v21[2] = a10;
    v21[3] = a10;
    sub_245780768();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_245751240();
}

void sub_2457B6128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  UserNotification.ThreadSummarizationOptions.init(from:)(a1, a2, a3, a4, a5, a6, a7, a8);
}

void sub_2457B613C()
{
  UserNotification.ThreadSummarizationOptions.encode(to:)();
}

uint64_t (*UserNotification.ClassificationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UserNotification.ClassificationOptions.isSenderImportant.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t UserNotification.ClassificationOptions.isSenderImportant.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*UserNotification.ClassificationOptions.isSenderImportant.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t (*UserNotification.ClassificationOptions.previousNotifications.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::UserNotification::ClassificationOptions __swiftcall UserNotification.ClassificationOptions.init(requestIdentifier:isSenderImportant:previousNotifications:)(Sage::UserNotification::ClassificationOptions requestIdentifier, Swift::Bool_optional isSenderImportant, Swift::OpaquePointer previousNotifications)
{
  uint64_t v3;

  *(Swift::String *)v3 = requestIdentifier.requestIdentifier;
  *(Swift::Bool_optional *)(v3 + 16) = isSenderImportant;
  *(Swift::OpaquePointer *)(v3 + 24) = previousNotifications;
  requestIdentifier.previousNotifications = previousNotifications;
  requestIdentifier.isSenderImportant = isSenderImportant;
  return requestIdentifier;
}

Sage::UserNotification::ClassificationOptions __swiftcall UserNotification.ClassificationOptions.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  Swift::Bool v10;
  void *v11;
  Sage::UserNotification::ClassificationOptions result;

  v2 = v0;
  v3 = sub_2457BAAD4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_245767B9C();
  sub_2457BAAC8();
  v5 = sub_2457BAAA4();
  v7 = v6;
  v8 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v1, v3);
  *(_QWORD *)v2 = v5;
  *(_QWORD *)(v2 + 8) = v7;
  *(_BYTE *)(v2 + 16) = 2;
  *(_QWORD *)(v2 + 24) = MEMORY[0x24BEE4AF8];
  result.previousNotifications._rawValue = v11;
  result.requestIdentifier._object = v9;
  result.requestIdentifier._countAndFlagsBits = v8;
  result.isSenderImportant.value = v10;
  return result;
}

uint64_t sub_2457B6234(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002457C8FB0 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000002457CA2A0 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002457CAD00)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_2457B6370(unsigned __int8 a1)
{
  unint64_t result;

  result = 0xD000000000000011;
  if (a1 >= 2u)
    return 0xD000000000000015;
  return result;
}

unint64_t sub_2457B63CC()
{
  unsigned __int8 *v0;

  return sub_2457B6370(*v0);
}

uint64_t sub_2457B63D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457B6234(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457B63F8()
{
  sub_2457B8A28();
  return sub_2457BB788();
}

uint64_t sub_2457B6420()
{
  sub_2457B8A28();
  return sub_2457BB794();
}

void UserNotification.ClassificationOptions.encode(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  sub_245758054();
  v2 = v1;
  v3 = sub_245748A50(&qword_25749A8B0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_24575136C();
  sub_245749280(v2, v2[3]);
  sub_2457B8A28();
  sub_2457BB77C();
  sub_2457B4CF8();
  if (!v0)
  {
    sub_2457807F8();
    sub_2457BB614();
    sub_245748A50(&qword_25749A878);
    sub_2457B8994((uint64_t)&unk_25749A880);
    sub_2457BA194();
  }
  sub_2457B4DF8(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  sub_245751240();
}

void UserNotification.ClassificationOptions.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  sub_245758054();
  v2 = v1;
  v4 = v3;
  v5 = sub_245748A50(&qword_25749A8C0);
  MEMORY[0x24BDAC7A8](v5);
  sub_245749280(v2, v2[3]);
  sub_2457B8A28();
  sub_2457BA1A4();
  if (v0)
  {
    sub_245748AB0();
  }
  else
  {
    v6 = sub_24578083C();
    v8 = v7;
    sub_2457807F8();
    swift_bridgeObjectRetain();
    v10 = sub_2457BB554();
    sub_245748A50(&qword_25749A878);
    sub_2457B8994((uint64_t)&unk_25749A890);
    sub_245780830();
    sub_245780530();
    *(_QWORD *)v4 = v6;
    *(_QWORD *)(v4 + 8) = v8;
    *(_BYTE *)(v4 + 16) = v10;
    *(_QWORD *)(v4 + 24) = v9;
    sub_2457513E4();
    sub_245780768();
    sub_2457512F4();
  }
  sub_245751240();
}

void sub_2457B6720()
{
  UserNotification.ClassificationOptions.init(from:)();
}

void sub_2457B6734()
{
  UserNotification.ClassificationOptions.encode(to:)();
}

void UserNotification.ThreadClassificationOptions.requestIdentifier.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void UserNotification.ThreadClassificationOptions.requestIdentifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_2457BA16C();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*UserNotification.ThreadClassificationOptions.requestIdentifier.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void UserNotification.ThreadClassificationOptions.previousNotifications.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_24578086C();
  *(_QWORD *)(v1 + 16) = v0;
  sub_245748A90();
}

uint64_t (*UserNotification.ThreadClassificationOptions.previousNotifications.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

Sage::UserNotification::ThreadClassificationOptions __swiftcall UserNotification.ThreadClassificationOptions.init(requestIdentifier:previousNotifications:)(Swift::String requestIdentifier, Swift::OpaquePointer previousNotifications)
{
  uint64_t v2;
  Sage::UserNotification::ThreadClassificationOptions result;

  *(Swift::String *)v2 = requestIdentifier;
  *(Swift::OpaquePointer *)(v2 + 16) = previousNotifications;
  result.requestIdentifier = requestIdentifier;
  result.previousNotifications = previousNotifications;
  return result;
}

uint64_t sub_2457B67DC(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000002457C8FB0 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000002457CAD00)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v5 = sub_2457BB6B0();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

unint64_t sub_2457B68C4(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000011;
}

unint64_t sub_2457B6900()
{
  char *v0;

  return sub_2457B68C4(*v0);
}

uint64_t sub_2457B6908@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457B67DC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457B692C()
{
  sub_2457B8A64();
  return sub_2457BB788();
}

uint64_t sub_2457B6954()
{
  sub_2457B8A64();
  return sub_2457BB794();
}

void UserNotification.ThreadClassificationOptions.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  sub_245758054();
  v3 = v2;
  v4 = sub_245748A50(&qword_25749A8C8);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  sub_24575136C();
  sub_245749280(v3, v3[3]);
  sub_2457B8A64();
  sub_2457BB77C();
  sub_2457BB644();
  if (!v0)
  {
    sub_2457807F8();
    sub_245748A50(&qword_25749A878);
    sub_2457B8994((uint64_t)&unk_25749A880);
    sub_2457BA194();
  }
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v1, v4);
  sub_245751240();
}

void UserNotification.ThreadClassificationOptions.init(from:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  sub_245758054();
  v2 = v1;
  v4 = v3;
  v5 = sub_245748A50(&qword_25749A8D8);
  MEMORY[0x24BDAC7A8](v5);
  sub_245749280(v2, v2[3]);
  sub_2457B8A64();
  sub_2457BA1A4();
  if (v0)
  {
    sub_245748AB0();
  }
  else
  {
    v6 = sub_24578083C();
    v8 = v7;
    sub_245748A50(&qword_25749A878);
    sub_2457807F8();
    sub_2457B8994((uint64_t)&unk_25749A890);
    v10 = v9;
    swift_bridgeObjectRetain();
    sub_245780830();
    sub_245748AC0();
    if (v10)
    {
      sub_2457512F4();
      sub_245748AB0();
    }
    else
    {
      *v4 = v6;
      v4[1] = v8;
      v4[2] = v11;
      sub_2457513E4();
      sub_245780768();
    }
    sub_2457512F4();
  }
  sub_245751240();
}

void sub_2457B6C14()
{
  UserNotification.ThreadClassificationOptions.init(from:)();
}

void sub_2457B6C28()
{
  UserNotification.ThreadClassificationOptions.encode(to:)();
}

uint64_t UserNotification.NotificationType.rawValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

Sage::UserNotification::NotificationType __swiftcall UserNotification.NotificationType.init(rawValue:)(Sage::UserNotification::NotificationType rawValue)
{
  Sage::UserNotification::NotificationType *v1;

  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static UserNotification.NotificationType.communication.getter(_QWORD *a1@<X8>)
{
  sub_2457BA1F8(a1);
}

void static UserNotification.NotificationType.timeSensitive.getter(_QWORD *a1@<X8>)
{
  sub_2457BA1F8(a1);
}

void static UserNotification.NotificationType.critical.getter(_QWORD *a1@<X8>)
{
  sub_2457BA1F8(a1);
}

Sage::UserNotification::NotificationType sub_2457B6C64(Swift::Int *a1)
{
  return UserNotification.NotificationType.init(rawValue:)(*a1);
}

uint64_t sub_2457B6C6C()
{
  sub_2457B8BD8();
  return sub_2457BB20C();
}

uint64_t sub_2457B6CC8()
{
  sub_2457B8BD8();
  return sub_2457BB1F4();
}

void sub_2457B6D18(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_2457B6D20@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2457B6D2C(*a1, *v2, a2);
}

uint64_t sub_2457B6D2C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 | result;
  return result;
}

uint64_t sub_2457B6D38@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2457B6D44(*a1, *v2, a2);
}

uint64_t sub_2457B6D44@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & result;
  return result;
}

uint64_t sub_2457B6D50@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2457B6D5C(*a1, *v2, a2);
}

uint64_t sub_2457B6D5C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 ^ result;
  return result;
}

BOOL sub_2457B6D68(_QWORD *a1, uint64_t *a2)
{
  return sub_2457B6D70(a1, *a2);
}

BOOL sub_2457B6D70(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_2457B6D9C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2457B6DA4(*a1, a2);
}

uint64_t sub_2457B6DA4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & result;
  if (v3)
    *v2 &= ~result;
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t sub_2457B6DCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2457B6DD4(*a1, a2);
}

uint64_t sub_2457B6DD4@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *v2;
  *v2 |= result;
  v4 = v3 & result;
  *(_QWORD *)a2 = v4;
  *(_BYTE *)(a2 + 8) = v4 == 0;
  return result;
}

uint64_t sub_2457B6DF4(uint64_t *a1)
{
  return sub_2457B6DFC(*a1);
}

uint64_t sub_2457B6DFC(uint64_t result)
{
  _QWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t sub_2457B6E0C(uint64_t *a1)
{
  return sub_2457B6E14(*a1);
}

uint64_t sub_2457B6E14(uint64_t result)
{
  _QWORD *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_2457B6E24(uint64_t *a1)
{
  return sub_2457B6E2C(*a1);
}

uint64_t sub_2457B6E2C(uint64_t result)
{
  _QWORD *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_2457B6E3C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_2457B6E48(*a1, *v2, a2);
}

uint64_t sub_2457B6E48@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  *a3 = a2 & ~result;
  return result;
}

BOOL sub_2457B6E54(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2457B6E60(*a1, *v1);
}

BOOL sub_2457B6E60(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_2457B6E6C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2457B6E78(*a1, *v1);
}

BOOL sub_2457B6E78(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_2457B6E84(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2457B6E90(*a1, *v1);
}

BOOL sub_2457B6E90(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_2457B6E9C()
{
  uint64_t *v0;

  return sub_2457B6EA4(*v0);
}

BOOL sub_2457B6EA4(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_2457B6EB0()
{
  return sub_2457BB3E0();
}

uint64_t sub_2457B6EC8(uint64_t *a1)
{
  return sub_2457B6ED0(*a1);
}

uint64_t sub_2457B6ED0(uint64_t result)
{
  _QWORD *v1;

  *v1 &= ~result;
  return result;
}

Sage::UserNotification::NotificationType sub_2457B6EE0@<X0>(Swift::Int *a1@<X0>, uint64_t a2@<X8>)
{
  Sage::UserNotification::NotificationType result;

  result.rawValue = UserNotification.NotificationType.init(rawValue:)(*a1).rawValue;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_2457B6F08@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = UserNotification.NotificationType.rawValue.getter();
  *a1 = result;
  return result;
}

BOOL sub_2457B6F2C(uint64_t *a1, uint64_t *a2)
{
  return sub_2457B5864(*a1, *a2);
}

uint64_t sub_2457B6F3C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

void UserNotification.notificationID.getter()
{
  sub_2457513E4();
  sub_245748AA4();
  sub_245748A90();
}

void UserNotification.notificationID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_2457BA16C();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*UserNotification.notificationID.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void UserNotification.notificationType.getter(_QWORD *a1@<X8>)
{
  sub_2457BA1F8(a1);
}

_QWORD *UserNotification.notificationType.setter(_QWORD *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *result;
  return result;
}

uint64_t (*UserNotification.notificationType.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void UserNotification.contacts.setter()
{
  uint64_t v0;
  uint64_t v1;

  sub_2457BA228();
  *(_QWORD *)(v1 + 24) = v0;
  sub_245748A90();
}

uint64_t (*UserNotification.contacts.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UserNotification.sender.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v8 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v1 + 88);
  return sub_2457B2768(v2, v3, v4, v5, v6);
}

__n128 UserNotification.sender.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  sub_2457B27C0(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
  *(_OWORD *)(v1 + 32) = v7;
  *(_OWORD *)(v1 + 48) = v6;
  result = v5;
  *(__n128 *)(v1 + 64) = v5;
  *(_QWORD *)(v1 + 80) = v2;
  *(_BYTE *)(v1 + 88) = v3;
  return result;
}

uint64_t (*UserNotification.sender.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UserNotification.recipients.getter()
{
  return swift_bridgeObjectRetain();
}

void UserNotification.recipients.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  sub_245748A90();
}

uint64_t (*UserNotification.recipients.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UserNotification.attachments.getter()
{
  return swift_bridgeObjectRetain();
}

void UserNotification.attachments.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 104) = a1;
  sub_245748A90();
}

uint64_t (*UserNotification.attachments.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t UserNotification.dateReceived.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  sub_2457BA114();
  sub_2457806FC();
  v0 = sub_245748AA4();
  return sub_24574A004(v0, v1, v2, v3);
}

uint64_t UserNotification.dateReceived.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(sub_2457BA114() + 40);
  v4 = sub_2457806FC();
  return sub_24574A004(v3, a1, v4, *(uint64_t (**)(void))(*(_QWORD *)(v4 - 8) + 40));
}

uint64_t (*UserNotification.dateReceived.modify())(_QWORD, _QWORD)
{
  sub_2457BA114();
  return nullsub_1;
}

uint64_t UserNotification.isGroupMessage.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(sub_2457BA114() + 44));
}

void UserNotification.isGroupMessage.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(sub_2457BA114() + 44)) = a1;
  sub_245748A90();
}

uint64_t (*UserNotification.isGroupMessage.modify())(_QWORD, _QWORD)
{
  sub_2457BA114();
  return nullsub_1;
}

void UserNotification.appBundleID.getter()
{
  sub_2457BA114();
  sub_24574A064();
  sub_245748AA4();
  sub_245748A90();
}

void UserNotification.appBundleID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_2457BA114();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*UserNotification.appBundleID.modify())(_QWORD, _QWORD)
{
  sub_2457BA114();
  return nullsub_1;
}

void UserNotification.threadID.getter()
{
  sub_2457BA114();
  sub_24574A064();
  sub_245748AA4();
  sub_245748A90();
}

void UserNotification.threadID.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_2457BA114();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*UserNotification.threadID.modify())(_QWORD, _QWORD)
{
  sub_2457BA114();
  return nullsub_1;
}

void UserNotification.title.getter()
{
  sub_2457BA114();
  sub_24574A064();
  sub_245748AA4();
  sub_245748A90();
}

void UserNotification.title.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_2457BA114();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*UserNotification.title.modify())(_QWORD, _QWORD)
{
  sub_2457BA114();
  return nullsub_1;
}

void UserNotification.subtitle.getter()
{
  sub_2457BA114();
  sub_24574A064();
  sub_245748AA4();
  sub_245748A90();
}

void UserNotification.subtitle.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_2457BA114();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*UserNotification.subtitle.modify())(_QWORD, _QWORD)
{
  sub_2457BA114();
  return nullsub_1;
}

void UserNotification.body.getter()
{
  sub_2457BA114();
  sub_24574A064();
  sub_245748AA4();
  sub_245748A90();
}

void UserNotification.body.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  sub_2457BA114();
  sub_24574A0B0();
  *v2 = a1;
  v2[1] = a2;
  sub_245749FB4();
}

uint64_t (*UserNotification.body.modify())(_QWORD, _QWORD)
{
  sub_2457BA114();
  return nullsub_1;
}

uint64_t UserNotification.init(notificationID:notificationType:sender:recipients:attachments:dateReceived:isGroupMessage:appBundleID:threadID:title:subtitle:body:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, __int128 *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v20;
  uint64_t v21;
  char v22;
  int *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t result;
  __int128 v32;
  __int128 v33;
  __int128 v34;

  v20 = *a3;
  v33 = a4[1];
  v34 = *a4;
  v32 = a4[2];
  v21 = *((_QWORD *)a4 + 6);
  v22 = *((_BYTE *)a4 + 56);
  *(_QWORD *)(a9 + 24) = MEMORY[0x24BEE4AF8];
  v23 = (int *)sub_2457BA114();
  v24 = (_QWORD *)(a9 + v23[12]);
  v25 = (_QWORD *)(a9 + v23[13]);
  v26 = (_QWORD *)(a9 + v23[14]);
  v27 = (_QWORD *)(a9 + v23[15]);
  v28 = (_QWORD *)(a9 + v23[16]);
  *(_QWORD *)a9 = a1;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 16) = v20;
  *(_OWORD *)(a9 + 32) = v34;
  *(_OWORD *)(a9 + 48) = v33;
  *(_OWORD *)(a9 + 64) = v32;
  *(_QWORD *)(a9 + 80) = v21;
  *(_BYTE *)(a9 + 88) = v22;
  *(_QWORD *)(a9 + 96) = a5;
  *(_QWORD *)(a9 + 104) = a6;
  v29 = a9 + v23[10];
  v30 = sub_2457806FC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v29, a7, v30);
  *(_BYTE *)(a9 + v23[11]) = a8;
  *v24 = a10;
  v24[1] = a11;
  *v25 = a12;
  v25[1] = a13;
  *v26 = a14;
  v26[1] = a15;
  *v27 = a16;
  v27[1] = a17;
  *v28 = a18;
  v28[1] = a19;
  return result;
}

uint64_t sub_2457B7654(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  BOOL v8;
  BOOL v9;
  BOOL v10;
  BOOL v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  char v17;

  v2 = a1 == 0x6163696669746F6ELL && a2 == 0xEE0044496E6F6974;
  if (v2 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000002457CAD20 || (sub_2457BB6B0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = a1 == 0x73746361746E6F63 && a2 == 0xE800000000000000;
    if (v6 || (sub_2457BB6B0() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 2;
    }
    else
    {
      v7 = a1 == 0x7265646E6573 && a2 == 0xE600000000000000;
      if (v7 || (sub_2457BB6B0() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v8 = a1 == 0x6E65697069636572 && a2 == 0xEA00000000007374;
        if (v8 || (sub_2457BB6B0() & 1) != 0)
        {
          swift_bridgeObjectRelease();
          return 4;
        }
        else
        {
          v9 = a1 == 0x656D686361747461 && a2 == 0xEB0000000073746ELL;
          if (v9 || (sub_2457BB6B0() & 1) != 0)
          {
            swift_bridgeObjectRelease();
            return 5;
          }
          else
          {
            v10 = a1 == 0x6563655265746164 && a2 == 0xEC00000064657669;
            if (v10 || (sub_2457BB6B0() & 1) != 0)
            {
              swift_bridgeObjectRelease();
              return 6;
            }
            else
            {
              v11 = a1 == 0x4D70756F72477369 && a2 == 0xEE00656761737365;
              if (v11 || (sub_2457BB6B0() & 1) != 0)
              {
                swift_bridgeObjectRelease();
                return 7;
              }
              else
              {
                v12 = a1 == 0x6C646E7542707061 && a2 == 0xEB00000000444965;
                if (v12 || (sub_2457BB6B0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  return 8;
                }
                else
                {
                  v13 = a1 == 0x4449646165726874 && a2 == 0xE800000000000000;
                  if (v13 || (sub_2457BB6B0() & 1) != 0)
                  {
                    swift_bridgeObjectRelease();
                    return 9;
                  }
                  else
                  {
                    v14 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
                    if (v14 || (sub_2457BB6B0() & 1) != 0)
                    {
                      swift_bridgeObjectRelease();
                      return 10;
                    }
                    else
                    {
                      v15 = a1 == 0x656C746974627573 && a2 == 0xE800000000000000;
                      if (v15 || (sub_2457BB6B0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        return 11;
                      }
                      else if (a1 == 2036625250 && a2 == 0xE400000000000000)
                      {
                        swift_bridgeObjectRelease();
                        return 12;
                      }
                      else
                      {
                        v17 = sub_2457BB6B0();
                        swift_bridgeObjectRelease();
                        if ((v17 & 1) != 0)
                          return 12;
                        else
                          return 13;
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_2457B7BD8()
{
  return 13;
}

void sub_2457B7BE0()
{
  sub_2457BB728();
  sub_2457BB734();
  sub_2457BB764();
  sub_24575118C();
}

uint64_t sub_2457B7C1C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_2457B7C5C + 4 * byte_2457C7422[a1]))(0x6163696669746F6ELL, 0xEE0044496E6F6974);
}

unint64_t sub_2457B7C5C()
{
  return 0xD000000000000010;
}

uint64_t sub_2457B7C78()
{
  return 0x73746361746E6F63;
}

uint64_t sub_2457B7C90()
{
  return 0x7265646E6573;
}

uint64_t sub_2457B7CA4()
{
  return 0x6E65697069636572;
}

uint64_t sub_2457B7CC0()
{
  return 0x656D686361747461;
}

uint64_t sub_2457B7CE0()
{
  return 0x6563655265746164;
}

uint64_t sub_2457B7D00()
{
  return 0x4D70756F72477369;
}

uint64_t sub_2457B7D24()
{
  return 0x6C646E7542707061;
}

uint64_t sub_2457B7D44()
{
  return 0x4449646165726874;
}

uint64_t sub_2457B7D5C()
{
  return 0x656C746974;
}

uint64_t sub_2457B7D70()
{
  return 0x656C746974627573;
}

uint64_t sub_2457B7D88()
{
  return 2036625250;
}

void sub_2457B7D98()
{
  sub_2457B7BE0();
}

void sub_2457B7DB0()
{
  sub_2457BB728();
  sub_2457BB734();
  sub_2457BB764();
  sub_24575118C();
}

uint64_t sub_2457B7DE8()
{
  unsigned __int8 *v0;

  return sub_2457B7C1C(*v0);
}

uint64_t sub_2457B7DF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_2457B7654(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_2457B7E14@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_2457B7BD8();
  *a1 = result;
  return result;
}

uint64_t sub_2457B7E38()
{
  sub_2457B8AA0();
  return sub_2457BB788();
}

uint64_t sub_2457B7E60()
{
  sub_2457B8AA0();
  return sub_2457BB794();
}

uint64_t UserNotification.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int *v8;

  v3 = sub_245748A50(&qword_25749A8E0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  sub_245749FF4();
  v7 = v6 - v5;
  sub_245749280(a1, a1[3]);
  sub_2457B8AA0();
  sub_2457BB77C();
  sub_2457BB644();
  if (!v1)
  {
    sub_2457B8ADC();
    sub_2457BA160();
    sub_245748A50(&qword_257498F80);
    sub_24577E1C4((uint64_t)&unk_257498F88);
    sub_2457BA160();
    sub_24577E4D4();
    sub_2457BB638();
    sub_2457BA160();
    sub_245748A50(&qword_257498F98);
    sub_24577E510((uint64_t)&unk_257498FA0);
    sub_2457BA160();
    v8 = (int *)type metadata accessor for UserNotification();
    sub_2457BAA98();
    sub_2457804C0((uint64_t)&unk_257498F90);
    sub_2457BA160();
    sub_2457BB650();
    sub_2457BA200(v8[12]);
    sub_2457BA11C(8);
    sub_2457BA200(v8[13]);
    sub_2457BA11C(9);
    sub_2457BA200(v8[14]);
    sub_2457BA11C(10);
    sub_2457BA200(v8[15]);
    sub_2457BA11C(11);
    sub_2457BA200(v8[16]);
    sub_2457BA11C(12);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v7, v3);
}

void UserNotification.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t *v37;
  uint64_t *v38;
  uint64_t *v39;
  uint64_t *v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char v45;

  sub_245758054();
  v3 = v2;
  v32 = v4;
  v5 = sub_2457BAA98();
  v34 = *(_QWORD *)(v5 - 8);
  v35 = v5;
  MEMORY[0x24BDAC7A8](v5);
  sub_245749FF4();
  v8 = v7 - v6;
  v33 = sub_245748A50(&qword_25749A8F8);
  v9 = *(_QWORD *)(v33 - 8);
  MEMORY[0x24BDAC7A8](v33);
  sub_245749FF4();
  v12 = v11 - v10;
  v13 = type metadata accessor for UserNotification();
  MEMORY[0x24BDAC7A8](v13);
  sub_24575136C();
  *(_QWORD *)(v1 + 24) = MEMORY[0x24BEE4AF8];
  *(_OWORD *)(v1 + 32) = xmmword_2457C13F0;
  *(_OWORD *)(v1 + 48) = 0u;
  *(_OWORD *)(v1 + 64) = 0u;
  *(_OWORD *)(v1 + 73) = 0u;
  sub_2457BA1EC(*(int *)(v14 + 48));
  v40 = v15;
  sub_2457BA1EC(*(int *)(v16 + 52));
  v39 = v17;
  sub_2457BA1EC(*(int *)(v18 + 56));
  v38 = v19;
  sub_2457BA1EC(*(int *)(v20 + 60));
  v37 = v21;
  sub_2457BA1EC(*(int *)(v22 + 64));
  v36 = v23;
  sub_245749280(v3, v3[3]);
  sub_2457B8AA0();
  sub_2457BB770();
  if (v0)
  {
    sub_2457BA20C();
    swift_bridgeObjectRelease();
    sub_2457B27C0(*(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 64));
    sub_2457BA1BC();
    sub_2457BA1BC();
    sub_2457BA1BC();
    sub_2457BA1BC();
    sub_2457BA1BC();
  }
  else
  {
    LOBYTE(v41) = 0;
    *(_QWORD *)v1 = sub_2457BB584();
    *(_QWORD *)(v1 + 8) = v24;
    sub_2457B8B18();
    sub_245751034();
    *(_QWORD *)(v1 + 16) = v41;
    sub_245748A50(&qword_257498F80);
    sub_24577E1C4((uint64_t)&unk_257498FC0);
    sub_2457BA174();
    *(_QWORD *)(v1 + 24) = v41;
    sub_24577E568();
    sub_2457BB578();
    *(_OWORD *)(v1 + 32) = v41;
    *(_OWORD *)(v1 + 48) = v42;
    *(_OWORD *)(v1 + 64) = v43;
    *(_QWORD *)(v1 + 80) = v44;
    *(_BYTE *)(v1 + 88) = v45;
    sub_2457BA174();
    *(_QWORD *)(v1 + 96) = v41;
    sub_245748A50(&qword_257498F98);
    sub_24577E510((uint64_t)&unk_257498FD0);
    sub_245751034();
    *(_QWORD *)(v1 + 104) = v41;
    sub_2457804C0((uint64_t)&unk_257498FC8);
    sub_245751034();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v34 + 32))(v1 + *(int *)(v13 + 40), v8, v35);
    *(_BYTE *)(v1 + *(int *)(v13 + 44)) = sub_2457BB590() & 1;
    *v40 = sub_2457BA1D8(8);
    v40[1] = v25;
    *v39 = sub_2457BA1D8(9);
    v39[1] = v26;
    *v38 = sub_2457BA14C(10);
    v38[1] = v27;
    *v37 = sub_2457BA14C(11);
    v37[1] = v28;
    v29 = sub_2457BA14C(12);
    v31 = v30;
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v12, v33);
    swift_bridgeObjectRelease();
    *v36 = v29;
    v36[1] = v31;
    sub_2457B8B54(v1, v32);
    sub_2457BA20C();
    sub_2457B8B98(v1);
  }
  sub_245751240();
}

void sub_2457B8774()
{
  UserNotification.init(from:)();
}

uint64_t sub_2457B8788(_QWORD *a1)
{
  return UserNotification.encode(to:)(a1);
}

uint64_t UserNotification.init(notificationID:notificationType:contacts:attachments:dateReceived:isGroupMessage:appBundleID:threadID:title:subtitle:body:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, char a6@<W6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v21;
  int *v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t result;

  swift_bridgeObjectRelease();
  v21 = *a3;
  *(_QWORD *)(a8 + 24) = MEMORY[0x24BEE4AF8];
  v22 = (int *)sub_2457BA114();
  v23 = (_QWORD *)(a8 + v22[12]);
  v24 = (_QWORD *)(a8 + v22[13]);
  v25 = (_QWORD *)(a8 + v22[14]);
  v26 = (_QWORD *)(a8 + v22[15]);
  v27 = (_QWORD *)(a8 + v22[16]);
  *(_QWORD *)a8 = a1;
  *(_QWORD *)(a8 + 8) = a2;
  *(_QWORD *)(a8 + 16) = v21;
  *(_OWORD *)(a8 + 73) = 0u;
  *(_OWORD *)(a8 + 48) = 0u;
  *(_OWORD *)(a8 + 64) = 0u;
  *(_OWORD *)(a8 + 32) = xmmword_2457C13F0;
  *(_QWORD *)(a8 + 96) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a8 + 104) = a4;
  v28 = a8 + v22[10];
  v29 = sub_2457806FC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v28, a5, v29);
  *(_BYTE *)(a8 + v22[11]) = a6;
  *v23 = a7;
  v23[1] = a9;
  *v24 = a10;
  v24[1] = a11;
  *v25 = a12;
  v25[1] = a13;
  *v26 = a14;
  v26[1] = a15;
  *v27 = a16;
  v27[1] = a17;
  return result;
}

unint64_t sub_2457B8920()
{
  unint64_t result;

  result = qword_25749A870;
  if (!qword_25749A870)
  {
    result = MEMORY[0x24953B288](&unk_2457C7E54, &type metadata for UserNotification.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A870);
  }
  return result;
}

uint64_t type metadata accessor for UserNotification()
{
  uint64_t result;

  result = qword_25749A928;
  if (!qword_25749A928)
    return swift_getSingletonMetadata();
  return result;
}

void sub_2457B8994(uint64_t a1)
{
  if (!sub_245780878(a1))
  {
    sub_24574B5EC(&qword_25749A878);
    sub_245780860();
    sub_245780754();
  }
  sub_2457806B0();
}

unint64_t sub_2457B89EC()
{
  unint64_t result;

  result = qword_25749A8A0;
  if (!qword_25749A8A0)
  {
    result = MEMORY[0x24953B288](&unk_2457C7E04, &type metadata for UserNotification.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A8A0);
  }
  return result;
}

unint64_t sub_2457B8A28()
{
  unint64_t result;

  result = qword_25749A8B8;
  if (!qword_25749A8B8)
  {
    result = MEMORY[0x24953B288](&unk_2457C7DB4, &type metadata for UserNotification.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A8B8);
  }
  return result;
}

unint64_t sub_2457B8A64()
{
  unint64_t result;

  result = qword_25749A8D0;
  if (!qword_25749A8D0)
  {
    result = MEMORY[0x24953B288](&unk_2457C7D64, &type metadata for UserNotification.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A8D0);
  }
  return result;
}

unint64_t sub_2457B8AA0()
{
  unint64_t result;

  result = qword_25749A8E8;
  if (!qword_25749A8E8)
  {
    result = MEMORY[0x24953B288](&unk_2457C7D14, &type metadata for UserNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A8E8);
  }
  return result;
}

unint64_t sub_2457B8ADC()
{
  unint64_t result;

  result = qword_25749A8F0;
  if (!qword_25749A8F0)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.NotificationType, &type metadata for UserNotification.NotificationType);
    atomic_store(result, (unint64_t *)&qword_25749A8F0);
  }
  return result;
}

unint64_t sub_2457B8B18()
{
  unint64_t result;

  result = qword_25749A900;
  if (!qword_25749A900)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.NotificationType, &type metadata for UserNotification.NotificationType);
    atomic_store(result, (unint64_t *)&qword_25749A900);
  }
  return result;
}

uint64_t sub_2457B8B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UserNotification();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_2457B8B98(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UserNotification();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_2457B8BD8()
{
  unint64_t result;

  result = qword_25749A908;
  if (!qword_25749A908)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.NotificationType, &type metadata for UserNotification.NotificationType);
    atomic_store(result, (unint64_t *)&qword_25749A908);
  }
  return result;
}

unint64_t sub_2457B8C18()
{
  unint64_t result;

  result = qword_25749A910;
  if (!qword_25749A910)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.NotificationType, &type metadata for UserNotification.NotificationType);
    atomic_store(result, (unint64_t *)&qword_25749A910);
  }
  return result;
}

unint64_t sub_2457B8C58()
{
  unint64_t result;

  result = qword_25749A918;
  if (!qword_25749A918)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.NotificationType, &type metadata for UserNotification.NotificationType);
    atomic_store(result, (unint64_t *)&qword_25749A918);
  }
  return result;
}

unint64_t sub_2457B8C98()
{
  unint64_t result;

  result = qword_25749A920;
  if (!qword_25749A920)
  {
    result = MEMORY[0x24953B288](&protocol conformance descriptor for UserNotification.NotificationType, &type metadata for UserNotification.NotificationType);
    atomic_store(result, (unint64_t *)&qword_25749A920);
  }
  return result;
}

void sub_2457B8CF4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_2457804C0((uint64_t)&unk_2574980E8);
  *(_QWORD *)(a1 + 8) = v2;
  sub_2457804C0((uint64_t)&unk_257498010);
  *(_QWORD *)(a1 + 16) = v3;
}

uint64_t initializeBufferWithCopyOfBuffer for UserNotification(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9 == 1)
    {
      v10 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v10;
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
    }
    else
    {
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v9;
      v12 = *((unsigned __int8 *)a2 + 64);
      swift_bridgeObjectRetain();
      if (v12 == 255)
      {
        *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
        *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
      }
      else
      {
        v13 = a2[6];
        v14 = a2[7];
        sub_24574E938(v13, v14, v12);
        *(_QWORD *)(a1 + 48) = v13;
        *(_QWORD *)(a1 + 56) = v14;
        *(_BYTE *)(a1 + 64) = v12;
      }
      v15 = a2[10];
      *(_QWORD *)(a1 + 72) = a2[9];
      *(_QWORD *)(a1 + 80) = v15;
      *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
      swift_bridgeObjectRetain();
    }
    v16 = a2[13];
    *(_QWORD *)(a1 + 96) = a2[12];
    *(_QWORD *)(a1 + 104) = v16;
    v17 = a3[10];
    v18 = a1 + v17;
    v19 = (uint64_t)a2 + v17;
    v20 = sub_2457BAA98();
    v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    v22 = a3[12];
    *(_BYTE *)(a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
    v23 = (_QWORD *)(a1 + v22);
    v24 = (uint64_t *)((char *)a2 + v22);
    v25 = v24[1];
    *v23 = *v24;
    v23[1] = v25;
    v26 = a3[13];
    v27 = a3[14];
    v28 = (_QWORD *)(a1 + v26);
    v29 = (uint64_t *)((char *)a2 + v26);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = (_QWORD *)(a1 + v27);
    v32 = (uint64_t *)((char *)a2 + v27);
    v33 = v32[1];
    *v31 = *v32;
    v31[1] = v33;
    v34 = a3[15];
    v35 = a3[16];
    v36 = (_QWORD *)(a1 + v34);
    v37 = (uint64_t *)((char *)a2 + v34);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v39 = (_QWORD *)(a1 + v35);
    v40 = (uint64_t *)((char *)a2 + v35);
    v41 = v40[1];
    *v39 = *v40;
    v39[1] = v41;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for UserNotification(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) != 1)
  {
    swift_bridgeObjectRelease();
    v4 = *(unsigned __int8 *)(a1 + 64);
    if (v4 != 255)
      sub_24574EBF0(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), v4);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v5 = a1 + *(int *)(a2 + 40);
  v6 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for UserNotification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 1)
  {
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v8;
    v10 = *(unsigned __int8 *)(a2 + 64);
    swift_bridgeObjectRetain();
    if (v10 == 255)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    }
    else
    {
      v11 = *(_QWORD *)(a2 + 48);
      v12 = *(_QWORD *)(a2 + 56);
      sub_24574E938(v11, v12, v10);
      *(_QWORD *)(a1 + 48) = v11;
      *(_QWORD *)(a1 + 56) = v12;
      *(_BYTE *)(a1 + 64) = v10;
    }
    v13 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v13;
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    swift_bridgeObjectRetain();
  }
  v14 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  v15 = a3[10];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_2457BAA98();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  v20 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (_QWORD *)(a2 + v20);
  v23 = v22[1];
  *v21 = *v22;
  v21[1] = v23;
  v24 = a3[13];
  v25 = a3[14];
  v26 = (_QWORD *)(a1 + v24);
  v27 = (_QWORD *)(a2 + v24);
  v28 = v27[1];
  *v26 = *v27;
  v26[1] = v28;
  v29 = (_QWORD *)(a1 + v25);
  v30 = (_QWORD *)(a2 + v25);
  v31 = v30[1];
  *v29 = *v30;
  v29[1] = v31;
  v32 = a3[15];
  v33 = a3[16];
  v34 = (_QWORD *)(a1 + v32);
  v35 = (_QWORD *)(a2 + v32);
  v36 = v35[1];
  *v34 = *v35;
  v34[1] = v36;
  v37 = (_QWORD *)(a1 + v33);
  v38 = (_QWORD *)(a2 + v33);
  v39 = v38[1];
  *v37 = *v38;
  v37[1] = v39;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for UserNotification(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  __int128 *v18;
  __int128 *v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 32);
  v7 = (__int128 *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 48);
      v11 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
      *(_OWORD *)(a1 + 48) = v10;
      *(_OWORD *)(a1 + 64) = v11;
      *v6 = v9;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      v15 = *(unsigned __int8 *)(a2 + 64);
      swift_bridgeObjectRetain();
      if (v15 == 255)
      {
        v26 = *(_OWORD *)(a2 + 48);
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = v26;
      }
      else
      {
        v16 = *(_QWORD *)(a2 + 48);
        v17 = *(_QWORD *)(a2 + 56);
        sub_24574E938(v16, v17, v15);
        *(_QWORD *)(a1 + 48) = v16;
        *(_QWORD *)(a1 + 56) = v17;
        *(_BYTE *)(a1 + 64) = v15;
      }
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_2457B38FC(a1 + 32);
    v13 = *(_OWORD *)(a2 + 48);
    v12 = *(_OWORD *)(a2 + 64);
    v14 = *v7;
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
    *(_OWORD *)(a1 + 48) = v13;
    *(_OWORD *)(a1 + 64) = v12;
    *v6 = v14;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v18 = (__int128 *)(a1 + 48);
    v19 = (__int128 *)(a2 + 48);
    v20 = *(unsigned __int8 *)(a2 + 64);
    if (*(unsigned __int8 *)(a1 + 64) == 255)
    {
      if (v20 == 255)
      {
        v30 = *v19;
        *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
        *v18 = v30;
      }
      else
      {
        v27 = *(_QWORD *)(a2 + 48);
        v28 = *(_QWORD *)(a2 + 56);
        sub_24574E938(v27, v28, *(_BYTE *)(a2 + 64));
        *(_QWORD *)(a1 + 48) = v27;
        *(_QWORD *)(a1 + 56) = v28;
        *(_BYTE *)(a1 + 64) = v20;
      }
    }
    else if (v20 == 255)
    {
      sub_245778D50(a1 + 48);
      v29 = *(_BYTE *)(a2 + 64);
      *v18 = *v19;
      *(_BYTE *)(a1 + 64) = v29;
    }
    else
    {
      v21 = *(_QWORD *)(a2 + 48);
      v22 = *(_QWORD *)(a2 + 56);
      sub_24574E938(v21, v22, *(_BYTE *)(a2 + 64));
      v23 = *(_QWORD *)(a1 + 48);
      v24 = *(_QWORD *)(a1 + 56);
      *(_QWORD *)(a1 + 48) = v21;
      *(_QWORD *)(a1 + 56) = v22;
      v25 = *(_BYTE *)(a1 + 64);
      *(_BYTE *)(a1 + 64) = v20;
      sub_24574EBF0(v23, v24, v25);
    }
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
  }
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v31 = a3[10];
  v32 = a1 + v31;
  v33 = a2 + v31;
  v34 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v35 = a3[12];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[13];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (_QWORD *)(a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = a3[14];
  v42 = (_QWORD *)(a1 + v41);
  v43 = (_QWORD *)(a2 + v41);
  *v42 = *v43;
  v42[1] = v43[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = a3[15];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (_QWORD *)(a2 + v44);
  *v45 = *v46;
  v45[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = a3[16];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (_QWORD *)(a2 + v47);
  *v48 = *v49;
  v48[1] = v49[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for UserNotification(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  *(_OWORD *)((char *)a1 + 73) = *(_OWORD *)((char *)a2 + 73);
  v8 = a3[10];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  a1[6] = a2[6];
  v11 = sub_2457BAA98();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  v12 = a3[12];
  *((_BYTE *)a1 + a3[11]) = *((_BYTE *)a2 + a3[11]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  v13 = a3[14];
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)((char *)a2 + a3[13]);
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v14 = a3[16];
  *(_OWORD *)((char *)a1 + a3[15]) = *(_OWORD *)((char *)a2 + a3[15]);
  *(_OWORD *)((char *)a1 + v14) = *(_OWORD *)((char *)a2 + v14);
  return a1;
}

uint64_t assignWithTake for UserNotification(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  _OWORD *v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) == 1)
    goto LABEL_4;
  v8 = *(_QWORD *)(a2 + 40);
  if (v8 != 1)
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v8;
    swift_bridgeObjectRelease();
    v10 = (_OWORD *)(a2 + 48);
    v11 = *(unsigned __int8 *)(a1 + 64);
    if (v11 != 255)
    {
      v12 = *(unsigned __int8 *)(a2 + 64);
      if (v12 != 255)
      {
        v13 = *(_QWORD *)(a1 + 48);
        v14 = *(_QWORD *)(a1 + 56);
        *(_OWORD *)(a1 + 48) = *v10;
        *(_BYTE *)(a1 + 64) = v12;
        sub_24574EBF0(v13, v14, v11);
LABEL_10:
        v15 = *(_QWORD *)(a2 + 80);
        *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
        *(_QWORD *)(a1 + 80) = v15;
        swift_bridgeObjectRelease();
        *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
        goto LABEL_11;
      }
      sub_245778D50(a1 + 48);
    }
    *(_OWORD *)(a1 + 48) = *v10;
    *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
    goto LABEL_10;
  }
  sub_2457B38FC(a1 + 32);
LABEL_4:
  v9 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v9;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
LABEL_11:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v16 = a3[10];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_2457BAA98();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, v18, v19);
  v20 = a3[12];
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[13];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  v30 = a3[14];
  v31 = (_QWORD *)(a1 + v30);
  v32 = (uint64_t *)(a2 + v30);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = a3[15];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)(a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[16];
  v41 = (_QWORD *)(a1 + v40);
  v42 = (uint64_t *)(a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for UserNotification()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_2457B983C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    sub_245749FB4();
  }
  else
  {
    v6 = sub_2457806FC();
    _s4Sage24ClassificationXPCRequestC7RequestOwet_0(a1 + *(int *)(a3 + 40), a2, v6);
  }
}

uint64_t storeEnumTagSinglePayload for UserNotification()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_2457B98B0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    sub_245749FB4();
  }
  else
  {
    v7 = sub_2457806FC();
    _s4Sage24ClassificationXPCRequestC7RequestOwst_0(a1 + *(int *)(a4 + 40), a2, a2, v7);
  }
}

uint64_t sub_2457B9910()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2457BAA98();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void type metadata accessor for UserNotification.SummarizationOptions()
{
  sub_245751428();
}

void type metadata accessor for UserNotification.ThreadSummarizationOptions()
{
  sub_245751428();
}

void type metadata accessor for UserNotification.ClassificationOptions()
{
  sub_245751428();
}

void type metadata accessor for UserNotification.ThreadClassificationOptions()
{
  sub_245751428();
}

void type metadata accessor for UserNotification.NotificationType()
{
  sub_245751428();
}

uint64_t getEnumTagSinglePayload for UserNotification.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF4)
  {
    if (a2 + 12 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 12) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 13;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xD;
  v5 = v6 - 13;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for UserNotification.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_2457B9AD8 + 4 * byte_2457C7434[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_2457B9B0C + 4 * byte_2457C742F[v4]))();
}

uint64_t sub_2457B9B0C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B9B14(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457B9B1CLL);
  return result;
}

uint64_t sub_2457B9B28(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457B9B30);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_2457B9B34(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B9B3C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserNotification.CodingKeys()
{
  return &type metadata for UserNotification.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for UserNotification.ThreadClassificationOptions.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_2457B9BA4 + 4 * byte_2457C743E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_2457B9BD8 + 4 * byte_2457C7439[v4]))();
}

uint64_t sub_2457B9BD8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B9BE0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457B9BE8);
  return result;
}

uint64_t sub_2457B9BF4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457B9BFCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_2457B9C00(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B9C08(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserNotification.ThreadClassificationOptions.CodingKeys()
{
  return &type metadata for UserNotification.ThreadClassificationOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for UserNotification.ClassificationOptions.CodingKeys()
{
  return &type metadata for UserNotification.ClassificationOptions.CodingKeys;
}

ValueMetadata *type metadata accessor for UserNotification.ThreadSummarizationOptions.CodingKeys()
{
  return &type metadata for UserNotification.ThreadSummarizationOptions.CodingKeys;
}

uint64_t _s4Sage16UserNotificationV21ClassificationOptionsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_2457B9C94 + 4 * byte_2457C7448[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_2457B9CC8 + 4 * byte_2457C7443[v4]))();
}

uint64_t sub_2457B9CC8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B9CD0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2457B9CD8);
  return result;
}

uint64_t sub_2457B9CE4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2457B9CECLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_2457B9CF0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2457B9CF8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for UserNotification.SummarizationOptions.CodingKeys()
{
  return &type metadata for UserNotification.SummarizationOptions.CodingKeys;
}

unint64_t sub_2457B9D18()
{
  unint64_t result;

  result = qword_25749A938;
  if (!qword_25749A938)
  {
    result = MEMORY[0x24953B288](&unk_2457C7A0C, &type metadata for UserNotification.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A938);
  }
  return result;
}

unint64_t sub_2457B9D58()
{
  unint64_t result;

  result = qword_25749A940;
  if (!qword_25749A940)
  {
    result = MEMORY[0x24953B288](&unk_2457C7AC4, &type metadata for UserNotification.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A940);
  }
  return result;
}

unint64_t sub_2457B9D98()
{
  unint64_t result;

  result = qword_25749A948;
  if (!qword_25749A948)
  {
    result = MEMORY[0x24953B288](&unk_2457C7B7C, &type metadata for UserNotification.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A948);
  }
  return result;
}

unint64_t sub_2457B9DD8()
{
  unint64_t result;

  result = qword_25749A950;
  if (!qword_25749A950)
  {
    result = MEMORY[0x24953B288](&unk_2457C7C34, &type metadata for UserNotification.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A950);
  }
  return result;
}

unint64_t sub_2457B9E18()
{
  unint64_t result;

  result = qword_25749A958;
  if (!qword_25749A958)
  {
    result = MEMORY[0x24953B288](&unk_2457C7CEC, &type metadata for UserNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A958);
  }
  return result;
}

unint64_t sub_2457B9E58()
{
  unint64_t result;

  result = qword_25749A960;
  if (!qword_25749A960)
  {
    result = MEMORY[0x24953B288](&unk_2457C7C5C, &type metadata for UserNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A960);
  }
  return result;
}

unint64_t sub_2457B9E98()
{
  unint64_t result;

  result = qword_25749A968;
  if (!qword_25749A968)
  {
    result = MEMORY[0x24953B288](&unk_2457C7C84, &type metadata for UserNotification.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A968);
  }
  return result;
}

unint64_t sub_2457B9ED8()
{
  unint64_t result;

  result = qword_25749A970;
  if (!qword_25749A970)
  {
    result = MEMORY[0x24953B288](&unk_2457C7BA4, &type metadata for UserNotification.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A970);
  }
  return result;
}

unint64_t sub_2457B9F18()
{
  unint64_t result;

  result = qword_25749A978;
  if (!qword_25749A978)
  {
    result = MEMORY[0x24953B288](&unk_2457C7BCC, &type metadata for UserNotification.ThreadClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A978);
  }
  return result;
}

unint64_t sub_2457B9F58()
{
  unint64_t result;

  result = qword_25749A980;
  if (!qword_25749A980)
  {
    result = MEMORY[0x24953B288](&unk_2457C7AEC, &type metadata for UserNotification.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A980);
  }
  return result;
}

unint64_t sub_2457B9F98()
{
  unint64_t result;

  result = qword_25749A988;
  if (!qword_25749A988)
  {
    result = MEMORY[0x24953B288](&unk_2457C7B14, &type metadata for UserNotification.ClassificationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A988);
  }
  return result;
}

unint64_t sub_2457B9FD8()
{
  unint64_t result;

  result = qword_25749A990;
  if (!qword_25749A990)
  {
    result = MEMORY[0x24953B288](&unk_2457C7A34, &type metadata for UserNotification.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A990);
  }
  return result;
}

unint64_t sub_2457BA018()
{
  unint64_t result;

  result = qword_25749A998;
  if (!qword_25749A998)
  {
    result = MEMORY[0x24953B288](&unk_2457C7A5C, &type metadata for UserNotification.ThreadSummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A998);
  }
  return result;
}

unint64_t sub_2457BA058()
{
  unint64_t result;

  result = qword_25749A9A0;
  if (!qword_25749A9A0)
  {
    result = MEMORY[0x24953B288](&unk_2457C797C, &type metadata for UserNotification.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A9A0);
  }
  return result;
}

unint64_t sub_2457BA098()
{
  unint64_t result;

  result = qword_25749A9A8;
  if (!qword_25749A9A8)
  {
    result = MEMORY[0x24953B288](&unk_2457C79A4, &type metadata for UserNotification.SummarizationOptions.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_25749A9A8);
  }
  return result;
}

uint64_t sub_2457BA114()
{
  return type metadata accessor for UserNotification();
}

uint64_t sub_2457BA11C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 128) = a1;
  return sub_2457BB608();
}

uint64_t sub_2457BA134()
{
  return sub_2457BB6B0();
}

uint64_t sub_2457BA144()
{
  return sub_2457BB6B0();
}

uint64_t sub_2457BA14C@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 160) = a1;
  return sub_2457BB548();
}

uint64_t sub_2457BA160()
{
  return sub_2457BB68C();
}

uint64_t sub_2457BA16C()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457BA174()
{
  return sub_2457BB5CC();
}

uint64_t sub_2457BA194()
{
  return sub_2457BB68C();
}

uint64_t sub_2457BA1A4()
{
  return sub_2457BB770();
}

uint64_t sub_2457BA1BC()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s4Sage16UserNotificationV20SummarizationOptionsV21previousNotificationsSayACGvg_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_2457BA1D8@<X0>(char a1@<W8>)
{
  uint64_t v1;

  *(_BYTE *)(v1 - 160) = a1;
  return sub_2457BB548();
}

void sub_2457BA1EC(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 + a1);
  *v2 = 0;
  v2[1] = 0;
}

void sub_2457BA1F8(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
}

uint64_t sub_2457BA200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t sub_2457BA20C()
{
  uint64_t v0;

  return sub_245749564(*(_QWORD *)(v0 - 208));
}

uint64_t sub_2457BA228()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_2457BA234()
{
  return 0x6E776F6E6B6E75;
}

void XPCValue.init(coder:)(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = v1;
  v9.super_class = (Class)type metadata accessor for XPCValue();
  sub_2457BA994((uint64_t)v9.super_class, sel_init, v3, v4, v5, v6, v7, v8, v9);

  sub_2457BA99C();
}

uint64_t type metadata accessor for XPCValue()
{
  return objc_opt_self();
}

void sub_2457BA2B8(void *a1)
{
  _QWORD *v1;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  void *v6;
  id v7;

  v3 = (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v1) + 0x70))();
  v5 = v4;
  v6 = (void *)sub_2457BAA74();
  sub_24574E14C(v3, v5);
  v7 = (id)sub_2457BB1A0();
  objc_msgSend(a1, sel_encodeObject_forKey_, v6, v7);

}

id sub_2457BA500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t inited;
  uint64_t v4;
  uint64_t v5;
  id v6;

  v0 = sub_2457BB1AC();
  v2 = v1;
  sub_245748A50((uint64_t *)&unk_25749AA30);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2457BDEE0;
  *(_QWORD *)(inited + 32) = sub_2457BB1AC();
  *(_QWORD *)(inited + 40) = v4;
  sub_2457BB440();
  sub_2457BB1D0();
  sub_2457BB1D0();
  sub_2457BB1D0();
  *(_QWORD *)(inited + 72) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(inited + 48) = 0;
  *(_QWORD *)(inited + 56) = 0xE000000000000000;
  v5 = sub_2457BB170();
  v6 = objc_allocWithZone(MEMORY[0x24BDD1540]);
  return sub_2457BA8B0(v0, v2, 4865, v5);
}

id XPCValue.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

id XPCValue.init()()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for XPCValue();
  return sub_2457BA994((uint64_t)v8.super_class, sel_init, v1, v2, v3, v4, v5, v6, v8);
}

void XPCValue.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  objc_super v9;

  v9.receiver = objc_allocWithZone(v1);
  v9.super_class = v1;
  sub_2457BA994((uint64_t)v9.receiver, sel_init, v3, v4, v5, v6, v7, v8, v9);

  sub_2457BA99C();
}

void sub_2457BA784()
{
  sub_2457BB440();
  swift_bridgeObjectRelease();
  sub_2457BB4F4();
  __break(1u);
}

id XPCValue.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for XPCValue();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_2457BA830(uint64_t a1)
{
  return sub_2457BA868(a1, MEMORY[0x24BDCB410], MEMORY[0x24BDCB400], &qword_25749A9B0);
}

uint64_t sub_2457BA84C(uint64_t a1)
{
  return sub_2457BA868(a1, MEMORY[0x24BDCB268], MEMORY[0x24BDCB260], &qword_25749A9B8);
}

uint64_t sub_2457BA868(uint64_t a1, void (*a2)(_QWORD), uint64_t (*a3)(void), uint64_t *a4)
{
  uint64_t result;

  a2(0);
  swift_allocObject();
  result = a3();
  *a4 = result;
  return result;
}

id sub_2457BA8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  v7 = (void *)sub_2457BB1A0();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8 = (void *)sub_2457BB158();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

uint64_t method lookup function for XPCValue()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of static XPCValue.supportsSecureCoding.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t dispatch thunk of XPCValue.__allocating_init(coder:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of XPCValue.encode(with:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x24BEE4EA0] & *v0) + 0x60))();
}

id sub_2457BA994(uint64_t a1, const char *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, objc_super a9)
{
  return objc_msgSendSuper2(&a9, a2);
}

uint64_t sub_2457BA9A8()
{
  return MEMORY[0x24BDCADA0]();
}

uint64_t sub_2457BA9B4()
{
  return MEMORY[0x24BDCAE78]();
}

uint64_t sub_2457BA9C0()
{
  return MEMORY[0x24BDCAE98]();
}

uint64_t sub_2457BA9CC()
{
  return MEMORY[0x24BDCAEB0]();
}

uint64_t sub_2457BA9D8()
{
  return MEMORY[0x24BDCAEE8]();
}

uint64_t sub_2457BA9E4()
{
  return MEMORY[0x24BDCAF28]();
}

uint64_t sub_2457BA9F0()
{
  return MEMORY[0x24BDCB220]();
}

uint64_t sub_2457BA9FC()
{
  return MEMORY[0x24BDCB3B8]();
}

uint64_t sub_2457BAA08()
{
  return MEMORY[0x24BDCC2F8]();
}

uint64_t sub_2457BAA14()
{
  return MEMORY[0x24BDCC5A8]();
}

uint64_t sub_2457BAA20()
{
  return MEMORY[0x24BDCD2C0]();
}

uint64_t sub_2457BAA2C()
{
  return MEMORY[0x24BDCD2F0]();
}

uint64_t sub_2457BAA38()
{
  return MEMORY[0x24BDCD2F8]();
}

uint64_t sub_2457BAA44()
{
  return MEMORY[0x24BDCD8D0]();
}

uint64_t sub_2457BAA50()
{
  return MEMORY[0x24BDCD988]();
}

uint64_t sub_2457BAA5C()
{
  return MEMORY[0x24BDCD9C0]();
}

uint64_t sub_2457BAA68()
{
  return MEMORY[0x24BDCDAC0]();
}

uint64_t sub_2457BAA74()
{
  return MEMORY[0x24BDCDCA0]();
}

uint64_t sub_2457BAA80()
{
  return MEMORY[0x24BDCDCD8]();
}

uint64_t sub_2457BAA8C()
{
  return MEMORY[0x24BDCDCE0]();
}

uint64_t sub_2457BAA98()
{
  return MEMORY[0x24BDCE900]();
}

uint64_t sub_2457BAAA4()
{
  return MEMORY[0x24BDCE9B0]();
}

uint64_t sub_2457BAAB0()
{
  return MEMORY[0x24BDCE9D0]();
}

uint64_t sub_2457BAABC()
{
  return MEMORY[0x24BDCE9F8]();
}

uint64_t sub_2457BAAC8()
{
  return MEMORY[0x24BDCEA40]();
}

uint64_t sub_2457BAAD4()
{
  return MEMORY[0x24BDCEA58]();
}

uint64_t sub_2457BAAE0()
{
  return MEMORY[0x24BDCEE28]();
}

uint64_t sub_2457BAAEC()
{
  return MEMORY[0x24BEB7F90]();
}

uint64_t sub_2457BAAF8()
{
  return MEMORY[0x24BEB7FA0]();
}

uint64_t sub_2457BAB04()
{
  return MEMORY[0x24BEB7FA8]();
}

uint64_t sub_2457BAB10()
{
  return MEMORY[0x24BEB80A8]();
}

uint64_t sub_2457BAB1C()
{
  return MEMORY[0x24BEB80B8]();
}

uint64_t sub_2457BAB28()
{
  return MEMORY[0x24BEB80F0]();
}

uint64_t sub_2457BAB34()
{
  return MEMORY[0x24BEB80F8]();
}

uint64_t sub_2457BAB40()
{
  return MEMORY[0x24BEB8100]();
}

uint64_t sub_2457BAB4C()
{
  return MEMORY[0x24BEB8140]();
}

uint64_t sub_2457BAB58()
{
  return MEMORY[0x24BEB8148]();
}

uint64_t sub_2457BAB64()
{
  return MEMORY[0x24BEB81C8]();
}

uint64_t sub_2457BAB70()
{
  return MEMORY[0x24BEB81D0]();
}

uint64_t sub_2457BAB7C()
{
  return MEMORY[0x24BEB81D8]();
}

uint64_t sub_2457BAB88()
{
  return MEMORY[0x24BEB81E0]();
}

uint64_t sub_2457BAB94()
{
  return MEMORY[0x24BEB81F0]();
}

uint64_t sub_2457BABA0()
{
  return MEMORY[0x24BEB8280]();
}

uint64_t sub_2457BABAC()
{
  return MEMORY[0x24BEB8288]();
}

uint64_t sub_2457BABB8()
{
  return MEMORY[0x24BEB8298]();
}

uint64_t sub_2457BABC4()
{
  return MEMORY[0x24BEB82A8]();
}

uint64_t sub_2457BABD0()
{
  return MEMORY[0x24BEB82B0]();
}

uint64_t sub_2457BABDC()
{
  return MEMORY[0x24BEB82D0]();
}

uint64_t sub_2457BABE8()
{
  return MEMORY[0x24BEB82E0]();
}

uint64_t sub_2457BABF4()
{
  return MEMORY[0x24BEB82E8]();
}

uint64_t sub_2457BAC00()
{
  return MEMORY[0x24BEB82F0]();
}

uint64_t sub_2457BAC0C()
{
  return MEMORY[0x24BEB8310]();
}

uint64_t sub_2457BAC18()
{
  return MEMORY[0x24BEB8318]();
}

uint64_t sub_2457BAC24()
{
  return MEMORY[0x24BEB8320]();
}

uint64_t sub_2457BAC30()
{
  return MEMORY[0x24BEB8328]();
}

uint64_t sub_2457BAC3C()
{
  return MEMORY[0x24BEB8330]();
}

uint64_t sub_2457BAC48()
{
  return MEMORY[0x24BEB8338]();
}

uint64_t sub_2457BAC54()
{
  return MEMORY[0x24BEB8340]();
}

uint64_t sub_2457BAC60()
{
  return MEMORY[0x24BEB8350]();
}

uint64_t sub_2457BAC6C()
{
  return MEMORY[0x24BEB8358]();
}

uint64_t sub_2457BAC78()
{
  return MEMORY[0x24BEB8360]();
}

uint64_t sub_2457BAC84()
{
  return MEMORY[0x24BEB8368]();
}

uint64_t sub_2457BAC90()
{
  return MEMORY[0x24BEB8370]();
}

uint64_t sub_2457BAC9C()
{
  return MEMORY[0x24BEB8378]();
}

uint64_t sub_2457BACA8()
{
  return MEMORY[0x24BEB8380]();
}

uint64_t sub_2457BACB4()
{
  return MEMORY[0x24BEB8388]();
}

uint64_t sub_2457BACC0()
{
  return MEMORY[0x24BEB8398]();
}

uint64_t sub_2457BACCC()
{
  return MEMORY[0x24BEB83A0]();
}

uint64_t sub_2457BACD8()
{
  return MEMORY[0x24BEB83A8]();
}

uint64_t sub_2457BACE4()
{
  return MEMORY[0x24BEB83E0]();
}

uint64_t sub_2457BACF0()
{
  return MEMORY[0x24BEB83E8]();
}

uint64_t sub_2457BACFC()
{
  return MEMORY[0x24BEB83F0]();
}

uint64_t sub_2457BAD08()
{
  return MEMORY[0x24BEB83F8]();
}

uint64_t sub_2457BAD14()
{
  return MEMORY[0x24BEB8400]();
}

uint64_t sub_2457BAD20()
{
  return MEMORY[0x24BEB8408]();
}

uint64_t sub_2457BAD2C()
{
  return MEMORY[0x24BEB8410]();
}

uint64_t sub_2457BAD38()
{
  return MEMORY[0x24BEB8418]();
}

uint64_t sub_2457BAD44()
{
  return MEMORY[0x24BEB8420]();
}

uint64_t sub_2457BAD50()
{
  return MEMORY[0x24BEB84C8]();
}

uint64_t sub_2457BAD5C()
{
  return MEMORY[0x24BEB84D0]();
}

uint64_t sub_2457BAD68()
{
  return MEMORY[0x24BEB84D8]();
}

uint64_t sub_2457BAD74()
{
  return MEMORY[0x24BEB8560]();
}

uint64_t sub_2457BAD80()
{
  return MEMORY[0x24BEB8568]();
}

uint64_t sub_2457BAD8C()
{
  return MEMORY[0x24BEB8570]();
}

uint64_t sub_2457BAD98()
{
  return MEMORY[0x24BEB85D0]();
}

uint64_t sub_2457BADA4()
{
  return MEMORY[0x24BEB85E0]();
}

uint64_t sub_2457BADB0()
{
  return MEMORY[0x24BEB85E8]();
}

uint64_t sub_2457BADBC()
{
  return MEMORY[0x24BEB85F0]();
}

uint64_t sub_2457BADC8()
{
  return MEMORY[0x24BEB85F8]();
}

uint64_t sub_2457BADD4()
{
  return MEMORY[0x24BEB8600]();
}

uint64_t sub_2457BADE0()
{
  return MEMORY[0x24BEB8608]();
}

uint64_t sub_2457BADEC()
{
  return MEMORY[0x24BE3BE28]();
}

uint64_t sub_2457BADF8()
{
  return MEMORY[0x24BE3BE50]();
}

uint64_t sub_2457BAE04()
{
  return MEMORY[0x24BE3BF80]();
}

uint64_t sub_2457BAE10()
{
  return MEMORY[0x24BE3BFC0]();
}

uint64_t sub_2457BAE1C()
{
  return MEMORY[0x24BE3C020]();
}

uint64_t sub_2457BAE28()
{
  return MEMORY[0x24BE3C060]();
}

uint64_t sub_2457BAE34()
{
  return MEMORY[0x24BE3C068]();
}

uint64_t sub_2457BAE40()
{
  return MEMORY[0x24BE3C088]();
}

uint64_t sub_2457BAE4C()
{
  return MEMORY[0x24BE3C118]();
}

uint64_t sub_2457BAE58()
{
  return MEMORY[0x24BE797A8]();
}

uint64_t sub_2457BAE64()
{
  return MEMORY[0x24BE79888]();
}

uint64_t sub_2457BAE70()
{
  return MEMORY[0x24BE79890]();
}

uint64_t sub_2457BAE7C()
{
  return MEMORY[0x24BE79898]();
}

uint64_t sub_2457BAE88()
{
  return MEMORY[0x24BE798A8]();
}

uint64_t sub_2457BAE94()
{
  return MEMORY[0x24BE798D0]();
}

uint64_t sub_2457BAEA0()
{
  return MEMORY[0x24BE798E0]();
}

uint64_t sub_2457BAEAC()
{
  return MEMORY[0x24BEE63B8]();
}

uint64_t sub_2457BAEB8()
{
  return MEMORY[0x24BE3C5B8]();
}

uint64_t sub_2457BAEC4()
{
  return MEMORY[0x24BE3C5C0]();
}

uint64_t sub_2457BAED0()
{
  return MEMORY[0x24BE3C5C8]();
}

uint64_t sub_2457BAEDC()
{
  return MEMORY[0x24BE3C698]();
}

uint64_t sub_2457BAEE8()
{
  return MEMORY[0x24BE3C6A0]();
}

uint64_t sub_2457BAEF4()
{
  return MEMORY[0x24BE3C6A8]();
}

uint64_t sub_2457BAF00()
{
  return MEMORY[0x24BE3C728]();
}

uint64_t sub_2457BAF0C()
{
  return MEMORY[0x24BE3C758]();
}

uint64_t sub_2457BAF18()
{
  return MEMORY[0x24BE3C778]();
}

uint64_t sub_2457BAF24()
{
  return MEMORY[0x24BE3C780]();
}

uint64_t sub_2457BAF30()
{
  return MEMORY[0x24BE3C788]();
}

uint64_t sub_2457BAF3C()
{
  return MEMORY[0x24BE3C790]();
}

uint64_t sub_2457BAF48()
{
  return MEMORY[0x24BE3C798]();
}

uint64_t sub_2457BAF54()
{
  return MEMORY[0x24BE3C7A0]();
}

uint64_t sub_2457BAF60()
{
  return MEMORY[0x24BE3C7A8]();
}

uint64_t sub_2457BAF6C()
{
  return MEMORY[0x24BE3C7B0]();
}

uint64_t sub_2457BAF78()
{
  return MEMORY[0x24BE3C7B8]();
}

uint64_t sub_2457BAF84()
{
  return MEMORY[0x24BE3C7F8]();
}

uint64_t sub_2457BAF90()
{
  return MEMORY[0x24BE3C800]();
}

uint64_t sub_2457BAF9C()
{
  return MEMORY[0x24BE3B1C8]();
}

uint64_t sub_2457BAFA8()
{
  return MEMORY[0x24BE3B1D0]();
}

uint64_t sub_2457BAFB4()
{
  return MEMORY[0x24BE3B1D8]();
}

uint64_t sub_2457BAFC0()
{
  return MEMORY[0x24BE3B420]();
}

uint64_t sub_2457BAFCC()
{
  return MEMORY[0x24BE3B470]();
}

uint64_t _s4Sage34GenerativeExperiencesSessionClientC8complete10generating5query5tools7tooling10toolChoice9documents10parameters15TokenGeneration0O6StreamVyxGxm_9PromptKit012ChatMessagesR0VSay0B19FunctionsFoundation4ToolVGSayAS7Tooling_pGAS0xL0VSay0b6ModelsW026DocumentResourceIdentifierVGAL18SamplingParametersVtAS9GenerableRzlFfA3__0()
{
  return MEMORY[0x24BE3B508]();
}

uint64_t sub_2457BAFE4()
{
  return MEMORY[0x24BE3B510]();
}

uint64_t sub_2457BAFF0()
{
  return MEMORY[0x24BE3B648]();
}

uint64_t sub_2457BAFFC()
{
  return MEMORY[0x24BE3B910]();
}

uint64_t sub_2457BB008()
{
  return MEMORY[0x24BE3B918]();
}

uint64_t sub_2457BB014()
{
  return MEMORY[0x24BE3B968]();
}

uint64_t sub_2457BB020()
{
  return MEMORY[0x24BE3B970]();
}

uint64_t sub_2457BB02C()
{
  return MEMORY[0x24BE3B9A0]();
}

uint64_t sub_2457BB038()
{
  return MEMORY[0x24BE3B9C0]();
}

uint64_t sub_2457BB044()
{
  return MEMORY[0x24BE3B9C8]();
}

uint64_t sub_2457BB050()
{
  return MEMORY[0x24BE3B9D8]();
}

uint64_t sub_2457BB05C()
{
  return MEMORY[0x24BE3BA00]();
}

uint64_t sub_2457BB068()
{
  return MEMORY[0x24BEE78A8]();
}

uint64_t sub_2457BB074()
{
  return MEMORY[0x24BEE78C0]();
}

uint64_t sub_2457BB080()
{
  return MEMORY[0x24BEE78C8]();
}

uint64_t sub_2457BB08C()
{
  return MEMORY[0x24BEE78D8]();
}

uint64_t sub_2457BB098()
{
  return MEMORY[0x24BE3BC10]();
}

uint64_t sub_2457BB0A4()
{
  return MEMORY[0x24BE3BC20]();
}

uint64_t sub_2457BB0B0()
{
  return MEMORY[0x24BE7A820]();
}

uint64_t sub_2457BB0BC()
{
  return MEMORY[0x24BE7A828]();
}

uint64_t sub_2457BB0C8()
{
  return MEMORY[0x24BE7A830]();
}

uint64_t sub_2457BB0D4()
{
  return MEMORY[0x24BE7A858]();
}

uint64_t sub_2457BB0E0()
{
  return MEMORY[0x24BE7A8B0]();
}

uint64_t sub_2457BB0EC()
{
  return MEMORY[0x24BE7A8D8]();
}

uint64_t sub_2457BB0F8()
{
  return MEMORY[0x24BE7A900]();
}

uint64_t sub_2457BB104()
{
  return MEMORY[0x24BE7A908]();
}

uint64_t sub_2457BB110()
{
  return MEMORY[0x24BE7A948]();
}

uint64_t sub_2457BB11C()
{
  return MEMORY[0x24BE7A968]();
}

uint64_t sub_2457BB128()
{
  return MEMORY[0x24BE7AB08]();
}

uint64_t sub_2457BB134()
{
  return MEMORY[0x24BE7AB88]();
}

uint64_t sub_2457BB140()
{
  return MEMORY[0x24BE7AC20]();
}

uint64_t sub_2457BB14C()
{
  return MEMORY[0x24BEE67F8]();
}

uint64_t sub_2457BB158()
{
  return MEMORY[0x24BDCF808]();
}

uint64_t sub_2457BB164()
{
  return MEMORY[0x24BDCF830]();
}

uint64_t sub_2457BB170()
{
  return MEMORY[0x24BEE02B0]();
}

uint64_t sub_2457BB17C()
{
  return MEMORY[0x24BEE0610]();
}

uint64_t sub_2457BB188()
{
  return MEMORY[0x24BEE0618]();
}

uint64_t sub_2457BB194()
{
  return MEMORY[0x24BEE0980]();
}

uint64_t sub_2457BB1A0()
{
  return MEMORY[0x24BDCF9E0]();
}

uint64_t sub_2457BB1AC()
{
  return MEMORY[0x24BDCFA28]();
}

uint64_t sub_2457BB1B8()
{
  return MEMORY[0x24BEE09F0]();
}

uint64_t sub_2457BB1C4()
{
  return MEMORY[0x24BEE0B20]();
}

uint64_t sub_2457BB1D0()
{
  return MEMORY[0x24BEE0BC0]();
}

uint64_t sub_2457BB1DC()
{
  return MEMORY[0x24BEE0C10]();
}

uint64_t sub_2457BB1E8()
{
  return MEMORY[0x24BEE1000]();
}

uint64_t sub_2457BB1F4()
{
  return MEMORY[0x24BEE1018]();
}

uint64_t sub_2457BB200()
{
  return MEMORY[0x24BEE1080]();
}

uint64_t sub_2457BB20C()
{
  return MEMORY[0x24BEE1098]();
}

uint64_t sub_2457BB218()
{
  return MEMORY[0x24BEE1110]();
}

uint64_t sub_2457BB224()
{
  return MEMORY[0x24BDCFBA8]();
}

uint64_t sub_2457BB230()
{
  return MEMORY[0x24BDCFBC8]();
}

uint64_t sub_2457BB23C()
{
  return MEMORY[0x24BEE1128]();
}

uint64_t sub_2457BB248()
{
  return MEMORY[0x24BEE1160]();
}

uint64_t sub_2457BB254()
{
  return MEMORY[0x24BEE11B8]();
}

uint64_t sub_2457BB260()
{
  return MEMORY[0x24BEE1250]();
}

uint64_t sub_2457BB26C()
{
  return MEMORY[0x24BEE6800]();
}

uint64_t sub_2457BB278()
{
  return MEMORY[0x24BEE6820]();
}

uint64_t sub_2457BB284()
{
  return MEMORY[0x24BEE6828]();
}

uint64_t sub_2457BB290()
{
  return MEMORY[0x24BEE6838]();
}

uint64_t sub_2457BB29C()
{
  return MEMORY[0x24BEE6988]();
}

uint64_t sub_2457BB2A8()
{
  return MEMORY[0x24BEE6990]();
}

uint64_t sub_2457BB2B4()
{
  return MEMORY[0x24BEE6C50]();
}

uint64_t sub_2457BB2C0()
{
  return MEMORY[0x24BEE6C90]();
}

uint64_t sub_2457BB2CC()
{
  return MEMORY[0x24BEE6CC0]();
}

uint64_t sub_2457BB2D8()
{
  return MEMORY[0x24BEE6CC8]();
}

uint64_t sub_2457BB2E4()
{
  return MEMORY[0x24BEE6CE0]();
}

uint64_t sub_2457BB2F0()
{
  return MEMORY[0x24BEE6CF8]();
}

uint64_t sub_2457BB2FC()
{
  return MEMORY[0x24BEE6D20]();
}

uint64_t sub_2457BB308()
{
  return MEMORY[0x24BEE6D30]();
}

uint64_t sub_2457BB314()
{
  return MEMORY[0x24BDCFCC0]();
}

uint64_t sub_2457BB320()
{
  return MEMORY[0x24BDCFCE8]();
}

uint64_t sub_2457BB32C()
{
  return MEMORY[0x24BEE15D8]();
}

uint64_t sub_2457BB338()
{
  return MEMORY[0x24BEE1678]();
}

uint64_t sub_2457BB344()
{
  return MEMORY[0x24BEE78F0]();
}

uint64_t sub_2457BB350()
{
  return MEMORY[0x24BEE7910]();
}

uint64_t sub_2457BB35C()
{
  return MEMORY[0x24BEE7920]();
}

uint64_t sub_2457BB368()
{
  return MEMORY[0x24BEE7928]();
}

uint64_t sub_2457BB374()
{
  return MEMORY[0x24BEE5658]();
}

uint64_t sub_2457BB380()
{
  return MEMORY[0x24BDCFFF8]();
}

uint64_t sub_2457BB38C()
{
  return MEMORY[0x24BDD00E8]();
}

uint64_t sub_2457BB398()
{
  return MEMORY[0x24BDD00F8]();
}

uint64_t sub_2457BB3A4()
{
  return MEMORY[0x24BDD0170]();
}

uint64_t sub_2457BB3B0()
{
  return MEMORY[0x24BEE1C68]();
}

uint64_t sub_2457BB3BC()
{
  return MEMORY[0x24BEE1F00]();
}

uint64_t sub_2457BB3C8()
{
  return MEMORY[0x24BEE1F48]();
}

uint64_t sub_2457BB3D4()
{
  return MEMORY[0x24BEE20A8]();
}

uint64_t sub_2457BB3E0()
{
  return MEMORY[0x24BEE22B0]();
}

uint64_t sub_2457BB3EC()
{
  return MEMORY[0x24BEE2300]();
}

uint64_t sub_2457BB3F8()
{
  return MEMORY[0x24BEE2330]();
}

uint64_t sub_2457BB404()
{
  return MEMORY[0x24BEE2358]();
}

uint64_t sub_2457BB410()
{
  return MEMORY[0x24BEE23A0]();
}

uint64_t sub_2457BB41C()
{
  return MEMORY[0x24BEE24B8]();
}

uint64_t sub_2457BB428()
{
  return MEMORY[0x24BEE24C0]();
}

uint64_t sub_2457BB434()
{
  return MEMORY[0x24BEE24D0]();
}

uint64_t sub_2457BB440()
{
  return MEMORY[0x24BEE2510]();
}

uint64_t sub_2457BB44C()
{
  return MEMORY[0x24BEE2518]();
}

uint64_t sub_2457BB458()
{
  return MEMORY[0x24BEE2658]();
}

uint64_t sub_2457BB464()
{
  return MEMORY[0x24BEE26E8]();
}

uint64_t sub_2457BB470()
{
  return MEMORY[0x24BEE2710]();
}

uint64_t sub_2457BB47C()
{
  return MEMORY[0x24BEE2838]();
}

uint64_t sub_2457BB488()
{
  return MEMORY[0x24BEE2908]();
}

uint64_t sub_2457BB494()
{
  return MEMORY[0x24BEE2938]();
}

uint64_t sub_2457BB4A0()
{
  return MEMORY[0x24BEE2958]();
}

uint64_t sub_2457BB4AC()
{
  return MEMORY[0x24BEE2980]();
}

uint64_t sub_2457BB4B8()
{
  return MEMORY[0x24BEE2988]();
}

uint64_t sub_2457BB4C4()
{
  return MEMORY[0x24BEE2BE0]();
}

uint64_t sub_2457BB4D0()
{
  return MEMORY[0x24BEE2E58]();
}

uint64_t sub_2457BB4DC()
{
  return MEMORY[0x24BEE2E70]();
}

uint64_t sub_2457BB4E8()
{
  return MEMORY[0x24BEE2F40]();
}

uint64_t sub_2457BB4F4()
{
  return MEMORY[0x24BEE2F48]();
}

uint64_t sub_2457BB500()
{
  return MEMORY[0x24BEE3068]();
}

uint64_t sub_2457BB50C()
{
  return MEMORY[0x24BEE3098]();
}

uint64_t sub_2457BB518()
{
  return MEMORY[0x24BEE30B0]();
}

uint64_t sub_2457BB524()
{
  return MEMORY[0x24BEE3290]();
}

uint64_t sub_2457BB530()
{
  return MEMORY[0x24BEE32B8]();
}

uint64_t sub_2457BB53C()
{
  return MEMORY[0x24BEE32C0]();
}

uint64_t sub_2457BB548()
{
  return MEMORY[0x24BEE32D8]();
}

uint64_t sub_2457BB554()
{
  return MEMORY[0x24BEE32E0]();
}

uint64_t sub_2457BB560()
{
  return MEMORY[0x24BEE32E8]();
}

uint64_t sub_2457BB56C()
{
  return MEMORY[0x24BEE32F8]();
}

uint64_t sub_2457BB578()
{
  return MEMORY[0x24BEE3308]();
}

uint64_t sub_2457BB584()
{
  return MEMORY[0x24BEE3350]();
}

uint64_t sub_2457BB590()
{
  return MEMORY[0x24BEE3358]();
}

uint64_t sub_2457BB59C()
{
  return MEMORY[0x24BEE3360]();
}

uint64_t sub_2457BB5A8()
{
  return MEMORY[0x24BEE3368]();
}

uint64_t sub_2457BB5B4()
{
  return MEMORY[0x24BEE3370]();
}

uint64_t sub_2457BB5C0()
{
  return MEMORY[0x24BEE3378]();
}

uint64_t sub_2457BB5CC()
{
  return MEMORY[0x24BEE3380]();
}

uint64_t sub_2457BB5D8()
{
  return MEMORY[0x24BEE3398]();
}

uint64_t sub_2457BB5E4()
{
  return MEMORY[0x24BEE33C8]();
}

uint64_t sub_2457BB5F0()
{
  return MEMORY[0x24BEE33E0]();
}

uint64_t sub_2457BB5FC()
{
  return MEMORY[0x24BEE3408]();
}

uint64_t sub_2457BB608()
{
  return MEMORY[0x24BEE3428]();
}

uint64_t sub_2457BB614()
{
  return MEMORY[0x24BEE3430]();
}

uint64_t sub_2457BB620()
{
  return MEMORY[0x24BEE3438]();
}

uint64_t sub_2457BB62C()
{
  return MEMORY[0x24BEE3448]();
}

uint64_t sub_2457BB638()
{
  return MEMORY[0x24BEE3458]();
}

uint64_t sub_2457BB644()
{
  return MEMORY[0x24BEE34A0]();
}

uint64_t sub_2457BB650()
{
  return MEMORY[0x24BEE34A8]();
}

uint64_t sub_2457BB65C()
{
  return MEMORY[0x24BEE34B0]();
}

uint64_t sub_2457BB668()
{
  return MEMORY[0x24BEE34B8]();
}

uint64_t sub_2457BB674()
{
  return MEMORY[0x24BEE34C0]();
}

uint64_t sub_2457BB680()
{
  return MEMORY[0x24BEE34C8]();
}

uint64_t sub_2457BB68C()
{
  return MEMORY[0x24BEE34D0]();
}

uint64_t sub_2457BB698()
{
  return MEMORY[0x24BEE34E8]();
}

uint64_t sub_2457BB6A4()
{
  return MEMORY[0x24BEE3520]();
}

uint64_t sub_2457BB6B0()
{
  return MEMORY[0x24BEE3A30]();
}

uint64_t sub_2457BB6BC()
{
  return MEMORY[0x24BEE7098]();
}

uint64_t sub_2457BB6C8()
{
  return MEMORY[0x24BEE70E0]();
}

uint64_t sub_2457BB6D4()
{
  return MEMORY[0x24BEE3ED0]();
}

uint64_t sub_2457BB6E0()
{
  return MEMORY[0x24BEE3ED8]();
}

uint64_t sub_2457BB6EC()
{
  return MEMORY[0x24BEE3EF8]();
}

uint64_t sub_2457BB6F8()
{
  return MEMORY[0x24BEE3F00]();
}

uint64_t sub_2457BB704()
{
  return MEMORY[0x24BEE3F08]();
}

uint64_t sub_2457BB710()
{
  return MEMORY[0x24BEE3F10]();
}

uint64_t sub_2457BB71C()
{
  return MEMORY[0x24BEE42C0]();
}

uint64_t sub_2457BB728()
{
  return MEMORY[0x24BEE42E0]();
}

uint64_t sub_2457BB734()
{
  return MEMORY[0x24BEE42F8]();
}

uint64_t sub_2457BB740()
{
  return MEMORY[0x24BEE4300]();
}

uint64_t sub_2457BB74C()
{
  return MEMORY[0x24BEE4310]();
}

uint64_t sub_2457BB758()
{
  return MEMORY[0x24BEE4318]();
}

uint64_t sub_2457BB764()
{
  return MEMORY[0x24BEE4328]();
}

uint64_t sub_2457BB770()
{
  return MEMORY[0x24BEE4608]();
}

uint64_t sub_2457BB77C()
{
  return MEMORY[0x24BEE4638]();
}

uint64_t sub_2457BB788()
{
  return MEMORY[0x24BEE4A08]();
}

uint64_t sub_2457BB794()
{
  return MEMORY[0x24BEE4A10]();
}

NSRange NSUnionRange(NSRange range1, NSRange range2)
{
  NSUInteger v2;
  NSUInteger v3;
  NSRange result;

  v2 = MEMORY[0x24BDD13D8](range1.location, range1.length, range2.location, range2.length);
  result.length = v3;
  result.location = v2;
  return result;
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x24BDAC720](aBlock);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x24BDAC738](aBlock);
}

uint64_t _CFURLAttachSecurityScopeToFileURL()
{
  return MEMORY[0x24BDBD0C8]();
}

uint64_t _CFURLCopySecurityScopeFromFileURL()
{
  return MEMORY[0x24BDBD0F0]();
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x24BDACB90](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x24BEE4B30]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x24BEE4B38]();
}

pid_t audit_token_to_pid(audit_token_t *atoken)
{
  return MEMORY[0x24BEDA8F8](atoken);
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x24BDAD320](a1, a2);
}

dispatch_group_t dispatch_group_create(void)
{
  return (dispatch_group_t)MEMORY[0x24BDADDC8]();
}

void dispatch_group_enter(dispatch_group_t group)
{
  MEMORY[0x24BDADDD0](group);
}

void dispatch_group_leave(dispatch_group_t group)
{
  MEMORY[0x24BDADDD8](group);
}

void free(void *a1)
{
  MEMORY[0x24BDAE450](a1);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x24BDAED08](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x24BDAED60](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x24BDAEE80](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x24BDAEE98](__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x24BEDCF78](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDCFD0](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD108](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x24BEDD120](a1, a2);
}

uint64_t objc_opt_self()
{
  return MEMORY[0x24BEDD168]();
}

void objc_release(id a1)
{
  MEMORY[0x24BEDD188](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x24BEDD2A0](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x24BEDD2B8](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x24BDAF398](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF460](lock);
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
  MEMORY[0x24BDAF488](lock);
}

uint64_t swift_allocBox()
{
  return MEMORY[0x24BEE4B58]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x24BEE4B68]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x24BEE4B70]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x24BEE4B80]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x24BEE4B98]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x24BEE4BA0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x24BEE4BA8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x24BEE4BB0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x24BEE4BB8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x24BEE4BC0]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x24BEE4BC8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x24BEE4BD0]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x24BEE4BD8]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x24BEE4BE0]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x24BEE4C00]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x24BEE4C10]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x24BEE4C18]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x24BEE4C38]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x24BEE4C98]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x24BEE4CA0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x24BEE4CA8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x24BEE4CD0]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x24BEE4CD8]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x24BEE4D00]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x24BEE4D08]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4D10]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x24BEE4D40]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x24BEE4D80]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x24BEE4DA0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x24BEE4DB0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x24BEE4DB8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x24BEE4DD0]();
}

uint64_t swift_getTupleTypeLayout2()
{
  return MEMORY[0x24BEE4DE0]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x24BEE4E10]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x24BEE4E18]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x24BEE4E20]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x24BEE4E30]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x24BEE4E48]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x24BEE4E58]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x24BEE4E98]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x24BEE4EA8]();
}

uint64_t swift_once()
{
  return MEMORY[0x24BEE4EC8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x24BEE4ED0]();
}

uint64_t swift_release()
{
  return MEMORY[0x24BEE4EF8]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x24BEE4F00]();
}

uint64_t swift_retain()
{
  return MEMORY[0x24BEE4F08]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x24BEE4F38]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x24BEE4F40]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x24BEE4F58]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x24BEE4F60]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x24BEE7228]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x24BEE7230]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x24BEE7238]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x24BEE7278]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x24BEE4F68]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x24BEE4F70]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x24BEE4F80]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x24BEE4FC8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x24BEE4FD0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x24BEE4FD8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x24BEE5008]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x24BEE5028]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x24BEE5030]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x24BEE5038]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x24BEE5050]();
}

