__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy170_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_OWORD *)(a1 + 154) = *(__int128 *)((char *)a2 + 154);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x1AF44BD90](a1, v6, a5);
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE v11[24];

  if (result != a2)
  {
    v3 = result;
    v4 = result[3];
    v5 = a2[3];
    if (v4 == v5)
    {
      v9 = *(_QWORD *)(v4 - 8);
      if ((*(_BYTE *)(v9 + 82) & 2) != 0)
      {
        v10 = *a2;
        swift_retain();
        result = (uint64_t *)swift_release();
        *v3 = v10;
      }
      else
      {
        return (uint64_t *)(*(uint64_t (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 24))(result, a2, result[3]);
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      v6 = *(_QWORD *)(v4 - 8);
      v7 = *(_QWORD *)(v5 - 8);
      v8 = *(_DWORD *)(v7 + 80);
      if ((*(_BYTE *)(v6 + 82) & 2) != 0)
      {
        if ((v8 & 0x20000) != 0)
        {
          *result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(_BYTE *, uint64_t *, uint64_t))(v6 + 32))(v11, result, v4);
        if ((v8 & 0x20000) != 0)
        {
          *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v11, v4);
      }
    }
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t keypath_setTm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t keypath_setTm_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_bridgeObjectRetain();
  return a5(v6);
}

uint64_t keypath_setTm_1(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v6;
  uint64_t result;
  uint64_t v8;

  v6 = *a1;
  result = a5(0);
  v8 = a2 + *(int *)(result + 20);
  *(_QWORD *)v8 = v6;
  *(_BYTE *)(v8 + 8) = 0;
  return result;
}

uint64_t keypath_set_28Tm(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t keypath_setTm_2(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1AF44BDD8]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

__n128 __swift_memcpy32_4(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t __swift_deallocate_boxed_opaque_existential_1(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x1AF44BED4);
  return result;
}

__n128 __swift_memcpy72_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

__n128 __swift_memcpy112_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

__n128 __swift_memcpy97_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_BYTE *)(a1 + 96) = *((_BYTE *)a2 + 96);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *result = *a2;
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x1AF44BDE4](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

__n128 __swift_memcpy88_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t __swift_get_extra_inhabitant_index_61Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t __swift_get_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t __swift_get_extra_inhabitant_indexTm_1(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 253)
  {
    v4 = *a1;
    if (v4 >= 3)
      return v4 - 2;
    else
      return 0;
  }
  else
  {
    v8 = sub_1AD63AF28();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result;

  result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t __swift_memcpy5_4(uint64_t result, int *a2)
{
  int v2;

  v2 = *a2;
  *(_BYTE *)(result + 4) = *((_BYTE *)a2 + 4);
  *(_DWORD *)result = v2;
  return result;
}

__n128 __swift_memcpy105_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(__int128 *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __n128 result;
  __int128 v4;
  __int128 v5;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  result = *(__n128 *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

void *__swift_memcpy280_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x118uLL);
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t keypath_getTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = type metadata accessor for Encoded(0, *(_QWORD *)(a3 + a2 - 16), *(_QWORD *)(a3 + a2 - 8), (uint64_t)a4);
  return a4(v5);
}

uint64_t keypath_getTm_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, double *a3@<X8>)
{
  uint64_t result;
  uint64_t v6;
  double v7;

  result = a2(0);
  v6 = a1 + *(int *)(result + 20);
  v7 = *(double *)v6;
  if (*(_BYTE *)(v6 + 8))
    v7 = 0.0;
  *a3 = v7;
  return result;
}

uint64_t keypath_getTm_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v5;

  v5 = type metadata accessor for Validated(0, *(_QWORD *)(a3 + a2 - 8), a3, (uint64_t)a4);
  return a4(v5);
}

uint64_t keypath_getTm_2@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, uint64_t (*a3)(_QWORD)@<X4>, uint64_t a4@<X8>)
{
  uint64_t v6;

  v6 = *a1 + *a2;
  swift_beginAccess();
  return sub_1AD0D3D2C(v6, a4, a3);
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy200_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  result = *(__n128 *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

__n128 __swift_memcpy248_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __n128 result;
  __int128 v12;
  __int128 v13;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  v8 = a2[8];
  v9 = a2[9];
  v10 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  result = (__n128)a2[12];
  v12 = a2[13];
  v13 = a2[14];
  *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 224) = v13;
  *(__n128 *)(a1 + 192) = result;
  return result;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy104_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  __int128 v6;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  result = (__n128)a2[3];
  v5 = a2[4];
  v6 = a2[5];
  *(_QWORD *)(a1 + 96) = *((_QWORD *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t __swift_store_extra_inhabitant_index_62Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = a2;
  return result;
}

uint64_t __swift_store_extra_inhabitant_indexTm_0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

_BYTE *__swift_store_extra_inhabitant_indexTm_1(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 253)
  {
    *result = a2 + 2;
  }
  else
  {
    v7 = sub_1AD63AF28();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

__n128 __swift_memcpy146_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

__n128 __swift_memcpy161_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

_QWORD *__swift_memcpy8_4(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

__n128 __swift_memcpy168_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_QWORD *)(a1 + 160) = *((_QWORD *)a2 + 20);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

__n128 __swift_memcpy153_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;
  __int128 v8;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  result = *(__n128 *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

__n128 __swift_memcpy41_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

__n128 __swift_memcpy144_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

__n128 __swift_memcpy184_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  v5 = a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  result = (__n128)a2[8];
  v9 = a2[9];
  v10 = a2[10];
  *(_QWORD *)(a1 + 176) = *((_QWORD *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

__n128 __swift_memcpy209_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

__n128 __swift_memcpy194_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __n128 result;
  __int128 v9;
  __int128 v10;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  v5 = *(_OWORD *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 96) = v6;
  result = *(__n128 *)(a2 + 144);
  v9 = *(_OWORD *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  *(_WORD *)(a1 + 192) = *(_WORD *)(a2 + 192);
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 176) = v10;
  *(__n128 *)(a1 + 144) = result;
  return result;
}

__n128 __swift_memcpy36_4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

void *__swift_memcpy312_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x138uLL);
}

uint64_t decode_SPUint32()
{
  return _asn1_decode_top();
}

uint64_t encode_SPUint32()
{
  return _asn1_encode();
}

uint64_t length_SPUint32()
{
  return _asn1_length();
}

uint64_t free_SPUint32()
{
  return _asn1_free_top();
}

uint64_t copy_SPUint32()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSSPKey()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSSPKey()
{
  return _asn1_encode();
}

uint64_t length_PCSSPKey()
{
  return _asn1_length();
}

uint64_t free_PCSSPKey()
{
  return _asn1_free_top();
}

uint64_t copy_PCSSPKey()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSSPKeyList()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSSPKeyList()
{
  return _asn1_encode();
}

uint64_t length_PCSSPKeyList()
{
  return _asn1_length();
}

uint64_t free_PCSSPKeyList()
{
  return _asn1_free_top();
}

uint64_t copy_PCSSPKeyList()
{
  return _asn1_copy_top();
}

uint64_t add_PCSSPKeyList(uint64_t a1)
{
  void *v2;
  uint64_t result;

  v2 = malloc_type_realloc(*(void **)(a1 + 8), 32 * (*(_DWORD *)a1 + 1), 0x1090040863882BEuLL);
  if (!v2)
    return 12;
  *(_QWORD *)(a1 + 8) = v2;
  result = _asn1_copy_top();
  if (!(_DWORD)result)
    ++*(_DWORD *)a1;
  return result;
}

uint64_t remove_PCSSPKeyList(uint64_t a1, unsigned int a2)
{
  uint64_t v4;
  unsigned int v5;
  void *v6;
  uint64_t result;

  if (*(_DWORD *)a1 <= a2)
    return 1859794437;
  v4 = a2;
  _asn1_free_top();
  v5 = *(_DWORD *)a1 - 1;
  *(_DWORD *)a1 = v5;
  if (v5 > a2)
  {
    memmove((void *)(*(_QWORD *)(a1 + 8) + 32 * v4), (const void *)(*(_QWORD *)(a1 + 8) + 32 * (a2 + 1)), 32 * (v5 - a2));
    v5 = *(_DWORD *)a1;
  }
  v6 = malloc_type_realloc(*(void **)(a1 + 8), 32 * v5, 0x1090040863882BEuLL);
  if (!v6 && *(_DWORD *)a1)
    return 0;
  result = 0;
  *(_QWORD *)(a1 + 8) = v6;
  return result;
}

uint64_t decode_PCSEncryptedObject()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSEncryptedObject()
{
  return _asn1_encode();
}

uint64_t length_PCSEncryptedObject()
{
  return _asn1_length();
}

uint64_t free_PCSEncryptedObject()
{
  return _asn1_free_top();
}

uint64_t copy_PCSEncryptedObject()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSEncryptedKeys()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSEncryptedKeys()
{
  return _asn1_encode();
}

uint64_t length_PCSEncryptedKeys()
{
  return _asn1_length();
}

uint64_t free_PCSEncryptedKeys()
{
  return _asn1_free_top();
}

uint64_t copy_PCSEncryptedKeys()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSShareEntry()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSShareEntry()
{
  return _asn1_encode();
}

uint64_t length_PCSShareEntry()
{
  return _asn1_length();
}

uint64_t free_PCSShareEntry()
{
  return _asn1_free_top();
}

uint64_t copy_PCSShareEntry()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSSignedShareProtection()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSSignedShareProtection()
{
  return _asn1_encode();
}

uint64_t length_PCSSignedShareProtection()
{
  return _asn1_length();
}

uint64_t free_PCSSignedShareProtection()
{
  return _asn1_free_top();
}

uint64_t copy_PCSSignedShareProtection()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSObjectSignature()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSObjectSignature()
{
  return _asn1_encode();
}

uint64_t length_PCSObjectSignature()
{
  return _asn1_length();
}

uint64_t free_PCSObjectSignature()
{
  return _asn1_free_top();
}

uint64_t copy_PCSObjectSignature()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSShareProtection()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSShareProtection()
{
  return _asn1_encode();
}

uint64_t length_PCSShareProtection()
{
  return _asn1_length();
}

uint64_t free_PCSShareProtection()
{
  return _asn1_free_top();
}

uint64_t copy_PCSShareProtection()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSObjectChaining()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSObjectChaining()
{
  return _asn1_encode();
}

uint64_t length_PCSObjectChaining()
{
  return _asn1_length();
}

uint64_t free_PCSObjectChaining()
{
  return _asn1_free_top();
}

uint64_t copy_PCSObjectChaining()
{
  return _asn1_copy_top();
}

void sub_1ACFCC5E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCC710(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCC854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCC9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_list va;

  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCCAF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCCC38(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, ...)
{
  va_list va;

  va_start(va, a10);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCCDF8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCCF2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCD038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCD164(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void PosterKitLibrary()
{
  void *v0;

  if (!PosterKitLibraryCore_frameworkLibrary)
    PosterKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!PosterKitLibraryCore_frameworkLibrary)
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

id getPRPosterContentDiscreteColorsStyleClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getPRPosterContentDiscreteColorsStyleClass_softClass;
  v7 = getPRPosterContentDiscreteColorsStyleClass_softClass;
  if (!getPRPosterContentDiscreteColorsStyleClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getPRPosterContentDiscreteColorsStyleClass_block_invoke;
    v3[3] = &unk_1E5CCC218;
    v3[4] = &v4;
    __getPRPosterContentDiscreteColorsStyleClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1ACFCD4C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCD694(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_list va;

  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCD7D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCD8C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFCD9FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getPRSPosterArchiverClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterBoardServicesLibrary();
  result = objc_getClass("PRSPosterArchiver");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRSPosterArchiverClass_block_invoke_cold_1();
  getPRSPosterArchiverClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t PosterBoardServicesLibrary()
{
  uint64_t v0;
  void *v2;

  if (!PosterBoardServicesLibraryCore_frameworkLibrary)
    PosterBoardServicesLibraryCore_frameworkLibrary = _sl_dlopen();
  v0 = PosterBoardServicesLibraryCore_frameworkLibrary;
  if (!PosterBoardServicesLibraryCore_frameworkLibrary)
  {
    v2 = (void *)abort_report_np();
    free(v2);
  }
  return v0;
}

Class __getPRPosterSystemTimeFontConfigurationClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterKitLibrary();
  result = objc_getClass("PRPosterSystemTimeFontConfiguration");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRPosterSystemTimeFontConfigurationClass_block_invoke_cold_1();
  getPRPosterSystemTimeFontConfigurationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPRPosterColorClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterKitLibrary();
  result = objc_getClass("PRPosterColor");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRPosterColorClass_block_invoke_cold_1();
  getPRPosterColorClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

id getUIColorClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getUIColorClass_softClass;
  v7 = getUIColorClass_softClass;
  if (!getUIColorClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getUIColorClass_block_invoke;
    v3[3] = &unk_1E5CCC218;
    v3[4] = &v4;
    __getUIColorClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1ACFCDC94(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class __getUIColorClass_block_invoke(uint64_t a1)
{
  Class result;

  if (!UIKitCoreLibraryCore_frameworkLibrary)
  {
    UIKitCoreLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!UIKitCoreLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_6:
      __getUIColorClass_block_invoke_cold_1();
    }
  }
  result = objc_getClass("UIColor");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    goto LABEL_6;
  getUIColorClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPRPosterTitleStyleConfigurationClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterKitLibrary();
  result = objc_getClass("PRPosterTitleStyleConfiguration");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRPosterTitleStyleConfigurationClass_block_invoke_cold_1();
  getPRPosterTitleStyleConfigurationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPRPosterRenderingConfigurationClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterKitLibrary();
  result = objc_getClass("PRPosterRenderingConfiguration");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRPosterRenderingConfigurationClass_block_invoke_cold_1();
  getPRPosterRenderingConfigurationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPRPosterConfiguredPropertiesClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterKitLibrary();
  result = objc_getClass("PRPosterConfiguredProperties");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRPosterConfiguredPropertiesClass_block_invoke_cold_1();
  getPRPosterConfiguredPropertiesClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPFServerPosterIdentityClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterFoundationLibrary();
  result = objc_getClass("PFServerPosterIdentity");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPFServerPosterIdentityClass_block_invoke_cold_1();
  getPFServerPosterIdentityClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void PosterFoundationLibrary()
{
  void *v0;

  if (!PosterFoundationLibraryCore_frameworkLibrary)
    PosterFoundationLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!PosterFoundationLibraryCore_frameworkLibrary)
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

Class __getPFServerPosterPathClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterFoundationLibrary();
  result = objc_getClass("PFServerPosterPath");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPFServerPosterPathClass_block_invoke_cold_1();
  getPFServerPosterPathClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPRSPosterConfigurationClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterBoardServicesLibrary();
  result = objc_getClass("PRSPosterConfiguration");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRSPosterConfigurationClass_block_invoke_cold_1();
  getPRSPosterConfigurationClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPRPosterPathUtilitiesClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterKitLibrary();
  result = objc_getClass("PRPosterPathUtilities");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRPosterPathUtilitiesClass_block_invoke_cold_1();
  getPRPosterPathUtilitiesClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPRPosterContentDiscreteColorsStyleClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterKitLibrary();
  result = objc_getClass("PRPosterContentDiscreteColorsStyle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRPosterContentDiscreteColorsStyleClass_block_invoke_cold_1();
  getPRPosterContentDiscreteColorsStyleClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPRPosterContentGradientStyleClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterKitLibrary();
  result = objc_getClass("PRPosterContentGradientStyle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRPosterContentGradientStyleClass_block_invoke_cold_1();
  getPRPosterContentGradientStyleClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPRPosterContentVibrantMaterialStyleClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterKitLibrary();
  result = objc_getClass("PRPosterContentVibrantMaterialStyle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRPosterContentVibrantMaterialStyleClass_block_invoke_cold_1();
  getPRPosterContentVibrantMaterialStyleClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPRPosterContentVibrantMonochromeStyleClass_block_invoke(uint64_t a1)
{
  Class result;

  PosterKitLibrary();
  result = objc_getClass("PRPosterContentVibrantMonochromeStyle");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    __getPRPosterContentVibrantMonochromeStyleClass_block_invoke_cold_1();
  getPRPosterContentVibrantMonochromeStyleClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

Class __getPISegmentationLoaderClass_block_invoke(uint64_t a1)
{
  Class result;

  if (!PhotoImagingLibraryCore_frameworkLibrary)
  {
    PhotoImagingLibraryCore_frameworkLibrary = _sl_dlopen();
    if (!PhotoImagingLibraryCore_frameworkLibrary)
    {
      abort_report_np();
LABEL_6:
      __getPISegmentationLoaderClass_block_invoke_cold_1();
    }
  }
  result = objc_getClass("PISegmentationLoader");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (!*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
    goto LABEL_6;
  getPISegmentationLoaderClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1ACFCF150(_Unwind_Exception *a1, int a2)
{
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1ACFCF108);
  }
  _Unwind_Resume(a1);
}

id MBDIMFileTransferKeyForSizeIndex(void *a1, uint64_t a2)
{
  id v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  id v8;

  v3 = a1;
  v4 = v3;
  if (a2)
  {
    objc_msgSend(v3, "stringByAppendingString:", CFSTR("-"));
    v5 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(MEMORY[0x1E0CB37E8], "numberWithUnsignedInteger:", a2);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v6, "stringValue");
    v7 = (void *)objc_claimAutoreleasedReturnValue();
    objc_msgSend(v5, "stringByAppendingString:", v7);
    v8 = (id)objc_claimAutoreleasedReturnValue();

  }
  else
  {
    v8 = v3;
  }

  return v8;
}

void sub_1ACFD0A88(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_list va;

  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t decode_PCSUint32()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSUint32()
{
  return _asn1_encode();
}

uint64_t length_PCSUint32()
{
  return _asn1_length();
}

uint64_t free_PCSUint32()
{
  return _asn1_free_top();
}

uint64_t copy_PCSUint32()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSTypeValue()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSTypeValue()
{
  return _asn1_encode();
}

uint64_t length_PCSTypeValue()
{
  return _asn1_length();
}

uint64_t free_PCSTypeValue()
{
  return _asn1_free_top();
}

uint64_t copy_PCSTypeValue()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSKeyID()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSKeyID()
{
  return _asn1_encode();
}

uint64_t length_PCSKeyID()
{
  return _asn1_length();
}

uint64_t free_PCSKeyID()
{
  return _asn1_free_top();
}

uint64_t copy_PCSKeyID()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSAttributes()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSAttributes()
{
  return _asn1_encode();
}

uint64_t length_PCSAttributes()
{
  return _asn1_length();
}

uint64_t free_PCSAttributes()
{
  return _asn1_free_top();
}

uint64_t copy_PCSAttributes()
{
  return _asn1_copy_top();
}

uint64_t add_PCSAttributes(uint64_t a1)
{
  void *v2;
  uint64_t result;

  v2 = malloc_type_realloc(*(void **)(a1 + 8), 24 * (*(_DWORD *)a1 + 1), 0x10800404ACF7207uLL);
  if (!v2)
    return 12;
  *(_QWORD *)(a1 + 8) = v2;
  result = _asn1_copy_top();
  if (!(_DWORD)result)
    ++*(_DWORD *)a1;
  return result;
}

uint64_t remove_PCSAttributes(uint64_t a1, unsigned int a2)
{
  unsigned int v4;
  void *v5;
  uint64_t result;

  if (*(_DWORD *)a1 <= a2)
    return 1859794437;
  _asn1_free_top();
  v4 = *(_DWORD *)a1 - 1;
  *(_DWORD *)a1 = v4;
  if (v4 > a2)
  {
    memmove((void *)(*(_QWORD *)(a1 + 8) + 24 * a2), (const void *)(*(_QWORD *)(a1 + 8) + 24 * (a2 + 1)), 24 * (v4 - a2));
    v4 = *(_DWORD *)a1;
  }
  v5 = malloc_type_realloc(*(void **)(a1 + 8), 24 * v4, 0x10800404ACF7207uLL);
  if (!v5 && *(_DWORD *)a1)
    return 0;
  result = 0;
  *(_QWORD *)(a1 + 8) = v5;
  return result;
}

uint64_t decode_PCSSignature()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSSignature()
{
  return _asn1_encode();
}

uint64_t length_PCSSignature()
{
  return _asn1_length();
}

uint64_t free_PCSSignature()
{
  return _asn1_free_top();
}

uint64_t copy_PCSSignature()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSBuildAndTime()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSBuildAndTime()
{
  return _asn1_encode();
}

uint64_t length_PCSBuildAndTime()
{
  return _asn1_length();
}

uint64_t free_PCSBuildAndTime()
{
  return _asn1_free_top();
}

uint64_t copy_PCSBuildAndTime()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSMasterKeyIDs()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSMasterKeyIDs()
{
  return _asn1_encode();
}

uint64_t length_PCSMasterKeyIDs()
{
  return _asn1_length();
}

uint64_t free_PCSMasterKeyIDs()
{
  return _asn1_free_top();
}

uint64_t copy_PCSMasterKeyIDs()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSManateeCircleFingerPrint()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSManateeCircleFingerPrint()
{
  return _asn1_encode();
}

uint64_t length_PCSManateeCircleFingerPrint()
{
  return _asn1_length();
}

uint64_t free_PCSManateeCircleFingerPrint()
{
  return _asn1_free_top();
}

uint64_t copy_PCSManateeCircleFingerPrint()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSManateeFlags()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSManateeFlags()
{
  return _asn1_encode();
}

uint64_t length_PCSManateeFlags()
{
  return _asn1_length();
}

uint64_t free_PCSManateeFlags()
{
  return _asn1_free_top();
}

uint64_t copy_PCSManateeFlags()
{
  return _asn1_copy_top();
}

uint64_t decode_SignedAttributes()
{
  return _asn1_decode_top();
}

uint64_t encode_SignedAttributes()
{
  return _asn1_encode();
}

uint64_t length_SignedAttributes()
{
  return _asn1_length();
}

uint64_t free_SignedAttributes()
{
  return _asn1_free_top();
}

uint64_t copy_SignedAttributes()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSPublicKeyInfo()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSPublicKeyInfo()
{
  return _asn1_encode();
}

uint64_t length_PCSPublicKeyInfo()
{
  return _asn1_length();
}

uint64_t free_PCSPublicKeyInfo()
{
  return _asn1_free_top();
}

uint64_t copy_PCSPublicKeyInfo()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSPublicKeyInfos()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSPublicKeyInfos()
{
  return _asn1_encode();
}

uint64_t length_PCSPublicKeyInfos()
{
  return _asn1_length();
}

uint64_t free_PCSPublicKeyInfos()
{
  return _asn1_free_top();
}

uint64_t copy_PCSPublicKeyInfos()
{
  return _asn1_copy_top();
}

uint64_t add_PCSPublicKeyInfos(uint64_t a1)
{
  void *v2;
  uint64_t result;

  v2 = malloc_type_realloc(*(void **)(a1 + 8), 48 * (*(_DWORD *)a1 + 1), 0x10A0040698877B7uLL);
  if (!v2)
    return 12;
  *(_QWORD *)(a1 + 8) = v2;
  result = _asn1_copy_top();
  if (!(_DWORD)result)
    ++*(_DWORD *)a1;
  return result;
}

uint64_t remove_PCSPublicKeyInfos(uint64_t a1, unsigned int a2)
{
  unsigned int v4;
  void *v5;
  uint64_t result;

  if (*(_DWORD *)a1 <= a2)
    return 1859794437;
  _asn1_free_top();
  v4 = *(_DWORD *)a1 - 1;
  *(_DWORD *)a1 = v4;
  if (v4 > a2)
  {
    memmove((void *)(*(_QWORD *)(a1 + 8) + 48 * a2), (const void *)(*(_QWORD *)(a1 + 8) + 48 * (a2 + 1)), 48 * (v4 - a2));
    v4 = *(_DWORD *)a1;
  }
  v5 = malloc_type_realloc(*(void **)(a1 + 8), 48 * v4, 0x10A0040698877B7uLL);
  if (!v5 && *(_DWORD *)a1)
    return 0;
  result = 0;
  *(_QWORD *)(a1 + 8) = v5;
  return result;
}

uint64_t decode_PCSUserPublicKeys()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSUserPublicKeys()
{
  return _asn1_encode();
}

uint64_t length_PCSUserPublicKeys()
{
  return _asn1_length();
}

uint64_t free_PCSUserPublicKeys()
{
  return _asn1_free_top();
}

uint64_t copy_PCSUserPublicKeys()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSPrivateKey()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSPrivateKey()
{
  return _asn1_encode();
}

uint64_t length_PCSPrivateKey()
{
  return _asn1_length();
}

uint64_t free_PCSPrivateKey()
{
  return _asn1_free_top();
}

uint64_t copy_PCSPrivateKey()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSPrivateKeys()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSPrivateKeys()
{
  return _asn1_encode();
}

uint64_t length_PCSPrivateKeys()
{
  return _asn1_length();
}

uint64_t free_PCSPrivateKeys()
{
  return _asn1_free_top();
}

uint64_t copy_PCSPrivateKeys()
{
  return _asn1_copy_top();
}

uint64_t add_PCSPrivateKeys(uint64_t a1)
{
  void *v2;
  uint64_t result;

  v2 = malloc_type_realloc(*(void **)(a1 + 8), 24 * (*(_DWORD *)a1 + 1), 0x10A00404568A766uLL);
  if (!v2)
    return 12;
  *(_QWORD *)(a1 + 8) = v2;
  result = _asn1_copy_top();
  if (!(_DWORD)result)
    ++*(_DWORD *)a1;
  return result;
}

uint64_t remove_PCSPrivateKeys(uint64_t a1, unsigned int a2)
{
  unsigned int v4;
  void *v5;
  uint64_t result;

  if (*(_DWORD *)a1 <= a2)
    return 1859794437;
  _asn1_free_top();
  v4 = *(_DWORD *)a1 - 1;
  *(_DWORD *)a1 = v4;
  if (v4 > a2)
  {
    memmove((void *)(*(_QWORD *)(a1 + 8) + 24 * a2), (const void *)(*(_QWORD *)(a1 + 8) + 24 * (a2 + 1)), 24 * (v4 - a2));
    v4 = *(_DWORD *)a1;
  }
  v5 = malloc_type_realloc(*(void **)(a1 + 8), 24 * v4, 0x10A00404568A766uLL);
  if (!v5 && *(_DWORD *)a1)
    return 0;
  result = 0;
  *(_QWORD *)(a1 + 8) = v5;
  return result;
}

uint64_t decode_PCSCurrentKey()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSCurrentKey()
{
  return _asn1_encode();
}

uint64_t length_PCSCurrentKey()
{
  return _asn1_length();
}

uint64_t free_PCSCurrentKey()
{
  return _asn1_free_top();
}

uint64_t copy_PCSCurrentKey()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSKeySet()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSKeySet()
{
  return _asn1_encode();
}

uint64_t length_PCSKeySet()
{
  return _asn1_length();
}

uint64_t free_PCSKeySet()
{
  return _asn1_free_top();
}

uint64_t copy_PCSKeySet()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSTrustTBS()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSTrustTBS()
{
  return _asn1_encode();
}

uint64_t length_PCSTrustTBS()
{
  return _asn1_length();
}

uint64_t free_PCSTrustTBS()
{
  return _asn1_free_top();
}

uint64_t copy_PCSTrustTBS()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSTrust()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSTrust()
{
  return _asn1_encode();
}

uint64_t length_PCSTrust()
{
  return _asn1_length();
}

uint64_t free_PCSTrust()
{
  return _asn1_free_top();
}

uint64_t copy_PCSTrust()
{
  return _asn1_copy_top();
}

uint64_t decode_PCSBackupEscrow()
{
  return _asn1_decode_top();
}

uint64_t encode_PCSBackupEscrow()
{
  return _asn1_encode();
}

uint64_t length_PCSBackupEscrow()
{
  return _asn1_length();
}

uint64_t free_PCSBackupEscrow()
{
  return _asn1_free_top();
}

uint64_t copy_PCSBackupEscrow()
{
  return _asn1_copy_top();
}

id truncatedStringAtMaximumMetadataLength(void *a1)
{
  id v1;
  id v2;
  void *v3;

  v1 = a1;
  if ((unint64_t)objc_msgSend(v1, "length") > 0x3E8)
  {
    objc_msgSend(v1, "substringToIndex:", 1000);
    v2 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v2 = v1;
  }
  v3 = v2;

  return v3;
}

id truncatedAttributedStringAtMaximumMetadataLength(void *a1)
{
  id v1;
  id v2;
  void *v3;

  v1 = a1;
  if ((unint64_t)objc_msgSend(v1, "length") > 0x3E8)
  {
    objc_msgSend(v1, "attributedSubstringFromRange:", 0, 1000);
    v2 = (id)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v2 = v1;
  }
  v3 = v2;

  return v3;
}

id URLForKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      URLForKey_cold_1();
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v5, "length"))
  {
    URLFromStringIfHTTPFamily((uint64_t)v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

id stringForKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  void *v6;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      stringForKey_cold_1();
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      goto LABEL_6;
  }
  if (objc_msgSend(v5, "length"))
  {
    truncatedStringAtMaximumMetadataLength(v5);
    v6 = (void *)objc_claimAutoreleasedReturnValue();
  }
  else
  {
LABEL_6:
    v6 = 0;
  }

  return v6;
}

id numberForKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      numberForKey_cold_1();
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0)
    v6 = v5;
  else
    v6 = 0;

  return v6;
}

id URLFromStringIfHTTPFamily(uint64_t a1)
{
  void *v1;
  id v2;

  objc_msgSend(MEMORY[0x1E0C99E98], "URLWithString:", a1);
  v1 = (void *)objc_claimAutoreleasedReturnValue();
  if (objc_msgSend(v1, "_bd_lp_isHTTPFamilyURL"))
    v2 = v1;
  else
    v2 = 0;

  return v2;
}

id arrayOfDictionariesForKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  _BYTE v13[128];
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;

  v18 = *MEMORY[0x1E0C80C00];
  v3 = a1;
  v4 = a2;
  objc_msgSend(v3, "objectForKey:", v4);
  v5 = (void *)objc_claimAutoreleasedReturnValue();
  if (v5)
  {
    objc_opt_class();
    if ((objc_opt_isKindOfClass() & 1) == 0)
      arrayOfDictionariesForKey_cold_2();
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && objc_msgSend(v5, "count"))
  {
    v16 = 0u;
    v17 = 0u;
    v14 = 0u;
    v15 = 0u;
    v6 = v5;
    v7 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v13, 16);
    if (v7)
    {
      v8 = v7;
      v9 = *(_QWORD *)v15;
      while (2)
      {
        v10 = 0;
        do
        {
          if (*(_QWORD *)v15 != v9)
            objc_enumerationMutation(v6);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
            arrayOfDictionariesForKey_cold_1();
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) == 0)
          {

            goto LABEL_16;
          }
          ++v10;
        }
        while (v8 != v10);
        v8 = objc_msgSend(v6, "countByEnumeratingWithState:objects:count:", &v14, v13, 16);
        if (v8)
          continue;
        break;
      }
    }

    v11 = v6;
  }
  else
  {
LABEL_16:
    v11 = 0;
  }

  return v11;
}

void sub_1ACFD3A4C(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_list va;

  va_start(va, a13);
  _Block_object_dispose(va, 8);
  if (a2 == 1)
  {
    objc_begin_catch(a1);
    objc_end_catch();
    JUMPOUT(0x1ACFD392CLL);
  }
  _Unwind_Resume(a1);
}

id decodeURLForKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;
  id v6;

  v3 = a2;
  v4 = a1;
  objc_msgSend(v4, "_bd_lp_strictlyDecodeObjectOfClass:forKey:", objc_opt_class(), v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  if ((objc_msgSend(v5, "_bd_lp_isHTTPFamilyURL") & 1) != 0
    || objc_msgSend(v5, "_bd_lp_hasAllowedNonHTTPScheme"))
  {
    v6 = v5;
  }
  else
  {
    v6 = 0;
  }

  return v6;
}

id decodeStringForKey(void *a1, uint64_t a2)
{
  void *v2;
  void *v3;

  objc_msgSend(a1, "_bd_lp_strictlyDecodeNSStringForKey:", a2);
  v2 = (void *)objc_claimAutoreleasedReturnValue();
  truncatedStringAtMaximumMetadataLength(v2);
  v3 = (void *)objc_claimAutoreleasedReturnValue();

  return v3;
}

id allKnownSpecializationClasses()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void *v39;

  v0 = (void *)allKnownSpecializationClasses_allSpecializationClasses;
  if (!allKnownSpecializationClasses_allSpecializationClasses)
  {
    v39 = (void *)MEMORY[0x1E0C99E60];
    v38 = objc_opt_class();
    v37 = objc_opt_class();
    v36 = objc_opt_class();
    v35 = objc_opt_class();
    v34 = objc_opt_class();
    v33 = objc_opt_class();
    v32 = objc_opt_class();
    v31 = objc_opt_class();
    v30 = objc_opt_class();
    v29 = objc_opt_class();
    v28 = objc_opt_class();
    v27 = objc_opt_class();
    v26 = objc_opt_class();
    v25 = objc_opt_class();
    v24 = objc_opt_class();
    v23 = objc_opt_class();
    v22 = objc_opt_class();
    v21 = objc_opt_class();
    v20 = objc_opt_class();
    v19 = objc_opt_class();
    v18 = objc_opt_class();
    v17 = objc_opt_class();
    v16 = objc_opt_class();
    v15 = objc_opt_class();
    v14 = objc_opt_class();
    v1 = objc_opt_class();
    v2 = objc_opt_class();
    v3 = objc_opt_class();
    v4 = objc_opt_class();
    v5 = objc_opt_class();
    v6 = objc_opt_class();
    v7 = objc_opt_class();
    v8 = objc_opt_class();
    v9 = objc_opt_class();
    v10 = objc_opt_class();
    objc_msgSend(v39, "setWithObjects:", v38, v37, v36, v35, v34, v33, v32, v31, v30, v29, v28, v27, v26, v25, v24, v23, v22,
      v21,
      v20,
      v19,
      v18,
      v17,
      v16,
      v15,
      v14,
      v1,
      v2,
      v3,
      v4,
      v5,
      v6,
      v7,
      v8,
      v9,
      v10,
      objc_opt_class(),
      0);
    v11 = objc_claimAutoreleasedReturnValue();
    v12 = (void *)allKnownSpecializationClasses_allSpecializationClasses;
    allKnownSpecializationClasses_allSpecializationClasses = v11;

    v0 = (void *)allKnownSpecializationClasses_allSpecializationClasses;
  }
  return v0;
}

id decodeNumberForKey(void *a1, void *a2)
{
  id v3;
  id v4;
  void *v5;

  v3 = a2;
  v4 = a1;
  objc_msgSend(v4, "_bd_lp_strictlyDecodeObjectOfClass:forKey:", objc_opt_class(), v3);
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  return v5;
}

id decodeArrayOfStringsForKey(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  _BYTE v14[128];
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v19 = *MEMORY[0x1E0C80C00];
  v1 = a1;
  v2 = (void *)MEMORY[0x1E0C99E60];
  v3 = objc_opt_class();
  objc_msgSend(v2, "setWithObjects:", v3, objc_opt_class(), 0);
  v4 = (void *)objc_claimAutoreleasedReturnValue();
  objc_msgSend(v1, "_bd_lp_strictlyDecodeArrayOfObjectsOfClasses:forKey:", v4, CFSTR("offers"));
  v5 = (void *)objc_claimAutoreleasedReturnValue();

  v6 = (void *)objc_msgSend(objc_alloc(MEMORY[0x1E0C99DE8]), "initWithCapacity:", objc_msgSend(v5, "count"));
  v15 = 0u;
  v16 = 0u;
  v17 = 0u;
  v18 = 0u;
  v7 = v5;
  v8 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v14, 16);
  if (v8)
  {
    v9 = v8;
    v10 = *(_QWORD *)v16;
    do
    {
      v11 = 0;
      do
      {
        if (*(_QWORD *)v16 != v10)
          objc_enumerationMutation(v7);
        truncatedStringAtMaximumMetadataLength(*(void **)(*((_QWORD *)&v15 + 1) + 8 * v11));
        v12 = (void *)objc_claimAutoreleasedReturnValue();
        objc_msgSend(v6, "addObject:", v12);

        ++v11;
      }
      while (v9 != v11);
      v9 = objc_msgSend(v7, "countByEnumeratingWithState:objects:count:", &v15, v14, 16);
    }
    while (v9);
  }

  return v6;
}

void SharedWithYouLibrary()
{
  void *v0;

  if (!SharedWithYouLibraryCore_frameworkLibrary)
    SharedWithYouLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!SharedWithYouLibraryCore_frameworkLibrary)
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

void BD_IOSurfaceDisallowForever()
{
  NSObject *v0;
  void (*IOSurfaceDisallowForeverSymbolLoc)(void);
  NSObject *v2;
  __int128 v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  if (!IOSurfaceLibraryCore_frameworkLibrary)
  {
    v3 = xmmword_1E5CCCD38;
    v4 = 0;
    IOSurfaceLibraryCore_frameworkLibrary = _sl_dlopen();
  }
  if (IOSurfaceLibraryCore_frameworkLibrary && getIOSurfaceDisallowForeverSymbolLoc())
  {
    IOSurface_ForwardDeclarationsLogHandle();
    v0 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v0, OS_LOG_TYPE_INFO))
    {
      LOWORD(v3) = 0;
      _os_log_impl(&dword_1ACFC8000, v0, OS_LOG_TYPE_INFO, "Soft linking IOSurfaceDisallowForever", (uint8_t *)&v3, 2u);
    }

    IOSurfaceDisallowForeverSymbolLoc = (void (*)(void))getIOSurfaceDisallowForeverSymbolLoc();
    if (!IOSurfaceDisallowForeverSymbolLoc)
      +[PosterKitUtilities configurationIdentityWithProvider:identifier:posterUUID:version:supplement:].cold.1();
    IOSurfaceDisallowForeverSymbolLoc();
  }
  else
  {
    IOSurface_ForwardDeclarationsLogHandle();
    v2 = objc_claimAutoreleasedReturnValue();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
      BD_IOSurfaceDisallowForever_cold_1(v2);

  }
}

id IOSurface_ForwardDeclarationsLogHandle()
{
  if (IOSurface_ForwardDeclarationsLogHandle_onceToken != -1)
    dispatch_once(&IOSurface_ForwardDeclarationsLogHandle_onceToken, &__block_literal_global);
  return (id)IOSurface_ForwardDeclarationsLogHandle_log;
}

uint64_t getIOSurfaceDisallowForeverSymbolLoc()
{
  uint64_t v0;
  _QWORD v2[5];
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = *MEMORY[0x1E0C80C00];
  v3 = 0;
  v4 = &v3;
  v5 = 0x2020000000;
  v0 = getIOSurfaceDisallowForeverSymbolLoc_ptr;
  v6 = getIOSurfaceDisallowForeverSymbolLoc_ptr;
  if (!getIOSurfaceDisallowForeverSymbolLoc_ptr)
  {
    v2[0] = MEMORY[0x1E0C809B0];
    v2[1] = 3221225472;
    v2[2] = __getIOSurfaceDisallowForeverSymbolLoc_block_invoke;
    v2[3] = &unk_1E5CCC218;
    v2[4] = &v3;
    __getIOSurfaceDisallowForeverSymbolLoc_block_invoke((uint64_t)v2);
    v0 = v4[3];
  }
  _Block_object_dispose(&v3, 8);
  return v0;
}

void sub_1ACFE8478(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getIOSurfaceDisallowForeverSymbolLoc_block_invoke(uint64_t a1)
{
  void *v2;
  void *result;
  void *v4;

  if (IOSurfaceLibraryCore_frameworkLibrary)
  {
    v2 = (void *)IOSurfaceLibraryCore_frameworkLibrary;
  }
  else
  {
    IOSurfaceLibraryCore_frameworkLibrary = _sl_dlopen();
    v2 = (void *)IOSurfaceLibraryCore_frameworkLibrary;
    if (!IOSurfaceLibraryCore_frameworkLibrary)
    {
      v4 = (void *)abort_report_np();
      free(v4);
    }
  }
  result = dlsym(v2, "IOSurfaceDisallowForever");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  getIOSurfaceDisallowForeverSymbolLoc_ptr = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  return result;
}

void sub_1ACFE9874(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFE9B08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1ACFE9EE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getHWHandwritingItemClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getHWHandwritingItemClass_softClass;
  v7 = getHWHandwritingItemClass_softClass;
  if (!getHWHandwritingItemClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getHWHandwritingItemClass_block_invoke;
    v3[3] = &unk_1E5CCC218;
    v3[4] = &v4;
    __getHWHandwritingItemClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1ACFEA198(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id getHWEncodingClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getHWEncodingClass_softClass;
  v7 = getHWEncodingClass_softClass;
  if (!getHWEncodingClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getHWEncodingClass_block_invoke;
    v3[3] = &unk_1E5CCC218;
    v3[4] = &v4;
    __getHWEncodingClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1ACFEA2D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getDKDrawingStrokePointClass_block_invoke(uint64_t a1)
{
  DrawingKitLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("DKDrawingStrokePoint");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getDKDrawingStrokePointClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getDKDrawingStrokePointClass_block_invoke_cold_1();
    DrawingKitLibrary();
  }
}

void DrawingKitLibrary()
{
  void *v0;

  if (!DrawingKitLibraryCore_frameworkLibrary)
    DrawingKitLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!DrawingKitLibraryCore_frameworkLibrary)
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

Class __getDKDrawingStrokeClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  DrawingKitLibrary();
  result = objc_getClass("DKDrawingStroke");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getDKDrawingStrokeClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getDKDrawingStrokeClass_block_invoke_cold_1();
    return (Class)__getDKDrawingClass_block_invoke(v3);
  }
  return result;
}

Class __getDKDrawingClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  DrawingKitLibrary();
  result = objc_getClass("DKDrawing");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getDKDrawingClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getDKDrawingClass_block_invoke_cold_1();
    return (Class)__getHWHandwritingItemClass_block_invoke(v3);
  }
  return result;
}

Class __getHWHandwritingItemClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  DrawingKitLibrary();
  result = objc_getClass("HWHandwritingItem");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getHWHandwritingItemClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getHWHandwritingItemClass_block_invoke_cold_1();
    return (Class)__getHWEncodingClass_block_invoke(v3);
  }
  return result;
}

Class __getHWEncodingClass_block_invoke(uint64_t a1)
{
  Class result;
  uint64_t v3;

  DrawingKitLibrary();
  result = objc_getClass("HWEncoding");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getHWEncodingClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    v3 = __getHWEncodingClass_block_invoke_cold_1();
    return (Class)blastdoor_AVTAvatarRecordGetClass(v3);
  }
  return result;
}

id blastdoor_AVTAvatarRecordGetClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getAVTAvatarRecordClass_softClass;
  v7 = getAVTAvatarRecordClass_softClass;
  if (!getAVTAvatarRecordClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getAVTAvatarRecordClass_block_invoke;
    v3[3] = &unk_1E5CCC218;
    v3[4] = &v4;
    __getAVTAvatarRecordClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1ACFEA770(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id blastdoor_AVTAvatarRecordSerializerGetClass()
{
  void *v0;
  id v1;
  _QWORD v3[5];
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v4 = 0;
  v5 = &v4;
  v6 = 0x2050000000;
  v0 = (void *)getAVTAvatarRecordSerializerClass_softClass;
  v7 = getAVTAvatarRecordSerializerClass_softClass;
  if (!getAVTAvatarRecordSerializerClass_softClass)
  {
    v3[0] = MEMORY[0x1E0C809B0];
    v3[1] = 3221225472;
    v3[2] = __getAVTAvatarRecordSerializerClass_block_invoke;
    v3[3] = &unk_1E5CCC218;
    v3[4] = &v4;
    __getAVTAvatarRecordSerializerClass_block_invoke((uint64_t)v3);
    v0 = (void *)v5[3];
  }
  v1 = v0;
  _Block_object_dispose(&v4, 8);
  return v1;
}

void sub_1ACFEA854(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, ...)
{
  va_list va;

  va_start(va, a6);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __getAVTAvatarRecordClass_block_invoke(uint64_t a1)
{
  AvatarPersistenceLibrary();
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = objc_getClass("AVTAvatarRecord");
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getAVTAvatarRecordClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getAVTAvatarRecordClass_block_invoke_cold_1();
    AvatarPersistenceLibrary();
  }
}

void AvatarPersistenceLibrary()
{
  void *v0;

  if (!AvatarPersistenceLibraryCore_frameworkLibrary)
    AvatarPersistenceLibraryCore_frameworkLibrary = _sl_dlopen();
  if (!AvatarPersistenceLibraryCore_frameworkLibrary)
  {
    v0 = (void *)abort_report_np();
    free(v0);
  }
}

Class __getAVTAvatarRecordSerializerClass_block_invoke(uint64_t a1)
{
  Class result;

  AvatarPersistenceLibrary();
  result = objc_getClass("AVTAvatarRecordSerializer");
  *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24) = result;
  if (*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24))
  {
    getAVTAvatarRecordSerializerClass_softClass = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a1 + 32) + 8) + 24);
  }
  else
  {
    __getAVTAvatarRecordSerializerClass_block_invoke_cold_1();
    return (Class)register_for_dlsym_callbacks();
  }
  return result;
}

uint64_t register_for_dlsym_callbacks()
{
  uint64_t result;
  NSObject *v1;
  uint32_t bufsize;
  uint8_t buf[4];
  char *v4;
  uint64_t v5;

  v5 = *MEMORY[0x1E0C80C00];
  result = os_variant_allows_internal_security_policies();
  if ((_DWORD)result)
  {
    *(_QWORD *)log = os_log_create("com.apple.Messages.blastdoor", "Default");
    bufsize = 1024;
    _NSGetExecutablePath(executable_path, &bufsize);
    v1 = *(NSObject **)log;
    if (os_log_type_enabled((os_log_t)log, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315138;
      v4 = executable_path;
      _os_log_impl(&dword_1ACFC8000, v1, OS_LOG_TYPE_INFO, "registering for dyld callback notifications for telemetry to com.apple.dlsym_callback.blastdoor (path: %s)", buf, 0xCu);
    }
    return _dyld_register_dlsym_notifier();
  }
  return result;
}

void dlsym_callback_notify(uint64_t a1)
{
  NSObject *v1;
  NSObject *v3;
  uint8_t buf[4];
  const char *v5;
  __int16 v6;
  uint64_t v7;
  uint64_t v8;

  v8 = *MEMORY[0x1E0C80C00];
  v1 = *(NSObject **)log;
  if (*(_QWORD *)log)
  {
    if (os_log_type_enabled((os_log_t)log, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 136315394;
      v5 = "void dlsym_callback_notify(const char *)";
      v6 = 2080;
      v7 = a1;
      _os_log_impl(&dword_1ACFC8000, v1, OS_LOG_TYPE_INFO, "%s: recording dlsym %s to event com.apple.dlsym_callback.blastdoor", buf, 0x16u);
    }
    if ((analytics_send_event_lazy() & 1) == 0)
    {
      v3 = *(NSObject **)log;
      if (os_log_type_enabled((os_log_t)log, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 136315138;
        v5 = "void dlsym_callback_notify(const char *)";
        _os_log_impl(&dword_1ACFC8000, v3, OS_LOG_TYPE_INFO, "%s: analytics_send_event_lazy failed for event com.apple.dlsym_callback.blastdoor", buf, 0xCu);
      }
    }
  }
}

void *__dlsym_callback_notify_block_invoke(uint64_t a1)
{
  xpc_object_t empty;
  void *v3;
  NSObject *v4;

  empty = xpc_dictionary_create_empty();
  v3 = empty;
  if (empty)
  {
    xpc_dictionary_set_string(empty, "symbol", *(const char **)(a1 + 32));
    xpc_dictionary_set_string(v3, "executable_path", executable_path);
  }
  else
  {
    v4 = *(NSObject **)log;
    if (os_log_type_enabled((os_log_t)log, OS_LOG_TYPE_ERROR))
      __dlsym_callback_notify_block_invoke_cold_1(v4);
  }
  return v3;
}

BOOL _BlastDoorASCodableSecureCloudShareItemReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void *v20;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v17 = v10 >> 3;
      if ((v10 >> 3) == 3)
        break;
      if ((_DWORD)v17 == 2)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 24;
        goto LABEL_24;
      }
      if ((_DWORD)v17 == 1)
      {
        PBReaderReadString();
        v18 = objc_claimAutoreleasedReturnValue();
        v19 = 16;
LABEL_24:
        v20 = *(void **)(a1 + v19);
        *(_QWORD *)(a1 + v19) = v18;

        goto LABEL_26;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_26:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadData();
    v18 = objc_claimAutoreleasedReturnValue();
    v19 = 8;
    goto LABEL_24;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _BlastDoorASCodableSampleReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  unint64_t v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t result;
  uint64_t v27;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      v18 = v10 >> 3;
      if ((v10 >> 3) == 3)
      {
        *(_BYTE *)(a1 + 32) |= 1u;
        v24 = *v3;
        v25 = *(_QWORD *)(a2 + v24);
        if (v25 <= 0xFFFFFFFFFFFFFFF7 && v25 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v25);
          *(_QWORD *)(a2 + v24) = v25 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v23 = 0;
        }
        v27 = 8;
      }
      else
      {
        if ((_DWORD)v18 != 2)
        {
          if ((_DWORD)v18 == 1)
          {
            PBReaderReadData();
            v19 = objc_claimAutoreleasedReturnValue();
            v20 = *(void **)(a1 + 24);
            *(_QWORD *)(a1 + 24) = v19;

          }
          else
          {
            result = PBReaderSkipValueWithTag();
            if (!(_DWORD)result)
              return result;
          }
          continue;
        }
        *(_BYTE *)(a1 + 32) |= 2u;
        v21 = *v3;
        v22 = *(_QWORD *)(a2 + v21);
        if (v22 <= 0xFFFFFFFFFFFFFFF7 && v22 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v23 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v22);
          *(_QWORD *)(a2 + v21) = v22 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v23 = 0;
        }
        v27 = 16;
      }
      *(_QWORD *)(a1 + v27) = v23;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

BOOL _BlastDoorASCodableShareLocationsReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  int v15;
  uint64_t v17;
  uint64_t v18;
  void *v19;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    while (1)
    {
      if (*(_BYTE *)(a2 + *v5))
        return *(_BYTE *)(a2 + *v5) == 0;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        if (v12 == -1 || v12 >= *(_QWORD *)(a2 + *v4))
          break;
        v13 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        if (v9++ >= 9)
        {
          v10 = 0;
          v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v15 || (v10 & 7) == 4)
        return *(_BYTE *)(a2 + *v5) == 0;
      if ((v10 >> 3) == 3)
        break;
      if ((v10 >> 3) == 2)
      {
        PBReaderReadString();
        v17 = objc_claimAutoreleasedReturnValue();
        v18 = 8;
LABEL_22:
        v19 = *(void **)(a1 + v18);
        *(_QWORD *)(a1 + v18) = v17;

        goto LABEL_24;
      }
      if ((PBReaderSkipValueWithTag() & 1) == 0)
        return 0;
LABEL_24:
      if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
        return *(_BYTE *)(a2 + *v5) == 0;
    }
    PBReaderReadString();
    v17 = objc_claimAutoreleasedReturnValue();
    v18 = 16;
    goto LABEL_22;
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _BlastDoorASCodableActivitySnapshotReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  unint64_t v7;
  unint64_t v8;
  int *v9;
  unint64_t v10;
  char v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  BOOL v18;
  int v19;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _BlastDoorASCodableSample *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  unsigned int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  char v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void *v48;
  char v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char v54;
  char v55;
  unsigned int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  char v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  unsigned int v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t result;
  uint64_t v78;
  uint64_t v79;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = 0x1EECD0000uLL;
  v8 = 0x1EECD0000uLL;
  v9 = (int *)MEMORY[0x1E0D82BB8];
  v10 = 0x1EECD0000uLL;
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v11 = 0;
    v12 = 0;
    v13 = 0;
    while (1)
    {
      v14 = *v3;
      v15 = *(_QWORD *)(a2 + v14);
      v16 = v15 + 1;
      if (v15 == -1 || v16 > *(_QWORD *)(a2 + *v4))
        break;
      v17 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v15);
      *(_QWORD *)(a2 + v14) = v16;
      v13 |= (unint64_t)(v17 & 0x7F) << v11;
      if ((v17 & 0x80) == 0)
        goto LABEL_12;
      v11 += 7;
      v18 = v12++ >= 9;
      if (v18)
      {
        v13 = 0;
        v19 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v19 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v13 = 0;
LABEL_14:
    if (v19 || (v13 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    v21 = v13 >> 3;
    if ((int)(v13 >> 3) > 40)
    {
      if ((int)v21 <= 60)
      {
        if ((int)v21 > 50)
        {
          if ((_DWORD)v21 == 51)
          {
            *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x800u;
            v71 = *v3;
            v72 = *(_QWORD *)(a2 + v71);
            if (v72 <= 0xFFFFFFFFFFFFFFF7 && v72 + 8 <= *(_QWORD *)(a2 + *v4))
            {
              v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v72);
              *(_QWORD *)(a2 + v71) = v72 + 8;
            }
            else
            {
              *(_BYTE *)(a2 + *v5) = 1;
              v28 = 0;
            }
            v79 = 96;
          }
          else
          {
            if ((_DWORD)v21 != 60)
              goto LABEL_103;
            *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x200u;
            v33 = *v3;
            v34 = *(_QWORD *)(a2 + v33);
            if (v34 <= 0xFFFFFFFFFFFFFFF7 && v34 + 8 <= *(_QWORD *)(a2 + *v4))
            {
              v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v34);
              *(_QWORD *)(a2 + v33) = v34 + 8;
            }
            else
            {
              *(_BYTE *)(a2 + *v5) = 1;
              v28 = 0;
            }
            v79 = 80;
          }
        }
        else if ((_DWORD)v21 == 41)
        {
          *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 2u;
          v61 = *v3;
          v62 = *(_QWORD *)(a2 + v61);
          if (v62 <= 0xFFFFFFFFFFFFFFF7 && v62 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v62);
            *(_QWORD *)(a2 + v61) = v62 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v79 = 16;
        }
        else
        {
          if ((_DWORD)v21 != 50)
            goto LABEL_103;
          *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x2000u;
          v26 = *v3;
          v27 = *(_QWORD *)(a2 + v26);
          if (v27 <= 0xFFFFFFFFFFFFFFF7 && v27 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v27);
            *(_QWORD *)(a2 + v26) = v27 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v79 = 112;
        }
        goto LABEL_144;
      }
      if ((int)v21 > 70)
      {
        if ((_DWORD)v21 == 71)
        {
          *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x80u;
          v75 = *v3;
          v76 = *(_QWORD *)(a2 + v75);
          if (v76 <= 0xFFFFFFFFFFFFFFF7 && v76 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v76);
            *(_QWORD *)(a2 + v75) = v76 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v79 = 64;
LABEL_144:
          *(_QWORD *)(a1 + v79) = v28;
          goto LABEL_145;
        }
        if ((_DWORD)v21 != 72)
        {
LABEL_103:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          goto LABEL_145;
        }
        v37 = 0;
        v38 = 0;
        v39 = 0;
        *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 4u;
        while (1)
        {
          v40 = *v3;
          v41 = *(_QWORD *)(a2 + v40);
          v42 = v41 + 1;
          if (v41 == -1 || v42 > *(_QWORD *)(a2 + *v4))
            break;
          v43 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v41);
          *(_QWORD *)(a2 + v40) = v42;
          v39 |= (unint64_t)(v43 & 0x7F) << v37;
          if ((v43 & 0x80) == 0)
            goto LABEL_106;
          v37 += 7;
          v18 = v38++ >= 9;
          if (v18)
          {
            v39 = 0;
            goto LABEL_108;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_106:
        if (*(_BYTE *)(a2 + *v5))
          v39 = 0;
LABEL_108:
        v78 = 24;
      }
      else
      {
        if ((_DWORD)v21 != 61)
        {
          if ((_DWORD)v21 != 70)
            goto LABEL_103;
          *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x100u;
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v79 = 72;
          goto LABEL_144;
        }
        v65 = 0;
        v66 = 0;
        v39 = 0;
        *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x4000u;
        while (1)
        {
          v67 = *v3;
          v68 = *(_QWORD *)(a2 + v67);
          v69 = v68 + 1;
          if (v68 == -1 || v69 > *(_QWORD *)(a2 + *v4))
            break;
          v70 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v68);
          *(_QWORD *)(a2 + v67) = v69;
          v39 |= (unint64_t)(v70 & 0x7F) << v65;
          if ((v70 & 0x80) == 0)
            goto LABEL_118;
          v65 += 7;
          v18 = v66++ >= 9;
          if (v18)
          {
            v39 = 0;
            goto LABEL_120;
          }
        }
        *(_BYTE *)(a2 + *v5) = 1;
LABEL_118:
        if (*(_BYTE *)(a2 + *v5))
          v39 = 0;
LABEL_120:
        v78 = 120;
      }
LABEL_121:
      *(_QWORD *)(a1 + v78) = v39;
      goto LABEL_145;
    }
    if ((int)v21 > 20)
    {
      if ((int)v21 > 30)
      {
        if ((_DWORD)v21 == 31)
        {
          *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x10u;
          v73 = *v3;
          v74 = *(_QWORD *)(a2 + v73);
          if (v74 <= 0xFFFFFFFFFFFFFFF7 && v74 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v74);
            *(_QWORD *)(a2 + v73) = v74 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v79 = 40;
        }
        else
        {
          if ((_DWORD)v21 != 40)
            goto LABEL_103;
          *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 1u;
          v35 = *v3;
          v36 = *(_QWORD *)(a2 + v35);
          if (v36 <= 0xFFFFFFFFFFFFFFF7 && v36 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v36);
            *(_QWORD *)(a2 + v35) = v36 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v28 = 0;
          }
          v79 = 8;
        }
      }
      else if ((_DWORD)v21 == 21)
      {
        *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x40u;
        v63 = *v3;
        v64 = *(_QWORD *)(a2 + v63);
        if (v64 <= 0xFFFFFFFFFFFFFFF7 && v64 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v64);
          *(_QWORD *)(a2 + v63) = v64 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v28 = 0;
        }
        v79 = 56;
      }
      else
      {
        if ((_DWORD)v21 != 30)
          goto LABEL_103;
        *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 8u;
        v29 = *v3;
        v30 = *(_QWORD *)(a2 + v29);
        if (v30 <= 0xFFFFFFFFFFFFFFF7 && v30 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v30);
          *(_QWORD *)(a2 + v29) = v30 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v28 = 0;
        }
        v79 = 32;
      }
      goto LABEL_144;
    }
    switch((int)v21)
    {
      case 1:
        v22 = v7;
        v23 = v10;
        v24 = v8;
        v25 = objc_alloc_init(_BlastDoorASCodableSample);
        objc_storeStrong((id *)(a1 + 128), v25);
        if (PBReaderPlaceMark() && (_BlastDoorASCodableSampleReadFrom((uint64_t)v25, a2) & 1) != 0)
        {
          PBReaderRecallMark();

          v8 = v24;
          v10 = v23;
          v7 = v22;
LABEL_145:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }

        return 0;
      case 2:
        PBReaderReadData();
        v46 = objc_claimAutoreleasedReturnValue();
        v47 = *(int *)(v10 + 3740);
        v48 = *(void **)(a1 + v47);
        *(_QWORD *)(a1 + v47) = v46;

        goto LABEL_145;
      case 3:
        v49 = 0;
        v50 = 0;
        v39 = 0;
        *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x400u;
        while (2)
        {
          v51 = *v3;
          v52 = *(_QWORD *)(a2 + v51);
          v53 = v52 + 1;
          if (v52 == -1 || v53 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v54 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v52);
            *(_QWORD *)(a2 + v51) = v53;
            v39 |= (unint64_t)(v54 & 0x7F) << v49;
            if (v54 < 0)
            {
              v49 += 7;
              v18 = v50++ >= 9;
              if (v18)
              {
                v39 = 0;
                goto LABEL_112;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v39 = 0;
LABEL_112:
        v78 = 88;
        goto LABEL_121;
      case 4:
        v55 = 0;
        v56 = 0;
        v39 = 0;
        *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x1000u;
        while (2)
        {
          v57 = *v3;
          v58 = *(_QWORD *)(a2 + v57);
          v59 = v58 + 1;
          if (v58 == -1 || v59 > *(_QWORD *)(a2 + *v4))
          {
            *(_BYTE *)(a2 + *v5) = 1;
          }
          else
          {
            v60 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v58);
            *(_QWORD *)(a2 + v57) = v59;
            v39 |= (unint64_t)(v60 & 0x7F) << v55;
            if (v60 < 0)
            {
              v55 += 7;
              v18 = v56++ >= 9;
              if (v18)
              {
                v39 = 0;
                goto LABEL_116;
              }
              continue;
            }
          }
          break;
        }
        if (*(_BYTE *)(a2 + *v5))
          v39 = 0;
LABEL_116:
        v78 = 104;
        goto LABEL_121;
      default:
        if ((_DWORD)v21 != 20)
          goto LABEL_103;
        *(_WORD *)(a1 + *(int *)(v7 + 3744)) |= 0x20u;
        v44 = *v3;
        v45 = *(_QWORD *)(a2 + v44);
        if (v45 <= 0xFFFFFFFFFFFFFFF7 && v45 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v28 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v45);
          *(_QWORD *)(a2 + v44) = v45 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v28 = 0;
        }
        v79 = *(int *)(v8 + 3756);
        goto LABEL_144;
    }
  }
}

uint64_t _BlastDoorASCodableActivityDataPreviewReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  int v16;
  _BlastDoorASCodableActivitySnapshot *v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) >= *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
    return *(_BYTE *)(a2 + *v5) == 0;
  v7 = (int *)MEMORY[0x1E0D82BB8];
  while (2)
  {
    if (*(_BYTE *)(a2 + *v5))
      return *(_BYTE *)(a2 + *v5) == 0;
    v8 = 0;
    v9 = 0;
    v10 = 0;
    while (1)
    {
      v11 = *v3;
      v12 = *(_QWORD *)(a2 + v11);
      v13 = v12 + 1;
      if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
        break;
      v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
      *(_QWORD *)(a2 + v11) = v13;
      v10 |= (unint64_t)(v14 & 0x7F) << v8;
      if ((v14 & 0x80) == 0)
        goto LABEL_12;
      v8 += 7;
      if (v9++ >= 9)
      {
        v10 = 0;
        v16 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
    v16 = *(unsigned __int8 *)(a2 + *v5);
    if (*(_BYTE *)(a2 + *v5))
      v10 = 0;
LABEL_14:
    if (v16 || (v10 & 7) == 4)
      return *(_BYTE *)(a2 + *v5) == 0;
    switch((v10 >> 3))
    {
      case 1u:
        v18 = objc_alloc_init(_BlastDoorASCodableActivitySnapshot);
        objc_storeStrong((id *)(a1 + 24), v18);
        if (PBReaderPlaceMark()
          && (_BlastDoorASCodableActivitySnapshotReadFrom((uint64_t)v18, a2) & 1) != 0)
        {
          goto LABEL_29;
        }
        goto LABEL_37;
      case 2u:
        v18 = objc_alloc_init(_BlastDoorASCodableWorkout);
        objc_msgSend((id)a1, "addWorkouts:", v18);
        if (!PBReaderPlaceMark() || (_BlastDoorASCodableWorkoutReadFrom((uint64_t)v18, a2) & 1) == 0)
          goto LABEL_37;
        goto LABEL_29;
      case 3u:
        v18 = objc_alloc_init(_BlastDoorASCodableAchievement);
        objc_msgSend((id)a1, "addAchievements:", v18);
        if (PBReaderPlaceMark() && (_BlastDoorASCodableAchievementReadFrom((uint64_t)v18, a2) & 1) != 0)
        {
LABEL_29:
          PBReaderRecallMark();

LABEL_35:
          if (*(_QWORD *)(a2 + *v3) >= *(_QWORD *)(a2 + *v4))
            return *(_BYTE *)(a2 + *v5) == 0;
          continue;
        }
LABEL_37:

        return 0;
      case 4u:
        *(_BYTE *)(a1 + 40) |= 1u;
        v20 = *v3;
        v21 = *(_QWORD *)(a2 + v20);
        if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(_QWORD *)(a2 + *v4))
        {
          v22 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v21);
          *(_QWORD *)(a2 + v20) = v21 + 8;
        }
        else
        {
          *(_BYTE *)(a2 + *v5) = 1;
          v22 = 0;
        }
        *(_QWORD *)(a1 + 8) = v22;
        goto LABEL_35;
      default:
        result = PBReaderSkipValueWithTag();
        if (!(_DWORD)result)
          return result;
        goto LABEL_35;
    }
  }
}

uint64_t _BlastDoorASCodableAchievementReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  int *v7;
  char v8;
  unsigned int v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  BOOL v15;
  int v16;
  _BlastDoorASCodableSample *v18;
  uint64_t result;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  char v31;
  char v32;
  unsigned int v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v8 = 0;
      v9 = 0;
      v10 = 0;
      while (1)
      {
        v11 = *v3;
        v12 = *(_QWORD *)(a2 + v11);
        v13 = v12 + 1;
        if (v12 == -1 || v13 > *(_QWORD *)(a2 + *v4))
          break;
        v14 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v12);
        *(_QWORD *)(a2 + v11) = v13;
        v10 |= (unint64_t)(v14 & 0x7F) << v8;
        if ((v14 & 0x80) == 0)
          goto LABEL_12;
        v8 += 7;
        v15 = v9++ >= 9;
        if (v15)
        {
          v10 = 0;
          v16 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v16 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v10 = 0;
LABEL_14:
      if (v16 || (v10 & 7) == 4)
        break;
      switch((v10 >> 3))
      {
        case 1u:
          v18 = objc_alloc_init(_BlastDoorASCodableSample);
          objc_storeStrong((id *)(a1 + 48), v18);
          if (PBReaderPlaceMark() && (_BlastDoorASCodableSampleReadFrom((uint64_t)v18, a2) & 1) != 0)
          {
            PBReaderRecallMark();

            continue;
          }

          return 0;
        case 3u:
          *(_BYTE *)(a1 + 64) |= 1u;
          v20 = *v3;
          v21 = *(_QWORD *)(a2 + v20);
          if (v21 <= 0xFFFFFFFFFFFFFFF7 && v21 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v22 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v21);
            *(_QWORD *)(a2 + v20) = v21 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v22 = 0;
          }
          v42 = 8;
          goto LABEL_60;
        case 4u:
          *(_BYTE *)(a1 + 64) |= 2u;
          v23 = *v3;
          v24 = *(_QWORD *)(a2 + v23);
          if (v24 <= 0xFFFFFFFFFFFFFFF7 && v24 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v22 = *(_QWORD *)(*(_QWORD *)(a2 + *v7) + v24);
            *(_QWORD *)(a2 + v23) = v24 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v22 = 0;
          }
          v42 = 16;
LABEL_60:
          *(_QWORD *)(a1 + v42) = v22;
          continue;
        case 5u:
          v25 = 0;
          v26 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 64) |= 4u;
          while (2)
          {
            v28 = *v3;
            v29 = *(_QWORD *)(a2 + v28);
            v30 = v29 + 1;
            if (v29 == -1 || v30 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v31 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v29);
              *(_QWORD *)(a2 + v28) = v30;
              v27 |= (unint64_t)(v31 & 0x7F) << v25;
              if (v31 < 0)
              {
                v25 += 7;
                v15 = v26++ >= 9;
                if (v15)
                {
                  v27 = 0;
                  goto LABEL_50;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v27 = 0;
LABEL_50:
          v41 = 24;
          goto LABEL_55;
        case 7u:
          v32 = 0;
          v33 = 0;
          v27 = 0;
          *(_BYTE *)(a1 + 64) |= 8u;
          break;
        case 8u:
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 40;
          goto LABEL_46;
        case 9u:
          PBReaderReadString();
          v38 = objc_claimAutoreleasedReturnValue();
          v39 = 56;
LABEL_46:
          v40 = *(void **)(a1 + v39);
          *(_QWORD *)(a1 + v39) = v38;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v34 = *v3;
        v35 = *(_QWORD *)(a2 + v34);
        v36 = v35 + 1;
        if (v35 == -1 || v36 > *(_QWORD *)(a2 + *v4))
          break;
        v37 = *(_BYTE *)(*(_QWORD *)(a2 + *v7) + v35);
        *(_QWORD *)(a2 + v34) = v36;
        v27 |= (unint64_t)(v37 & 0x7F) << v32;
        if ((v37 & 0x80) == 0)
          goto LABEL_52;
        v32 += 7;
        v15 = v33++ >= 9;
        if (v15)
        {
          v27 = 0;
          goto LABEL_54;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_52:
      if (*(_BYTE *)(a2 + *v5))
        v27 = 0;
LABEL_54:
      v41 = 32;
LABEL_55:
      *(_QWORD *)(a1 + v41) = v27;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t _BlastDoorASCodableWorkoutReadFrom(uint64_t a1, uint64_t a2)
{
  int *v3;
  int *v4;
  int *v5;
  _UNKNOWN **v7;
  unint64_t v8;
  int *v9;
  char v10;
  unsigned int v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  BOOL v17;
  int v18;
  unint64_t v20;
  _UNKNOWN **v21;
  id v22;
  char v23;
  unsigned int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  uint64_t result;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  char v40;
  unsigned int v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  char v56;
  char v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  char v64;
  unsigned int v65;
  uint64_t v66;
  uint64_t v67;
  unint64_t v68;
  char v69;
  void *v70;
  uint64_t v71;
  BOOL v72;
  uint64_t v73;
  uint64_t v74;

  v3 = (int *)MEMORY[0x1E0D82BF0];
  v4 = (int *)MEMORY[0x1E0D82BD8];
  v5 = (int *)MEMORY[0x1E0D82BC8];
  if (*(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BF0]) < *(_QWORD *)(a2 + (int)*MEMORY[0x1E0D82BD8]))
  {
    v7 = &off_1E5C9C000;
    v8 = 0x1EECD0000uLL;
    v9 = (int *)MEMORY[0x1E0D82BB8];
    do
    {
      if (*(_BYTE *)(a2 + *v5))
        break;
      v10 = 0;
      v11 = 0;
      v12 = 0;
      while (1)
      {
        v13 = *v3;
        v14 = *(_QWORD *)(a2 + v13);
        v15 = v14 + 1;
        if (v14 == -1 || v15 > *(_QWORD *)(a2 + *v4))
          break;
        v16 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v14);
        *(_QWORD *)(a2 + v13) = v15;
        v12 |= (unint64_t)(v16 & 0x7F) << v10;
        if ((v16 & 0x80) == 0)
          goto LABEL_12;
        v10 += 7;
        v17 = v11++ >= 9;
        if (v17)
        {
          v12 = 0;
          v18 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_12:
      v18 = *(unsigned __int8 *)(a2 + *v5);
      if (*(_BYTE *)(a2 + *v5))
        v12 = 0;
LABEL_14:
      if (v18 || (v12 & 7) == 4)
        break;
      switch((v12 >> 3))
      {
        case 1u:
          v20 = v8;
          v21 = v7;
          v22 = objc_alloc_init((Class)v7[326]);
          objc_storeStrong((id *)(a1 + 96), v22);
          if (PBReaderPlaceMark() && (_BlastDoorASCodableSampleReadFrom((uint64_t)v22, a2) & 1) != 0)
          {
            PBReaderRecallMark();

            v7 = v21;
            v8 = v20;
            continue;
          }

          return 0;
        case 2u:
          v23 = 0;
          v24 = 0;
          v25 = 0;
          *(_WORD *)(a1 + *(int *)(v8 + 3864)) |= 0x80u;
          while (1)
          {
            v26 = *v3;
            v27 = *(_QWORD *)(a2 + v26);
            v28 = v27 + 1;
            if (v27 == -1 || v28 > *(_QWORD *)(a2 + *v4))
              break;
            v29 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v27);
            *(_QWORD *)(a2 + v26) = v28;
            v25 |= (unint64_t)(v29 & 0x7F) << v23;
            if ((v29 & 0x80) == 0)
              goto LABEL_81;
            v23 += 7;
            v17 = v24++ >= 9;
            if (v17)
            {
              v25 = 0;
              goto LABEL_83;
            }
          }
          *(_BYTE *)(a2 + *v5) = 1;
LABEL_81:
          if (*(_BYTE *)(a2 + *v5))
            v25 = 0;
LABEL_83:
          v71 = 64;
          goto LABEL_101;
        case 5u:
          *(_WORD *)(a1 + *(int *)(v8 + 3864)) |= 2u;
          v31 = *v3;
          v32 = *(_QWORD *)(a2 + v31);
          if (v32 <= 0xFFFFFFFFFFFFFFF7 && v32 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v32);
            *(_QWORD *)(a2 + v31) = v32 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v33 = 0;
          }
          v74 = 16;
          goto LABEL_112;
        case 6u:
          *(_WORD *)(a1 + *(int *)(v8 + 3864)) |= 0x40u;
          v34 = *v3;
          v35 = *(_QWORD *)(a2 + v34);
          if (v35 <= 0xFFFFFFFFFFFFFFF7 && v35 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v35);
            *(_QWORD *)(a2 + v34) = v35 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v33 = 0;
          }
          v74 = 56;
          goto LABEL_112;
        case 7u:
          *(_WORD *)(a1 + *(int *)(v8 + 3864)) |= 0x10u;
          v36 = *v3;
          v37 = *(_QWORD *)(a2 + v36);
          if (v37 <= 0xFFFFFFFFFFFFFFF7 && v37 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v37);
            *(_QWORD *)(a2 + v36) = v37 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v33 = 0;
          }
          v74 = 40;
          goto LABEL_112;
        case 8u:
          *(_WORD *)(a1 + *(int *)(v8 + 3864)) |= 0x20u;
          v38 = *v3;
          v39 = *(_QWORD *)(a2 + v38);
          if (v39 <= 0xFFFFFFFFFFFFFFF7 && v39 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v39);
            *(_QWORD *)(a2 + v38) = v39 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v33 = 0;
          }
          v74 = 48;
          goto LABEL_112;
        case 9u:
          v40 = 0;
          v41 = 0;
          v25 = 0;
          *(_WORD *)(a1 + *(int *)(v8 + 3864)) |= 8u;
          while (2)
          {
            v42 = *v3;
            v43 = *(_QWORD *)(a2 + v42);
            v44 = v43 + 1;
            if (v43 == -1 || v44 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v45 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v43);
              *(_QWORD *)(a2 + v42) = v44;
              v25 |= (unint64_t)(v45 & 0x7F) << v40;
              if (v45 < 0)
              {
                v40 += 7;
                v17 = v41++ >= 9;
                if (v17)
                {
                  v25 = 0;
                  goto LABEL_87;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v25 = 0;
LABEL_87:
          v71 = 32;
          goto LABEL_101;
        case 0xAu:
          *(_WORD *)(a1 + *(int *)(v8 + 3864)) |= 4u;
          v46 = *v3;
          v47 = *(_QWORD *)(a2 + v46);
          if (v47 <= 0xFFFFFFFFFFFFFFF7 && v47 + 8 <= *(_QWORD *)(a2 + *v4))
          {
            v33 = *(_QWORD *)(*(_QWORD *)(a2 + *v9) + v47);
            *(_QWORD *)(a2 + v46) = v47 + 8;
          }
          else
          {
            *(_BYTE *)(a2 + *v5) = 1;
            v33 = 0;
          }
          v74 = 24;
LABEL_112:
          *(_QWORD *)(a1 + v74) = v33;
          continue;
        case 0xBu:
          PBReaderReadString();
          v48 = objc_claimAutoreleasedReturnValue();
          v49 = 72;
          goto LABEL_79;
        case 0xCu:
          v50 = 0;
          v51 = 0;
          v52 = 0;
          *(_WORD *)(a1 + *(int *)(v8 + 3864)) |= 0x200u;
          while (2)
          {
            v53 = *v3;
            v54 = *(_QWORD *)(a2 + v53);
            v55 = v54 + 1;
            if (v54 == -1 || v55 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v56 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v54);
              *(_QWORD *)(a2 + v53) = v55;
              v52 |= (unint64_t)(v56 & 0x7F) << v50;
              if (v56 < 0)
              {
                v50 += 7;
                v17 = v51++ >= 9;
                if (v17)
                {
                  v52 = 0;
                  goto LABEL_91;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v52 = 0;
LABEL_91:
          v72 = v52 != 0;
          v73 = 121;
          goto LABEL_96;
        case 0xDu:
          v57 = 0;
          v58 = 0;
          v59 = 0;
          *(_WORD *)(a1 + *(int *)(v8 + 3864)) |= 0x100u;
          while (2)
          {
            v60 = *v3;
            v61 = *(_QWORD *)(a2 + v60);
            v62 = v61 + 1;
            if (v61 == -1 || v62 > *(_QWORD *)(a2 + *v4))
            {
              *(_BYTE *)(a2 + *v5) = 1;
            }
            else
            {
              v63 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v61);
              *(_QWORD *)(a2 + v60) = v62;
              v59 |= (unint64_t)(v63 & 0x7F) << v57;
              if (v63 < 0)
              {
                v57 += 7;
                v17 = v58++ >= 9;
                if (v17)
                {
                  v59 = 0;
                  goto LABEL_95;
                }
                continue;
              }
            }
            break;
          }
          if (*(_BYTE *)(a2 + *v5))
            v59 = 0;
LABEL_95:
          v72 = v59 != 0;
          v73 = 120;
LABEL_96:
          *(_BYTE *)(a1 + v73) = v72;
          continue;
        case 0xEu:
          PBReaderReadString();
          v48 = objc_claimAutoreleasedReturnValue();
          v49 = 80;
          goto LABEL_79;
        case 0xFu:
          PBReaderReadString();
          v48 = objc_claimAutoreleasedReturnValue();
          v49 = 88;
          goto LABEL_79;
        case 0x10u:
          v64 = 0;
          v65 = 0;
          v25 = 0;
          *(_WORD *)(a1 + *(int *)(v8 + 3864)) |= 1u;
          break;
        case 0x11u:
          PBReaderReadString();
          v48 = objc_claimAutoreleasedReturnValue();
          v49 = 104;
          goto LABEL_79;
        case 0x12u:
          PBReaderReadString();
          v48 = objc_claimAutoreleasedReturnValue();
          v49 = 112;
LABEL_79:
          v70 = *(void **)(a1 + v49);
          *(_QWORD *)(a1 + v49) = v48;

          continue;
        default:
          result = PBReaderSkipValueWithTag();
          if (!(_DWORD)result)
            return result;
          continue;
      }
      while (1)
      {
        v66 = *v3;
        v67 = *(_QWORD *)(a2 + v66);
        v68 = v67 + 1;
        if (v67 == -1 || v68 > *(_QWORD *)(a2 + *v4))
          break;
        v69 = *(_BYTE *)(*(_QWORD *)(a2 + *v9) + v67);
        *(_QWORD *)(a2 + v66) = v68;
        v25 |= (unint64_t)(v69 & 0x7F) << v64;
        if ((v69 & 0x80) == 0)
          goto LABEL_98;
        v64 += 7;
        v17 = v65++ >= 9;
        if (v17)
        {
          v25 = 0;
          goto LABEL_100;
        }
      }
      *(_BYTE *)(a2 + *v5) = 1;
LABEL_98:
      if (*(_BYTE *)(a2 + *v5))
        v25 = 0;
LABEL_100:
      v71 = 8;
LABEL_101:
      *(_QWORD *)(a1 + v71) = v25;
    }
    while (*(_QWORD *)(a2 + *v3) < *(_QWORD *)(a2 + *v4));
  }
  return *(_BYTE *)(a2 + *v5) == 0;
}

uint64_t MediaMetadata.Context.requiresLargeImageInfo.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1ACFF3800()
{
  return 1;
}

uint64_t sub_1ACFF3808()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1ACFF3848()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1ACFF386C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

unint64_t sub_1ACFF38A8()
{
  return 0xD000000000000016;
}

uint64_t sub_1ACFF38C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ACFFFF2C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1ACFF38EC()
{
  return 0;
}

void sub_1ACFF38F8(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1ACFF3904()
{
  sub_1ACFF3A3C();
  return sub_1AD63C560();
}

uint64_t sub_1ACFF392C()
{
  sub_1ACFF3A3C();
  return sub_1AD63C56C();
}

uint64_t MediaMetadata.Context.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA9B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACFF3A3C();
  sub_1AD63C53C();
  sub_1AD63C02C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1ACFF3A3C()
{
  unint64_t result;

  result = qword_1ED2E2370;
  if (!qword_1ED2E2370)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD647D8C, &type metadata for MediaMetadata.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2370);
  }
  return result;
}

uint64_t MediaMetadata.Context.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA828);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACFF3A3C();
  sub_1AD63C524();
  if (!v2)
  {
    v9 = sub_1AD63BF18();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ACFF3B88@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return MediaMetadata.Context.init(from:)(a1, a2);
}

uint64_t sub_1ACFF3B9C(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA9B8);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78]();
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACFF3A3C();
  sub_1AD63C53C();
  sub_1AD63C02C();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t MediaMetadata.LargeImageContextualInfo.pixelWidth.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MediaMetadata.LargeImageContextualInfo.pixelWidth.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MediaMetadata.LargeImageContextualInfo.pixelWidth.modify())()
{
  return nullsub_1;
}

uint64_t MediaMetadata.LargeImageContextualInfo.pixelHeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t MediaMetadata.LargeImageContextualInfo.pixelHeight.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*MediaMetadata.LargeImageContextualInfo.pixelHeight.modify())()
{
  return nullsub_1;
}

uint64_t MediaMetadata.LargeImageContextualInfo.bufferByteSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t MediaMetadata.LargeImageContextualInfo.bufferByteSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*MediaMetadata.LargeImageContextualInfo.bufferByteSize.modify())()
{
  return nullsub_1;
}

BlastDoor::MediaMetadata::LargeImageContextualInfo __swiftcall MediaMetadata.LargeImageContextualInfo.init(pixelWidth:pixelHeight:bufferByteSize:)(Swift::Int pixelWidth, Swift::Int pixelHeight, Swift::Int bufferByteSize)
{
  Swift::Int *v3;
  BlastDoor::MediaMetadata::LargeImageContextualInfo result;

  *v3 = pixelWidth;
  v3[1] = pixelHeight;
  v3[2] = bufferByteSize;
  result.bufferByteSize = bufferByteSize;
  result.pixelHeight = pixelHeight;
  result.pixelWidth = pixelWidth;
  return result;
}

Swift::String __swiftcall MediaMetadata.LargeImageContextualInfo.description()()
{
  uint64_t v0;
  void *v1;
  Swift::String result;

  sub_1AD63BD38();
  sub_1AD63B810();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  v0 = 0;
  v1 = (void *)0xE000000000000000;
  result._object = v1;
  result._countAndFlagsBits = v0;
  return result;
}

uint64_t sub_1ACFF3E5C()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6965486C65786970;
  if (*v0 != 1)
    v1 = 0x7942726566667562;
  if (*v0)
    return v1;
  else
    return 0x6469576C65786970;
}

uint64_t sub_1ACFF3ED0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1ACFFFFB0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACFF3EF4(_BYTE *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1ACFF3F00()
{
  sub_1ACFF409C();
  return sub_1AD63C560();
}

uint64_t sub_1ACFF3F28()
{
  sub_1ACFF409C();
  return sub_1AD63C56C();
}

uint64_t MediaMetadata.LargeImageContextualInfo.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[2];
  char v11;
  char v12;
  char v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2410);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78]();
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v10[0] = *(_QWORD *)(v1 + 16);
  v10[1] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACFF409C();
  sub_1AD63C53C();
  v13 = 0;
  sub_1AD63C050();
  if (!v2)
  {
    v12 = 1;
    sub_1AD63C050();
    v11 = 2;
    sub_1AD63C050();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1ACFF409C()
{
  unint64_t result;

  result = qword_1ED2E2338;
  if (!qword_1ED2E2338)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD647D3C, &type metadata for MediaMetadata.LargeImageContextualInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2338);
  }
  return result;
}

uint64_t MediaMetadata.LargeImageContextualInfo.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2400);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78]();
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACFF409C();
  sub_1AD63C524();
  if (!v2)
  {
    v16 = 0;
    v9 = sub_1AD63BF3C();
    v15 = 1;
    v11 = sub_1AD63BF3C();
    v14 = 2;
    v12 = sub_1AD63BF3C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
    a2[2] = v12;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1ACFF4254@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return MediaMetadata.LargeImageContextualInfo.init(from:)(a1, a2);
}

uint64_t sub_1ACFF4268(_QWORD *a1)
{
  return MediaMetadata.LargeImageContextualInfo.encode(to:)(a1);
}

__n128 MediaMetadata.largeImageContextualInfo.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = v1[1].n128_u64[0];
  v3 = v1[1].n128_u8[8];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u64[0] = v2;
  a1[1].n128_u8[8] = v3;
  return result;
}

__n128 MediaMetadata.largeImageContextualInfo.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v2;
  unsigned __int8 v3;
  __n128 result;

  v2 = a1[1].n128_u64[0];
  v3 = a1[1].n128_u8[8];
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u8[8] = v3;
  return result;
}

uint64_t (*MediaMetadata.largeImageContextualInfo.modify())()
{
  return nullsub_1;
}

uint64_t MediaMetadata.imageDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MediaMetadata();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t type metadata accessor for MediaMetadata()
{
  uint64_t result;

  result = qword_1ED2E30C0;
  if (!qword_1ED2E30C0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t MediaMetadata.imageDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MediaMetadata();
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 20), (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*MediaMetadata.imageDate.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.timezoneOffset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 24));
}

uint64_t MediaMetadata.timezoneOffset.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 24);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.timezoneOffset.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.subsecTimeOriginal.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 28));
}

uint64_t MediaMetadata.subsecTimeOriginal.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 28);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.subsecTimeOriginal.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.rawOrientation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 32));
}

uint64_t MediaMetadata.rawOrientation.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 32);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.rawOrientation.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.rawPixelWidth.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 36));
}

uint64_t MediaMetadata.rawPixelWidth.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 36);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.rawPixelWidth.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.rawPixelHeight.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 40));
}

uint64_t MediaMetadata.rawPixelHeight.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 40);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.rawPixelHeight.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.lensModel.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.lensModel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 44));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.lensModel.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.lensMake.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.lensMake.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 48));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.lensMake.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.profileName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.profileName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 52));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.profileName.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.processingFlags.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 56));
}

uint64_t MediaMetadata.processingFlags.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 56);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.processingFlags.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.isCustomRendered.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 60));
}

uint64_t MediaMetadata.isCustomRendered.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 60)) = a1;
  return result;
}

uint64_t (*MediaMetadata.isCustomRendered.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.apertureValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 64));
}

uint64_t MediaMetadata.apertureValue.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 64);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.apertureValue.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.exposureBiasValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 68));
}

uint64_t MediaMetadata.exposureBiasValue.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 68);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.exposureBiasValue.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.flash.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 72));
}

uint64_t MediaMetadata.flash.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 72);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.flash.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.focalLength.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 76));
}

uint64_t MediaMetadata.focalLength.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 76);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.focalLength.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.focalLenIn35mmFilm.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 80));
}

uint64_t MediaMetadata.focalLenIn35mmFilm.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 80);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.focalLenIn35mmFilm.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.isoRatingValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 84));
}

uint64_t MediaMetadata.isoRatingValue.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 84);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.isoRatingValue.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.meteringMode.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 88));
}

uint64_t MediaMetadata.meteringMode.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 88);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.meteringMode.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.shutterSpeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 92));
}

uint64_t MediaMetadata.shutterSpeed.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 92);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.shutterSpeed.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.model.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 96));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.model.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 96));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.model.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.make.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 100));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.make.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 100));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.make.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.whiteBalance.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 104));
}

uint64_t MediaMetadata.whiteBalance.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 104);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.whiteBalance.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.lightSource.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 108));
}

uint64_t MediaMetadata.lightSource.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 108);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.lightSource.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.ciffWhiteBalanceIndex.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 112));
}

uint64_t MediaMetadata.ciffWhiteBalanceIndex.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 112);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.ciffWhiteBalanceIndex.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.videoDynamicRange.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 116));
}

uint64_t MediaMetadata.videoDynamicRange.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 116);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.videoDynamicRange.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.hdrGain.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 120));
}

uint64_t MediaMetadata.hdrGain.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 120);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.hdrGain.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.hasHDRGainMap.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 124));
}

uint64_t MediaMetadata.hasHDRGainMap.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 124)) = a1;
  return result;
}

uint64_t (*MediaMetadata.hasHDRGainMap.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.videoContainsCinematicData.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 128));
}

uint64_t MediaMetadata.videoContainsCinematicData.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 128)) = a1;
  return result;
}

uint64_t (*MediaMetadata.videoContainsCinematicData.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.videoComplementMediaGroupId.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 132));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.videoComplementMediaGroupId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 132));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.videoComplementMediaGroupId.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.gifDelayTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 136));
}

uint64_t MediaMetadata.gifDelayTime.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 136);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.gifDelayTime.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.variationIdentifier.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 140));
}

uint64_t MediaMetadata.variationIdentifier.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 140);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.variationIdentifier.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.videoComplementDurationValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 144));
}

uint64_t MediaMetadata.videoComplementDurationValue.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 144);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.videoComplementDurationValue.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.videoComplementDurationTimescale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 148));
}

uint64_t MediaMetadata.videoComplementDurationTimescale.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 148);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.videoComplementDurationTimescale.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.videoComplementImageDisplayValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 152));
}

uint64_t MediaMetadata.videoComplementImageDisplayValue.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 152);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.videoComplementImageDisplayValue.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.videoComplementImageDisplayTimescale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 156));
}

uint64_t MediaMetadata.videoComplementImageDisplayTimescale.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 156);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.videoComplementImageDisplayTimescale.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.avDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 160));
}

uint64_t MediaMetadata.avDuration.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 160);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.avDuration.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.avFPS.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 164));
}

uint64_t MediaMetadata.avFPS.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 164);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.avFPS.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.codecFourCharCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 168));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.codecFourCharCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 168));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.codecFourCharCode.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.captureMode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 172));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.captureMode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 172));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.captureMode.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.isVideoMontage.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 176));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.isVideoMontage.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 176));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.isVideoMontage.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.isProRes.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 180));
}

uint64_t MediaMetadata.isProRes.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 180)) = a1;
  return result;
}

uint64_t (*MediaMetadata.isProRes.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.videoDurationValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 184));
}

uint64_t MediaMetadata.videoDurationValue.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 184);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.videoDurationValue.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.videoDurationTimescale.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 188));
}

uint64_t MediaMetadata.videoDurationTimescale.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 188);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.videoDurationTimescale.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.originatingAssetIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 192));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.originatingAssetIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 192));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.originatingAssetIdentifier.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.longitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 196));
}

uint64_t MediaMetadata.longitude.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 196);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.longitude.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.latitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 200));
}

uint64_t MediaMetadata.latitude.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 200);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.latitude.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.altitude.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 204));
}

uint64_t MediaMetadata.altitude.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 204);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.altitude.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.gpsSpeed.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 208));
}

uint64_t MediaMetadata.gpsSpeed.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 208);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.gpsSpeed.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.gpsSpeedRef.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 212));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.gpsSpeedRef.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 212));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.gpsSpeedRef.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.gpsTimestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MediaMetadata();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 216), a1, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t MediaMetadata.gpsTimestamp.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MediaMetadata();
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 216), (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*MediaMetadata.gpsTimestamp.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.gpsHPositioningError.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 220));
}

uint64_t MediaMetadata.gpsHPositioningError.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 220);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.gpsHPositioningError.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.imageDirection.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 224));
}

uint64_t MediaMetadata.imageDirection.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 224);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.imageDirection.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.imageDirectionRef.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 228));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.imageDirectionRef.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 228));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.imageDirectionRef.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.uniformTypeIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 232));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.uniformTypeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 232));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.uniformTypeIdentifier.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.fileSize.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 236));
}

uint64_t MediaMetadata.fileSize.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 236);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.fileSize.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.originalFileName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 240));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.originalFileName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 240));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.originalFileName.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.isPhotoBooth.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 244));
}

uint64_t MediaMetadata.isPhotoBooth.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 244)) = a1;
  return result;
}

uint64_t (*MediaMetadata.isPhotoBooth.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.burstUuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MediaMetadata();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 248), a1, &qword_1ED2E7140);
}

uint64_t sub_1ACFF64C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t MediaMetadata.burstUuid.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for MediaMetadata();
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 248), &qword_1ED2E7140);
}

uint64_t sub_1ACFF6540(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(a2, a1, v5);
  return a2;
}

uint64_t (*MediaMetadata.burstUuid.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.userComment.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 252));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.userComment.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 252));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.userComment.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.isFrontFacingCamera.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 256));
}

uint64_t MediaMetadata.isFrontFacingCamera.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 256)) = a1;
  return result;
}

uint64_t (*MediaMetadata.isFrontFacingCamera.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.spatialOverCaptureIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 260));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.spatialOverCaptureIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 260));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.spatialOverCaptureIdentifier.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.semanticStyleSceneBias.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 264));
}

uint64_t MediaMetadata.semanticStyleSceneBias.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 264);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.semanticStyleSceneBias.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.semanticStyleWarmthBias.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 268));
}

uint64_t MediaMetadata.semanticStyleWarmthBias.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 268);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.semanticStyleWarmthBias.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.semanticStyleRenderingVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 272));
}

uint64_t MediaMetadata.semanticStyleRenderingVersion.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 272);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.semanticStyleRenderingVersion.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.semanticStylePreset.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 276));
}

uint64_t MediaMetadata.semanticStylePreset.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 276);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.semanticStylePreset.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.hasSmartStyle.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 280));
}

uint64_t MediaMetadata.hasSmartStyle.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 280)) = a1;
  return result;
}

uint64_t (*MediaMetadata.hasSmartStyle.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.smartStyleToneBias.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 284));
}

uint64_t MediaMetadata.smartStyleToneBias.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 284);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.smartStyleToneBias.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.smartStyleColorBias.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 288));
}

uint64_t MediaMetadata.smartStyleColorBias.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 288);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.smartStyleColorBias.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.smartStyleIntensity.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 292));
}

uint64_t MediaMetadata.smartStyleIntensity.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 292);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.smartStyleIntensity.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.smartStyleCast.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 296));
}

uint64_t MediaMetadata.smartStyleCast.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 296);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.smartStyleCast.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.smartStyleRenderingVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 300));
}

uint64_t MediaMetadata.smartStyleRenderingVersion.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 300);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.smartStyleRenderingVersion.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.smartStyleIsReversible.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 304));
}

uint64_t MediaMetadata.smartStyleIsReversible.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 304)) = a1;
  return result;
}

uint64_t (*MediaMetadata.smartStyleIsReversible.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.smartStyleVideoCastValue.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 308));
}

uint64_t MediaMetadata.smartStyleVideoCastValue.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 308);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.smartStyleVideoCastValue.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.isHDR.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 312));
}

uint64_t MediaMetadata.isHDR.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 312)) = a1;
  return result;
}

uint64_t (*MediaMetadata.isHDR.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.hasISOGainMap.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 316));
}

uint64_t MediaMetadata.hasISOGainMap.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 316)) = a1;
  return result;
}

uint64_t (*MediaMetadata.hasISOGainMap.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.isAnimatedImage.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 320));
}

uint64_t MediaMetadata.isAnimatedImage.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 320)) = a1;
  return result;
}

uint64_t (*MediaMetadata.isAnimatedImage.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.stillImageCaptureFlags.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 324));
}

uint64_t MediaMetadata.stillImageCaptureFlags.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 324);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.stillImageCaptureFlags.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

BlastDoor::MediaMetadata::AppleMakerNoteCamera __swiftcall MediaMetadata.AppleMakerNoteCamera.init(defaultingRawValue:defaultValue:)(Swift::Int_optional defaultingRawValue, BlastDoor::MediaMetadata::AppleMakerNoteCamera defaultValue)
{
  _BYTE *v2;
  char v3;
  unint64_t value;

  v3 = *(_BYTE *)defaultValue;
  if (defaultingRawValue.is_nil)
    value = *(unsigned __int8 *)defaultValue;
  else
    value = defaultingRawValue.value;
  if (value < 7)
    v3 = value;
  *v2 = v3;
  return defaultingRawValue.value;
}

uint64_t MediaMetadata.AppleMakerNoteCamera.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BlastDoor::MediaMetadata::AppleMakerNoteCamera_optional __swiftcall MediaMetadata.AppleMakerNoteCamera.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 7;
  if ((unint64_t)rawValue < 7)
    v2 = rawValue;
  *v1 = v2;
  return (BlastDoor::MediaMetadata::AppleMakerNoteCamera_optional)rawValue;
}

BOOL sub_1ACFF7048(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1ACFF705C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1ACFF70A0()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1ACFF70C8()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

BlastDoor::MediaMetadata::AppleMakerNoteCamera_optional sub_1ACFF7108(Swift::Int *a1)
{
  return MediaMetadata.AppleMakerNoteCamera.init(rawValue:)(*a1);
}

void sub_1ACFF7110(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1;
}

uint64_t sub_1ACFF711C()
{
  sub_1AD0023D0();
  return sub_1AD63B930();
}

uint64_t sub_1ACFF7178()
{
  sub_1AD0023D0();
  return sub_1AD63B8D0();
}

uint64_t MediaMetadata.cameraUsedForCapture.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 328));
  return result;
}

uint64_t MediaMetadata.cameraUsedForCapture.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 328)) = v2;
  return result;
}

uint64_t (*MediaMetadata.cameraUsedForCapture.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.exifFlashFired.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 332));
}

uint64_t MediaMetadata.exifFlashFired.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 332)) = a1;
  return result;
}

uint64_t (*MediaMetadata.exifFlashFired.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.exifAuxFlashCompensation.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 336));
}

uint64_t MediaMetadata.exifAuxFlashCompensation.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 336);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.exifAuxFlashCompensation.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.captureModeTimelapse.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 340));
}

uint64_t MediaMetadata.captureModeTimelapse.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 340)) = a1;
  return result;
}

uint64_t (*MediaMetadata.captureModeTimelapse.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.hasSpatialAudio.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 344));
}

uint64_t MediaMetadata.hasSpatialAudio.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 344)) = a1;
  return result;
}

uint64_t (*MediaMetadata.hasSpatialAudio.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.isAlchemist.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 348));
}

uint64_t MediaMetadata.isAlchemist.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 348)) = a1;
  return result;
}

uint64_t (*MediaMetadata.isAlchemist.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.isThreeImageStereoHEIC.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 352));
}

uint64_t MediaMetadata.isThreeImageStereoHEIC.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for MediaMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 352)) = a1;
  return result;
}

uint64_t (*MediaMetadata.isThreeImageStereoHEIC.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.generativeAIImageType.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 356));
}

uint64_t MediaMetadata.generativeAIImageType.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for MediaMetadata();
  v6 = v2 + *(int *)(result + 356);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*MediaMetadata.generativeAIImageType.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

uint64_t MediaMetadata.IPTCCredit.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for MediaMetadata() + 360));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MediaMetadata.IPTCCredit.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for MediaMetadata() + 360));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*MediaMetadata.IPTCCredit.modify())()
{
  type metadata accessor for MediaMetadata();
  return nullsub_1;
}

__n128 MediaMetadata.init(largeImageContextualInfo:)@<Q0>(__n128 *a1@<X0>, __n128 *a2@<X8>)
{
  unint64_t v3;
  unsigned __int8 v4;
  int *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t, uint64_t);
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  _QWORD *v14;
  _QWORD *v15;
  _QWORD *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  _QWORD *v26;
  _QWORD *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  _QWORD *v42;
  _QWORD *v43;
  _QWORD *v44;
  char *v45;
  char *v46;
  _QWORD *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  _QWORD *v52;
  char *v53;
  char *v54;
  _QWORD *v55;
  _QWORD *v56;
  char *v57;
  _QWORD *v58;
  char *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  _QWORD *v76;
  __n128 result;
  __n128 v78;

  v78 = *a1;
  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = (int *)type metadata accessor for MediaMetadata();
  v6 = (char *)a2 + v5[5];
  v7 = sub_1AD63B03C();
  v8 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v9 = (char *)a2 + v5[6];
  *(_QWORD *)v9 = 0;
  v9[8] = 1;
  v10 = (char *)a2 + v5[7];
  *(_QWORD *)v10 = 0;
  v10[8] = 1;
  v11 = (char *)a2 + v5[8];
  *(_QWORD *)v11 = 0;
  v11[8] = 1;
  v12 = (char *)a2 + v5[9];
  *(_QWORD *)v12 = 0;
  v12[8] = 1;
  v13 = (char *)a2 + v5[10];
  *(_QWORD *)v13 = 0;
  v13[8] = 1;
  v14 = (unint64_t *)((char *)a2->n128_u64 + v5[11]);
  *v14 = 0;
  v14[1] = 0;
  v15 = (unint64_t *)((char *)a2->n128_u64 + v5[12]);
  *v15 = 0;
  v15[1] = 0;
  v16 = (unint64_t *)((char *)a2->n128_u64 + v5[13]);
  *v16 = 0;
  v16[1] = 0;
  v17 = (char *)a2 + v5[14];
  *(_QWORD *)v17 = 0;
  v17[8] = 1;
  a2->n128_u8[v5[15]] = 2;
  v18 = (char *)a2 + v5[16];
  *(_QWORD *)v18 = 0;
  v18[8] = 1;
  v19 = (char *)a2 + v5[17];
  *(_QWORD *)v19 = 0;
  v19[8] = 1;
  v20 = (char *)a2 + v5[18];
  *(_QWORD *)v20 = 0;
  v20[8] = 1;
  v21 = (char *)a2 + v5[19];
  *(_QWORD *)v21 = 0;
  v21[8] = 1;
  v22 = (char *)a2 + v5[20];
  *(_QWORD *)v22 = 0;
  v22[8] = 1;
  v23 = (char *)a2 + v5[21];
  *(_QWORD *)v23 = 0;
  v23[8] = 1;
  v24 = (char *)a2 + v5[22];
  *(_QWORD *)v24 = 0;
  v24[8] = 1;
  v25 = (char *)a2 + v5[23];
  *(_QWORD *)v25 = 0;
  v25[8] = 1;
  v26 = (unint64_t *)((char *)a2->n128_u64 + v5[24]);
  *v26 = 0;
  v26[1] = 0;
  v27 = (unint64_t *)((char *)a2->n128_u64 + v5[25]);
  *v27 = 0;
  v27[1] = 0;
  v28 = (char *)a2 + v5[26];
  *(_QWORD *)v28 = 0;
  v28[8] = 1;
  v29 = (char *)a2 + v5[27];
  *(_QWORD *)v29 = 0;
  v29[8] = 1;
  v30 = (char *)a2 + v5[28];
  *(_QWORD *)v30 = 0;
  v30[8] = 1;
  v31 = (char *)a2 + v5[29];
  *(_QWORD *)v31 = 0;
  v31[8] = 1;
  v32 = (char *)a2 + v5[30];
  *(_QWORD *)v32 = 0;
  v32[8] = 1;
  a2->n128_u8[v5[31]] = 2;
  a2->n128_u8[v5[32]] = 2;
  v33 = (unint64_t *)((char *)a2->n128_u64 + v5[33]);
  *v33 = 0;
  v33[1] = 0;
  v34 = (char *)a2 + v5[34];
  *(_QWORD *)v34 = 0;
  v34[8] = 1;
  v35 = (char *)a2 + v5[35];
  *(_QWORD *)v35 = 0;
  v35[8] = 1;
  v36 = (char *)a2 + v5[36];
  *(_QWORD *)v36 = 0;
  v36[8] = 1;
  v37 = (char *)a2 + v5[37];
  *(_QWORD *)v37 = 0;
  v37[8] = 1;
  v38 = (char *)a2 + v5[38];
  *(_QWORD *)v38 = 0;
  v38[8] = 1;
  v39 = (char *)a2 + v5[39];
  *(_QWORD *)v39 = 0;
  v39[8] = 1;
  v40 = (char *)a2 + v5[40];
  *(_QWORD *)v40 = 0;
  v40[8] = 1;
  v41 = (char *)a2 + v5[41];
  *(_QWORD *)v41 = 0;
  v41[8] = 1;
  v42 = (unint64_t *)((char *)a2->n128_u64 + v5[42]);
  *v42 = 0;
  v42[1] = 0;
  v43 = (unint64_t *)((char *)a2->n128_u64 + v5[43]);
  *v43 = 0;
  v43[1] = 0;
  v44 = (unint64_t *)((char *)a2->n128_u64 + v5[44]);
  *v44 = 0;
  v44[1] = 0;
  a2->n128_u8[v5[45]] = 2;
  v45 = (char *)a2 + v5[46];
  *(_QWORD *)v45 = 0;
  v45[8] = 1;
  v46 = (char *)a2 + v5[47];
  *(_QWORD *)v46 = 0;
  v46[8] = 1;
  v47 = (unint64_t *)((char *)a2->n128_u64 + v5[48]);
  *v47 = 0;
  v47[1] = 0;
  v48 = (char *)a2 + v5[49];
  *(_QWORD *)v48 = 0;
  v48[8] = 1;
  v49 = (char *)a2 + v5[50];
  *(_QWORD *)v49 = 0;
  v49[8] = 1;
  v50 = (char *)a2 + v5[51];
  *(_QWORD *)v50 = 0;
  v50[8] = 1;
  v51 = (char *)a2 + v5[52];
  *(_QWORD *)v51 = 0;
  v51[8] = 1;
  v52 = (unint64_t *)((char *)a2->n128_u64 + v5[53]);
  *v52 = 0;
  v52[1] = 0;
  v8((char *)a2 + v5[54], 1, 1, v7);
  v53 = (char *)a2 + v5[55];
  *(_QWORD *)v53 = 0;
  v53[8] = 1;
  v54 = (char *)a2 + v5[56];
  *(_QWORD *)v54 = 0;
  v54[8] = 1;
  v55 = (unint64_t *)((char *)a2->n128_u64 + v5[57]);
  *v55 = 0;
  v55[1] = 0;
  v56 = (unint64_t *)((char *)a2->n128_u64 + v5[58]);
  *v56 = 0;
  v56[1] = 0;
  v57 = (char *)a2 + v5[59];
  *(_QWORD *)v57 = 0;
  v57[8] = 1;
  v58 = (unint64_t *)((char *)a2->n128_u64 + v5[60]);
  *v58 = 0;
  v58[1] = 0;
  a2->n128_u8[v5[61]] = 2;
  v59 = (char *)a2 + v5[62];
  v60 = sub_1AD63B084();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 56))(v59, 1, 1, v60);
  v61 = (unint64_t *)((char *)a2->n128_u64 + v5[63]);
  *v61 = 0;
  v61[1] = 0;
  a2->n128_u8[v5[64]] = 2;
  v62 = (unint64_t *)((char *)a2->n128_u64 + v5[65]);
  *v62 = 0;
  v62[1] = 0;
  v63 = (char *)a2 + v5[66];
  *(_QWORD *)v63 = 0;
  v63[8] = 1;
  v64 = (char *)a2 + v5[67];
  *(_QWORD *)v64 = 0;
  v64[8] = 1;
  v65 = (char *)a2 + v5[68];
  *(_QWORD *)v65 = 0;
  v65[8] = 1;
  v66 = (char *)a2 + v5[69];
  *(_QWORD *)v66 = 0;
  v66[8] = 1;
  a2->n128_u8[v5[70]] = 2;
  v67 = (char *)a2 + v5[71];
  *(_QWORD *)v67 = 0;
  v67[8] = 1;
  v68 = (char *)a2 + v5[72];
  *(_QWORD *)v68 = 0;
  v68[8] = 1;
  v69 = (char *)a2 + v5[73];
  *(_QWORD *)v69 = 0;
  v69[8] = 1;
  v70 = (char *)a2 + v5[74];
  *(_QWORD *)v70 = 0;
  v70[8] = 1;
  v71 = (char *)a2 + v5[75];
  *(_QWORD *)v71 = 0;
  v71[8] = 1;
  a2->n128_u8[v5[76]] = 2;
  v72 = (char *)a2 + v5[77];
  *(_QWORD *)v72 = 0;
  v72[8] = 1;
  a2->n128_u8[v5[78]] = 2;
  a2->n128_u8[v5[79]] = 2;
  a2->n128_u8[v5[80]] = 2;
  v73 = (char *)a2 + v5[81];
  *(_QWORD *)v73 = 0;
  v73[8] = 1;
  a2->n128_u8[v5[82]] = 7;
  a2->n128_u8[v5[83]] = 2;
  v74 = (char *)a2 + v5[84];
  *(_QWORD *)v74 = 0;
  v74[8] = 1;
  a2->n128_u8[v5[85]] = 2;
  a2->n128_u8[v5[86]] = 2;
  a2->n128_u8[v5[87]] = 2;
  a2->n128_u8[v5[88]] = 2;
  v75 = (char *)a2 + v5[89];
  *(_QWORD *)v75 = 0;
  v75[8] = 1;
  v76 = (unint64_t *)((char *)a2->n128_u64 + v5[90]);
  *v76 = 0;
  v76[1] = 0;
  result = v78;
  *a2 = v78;
  a2[1].n128_u64[0] = v3;
  a2[1].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1ACFF7BA8(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1ACFF7BE4 + 4 * word_1AD646EE0[a1]))(0xD000000000000018, 0x80000001AD69E350);
}

uint64_t sub_1ACFF7BE4()
{
  return 0x7461446567616D69;
}

uint64_t sub_1ACFF8018()
{
  return 0x656475746974616CLL;
}

uint64_t sub_1ACFF8030()
{
  return 0x6564757469746C61;
}

uint64_t sub_1ACFF804C()
{
  return 0x6465657053737067;
}

uint64_t sub_1ACFF8074()
{
  return 0x73656D6954737067;
}

uint64_t sub_1ACFF8094()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_1ACFF80A4()
{
  return 0x7269446567616D69;
}

uint64_t sub_1ACFF80CC()
{
  uint64_t v0;

  return v0 - 2;
}

uint64_t sub_1ACFF80DC()
{
  uint64_t v0;

  return v0 + 2;
}

uint64_t sub_1ACFF80EC()
{
  return 0x657A6953656C6966;
}

uint64_t sub_1ACFF8104()
{
  uint64_t v0;

  return v0 - 3;
}

uint64_t sub_1ACFF8114()
{
  return 0x426F746F68507369;
}

uint64_t sub_1ACFF8134()
{
  return 0x6975557473727562;
}

uint64_t sub_1ACFF8154()
{
  return 0x6D6D6F4372657375;
}

unint64_t sub_1ACFF8174()
{
  return 0xD000000000000013;
}

uint64_t sub_1ACFF8180()
{
  uint64_t v0;

  return v0 + 9;
}

uint64_t sub_1ACFF8190()
{
  uint64_t v0;

  return v0 + 3;
}

uint64_t sub_1ACFF81A0()
{
  uint64_t v0;

  return v0 + 4;
}

uint64_t sub_1ACFF81B0()
{
  uint64_t v0;

  return v0 + 10;
}

unint64_t sub_1ACFF81C0()
{
  return 0xD000000000000013;
}

uint64_t sub_1ACFF81CC()
{
  return 0x7472616D53736168;
}

uint64_t sub_1ACFF81F0()
{
  uint64_t v0;

  return v0 - 1;
}

unint64_t sub_1ACFF8200()
{
  return 0xD000000000000013;
}

uint64_t sub_1ACFF8228()
{
  return 0x7974537472616D73;
}

uint64_t sub_1ACFF824C()
{
  uint64_t v0;

  return v0 + 7;
}

uint64_t sub_1ACFF825C()
{
  uint64_t v0;

  return v0 + 3;
}

uint64_t sub_1ACFF826C()
{
  uint64_t v0;

  return v0 + 5;
}

uint64_t sub_1ACFF827C()
{
  return 0x5244487369;
}

uint64_t sub_1ACFF82B4()
{
  return 0x74616D696E417369;
}

uint64_t sub_1ACFF82D8()
{
  uint64_t v0;

  return v0 + 3;
}

uint64_t sub_1ACFF82E8()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_1ACFF82F8()
{
  return 0x73616C4666697865;
}

uint64_t sub_1ACFF831C()
{
  uint64_t v0;

  return v0 + 5;
}

uint64_t sub_1ACFF832C()
{
  uint64_t v0;

  return v0 + 1;
}

uint64_t sub_1ACFF833C()
{
  return 0x6974617053736168;
}

uint64_t sub_1ACFF8360()
{
  return 0x6D6568636C417369;
}

uint64_t sub_1ACFF8384()
{
  uint64_t v0;

  return v0 + 3;
}

void sub_1ACFF8394()
{
  JUMPOUT(0x1ACFF83A0);
}

uint64_t sub_1ACFF83AC()
{
  return 0x6465724343545049;
}

uint64_t sub_1ACFF83CC()
{
  unsigned __int8 *v0;

  return sub_1ACFF7BA8(*v0);
}

uint64_t sub_1ACFF83D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD00014C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1ACFF83F8(_BYTE *a1@<X8>)
{
  *a1 = 87;
}

uint64_t sub_1ACFF8404()
{
  sub_1ACFF969C();
  return sub_1AD63C560();
}

uint64_t sub_1ACFF842C()
{
  sub_1ACFF969C();
  return sub_1AD63C56C();
}

uint64_t MediaMetadata.encode(to:)(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v2;
  __int128 *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  char v15;
  char v16;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2408);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1ACFF969C();
  sub_1AD63C53C();
  v9 = *((_QWORD *)v3 + 2);
  v10 = *((_BYTE *)v3 + 24);
  v13 = *v3;
  v14 = v9;
  v15 = v10;
  v16 = 0;
  sub_1ACFF96E0();
  sub_1AD63C014();
  if (!v2)
  {
    v11 = type metadata accessor for MediaMetadata();
    LOBYTE(v13) = 1;
    sub_1AD63B03C();
    sub_1ACFF9724(&qword_1ED2E20E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1AD63C014();
    LOBYTE(v13) = 2;
    sub_1AD63BFFC();
    LOBYTE(v13) = 3;
    sub_1AD63BFF0();
    LOBYTE(v13) = 4;
    sub_1AD63BFFC();
    LOBYTE(v13) = 5;
    sub_1AD63C008();
    LOBYTE(v13) = 6;
    sub_1AD63C008();
    LOBYTE(v13) = 7;
    sub_1AD63BFD8();
    LOBYTE(v13) = 8;
    sub_1AD63BFD8();
    LOBYTE(v13) = 9;
    sub_1AD63BFD8();
    LOBYTE(v13) = 10;
    sub_1AD63C008();
    LOBYTE(v13) = 11;
    sub_1AD63BFE4();
    LOBYTE(v13) = 12;
    sub_1AD63BFF0();
    LOBYTE(v13) = 13;
    sub_1AD63BFFC();
    LOBYTE(v13) = 14;
    sub_1AD63BFFC();
    LOBYTE(v13) = 15;
    sub_1AD63BFF0();
    LOBYTE(v13) = 16;
    sub_1AD63BFF0();
    LOBYTE(v13) = 17;
    sub_1AD63BFFC();
    LOBYTE(v13) = 18;
    sub_1AD63BFFC();
    LOBYTE(v13) = 19;
    sub_1AD63BFF0();
    LOBYTE(v13) = 20;
    sub_1AD63BFD8();
    LOBYTE(v13) = 21;
    sub_1AD63BFD8();
    LOBYTE(v13) = 22;
    sub_1AD63BFFC();
    LOBYTE(v13) = 23;
    sub_1AD63BFFC();
    LOBYTE(v13) = 24;
    sub_1AD63BFFC();
    LOBYTE(v13) = 25;
    sub_1AD63BFFC();
    LOBYTE(v13) = 26;
    sub_1AD63BFF0();
    LOBYTE(v13) = 27;
    sub_1AD63BFE4();
    LOBYTE(v13) = 28;
    sub_1AD63BFE4();
    LOBYTE(v13) = 29;
    sub_1AD63BFD8();
    LOBYTE(v13) = 30;
    sub_1AD63BFF0();
    LOBYTE(v13) = 31;
    sub_1AD63C008();
    LOBYTE(v13) = 32;
    sub_1AD63BFF0();
    LOBYTE(v13) = 33;
    sub_1AD63BFF0();
    LOBYTE(v13) = 34;
    sub_1AD63BFF0();
    LOBYTE(v13) = 35;
    sub_1AD63BFF0();
    LOBYTE(v13) = 36;
    sub_1AD63BFF0();
    LOBYTE(v13) = 37;
    sub_1AD63BFF0();
    LOBYTE(v13) = 38;
    sub_1AD63BFD8();
    LOBYTE(v13) = 39;
    sub_1AD63BFD8();
    LOBYTE(v13) = 40;
    sub_1AD63BFD8();
    LOBYTE(v13) = 41;
    sub_1AD63BFE4();
    LOBYTE(v13) = 42;
    sub_1AD63BFF0();
    LOBYTE(v13) = 43;
    sub_1AD63BFF0();
    LOBYTE(v13) = 44;
    sub_1AD63BFD8();
    LOBYTE(v13) = 45;
    sub_1AD63BFF0();
    LOBYTE(v13) = 46;
    sub_1AD63BFF0();
    LOBYTE(v13) = 47;
    sub_1AD63BFF0();
    LOBYTE(v13) = 48;
    sub_1AD63BFF0();
    LOBYTE(v13) = 49;
    sub_1AD63BFD8();
    LOBYTE(v13) = 50;
    sub_1AD63C014();
    LOBYTE(v13) = 51;
    sub_1AD63BFF0();
    LOBYTE(v13) = 52;
    sub_1AD63BFF0();
    LOBYTE(v13) = 53;
    sub_1AD63BFD8();
    LOBYTE(v13) = 54;
    sub_1AD63BFD8();
    LOBYTE(v13) = 55;
    sub_1AD63C008();
    LOBYTE(v13) = 56;
    sub_1AD63BFD8();
    LOBYTE(v13) = 57;
    sub_1AD63BFE4();
    LOBYTE(v13) = 58;
    sub_1AD63B084();
    sub_1ACFF9724(&qword_1ED2E2DB8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    sub_1AD63C014();
    LOBYTE(v13) = 59;
    sub_1AD63BFD8();
    LOBYTE(v13) = 60;
    sub_1AD63BFE4();
    LOBYTE(v13) = 61;
    sub_1AD63BFD8();
    LOBYTE(v13) = 62;
    sub_1AD63BFF0();
    LOBYTE(v13) = 63;
    sub_1AD63BFF0();
    LOBYTE(v13) = 64;
    sub_1AD63BFFC();
    LOBYTE(v13) = 65;
    sub_1AD63BFFC();
    LOBYTE(v13) = 66;
    sub_1AD63BFE4();
    LOBYTE(v13) = 67;
    sub_1AD63BFF0();
    LOBYTE(v13) = 68;
    sub_1AD63BFF0();
    LOBYTE(v13) = 69;
    sub_1AD63BFF0();
    LOBYTE(v13) = 70;
    sub_1AD63BFF0();
    LOBYTE(v13) = 71;
    sub_1AD63BFFC();
    LOBYTE(v13) = 72;
    sub_1AD63BFE4();
    LOBYTE(v13) = 73;
    sub_1AD63BFF0();
    LOBYTE(v13) = 74;
    sub_1AD63BFE4();
    LOBYTE(v13) = 75;
    sub_1AD63BFE4();
    LOBYTE(v13) = 76;
    sub_1AD63BFE4();
    LOBYTE(v13) = 77;
    sub_1AD63C008();
    LOBYTE(v13) = *((_BYTE *)v3 + *(int *)(v11 + 328));
    v16 = 78;
    sub_1ACFF9764();
    sub_1AD63C014();
    LOBYTE(v13) = 79;
    sub_1AD63BFE4();
    LOBYTE(v13) = 80;
    sub_1AD63BFF0();
    LOBYTE(v13) = 81;
    sub_1AD63BFE4();
    LOBYTE(v13) = 82;
    sub_1AD63BFE4();
    LOBYTE(v13) = 83;
    sub_1AD63BFE4();
    LOBYTE(v13) = 84;
    sub_1AD63BFE4();
    LOBYTE(v13) = 85;
    sub_1AD63BFF0();
    LOBYTE(v13) = 86;
    sub_1AD63BFD8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1ACFF969C()
{
  unint64_t result;

  result = qword_1ED2E2310;
  if (!qword_1ED2E2310)
  {
    result = MEMORY[0x1AF44BDF0]("=Wh8d-\t", &type metadata for MediaMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2310);
  }
  return result;
}

unint64_t sub_1ACFF96E0()
{
  unint64_t result;

  result = qword_1ED2E2358;
  if (!qword_1ED2E2358)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for MediaMetadata.LargeImageContextualInfo, &type metadata for MediaMetadata.LargeImageContextualInfo);
    atomic_store(result, (unint64_t *)&qword_1ED2E2358);
  }
  return result;
}

uint64_t sub_1ACFF9724(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x1AF44BDF0](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1ACFF9764()
{
  unint64_t result;

  result = qword_1ED2E2AF0;
  if (!qword_1ED2E2AF0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for MediaMetadata.AppleMakerNoteCamera, &type metadata for MediaMetadata.AppleMakerNoteCamera);
    atomic_store(result, (unint64_t *)&qword_1ED2E2AF0);
  }
  return result;
}

uint64_t MediaMetadata.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(void);
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(uint64_t, uint64_t, uint64_t);
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  char *v78;
  char *v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  _OWORD *v92;
  uint64_t v93;
  _OWORD *v94;
  uint64_t v96;
  uint64_t *v97;
  char v98;
  uint64_t v99;
  uint64_t *v100;
  char v101;
  uint64_t v102;
  uint64_t *v103;
  char v104;
  uint64_t v105;
  uint64_t *v106;
  char v107;
  uint64_t v108;
  uint64_t *v109;
  char v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  uint64_t v128;
  uint64_t v129;
  char v130;
  uint64_t *v131;
  uint64_t v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  char v136;
  uint64_t *v137;
  uint64_t v138;
  uint64_t v139;
  char v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  char v144;
  uint64_t *v145;
  uint64_t v146;
  uint64_t v147;
  char v148;
  uint64_t *v149;
  uint64_t v150;
  uint64_t v151;
  char v152;
  uint64_t *v153;
  uint64_t v154;
  uint64_t v155;
  char v156;
  uint64_t *v157;
  uint64_t v158;
  uint64_t v159;
  char v160;
  uint64_t *v161;
  uint64_t v162;
  uint64_t v163;
  char v164;
  uint64_t *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  _QWORD *v177;
  uint64_t v178;
  uint64_t v179;
  char v180;
  uint64_t *v181;
  uint64_t v182;
  uint64_t v183;
  char v184;
  uint64_t *v185;
  uint64_t v186;
  uint64_t v187;
  char v188;
  uint64_t *v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t *v193;
  uint64_t v194;
  uint64_t v195;
  char v196;
  uint64_t *v197;
  uint64_t v198;
  char v199;
  uint64_t v200;
  char v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  _QWORD *v207;
  uint64_t v208;
  uint64_t v209;
  char v210;
  uint64_t *v211;
  uint64_t v212;
  uint64_t v213;
  char v214;
  uint64_t *v215;
  uint64_t v216;
  uint64_t v217;
  char v218;
  uint64_t *v219;
  uint64_t v220;
  uint64_t v221;
  char v222;
  uint64_t *v223;
  uint64_t v224;
  uint64_t v225;
  char v226;
  uint64_t *v227;
  uint64_t v228;
  uint64_t v229;
  char v230;
  uint64_t *v231;
  uint64_t v232;
  uint64_t v233;
  char v234;
  uint64_t *v235;
  uint64_t v236;
  uint64_t v237;
  char v238;
  uint64_t *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  _QWORD *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  _QWORD *v257;
  uint64_t v258;
  char v259;
  uint64_t v260;
  uint64_t v261;
  char v262;
  uint64_t *v263;
  uint64_t v264;
  uint64_t v265;
  char v266;
  uint64_t *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  _QWORD *v273;
  uint64_t v274;
  uint64_t v275;
  char v276;
  uint64_t *v277;
  uint64_t v278;
  uint64_t v279;
  char v280;
  uint64_t *v281;
  uint64_t v282;
  uint64_t v283;
  char v284;
  uint64_t *v285;
  uint64_t v286;
  uint64_t v287;
  char v288;
  uint64_t *v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  _QWORD *v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  char v299;
  uint64_t *v300;
  uint64_t v301;
  uint64_t v302;
  char v303;
  uint64_t *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  _QWORD *v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  _QWORD *v316;
  uint64_t v317;
  uint64_t v318;
  char v319;
  uint64_t *v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  _QWORD *v326;
  uint64_t v327;
  char v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  _QWORD *v335;
  uint64_t v336;
  char v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  _QWORD *v343;
  uint64_t v344;
  uint64_t v345;
  char v346;
  uint64_t *v347;
  uint64_t v348;
  uint64_t v349;
  char v350;
  uint64_t *v351;
  uint64_t v352;
  uint64_t v353;
  char v354;
  uint64_t *v355;
  uint64_t v356;
  uint64_t v357;
  char v358;
  uint64_t *v359;
  uint64_t v360;
  char v361;
  uint64_t v362;
  uint64_t v363;
  char v364;
  uint64_t *v365;
  uint64_t v366;
  uint64_t v367;
  char v368;
  uint64_t *v369;
  uint64_t v370;
  uint64_t v371;
  char v372;
  uint64_t *v373;
  uint64_t v374;
  uint64_t v375;
  char v376;
  uint64_t *v377;
  uint64_t v378;
  uint64_t v379;
  char v380;
  uint64_t *v381;
  uint64_t v382;
  char v383;
  uint64_t v384;
  uint64_t v385;
  char v386;
  uint64_t *v387;
  uint64_t v388;
  char v389;
  uint64_t v390;
  char v391;
  uint64_t v392;
  char v393;
  uint64_t v394;
  uint64_t v395;
  char v396;
  uint64_t v397;
  uint64_t v398;
  char v399;
  uint64_t v400;
  uint64_t v401;
  char v402;
  uint64_t *v403;
  uint64_t v404;
  char v405;
  uint64_t v406;
  char v407;
  uint64_t v408;
  char v409;
  uint64_t v410;
  char v411;
  uint64_t v412;
  uint64_t v413;
  char v414;
  uint64_t *v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  _QWORD *v421;
  _OWORD *v422;
  char *v423;
  uint64_t *v424;
  uint64_t *v425;
  uint64_t *v426;
  uint64_t v427;
  uint64_t *v428;
  uint64_t *v429;
  uint64_t *v430;
  uint64_t *v431;
  uint64_t *v432;
  char *v433;
  char *v434;
  uint64_t *v435;
  uint64_t *v436;
  uint64_t *v437;
  uint64_t *v438;
  uint64_t *v439;
  uint64_t v440;
  uint64_t v441;
  char *v442;
  uint64_t *v443;
  uint64_t *v444;
  uint64_t *v445;
  uint64_t *v446;
  uint64_t *v447;
  uint64_t *v448;
  uint64_t *v449;
  uint64_t *v450;
  char *v451;
  char *v452;
  char *v453;
  uint64_t v454;
  uint64_t *v455;
  uint64_t *v456;
  char *v457;
  uint64_t *v458;
  uint64_t *v459;
  uint64_t *v460;
  uint64_t *v461;
  char *v462;
  char *v463;
  uint64_t *v464;
  uint64_t *v465;
  char *v466;
  char *v467;
  uint64_t *v468;
  char *v469;
  uint64_t v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  char *v474;
  uint64_t v475;
  char *v476;
  uint64_t *v477;
  uint64_t *v478;
  uint64_t *v479;
  uint64_t *v480;
  uint64_t v481;
  uint64_t *v482;
  uint64_t *v483;
  uint64_t *v484;
  uint64_t *v485;
  uint64_t *v486;
  uint64_t v487;
  uint64_t v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t *v497;
  uint64_t *v498;
  uint64_t *v499;
  uint64_t v500;
  uint64_t *v501;
  char *v502;
  char *v503;
  char *v504;
  uint64_t *v505;
  uint64_t *v506;
  uint64_t *v507;
  uint64_t *v508;
  uint64_t *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  char *v513;
  uint64_t v514;
  _OWORD *v515;
  uint64_t v516;
  char *v517;
  _QWORD *v518;
  __int128 v519;
  uint64_t v520;
  char v521;
  char v522;

  v518 = a1;
  v496 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  ((void (*)(void))MEMORY[0x1E0C80A78])();
  v427 = (uint64_t)&v423 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v3 = ((uint64_t (*)(void))MEMORY[0x1E0C80A78])();
  v473 = (uint64_t)&v423 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v513 = (char *)&v423 - v5;
  v514 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E23F8);
  v512 = *(_QWORD *)(v514 - 8);
  MEMORY[0x1E0C80A78](v514);
  v517 = (char *)&v423 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (int *)type metadata accessor for MediaMetadata();
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v423 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *((_QWORD *)v10 + 1) = 0;
  *((_QWORD *)v10 + 2) = 0;
  *(_QWORD *)v10 = 0;
  v10[24] = 1;
  v11 = &v10[*(int *)(v8 + 20)];
  v12 = sub_1AD63B03C();
  v13 = *(void (**)(void))(*(_QWORD *)(v12 - 8) + 56);
  v511 = (uint64_t)v11;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v13)(v11, 1, 1, v12);
  v14 = &v10[v7[6]];
  *(_QWORD *)v14 = 0;
  v509 = (uint64_t *)v14;
  v14[8] = 1;
  v15 = &v10[v7[7]];
  *(_QWORD *)v15 = 0;
  v508 = (uint64_t *)v15;
  v15[8] = 1;
  v16 = &v10[v7[8]];
  *(_QWORD *)v16 = 0;
  v507 = (uint64_t *)v16;
  v16[8] = 1;
  v17 = &v10[v7[9]];
  *(_QWORD *)v17 = 0;
  v506 = (uint64_t *)v17;
  v17[8] = 1;
  v18 = &v10[v7[10]];
  *(_QWORD *)v18 = 0;
  v505 = (uint64_t *)v18;
  v18[8] = 1;
  v19 = &v10[v7[11]];
  *(_QWORD *)v19 = 0;
  *((_QWORD *)v19 + 1) = 0;
  v504 = v19;
  v20 = &v10[v7[12]];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  v503 = v20;
  v21 = &v10[v7[13]];
  *(_QWORD *)v21 = 0;
  *((_QWORD *)v21 + 1) = 0;
  v502 = v21;
  v22 = &v10[v7[14]];
  *(_QWORD *)v22 = 0;
  v501 = (uint64_t *)v22;
  v22[8] = 1;
  v500 = v7[15];
  v10[v500] = 2;
  v23 = &v10[v7[16]];
  *(_QWORD *)v23 = 0;
  v499 = (uint64_t *)v23;
  v23[8] = 1;
  v24 = &v10[v7[17]];
  *(_QWORD *)v24 = 0;
  v498 = (uint64_t *)v24;
  v24[8] = 1;
  v25 = &v10[v7[18]];
  *(_QWORD *)v25 = 0;
  v497 = (uint64_t *)v25;
  v25[8] = 1;
  v26 = &v10[v7[19]];
  *(_QWORD *)v26 = 0;
  v428 = (uint64_t *)v26;
  v26[8] = 1;
  v27 = &v10[v7[20]];
  *(_QWORD *)v27 = 0;
  v429 = (uint64_t *)v27;
  v27[8] = 1;
  v28 = &v10[v7[21]];
  *(_QWORD *)v28 = 0;
  v430 = (uint64_t *)v28;
  v28[8] = 1;
  v29 = &v10[v7[22]];
  *(_QWORD *)v29 = 0;
  v431 = (uint64_t *)v29;
  v29[8] = 1;
  v30 = &v10[v7[23]];
  *(_QWORD *)v30 = 0;
  v432 = (uint64_t *)v30;
  v30[8] = 1;
  v31 = &v10[v7[24]];
  *(_QWORD *)v31 = 0;
  *((_QWORD *)v31 + 1) = 0;
  v433 = v31;
  v32 = &v10[v7[25]];
  *(_QWORD *)v32 = 0;
  *((_QWORD *)v32 + 1) = 0;
  v434 = v32;
  v33 = &v10[v7[26]];
  *(_QWORD *)v33 = 0;
  v435 = (uint64_t *)v33;
  v33[8] = 1;
  v34 = &v10[v7[27]];
  *(_QWORD *)v34 = 0;
  v436 = (uint64_t *)v34;
  v34[8] = 1;
  v35 = &v10[v7[28]];
  *(_QWORD *)v35 = 0;
  v437 = (uint64_t *)v35;
  v35[8] = 1;
  v36 = &v10[v7[29]];
  *(_QWORD *)v36 = 0;
  v438 = (uint64_t *)v36;
  v36[8] = 1;
  v37 = &v10[v7[30]];
  *(_QWORD *)v37 = 0;
  v439 = (uint64_t *)v37;
  v37[8] = 1;
  v440 = v7[31];
  v10[v440] = 2;
  v441 = v7[32];
  v10[v441] = 2;
  v38 = &v10[v7[33]];
  *(_QWORD *)v38 = 0;
  *((_QWORD *)v38 + 1) = 0;
  v442 = v38;
  v39 = &v10[v7[34]];
  *(_QWORD *)v39 = 0;
  v443 = (uint64_t *)v39;
  v39[8] = 1;
  v40 = &v10[v7[35]];
  *(_QWORD *)v40 = 0;
  v444 = (uint64_t *)v40;
  v40[8] = 1;
  v41 = &v10[v7[36]];
  *(_QWORD *)v41 = 0;
  v445 = (uint64_t *)v41;
  v41[8] = 1;
  v42 = &v10[v7[37]];
  *(_QWORD *)v42 = 0;
  v446 = (uint64_t *)v42;
  v42[8] = 1;
  v43 = &v10[v7[38]];
  *(_QWORD *)v43 = 0;
  v447 = (uint64_t *)v43;
  v43[8] = 1;
  v44 = &v10[v7[39]];
  *(_QWORD *)v44 = 0;
  v448 = (uint64_t *)v44;
  v44[8] = 1;
  v45 = &v10[v7[40]];
  *(_QWORD *)v45 = 0;
  v449 = (uint64_t *)v45;
  v45[8] = 1;
  v46 = &v10[v7[41]];
  *(_QWORD *)v46 = 0;
  v450 = (uint64_t *)v46;
  v46[8] = 1;
  v47 = &v10[v7[42]];
  *(_QWORD *)v47 = 0;
  *((_QWORD *)v47 + 1) = 0;
  v451 = v47;
  v48 = &v10[v7[43]];
  *(_QWORD *)v48 = 0;
  *((_QWORD *)v48 + 1) = 0;
  v452 = v48;
  v49 = &v10[v7[44]];
  *(_QWORD *)v49 = 0;
  *((_QWORD *)v49 + 1) = 0;
  v453 = v49;
  v454 = v7[45];
  v10[v454] = 2;
  v50 = &v10[v7[46]];
  *(_QWORD *)v50 = 0;
  v455 = (uint64_t *)v50;
  v50[8] = 1;
  v51 = &v10[v7[47]];
  *(_QWORD *)v51 = 0;
  v456 = (uint64_t *)v51;
  v51[8] = 1;
  v52 = &v10[v7[48]];
  *(_QWORD *)v52 = 0;
  *((_QWORD *)v52 + 1) = 0;
  v457 = v52;
  v53 = &v10[v7[49]];
  *(_QWORD *)v53 = 0;
  v458 = (uint64_t *)v53;
  v53[8] = 1;
  v54 = &v10[v7[50]];
  *(_QWORD *)v54 = 0;
  v459 = (uint64_t *)v54;
  v54[8] = 1;
  v55 = &v10[v7[51]];
  *(_QWORD *)v55 = 0;
  v460 = (uint64_t *)v55;
  v55[8] = 1;
  v56 = &v10[v7[52]];
  *(_QWORD *)v56 = 0;
  v461 = (uint64_t *)v56;
  v56[8] = 1;
  v57 = &v10[v7[53]];
  *(_QWORD *)v57 = 0;
  *((_QWORD *)v57 + 1) = 0;
  v462 = v57;
  v463 = &v10[v7[54]];
  v510 = v12;
  v13();
  v58 = &v10[v7[55]];
  *(_QWORD *)v58 = 0;
  v464 = (uint64_t *)v58;
  v58[8] = 1;
  v59 = &v10[v7[56]];
  *(_QWORD *)v59 = 0;
  v465 = (uint64_t *)v59;
  v59[8] = 1;
  v60 = &v10[v7[57]];
  *(_QWORD *)v60 = 0;
  *((_QWORD *)v60 + 1) = 0;
  v466 = v60;
  v61 = &v10[v7[58]];
  *(_QWORD *)v61 = 0;
  *((_QWORD *)v61 + 1) = 0;
  v467 = v61;
  v62 = &v10[v7[59]];
  *(_QWORD *)v62 = 0;
  v468 = (uint64_t *)v62;
  v62[8] = 1;
  v63 = &v10[v7[60]];
  *(_QWORD *)v63 = 0;
  *((_QWORD *)v63 + 1) = 0;
  v469 = v63;
  v470 = v7[61];
  v10[v470] = 2;
  v64 = (uint64_t)&v10[v7[62]];
  v65 = sub_1AD63B084();
  v66 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 56);
  v472 = v64;
  v471 = v65;
  v66(v64, 1, 1);
  v67 = &v10[v7[63]];
  *(_QWORD *)v67 = 0;
  *((_QWORD *)v67 + 1) = 0;
  v474 = v67;
  v475 = v7[64];
  v10[v475] = 2;
  v68 = &v10[v7[65]];
  *(_QWORD *)v68 = 0;
  *((_QWORD *)v68 + 1) = 0;
  v476 = v68;
  v69 = &v10[v7[66]];
  *(_QWORD *)v69 = 0;
  v477 = (uint64_t *)v69;
  v69[8] = 1;
  v70 = &v10[v7[67]];
  *(_QWORD *)v70 = 0;
  v478 = (uint64_t *)v70;
  v70[8] = 1;
  v71 = &v10[v7[68]];
  *(_QWORD *)v71 = 0;
  v479 = (uint64_t *)v71;
  v71[8] = 1;
  v72 = &v10[v7[69]];
  *(_QWORD *)v72 = 0;
  v480 = (uint64_t *)v72;
  v72[8] = 1;
  v481 = v7[70];
  v10[v481] = 2;
  v73 = &v10[v7[71]];
  *(_QWORD *)v73 = 0;
  v482 = (uint64_t *)v73;
  v73[8] = 1;
  v74 = &v10[v7[72]];
  *(_QWORD *)v74 = 0;
  v483 = (uint64_t *)v74;
  v74[8] = 1;
  v75 = &v10[v7[73]];
  *(_QWORD *)v75 = 0;
  v484 = (uint64_t *)v75;
  v75[8] = 1;
  v76 = &v10[v7[74]];
  *(_QWORD *)v76 = 0;
  v485 = (uint64_t *)v76;
  v76[8] = 1;
  v77 = &v10[v7[75]];
  *(_QWORD *)v77 = 0;
  v486 = (uint64_t *)v77;
  v77[8] = 1;
  v487 = v7[76];
  v10[v487] = 2;
  v78 = &v10[v7[77]];
  *(_QWORD *)v78 = 0;
  v78[8] = 1;
  v488 = v7[78];
  v10[v488] = 2;
  v489 = v7[79];
  v10[v489] = 2;
  v490 = v7[80];
  v10[v490] = 2;
  v79 = &v10[v7[81]];
  *(_QWORD *)v79 = 0;
  v79[8] = 1;
  v492 = v7[82];
  v10[v492] = 7;
  v493 = v7[83];
  v10[v493] = 2;
  v80 = &v10[v7[84]];
  *(_QWORD *)v80 = 0;
  v80[8] = 1;
  v494 = v7[85];
  v10[v494] = 2;
  v491 = v7[86];
  v10[v491] = 2;
  v495 = v7[87];
  v10[v495] = 2;
  v81 = v7[88];
  v10[v81] = 2;
  v82 = &v10[v7[89]];
  *(_QWORD *)v82 = 0;
  v82[8] = 1;
  v83 = v7[90];
  v515 = v10;
  v84 = &v10[v83];
  *(_QWORD *)v84 = 0;
  *((_QWORD *)v84 + 1) = 0;
  __swift_project_boxed_opaque_existential_1(v518, v518[3]);
  sub_1ACFF969C();
  v85 = v516;
  sub_1AD63C524();
  v516 = v85;
  if (!v85)
  {
    v86 = v511;
    v87 = (uint64_t)v513;
    v424 = (uint64_t *)v78;
    v425 = (uint64_t *)v80;
    v426 = (uint64_t *)v82;
    v423 = v84;
    v88 = v512;
    v522 = 0;
    sub_1ACFFB3B8();
    v89 = v516;
    sub_1AD63BF00();
    if (v89)
    {
      v516 = v89;
    }
    else
    {
      v90 = v520;
      v91 = v521;
      v92 = v515;
      *v515 = v519;
      *((_QWORD *)v92 + 2) = v90;
      *((_BYTE *)v92 + 24) = v91;
      LOBYTE(v519) = 1;
      v93 = sub_1ACFF9724((unint64_t *)&unk_1ED2E2DA8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
      sub_1AD63BF00();
      sub_1ACFF6540(v87, v86, (uint64_t *)&unk_1ED2E2D98);
      LOBYTE(v519) = 2;
      v96 = sub_1AD63BEE8();
      v97 = v509;
      *v509 = v96;
      *((_BYTE *)v97 + 8) = v98 & 1;
      LOBYTE(v519) = 3;
      v99 = sub_1AD63BEDC();
      v100 = v508;
      *v508 = v99;
      *((_BYTE *)v100 + 8) = v101 & 1;
      LOBYTE(v519) = 4;
      v102 = sub_1AD63BEE8();
      v103 = v507;
      *v507 = v102;
      *((_BYTE *)v103 + 8) = v104 & 1;
      LOBYTE(v519) = 5;
      v105 = sub_1AD63BEF4();
      v106 = v506;
      *v506 = v105;
      *((_BYTE *)v106 + 8) = v107 & 1;
      LOBYTE(v519) = 6;
      v108 = sub_1AD63BEF4();
      v513 = (char *)v93;
      v109 = v505;
      *v505 = v108;
      *((_BYTE *)v109 + 8) = v110 & 1;
      LOBYTE(v519) = 7;
      v111 = sub_1AD63BEC4();
      v516 = 0;
      v113 = v111;
      v114 = v112;
      v115 = v504;
      swift_bridgeObjectRelease();
      *v115 = v113;
      v115[1] = v114;
      LOBYTE(v519) = 8;
      v116 = v516;
      v117 = sub_1AD63BEC4();
      v516 = v116;
      if (!v116)
      {
        v119 = v117;
        v120 = v118;
        v121 = v503;
        swift_bridgeObjectRelease();
        *v121 = v119;
        v121[1] = v120;
        LOBYTE(v519) = 9;
        v122 = v516;
        v123 = sub_1AD63BEC4();
        v516 = v122;
        if (!v122)
        {
          v125 = v123;
          v126 = v124;
          v127 = v502;
          swift_bridgeObjectRelease();
          *v127 = v125;
          v127[1] = v126;
          LOBYTE(v519) = 10;
          v128 = v516;
          v129 = sub_1AD63BEF4();
          v516 = v128;
          if (!v128)
          {
            v131 = v501;
            *v501 = v129;
            *((_BYTE *)v131 + 8) = v130 & 1;
            LOBYTE(v519) = 11;
            v132 = v516;
            v133 = sub_1AD63BED0();
            v516 = v132;
            if (!v132)
            {
              *((_BYTE *)v515 + v500) = v133;
              LOBYTE(v519) = 12;
              v134 = v516;
              v135 = sub_1AD63BEDC();
              v516 = v134;
              if (!v134)
              {
                v137 = v499;
                *v499 = v135;
                *((_BYTE *)v137 + 8) = v136 & 1;
                LOBYTE(v519) = 13;
                v138 = v516;
                v139 = sub_1AD63BEE8();
                v516 = v138;
                if (!v138)
                {
                  v141 = v498;
                  *v498 = v139;
                  *((_BYTE *)v141 + 8) = v140 & 1;
                  LOBYTE(v519) = 14;
                  v142 = v516;
                  v143 = sub_1AD63BEE8();
                  v516 = v142;
                  if (!v142)
                  {
                    v145 = v497;
                    *v497 = v143;
                    *((_BYTE *)v145 + 8) = v144 & 1;
                    LOBYTE(v519) = 15;
                    v146 = v516;
                    v147 = sub_1AD63BEDC();
                    v516 = v146;
                    if (!v146)
                    {
                      v149 = v428;
                      *v428 = v147;
                      *((_BYTE *)v149 + 8) = v148 & 1;
                      LOBYTE(v519) = 16;
                      v150 = v516;
                      v151 = sub_1AD63BEDC();
                      v516 = v150;
                      if (!v150)
                      {
                        v153 = v429;
                        *v429 = v151;
                        *((_BYTE *)v153 + 8) = v152 & 1;
                        LOBYTE(v519) = 17;
                        v154 = v516;
                        v155 = sub_1AD63BEE8();
                        v516 = v154;
                        if (!v154)
                        {
                          v157 = v430;
                          *v430 = v155;
                          *((_BYTE *)v157 + 8) = v156 & 1;
                          LOBYTE(v519) = 18;
                          v158 = v516;
                          v159 = sub_1AD63BEE8();
                          v516 = v158;
                          if (!v158)
                          {
                            v161 = v431;
                            *v431 = v159;
                            *((_BYTE *)v161 + 8) = v160 & 1;
                            LOBYTE(v519) = 19;
                            v162 = v516;
                            v163 = sub_1AD63BEDC();
                            v516 = v162;
                            if (!v162)
                            {
                              v165 = v432;
                              *v432 = v163;
                              *((_BYTE *)v165 + 8) = v164 & 1;
                              LOBYTE(v519) = 20;
                              v166 = v516;
                              v167 = sub_1AD63BEC4();
                              v516 = v166;
                              if (!v166)
                              {
                                v169 = v167;
                                v170 = v168;
                                v171 = v433;
                                swift_bridgeObjectRelease();
                                *v171 = v169;
                                v171[1] = v170;
                                LOBYTE(v519) = 21;
                                v172 = v516;
                                v173 = sub_1AD63BEC4();
                                v516 = v172;
                                if (!v172)
                                {
                                  v175 = v173;
                                  v176 = v174;
                                  v177 = v434;
                                  swift_bridgeObjectRelease();
                                  *v177 = v175;
                                  v177[1] = v176;
                                  LOBYTE(v519) = 22;
                                  v178 = v516;
                                  v179 = sub_1AD63BEE8();
                                  v516 = v178;
                                  if (!v178)
                                  {
                                    v181 = v435;
                                    *v435 = v179;
                                    *((_BYTE *)v181 + 8) = v180 & 1;
                                    LOBYTE(v519) = 23;
                                    v182 = v516;
                                    v183 = sub_1AD63BEE8();
                                    v516 = v182;
                                    if (!v182)
                                    {
                                      v185 = v436;
                                      *v436 = v183;
                                      *((_BYTE *)v185 + 8) = v184 & 1;
                                      LOBYTE(v519) = 24;
                                      v186 = v516;
                                      v187 = sub_1AD63BEE8();
                                      v516 = v186;
                                      if (!v186)
                                      {
                                        v189 = v437;
                                        *v437 = v187;
                                        *((_BYTE *)v189 + 8) = v188 & 1;
                                        LOBYTE(v519) = 25;
                                        v190 = v516;
                                        v191 = sub_1AD63BEE8();
                                        v516 = v190;
                                        if (!v190)
                                        {
                                          v193 = v438;
                                          *v438 = v191;
                                          *((_BYTE *)v193 + 8) = v192 & 1;
                                          LOBYTE(v519) = 26;
                                          v194 = v516;
                                          v195 = sub_1AD63BEDC();
                                          v516 = v194;
                                          if (!v194)
                                          {
                                            v197 = v439;
                                            *v439 = v195;
                                            *((_BYTE *)v197 + 8) = v196 & 1;
                                            LOBYTE(v519) = 27;
                                            v198 = v516;
                                            v199 = sub_1AD63BED0();
                                            v516 = v198;
                                            if (!v198)
                                            {
                                              *((_BYTE *)v515 + v440) = v199;
                                              LOBYTE(v519) = 28;
                                              v200 = v516;
                                              v201 = sub_1AD63BED0();
                                              v516 = v200;
                                              if (!v200)
                                              {
                                                *((_BYTE *)v515 + v441) = v201;
                                                LOBYTE(v519) = 29;
                                                v202 = v516;
                                                v203 = sub_1AD63BEC4();
                                                v516 = v202;
                                                if (!v202)
                                                {
                                                  v205 = v203;
                                                  v206 = v204;
                                                  v207 = v442;
                                                  swift_bridgeObjectRelease();
                                                  *v207 = v205;
                                                  v207[1] = v206;
                                                  LOBYTE(v519) = 30;
                                                  v208 = v516;
                                                  v209 = sub_1AD63BEDC();
                                                  v516 = v208;
                                                  if (!v208)
                                                  {
                                                    v211 = v443;
                                                    *v443 = v209;
                                                    *((_BYTE *)v211 + 8) = v210 & 1;
                                                    LOBYTE(v519) = 31;
                                                    v212 = v516;
                                                    v213 = sub_1AD63BEF4();
                                                    v516 = v212;
                                                    if (!v212)
                                                    {
                                                      v215 = v444;
                                                      *v444 = v213;
                                                      *((_BYTE *)v215 + 8) = v214 & 1;
                                                      LOBYTE(v519) = 32;
                                                      v216 = v516;
                                                      v217 = sub_1AD63BEDC();
                                                      v516 = v216;
                                                      if (!v216)
                                                      {
                                                        v219 = v445;
                                                        *v445 = v217;
                                                        *((_BYTE *)v219 + 8) = v218 & 1;
                                                        LOBYTE(v519) = 33;
                                                        v220 = v516;
                                                        v221 = sub_1AD63BEDC();
                                                        v516 = v220;
                                                        if (!v220)
                                                        {
                                                          v223 = v446;
                                                          *v446 = v221;
                                                          *((_BYTE *)v223 + 8) = v222 & 1;
                                                          LOBYTE(v519) = 34;
                                                          v224 = v516;
                                                          v225 = sub_1AD63BEDC();
                                                          v516 = v224;
                                                          if (!v224)
                                                          {
                                                            v227 = v447;
                                                            *v447 = v225;
                                                            *((_BYTE *)v227 + 8) = v226 & 1;
                                                            LOBYTE(v519) = 35;
                                                            v228 = v516;
                                                            v229 = sub_1AD63BEDC();
                                                            v516 = v228;
                                                            if (!v228)
                                                            {
                                                              v231 = v448;
                                                              *v448 = v229;
                                                              *((_BYTE *)v231 + 8) = v230 & 1;
                                                              LOBYTE(v519) = 36;
                                                              v232 = v516;
                                                              v233 = sub_1AD63BEDC();
                                                              v516 = v232;
                                                              if (!v232)
                                                              {
                                                                v235 = v449;
                                                                *v449 = v233;
                                                                *((_BYTE *)v235 + 8) = v234 & 1;
                                                                LOBYTE(v519) = 37;
                                                                v236 = v516;
                                                                v237 = sub_1AD63BEDC();
                                                                v516 = v236;
                                                                if (!v236)
                                                                {
                                                                  v239 = v450;
                                                                  *v450 = v237;
                                                                  *((_BYTE *)v239 + 8) = v238 & 1;
                                                                  LOBYTE(v519) = 38;
                                                                  v240 = v516;
                                                                  v241 = sub_1AD63BEC4();
                                                                  v516 = v240;
                                                                  if (!v240)
                                                                  {
                                                                    v243 = v241;
                                                                    v244 = v242;
                                                                    v245 = v451;
                                                                    swift_bridgeObjectRelease();
                                                                    *v245 = v243;
                                                                    v245[1] = v244;
                                                                    LOBYTE(v519) = 39;
                                                                    v246 = v516;
                                                                    v247 = sub_1AD63BEC4();
                                                                    v516 = v246;
                                                                    if (!v246)
                                                                    {
                                                                      v249 = v247;
                                                                      v250 = v248;
                                                                      v251 = v452;
                                                                      swift_bridgeObjectRelease();
                                                                      *v251 = v249;
                                                                      v251[1] = v250;
                                                                      LOBYTE(v519) = 40;
                                                                      v252 = v516;
                                                                      v253 = sub_1AD63BEC4();
                                                                      v516 = v252;
                                                                      if (!v252)
                                                                      {
                                                                        v255 = v253;
                                                                        v256 = v254;
                                                                        v257 = v453;
                                                                        swift_bridgeObjectRelease();
                                                                        *v257 = v255;
                                                                        v257[1] = v256;
                                                                        LOBYTE(v519) = 41;
                                                                        v258 = v516;
                                                                        v259 = sub_1AD63BED0();
                                                                        v516 = v258;
                                                                        if (!v258)
                                                                        {
                                                                          *((_BYTE *)v515 + v454) = v259;
                                                                          LOBYTE(v519) = 42;
                                                                          v260 = v516;
                                                                          v261 = sub_1AD63BEDC();
                                                                          v516 = v260;
                                                                          if (!v260)
                                                                          {
                                                                            v263 = v455;
                                                                            *v455 = v261;
                                                                            *((_BYTE *)v263 + 8) = v262 & 1;
                                                                            LOBYTE(v519) = 43;
                                                                            v264 = v516;
                                                                            v265 = sub_1AD63BEDC();
                                                                            v516 = v264;
                                                                            if (!v264)
                                                                            {
                                                                              v267 = v456;
                                                                              *v456 = v265;
                                                                              *((_BYTE *)v267 + 8) = v266 & 1;
                                                                              LOBYTE(v519) = 44;
                                                                              v268 = v516;
                                                                              v269 = sub_1AD63BEC4();
                                                                              v516 = v268;
                                                                              if (!v268)
                                                                              {
                                                                                v271 = v269;
                                                                                v272 = v270;
                                                                                v273 = v457;
                                                                                swift_bridgeObjectRelease();
                                                                                *v273 = v271;
                                                                                v273[1] = v272;
                                                                                LOBYTE(v519) = 45;
                                                                                v274 = v516;
                                                                                v275 = sub_1AD63BEDC();
                                                                                v516 = v274;
                                                                                if (!v274)
                                                                                {
                                                                                  v277 = v458;
                                                                                  *v458 = v275;
                                                                                  *((_BYTE *)v277 + 8) = v276 & 1;
                                                                                  LOBYTE(v519) = 46;
                                                                                  v278 = v516;
                                                                                  v279 = sub_1AD63BEDC();
                                                                                  v516 = v278;
                                                                                  if (!v278)
                                                                                  {
                                                                                    v281 = v459;
                                                                                    *v459 = v279;
                                                                                    *((_BYTE *)v281 + 8) = v280 & 1;
                                                                                    LOBYTE(v519) = 47;
                                                                                    v282 = v516;
                                                                                    v283 = sub_1AD63BEDC();
                                                                                    v516 = v282;
                                                                                    if (!v282)
                                                                                    {
                                                                                      v285 = v460;
                                                                                      *v460 = v283;
                                                                                      *((_BYTE *)v285 + 8) = v284 & 1;
                                                                                      LOBYTE(v519) = 48;
                                                                                      v286 = v516;
                                                                                      v287 = sub_1AD63BEDC();
                                                                                      v516 = v286;
                                                                                      if (!v286)
                                                                                      {
                                                                                        v289 = v461;
                                                                                        *v461 = v287;
                                                                                        *((_BYTE *)v289 + 8) = v288 & 1;
                                                                                        LOBYTE(v519) = 49;
                                                                                        v290 = v516;
                                                                                        v291 = sub_1AD63BEC4();
                                                                                        v516 = v290;
                                                                                        if (!v290)
                                                                                        {
                                                                                          v293 = v291;
                                                                                          v294 = v292;
                                                                                          v295 = v462;
                                                                                          swift_bridgeObjectRelease();
                                                                                          *v295 = v293;
                                                                                          v295[1] = v294;
                                                                                          LOBYTE(v519) = 50;
                                                                                          v296 = v516;
                                                                                          sub_1AD63BF00();
                                                                                          v516 = v296;
                                                                                          if (!v296)
                                                                                          {
                                                                                            sub_1ACFF6540(v473, (uint64_t)v463, (uint64_t *)&unk_1ED2E2D98);
                                                                                            LOBYTE(v519) = 51;
                                                                                            v297 = v516;
                                                                                            v298 = sub_1AD63BEDC();
                                                                                            v516 = v297;
                                                                                            if (!v297)
                                                                                            {
                                                                                              v300 = v464;
                                                                                              *v464 = v298;
                                                                                              *((_BYTE *)v300 + 8) = v299 & 1;
                                                                                              LOBYTE(v519) = 52;
                                                                                              v301 = v516;
                                                                                              v302 = sub_1AD63BEDC();
                                                                                              v516 = v301;
                                                                                              if (!v301)
                                                                                              {
                                                                                                v304 = v465;
                                                                                                *v465 = v302;
                                                                                                *((_BYTE *)v304 + 8) = v303 & 1;
                                                                                                LOBYTE(v519) = 53;
                                                                                                v305 = v516;
                                                                                                v306 = sub_1AD63BEC4();
                                                                                                v516 = v305;
                                                                                                if (!v305)
                                                                                                {
                                                                                                  v308 = v306;
                                                                                                  v309 = v307;
                                                                                                  v310 = v466;
                                                                                                  swift_bridgeObjectRelease();
                                                                                                  *v310 = v308;
                                                                                                  v310[1] = v309;
                                                                                                  LOBYTE(v519) = 54;
                                                                                                  v311 = v516;
                                                                                                  v312 = sub_1AD63BEC4();
                                                                                                  v516 = v311;
                                                                                                  if (!v311)
                                                                                                  {
                                                                                                    v314 = v312;
                                                                                                    v315 = v313;
                                                                                                    v316 = v467;
                                                                                                    swift_bridgeObjectRelease();
                                                                                                    *v316 = v314;
                                                                                                    v316[1] = v315;
                                                                                                    LOBYTE(v519) = 55;
                                                                                                    v317 = v516;
                                                                                                    v318 = sub_1AD63BEF4();
                                                                                                    v516 = v317;
                                                                                                    if (!v317)
                                                                                                    {
                                                                                                      v320 = v468;
                                                                                                      *v468 = v318;
                                                                                                      *((_BYTE *)v320 + 8) = v319 & 1;
                                                                                                      LOBYTE(v519) = 56;
                                                                                                      v321 = v516;
                                                                                                      v322 = sub_1AD63BEC4();
                                                                                                      v516 = v321;
                                                                                                      if (!v321)
                                                                                                      {
                                                                                                        v324 = v322;
                                                                                                        v325 = v323;
                                                                                                        v326 = v469;
                                                                                                        swift_bridgeObjectRelease();
                                                                                                        *v326 = v324;
                                                                                                        v326[1] = v325;
                                                                                                        LOBYTE(v519) = 57;
                                                                                                        v327 = v516;
                                                                                                        v328 = sub_1AD63BED0();
                                                                                                        v516 = v327;
                                                                                                        if (!v327)
                                                                                                        {
                                                                                                          *((_BYTE *)v515 + v470) = v328;
                                                                                                          LOBYTE(v519) = 58;
                                                                                                          sub_1ACFF9724(qword_1ED2E5450, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
                                                                                                          v329 = v516;
                                                                                                          sub_1AD63BF00();
                                                                                                          v516 = v329;
                                                                                                          if (!v329)
                                                                                                          {
                                                                                                            sub_1ACFF6540(v427, v472, &qword_1ED2E7140);
                                                                                                            LOBYTE(v519) = 59;
                                                                                                            v330 = v516;
                                                                                                            v331 = sub_1AD63BEC4();
                                                                                                            v516 = v330;
                                                                                                            if (!v330)
                                                                                                            {
                                                                                                              v333 = v331;
                                                                                                              v334 = v332;
                                                                                                              v335 = v474;
                                                                                                              swift_bridgeObjectRelease();
                                                                                                              *v335 = v333;
                                                                                                              v335[1] = v334;
                                                                                                              LOBYTE(v519) = 60;
                                                                                                              v336 = v516;
                                                                                                              v337 = sub_1AD63BED0();
                                                                                                              v516 = v336;
                                                                                                              if (!v336)
                                                                                                              {
                                                                                                                *((_BYTE *)v515 + v475) = v337;
                                                                                                                LOBYTE(v519) = 61;
                                                                                                                v338 = v516;
                                                                                                                v339 = sub_1AD63BEC4();
                                                                                                                v516 = v338;
                                                                                                                if (!v338)
                                                                                                                {
                                                                                                                  v341 = v339;
                                                                                                                  v342 = v340;
                                                                                                                  v343 = v476;
                                                                                                                  swift_bridgeObjectRelease();
                                                                                                                  *v343 = v341;
                                                                                                                  v343[1] = v342;
                                                                                                                  LOBYTE(v519) = 62;
                                                                                                                  v344 = v516;
                                                                                                                  v345 = sub_1AD63BEDC();
                                                                                                                  v516 = v344;
                                                                                                                  if (!v344)
                                                                                                                  {
                                                                                                                    v347 = v477;
                                                                                                                    *v477 = v345;
                                                                                                                    *((_BYTE *)v347 + 8) = v346 & 1;
                                                                                                                    LOBYTE(v519) = 63;
                                                                                                                    v348 = v516;
                                                                                                                    v349 = sub_1AD63BEDC();
                                                                                                                    v516 = v348;
                                                                                                                    if (!v348)
                                                                                                                    {
                                                                                                                      v351 = v478;
                                                                                                                      *v478 = v349;
                                                                                                                      *((_BYTE *)v351 + 8) = v350 & 1;
                                                                                                                      LOBYTE(v519) = 64;
                                                                                                                      v352 = v516;
                                                                                                                      v353 = sub_1AD63BEE8();
                                                                                                                      v516 = v352;
                                                                                                                      if (!v352)
                                                                                                                      {
                                                                                                                        v355 = v479;
                                                                                                                        *v479 = v353;
                                                                                                                        *((_BYTE *)v355 + 8) = v354 & 1;
                                                                                                                        LOBYTE(v519) = 65;
                                                                                                                        v356 = v516;
                                                                                                                        v357 = sub_1AD63BEE8();
                                                                                                                        v516 = v356;
                                                                                                                        if (!v356)
                                                                                                                        {
                                                                                                                          v359 = v480;
                                                                                                                          *v480 = v357;
                                                                                                                          *((_BYTE *)v359 + 8) = v358 & 1;
                                                                                                                          LOBYTE(v519) = 66;
                                                                                                                          v360 = v516;
                                                                                                                          v361 = sub_1AD63BED0();
                                                                                                                          v516 = v360;
                                                                                                                          if (!v360)
                                                                                                                          {
                                                                                                                            *((_BYTE *)v515 + v481) = v361;
                                                                                                                            LOBYTE(v519) = 67;
                                                                                                                            v362 = v516;
                                                                                                                            v363 = sub_1AD63BEDC();
                                                                                                                            v516 = v362;
                                                                                                                            if (!v362)
                                                                                                                            {
                                                                                                                              v365 = v482;
                                                                                                                              *v482 = v363;
                                                                                                                              *((_BYTE *)v365 + 8) = v364 & 1;
                                                                                                                              LOBYTE(v519) = 68;
                                                                                                                              v366 = v516;
                                                                                                                              v367 = sub_1AD63BEDC();
                                                                                                                              v516 = v366;
                                                                                                                              if (!v366)
                                                                                                                              {
                                                                                                                                v369 = v483;
                                                                                                                                *v483 = v367;
                                                                                                                                *((_BYTE *)v369 + 8) = v368 & 1;
                                                                                                                                LOBYTE(v519) = 69;
                                                                                                                                v370 = v516;
                                                                                                                                v371 = sub_1AD63BEDC();
                                                                                                                                v516 = v370;
                                                                                                                                if (!v370)
                                                                                                                                {
                                                                                                                                  v373 = v484;
                                                                                                                                  *v484 = v371;
                                                                                                                                  *((_BYTE *)v373 + 8) = v372 & 1;
                                                                                                                                  LOBYTE(v519) = 70;
                                                                                                                                  v374 = v516;
                                                                                                                                  v375 = sub_1AD63BEDC();
                                                                                                                                  v516 = v374;
                                                                                                                                  if (!v374)
                                                                                                                                  {
                                                                                                                                    v377 = v485;
                                                                                                                                    *v485 = v375;
                                                                                                                                    *((_BYTE *)v377 + 8) = v376 & 1;
                                                                                                                                    LOBYTE(v519) = 71;
                                                                                                                                    v378 = v516;
                                                                                                                                    v379 = sub_1AD63BEE8();
                                                                                                                                    v516 = v378;
                                                                                                                                    if (!v378)
                                                                                                                                    {
                                                                                                                                      v381 = v486;
                                                                                                                                      *v486 = v379;
                                                                                                                                      *((_BYTE *)v381 + 8) = v380 & 1;
                                                                                                                                      LOBYTE(v519) = 72;
                                                                                                                                      v382 = v516;
                                                                                                                                      v383 = sub_1AD63BED0();
                                                                                                                                      v516 = v382;
                                                                                                                                      if (!v382)
                                                                                                                                      {
                                                                                                                                        *((_BYTE *)v515 + v487) = v383;
                                                                                                                                        LOBYTE(v519) = 73;
                                                                                                                                        v384 = v516;
                                                                                                                                        v385 = sub_1AD63BEDC();
                                                                                                                                        v516 = v384;
                                                                                                                                        if (!v384)
                                                                                                                                        {
                                                                                                                                          v387 = v424;
                                                                                                                                          *v424 = v385;
                                                                                                                                          *((_BYTE *)v387 + 8) = v386 & 1;
                                                                                                                                          LOBYTE(v519) = 74;
                                                                                                                                          v388 = v516;
                                                                                                                                          v389 = sub_1AD63BED0();
                                                                                                                                          v516 = v388;
                                                                                                                                          if (!v388)
                                                                                                                                          {
                                                                                                                                            *((_BYTE *)v515 + v488) = v389;
                                                                                                                                            LOBYTE(v519) = 75;
                                                                                                                                            v390 = v516;
                                                                                                                                            v391 = sub_1AD63BED0();
                                                                                                                                            v516 = v390;
                                                                                                                                            if (!v390)
                                                                                                                                            {
                                                                                                                                              *((_BYTE *)v515 + v489) = v391;
                                                                                                                                              LOBYTE(v519) = 76;
                                                                                                                                              v392 = v516;
                                                                                                                                              v393 = sub_1AD63BED0();
                                                                                                                                              v516 = v392;
                                                                                                                                              if (!v392)
                                                                                                                                              {
                                                                                                                                                *((_BYTE *)v515 + v490) = v393;
                                                                                                                                                LOBYTE(v519) = 77;
                                                                                                                                                v394 = v516;
                                                                                                                                                v395 = sub_1AD63BEF4();
                                                                                                                                                v516 = v394;
                                                                                                                                                if (!v394)
                                                                                                                                                {
                                                                                                                                                  *(_QWORD *)v79 = v395;
                                                                                                                                                  v79[8] = v396 & 1;
                                                                                                                                                  v522 = 78;
                                                                                                                                                  sub_1ACFFB3FC();
                                                                                                                                                  v397 = v516;
                                                                                                                                                  sub_1AD63BF00();
                                                                                                                                                  v516 = v397;
                                                                                                                                                  if (!v397)
                                                                                                                                                  {
                                                                                                                                                    *((_BYTE *)v515 + v492) = v519;
                                                                                                                                                    LOBYTE(v519) = 79;
                                                                                                                                                    v398 = v516;
                                                                                                                                                    v399 = sub_1AD63BED0();
                                                                                                                                                    v516 = v398;
                                                                                                                                                    if (!v398)
                                                                                                                                                    {
                                                                                                                                                      *((_BYTE *)v515 + v493) = v399;
                                                                                                                                                      LOBYTE(v519) = 80;
                                                                                                                                                      v400 = v516;
                                                                                                                                                      v401 = sub_1AD63BEDC();
                                                                                                                                                      v516 = v400;
                                                                                                                                                      if (!v400)
                                                                                                                                                      {
                                                                                                                                                        v403 = v425;
                                                                                                                                                        *v425 = v401;
                                                                                                                                                        *((_BYTE *)v403 + 8) = v402 & 1;
                                                                                                                                                        LOBYTE(v519) = 81;
                                                                                                                                                        v404 = v516;
                                                                                                                                                        v405 = sub_1AD63BED0();
                                                                                                                                                        v516 = v404;
                                                                                                                                                        if (!v404)
                                                                                                                                                        {
                                                                                                                                                          *((_BYTE *)v515 + v494) = v405;
                                                                                                                                                          LOBYTE(v519) = 82;
                                                                                                                                                          v406 = v516;
                                                                                                                                                          v407 = sub_1AD63BED0();
                                                                                                                                                          v516 = v406;
                                                                                                                                                          if (!v406)
                                                                                                                                                          {
                                                                                                                                                            *((_BYTE *)v515 + v491) = v407;
                                                                                                                                                            LOBYTE(v519) = 83;
                                                                                                                                                            v408 = v516;
                                                                                                                                                            v409 = sub_1AD63BED0();
                                                                                                                                                            v516 = v408;
                                                                                                                                                            if (!v408)
                                                                                                                                                            {
                                                                                                                                                              *((_BYTE *)v515 + v495) = v409;
                                                                                                                                                              LOBYTE(v519) = 84;
                                                                                                                                                              v410 = v516;
                                                                                                                                                              v411 = sub_1AD63BED0();
                                                                                                                                                              v516 = v410;
                                                                                                                                                              if (!v410)
                                                                                                                                                              {
                                                                                                                                                                *((_BYTE *)v515 + v81) = v411;
                                                                                                                                                                LOBYTE(v519) = 85;
                                                                                                                                                                v412 = v516;
                                                                                                                                                                v413 = sub_1AD63BEDC();
                                                                                                                                                                v516 = v412;
                                                                                                                                                                if (!v412)
                                                                                                                                                                {
                                                                                                                                                                  v415 = v426;
                                                                                                                                                                  *v426 = v413;
                                                                                                                                                                  *((_BYTE *)v415 + 8) = v414 & 1;
                                                                                                                                                                  LOBYTE(v519) = 86;
                                                                                                                                                                  v416 = v516;
                                                                                                                                                                  v417 = sub_1AD63BEC4();
                                                                                                                                                                  v516 = v416;
                                                                                                                                                                  if (!v416)
                                                                                                                                                                  {
                                                                                                                                                                    v419 = v417;
                                                                                                                                                                    v420 = v418;
                                                                                                                                                                    (*(void (**)(char *, uint64_t))(v88 + 8))(v517, v514);
                                                                                                                                                                    v421 = v423;
                                                                                                                                                                    swift_bridgeObjectRelease();
                                                                                                                                                                    *v421 = v419;
                                                                                                                                                                    v421[1] = v420;
                                                                                                                                                                    v422 = v515;
                                                                                                                                                                    sub_1ACFFB440((uint64_t)v515, v496);
                                                                                                                                                                    __swift_destroy_boxed_opaque_existential_1((uint64_t)v518);
                                                                                                                                                                    v94 = v422;
                                                                                                                                                                    return sub_1ACFFB37C((uint64_t)v94);
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    (*(void (**)(char *, uint64_t))(v88 + 8))(v517, v514);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v518);
  v94 = v515;
  return sub_1ACFFB37C((uint64_t)v94);
}

uint64_t sub_1ACFFB37C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for MediaMetadata();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1ACFFB3B8()
{
  unint64_t result;

  result = qword_1ED2E2360;
  if (!qword_1ED2E2360)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for MediaMetadata.LargeImageContextualInfo, &type metadata for MediaMetadata.LargeImageContextualInfo);
    atomic_store(result, (unint64_t *)&qword_1ED2E2360);
  }
  return result;
}

unint64_t sub_1ACFFB3FC()
{
  unint64_t result;

  result = qword_1ED2E2B08;
  if (!qword_1ED2E2B08)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for MediaMetadata.AppleMakerNoteCamera, &type metadata for MediaMetadata.AppleMakerNoteCamera);
    atomic_store(result, (unint64_t *)&qword_1ED2E2B08);
  }
  return result;
}

uint64_t sub_1ACFFB440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for MediaMetadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1ACFFB484@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return MediaMetadata.init(from:)(a1, a2);
}

uint64_t sub_1ACFFB498(_QWORD *a1)
{
  return MediaMetadata.encode(to:)(a1);
}

BlastDoor::MediaMetadata::Context __swiftcall MediaMetadata.Context.init(requiresLargeImageInfo:)(BlastDoor::MediaMetadata::Context requiresLargeImageInfo)
{
  Swift::Bool *v1;

  *v1 = requiresLargeImageInfo.requiresLargeImageInfo;
  return requiresLargeImageInfo;
}

unint64_t sub_1ACFFB4BC()
{
  unint64_t result;

  result = qword_1EECD16C0;
  if (!qword_1EECD16C0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for MediaMetadata.AppleMakerNoteCamera, &type metadata for MediaMetadata.AppleMakerNoteCamera);
    atomic_store(result, (unint64_t *)&qword_1EECD16C0);
  }
  return result;
}

unint64_t sub_1ACFFB500(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFFB3FC();
  result = sub_1ACFF9764();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1ACFFB530()
{
  unint64_t result;

  result = qword_1ED2E2398;
  if (!qword_1ED2E2398)
  {
    result = MEMORY[0x1AF44BDF0]("Qch8\b8\t", &type metadata for MediaMetadata.Context);
    atomic_store(result, (unint64_t *)&qword_1ED2E2398);
  }
  return result;
}

unint64_t sub_1ACFFB578()
{
  unint64_t result;

  result = qword_1ED2E2390;
  if (!qword_1ED2E2390)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for MediaMetadata.Context, &type metadata for MediaMetadata.Context);
    atomic_store(result, (unint64_t *)&qword_1ED2E2390);
  }
  return result;
}

uint64_t sub_1ACFFB5BC(uint64_t a1)
{
  uint64_t result;

  result = sub_1ACFF9724(&qword_1ED2E23B0, (uint64_t (*)(uint64_t))type metadata accessor for MediaMetadata, (uint64_t)&protocol conformance descriptor for MediaMetadata);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1ACFFB5F8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1ED2E23A8, (uint64_t (*)(uint64_t))type metadata accessor for MediaMetadata, (uint64_t)&protocol conformance descriptor for MediaMetadata);
  result = sub_1ACFF9724(&qword_1ED2E23A0, (uint64_t (*)(uint64_t))type metadata accessor for MediaMetadata, (uint64_t)&protocol conformance descriptor for MediaMetadata);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for MediaMetadata(_OWORD *a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  _QWORD *v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t *v109;
  uint64_t v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  _QWORD *v121;
  _QWORD *v122;
  uint64_t v123;
  _QWORD *v124;
  _QWORD *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  _QWORD *v129;
  _QWORD *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  char *v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  _QWORD *v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  uint64_t v154;
  _QWORD *v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  _QWORD *v170;
  _QWORD *v171;
  uint64_t v172;
  _QWORD *v173;
  _QWORD *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  _QWORD *v180;
  _QWORD *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  unsigned int (*v187)(char *, uint64_t, uint64_t);
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  _QWORD *v195;
  _QWORD *v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  char *v223;
  uint64_t *v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  _QWORD *v239;
  _QWORD *v240;
  uint64_t v241;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_OWORD *)a2;
    *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1AD63B03C();
    v11 = *(_QWORD *)(v10 - 8);
    __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    v243 = v11;
    v249 = v10;
    if (__dst(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (char *)v4 + v14;
    v17 = (uint64_t)a2 + v14;
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = *(_BYTE *)(v17 + 8);
    v18 = (char *)v4 + v15;
    v19 = (uint64_t)a2 + v15;
    *(_QWORD *)v18 = *(_QWORD *)v19;
    v18[8] = *(_BYTE *)(v19 + 8);
    v20 = a3[8];
    v21 = a3[9];
    v22 = (char *)v4 + v20;
    v23 = (uint64_t)a2 + v20;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = *(_BYTE *)(v23 + 8);
    v24 = (char *)v4 + v21;
    v25 = (uint64_t)a2 + v21;
    v24[8] = *(_BYTE *)(v25 + 8);
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v26 = a3[10];
    v27 = a3[11];
    v28 = (char *)v4 + v26;
    v29 = (uint64_t)a2 + v26;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v28[8] = *(_BYTE *)(v29 + 8);
    v30 = (_QWORD *)((char *)v4 + v27);
    v31 = (uint64_t *)((char *)a2 + v27);
    v32 = v31[1];
    *v30 = *v31;
    v30[1] = v32;
    v33 = a3[12];
    v34 = a3[13];
    v35 = (_QWORD *)((char *)v4 + v33);
    v36 = (uint64_t *)((char *)a2 + v33);
    v247 = v36[1];
    *v35 = *v36;
    v35[1] = v247;
    v37 = (_QWORD *)((char *)v4 + v34);
    v38 = (uint64_t *)((char *)a2 + v34);
    v248 = v38[1];
    *v37 = *v38;
    v37[1] = v248;
    v39 = a3[14];
    v40 = a3[15];
    v41 = (char *)v4 + v39;
    v42 = (uint64_t)a2 + v39;
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v41[8] = *(_BYTE *)(v42 + 8);
    *((_BYTE *)v4 + v40) = *((_BYTE *)a2 + v40);
    v43 = a3[16];
    v44 = a3[17];
    v45 = (char *)v4 + v43;
    v46 = (uint64_t)a2 + v43;
    *(_QWORD *)v45 = *(_QWORD *)v46;
    v45[8] = *(_BYTE *)(v46 + 8);
    v47 = (char *)v4 + v44;
    v48 = (uint64_t)a2 + v44;
    *(_QWORD *)v47 = *(_QWORD *)v48;
    v47[8] = *(_BYTE *)(v48 + 8);
    v49 = a3[18];
    v50 = a3[19];
    v51 = (char *)v4 + v49;
    v52 = (uint64_t)a2 + v49;
    *(_QWORD *)v51 = *(_QWORD *)v52;
    v51[8] = *(_BYTE *)(v52 + 8);
    v53 = (char *)v4 + v50;
    v54 = (uint64_t)a2 + v50;
    *(_QWORD *)v53 = *(_QWORD *)v54;
    v53[8] = *(_BYTE *)(v54 + 8);
    v55 = a3[20];
    v56 = a3[21];
    v57 = (char *)v4 + v55;
    v58 = (uint64_t *)((char *)a2 + v55);
    v59 = *v58;
    v57[8] = *((_BYTE *)v58 + 8);
    *(_QWORD *)v57 = v59;
    v60 = (char *)v4 + v56;
    v61 = (uint64_t)a2 + v56;
    *(_QWORD *)v60 = *(_QWORD *)v61;
    v60[8] = *(_BYTE *)(v61 + 8);
    v62 = a3[22];
    v63 = a3[23];
    v64 = (char *)v4 + v62;
    v65 = (uint64_t)a2 + v62;
    *(_QWORD *)v64 = *(_QWORD *)v65;
    v64[8] = *(_BYTE *)(v65 + 8);
    v66 = (char *)v4 + v63;
    v67 = (uint64_t)a2 + v63;
    *(_QWORD *)v66 = *(_QWORD *)v67;
    v66[8] = *(_BYTE *)(v67 + 8);
    v68 = a3[24];
    v69 = a3[25];
    v70 = (_QWORD *)((char *)v4 + v68);
    v71 = (uint64_t *)((char *)a2 + v68);
    v245 = v71[1];
    *v70 = *v71;
    v70[1] = v245;
    v72 = (_QWORD *)((char *)v4 + v69);
    v73 = (uint64_t *)((char *)a2 + v69);
    v246 = v73[1];
    *v72 = *v73;
    v72[1] = v246;
    v74 = a3[26];
    v75 = a3[27];
    v76 = (char *)v4 + v74;
    v77 = (uint64_t)a2 + v74;
    *(_QWORD *)v76 = *(_QWORD *)v77;
    v76[8] = *(_BYTE *)(v77 + 8);
    v78 = (char *)v4 + v75;
    v79 = (uint64_t)a2 + v75;
    *(_QWORD *)v78 = *(_QWORD *)v79;
    v78[8] = *(_BYTE *)(v79 + 8);
    v80 = a3[28];
    v81 = a3[29];
    v82 = (char *)v4 + v80;
    v83 = (uint64_t)a2 + v80;
    *(_QWORD *)v82 = *(_QWORD *)v83;
    v82[8] = *(_BYTE *)(v83 + 8);
    v84 = (char *)v4 + v81;
    v85 = (uint64_t)a2 + v81;
    *(_QWORD *)v84 = *(_QWORD *)v85;
    v84[8] = *(_BYTE *)(v85 + 8);
    v86 = a3[30];
    v87 = a3[31];
    v88 = (char *)v4 + v86;
    v89 = (uint64_t *)((char *)a2 + v86);
    v90 = *v89;
    v88[8] = *((_BYTE *)v89 + 8);
    *(_QWORD *)v88 = v90;
    *((_BYTE *)v4 + v87) = *((_BYTE *)a2 + v87);
    v91 = a3[33];
    *((_BYTE *)v4 + a3[32]) = *((_BYTE *)a2 + a3[32]);
    v92 = (_QWORD *)((char *)v4 + v91);
    v93 = (uint64_t *)((char *)a2 + v91);
    v244 = v93[1];
    *v92 = *v93;
    v92[1] = v244;
    v94 = a3[34];
    v95 = a3[35];
    v96 = (char *)v4 + v94;
    v97 = (uint64_t)a2 + v94;
    *(_QWORD *)v96 = *(_QWORD *)v97;
    v96[8] = *(_BYTE *)(v97 + 8);
    v98 = (char *)v4 + v95;
    v99 = (uint64_t)a2 + v95;
    *(_QWORD *)v98 = *(_QWORD *)v99;
    v98[8] = *(_BYTE *)(v99 + 8);
    v100 = a3[36];
    v101 = a3[37];
    v102 = (char *)v4 + v100;
    v103 = (uint64_t)a2 + v100;
    *(_QWORD *)v102 = *(_QWORD *)v103;
    v102[8] = *(_BYTE *)(v103 + 8);
    v104 = (char *)v4 + v101;
    v105 = (uint64_t)a2 + v101;
    *(_QWORD *)v104 = *(_QWORD *)v105;
    v104[8] = *(_BYTE *)(v105 + 8);
    v106 = a3[38];
    v107 = a3[39];
    v108 = (char *)v4 + v106;
    v109 = (uint64_t *)((char *)a2 + v106);
    v110 = *v109;
    v108[8] = *((_BYTE *)v109 + 8);
    *(_QWORD *)v108 = v110;
    v111 = (char *)v4 + v107;
    v112 = (uint64_t)a2 + v107;
    *(_QWORD *)v111 = *(_QWORD *)v112;
    v111[8] = *(_BYTE *)(v112 + 8);
    v113 = a3[40];
    v114 = a3[41];
    v115 = (char *)v4 + v113;
    v116 = (uint64_t)a2 + v113;
    *(_QWORD *)v115 = *(_QWORD *)v116;
    v115[8] = *(_BYTE *)(v116 + 8);
    v117 = (char *)v4 + v114;
    v118 = (uint64_t)a2 + v114;
    *(_QWORD *)v117 = *(_QWORD *)v118;
    v117[8] = *(_BYTE *)(v118 + 8);
    v119 = a3[42];
    v120 = a3[43];
    v121 = (_QWORD *)((char *)v4 + v119);
    v122 = (uint64_t *)((char *)a2 + v119);
    v123 = v122[1];
    *v121 = *v122;
    v121[1] = v123;
    v124 = (_QWORD *)((char *)v4 + v120);
    v125 = (uint64_t *)((char *)a2 + v120);
    v126 = v125[1];
    *v124 = *v125;
    v124[1] = v126;
    v127 = a3[44];
    v128 = a3[45];
    v129 = (_QWORD *)((char *)v4 + v127);
    v130 = (uint64_t *)((char *)a2 + v127);
    v131 = v130[1];
    *v129 = *v130;
    v129[1] = v131;
    *((_BYTE *)v4 + v128) = *((_BYTE *)a2 + v128);
    v132 = a3[46];
    v133 = a3[47];
    v134 = (char *)v4 + v132;
    v135 = (uint64_t)a2 + v132;
    *(_QWORD *)v134 = *(_QWORD *)v135;
    v134[8] = *(_BYTE *)(v135 + 8);
    v136 = (char *)v4 + v133;
    v137 = (uint64_t)a2 + v133;
    *(_QWORD *)v136 = *(_QWORD *)v137;
    v136[8] = *(_BYTE *)(v137 + 8);
    v138 = a3[48];
    v139 = a3[49];
    v140 = (_QWORD *)((char *)v4 + v138);
    v141 = (uint64_t *)((char *)a2 + v138);
    v142 = v141[1];
    *v140 = *v141;
    v140[1] = v142;
    v143 = (char *)v4 + v139;
    v144 = (uint64_t)a2 + v139;
    *(_QWORD *)v143 = *(_QWORD *)v144;
    v143[8] = *(_BYTE *)(v144 + 8);
    v145 = a3[50];
    v146 = a3[51];
    v147 = (char *)v4 + v145;
    v148 = (uint64_t)a2 + v145;
    *(_QWORD *)v147 = *(_QWORD *)v148;
    v147[8] = *(_BYTE *)(v148 + 8);
    v149 = (char *)v4 + v146;
    v150 = (uint64_t)a2 + v146;
    *(_QWORD *)v149 = *(_QWORD *)v150;
    v149[8] = *(_BYTE *)(v150 + 8);
    v151 = a3[52];
    v152 = a3[53];
    v153 = (char *)v4 + v151;
    v154 = (uint64_t)a2 + v151;
    *(_QWORD *)v153 = *(_QWORD *)v154;
    v153[8] = *(_BYTE *)(v154 + 8);
    v155 = (_QWORD *)((char *)v4 + v152);
    v156 = (uint64_t *)((char *)a2 + v152);
    v157 = v156[1];
    *v155 = *v156;
    v155[1] = v157;
    v158 = a3[54];
    v159 = (char *)v4 + v158;
    v160 = (char *)a2 + v158;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__dst(v160, 1, v249))
    {
      v161 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v159, v160, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v243 + 16))(v159, v160, v249);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v243 + 56))(v159, 0, 1, v249);
    }
    v162 = a3[55];
    v163 = a3[56];
    v164 = (char *)v4 + v162;
    v165 = (uint64_t)a2 + v162;
    *(_QWORD *)v164 = *(_QWORD *)v165;
    v164[8] = *(_BYTE *)(v165 + 8);
    v166 = (char *)v4 + v163;
    v167 = (uint64_t)a2 + v163;
    *(_QWORD *)v166 = *(_QWORD *)v167;
    v166[8] = *(_BYTE *)(v167 + 8);
    v168 = a3[57];
    v169 = a3[58];
    v170 = (_QWORD *)((char *)v4 + v168);
    v171 = (uint64_t *)((char *)a2 + v168);
    v172 = v171[1];
    *v170 = *v171;
    v170[1] = v172;
    v173 = (_QWORD *)((char *)v4 + v169);
    v174 = (uint64_t *)((char *)a2 + v169);
    v175 = v174[1];
    *v173 = *v174;
    v173[1] = v175;
    v176 = a3[59];
    v177 = a3[60];
    v178 = (char *)v4 + v176;
    v179 = (uint64_t)a2 + v176;
    *(_QWORD *)v178 = *(_QWORD *)v179;
    v178[8] = *(_BYTE *)(v179 + 8);
    v180 = (_QWORD *)((char *)v4 + v177);
    v181 = (uint64_t *)((char *)a2 + v177);
    v182 = v181[1];
    *v180 = *v181;
    v180[1] = v182;
    v183 = a3[62];
    *((_BYTE *)v4 + a3[61]) = *((_BYTE *)a2 + a3[61]);
    __dsta = (char *)v4 + v183;
    v184 = (char *)a2 + v183;
    v185 = sub_1AD63B084();
    v186 = *(_QWORD *)(v185 - 8);
    v187 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v187(v184, 1, v185))
    {
      v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      memcpy(__dsta, v184, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v186 + 16))(__dsta, v184, v185);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v186 + 56))(__dsta, 0, 1, v185);
    }
    v189 = a3[63];
    v190 = a3[64];
    v191 = (_QWORD *)((char *)v4 + v189);
    v192 = (uint64_t *)((char *)a2 + v189);
    v193 = v192[1];
    *v191 = *v192;
    v191[1] = v193;
    *((_BYTE *)v4 + v190) = *((_BYTE *)a2 + v190);
    v194 = a3[65];
    v195 = (_QWORD *)((char *)v4 + v194);
    v196 = (uint64_t *)((char *)a2 + v194);
    v197 = v196[1];
    *v195 = *v196;
    v195[1] = v197;
    v198 = a3[66];
    v199 = (char *)v4 + v198;
    v200 = (uint64_t)a2 + v198;
    *(_QWORD *)v199 = *(_QWORD *)v200;
    v199[8] = *(_BYTE *)(v200 + 8);
    v201 = a3[67];
    v202 = (char *)v4 + v201;
    v203 = (uint64_t)a2 + v201;
    *(_QWORD *)v202 = *(_QWORD *)v203;
    v202[8] = *(_BYTE *)(v203 + 8);
    v204 = a3[68];
    v205 = (char *)v4 + v204;
    v206 = (uint64_t)a2 + v204;
    *(_QWORD *)v205 = *(_QWORD *)v206;
    v205[8] = *(_BYTE *)(v206 + 8);
    v207 = a3[69];
    v208 = (char *)v4 + v207;
    v209 = (uint64_t)a2 + v207;
    *(_QWORD *)v208 = *(_QWORD *)v209;
    v208[8] = *(_BYTE *)(v209 + 8);
    *((_BYTE *)v4 + a3[70]) = *((_BYTE *)a2 + a3[70]);
    v210 = a3[71];
    v211 = (char *)v4 + v210;
    v212 = (uint64_t)a2 + v210;
    *(_QWORD *)v211 = *(_QWORD *)v212;
    v211[8] = *(_BYTE *)(v212 + 8);
    v213 = a3[72];
    v214 = (char *)v4 + v213;
    v215 = (uint64_t)a2 + v213;
    *(_QWORD *)v214 = *(_QWORD *)v215;
    v214[8] = *(_BYTE *)(v215 + 8);
    v216 = a3[73];
    v217 = (char *)v4 + v216;
    v218 = (uint64_t)a2 + v216;
    *(_QWORD *)v217 = *(_QWORD *)v218;
    v217[8] = *(_BYTE *)(v218 + 8);
    v219 = a3[74];
    v220 = (char *)v4 + v219;
    v221 = (uint64_t)a2 + v219;
    *(_QWORD *)v220 = *(_QWORD *)v221;
    v220[8] = *(_BYTE *)(v221 + 8);
    v222 = a3[75];
    v223 = (char *)v4 + v222;
    v224 = (uint64_t *)((char *)a2 + v222);
    v225 = *v224;
    v223[8] = *((_BYTE *)v224 + 8);
    *(_QWORD *)v223 = v225;
    *((_BYTE *)v4 + a3[76]) = *((_BYTE *)a2 + a3[76]);
    v226 = a3[77];
    v227 = (char *)v4 + v226;
    v228 = (uint64_t)a2 + v226;
    *(_QWORD *)v227 = *(_QWORD *)v228;
    v227[8] = *(_BYTE *)(v228 + 8);
    *((_BYTE *)v4 + a3[78]) = *((_BYTE *)a2 + a3[78]);
    *((_BYTE *)v4 + a3[79]) = *((_BYTE *)a2 + a3[79]);
    *((_BYTE *)v4 + a3[80]) = *((_BYTE *)a2 + a3[80]);
    v229 = a3[81];
    v230 = (char *)v4 + v229;
    v231 = (uint64_t)a2 + v229;
    *(_QWORD *)v230 = *(_QWORD *)v231;
    v230[8] = *(_BYTE *)(v231 + 8);
    *((_BYTE *)v4 + a3[82]) = *((_BYTE *)a2 + a3[82]);
    *((_BYTE *)v4 + a3[83]) = *((_BYTE *)a2 + a3[83]);
    v232 = a3[84];
    v233 = (char *)v4 + v232;
    v234 = (uint64_t)a2 + v232;
    *(_QWORD *)v233 = *(_QWORD *)v234;
    v233[8] = *(_BYTE *)(v234 + 8);
    *((_BYTE *)v4 + a3[85]) = *((_BYTE *)a2 + a3[85]);
    *((_BYTE *)v4 + a3[86]) = *((_BYTE *)a2 + a3[86]);
    *((_BYTE *)v4 + a3[87]) = *((_BYTE *)a2 + a3[87]);
    *((_BYTE *)v4 + a3[88]) = *((_BYTE *)a2 + a3[88]);
    v235 = a3[89];
    v236 = (char *)v4 + v235;
    v237 = (uint64_t)a2 + v235;
    *(_QWORD *)v236 = *(_QWORD *)v237;
    v236[8] = *(_BYTE *)(v237 + 8);
    v238 = a3[90];
    v239 = (_QWORD *)((char *)v4 + v238);
    v240 = (uint64_t *)((char *)a2 + v238);
    v241 = v240[1];
    *v239 = *v240;
    v239[1] = v241;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for MediaMetadata(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1 + a2[5];
  v5 = sub_1AD63B03C();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v8 = a1 + a2[54];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + a2[62];
  v10 = sub_1AD63B084();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_OWORD *initializeWithCopy for MediaMetadata(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  _QWORD *v90;
  _QWORD *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  _QWORD *v122;
  _QWORD *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  _QWORD *v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  char *v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  char *v147;
  char *v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  _QWORD *v153;
  _QWORD *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  _QWORD *v168;
  _QWORD *v169;
  uint64_t v170;
  _QWORD *v171;
  _QWORD *v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  char *v176;
  char *v177;
  _QWORD *v178;
  _QWORD *v179;
  uint64_t v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  unsigned int (*v185)(char *, uint64_t, uint64_t);
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  _QWORD *v189;
  _QWORD *v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  char *v206;
  char *v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  _QWORD *v237;
  _QWORD *v238;
  uint64_t v239;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  char *__dsta;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63B03C();
  v10 = *(_QWORD *)(v9 - 8);
  __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v241 = v10;
  v247 = v9;
  if (__dst(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (char *)a1 + v12;
  v15 = (char *)a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = (char *)a1 + v13;
  v17 = (char *)a2 + v13;
  *(_QWORD *)v16 = *(_QWORD *)v17;
  v16[8] = v17[8];
  v18 = a3[8];
  v19 = a3[9];
  v20 = (char *)a1 + v18;
  v21 = (char *)a2 + v18;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = (char *)a1 + v19;
  v23 = (char *)a2 + v19;
  v22[8] = v23[8];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v24 = a3[10];
  v25 = a3[11];
  v26 = (char *)a1 + v24;
  v27 = (char *)a2 + v24;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = (_QWORD *)((char *)a1 + v25);
  v29 = (_QWORD *)((char *)a2 + v25);
  v30 = v29[1];
  *v28 = *v29;
  v28[1] = v30;
  v31 = a3[12];
  v32 = a3[13];
  v33 = (_QWORD *)((char *)a1 + v31);
  v34 = (_QWORD *)((char *)a2 + v31);
  v245 = v34[1];
  *v33 = *v34;
  v33[1] = v245;
  v35 = (_QWORD *)((char *)a1 + v32);
  v36 = (_QWORD *)((char *)a2 + v32);
  v246 = v36[1];
  *v35 = *v36;
  v35[1] = v246;
  v37 = a3[14];
  v38 = a3[15];
  v39 = (char *)a1 + v37;
  v40 = (char *)a2 + v37;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  v39[8] = v40[8];
  *((_BYTE *)a1 + v38) = *((_BYTE *)a2 + v38);
  v41 = a3[16];
  v42 = a3[17];
  v43 = (char *)a1 + v41;
  v44 = (char *)a2 + v41;
  *(_QWORD *)v43 = *(_QWORD *)v44;
  v43[8] = v44[8];
  v45 = (char *)a1 + v42;
  v46 = (char *)a2 + v42;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v45[8] = v46[8];
  v47 = a3[18];
  v48 = a3[19];
  v49 = (char *)a1 + v47;
  v50 = (char *)a2 + v47;
  *(_QWORD *)v49 = *(_QWORD *)v50;
  v49[8] = v50[8];
  v51 = (char *)a1 + v48;
  v52 = (char *)a2 + v48;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  v51[8] = v52[8];
  v53 = a3[20];
  v54 = a3[21];
  v55 = (char *)a1 + v53;
  v56 = (char *)a2 + v53;
  v57 = *(_QWORD *)v56;
  v55[8] = v56[8];
  *(_QWORD *)v55 = v57;
  v58 = (char *)a1 + v54;
  v59 = (char *)a2 + v54;
  *(_QWORD *)v58 = *(_QWORD *)v59;
  v58[8] = v59[8];
  v60 = a3[22];
  v61 = a3[23];
  v62 = (char *)a1 + v60;
  v63 = (char *)a2 + v60;
  *(_QWORD *)v62 = *(_QWORD *)v63;
  v62[8] = v63[8];
  v64 = (char *)a1 + v61;
  v65 = (char *)a2 + v61;
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v64[8] = v65[8];
  v66 = a3[24];
  v67 = a3[25];
  v68 = (_QWORD *)((char *)a1 + v66);
  v69 = (_QWORD *)((char *)a2 + v66);
  v243 = v69[1];
  *v68 = *v69;
  v68[1] = v243;
  v70 = (_QWORD *)((char *)a1 + v67);
  v71 = (_QWORD *)((char *)a2 + v67);
  v244 = v71[1];
  *v70 = *v71;
  v70[1] = v244;
  v72 = a3[26];
  v73 = a3[27];
  v74 = (char *)a1 + v72;
  v75 = (char *)a2 + v72;
  *(_QWORD *)v74 = *(_QWORD *)v75;
  v74[8] = v75[8];
  v76 = (char *)a1 + v73;
  v77 = (char *)a2 + v73;
  *(_QWORD *)v76 = *(_QWORD *)v77;
  v76[8] = v77[8];
  v78 = a3[28];
  v79 = a3[29];
  v80 = (char *)a1 + v78;
  v81 = (char *)a2 + v78;
  *(_QWORD *)v80 = *(_QWORD *)v81;
  v80[8] = v81[8];
  v82 = (char *)a1 + v79;
  v83 = (char *)a2 + v79;
  *(_QWORD *)v82 = *(_QWORD *)v83;
  v82[8] = v83[8];
  v84 = a3[30];
  v85 = a3[31];
  v86 = (char *)a1 + v84;
  v87 = (char *)a2 + v84;
  v88 = *(_QWORD *)v87;
  v86[8] = v87[8];
  *(_QWORD *)v86 = v88;
  *((_BYTE *)a1 + v85) = *((_BYTE *)a2 + v85);
  v89 = a3[33];
  *((_BYTE *)a1 + a3[32]) = *((_BYTE *)a2 + a3[32]);
  v90 = (_QWORD *)((char *)a1 + v89);
  v91 = (_QWORD *)((char *)a2 + v89);
  v242 = v91[1];
  *v90 = *v91;
  v90[1] = v242;
  v92 = a3[34];
  v93 = a3[35];
  v94 = (char *)a1 + v92;
  v95 = (char *)a2 + v92;
  *(_QWORD *)v94 = *(_QWORD *)v95;
  v94[8] = v95[8];
  v96 = (char *)a1 + v93;
  v97 = (char *)a2 + v93;
  *(_QWORD *)v96 = *(_QWORD *)v97;
  v96[8] = v97[8];
  v98 = a3[36];
  v99 = a3[37];
  v100 = (char *)a1 + v98;
  v101 = (char *)a2 + v98;
  *(_QWORD *)v100 = *(_QWORD *)v101;
  v100[8] = v101[8];
  v102 = (char *)a1 + v99;
  v103 = (char *)a2 + v99;
  *(_QWORD *)v102 = *(_QWORD *)v103;
  v102[8] = v103[8];
  v104 = a3[38];
  v105 = a3[39];
  v106 = (char *)a1 + v104;
  v107 = (char *)a2 + v104;
  v108 = *(_QWORD *)v107;
  v106[8] = v107[8];
  *(_QWORD *)v106 = v108;
  v109 = (char *)a1 + v105;
  v110 = (char *)a2 + v105;
  *(_QWORD *)v109 = *(_QWORD *)v110;
  v109[8] = v110[8];
  v111 = a3[40];
  v112 = a3[41];
  v113 = (char *)a1 + v111;
  v114 = (char *)a2 + v111;
  *(_QWORD *)v113 = *(_QWORD *)v114;
  v113[8] = v114[8];
  v115 = (char *)a1 + v112;
  v116 = (char *)a2 + v112;
  *(_QWORD *)v115 = *(_QWORD *)v116;
  v115[8] = v116[8];
  v117 = a3[42];
  v118 = a3[43];
  v119 = (_QWORD *)((char *)a1 + v117);
  v120 = (_QWORD *)((char *)a2 + v117);
  v121 = v120[1];
  *v119 = *v120;
  v119[1] = v121;
  v122 = (_QWORD *)((char *)a1 + v118);
  v123 = (_QWORD *)((char *)a2 + v118);
  v124 = v123[1];
  *v122 = *v123;
  v122[1] = v124;
  v125 = a3[44];
  v126 = a3[45];
  v127 = (_QWORD *)((char *)a1 + v125);
  v128 = (_QWORD *)((char *)a2 + v125);
  v129 = v128[1];
  *v127 = *v128;
  v127[1] = v129;
  *((_BYTE *)a1 + v126) = *((_BYTE *)a2 + v126);
  v130 = a3[46];
  v131 = a3[47];
  v132 = (char *)a1 + v130;
  v133 = (char *)a2 + v130;
  *(_QWORD *)v132 = *(_QWORD *)v133;
  v132[8] = v133[8];
  v134 = (char *)a1 + v131;
  v135 = (char *)a2 + v131;
  *(_QWORD *)v134 = *(_QWORD *)v135;
  v134[8] = v135[8];
  v136 = a3[48];
  v137 = a3[49];
  v138 = (_QWORD *)((char *)a1 + v136);
  v139 = (_QWORD *)((char *)a2 + v136);
  v140 = v139[1];
  *v138 = *v139;
  v138[1] = v140;
  v141 = (char *)a1 + v137;
  v142 = (char *)a2 + v137;
  *(_QWORD *)v141 = *(_QWORD *)v142;
  v141[8] = v142[8];
  v143 = a3[50];
  v144 = a3[51];
  v145 = (char *)a1 + v143;
  v146 = (char *)a2 + v143;
  *(_QWORD *)v145 = *(_QWORD *)v146;
  v145[8] = v146[8];
  v147 = (char *)a1 + v144;
  v148 = (char *)a2 + v144;
  *(_QWORD *)v147 = *(_QWORD *)v148;
  v147[8] = v148[8];
  v149 = a3[52];
  v150 = a3[53];
  v151 = (char *)a1 + v149;
  v152 = (char *)a2 + v149;
  *(_QWORD *)v151 = *(_QWORD *)v152;
  v151[8] = v152[8];
  v153 = (_QWORD *)((char *)a1 + v150);
  v154 = (_QWORD *)((char *)a2 + v150);
  v155 = v154[1];
  *v153 = *v154;
  v153[1] = v155;
  v156 = a3[54];
  v157 = (char *)a1 + v156;
  v158 = (char *)a2 + v156;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__dst(v158, 1, v247))
  {
    v159 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v157, v158, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v241 + 16))(v157, v158, v247);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v241 + 56))(v157, 0, 1, v247);
  }
  v160 = a3[55];
  v161 = a3[56];
  v162 = (char *)a1 + v160;
  v163 = (char *)a2 + v160;
  *(_QWORD *)v162 = *(_QWORD *)v163;
  v162[8] = v163[8];
  v164 = (char *)a1 + v161;
  v165 = (char *)a2 + v161;
  *(_QWORD *)v164 = *(_QWORD *)v165;
  v164[8] = v165[8];
  v166 = a3[57];
  v167 = a3[58];
  v168 = (_QWORD *)((char *)a1 + v166);
  v169 = (_QWORD *)((char *)a2 + v166);
  v170 = v169[1];
  *v168 = *v169;
  v168[1] = v170;
  v171 = (_QWORD *)((char *)a1 + v167);
  v172 = (_QWORD *)((char *)a2 + v167);
  v173 = v172[1];
  *v171 = *v172;
  v171[1] = v173;
  v174 = a3[59];
  v175 = a3[60];
  v176 = (char *)a1 + v174;
  v177 = (char *)a2 + v174;
  *(_QWORD *)v176 = *(_QWORD *)v177;
  v176[8] = v177[8];
  v178 = (_QWORD *)((char *)a1 + v175);
  v179 = (_QWORD *)((char *)a2 + v175);
  v180 = v179[1];
  *v178 = *v179;
  v178[1] = v180;
  v181 = a3[62];
  *((_BYTE *)a1 + a3[61]) = *((_BYTE *)a2 + a3[61]);
  __dsta = (char *)a1 + v181;
  v182 = (char *)a2 + v181;
  v183 = sub_1AD63B084();
  v184 = *(_QWORD *)(v183 - 8);
  v185 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v184 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v185(v182, 1, v183))
  {
    v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(__dsta, v182, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v184 + 16))(__dsta, v182, v183);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v184 + 56))(__dsta, 0, 1, v183);
  }
  v187 = a3[63];
  v188 = a3[64];
  v189 = (_QWORD *)((char *)a1 + v187);
  v190 = (_QWORD *)((char *)a2 + v187);
  v191 = v190[1];
  *v189 = *v190;
  v189[1] = v191;
  *((_BYTE *)a1 + v188) = *((_BYTE *)a2 + v188);
  v192 = a3[65];
  v193 = (_QWORD *)((char *)a1 + v192);
  v194 = (_QWORD *)((char *)a2 + v192);
  v195 = v194[1];
  *v193 = *v194;
  v193[1] = v195;
  v196 = a3[66];
  v197 = (char *)a1 + v196;
  v198 = (char *)a2 + v196;
  *(_QWORD *)v197 = *(_QWORD *)v198;
  v197[8] = v198[8];
  v199 = a3[67];
  v200 = (char *)a1 + v199;
  v201 = (char *)a2 + v199;
  *(_QWORD *)v200 = *(_QWORD *)v201;
  v200[8] = v201[8];
  v202 = a3[68];
  v203 = (char *)a1 + v202;
  v204 = (char *)a2 + v202;
  *(_QWORD *)v203 = *(_QWORD *)v204;
  v203[8] = v204[8];
  v205 = a3[69];
  v206 = (char *)a1 + v205;
  v207 = (char *)a2 + v205;
  *(_QWORD *)v206 = *(_QWORD *)v207;
  v206[8] = v207[8];
  *((_BYTE *)a1 + a3[70]) = *((_BYTE *)a2 + a3[70]);
  v208 = a3[71];
  v209 = (char *)a1 + v208;
  v210 = (char *)a2 + v208;
  *(_QWORD *)v209 = *(_QWORD *)v210;
  v209[8] = v210[8];
  v211 = a3[72];
  v212 = (char *)a1 + v211;
  v213 = (char *)a2 + v211;
  *(_QWORD *)v212 = *(_QWORD *)v213;
  v212[8] = v213[8];
  v214 = a3[73];
  v215 = (char *)a1 + v214;
  v216 = (char *)a2 + v214;
  *(_QWORD *)v215 = *(_QWORD *)v216;
  v215[8] = v216[8];
  v217 = a3[74];
  v218 = (char *)a1 + v217;
  v219 = (char *)a2 + v217;
  *(_QWORD *)v218 = *(_QWORD *)v219;
  v218[8] = v219[8];
  v220 = a3[75];
  v221 = (char *)a1 + v220;
  v222 = (char *)a2 + v220;
  v223 = *(_QWORD *)v222;
  v221[8] = v222[8];
  *(_QWORD *)v221 = v223;
  *((_BYTE *)a1 + a3[76]) = *((_BYTE *)a2 + a3[76]);
  v224 = a3[77];
  v225 = (char *)a1 + v224;
  v226 = (char *)a2 + v224;
  *(_QWORD *)v225 = *(_QWORD *)v226;
  v225[8] = v226[8];
  *((_BYTE *)a1 + a3[78]) = *((_BYTE *)a2 + a3[78]);
  *((_BYTE *)a1 + a3[79]) = *((_BYTE *)a2 + a3[79]);
  *((_BYTE *)a1 + a3[80]) = *((_BYTE *)a2 + a3[80]);
  v227 = a3[81];
  v228 = (char *)a1 + v227;
  v229 = (char *)a2 + v227;
  *(_QWORD *)v228 = *(_QWORD *)v229;
  v228[8] = v229[8];
  *((_BYTE *)a1 + a3[82]) = *((_BYTE *)a2 + a3[82]);
  *((_BYTE *)a1 + a3[83]) = *((_BYTE *)a2 + a3[83]);
  v230 = a3[84];
  v231 = (char *)a1 + v230;
  v232 = (char *)a2 + v230;
  *(_QWORD *)v231 = *(_QWORD *)v232;
  v231[8] = v232[8];
  *((_BYTE *)a1 + a3[85]) = *((_BYTE *)a2 + a3[85]);
  *((_BYTE *)a1 + a3[86]) = *((_BYTE *)a2 + a3[86]);
  *((_BYTE *)a1 + a3[87]) = *((_BYTE *)a2 + a3[87]);
  *((_BYTE *)a1 + a3[88]) = *((_BYTE *)a2 + a3[88]);
  v233 = a3[89];
  v234 = (char *)a1 + v233;
  v235 = (char *)a2 + v233;
  *(_QWORD *)v234 = *(_QWORD *)v235;
  v234[8] = v235[8];
  v236 = a3[90];
  v237 = (_QWORD *)((char *)a1 + v236);
  v238 = (_QWORD *)((char *)a2 + v236);
  v239 = v238[1];
  *v237 = *v238;
  v237[1] = v239;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_OWORD *assignWithCopy for MediaMetadata(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  _QWORD *v83;
  uint64_t v84;
  _QWORD *v85;
  _QWORD *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  _QWORD *v108;
  _QWORD *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  _QWORD *v149;
  _QWORD *v150;
  uint64_t v151;
  char *v152;
  char *v153;
  char v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  uint64_t v159;
  _QWORD *v160;
  _QWORD *v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  _QWORD *v179;
  _QWORD *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  int v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  _QWORD *v197;
  uint64_t v198;
  _QWORD *v199;
  _QWORD *v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  _QWORD *v206;
  _QWORD *v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t (*v213)(char *, uint64_t, uint64_t);
  int v214;
  int v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  _QWORD *v219;
  uint64_t v220;
  _QWORD *v221;
  _QWORD *v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  _QWORD *v276;
  _QWORD *v277;

  v6 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  *a1 = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63B03C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[6];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *(_QWORD *)v18;
  v17[8] = v18[8];
  *(_QWORD *)v17 = v19;
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *(_QWORD *)v22;
  v21[8] = v22[8];
  *(_QWORD *)v21 = v23;
  v24 = a3[8];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = *(_QWORD *)v26;
  v25[8] = v26[8];
  *(_QWORD *)v25 = v27;
  v28 = a3[9];
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = *(_QWORD *)v30;
  v29[8] = v30[8];
  *(_QWORD *)v29 = v31;
  v32 = a3[10];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = *(_QWORD *)v34;
  v33[8] = v34[8];
  *(_QWORD *)v33 = v35;
  v36 = a3[11];
  v37 = (_QWORD *)((char *)a1 + v36);
  v38 = (_QWORD *)((char *)a2 + v36);
  *v37 = *v38;
  v37[1] = v38[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v39 = a3[12];
  v40 = (_QWORD *)((char *)a1 + v39);
  v41 = (_QWORD *)((char *)a2 + v39);
  *v40 = *v41;
  v40[1] = v41[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = a3[13];
  v43 = (_QWORD *)((char *)a1 + v42);
  v44 = (_QWORD *)((char *)a2 + v42);
  *v43 = *v44;
  v43[1] = v44[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v45 = a3[14];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = *(_QWORD *)v47;
  v46[8] = v47[8];
  *(_QWORD *)v46 = v48;
  *((_BYTE *)a1 + a3[15]) = *((_BYTE *)a2 + a3[15]);
  v49 = a3[16];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = *(_QWORD *)v51;
  v50[8] = v51[8];
  *(_QWORD *)v50 = v52;
  v53 = a3[17];
  v54 = (char *)a1 + v53;
  v55 = (char *)a2 + v53;
  v56 = *(_QWORD *)v55;
  v54[8] = v55[8];
  *(_QWORD *)v54 = v56;
  v57 = a3[18];
  v58 = (char *)a1 + v57;
  v59 = (char *)a2 + v57;
  v60 = *(_QWORD *)v59;
  v58[8] = v59[8];
  *(_QWORD *)v58 = v60;
  v61 = a3[19];
  v62 = (char *)a1 + v61;
  v63 = (char *)a2 + v61;
  v64 = *(_QWORD *)v63;
  v62[8] = v63[8];
  *(_QWORD *)v62 = v64;
  v65 = a3[20];
  v66 = (char *)a1 + v65;
  v67 = (char *)a2 + v65;
  v68 = *(_QWORD *)v67;
  v66[8] = v67[8];
  *(_QWORD *)v66 = v68;
  v69 = a3[21];
  v70 = (char *)a1 + v69;
  v71 = (char *)a2 + v69;
  v72 = *(_QWORD *)v71;
  v70[8] = v71[8];
  *(_QWORD *)v70 = v72;
  v73 = a3[22];
  v74 = (char *)a1 + v73;
  v75 = (char *)a2 + v73;
  v76 = *(_QWORD *)v75;
  v74[8] = v75[8];
  *(_QWORD *)v74 = v76;
  v77 = a3[23];
  v78 = (char *)a1 + v77;
  v79 = (char *)a2 + v77;
  v80 = *(_QWORD *)v79;
  v78[8] = v79[8];
  *(_QWORD *)v78 = v80;
  v81 = a3[24];
  v82 = (_QWORD *)((char *)a1 + v81);
  v83 = (_QWORD *)((char *)a2 + v81);
  *v82 = *v83;
  v82[1] = v83[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v84 = a3[25];
  v85 = (_QWORD *)((char *)a1 + v84);
  v86 = (_QWORD *)((char *)a2 + v84);
  *v85 = *v86;
  v85[1] = v86[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v87 = a3[26];
  v88 = (char *)a1 + v87;
  v89 = (char *)a2 + v87;
  v90 = *(_QWORD *)v89;
  v88[8] = v89[8];
  *(_QWORD *)v88 = v90;
  v91 = a3[27];
  v92 = (char *)a1 + v91;
  v93 = (char *)a2 + v91;
  v94 = *(_QWORD *)v93;
  v92[8] = v93[8];
  *(_QWORD *)v92 = v94;
  v95 = a3[28];
  v96 = (char *)a1 + v95;
  v97 = (char *)a2 + v95;
  v98 = *(_QWORD *)v97;
  v96[8] = v97[8];
  *(_QWORD *)v96 = v98;
  v99 = a3[29];
  v100 = (char *)a1 + v99;
  v101 = (char *)a2 + v99;
  v102 = *(_QWORD *)v101;
  v100[8] = v101[8];
  *(_QWORD *)v100 = v102;
  v103 = a3[30];
  v104 = (char *)a1 + v103;
  v105 = (char *)a2 + v103;
  v106 = *(_QWORD *)v105;
  v104[8] = v105[8];
  *(_QWORD *)v104 = v106;
  *((_BYTE *)a1 + a3[31]) = *((_BYTE *)a2 + a3[31]);
  *((_BYTE *)a1 + a3[32]) = *((_BYTE *)a2 + a3[32]);
  v107 = a3[33];
  v108 = (_QWORD *)((char *)a1 + v107);
  v109 = (_QWORD *)((char *)a2 + v107);
  *v108 = *v109;
  v108[1] = v109[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v110 = a3[34];
  v111 = (char *)a1 + v110;
  v112 = (char *)a2 + v110;
  v113 = *(_QWORD *)v112;
  v111[8] = v112[8];
  *(_QWORD *)v111 = v113;
  v114 = a3[35];
  v115 = (char *)a1 + v114;
  v116 = (char *)a2 + v114;
  v117 = *(_QWORD *)v116;
  v115[8] = v116[8];
  *(_QWORD *)v115 = v117;
  v118 = a3[36];
  v119 = (char *)a1 + v118;
  v120 = (char *)a2 + v118;
  v121 = *(_QWORD *)v120;
  v119[8] = v120[8];
  *(_QWORD *)v119 = v121;
  v122 = a3[37];
  v123 = (char *)a1 + v122;
  v124 = (char *)a2 + v122;
  v125 = *(_QWORD *)v124;
  v123[8] = v124[8];
  *(_QWORD *)v123 = v125;
  v126 = a3[38];
  v127 = (char *)a1 + v126;
  v128 = (char *)a2 + v126;
  v129 = *(_QWORD *)v128;
  v127[8] = v128[8];
  *(_QWORD *)v127 = v129;
  v130 = a3[39];
  v131 = (char *)a1 + v130;
  v132 = (char *)a2 + v130;
  v133 = *(_QWORD *)v132;
  v131[8] = v132[8];
  *(_QWORD *)v131 = v133;
  v134 = a3[40];
  v135 = (char *)a1 + v134;
  v136 = (char *)a2 + v134;
  v137 = *(_QWORD *)v136;
  v135[8] = v136[8];
  *(_QWORD *)v135 = v137;
  v138 = a3[41];
  v139 = (char *)a1 + v138;
  v140 = (char *)a2 + v138;
  v141 = *(_QWORD *)v140;
  v139[8] = v140[8];
  *(_QWORD *)v139 = v141;
  v142 = a3[42];
  v143 = (_QWORD *)((char *)a1 + v142);
  v144 = (_QWORD *)((char *)a2 + v142);
  *v143 = *v144;
  v143[1] = v144[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v145 = a3[43];
  v146 = (_QWORD *)((char *)a1 + v145);
  v147 = (_QWORD *)((char *)a2 + v145);
  *v146 = *v147;
  v146[1] = v147[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v148 = a3[44];
  v149 = (_QWORD *)((char *)a1 + v148);
  v150 = (_QWORD *)((char *)a2 + v148);
  *v149 = *v150;
  v149[1] = v150[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[45]) = *((_BYTE *)a2 + a3[45]);
  v151 = a3[46];
  v152 = (char *)a1 + v151;
  v153 = (char *)a2 + v151;
  v154 = v153[8];
  *(_QWORD *)v152 = *(_QWORD *)v153;
  v152[8] = v154;
  v155 = a3[47];
  v156 = (char *)a1 + v155;
  v157 = (char *)a2 + v155;
  v158 = *(_QWORD *)v157;
  v156[8] = v157[8];
  *(_QWORD *)v156 = v158;
  v159 = a3[48];
  v160 = (_QWORD *)((char *)a1 + v159);
  v161 = (_QWORD *)((char *)a2 + v159);
  *v160 = *v161;
  v160[1] = v161[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v162 = a3[49];
  v163 = (char *)a1 + v162;
  v164 = (char *)a2 + v162;
  v165 = *(_QWORD *)v164;
  v163[8] = v164[8];
  *(_QWORD *)v163 = v165;
  v166 = a3[50];
  v167 = (char *)a1 + v166;
  v168 = (char *)a2 + v166;
  v169 = *(_QWORD *)v168;
  v167[8] = v168[8];
  *(_QWORD *)v167 = v169;
  v170 = a3[51];
  v171 = (char *)a1 + v170;
  v172 = (char *)a2 + v170;
  v173 = *(_QWORD *)v172;
  v171[8] = v172[8];
  *(_QWORD *)v171 = v173;
  v174 = a3[52];
  v175 = (char *)a1 + v174;
  v176 = (char *)a2 + v174;
  v177 = *(_QWORD *)v176;
  v175[8] = v176[8];
  *(_QWORD *)v175 = v177;
  v178 = a3[53];
  v179 = (_QWORD *)((char *)a1 + v178);
  v180 = (_QWORD *)((char *)a2 + v178);
  *v179 = *v180;
  v179[1] = v180[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v181 = a3[54];
  v182 = (char *)a1 + v181;
  v183 = (char *)a2 + v181;
  v184 = v12((char *)a1 + v181, 1, v10);
  v185 = v12(v183, 1, v10);
  if (v184)
  {
    if (!v185)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v182, v183, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v182, 0, 1, v10);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v185)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v182, v10);
LABEL_12:
    v186 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v182, v183, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v182, v183, v10);
LABEL_13:
  v187 = a3[55];
  v188 = (char *)a1 + v187;
  v189 = (char *)a2 + v187;
  v190 = *(_QWORD *)v189;
  v188[8] = v189[8];
  *(_QWORD *)v188 = v190;
  v191 = a3[56];
  v192 = (char *)a1 + v191;
  v193 = (char *)a2 + v191;
  v194 = *(_QWORD *)v193;
  v192[8] = v193[8];
  *(_QWORD *)v192 = v194;
  v195 = a3[57];
  v196 = (_QWORD *)((char *)a1 + v195);
  v197 = (_QWORD *)((char *)a2 + v195);
  *v196 = *v197;
  v196[1] = v197[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v198 = a3[58];
  v199 = (_QWORD *)((char *)a1 + v198);
  v200 = (_QWORD *)((char *)a2 + v198);
  *v199 = *v200;
  v199[1] = v200[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v201 = a3[59];
  v202 = (char *)a1 + v201;
  v203 = (char *)a2 + v201;
  v204 = *(_QWORD *)v203;
  v202[8] = v203[8];
  *(_QWORD *)v202 = v204;
  v205 = a3[60];
  v206 = (_QWORD *)((char *)a1 + v205);
  v207 = (_QWORD *)((char *)a2 + v205);
  *v206 = *v207;
  v206[1] = v207[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[61]) = *((_BYTE *)a2 + a3[61]);
  v208 = a3[62];
  v209 = (char *)a1 + v208;
  v210 = (char *)a2 + v208;
  v211 = sub_1AD63B084();
  v212 = *(_QWORD *)(v211 - 8);
  v213 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v212 + 48);
  v214 = v213(v209, 1, v211);
  v215 = v213(v210, 1, v211);
  if (!v214)
  {
    if (!v215)
    {
      (*(void (**)(char *, char *, uint64_t))(v212 + 24))(v209, v210, v211);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v212 + 8))(v209, v211);
    goto LABEL_18;
  }
  if (v215)
  {
LABEL_18:
    v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v209, v210, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v212 + 16))(v209, v210, v211);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v212 + 56))(v209, 0, 1, v211);
LABEL_19:
  v217 = a3[63];
  v218 = (_QWORD *)((char *)a1 + v217);
  v219 = (_QWORD *)((char *)a2 + v217);
  *v218 = *v219;
  v218[1] = v219[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[64]) = *((_BYTE *)a2 + a3[64]);
  v220 = a3[65];
  v221 = (_QWORD *)((char *)a1 + v220);
  v222 = (_QWORD *)((char *)a2 + v220);
  *v221 = *v222;
  v221[1] = v222[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v223 = a3[66];
  v224 = (char *)a1 + v223;
  v225 = (char *)a2 + v223;
  v226 = *(_QWORD *)v225;
  v224[8] = v225[8];
  *(_QWORD *)v224 = v226;
  v227 = a3[67];
  v228 = (char *)a1 + v227;
  v229 = (char *)a2 + v227;
  v230 = *(_QWORD *)v229;
  v228[8] = v229[8];
  *(_QWORD *)v228 = v230;
  v231 = a3[68];
  v232 = (char *)a1 + v231;
  v233 = (char *)a2 + v231;
  v234 = *(_QWORD *)v233;
  v232[8] = v233[8];
  *(_QWORD *)v232 = v234;
  v235 = a3[69];
  v236 = (char *)a1 + v235;
  v237 = (char *)a2 + v235;
  v238 = *(_QWORD *)v237;
  v236[8] = v237[8];
  *(_QWORD *)v236 = v238;
  *((_BYTE *)a1 + a3[70]) = *((_BYTE *)a2 + a3[70]);
  v239 = a3[71];
  v240 = (char *)a1 + v239;
  v241 = (char *)a2 + v239;
  v242 = *(_QWORD *)v241;
  v240[8] = v241[8];
  *(_QWORD *)v240 = v242;
  v243 = a3[72];
  v244 = (char *)a1 + v243;
  v245 = (char *)a2 + v243;
  v246 = *(_QWORD *)v245;
  v244[8] = v245[8];
  *(_QWORD *)v244 = v246;
  v247 = a3[73];
  v248 = (char *)a1 + v247;
  v249 = (char *)a2 + v247;
  v250 = *(_QWORD *)v249;
  v248[8] = v249[8];
  *(_QWORD *)v248 = v250;
  v251 = a3[74];
  v252 = (char *)a1 + v251;
  v253 = (char *)a2 + v251;
  v254 = *(_QWORD *)v253;
  v252[8] = v253[8];
  *(_QWORD *)v252 = v254;
  v255 = a3[75];
  v256 = (char *)a1 + v255;
  v257 = (char *)a2 + v255;
  v258 = *(_QWORD *)v257;
  v256[8] = v257[8];
  *(_QWORD *)v256 = v258;
  *((_BYTE *)a1 + a3[76]) = *((_BYTE *)a2 + a3[76]);
  v259 = a3[77];
  v260 = (char *)a1 + v259;
  v261 = (char *)a2 + v259;
  v262 = *(_QWORD *)v261;
  v260[8] = v261[8];
  *(_QWORD *)v260 = v262;
  *((_BYTE *)a1 + a3[78]) = *((_BYTE *)a2 + a3[78]);
  *((_BYTE *)a1 + a3[79]) = *((_BYTE *)a2 + a3[79]);
  *((_BYTE *)a1 + a3[80]) = *((_BYTE *)a2 + a3[80]);
  v263 = a3[81];
  v264 = (char *)a1 + v263;
  v265 = (char *)a2 + v263;
  v266 = *(_QWORD *)v265;
  v264[8] = v265[8];
  *(_QWORD *)v264 = v266;
  *((_BYTE *)a1 + a3[82]) = *((_BYTE *)a2 + a3[82]);
  *((_BYTE *)a1 + a3[83]) = *((_BYTE *)a2 + a3[83]);
  v267 = a3[84];
  v268 = (char *)a1 + v267;
  v269 = (char *)a2 + v267;
  v270 = *(_QWORD *)v269;
  v268[8] = v269[8];
  *(_QWORD *)v268 = v270;
  *((_BYTE *)a1 + a3[85]) = *((_BYTE *)a2 + a3[85]);
  *((_BYTE *)a1 + a3[86]) = *((_BYTE *)a2 + a3[86]);
  *((_BYTE *)a1 + a3[87]) = *((_BYTE *)a2 + a3[87]);
  *((_BYTE *)a1 + a3[88]) = *((_BYTE *)a2 + a3[88]);
  v271 = a3[89];
  v272 = (char *)a1 + v271;
  v273 = (char *)a2 + v271;
  v274 = *(_QWORD *)v273;
  v272[8] = v273[8];
  *(_QWORD *)v272 = v274;
  v275 = a3[90];
  v276 = (_QWORD *)((char *)a1 + v275);
  v277 = (_QWORD *)((char *)a2 + v275);
  *v276 = *v277;
  v276[1] = v277[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for MediaMetadata(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  char *v130;
  char *v131;
  char *v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  char *v178;
  char *v179;
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  char *v184;
  char *v185;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63B03C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v13 = a3[6];
  v14 = a3[7];
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = (char *)a1 + v14;
  v18 = (char *)a2 + v14;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = a3[8];
  v20 = a3[9];
  v21 = (char *)a1 + v19;
  v22 = (char *)a2 + v19;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  v23 = (char *)a1 + v20;
  v24 = (char *)a2 + v20;
  v23[8] = v24[8];
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v25 = a3[10];
  v26 = a3[11];
  v27 = (char *)a1 + v25;
  v28 = (char *)a2 + v25;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  *(_OWORD *)((char *)a1 + v26) = *(_OWORD *)((char *)a2 + v26);
  v29 = a3[13];
  *(_OWORD *)((char *)a1 + a3[12]) = *(_OWORD *)((char *)a2 + a3[12]);
  *(_OWORD *)((char *)a1 + v29) = *(_OWORD *)((char *)a2 + v29);
  v30 = a3[14];
  v31 = a3[15];
  v32 = (char *)a1 + v30;
  v33 = (char *)a2 + v30;
  *(_QWORD *)v32 = *(_QWORD *)v33;
  v32[8] = v33[8];
  *((_BYTE *)a1 + v31) = *((_BYTE *)a2 + v31);
  v34 = a3[16];
  v35 = a3[17];
  v36 = (char *)a1 + v34;
  v37 = (char *)a2 + v34;
  *(_QWORD *)v36 = *(_QWORD *)v37;
  v36[8] = v37[8];
  v38 = (char *)a1 + v35;
  v39 = (char *)a2 + v35;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  v38[8] = v39[8];
  v40 = a3[18];
  v41 = a3[19];
  v42 = (char *)a1 + v40;
  v43 = (char *)a2 + v40;
  *(_QWORD *)v42 = *(_QWORD *)v43;
  v42[8] = v43[8];
  v44 = (char *)a1 + v41;
  v45 = (char *)a2 + v41;
  *(_QWORD *)v44 = *(_QWORD *)v45;
  v44[8] = v45[8];
  v46 = a3[20];
  v47 = a3[21];
  v48 = (char *)a1 + v46;
  v49 = (char *)a2 + v46;
  v50 = *(_QWORD *)v49;
  v48[8] = v49[8];
  *(_QWORD *)v48 = v50;
  v51 = (char *)a1 + v47;
  v52 = (char *)a2 + v47;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  v51[8] = v52[8];
  v53 = a3[22];
  v54 = a3[23];
  v55 = (char *)a1 + v53;
  v56 = (char *)a2 + v53;
  *(_QWORD *)v55 = *(_QWORD *)v56;
  v55[8] = v56[8];
  v57 = (char *)a1 + v54;
  v58 = (char *)a2 + v54;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = v58[8];
  v59 = a3[25];
  *(_OWORD *)((char *)a1 + a3[24]) = *(_OWORD *)((char *)a2 + a3[24]);
  *(_OWORD *)((char *)a1 + v59) = *(_OWORD *)((char *)a2 + v59);
  v60 = a3[26];
  v61 = a3[27];
  v62 = (char *)a1 + v60;
  v63 = (char *)a2 + v60;
  *(_QWORD *)v62 = *(_QWORD *)v63;
  v62[8] = v63[8];
  v64 = (char *)a1 + v61;
  v65 = (char *)a2 + v61;
  *(_QWORD *)v64 = *(_QWORD *)v65;
  v64[8] = v65[8];
  v66 = a3[28];
  v67 = a3[29];
  v68 = (char *)a1 + v66;
  v69 = (char *)a2 + v66;
  *(_QWORD *)v68 = *(_QWORD *)v69;
  v68[8] = v69[8];
  v70 = (char *)a1 + v67;
  v71 = (char *)a2 + v67;
  *(_QWORD *)v70 = *(_QWORD *)v71;
  v70[8] = v71[8];
  v72 = a3[30];
  v73 = a3[31];
  v74 = (char *)a1 + v72;
  v75 = (char *)a2 + v72;
  *(_QWORD *)v74 = *(_QWORD *)v75;
  v74[8] = v75[8];
  *((_BYTE *)a1 + v73) = *((_BYTE *)a2 + v73);
  v76 = a3[33];
  *((_BYTE *)a1 + a3[32]) = *((_BYTE *)a2 + a3[32]);
  *(_OWORD *)((char *)a1 + v76) = *(_OWORD *)((char *)a2 + v76);
  v77 = a3[34];
  v78 = a3[35];
  v79 = (char *)a1 + v77;
  v80 = (char *)a2 + v77;
  *(_QWORD *)v79 = *(_QWORD *)v80;
  v79[8] = v80[8];
  v81 = (char *)a1 + v78;
  v82 = (char *)a2 + v78;
  *(_QWORD *)v81 = *(_QWORD *)v82;
  v81[8] = v82[8];
  v83 = a3[36];
  v84 = a3[37];
  v85 = (char *)a1 + v83;
  v86 = (char *)a2 + v83;
  *(_QWORD *)v85 = *(_QWORD *)v86;
  v85[8] = v86[8];
  v87 = (char *)a1 + v84;
  v88 = (char *)a2 + v84;
  *(_QWORD *)v87 = *(_QWORD *)v88;
  v87[8] = v88[8];
  v89 = a3[38];
  v90 = a3[39];
  v91 = (char *)a1 + v89;
  v92 = (char *)a2 + v89;
  v93 = *(_QWORD *)v92;
  v91[8] = v92[8];
  *(_QWORD *)v91 = v93;
  v94 = (char *)a1 + v90;
  v95 = (char *)a2 + v90;
  *(_QWORD *)v94 = *(_QWORD *)v95;
  v94[8] = v95[8];
  v96 = a3[40];
  v97 = a3[41];
  v98 = (char *)a1 + v96;
  v99 = (char *)a2 + v96;
  *(_QWORD *)v98 = *(_QWORD *)v99;
  v98[8] = v99[8];
  v100 = (char *)a1 + v97;
  v101 = (char *)a2 + v97;
  *(_QWORD *)v100 = *(_QWORD *)v101;
  v100[8] = v101[8];
  v102 = a3[43];
  *(_OWORD *)((char *)a1 + a3[42]) = *(_OWORD *)((char *)a2 + a3[42]);
  *(_OWORD *)((char *)a1 + v102) = *(_OWORD *)((char *)a2 + v102);
  v103 = a3[45];
  *(_OWORD *)((char *)a1 + a3[44]) = *(_OWORD *)((char *)a2 + a3[44]);
  *((_BYTE *)a1 + v103) = *((_BYTE *)a2 + v103);
  v104 = a3[46];
  v105 = a3[47];
  v106 = (char *)a1 + v104;
  v107 = (char *)a2 + v104;
  *(_QWORD *)v106 = *(_QWORD *)v107;
  v106[8] = v107[8];
  v108 = (char *)a1 + v105;
  v109 = (char *)a2 + v105;
  *(_QWORD *)v108 = *(_QWORD *)v109;
  v108[8] = v109[8];
  v110 = a3[49];
  *(_OWORD *)((char *)a1 + a3[48]) = *(_OWORD *)((char *)a2 + a3[48]);
  v111 = (char *)a1 + v110;
  v112 = (char *)a2 + v110;
  *(_QWORD *)v111 = *(_QWORD *)v112;
  v111[8] = v112[8];
  v113 = a3[50];
  v114 = a3[51];
  v115 = (char *)a1 + v113;
  v116 = (char *)a2 + v113;
  v115[8] = v116[8];
  *(_QWORD *)v115 = *(_QWORD *)v116;
  v117 = (char *)a1 + v114;
  v118 = (char *)a2 + v114;
  v119 = *(_QWORD *)v118;
  v117[8] = v118[8];
  *(_QWORD *)v117 = v119;
  v120 = a3[52];
  v121 = a3[53];
  v122 = (char *)a1 + v120;
  v123 = (char *)a2 + v120;
  *(_QWORD *)v122 = *(_QWORD *)v123;
  v122[8] = v123[8];
  v124 = a3[54];
  v125 = (char *)a1 + v124;
  v126 = (char *)a2 + v124;
  *(_OWORD *)((char *)a1 + v121) = *(_OWORD *)((char *)a2 + v121);
  if (v11((char *)a2 + v124, 1, v9))
  {
    v127 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v125, v126, *(_QWORD *)(*(_QWORD *)(v127 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v125, v126, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v125, 0, 1, v9);
  }
  v128 = a3[55];
  v129 = a3[56];
  v130 = (char *)a1 + v128;
  v131 = (char *)a2 + v128;
  *(_QWORD *)v130 = *(_QWORD *)v131;
  v130[8] = v131[8];
  v132 = (char *)a1 + v129;
  v133 = (char *)a2 + v129;
  *(_QWORD *)v132 = *(_QWORD *)v133;
  v132[8] = v133[8];
  v134 = a3[58];
  *(_OWORD *)((char *)a1 + a3[57]) = *(_OWORD *)((char *)a2 + a3[57]);
  *(_OWORD *)((char *)a1 + v134) = *(_OWORD *)((char *)a2 + v134);
  v135 = a3[59];
  v136 = a3[60];
  v137 = (char *)a1 + v135;
  v138 = (char *)a2 + v135;
  *(_QWORD *)v137 = *(_QWORD *)v138;
  v137[8] = v138[8];
  *(_OWORD *)((char *)a1 + v136) = *(_OWORD *)((char *)a2 + v136);
  v139 = a3[62];
  *((_BYTE *)a1 + a3[61]) = *((_BYTE *)a2 + a3[61]);
  v140 = (char *)a1 + v139;
  v141 = (char *)a2 + v139;
  v142 = sub_1AD63B084();
  v143 = *(_QWORD *)(v142 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v143 + 48))(v141, 1, v142))
  {
    v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v143 + 32))(v140, v141, v142);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v143 + 56))(v140, 0, 1, v142);
  }
  v145 = a3[64];
  *(_OWORD *)((char *)a1 + a3[63]) = *(_OWORD *)((char *)a2 + a3[63]);
  *((_BYTE *)a1 + v145) = *((_BYTE *)a2 + v145);
  *(_OWORD *)((char *)a1 + a3[65]) = *(_OWORD *)((char *)a2 + a3[65]);
  v146 = a3[66];
  v147 = (char *)a1 + v146;
  v148 = (char *)a2 + v146;
  *(_QWORD *)v147 = *(_QWORD *)v148;
  v147[8] = v148[8];
  v149 = a3[67];
  v150 = (char *)a1 + v149;
  v151 = (char *)a2 + v149;
  *(_QWORD *)v150 = *(_QWORD *)v151;
  v150[8] = v151[8];
  v152 = a3[68];
  v153 = (char *)a1 + v152;
  v154 = (char *)a2 + v152;
  *(_QWORD *)v153 = *(_QWORD *)v154;
  v153[8] = v154[8];
  v155 = a3[69];
  v156 = (char *)a1 + v155;
  v157 = (char *)a2 + v155;
  *(_QWORD *)v156 = *(_QWORD *)v157;
  v156[8] = v157[8];
  *((_BYTE *)a1 + a3[70]) = *((_BYTE *)a2 + a3[70]);
  v158 = a3[71];
  v159 = (char *)a1 + v158;
  v160 = (char *)a2 + v158;
  *(_QWORD *)v159 = *(_QWORD *)v160;
  v159[8] = v160[8];
  v161 = a3[72];
  v162 = (char *)a1 + v161;
  v163 = (char *)a2 + v161;
  *(_QWORD *)v162 = *(_QWORD *)v163;
  v162[8] = v163[8];
  v164 = a3[73];
  v165 = (char *)a1 + v164;
  v166 = (char *)a2 + v164;
  *(_QWORD *)v165 = *(_QWORD *)v166;
  v165[8] = v166[8];
  v167 = a3[74];
  v168 = (char *)a1 + v167;
  v169 = (char *)a2 + v167;
  v168[8] = v169[8];
  *(_QWORD *)v168 = *(_QWORD *)v169;
  v170 = a3[75];
  v171 = (char *)a1 + v170;
  v172 = (char *)a2 + v170;
  v173 = *(_QWORD *)v172;
  v171[8] = v172[8];
  *(_QWORD *)v171 = v173;
  *((_BYTE *)a1 + a3[76]) = *((_BYTE *)a2 + a3[76]);
  v174 = a3[77];
  v175 = (char *)a1 + v174;
  v176 = (char *)a2 + v174;
  *(_QWORD *)v175 = *(_QWORD *)v176;
  v175[8] = v176[8];
  *((_BYTE *)a1 + a3[78]) = *((_BYTE *)a2 + a3[78]);
  *((_BYTE *)a1 + a3[79]) = *((_BYTE *)a2 + a3[79]);
  *((_BYTE *)a1 + a3[80]) = *((_BYTE *)a2 + a3[80]);
  v177 = a3[81];
  v178 = (char *)a1 + v177;
  v179 = (char *)a2 + v177;
  *(_QWORD *)v178 = *(_QWORD *)v179;
  v178[8] = v179[8];
  *((_BYTE *)a1 + a3[82]) = *((_BYTE *)a2 + a3[82]);
  *((_BYTE *)a1 + a3[83]) = *((_BYTE *)a2 + a3[83]);
  v180 = a3[84];
  v181 = (char *)a1 + v180;
  v182 = (char *)a2 + v180;
  *(_QWORD *)v181 = *(_QWORD *)v182;
  v181[8] = v182[8];
  *((_BYTE *)a1 + a3[85]) = *((_BYTE *)a2 + a3[85]);
  *((_BYTE *)a1 + a3[86]) = *((_BYTE *)a2 + a3[86]);
  *((_BYTE *)a1 + a3[87]) = *((_BYTE *)a2 + a3[87]);
  *((_BYTE *)a1 + a3[88]) = *((_BYTE *)a2 + a3[88]);
  v183 = a3[89];
  v184 = (char *)a1 + v183;
  v185 = (char *)a2 + v183;
  *(_QWORD *)v184 = *(_QWORD *)v185;
  v184[8] = v185[8];
  *(_OWORD *)((char *)a1 + a3[90]) = *(_OWORD *)((char *)a2 + a3[90]);
  return a1;
}

_OWORD *assignWithTake for MediaMetadata(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  _QWORD *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  char *v72;
  char *v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  char *v127;
  char *v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  _QWORD *v151;
  uint64_t *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  _QWORD *v168;
  uint64_t *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  int v175;
  int v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  _QWORD *v185;
  uint64_t *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  _QWORD *v190;
  uint64_t *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  _QWORD *v198;
  uint64_t *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t (*v207)(char *, uint64_t, uint64_t);
  int v208;
  int v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  uint64_t *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  _QWORD *v217;
  uint64_t *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  char *v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  char v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  char v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  char v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  char v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  _QWORD *v270;
  uint64_t *v271;
  uint64_t v272;
  uint64_t v273;

  *a1 = *a2;
  *(_OWORD *)((char *)a1 + 9) = *(_OWORD *)((char *)a2 + 9);
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63B03C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = a3[7];
  v17 = (char *)a1 + v15;
  v18 = (char *)a2 + v15;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  v17[8] = v18[8];
  v19 = (char *)a1 + v16;
  v20 = (char *)a2 + v16;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  v21 = a3[8];
  v22 = a3[9];
  v23 = (char *)a1 + v21;
  v24 = (char *)a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  v23[8] = v24[8];
  v25 = (char *)a1 + v22;
  v26 = (char *)a2 + v22;
  v25[8] = v26[8];
  *(_QWORD *)v25 = *(_QWORD *)v26;
  v27 = a3[10];
  v28 = a3[11];
  v29 = (char *)a1 + v27;
  v30 = (char *)a2 + v27;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  v29[8] = v30[8];
  v31 = (_QWORD *)((char *)a1 + v28);
  v32 = (uint64_t *)((char *)a2 + v28);
  v34 = *v32;
  v33 = v32[1];
  *v31 = v34;
  v31[1] = v33;
  swift_bridgeObjectRelease();
  v35 = a3[12];
  v36 = (_QWORD *)((char *)a1 + v35);
  v37 = (uint64_t *)((char *)a2 + v35);
  v39 = *v37;
  v38 = v37[1];
  *v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  v40 = a3[13];
  v41 = (_QWORD *)((char *)a1 + v40);
  v42 = (uint64_t *)((char *)a2 + v40);
  v44 = *v42;
  v43 = v42[1];
  *v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  v45 = a3[14];
  v46 = a3[15];
  v47 = (char *)a1 + v45;
  v48 = (char *)a2 + v45;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  v47[8] = v48[8];
  *((_BYTE *)a1 + v46) = *((_BYTE *)a2 + v46);
  v49 = a3[16];
  v50 = a3[17];
  v51 = (char *)a1 + v49;
  v52 = (char *)a2 + v49;
  *(_QWORD *)v51 = *(_QWORD *)v52;
  v51[8] = v52[8];
  v53 = (char *)a1 + v50;
  v54 = (char *)a2 + v50;
  *(_QWORD *)v53 = *(_QWORD *)v54;
  v53[8] = v54[8];
  v55 = a3[18];
  v56 = a3[19];
  v57 = (char *)a1 + v55;
  v58 = (char *)a2 + v55;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = v58[8];
  v59 = (char *)a1 + v56;
  v60 = (char *)a2 + v56;
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v59[8] = v60[8];
  v61 = a3[20];
  v62 = a3[21];
  v63 = (char *)a1 + v61;
  v64 = (char *)a2 + v61;
  v65 = *(_QWORD *)v64;
  v63[8] = v64[8];
  *(_QWORD *)v63 = v65;
  v66 = (char *)a1 + v62;
  v67 = (char *)a2 + v62;
  *(_QWORD *)v66 = *(_QWORD *)v67;
  v66[8] = v67[8];
  v68 = a3[22];
  v69 = a3[23];
  v70 = (char *)a1 + v68;
  v71 = (char *)a2 + v68;
  *(_QWORD *)v70 = *(_QWORD *)v71;
  v70[8] = v71[8];
  v72 = (char *)a1 + v69;
  v73 = (char *)a2 + v69;
  *(_QWORD *)v72 = *(_QWORD *)v73;
  v72[8] = v73[8];
  v74 = a3[24];
  v75 = (_QWORD *)((char *)a1 + v74);
  v76 = (uint64_t *)((char *)a2 + v74);
  v78 = *v76;
  v77 = v76[1];
  *v75 = v78;
  v75[1] = v77;
  swift_bridgeObjectRelease();
  v79 = a3[25];
  v80 = (_QWORD *)((char *)a1 + v79);
  v81 = (uint64_t *)((char *)a2 + v79);
  v83 = *v81;
  v82 = v81[1];
  *v80 = v83;
  v80[1] = v82;
  swift_bridgeObjectRelease();
  v84 = a3[26];
  v85 = a3[27];
  v86 = (char *)a1 + v84;
  v87 = (char *)a2 + v84;
  *(_QWORD *)v86 = *(_QWORD *)v87;
  v86[8] = v87[8];
  v88 = (char *)a1 + v85;
  v89 = (char *)a2 + v85;
  *(_QWORD *)v88 = *(_QWORD *)v89;
  v88[8] = v89[8];
  v90 = a3[28];
  v91 = a3[29];
  v92 = (char *)a1 + v90;
  v93 = (char *)a2 + v90;
  *(_QWORD *)v92 = *(_QWORD *)v93;
  v92[8] = v93[8];
  v94 = (char *)a1 + v91;
  v95 = (char *)a2 + v91;
  v94[8] = v95[8];
  *(_QWORD *)v94 = *(_QWORD *)v95;
  v96 = a3[30];
  v97 = a3[31];
  v98 = (char *)a1 + v96;
  v99 = (char *)a2 + v96;
  *(_QWORD *)v98 = *(_QWORD *)v99;
  v98[8] = v99[8];
  *((_BYTE *)a1 + v97) = *((_BYTE *)a2 + v97);
  v100 = a3[33];
  *((_BYTE *)a1 + a3[32]) = *((_BYTE *)a2 + a3[32]);
  v101 = (_QWORD *)((char *)a1 + v100);
  v102 = (uint64_t *)((char *)a2 + v100);
  v104 = *v102;
  v103 = v102[1];
  *v101 = v104;
  v101[1] = v103;
  swift_bridgeObjectRelease();
  v105 = a3[34];
  v106 = a3[35];
  v107 = (char *)a1 + v105;
  v108 = (char *)a2 + v105;
  *(_QWORD *)v107 = *(_QWORD *)v108;
  v107[8] = v108[8];
  v109 = (char *)a1 + v106;
  v110 = (char *)a2 + v106;
  *(_QWORD *)v109 = *(_QWORD *)v110;
  v109[8] = v110[8];
  v111 = a3[36];
  v112 = a3[37];
  v113 = (char *)a1 + v111;
  v114 = (char *)a2 + v111;
  *(_QWORD *)v113 = *(_QWORD *)v114;
  v113[8] = v114[8];
  v115 = (char *)a1 + v112;
  v116 = (char *)a2 + v112;
  v115[8] = v116[8];
  *(_QWORD *)v115 = *(_QWORD *)v116;
  v117 = a3[38];
  v118 = a3[39];
  v119 = (char *)a1 + v117;
  v120 = (char *)a2 + v117;
  *(_QWORD *)v119 = *(_QWORD *)v120;
  v119[8] = v120[8];
  v121 = (char *)a1 + v118;
  v122 = (char *)a2 + v118;
  *(_QWORD *)v121 = *(_QWORD *)v122;
  v121[8] = v122[8];
  v123 = a3[40];
  v124 = a3[41];
  v125 = (char *)a1 + v123;
  v126 = (char *)a2 + v123;
  *(_QWORD *)v125 = *(_QWORD *)v126;
  v125[8] = v126[8];
  v127 = (char *)a1 + v124;
  v128 = (char *)a2 + v124;
  *(_QWORD *)v127 = *(_QWORD *)v128;
  v127[8] = v128[8];
  v129 = a3[42];
  v130 = (_QWORD *)((char *)a1 + v129);
  v131 = (uint64_t *)((char *)a2 + v129);
  v133 = *v131;
  v132 = v131[1];
  *v130 = v133;
  v130[1] = v132;
  swift_bridgeObjectRelease();
  v134 = a3[43];
  v135 = (_QWORD *)((char *)a1 + v134);
  v136 = (uint64_t *)((char *)a2 + v134);
  v138 = *v136;
  v137 = v136[1];
  *v135 = v138;
  v135[1] = v137;
  swift_bridgeObjectRelease();
  v139 = a3[44];
  v140 = (_QWORD *)((char *)a1 + v139);
  v141 = (uint64_t *)((char *)a2 + v139);
  v143 = *v141;
  v142 = v141[1];
  *v140 = v143;
  v140[1] = v142;
  swift_bridgeObjectRelease();
  v144 = a3[46];
  *((_BYTE *)a1 + a3[45]) = *((_BYTE *)a2 + a3[45]);
  v145 = (char *)a1 + v144;
  v146 = (char *)a2 + v144;
  *(_QWORD *)v145 = *(_QWORD *)v146;
  v145[8] = v146[8];
  v147 = a3[47];
  v148 = a3[48];
  v149 = (char *)a1 + v147;
  v150 = (char *)a2 + v147;
  *(_QWORD *)v149 = *(_QWORD *)v150;
  v149[8] = v150[8];
  v151 = (_QWORD *)((char *)a1 + v148);
  v152 = (uint64_t *)((char *)a2 + v148);
  v154 = *v152;
  v153 = v152[1];
  *v151 = v154;
  v151[1] = v153;
  swift_bridgeObjectRelease();
  v155 = a3[49];
  v156 = a3[50];
  v157 = (char *)a1 + v155;
  v158 = (char *)a2 + v155;
  *(_QWORD *)v157 = *(_QWORD *)v158;
  v157[8] = v158[8];
  v159 = (char *)a1 + v156;
  v160 = (char *)a2 + v156;
  *(_QWORD *)v159 = *(_QWORD *)v160;
  v159[8] = v160[8];
  v161 = a3[51];
  v162 = a3[52];
  v163 = (char *)a1 + v161;
  v164 = (char *)a2 + v161;
  *(_QWORD *)v163 = *(_QWORD *)v164;
  v163[8] = v164[8];
  v165 = (char *)a1 + v162;
  v166 = (char *)a2 + v162;
  *(_QWORD *)v165 = *(_QWORD *)v166;
  v165[8] = v166[8];
  v167 = a3[53];
  v168 = (_QWORD *)((char *)a1 + v167);
  v169 = (uint64_t *)((char *)a2 + v167);
  v171 = *v169;
  v170 = v169[1];
  *v168 = v171;
  v168[1] = v170;
  swift_bridgeObjectRelease();
  v172 = a3[54];
  v173 = (char *)a1 + v172;
  v174 = (char *)a2 + v172;
  v175 = v11((char *)a1 + v172, 1, v9);
  v176 = v11(v174, 1, v9);
  if (v175)
  {
    if (!v176)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v173, v174, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v173, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v176)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v173, v9);
LABEL_12:
    v177 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v173, v174, v9);
LABEL_13:
  v178 = a3[55];
  v179 = a3[56];
  v180 = (char *)a1 + v178;
  v181 = (char *)a2 + v178;
  *(_QWORD *)v180 = *(_QWORD *)v181;
  v180[8] = v181[8];
  v182 = (char *)a1 + v179;
  v183 = (char *)a2 + v179;
  *(_QWORD *)v182 = *(_QWORD *)v183;
  v182[8] = v183[8];
  v184 = a3[57];
  v185 = (_QWORD *)((char *)a1 + v184);
  v186 = (uint64_t *)((char *)a2 + v184);
  v188 = *v186;
  v187 = v186[1];
  *v185 = v188;
  v185[1] = v187;
  swift_bridgeObjectRelease();
  v189 = a3[58];
  v190 = (_QWORD *)((char *)a1 + v189);
  v191 = (uint64_t *)((char *)a2 + v189);
  v193 = *v191;
  v192 = v191[1];
  *v190 = v193;
  v190[1] = v192;
  swift_bridgeObjectRelease();
  v194 = a3[59];
  v195 = a3[60];
  v196 = (char *)a1 + v194;
  v197 = (char *)a2 + v194;
  *(_QWORD *)v196 = *(_QWORD *)v197;
  v196[8] = v197[8];
  v198 = (_QWORD *)((char *)a1 + v195);
  v199 = (uint64_t *)((char *)a2 + v195);
  v201 = *v199;
  v200 = v199[1];
  *v198 = v201;
  v198[1] = v200;
  swift_bridgeObjectRelease();
  v202 = a3[62];
  *((_BYTE *)a1 + a3[61]) = *((_BYTE *)a2 + a3[61]);
  v203 = (char *)a1 + v202;
  v204 = (char *)a2 + v202;
  v205 = sub_1AD63B084();
  v206 = *(_QWORD *)(v205 - 8);
  v207 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v206 + 48);
  v208 = v207(v203, 1, v205);
  v209 = v207(v204, 1, v205);
  if (!v208)
  {
    if (!v209)
    {
      (*(void (**)(char *, char *, uint64_t))(v206 + 40))(v203, v204, v205);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v206 + 8))(v203, v205);
    goto LABEL_18;
  }
  if (v209)
  {
LABEL_18:
    v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v206 + 32))(v203, v204, v205);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v203, 0, 1, v205);
LABEL_19:
  v211 = a3[63];
  v212 = (_QWORD *)((char *)a1 + v211);
  v213 = (uint64_t *)((char *)a2 + v211);
  v215 = *v213;
  v214 = v213[1];
  *v212 = v215;
  v212[1] = v214;
  swift_bridgeObjectRelease();
  *((_BYTE *)a1 + a3[64]) = *((_BYTE *)a2 + a3[64]);
  v216 = a3[65];
  v217 = (_QWORD *)((char *)a1 + v216);
  v218 = (uint64_t *)((char *)a2 + v216);
  v220 = *v218;
  v219 = v218[1];
  *v217 = v220;
  v217[1] = v219;
  swift_bridgeObjectRelease();
  v221 = a3[66];
  v222 = (char *)a1 + v221;
  v223 = (char *)a2 + v221;
  *(_QWORD *)v222 = *(_QWORD *)v223;
  v222[8] = v223[8];
  v224 = a3[67];
  v225 = (char *)a1 + v224;
  v226 = (char *)a2 + v224;
  *(_QWORD *)v225 = *(_QWORD *)v226;
  v225[8] = v226[8];
  v227 = a3[68];
  v228 = (char *)a1 + v227;
  v229 = (char *)a2 + v227;
  *(_QWORD *)v228 = *(_QWORD *)v229;
  v228[8] = v229[8];
  v230 = a3[69];
  v231 = (char *)a1 + v230;
  v232 = (char *)a2 + v230;
  *(_QWORD *)v231 = *(_QWORD *)v232;
  v231[8] = v232[8];
  *((_BYTE *)a1 + a3[70]) = *((_BYTE *)a2 + a3[70]);
  v233 = a3[71];
  v234 = (char *)a1 + v233;
  v235 = (char *)a2 + v233;
  *(_QWORD *)v234 = *(_QWORD *)v235;
  v234[8] = v235[8];
  v236 = a3[72];
  v237 = (char *)a1 + v236;
  v238 = (char *)a2 + v236;
  *(_QWORD *)v237 = *(_QWORD *)v238;
  v237[8] = v238[8];
  v239 = a3[73];
  v240 = (char *)a1 + v239;
  v241 = (char *)a2 + v239;
  *(_QWORD *)v240 = *(_QWORD *)v241;
  v240[8] = v241[8];
  v242 = a3[74];
  v243 = (char *)a1 + v242;
  v244 = (char *)a2 + v242;
  *(_QWORD *)v243 = *(_QWORD *)v244;
  v243[8] = v244[8];
  v245 = a3[75];
  v246 = (char *)a1 + v245;
  v247 = (char *)a2 + v245;
  v248 = *(_QWORD *)v247;
  v246[8] = v247[8];
  v249 = a3[76];
  v250 = *((_BYTE *)a2 + v249);
  *(_QWORD *)v246 = v248;
  *((_BYTE *)a1 + v249) = v250;
  v251 = a3[77];
  v252 = (char *)a1 + v251;
  v253 = (char *)a2 + v251;
  *(_QWORD *)v252 = *(_QWORD *)v253;
  v254 = a3[78];
  v255 = *((_BYTE *)a2 + v254);
  v252[8] = v253[8];
  *((_BYTE *)a1 + v254) = v255;
  *((_BYTE *)a1 + a3[79]) = *((_BYTE *)a2 + a3[79]);
  *((_BYTE *)a1 + a3[80]) = *((_BYTE *)a2 + a3[80]);
  v256 = a3[81];
  v257 = (char *)a1 + v256;
  v258 = (char *)a2 + v256;
  *(_QWORD *)v257 = *(_QWORD *)v258;
  v259 = a3[82];
  v260 = *((_BYTE *)a2 + v259);
  v257[8] = v258[8];
  *((_BYTE *)a1 + v259) = v260;
  *((_BYTE *)a1 + a3[83]) = *((_BYTE *)a2 + a3[83]);
  v261 = a3[84];
  v262 = (char *)a1 + v261;
  v263 = (char *)a2 + v261;
  *(_QWORD *)v262 = *(_QWORD *)v263;
  v264 = a3[85];
  v265 = *((_BYTE *)a2 + v264);
  v262[8] = v263[8];
  *((_BYTE *)a1 + v264) = v265;
  *((_BYTE *)a1 + a3[86]) = *((_BYTE *)a2 + a3[86]);
  *((_BYTE *)a1 + a3[87]) = *((_BYTE *)a2 + a3[87]);
  *((_BYTE *)a1 + a3[88]) = *((_BYTE *)a2 + a3[88]);
  v266 = a3[89];
  v267 = (char *)a1 + v266;
  v268 = (char *)a2 + v266;
  *(_QWORD *)v267 = *(_QWORD *)v268;
  v267[8] = v268[8];
  v269 = a3[90];
  v270 = (_QWORD *)((char *)a1 + v269);
  v271 = (uint64_t *)((char *)a2 + v269);
  v273 = *v271;
  v272 = v271[1];
  *v270 = v273;
  v270[1] = v272;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MediaMetadata()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ACFFE9D0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    v7 = *(_QWORD *)(v8 - 8);
    v9 = a3[62];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[11] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  v11 = v10 - 1;
  if (v11 < 0)
    v11 = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaMetadata()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1ACFFEA98(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[11] + 8) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    v9 = *(_QWORD *)(v10 - 8);
    v11 = a4[62];
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_1ACFFEB44()
{
  unint64_t v0;
  unint64_t v1;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E5320, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, qword_1ED2E7158, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1ACFFECF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_1AD63BC48();
    if (!v5)
      atomic_store(v4, a2);
  }
}

uint64_t getEnumTagSinglePayload for MediaMetadata.Context(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaMetadata.Context(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1ACFFEE30 + 4 * byte_1AD646F93[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1ACFFEE64 + 4 * byte_1AD646F8E[v4]))();
}

uint64_t sub_1ACFFEE64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ACFFEE6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ACFFEE74);
  return result;
}

uint64_t sub_1ACFFEE80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ACFFEE88);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1ACFFEE8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ACFFEE94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaMetadata.Context()
{
  return &type metadata for MediaMetadata.Context;
}

uint64_t getEnumTagSinglePayload for MediaMetadata.LargeImageContextualInfo(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 24))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for MediaMetadata.LargeImageContextualInfo(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for MediaMetadata.LargeImageContextualInfo()
{
  return &type metadata for MediaMetadata.LargeImageContextualInfo;
}

uint64_t getEnumTagSinglePayload for MediaMetadata.AppleMakerNoteCamera(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFA)
    goto LABEL_17;
  if (a2 + 6 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 6) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 6;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 6;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 6;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v8 = v6 - 7;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaMetadata.AppleMakerNoteCamera(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_1ACFFEFE8 + 4 * byte_1AD646F9D[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_1ACFFF01C + 4 * byte_1AD646F98[v4]))();
}

uint64_t sub_1ACFFF01C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ACFFF024(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ACFFF02CLL);
  return result;
}

uint64_t sub_1ACFFF038(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ACFFF040);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_1ACFFF044(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ACFFF04C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaMetadata.AppleMakerNoteCamera()
{
  return &type metadata for MediaMetadata.AppleMakerNoteCamera;
}

void type metadata accessor for CMFormatDescription(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1730);
}

void type metadata accessor for CGImagePropertyOrientation(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1738);
}

uint64_t getEnumTagSinglePayload for Handwriting.DrawingStrokePoint(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 32))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Handwriting.DrawingStrokePoint(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 32) = v3;
  return result;
}

void type metadata accessor for audit_token_t(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1740);
}

void type metadata accessor for SearchPathDirectory(uint64_t a1)
{
  sub_1AD002694(a1, (unint64_t *)&unk_1EECD1748);
}

void type metadata accessor for BlastDoorInstanceType(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1ED2E7320);
}

void type metadata accessor for CGImageSource(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1ED2DAD08);
}

void type metadata accessor for CFNumber(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1ED2DA800);
}

void type metadata accessor for CGRect(uint64_t a1)
{
  sub_1AD002694(a1, (unint64_t *)&unk_1EECD1758);
}

void type metadata accessor for CGSize(uint64_t a1)
{
  sub_1AD002694(a1, qword_1ED2E2FF0);
}

void type metadata accessor for CGPoint(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1768);
}

__n128 __swift_memcpy16_4(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t storeEnumTagSinglePayload for BitmapImage(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CVPlanarPixelBufferInfo_YCbCrBiPlanar(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1770);
}

void type metadata accessor for CFString(uint64_t a1)
{
  sub_1AD002694(a1, (unint64_t *)&unk_1ED2E2DE8);
}

void type metadata accessor for CGImage(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1ED2DAE20);
}

void type metadata accessor for CVBuffer(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1778);
}

uint64_t getEnumTagSinglePayload for MediaMetadata.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xAA)
    goto LABEL_17;
  if (a2 + 86 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 86) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 86;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 86;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 86;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x57;
  v8 = v6 - 87;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 86 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 86) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xAA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xA9)
    return ((uint64_t (*)(void))((char *)&loc_1ACFFF2DC + 4 * byte_1AD646FA7[v4]))();
  *a1 = a2 + 86;
  return ((uint64_t (*)(void))((char *)sub_1ACFFF310 + 4 * byte_1AD646FA2[v4]))();
}

uint64_t sub_1ACFFF310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ACFFF318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ACFFF320);
  return result;
}

uint64_t sub_1ACFFF32C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ACFFF334);
  *(_BYTE *)result = a2 + 86;
  return result;
}

uint64_t sub_1ACFFF338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ACFFF340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ACFFF34C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_1ACFFF354(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *type metadata accessor for MediaMetadata.CodingKeys()
{
  return &type metadata for MediaMetadata.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MediaMetadata.LargeImageContextualInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_17;
  if (a2 + 2 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 2) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 2;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 2;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 2;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v8 = v6 - 3;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for MediaMetadata.LargeImageContextualInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1ACFFF448 + 4 * byte_1AD646FB1[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1ACFFF47C + 4 * byte_1AD646FAC[v4]))();
}

uint64_t sub_1ACFFF47C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ACFFF484(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1ACFFF48CLL);
  return result;
}

uint64_t sub_1ACFFF498(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1ACFFF4A0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1ACFFF4A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1ACFFF4AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MediaMetadata.LargeImageContextualInfo.CodingKeys()
{
  return &type metadata for MediaMetadata.LargeImageContextualInfo.CodingKeys;
}

uint64_t getEnumTagSinglePayload for MediaMetadata.Context.CodingKeys(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for MediaMetadata.Context.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1ACFFF558 + 4 * byte_1AD646FB6[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1ACFFF578 + 4 * byte_1AD646FBB[v4]))();
}

_BYTE *sub_1ACFFF558(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1ACFFF578(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ACFFF580(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ACFFF588(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1ACFFF590(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1ACFFF598(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_1ACFFF5A4()
{
  return 0;
}

ValueMetadata *type metadata accessor for MediaMetadata.Context.CodingKeys()
{
  return &type metadata for MediaMetadata.Context.CodingKeys;
}

unint64_t sub_1ACFFF5C0()
{
  unint64_t result;

  result = qword_1EECD1780;
  if (!qword_1EECD1780)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD647838, &type metadata for MediaMetadata.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECD1780);
  }
  return result;
}

unint64_t sub_1ACFFF608()
{
  unint64_t result;

  result = qword_1EECD1788;
  if (!qword_1EECD1788)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6478F0, &type metadata for MediaMetadata.LargeImageContextualInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECD1788);
  }
  return result;
}

unint64_t sub_1ACFFF650()
{
  unint64_t result;

  result = qword_1EECD1790;
  if (!qword_1EECD1790)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6479A8, &type metadata for MediaMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECD1790);
  }
  return result;
}

uint64_t sub_1ACFFF694(uint64_t a1, uint64_t a2)
{
  return sub_1ACFFFC38(a1, a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB1940]);
}

uint64_t sub_1ACFFF6A0(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_1AD63B750();
  *a2 = 0;
  return result;
}

uint64_t sub_1ACFFF714(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_1AD63B75C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1ACFFF790@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  sub_1AD63B768();
  v2 = sub_1AD63B744();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1ACFFF7D0()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1ACFFF814()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1ACFFF83C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

_QWORD *sub_1ACFFF87C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

BOOL sub_1ACFFF88C(_DWORD *a1, _DWORD *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1ACFFF8A0(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD647A0C, a1);
  return sub_1AD63B168();
}

uint64_t sub_1ACFFF8DC()
{
  MEMORY[0x1AF44BDF0](&unk_1AD647A0C);
  return sub_1AD63B15C();
}

uint64_t sub_1ACFFF924(uint64_t a1, uint64_t a2)
{
  sub_1AD63C4AC();
  MEMORY[0x1AF44BDF0](&unk_1AD647A0C, a2);
  sub_1AD63B15C();
  return sub_1AD63C4F4();
}

void sub_1ACFFF97C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1ACFFF988()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v5;

  v0 = sub_1AD63B768();
  v2 = v1;
  if (v0 == sub_1AD63B768() && v2 == v3)
    v5 = 1;
  else
    v5 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

BOOL sub_1ACFFFA10(_QWORD *a1, _QWORD *a2)
{
  return *a1 == *a2;
}

_DWORD *sub_1ACFFFA24@<X0>(_DWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_DWORD *)a2 = *result;
  *(_BYTE *)(a2 + 4) = 0;
  return result;
}

void sub_1ACFFFA34(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

uint64_t sub_1ACFFFA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1AF44BDF0](&unk_1AD647A0C, a3);
  return sub_1AD63B150();
}

uint64_t sub_1ACFFFA8C()
{
  return sub_1ACFF9724((unint64_t *)&qword_1ED2E2DD0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1AD647CA8);
}

uint64_t sub_1ACFFFAB8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1AD63B744();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1ACFFFAFC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1AD63B768();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1ACFFFB24()
{
  sub_1ACFF9724(&qword_1EECD17C8, (uint64_t (*)(uint64_t))type metadata accessor for BlastDoorInstanceType, (uint64_t)&unk_1AD647B00);
  sub_1ACFF9724((unint64_t *)&unk_1EECD17D0, (uint64_t (*)(uint64_t))type metadata accessor for BlastDoorInstanceType, (uint64_t)&unk_1AD647AA0);
  return sub_1AD63BE88();
}

uint64_t sub_1ACFFFBA8()
{
  return sub_1ACFF9724(&qword_1EECD17A0, (uint64_t (*)(uint64_t))type metadata accessor for BlastDoorInstanceType, (uint64_t)"\rYh8T.\t");
}

uint64_t sub_1ACFFFBD4()
{
  return sub_1ACFF9724(&qword_1EECD17A8, (uint64_t (*)(uint64_t))type metadata accessor for BlastDoorInstanceType, (uint64_t)&unk_1AD647A38);
}

uint64_t sub_1ACFFFC00()
{
  return sub_1ACFF9724(&qword_1EECD17B0, (uint64_t (*)(uint64_t))type metadata accessor for BlastDoorInstanceType, (uint64_t)&unk_1AD647AD4);
}

uint64_t sub_1ACFFFC2C(uint64_t a1, uint64_t a2)
{
  return sub_1ACFFFC38(a1, a2, MEMORY[0x1E0DEA950]);
}

uint64_t sub_1ACFFFC38(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1AD63B768();
  v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1ACFFFC74()
{
  sub_1AD63B768();
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ACFFFCB4()
{
  uint64_t v0;

  sub_1AD63B768();
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  v0 = sub_1AD63C4F4();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1ACFFFD24()
{
  return sub_1ACFF9724((unint64_t *)&unk_1EECD17B8, (uint64_t (*)(uint64_t))type metadata accessor for SearchPathDirectory, (uint64_t)&unk_1AD647BE0);
}

uint64_t sub_1ACFFFD50()
{
  return sub_1ACFF9724(&qword_1ED2E2DE0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1AD6479E0);
}

unint64_t sub_1ACFFFD80()
{
  unint64_t result;

  result = qword_1ED2E2328;
  if (!qword_1ED2E2328)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD647918, &type metadata for MediaMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2328);
  }
  return result;
}

unint64_t sub_1ACFFFDC8()
{
  unint64_t result;

  result = qword_1ED2E2320;
  if (!qword_1ED2E2320)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD647940, &type metadata for MediaMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2320);
  }
  return result;
}

unint64_t sub_1ACFFFE10()
{
  unint64_t result;

  result = qword_1ED2E2348;
  if (!qword_1ED2E2348)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD647860, &type metadata for MediaMetadata.LargeImageContextualInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2348);
  }
  return result;
}

unint64_t sub_1ACFFFE58()
{
  unint64_t result;

  result = qword_1ED2E2340;
  if (!qword_1ED2E2340)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD647888, &type metadata for MediaMetadata.LargeImageContextualInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2340);
  }
  return result;
}

unint64_t sub_1ACFFFEA0()
{
  unint64_t result;

  result = qword_1ED2E2388;
  if (!qword_1ED2E2388)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6477A8, &type metadata for MediaMetadata.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2388);
  }
  return result;
}

unint64_t sub_1ACFFFEE8()
{
  unint64_t result;

  result = qword_1ED2E2380;
  if (!qword_1ED2E2380)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6477D0, &type metadata for MediaMetadata.Context.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2380);
  }
  return result;
}

uint64_t sub_1ACFFFF2C(uint64_t a1, uint64_t a2)
{
  char v2;
  char v3;

  if (a1 == 0xD000000000000016 && a2 == 0x80000001AD69E330)
  {
    swift_bridgeObjectRelease();
    v2 = 0;
  }
  else
  {
    v3 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1ACFFFFB0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6469576C65786970 && a2 == 0xEA00000000006874;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6965486C65786970 && a2 == 0xEB00000000746867 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7942726566667562 && a2 == 0xEE00657A69536574)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1AD00014C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000018 && a2 == 0x80000001AD69E350 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000065 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x656E6F7A656D6974 && a2 == 0xEE0074657366664FLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD69E370 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E6569724F776172 && a2 == 0xEE006E6F69746174 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C65786950776172 && a2 == 0xED00006874646957 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6C65786950776172 && a2 == 0xEE00746867696548 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x65646F4D736E656CLL && a2 == 0xE90000000000006CLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x656B614D736E656CLL && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x4E656C69666F7270 && a2 == 0xEB00000000656D61 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x69737365636F7270 && a2 == 0xEF7367616C46676ELL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD69E390 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6572757472657061 && a2 == 0xED000065756C6156 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD69E3B0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x6873616C66 && a2 == 0xE500000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x6E654C6C61636F66 && a2 == 0xEB00000000687467 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD69E3D0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x6E697461526F7369 && a2 == 0xEE0065756C615667 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x676E69726574656DLL && a2 == 0xEC00000065646F4DLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else if (a1 == 0x5372657474756873 && a2 == 0xEC00000064656570 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 19;
  }
  else if (a1 == 0x6C65646F6DLL && a2 == 0xE500000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 20;
  }
  else if (a1 == 1701536109 && a2 == 0xE400000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 21;
  }
  else if (a1 == 0x6C61426574696877 && a2 == 0xEC00000065636E61 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 22;
  }
  else if (a1 == 0x756F53746867696CLL && a2 == 0xEB00000000656372 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 23;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD69E3F0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 24;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD69E410 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 25;
  }
  else if (a1 == 0x6E696147726468 && a2 == 0xE700000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 26;
  }
  else if (a1 == 0x6147524448736168 && a2 == 0xED000070614D6E69 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 27;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AD69E430 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 28;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001AD69E450 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 29;
  }
  else if (a1 == 0x79616C6544666967 && a2 == 0xEC000000656D6954 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 30;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD69E470 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 31;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AD69E490 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 32;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AD69E4B0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 33;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x80000001AD69E4E0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 34;
  }
  else if (a1 == 0xD000000000000024 && a2 == 0x80000001AD69E510 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 35;
  }
  else if (a1 == 0x6974617275447661 && a2 == 0xEA00000000006E6FLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 36;
  }
  else if (a1 == 0x5350467661 && a2 == 0xE500000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 37;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD69E540 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 38;
  }
  else if (a1 == 0x4D65727574706163 && a2 == 0xEB0000000065646FLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 39;
  }
  else if (a1 == 0x4D6F656469567369 && a2 == 0xEE00656761746E6FLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 40;
  }
  else if (a1 == 0x7365526F72507369 && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 41;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD69E560 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 42;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD69E580 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 43;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AD69E5A0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 44;
  }
  else if (a1 == 0x64757469676E6F6CLL && a2 == 0xE900000000000065 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 45;
  }
  else if (a1 == 0x656475746974616CLL && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 46;
  }
  else if (a1 == 0x6564757469746C61 && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 47;
  }
  else if (a1 == 0x6465657053737067 && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 48;
  }
  else if (a1 == 0x6465657053737067 && a2 == 0xEB00000000666552 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 49;
  }
  else if (a1 == 0x73656D6954737067 && a2 == 0xEC000000706D6174 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 50;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AD69E5C0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 51;
  }
  else if (a1 == 0x7269446567616D69 && a2 == 0xEE006E6F69746365 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 52;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD69E5E0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 53;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD69E600 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 54;
  }
  else if (a1 == 0x657A6953656C6966 && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 55;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001AD69E620 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 56;
  }
  else if (a1 == 0x426F746F68507369 && a2 == 0xEC00000068746F6FLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 57;
  }
  else if (a1 == 0x6975557473727562 && a2 == 0xE900000000000064 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 58;
  }
  else if (a1 == 0x6D6D6F4372657375 && a2 == 0xEB00000000746E65 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 59;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD69E640 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 60;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x80000001AD69E660 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 61;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD69E680 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 62;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001AD69E6A0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 63;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x80000001AD69E6C0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 64;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD69E6E0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 65;
  }
  else if (a1 == 0x7472616D53736168 && a2 == 0xED0000656C797453 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 66;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD69E700 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 67;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD69E720 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 68;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000001AD69E740 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 69;
  }
  else if (a1 == 0x7974537472616D73 && a2 == 0xEE0074736143656CLL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 70;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000001AD69E760 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 71;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD69E780 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 72;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AD69E7A0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 73;
  }
  else if (a1 == 0x5244487369 && a2 == 0xE500000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 74;
  }
  else if (a1 == 0x61474F5349736168 && a2 == 0xED000070614D6E69 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 75;
  }
  else if (a1 == 0x74616D696E417369 && a2 == 0xEF6567616D496465 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 76;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD69E7C0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 77;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AD69E7E0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 78;
  }
  else if (a1 == 0x73616C4666697865 && a2 == 0xEE00646572694668 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 79;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000001AD69E800 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 80;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001AD69E820 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 81;
  }
  else if (a1 == 0x6974617053736168 && a2 == 0xEF6F696475416C61 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 82;
  }
  else if (a1 == 0x6D6568636C417369 && a2 == 0xEB00000000747369 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 83;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000001AD69E840 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 84;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001AD69E860 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 85;
  }
  else if (a1 == 0x6465724343545049 && a2 == 0xEA00000000007469)
  {
    swift_bridgeObjectRelease();
    return 86;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 86;
    else
      return 87;
  }
}

unint64_t sub_1AD0023D0()
{
  unint64_t result;

  result = qword_1ED2E2AF8;
  if (!qword_1ED2E2AF8)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for MediaMetadata.AppleMakerNoteCamera, &type metadata for MediaMetadata.AppleMakerNoteCamera);
    atomic_store(result, (unint64_t *)&qword_1ED2E2AF8);
  }
  return result;
}

void type metadata accessor for CGColor(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD17E0);
}

uint64_t initializeBufferWithCopyOfBuffer for SafetyMonitorMessage(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_1AD002458(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 40))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AD002478(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 40) = v3;
  return result;
}

void type metadata accessor for PCSSignature(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD17E8);
}

void type metadata accessor for PCSSPKey(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD17F0);
}

void type metadata accessor for heim_base_data(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD17F8);
}

uint64_t getEnumTagSinglePayload for BitmapImage(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

void type metadata accessor for PCSAttributes(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1800);
}

uint64_t sub_1AD00251C(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 88))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AD00253C(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 88) = v3;
  return result;
}

void type metadata accessor for PCSShareProtection(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1808);
}

uint64_t getEnumTagSinglePayload for SingleKiss(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SingleKiss(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 8) = v3;
  return result;
}

void type metadata accessor for CVPlanarComponentInfo(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1810);
}

void type metadata accessor for PCSTypeValue(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1818);
}

void type metadata accessor for PCSSignedShareProtection(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1820);
}

void type metadata accessor for PCSSignedShareProtection_shareList(uint64_t a1)
{
  sub_1AD002694(a1, &qword_1EECD1828);
}

uint64_t sub_1AD002628(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AD002648(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 56) = v3;
  return result;
}

void type metadata accessor for PCSShareEntry(uint64_t a1)
{
  sub_1AD002694(a1, (unint64_t *)&unk_1EECD1830);
}

void sub_1AD002694(uint64_t a1, unint64_t *a2)
{
  unint64_t ForeignTypeMetadata;
  uint64_t v4;

  if (!*a2)
  {
    ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4)
      atomic_store(ForeignTypeMetadata, a2);
  }
}

uint64_t sub_1AD002708()
{
  unsigned int *v0;

  return *v0;
}

uint64_t sub_1AD002710(uint64_t result)
{
  _DWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD002718())()
{
  return nullsub_1;
}

uint64_t sub_1AD002728@<X0>(uint64_t result@<X0>, _DWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

BOOL sub_1AD002730()
{
  _DWORD *v0;

  return *v0 == 0;
}

ValueMetadata *type metadata accessor for MachPort()
{
  return &type metadata for MachPort;
}

uint64_t sub_1AD002750(unint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = sub_1AD0027F8(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1AD002780(unint64_t a1, unint64_t a2)
{
  uint64_t v2;

  v2 = sub_1AD0027F8(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1AD0027B4@<X0>(unint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;
  uint64_t result;

  v3 = sub_1AD0027F8(*a1, a1[1]);
  result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t sub_1AD0027F8(unint64_t a1, unint64_t a2)
{
  unint64_t v2;
  uint64_t result;
  unint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned __int8 v15;
  _QWORD v16[2];

  if (sub_1AD63B804() != 4)
    goto LABEL_36;
  v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) != 0)
      result = HIBYTE(a2) & 0xF;
    else
      result = a1 & 0xFFFFFFFFFFFFLL;
    if (result == 4)
      goto LABEL_7;
LABEL_38:
    __break(1u);
    return result;
  }
LABEL_37:
  result = sub_1AD63B834();
  if (result != 4)
    goto LABEL_38;
LABEL_7:
  if ((a2 & 0x2000000000000000) != 0)
    v6 = v2;
  else
    v6 = a1 & 0xFFFFFFFFFFFFLL;
  if (v6)
  {
    v7 = 0;
    v8 = (a1 >> 59) & 1;
    if ((a2 & 0x1000000000000000) == 0)
      LOBYTE(v8) = 1;
    v9 = 4 << v8;
    v2 = 15;
    while (1)
    {
      v11 = v2 & 0xC;
      v12 = v2;
      if (v11 == v9)
        v12 = sub_1AD37E9D0(v2, a1, a2);
      v13 = v12 >> 16;
      if (v12 >> 16 >= v6)
      {
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v15 = sub_1AD63B864();
        if (v11 != v9)
          goto LABEL_26;
      }
      else if ((a2 & 0x2000000000000000) != 0)
      {
        v16[0] = a1;
        v16[1] = a2 & 0xFFFFFFFFFFFFFFLL;
        v15 = *((_BYTE *)v16 + v13);
        if (v11 != v9)
          goto LABEL_26;
      }
      else
      {
        v14 = (a2 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if ((a1 & 0x1000000000000000) == 0)
          v14 = sub_1AD63BDB0();
        v15 = *(_BYTE *)(v14 + v13);
        if (v11 != v9)
        {
LABEL_26:
          if ((a2 & 0x1000000000000000) == 0)
            goto LABEL_14;
          goto LABEL_27;
        }
      }
      v2 = sub_1AD37E9D0(v2, a1, a2);
      if ((a2 & 0x1000000000000000) == 0)
      {
LABEL_14:
        v2 = (v2 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_15;
      }
LABEL_27:
      if (v6 <= v2 >> 16)
        goto LABEL_35;
      v2 = sub_1AD63B840();
LABEL_15:
      v10 = v15 | (v7 << 8);
      v7 = v10;
      if (4 * v6 == v2 >> 14)
        return v10;
    }
  }
  return 0;
}

unint64_t sub_1AD0029CC()
{
  unint64_t result;

  result = qword_1EECD18A0;
  if (!qword_1EECD18A0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD647F28, MEMORY[0x1E0DEE0F8]);
    atomic_store(result, (unint64_t *)&qword_1EECD18A0);
  }
  return result;
}

uint64_t sub_1AD002A10()
{
  return MEMORY[0x1E0DEA9F0];
}

unint64_t sub_1AD002A20()
{
  unint64_t result;

  result = qword_1EECD18A8;
  if (!qword_1EECD18A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD647F6C, MEMORY[0x1E0DEE0F8]);
    atomic_store(result, (unint64_t *)&qword_1EECD18A8);
  }
  return result;
}

uint64_t sub_1AD002A64()
{
  return MEMORY[0x1E0DEAA00];
}

uint64_t sub_1AD002A70()
{
  return MEMORY[0x1E0DEA9F8];
}

unint64_t sub_1AD002A84@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD002A98()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1AD002AA0@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD002A84(*a1, a2);
}

uint64_t sub_1AD002AA8()
{
  sub_1AD002F38();
  return sub_1AD63B93C();
}

uint64_t sub_1AD002B04()
{
  sub_1AD002F38();
  return sub_1AD63B8DC();
}

uint64_t sub_1AD002B50()
{
  uint64_t v0;

  sub_1AD002C18();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD002BB4()
{
  uint64_t v0;

  sub_1AD002C18();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD002C18()
{
  unsigned __int8 *v0;
  uint64_t v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  v1 = *v0;
  v7 = MEMORY[0x1E0DEBB98];
  *(_QWORD *)&v6 = v1;
  sub_1AD002F7C(&v6, v5);
  v2 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v5, 0xD000000000000017, 0x80000001AD69E880, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  return v2;
}

unint64_t sub_1AD002CA8()
{
  unint64_t result;

  result = qword_1EECD18B0;
  if (!qword_1EECD18B0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD647FBC, &type metadata for ClientMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECD18B0);
  }
  return result;
}

uint64_t sub_1AD002CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD002D00, (uint64_t (*)(void))sub_1AD002D44);
}

unint64_t sub_1AD002D00()
{
  unint64_t result;

  result = qword_1EECD18B8;
  if (!qword_1EECD18B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648088, &type metadata for ClientMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECD18B8);
  }
  return result;
}

unint64_t sub_1AD002D44()
{
  unint64_t result;

  result = qword_1EECD18C0;
  if (!qword_1EECD18C0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6480B0, &type metadata for ClientMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECD18C0);
  }
  return result;
}

uint64_t sub_1AD002D88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD002DCC, (uint64_t (*)(void))sub_1AD002E10);
}

uint64_t sub_1AD002D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = a4();
  result = a5();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD002DCC()
{
  unint64_t result;

  result = qword_1EECD18C8;
  if (!qword_1EECD18C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD650EF8, &type metadata for IDSRestrictedMessage);
    atomic_store(result, (unint64_t *)&qword_1EECD18C8);
  }
  return result;
}

unint64_t sub_1AD002E10()
{
  unint64_t result;

  result = qword_1EECD18D0;
  if (!qword_1EECD18D0)
  {
    result = MEMORY[0x1AF44BDF0]("abh8ܞd8", &type metadata for IDSRestrictedMessage);
    atomic_store(result, (unint64_t *)&qword_1EECD18D0);
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientMessageType()
{
  return &type metadata for ClientMessageType;
}

uint64_t _s9BlastDoor17ClientMessageTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD002EB8 + 4 * byte_1AD647FB5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD002EEC + 4 * byte_1AD647FB0[v4]))();
}

uint64_t sub_1AD002EEC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD002EF4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD002EFCLL);
  return result;
}

uint64_t sub_1AD002F08(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD002F10);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD002F14(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD002F1C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IDSRestrictedMessage()
{
  return &type metadata for IDSRestrictedMessage;
}

unint64_t sub_1AD002F38()
{
  unint64_t result;

  result = qword_1EECD18D8;
  if (!qword_1EECD18D8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648024, &type metadata for ClientMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECD18D8);
  }
  return result;
}

_OWORD *sub_1AD002F7C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_1AD002F8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 32) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD003008@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(a1 + 24);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD003074(uint64_t a1, uint64_t a2)
{
  return sub_1AD003264(a1, a2, sub_1AD003F24);
}

uint64_t _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(uint64_t a1, uint64_t a2)
{
  return sub_1AD003264(a1, a2, sub_1AD003F24);
}

uint64_t _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(_QWORD *);
  uint64_t result;
  _QWORD *v7;
  _QWORD v8[2];

  v5 = *(uint64_t (**)(_QWORD *))v2;
  v8[0] = a1;
  v8[1] = a2;
  if ((v5(v8) & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = a1;
    *(_QWORD *)(v2 + 24) = a2;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD003184(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(_QWORD *);
  uint64_t result;
  _QWORD *v7;
  _QWORD v8[2];

  v5 = *(uint64_t (**)(_QWORD *))v2;
  v8[0] = a1;
  v8[1] = a2;
  if ((v5(v8) & 1) != 0)
  {
    result = sub_1AD004118(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
    *(_QWORD *)(v2 + 16) = a1;
    *(_QWORD *)(v2 + 24) = a2;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD003258(uint64_t a1, uint64_t a2)
{
  return sub_1AD003264(a1, a2, sub_1AD009794);
}

uint64_t sub_1AD003264(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, _QWORD))
{
  uint64_t v3;
  uint64_t (*v7)(_QWORD *);
  uint64_t result;
  _QWORD *v9;
  _QWORD v10[2];

  v7 = *(uint64_t (**)(_QWORD *))v3;
  v10[0] = a1;
  v10[1] = a2;
  if ((v7(v10) & 1) != 0)
  {
    result = a3(*(_QWORD *)(v3 + 16), *(_QWORD *)(v3 + 24));
    *(_QWORD *)(v3 + 16) = a1;
    *(_QWORD *)(v3 + 24) = a2;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v9 = 0x6E776F6E6B6E753CLL;
    v9[1] = 0xE90000000000003ELL;
    v9[2] = 0xD00000000000001CLL;
    v9[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD003344(uint64_t a1)
{
  uint64_t (**v1)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  _QWORD *v7;

  if (((*v1)() & 1) != 0)
  {
    v3 = (uint64_t)v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    sub_1AD009758(v3, &qword_1ED2E1A40);
    v4 = sub_1AD63AF28();
    v5 = *(_QWORD *)(v4 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, a1, v4);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v3, 0, 1, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD00346C(__int16 a1)
{
  uint64_t v1;
  uint64_t (*v3)(__int16 *);
  uint64_t result;
  _QWORD *v5;
  __int16 v6;

  v3 = *(uint64_t (**)(__int16 *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_WORD *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 18) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD003538(float a1)
{
  uint64_t v1;
  uint64_t (*v3)(float *);
  uint64_t result;
  _QWORD *v5;
  float v6;

  v3 = *(uint64_t (**)(float *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(float *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 20) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD00360C(int a1)
{
  uint64_t v1;
  uint64_t (*v3)(int *);
  uint64_t result;
  _QWORD *v5;
  int v6;

  v3 = *(uint64_t (**)(int *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_DWORD *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 20) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD0036D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))v1;
  v6 = a1;
  if ((v3(&v6) & 1) != 0)
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 16) = a1;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD0037A8(double a1)
{
  uint64_t v1;
  uint64_t (*v3)(double *);
  uint64_t result;
  _QWORD *v5;
  double v6;

  v3 = *(uint64_t (**)(double *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(double *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD00387C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD003948(uint64_t a1)
{
  uint64_t (**v1)(void);
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  _QWORD *v6;

  if (((*v1)() & 1) != 0)
  {
    v3 = (uint64_t)v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EECD19D0) + 28);
    sub_1AD009758(v3, &qword_1EECD19D8);
    sub_1AD009710(a1, v3);
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
    return sub_1AD009758(a1, &qword_1ED2E1A40);
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD003A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t (*v7)(_QWORD *);
  uint64_t result;
  _QWORD *v9;
  _QWORD v10[3];

  v7 = *(uint64_t (**)(_QWORD *))v3;
  v10[0] = a1;
  v10[1] = a2;
  v10[2] = a3;
  if ((v7(v10) & 1) != 0)
  {
    result = sub_1AD0096D4(*(_QWORD *)(v3 + 16));
    *(_QWORD *)(v3 + 16) = a1;
    *(_QWORD *)(v3 + 24) = a2;
    *(_QWORD *)(v3 + 32) = a3;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v9 = 0x6E776F6E6B6E753CLL;
    v9[1] = 0xE90000000000003ELL;
    v9[2] = 0xD00000000000001CLL;
    v9[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD003B58(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(int *);
  uint64_t result;
  _QWORD *v5;
  int v6;
  char v7;

  v3 = *(uint64_t (**)(int *))v1;
  v6 = a1;
  v7 = BYTE4(a1) & 1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_BYTE *)(v1 + 20) = (a1 & 0x100000000uLL) >> 32;
    *(_DWORD *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 21) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD003C3C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t *);
  char v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  char v9;

  v4 = *(uint64_t (**)(uint64_t *))v2;
  v5 = a2 & 1;
  v8 = a1;
  v9 = a2 & 1;
  result = v4(&v8);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v2 + 16) = a1;
    *(_BYTE *)(v2 + 24) = v5;
    *(_BYTE *)(v2 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD003D14(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 32);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 24);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD003DA0;
  }
  return result;
}

uint64_t sub_1AD003DA0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003264(*a1, v2, sub_1AD003F24);
  swift_bridgeObjectRetain();
  sub_1AD003264(v3, v2, sub_1AD003F24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD003E14@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[1];
  v2 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

uint64_t sub_1AD003E48(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1AD003E5C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[3];
  v8 = a2[4];
  swift_retain();
  sub_1AD003E48(v5, v6);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  a2[1] = v4;
  a2[2] = v3;
  a2[3] = v5;
  a2[4] = v6;
  return result;
}

__n128 sub_1AD003ED0(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  return result;
}

uint64_t sub_1AD003F24(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
    return swift_bridgeObjectRelease();
  return result;
}

void (*sub_1AD003F38(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[1];
  v4 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD003F9C;
}

void sub_1AD003F9C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[3];
  v9 = v4[4];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD003E48(v7, v3);
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[1] = v6;
    v4[2] = v5;
    v4[3] = v7;
    v4[4] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD003F24(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[1] = v6;
    v4[2] = v5;
    v4[3] = v7;
    v4[4] = v3;
  }
  free(v2);
}

uint64_t sub_1AD00405C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + 48));
  return v1;
}

uint64_t sub_1AD00408C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1AD0040A0(a1, a2);
  return a1;
}

uint64_t sub_1AD0040A0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_1AD0040E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD004118(*(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48));
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t sub_1AD004118(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_1AD00412C(a1, a2);
  return a1;
}

uint64_t sub_1AD00412C(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t (*sub_1AD004170())()
{
  return nullsub_1;
}

uint64_t sub_1AD004180()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 80) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD0041FC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 80);
  if (v3 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(a1 + 72);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD004268(uint64_t a1, uint64_t a2)
{
  return sub_1AD003264(a1, a2, sub_1AD003F24);
}

uint64_t (*sub_1AD004290(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 80);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 72);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD00431C;
  }
  return result;
}

uint64_t sub_1AD00431C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003264(*a1, v2, sub_1AD003F24);
  swift_bridgeObjectRetain();
  sub_1AD003264(v3, v2, sub_1AD003F24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD004390@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[7];
  v2 = v1[8];
  v4 = v1[9];
  v5 = v1[10];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

uint64_t sub_1AD0043C4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[9];
  v8 = a2[10];
  swift_retain();
  sub_1AD003E48(v5, v6);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  a2[7] = v4;
  a2[8] = v3;
  a2[9] = v5;
  a2[10] = v6;
  return result;
}

__n128 sub_1AD004438(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 56) = *a1;
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  return result;
}

void (*sub_1AD00448C(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[7];
  v4 = v1[8];
  v6 = v1[9];
  v7 = v1[10];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD0044F0;
}

void sub_1AD0044F0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[9];
  v9 = v4[10];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD003E48(v7, v3);
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[7] = v6;
    v4[8] = v5;
    v4[9] = v7;
    v4[10] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD003F24(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[7] = v6;
    v4[8] = v5;
    v4[9] = v7;
    v4[10] = v3;
  }
  free(v2);
}

uint64_t sub_1AD0045B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 112) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 104);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD00462C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 112);
  if (v3 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(a1 + 104);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD004698(uint64_t a1, uint64_t a2)
{
  return sub_1AD003264(a1, a2, sub_1AD003F24);
}

uint64_t (*sub_1AD0046C0(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 112);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 104);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD00474C;
  }
  return result;
}

uint64_t sub_1AD00474C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003264(*a1, v2, sub_1AD003F24);
  swift_bridgeObjectRetain();
  sub_1AD003264(v3, v2, sub_1AD003F24);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD0047C0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[11];
  v2 = v1[12];
  v4 = v1[13];
  v5 = v1[14];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

uint64_t sub_1AD0047F4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[13];
  v8 = a2[14];
  swift_retain();
  sub_1AD003E48(v5, v6);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  a2[11] = v4;
  a2[12] = v3;
  a2[13] = v5;
  a2[14] = v6;
  return result;
}

__n128 sub_1AD004868(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 104);
  v6 = *(_QWORD *)(v1 + 112);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 88) = *a1;
  *(_QWORD *)(v1 + 104) = v3;
  *(_QWORD *)(v1 + 112) = v4;
  return result;
}

void (*sub_1AD0048BC(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[11];
  v4 = v1[12];
  v6 = v1[13];
  v7 = v1[14];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD004920;
}

void sub_1AD004920(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[13];
  v9 = v4[14];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD003E48(v7, v3);
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[11] = v6;
    v4[12] = v5;
    v4[13] = v7;
    v4[14] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD003F24(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[11] = v6;
    v4[12] = v5;
    v4[13] = v7;
    v4[14] = v3;
  }
  free(v2);
}

double sub_1AD0049E0@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648160;
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v3 + 32) = sub_1AD009890;
  *(_QWORD *)(v3 + 40) = v4;
  v5 = sub_1AD281264(v3);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2020);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD00988C;
  *(_QWORD *)(inited + 40) = v6;
  return sub_1AD2807A4((_QWORD *)inited, a1);
}

double sub_1AD004AF0@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648170;
  v4 = sub_1AD043FDC((uint64_t)&unk_1E5CBC150);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  swift_arrayDestroy();
  *(_QWORD *)(v3 + 32) = sub_1AD009894;
  *(_QWORD *)(v3 + 40) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2438);
  v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_1AD648170;
  *(_QWORD *)(v6 + 32) = 0x64756F6C6369;
  *(_QWORD *)(v6 + 40) = 0xE600000000000000;
  *(_QWORD *)(v6 + 48) = &unk_1E5CBC0E0;
  *(_QWORD *)(v6 + 56) = 0x64756F6C6369;
  *(_QWORD *)(v6 + 64) = 0xE600000000000000;
  *(_QWORD *)(v6 + 72) = &unk_1E5CBC110;
  v7 = sub_1AD0440D4(v6);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2610);
  swift_arrayDestroy();
  *(_QWORD *)(v3 + 48) = sub_1AD009898;
  *(_QWORD *)(v3 + 56) = v8;
  v9 = sub_1AD281264(v3);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2020);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD00988C;
  *(_QWORD *)(inited + 40) = v10;
  return sub_1AD2807A4((_QWORD *)inited, a1);
}

double sub_1AD004CEC@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648160;
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v3 + 32) = sub_1AD009890;
  *(_QWORD *)(v3 + 40) = v4;
  v5 = sub_1AD281264(v3);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2020);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD00988C;
  *(_QWORD *)(inited + 40) = v6;
  return sub_1AD2807A4((_QWORD *)inited, a1);
}

unint64_t sub_1AD004DFC@<X0>(unint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;
  char v4;
  char v5;

  result = sub_1AD004E38(a1, &v5);
  v4 = v5;
  if (v5 == 19)
    v4 = 0;
  *a2 = v4;
  return result;
}

unint64_t sub_1AD004E38@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  if (result > 0x14)
    *a2 = 19;
  else
    *a2 = byte_1AD648A7E[result];
  return result;
}

uint64_t sub_1AD004E60()
{
  char *v0;

  return qword_1AD648AA8[*v0];
}

BOOL sub_1AD004E74(char *a1, char *a2)
{
  return qword_1AD648AA8[*a1] == qword_1AD648AA8[*a2];
}

uint64_t sub_1AD004E98()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD004EE4()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD004F18()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

unint64_t sub_1AD004F60@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD004E38(*a1, a2);
}

void sub_1AD004F68(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1AD648AA8[*v1];
}

uint64_t sub_1AD004F80()
{
  sub_1AD00964C();
  return sub_1AD63B93C();
}

uint64_t sub_1AD004FDC()
{
  sub_1AD00964C();
  return sub_1AD63B8DC();
}

unint64_t sub_1AD005028@<X0>(unint64_t result@<X0>, char a2@<W1>, char *a3@<X8>)
{
  char v3;

  if (result >= 5)
    v3 = 0;
  else
    v3 = result;
  if ((a2 & 1) != 0)
    v3 = 5;
  *a3 = v3;
  return result;
}

unint64_t sub_1AD005044@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 5;
  if (result < 5)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD005058()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1AD005060@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD005044(*a1, a2);
}

uint64_t sub_1AD005068()
{
  sub_1AD009608();
  return sub_1AD63B93C();
}

uint64_t sub_1AD0050C4()
{
  sub_1AD009608();
  return sub_1AD63B8DC();
}

uint64_t sub_1AD005110()
{
  sub_1AD0095C4();
  return sub_1AD63B93C();
}

uint64_t sub_1AD00516C()
{
  sub_1AD0095C4();
  return sub_1AD63B8DC();
}

uint64_t sub_1AD0051B8@<X0>(uint64_t result@<X0>, char a2@<W1>, char *a3@<X8>)
{
  char v3;

  v3 = result == 1;
  if (result == 2)
    v3 = 2;
  if ((a2 & 1) != 0)
    v3 = 3;
  *a3 = v3;
  return result;
}

unint64_t sub_1AD0051E0@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t sub_1AD0051F4@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD0051E0(*a1, a2);
}

uint64_t sub_1AD0051FC()
{
  sub_1AD009580();
  return sub_1AD63B93C();
}

uint64_t sub_1AD005258()
{
  sub_1AD009580();
  return sub_1AD63B8DC();
}

unint64_t sub_1AD0052A4@<X0>(unint64_t result@<X0>, char a2@<W1>, char *a3@<X8>)
{
  char v4;
  char v5;

  if ((a2 & 1) != 0)
  {
    v4 = 19;
  }
  else
  {
    result = sub_1AD0052EC(result, &v5);
    v4 = v5;
    if (v5 == 19)
      v4 = 0;
  }
  *a3 = v4;
  return result;
}

unint64_t sub_1AD0052EC@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  if (result > 0x13)
    *a2 = 19;
  else
    *a2 = byte_1AD648A93[result];
  return result;
}

uint64_t sub_1AD005314()
{
  char *v0;

  return qword_1AD648B40[*v0];
}

BOOL sub_1AD005328(char *a1, char *a2)
{
  return qword_1AD648B40[*a1] == qword_1AD648B40[*a2];
}

uint64_t sub_1AD00534C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD005398()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD0053CC()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

unint64_t sub_1AD005414@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD0052EC(*a1, a2);
}

void sub_1AD00541C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1AD648B40[*v1];
}

uint64_t sub_1AD005434()
{
  sub_1AD00953C();
  return sub_1AD63B93C();
}

uint64_t sub_1AD005490()
{
  sub_1AD00953C();
  return sub_1AD63B8DC();
}

uint64_t sub_1AD0054DC()
{
  sub_1AD0094F8();
  return sub_1AD63B93C();
}

uint64_t sub_1AD005538()
{
  sub_1AD0094F8();
  return sub_1AD63B8DC();
}

double sub_1AD005584@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648160;
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v3 + 32) = sub_1AD009890;
  *(_QWORD *)(v3 + 40) = v4;
  v5 = sub_1AD281264(v3);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2020);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD00988C;
  *(_QWORD *)(inited + 40) = v6;
  return sub_1AD2807A4((_QWORD *)inited, a1);
}

double sub_1AD005694@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648170;
  v4 = sub_1AD043FDC((uint64_t)&unk_1E5CB7740);
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = v4;
  swift_arrayDestroy();
  *(_QWORD *)(v3 + 32) = sub_1AD009804;
  *(_QWORD *)(v3 + 40) = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2438);
  v6 = swift_initStackObject();
  *(_OWORD *)(v6 + 16) = xmmword_1AD648170;
  *(_QWORD *)(v6 + 32) = 0x64756F6C6369;
  *(_QWORD *)(v6 + 40) = 0xE600000000000000;
  *(_QWORD *)(v6 + 48) = &unk_1E5CB76D0;
  *(_QWORD *)(v6 + 56) = 0x64756F6C6369;
  *(_QWORD *)(v6 + 64) = 0xE600000000000000;
  *(_QWORD *)(v6 + 72) = &unk_1E5CB7700;
  v7 = sub_1AD0440D4(v6);
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = v7;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2610);
  swift_arrayDestroy();
  *(_QWORD *)(v3 + 48) = sub_1AD00980C;
  *(_QWORD *)(v3 + 56) = v8;
  v9 = sub_1AD281264(v3);
  v10 = swift_allocObject();
  *(_QWORD *)(v10 + 16) = v9;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2020);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD00988C;
  *(_QWORD *)(inited + 40) = v10;
  return sub_1AD2807A4((_QWORD *)inited, a1);
}

double sub_1AD005890@<D0>(uint64_t a1@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A10);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648160;
  v4 = swift_allocObject();
  *(_BYTE *)(v4 + 16) = 0;
  *(_QWORD *)(v3 + 32) = sub_1AD0097D0;
  *(_QWORD *)(v3 + 40) = v4;
  v5 = sub_1AD281264(v3);
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = v5;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2020);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD0097FC;
  *(_QWORD *)(inited + 40) = v6;
  return sub_1AD2807A4((_QWORD *)inited, a1);
}

_BYTE *sub_1AD0059A0@<X0>(_BYTE *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, __int128 *a11, uint64_t a12, uint64_t a13, __int128 *a14, __int128 *a15, _BYTE *a16, uint64_t a17, char a18, uint64_t a19, char a20,char *a21,uint64_t a22,uint64_t a23,_BYTE *a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36,uint64_t a37,char a38,_BYTE *a39,uint64_t a40,char a41,_BYTE *a42,_OWORD *a43,__int128 *a44,char a45,__int128 *a46)
{
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  char v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;

  *(_BYTE *)a9 = *result;
  *(_QWORD *)(a9 + 8) = a2;
  *(_QWORD *)(a9 + 24) = a3;
  *(_QWORD *)(a9 + 32) = a4;
  *(_QWORD *)(a9 + 40) = a5;
  *(_QWORD *)(a9 + 48) = a6;
  *(_QWORD *)(a9 + 56) = a7;
  *(_QWORD *)(a9 + 64) = a8;
  v46 = *a11;
  v47 = a11[1];
  *(_QWORD *)(a9 + 104) = a12;
  *(_QWORD *)(a9 + 112) = a13;
  v48 = *a14;
  v49 = a14[1];
  v50 = *a15;
  v51 = a15[1];
  *(_BYTE *)(a9 + 184) = *a16;
  *(_QWORD *)(a9 + 192) = a17;
  *(_BYTE *)(a9 + 200) = a18 & 1;
  *(_QWORD *)(a9 + 208) = a19;
  v52 = *a21;
  *(_BYTE *)(a9 + 216) = a20 & 1;
  *(_BYTE *)(a9 + 217) = v52;
  *(_QWORD *)(a9 + 224) = a22;
  *(_QWORD *)(a9 + 232) = a23;
  *(_BYTE *)(a9 + 240) = *a24;
  *(_QWORD *)(a9 + 248) = a25;
  *(_BYTE *)(a9 + 256) = a26 & 1;
  *(_QWORD *)(a9 + 264) = a27;
  *(_BYTE *)(a9 + 272) = a28 & 1;
  *(_QWORD *)(a9 + 280) = a29;
  *(_BYTE *)(a9 + 288) = a30 & 1;
  *(_QWORD *)(a9 + 296) = a31;
  *(_BYTE *)(a9 + 304) = a32 & 1;
  *(_QWORD *)(a9 + 312) = a33;
  *(_BYTE *)(a9 + 320) = a34 & 1;
  *(_QWORD *)(a9 + 328) = a35;
  *(_BYTE *)(a9 + 336) = a36 & 1;
  *(_QWORD *)(a9 + 344) = a37;
  *(_BYTE *)(a9 + 352) = a38 & 1;
  *(_BYTE *)(a9 + 353) = *a39;
  *(_QWORD *)(a9 + 360) = a40;
  *(_BYTE *)(a9 + 368) = a41 & 1;
  *(_BYTE *)(a9 + 369) = *a42;
  v53 = a43[1];
  v54 = *a44;
  v55 = a44[1];
  *(_OWORD *)(a9 + 376) = *a43;
  *(_OWORD *)(a9 + 392) = v53;
  *(_OWORD *)(a9 + 408) = v54;
  *(_OWORD *)(a9 + 424) = v55;
  *(_BYTE *)(a9 + 440) = a45;
  v56 = *a46;
  *(_QWORD *)(a9 + 464) = *((_QWORD *)a46 + 2);
  *(double *)(a9 + 16) = a10;
  *(_OWORD *)(a9 + 72) = v46;
  *(_OWORD *)(a9 + 88) = v47;
  *(_OWORD *)(a9 + 120) = v48;
  *(_OWORD *)(a9 + 136) = v49;
  *(_OWORD *)(a9 + 152) = v50;
  *(_OWORD *)(a9 + 168) = v51;
  *(_OWORD *)(a9 + 448) = v56;
  return result;
}

uint64_t sub_1AD005B48()
{
  uint64_t v0;

  sub_1AD005BE8();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD005B98()
{
  uint64_t v0;

  sub_1AD005BE8();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD005BE8()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  char isUniquelyReferenced_nonNull_native;
  char v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  char v25;
  char v26;
  _QWORD *v27;
  char v28;
  char v29;
  char v30;
  char v31;
  char v32;
  uint64_t v33;
  char v34;
  char v35;
  char v36;
  char v37;
  char v38;
  char v39;
  char v40;
  char v41;
  char v42;
  char v43;
  char v44;
  char v45;
  char v46;
  uint64_t v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;
  uint64_t v54;
  uint64_t *i;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  char v67;
  char v68;
  unint64_t v69;
  uint64_t v70;
  _BOOL8 v71;
  uint64_t v72;
  char v73;
  unint64_t v74;
  char v75;
  _OWORD *v76;
  uint64_t v77;
  BOOL v78;
  uint64_t v79;
  __int128 v80;
  char v81;
  char v82;
  unint64_t v83;
  uint64_t v84;
  _BOOL8 v85;
  uint64_t v86;
  char v87;
  unint64_t v88;
  char v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  char v94;
  char v95;
  unint64_t v96;
  uint64_t v97;
  _BOOL8 v98;
  uint64_t v99;
  char v100;
  unint64_t v101;
  char v102;
  _OWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  char v109;
  char v110;
  unint64_t v111;
  uint64_t v112;
  _BOOL8 v113;
  uint64_t v114;
  char v115;
  unint64_t v116;
  char v117;
  _OWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t result;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  unint64_t v137;
  uint64_t v138;
  char v139;
  uint64_t v140;
  char v141;
  char v142;
  uint64_t v143;
  char v144;
  uint64_t v145;
  char v146;
  _QWORD *v147;
  char v148;
  uint64_t v149;
  char v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char v154;
  uint64_t v155;
  unint64_t v156;
  uint64_t v157;
  unint64_t v158;
  int v159;
  uint64_t v160;
  char v161;
  char v162;
  uint64_t v163;
  _OWORD v164[2];
  __int128 v165;
  uint64_t v166;

  v1 = *((_QWORD *)v0 + 1);
  v2 = *((_QWORD *)v0 + 2);
  v4 = *((_QWORD *)v0 + 3);
  v3 = *((_QWORD *)v0 + 4);
  v6 = *((_QWORD *)v0 + 5);
  v5 = *((_QWORD *)v0 + 6);
  v7 = *((_QWORD *)v0 + 8);
  v8 = *((_QWORD *)v0 + 12);
  v122 = *((_QWORD *)v0 + 11);
  v123 = *((_QWORD *)v0 + 13);
  v132 = *((_QWORD *)v0 + 7);
  v133 = *((_QWORD *)v0 + 14);
  v9 = *((_QWORD *)v0 + 18);
  v124 = *((_QWORD *)v0 + 17);
  v125 = *((_QWORD *)v0 + 21);
  v134 = *((_QWORD *)v0 + 22);
  v135 = v0[184];
  v130 = *((_QWORD *)v0 + 24);
  v161 = v0[200];
  v131 = *((_QWORD *)v0 + 26);
  v162 = v0[216];
  v136 = v0[217];
  v126 = *((_QWORD *)v0 + 28);
  v137 = *((_QWORD *)v0 + 29);
  v138 = v0[240];
  v10 = *((_QWORD *)v0 + 31);
  v11 = *((_QWORD *)v0 + 33);
  v141 = v0[272];
  v12 = *((_QWORD *)v0 + 35);
  v142 = v0[288];
  v13 = *((_QWORD *)v0 + 37);
  v144 = v0[304];
  v14 = *((_QWORD *)v0 + 39);
  v146 = v0[320];
  v15 = *((_QWORD *)v0 + 41);
  v148 = v0[336];
  v16 = qword_1AD648AA8[*v0];
  v17 = MEMORY[0x1E0DEBB98];
  v18 = *((_QWORD *)v0 + 43);
  v166 = MEMORY[0x1E0DEBB98];
  *(_QWORD *)&v165 = v16;
  v150 = v0[352];
  v127 = *((_QWORD *)v0 + 45);
  v154 = v0[368];
  v139 = v0[256];
  v152 = v0[353];
  v155 = v0[369];
  v156 = *((_QWORD *)v0 + 50);
  v128 = *((_QWORD *)v0 + 49);
  v129 = *((_QWORD *)v0 + 53);
  v158 = *((_QWORD *)v0 + 54);
  v159 = v0[440];
  v140 = *((_QWORD *)v0 + 58);
  sub_1AD002F7C(&v165, v164);
  v19 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v164, 0x546567617373656DLL, 0xEB00000000657079, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v166 = v17;
  *(_QWORD *)&v165 = v1;
  sub_1AD002F7C(&v165, v164);
  v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v164, 0xD000000000000010, 0x80000001AD69E900, v21);
  swift_bridgeObjectRelease();
  v22 = MEMORY[0x1E0DEB070];
  v166 = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v165 = v2;
  sub_1AD002F7C(&v165, v164);
  v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v164, 0x65746144646E6573, 0xE800000000000000, v23);
  swift_bridgeObjectRelease();
  v166 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v165 = v4;
  *((_QWORD *)&v165 + 1) = v3;
  v24 = MEMORY[0x1E0DEA968];
  sub_1AD002F7C(&v165, v164);
  swift_bridgeObjectRetain();
  v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v164, 0x496567617373656DLL, 0xE900000000000044, v25);
  swift_bridgeObjectRelease();
  v166 = v24;
  *(_QWORD *)&v165 = v6;
  *((_QWORD *)&v165 + 1) = v5;
  sub_1AD002F7C(&v165, v164);
  swift_bridgeObjectRetain();
  v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v164, 0x496E6F6973736573, 0xE900000000000044, v26);
  v27 = v19;
  swift_bridgeObjectRelease();
  if (v7)
  {
    v166 = v24;
    *(_QWORD *)&v165 = v132;
    *((_QWORD *)&v165 + 1) = v7;
    sub_1AD002F7C(&v165, v164);
    swift_bridgeObjectRetain();
    v28 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x547972616D6D7573, 0xEB00000000747865, v28);
    swift_bridgeObjectRelease();
  }
  if (v8)
  {
    if (v8 == 1)
      goto LABEL_127;
    v166 = v24;
    *(_QWORD *)&v165 = v122;
    *((_QWORD *)&v165 + 1) = v8;
    sub_1AD002F7C(&v165, v164);
    swift_bridgeObjectRetain();
    v29 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x7265766965636572, 0xEE00656C646E6148, v29);
    swift_bridgeObjectRelease();
  }
  if (v133 >> 60 != 15)
  {
    v166 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v165 = v123;
    *((_QWORD *)&v165 + 1) = v133;
    sub_1AD002F7C(&v165, v164);
    sub_1AD0040A0(v123, v133);
    v30 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0xD000000000000015, 0x80000001AD69E920, v30);
    swift_bridgeObjectRelease();
  }
  if (v9)
  {
    if (v9 == 1)
      goto LABEL_127;
    v166 = v24;
    *(_QWORD *)&v165 = v124;
    *((_QWORD *)&v165 + 1) = v9;
    sub_1AD002F7C(&v165, v164);
    swift_bridgeObjectRetain();
    v31 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x4C52556572616873, 0xE800000000000000, v31);
    swift_bridgeObjectRelease();
  }
  if (v134)
  {
    if (v134 == 1)
      goto LABEL_127;
    v166 = v24;
    *(_QWORD *)&v165 = v125;
    *((_QWORD *)&v165 + 1) = v134;
    sub_1AD002F7C(&v165, v164);
    swift_bridgeObjectRetain();
    v32 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x7069636974726170, 0xED00004449746E61, v32);
    swift_bridgeObjectRelease();
  }
  v33 = MEMORY[0x1E0DEBB98];
  if ((_DWORD)v135 != 5)
  {
    v166 = MEMORY[0x1E0DEBB98];
    *(_QWORD *)&v165 = v135;
    sub_1AD002F7C(&v165, v164);
    v34 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x546E6F6973736573, 0xEB00000000657079, v34);
    swift_bridgeObjectRelease();
  }
  if ((_DWORD)v136 != 5)
  {
    v166 = v33;
    *(_QWORD *)&v165 = v136;
    sub_1AD002F7C(&v165, v164);
    v35 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0xD000000000000016, 0x80000001AD69E9E0, v35);
    swift_bridgeObjectRelease();
  }
  if (v137 >> 60 != 15)
  {
    v166 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v165 = v126;
    *((_QWORD *)&v165 + 1) = v137;
    sub_1AD002F7C(&v165, v164);
    sub_1AD0040A0(v126, v137);
    v36 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0xD000000000000019, 0x80000001AD69E9C0, v36);
    swift_bridgeObjectRelease();
  }
  if ((_DWORD)v138 != 3)
  {
    v166 = v33;
    *(_QWORD *)&v165 = v138;
    sub_1AD002F7C(&v165, v164);
    v37 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0xD000000000000018, 0x80000001AD69E9A0, v37);
    swift_bridgeObjectRelease();
  }
  if ((v139 & 1) == 0)
  {
    v166 = v22;
    *(_QWORD *)&v165 = v10;
    sub_1AD002F7C(&v165, v164);
    v38 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x5472656767697274, 0xEB00000000656D69, v38);
    swift_bridgeObjectRelease();
  }
  if ((v141 & 1) == 0)
  {
    v166 = v22;
    *(_QWORD *)&v165 = v11;
    sub_1AD002F7C(&v165, v164);
    v39 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x656475746974616CLL, 0xE800000000000000, v39);
    swift_bridgeObjectRelease();
  }
  if ((v142 & 1) == 0)
  {
    v166 = v22;
    *(_QWORD *)&v165 = v12;
    sub_1AD002F7C(&v165, v164);
    v40 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x64757469676E6F6CLL, 0xE900000000000065, v40);
    swift_bridgeObjectRelease();
  }
  if ((v144 & 1) == 0)
  {
    v166 = v22;
    *(_QWORD *)&v165 = v13;
    sub_1AD002F7C(&v165, v164);
    v41 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 1668183400, 0xE400000000000000, v41);
    swift_bridgeObjectRelease();
  }
  if ((v146 & 1) == 0)
  {
    v166 = v22;
    *(_QWORD *)&v165 = v14;
    sub_1AD002F7C(&v165, v164);
    v42 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x6564757469746C61, 0xE800000000000000, v42);
    swift_bridgeObjectRelease();
  }
  if ((v148 & 1) == 0)
  {
    v166 = v22;
    *(_QWORD *)&v165 = v15;
    sub_1AD002F7C(&v165, v164);
    v43 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 1668183414, 0xE400000000000000, v43);
    swift_bridgeObjectRelease();
  }
  if ((v150 & 1) == 0)
  {
    v166 = v22;
    *(_QWORD *)&v165 = v18;
    sub_1AD002F7C(&v165, v164);
    v44 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x6F4C664F656D6974, 0xEE006E6F69746163, v44);
    swift_bridgeObjectRelease();
  }
  if ((_DWORD)v152 != 3)
  {
    v166 = v33;
    *(_QWORD *)&v165 = v152;
    sub_1AD002F7C(&v165, v164);
    v45 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x636E657265666572, 0xEE00656D61724665, v45);
    swift_bridgeObjectRelease();
  }
  if ((v154 & 1) == 0)
  {
    v166 = v22;
    *(_QWORD *)&v165 = v127;
    sub_1AD002F7C(&v165, v164);
    v46 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x6465657073, 0xE500000000000000, v46);
    swift_bridgeObjectRelease();
  }
  if ((_DWORD)v155 != 19)
  {
    v47 = qword_1AD648B40[v155];
    v166 = v33;
    *(_QWORD *)&v165 = v47;
    sub_1AD002F7C(&v165, v164);
    v48 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x5472656767697274, 0xEB00000000657079, v48);
    swift_bridgeObjectRelease();
  }
  if (v156 >> 60 == 11)
    goto LABEL_127;
  if (v156 >> 60 != 15)
  {
    v166 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v165 = v128;
    *((_QWORD *)&v165 + 1) = v156;
    sub_1AD002F7C(&v165, v164);
    sub_1AD00408C(v128, v156);
    v49 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x6143797465666173, 0xEE0079654B656863, v49);
    swift_bridgeObjectRelease();
  }
  if (v158 >> 60 == 11)
    goto LABEL_127;
  if (v158 >> 60 != 15)
  {
    v166 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v165 = v129;
    *((_QWORD *)&v165 + 1) = v158;
    sub_1AD002F7C(&v165, v164);
    sub_1AD0040A0(v129, v158);
    v50 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0xD000000000000010, 0x80000001AD69E980, v50);
    swift_bridgeObjectRelease();
  }
  if (v159 == 2)
  {
    if ((v161 & 1) != 0)
      goto LABEL_50;
  }
  else
  {
    v166 = MEMORY[0x1E0DEAFA0];
    LOBYTE(v165) = v159 & 1;
    sub_1AD002F7C(&v165, v164);
    v51 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v164, 0x697254534F537369, 0xEC00000072656767, v51);
    swift_bridgeObjectRelease();
    if ((v161 & 1) != 0)
    {
LABEL_50:
      if ((v162 & 1) != 0)
        goto LABEL_51;
LABEL_55:
      v166 = v22;
      *(_QWORD *)&v165 = v131;
      sub_1AD002F7C(&v165, v164);
      v53 = swift_isUniquelyReferenced_nonNull_native();
      sub_1AD43F448(v164, 0xD000000000000016, 0x80000001AD69E940, v53);
      swift_bridgeObjectRelease();
      if (!v140)
        return (uint64_t)v27;
      goto LABEL_56;
    }
  }
  v166 = v22;
  *(_QWORD *)&v165 = v130;
  sub_1AD002F7C(&v165, v164);
  v52 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v164, 0xD000000000000010, 0x80000001AD69E960, v52);
  swift_bridgeObjectRelease();
  if ((v162 & 1) == 0)
    goto LABEL_55;
LABEL_51:
  if (!v140)
    return (uint64_t)v27;
LABEL_56:
  if (v140 == 1)
    goto LABEL_127;
  v54 = *(_QWORD *)(v140 + 16);
  if (!v54)
    return (uint64_t)v27;
  swift_bridgeObjectRetain();
  for (i = (uint64_t *)(v140 + 72); ; i += 15)
  {
    v145 = v54;
    v147 = v27;
    v163 = *(i - 5);
    v56 = *(i - 2);
    v57 = *(i - 1);
    v58 = *i;
    v59 = i[1];
    v60 = i[4];
    v61 = i[5];
    v62 = i[8];
    v63 = i[9];
    v160 = v62;
    v157 = v60;
    v153 = *i;
    v149 = v56;
    v151 = v63;
    v143 = v57;
    if (!v57)
    {
      swift_retain();
      sub_1AD003E48(v56, 0);
      sub_1AD00408C(v58, v59);
      swift_retain();
      sub_1AD003E48(v60, v61);
      swift_retain();
      sub_1AD003E48(v62, v63);
      v64 = v61;
      v27 = v147;
      goto LABEL_74;
    }
    if (v57 == 1)
      goto LABEL_127;
    v65 = *(i - 1);
    *(_QWORD *)&v165 = 0;
    *((_QWORD *)&v165 + 1) = 0xE000000000000000;
    swift_retain();
    sub_1AD003E48(v56, v65);
    sub_1AD00408C(v58, v59);
    swift_retain();
    sub_1AD003E48(v60, v61);
    swift_retain();
    sub_1AD003E48(v62, v151);
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    strcpy((char *)&v165, "receiverHandle");
    HIBYTE(v165) = -18;
    *(_QWORD *)&v164[0] = v163;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v66 = v165;
    v166 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v165 = v56;
    *((_QWORD *)&v165 + 1) = v65;
    sub_1AD002F7C(&v165, v164);
    swift_bridgeObjectRetain();
    v67 = swift_isUniquelyReferenced_nonNull_native();
    v69 = sub_1AD0DFB48(v66, *((uint64_t *)&v66 + 1));
    v70 = v147[2];
    v71 = (v68 & 1) == 0;
    v72 = v70 + v71;
    if (__OFADD__(v70, v71))
      break;
    v73 = v68;
    if (v147[3] >= v72)
    {
      v64 = v61;
      if ((v67 & 1) != 0)
      {
        v27 = v147;
        if ((v68 & 1) == 0)
          goto LABEL_71;
      }
      else
      {
        sub_1AD43FCC0();
        v27 = v147;
        if ((v73 & 1) == 0)
          goto LABEL_71;
      }
    }
    else
    {
      sub_1AD43DB40(v72, v67);
      v74 = sub_1AD0DFB48(v66, *((uint64_t *)&v66 + 1));
      if ((v73 & 1) != (v75 & 1))
        goto LABEL_128;
      v69 = v74;
      v64 = v61;
      v27 = v147;
      if ((v73 & 1) == 0)
      {
LABEL_71:
        v27[(v69 >> 6) + 8] |= 1 << v69;
        *(_OWORD *)(v27[6] + 16 * v69) = v66;
        sub_1AD002F7C(v164, (_OWORD *)(v27[7] + 32 * v69));
        v77 = v27[2];
        v78 = __OFADD__(v77, 1);
        v79 = v77 + 1;
        if (v78)
          goto LABEL_123;
        v27[2] = v79;
        swift_bridgeObjectRetain();
        goto LABEL_73;
      }
    }
    v76 = (_OWORD *)(v27[7] + 32 * v69);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v76);
    sub_1AD002F7C(v164, v76);
LABEL_73:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62 = v160;
    v60 = v157;
    v58 = v153;
LABEL_74:
    if (v59 >> 60 == 15)
      goto LABEL_87;
    *(_QWORD *)&v165 = 0;
    *((_QWORD *)&v165 + 1) = 0xE000000000000000;
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    *(_QWORD *)&v165 = 0xD000000000000015;
    *((_QWORD *)&v165 + 1) = 0x80000001AD69E920;
    *(_QWORD *)&v164[0] = v163;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v80 = v165;
    v166 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v165 = v58;
    *((_QWORD *)&v165 + 1) = v59;
    sub_1AD002F7C(&v165, v164);
    sub_1AD0040A0(v58, v59);
    v81 = swift_isUniquelyReferenced_nonNull_native();
    v83 = sub_1AD0DFB48(v80, *((uint64_t *)&v80 + 1));
    v84 = v27[2];
    v85 = (v82 & 1) == 0;
    v86 = v84 + v85;
    if (__OFADD__(v84, v85))
      goto LABEL_120;
    v87 = v82;
    if (v27[3] >= v86)
    {
      if ((v81 & 1) != 0)
      {
        if ((v82 & 1) == 0)
          goto LABEL_84;
      }
      else
      {
        sub_1AD43FCC0();
        if ((v87 & 1) == 0)
          goto LABEL_84;
      }
    }
    else
    {
      sub_1AD43DB40(v86, v81);
      v88 = sub_1AD0DFB48(v80, *((uint64_t *)&v80 + 1));
      if ((v87 & 1) != (v89 & 1))
        goto LABEL_128;
      v83 = v88;
      if ((v87 & 1) == 0)
      {
LABEL_84:
        v27[(v83 >> 6) + 8] |= 1 << v83;
        *(_OWORD *)(v27[6] + 16 * v83) = v80;
        sub_1AD002F7C(v164, (_OWORD *)(v27[7] + 32 * v83));
        v91 = v27[2];
        v78 = __OFADD__(v91, 1);
        v92 = v91 + 1;
        if (v78)
          goto LABEL_124;
        v27[2] = v92;
        swift_bridgeObjectRetain();
        goto LABEL_86;
      }
    }
    v90 = (_OWORD *)(v27[7] + 32 * v83);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
    sub_1AD002F7C(v164, v90);
LABEL_86:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62 = v160;
    v60 = v157;
    v58 = v153;
LABEL_87:
    if (!v64)
      goto LABEL_101;
    if (v64 == 1)
      goto LABEL_127;
    strcpy((char *)&v165, "shareURL");
    BYTE9(v165) = 0;
    WORD5(v165) = 0;
    HIDWORD(v165) = -402653184;
    *(_QWORD *)&v164[0] = v163;
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v93 = v165;
    v166 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v165 = v60;
    *((_QWORD *)&v165 + 1) = v64;
    sub_1AD002F7C(&v165, v164);
    swift_bridgeObjectRetain();
    v94 = swift_isUniquelyReferenced_nonNull_native();
    v96 = sub_1AD0DFB48(v93, *((uint64_t *)&v93 + 1));
    v97 = v27[2];
    v98 = (v95 & 1) == 0;
    v99 = v97 + v98;
    if (__OFADD__(v97, v98))
      goto LABEL_121;
    v100 = v95;
    if (v27[3] >= v99)
    {
      if ((v94 & 1) != 0)
      {
        if ((v95 & 1) == 0)
          goto LABEL_98;
      }
      else
      {
        sub_1AD43FCC0();
        if ((v100 & 1) == 0)
          goto LABEL_98;
      }
    }
    else
    {
      sub_1AD43DB40(v99, v94);
      v101 = sub_1AD0DFB48(v93, *((uint64_t *)&v93 + 1));
      if ((v100 & 1) != (v102 & 1))
        goto LABEL_128;
      v96 = v101;
      if ((v100 & 1) == 0)
      {
LABEL_98:
        v27[(v96 >> 6) + 8] |= 1 << v96;
        *(_OWORD *)(v27[6] + 16 * v96) = v93;
        sub_1AD002F7C(v164, (_OWORD *)(v27[7] + 32 * v96));
        v104 = v27[2];
        v78 = __OFADD__(v104, 1);
        v105 = v104 + 1;
        if (v78)
          goto LABEL_125;
        v27[2] = v105;
        swift_bridgeObjectRetain();
        goto LABEL_100;
      }
    }
    v103 = (_OWORD *)(v27[7] + 32 * v96);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v103);
    sub_1AD002F7C(v164, v103);
LABEL_100:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v62 = v160;
    v60 = v157;
    v58 = v153;
LABEL_101:
    if (v151)
    {
      if (v151 == 1)
        goto LABEL_127;
      strcpy((char *)&v165, "participantID");
      HIWORD(v165) = -4864;
      *(_QWORD *)&v164[0] = v163;
      sub_1AD63C0D4();
      sub_1AD63B810();
      swift_bridgeObjectRelease();
      v108 = v165;
      v166 = MEMORY[0x1E0DEA968];
      *(_QWORD *)&v165 = v62;
      *((_QWORD *)&v165 + 1) = v151;
      sub_1AD002F7C(&v165, v164);
      swift_bridgeObjectRetain();
      v109 = swift_isUniquelyReferenced_nonNull_native();
      v111 = sub_1AD0DFB48(v108, *((uint64_t *)&v108 + 1));
      v112 = v27[2];
      v113 = (v110 & 1) == 0;
      v114 = v112 + v113;
      if (__OFADD__(v112, v113))
        goto LABEL_122;
      v115 = v110;
      if (v27[3] < v114)
      {
        sub_1AD43DB40(v114, v109);
        v116 = sub_1AD0DFB48(v108, *((uint64_t *)&v108 + 1));
        if ((v115 & 1) != (v117 & 1))
          goto LABEL_128;
        v111 = v116;
        if ((v115 & 1) == 0)
          goto LABEL_113;
LABEL_111:
        v118 = (_OWORD *)(v27[7] + 32 * v111);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
        sub_1AD002F7C(v164, v118);
LABEL_115:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AD003F24(v149, v143);
        sub_1AD004118(v153, v59);
        swift_release();
        sub_1AD003F24(v157, v64);
        swift_release();
        v106 = v160;
        v107 = v151;
        goto LABEL_116;
      }
      if ((v109 & 1) != 0)
      {
        if ((v110 & 1) != 0)
          goto LABEL_111;
      }
      else
      {
        sub_1AD43FCC0();
        if ((v115 & 1) != 0)
          goto LABEL_111;
      }
LABEL_113:
      v27[(v111 >> 6) + 8] |= 1 << v111;
      *(_OWORD *)(v27[6] + 16 * v111) = v108;
      sub_1AD002F7C(v164, (_OWORD *)(v27[7] + 32 * v111));
      v119 = v27[2];
      v78 = __OFADD__(v119, 1);
      v120 = v119 + 1;
      if (v78)
        goto LABEL_126;
      v27[2] = v120;
      swift_bridgeObjectRetain();
      goto LABEL_115;
    }
    swift_release();
    sub_1AD003F24(v149, v143);
    sub_1AD004118(v58, v59);
    swift_release();
    sub_1AD003F24(v60, v64);
    swift_release();
    v106 = v62;
    v107 = 0;
LABEL_116:
    sub_1AD003F24(v106, v107);
    v54 = v145 - 1;
    if (v145 == 1)
    {
      sub_1AD009844(v140);
      return (uint64_t)v27;
    }
  }
  __break(1u);
LABEL_120:
  __break(1u);
LABEL_121:
  __break(1u);
LABEL_122:
  __break(1u);
LABEL_123:
  __break(1u);
LABEL_124:
  __break(1u);
LABEL_125:
  __break(1u);
LABEL_126:
  __break(1u);
LABEL_127:
  sub_1AD63BE28();
  __break(1u);
LABEL_128:
  result = sub_1AD63C44C();
  __break(1u);
  return result;
}

uint64_t sub_1AD007298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD0072AC, (uint64_t (*)(void))sub_1AD0072F0);
}

unint64_t sub_1AD0072AC()
{
  unint64_t result;

  result = qword_1EECD18E0;
  if (!qword_1EECD18E0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651F88, &type metadata for SafetyMonitorGroupFields);
    atomic_store(result, (unint64_t *)&qword_1EECD18E0);
  }
  return result;
}

unint64_t sub_1AD0072F0()
{
  unint64_t result;

  result = qword_1EECD18E8;
  if (!qword_1EECD18E8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651FB0, &type metadata for SafetyMonitorGroupFields);
    atomic_store(result, (unint64_t *)&qword_1EECD18E8);
  }
  return result;
}

unint64_t sub_1AD007338()
{
  unint64_t result;

  result = qword_1EECD18F0;
  if (!qword_1EECD18F0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6481CC, &type metadata for SafetyMonitorMessage.SMMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECD18F0);
  }
  return result;
}

uint64_t sub_1AD00737C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD007390, (uint64_t (*)(void))sub_1AD0073D4);
}

unint64_t sub_1AD007390()
{
  unint64_t result;

  result = qword_1EECD18F8;
  if (!qword_1EECD18F8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648298, &type metadata for SafetyMonitorMessage.SMMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECD18F8);
  }
  return result;
}

unint64_t sub_1AD0073D4()
{
  unint64_t result;

  result = qword_1EECD1900;
  if (!qword_1EECD1900)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6482C0, &type metadata for SafetyMonitorMessage.SMMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECD1900);
  }
  return result;
}

unint64_t sub_1AD00741C()
{
  unint64_t result;

  result = qword_1EECD1908;
  if (!qword_1EECD1908)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6482E8, &type metadata for SafetyMonitorMessage.SMsessionType);
    atomic_store(result, (unint64_t *)&qword_1EECD1908);
  }
  return result;
}

uint64_t sub_1AD007460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD007474, (uint64_t (*)(void))sub_1AD0074B8);
}

unint64_t sub_1AD007474()
{
  unint64_t result;

  result = qword_1EECD1910;
  if (!qword_1EECD1910)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6483B4, &type metadata for SafetyMonitorMessage.SMsessionType);
    atomic_store(result, (unint64_t *)&qword_1EECD1910);
  }
  return result;
}

unint64_t sub_1AD0074B8()
{
  unint64_t result;

  result = qword_1EECD1918;
  if (!qword_1EECD1918)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6483DC, &type metadata for SafetyMonitorMessage.SMsessionType);
    atomic_store(result, (unint64_t *)&qword_1EECD1918);
  }
  return result;
}

unint64_t sub_1AD007500()
{
  unint64_t result;

  result = qword_1EECD1920;
  if (!qword_1EECD1920)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648404, &type metadata for SafetyMonitorMessage.SMSessionDestinationType);
    atomic_store(result, (unint64_t *)&qword_1EECD1920);
  }
  return result;
}

uint64_t sub_1AD007544(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD007558, (uint64_t (*)(void))sub_1AD00759C);
}

unint64_t sub_1AD007558()
{
  unint64_t result;

  result = qword_1EECD1928;
  if (!qword_1EECD1928)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6484D0, &type metadata for SafetyMonitorMessage.SMSessionDestinationType);
    atomic_store(result, (unint64_t *)&qword_1EECD1928);
  }
  return result;
}

unint64_t sub_1AD00759C()
{
  unint64_t result;

  result = qword_1EECD1930;
  if (!qword_1EECD1930)
  {
    result = MEMORY[0x1AF44BDF0]("ySh8\b(\t", &type metadata for SafetyMonitorMessage.SMSessionDestinationType);
    atomic_store(result, (unint64_t *)&qword_1EECD1930);
  }
  return result;
}

unint64_t sub_1AD0075E4()
{
  unint64_t result;

  result = qword_1EECD1938;
  if (!qword_1EECD1938)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648520, &type metadata for SafetyMonitorMessage.CLClientLocationReferenceFrame);
    atomic_store(result, (unint64_t *)&qword_1EECD1938);
  }
  return result;
}

uint64_t sub_1AD007628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00763C, (uint64_t (*)(void))sub_1AD007680);
}

unint64_t sub_1AD00763C()
{
  unint64_t result;

  result = qword_1EECD1940;
  if (!qword_1EECD1940)
  {
    result = MEMORY[0x1AF44BDF0]("uRh80'\t", &type metadata for SafetyMonitorMessage.CLClientLocationReferenceFrame);
    atomic_store(result, (unint64_t *)&qword_1EECD1940);
  }
  return result;
}

unint64_t sub_1AD007680()
{
  unint64_t result;

  result = qword_1EECD1948;
  if (!qword_1EECD1948)
  {
    result = MEMORY[0x1AF44BDF0]("]Rh8\b'\t", &type metadata for SafetyMonitorMessage.CLClientLocationReferenceFrame);
    atomic_store(result, (unint64_t *)&qword_1EECD1948);
  }
  return result;
}

unint64_t sub_1AD0076C8()
{
  unint64_t result;

  result = qword_1EECD1950;
  if (!qword_1EECD1950)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64863C, &type metadata for SafetyMonitorMessage.SMTriggerCategory);
    atomic_store(result, (unint64_t *)&qword_1EECD1950);
  }
  return result;
}

uint64_t sub_1AD00770C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD007720, (uint64_t (*)(void))sub_1AD007764);
}

unint64_t sub_1AD007720()
{
  unint64_t result;

  result = qword_1EECD1958;
  if (!qword_1EECD1958)
  {
    result = MEMORY[0x1AF44BDF0]("YQh80&\t", &type metadata for SafetyMonitorMessage.SMTriggerCategory);
    atomic_store(result, (unint64_t *)&qword_1EECD1958);
  }
  return result;
}

unint64_t sub_1AD007764()
{
  unint64_t result;

  result = qword_1EECD1960;
  if (!qword_1EECD1960)
  {
    result = MEMORY[0x1AF44BDF0]("AQh8\b&\t", &type metadata for SafetyMonitorMessage.SMTriggerCategory);
    atomic_store(result, (unint64_t *)&qword_1EECD1960);
  }
  return result;
}

unint64_t sub_1AD0077AC()
{
  unint64_t result;

  result = qword_1EECD1968;
  if (!qword_1EECD1968)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648758, &type metadata for SafetyMonitorMessage.SMDeviceConfigurationLowPowerModeWarningState);
    atomic_store(result, (unint64_t *)&qword_1EECD1968);
  }
  return result;
}

uint64_t sub_1AD0077F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD007804, (uint64_t (*)(void))sub_1AD007848);
}

unint64_t sub_1AD007804()
{
  unint64_t result;

  result = qword_1EECD1970;
  if (!qword_1EECD1970)
  {
    result = MEMORY[0x1AF44BDF0]("=Ph80%\t", &type metadata for SafetyMonitorMessage.SMDeviceConfigurationLowPowerModeWarningState);
    atomic_store(result, (unint64_t *)&qword_1EECD1970);
  }
  return result;
}

unint64_t sub_1AD007848()
{
  unint64_t result;

  result = qword_1EECD1978;
  if (!qword_1EECD1978)
  {
    result = MEMORY[0x1AF44BDF0]("%Ph8\b%\t", &type metadata for SafetyMonitorMessage.SMDeviceConfigurationLowPowerModeWarningState);
    atomic_store(result, (unint64_t *)&qword_1EECD1978);
  }
  return result;
}

uint64_t sub_1AD00788C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD0078A0, (uint64_t (*)(void))sub_1AD0078E4);
}

unint64_t sub_1AD0078A0()
{
  unint64_t result;

  result = qword_1EECD1980;
  if (!qword_1EECD1980)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651FD8, &type metadata for SafetyMonitorMessage);
    atomic_store(result, (unint64_t *)&qword_1EECD1980);
  }
  return result;
}

unint64_t sub_1AD0078E4()
{
  unint64_t result;

  result = qword_1EECD1988;
  if (!qword_1EECD1988)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD652000, &type metadata for SafetyMonitorMessage);
    atomic_store(result, (unint64_t *)&qword_1EECD1988);
  }
  return result;
}

uint64_t sub_1AD00792C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1AD003264(v1, v2, sub_1AD003F24);
}

uint64_t sub_1AD007970@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  *a2 = a1[1];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD0079B0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1AD003264(v1, v2, sub_1AD003F24);
}

uint64_t sub_1AD0079F4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[8];
  v3 = a1[9];
  v4 = a1[10];
  *a2 = a1[7];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD007A34(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return sub_1AD003264(v1, v2, sub_1AD003F24);
}

uint64_t sub_1AD007A78@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[12];
  v3 = a1[13];
  v4 = a1[14];
  *a2 = a1[11];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t destroy for SafetyMonitorGroupFields(_QWORD *a1)
{
  unint64_t v2;
  uint64_t result;

  swift_release();
  if (a1[4] != 1)
    swift_bridgeObjectRelease();
  v2 = a1[6];
  if (v2 >> 60 != 15)
    sub_1AD00412C(a1[5], v2);
  swift_release();
  if (a1[10] != 1)
    swift_bridgeObjectRelease();
  swift_release();
  result = a1[14];
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for SafetyMonitorGroupFields(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;

  v4 = a2[1];
  v5 = a2[2];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  v6 = a2 + 3;
  v7 = a2[4];
  swift_retain();
  if (v7 == 1)
  {
    *(_OWORD *)(a1 + 24) = *v6;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)v6;
    *(_QWORD *)(a1 + 32) = v7;
    swift_bridgeObjectRetain();
  }
  v8 = a2 + 5;
  v9 = a2[6];
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 40) = *(_OWORD *)v8;
  }
  else
  {
    v10 = *v8;
    sub_1AD0040A0(*v8, a2[6]);
    *(_QWORD *)(a1 + 40) = v10;
    *(_QWORD *)(a1 + 48) = v9;
  }
  v11 = a2[8];
  *(_QWORD *)(a1 + 56) = a2[7];
  *(_QWORD *)(a1 + 64) = v11;
  v12 = a2 + 9;
  v13 = a2[10];
  swift_retain();
  if (v13 == 1)
  {
    *(_OWORD *)(a1 + 72) = *v12;
  }
  else
  {
    *(_QWORD *)(a1 + 72) = *(_QWORD *)v12;
    *(_QWORD *)(a1 + 80) = v13;
    swift_bridgeObjectRetain();
  }
  v14 = a2[12];
  *(_QWORD *)(a1 + 88) = a2[11];
  *(_QWORD *)(a1 + 96) = v14;
  v15 = a2 + 13;
  v16 = a2[14];
  swift_retain();
  if (v16 == 1)
  {
    *(_OWORD *)(a1 + 104) = *v15;
  }
  else
  {
    *(_QWORD *)(a1 + 104) = *(_QWORD *)v15;
    *(_QWORD *)(a1 + 112) = v16;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for SafetyMonitorGroupFields(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  *a1 = *a2;
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  v5 = a2[4];
  if (a1[4] == 1)
  {
    if (v5 != 1)
    {
      a1[3] = a2[3];
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 == 1)
  {
    sub_1AD009758((uint64_t)(a1 + 3), &qword_1ED2E3198);
LABEL_6:
    *(_OWORD *)(a1 + 3) = *(_OWORD *)(a2 + 3);
    goto LABEL_8;
  }
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v6 = a2 + 5;
  v7 = a2[6];
  if (a1[6] >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      v8 = *v6;
      sub_1AD0040A0(*v6, a2[6]);
      a1[5] = v8;
      a1[6] = v7;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v7 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(a1 + 5));
LABEL_13:
    *(_OWORD *)(a1 + 5) = *(_OWORD *)v6;
    goto LABEL_15;
  }
  v9 = *v6;
  sub_1AD0040A0(*v6, a2[6]);
  v10 = a1[5];
  v11 = a1[6];
  a1[5] = v9;
  a1[6] = v7;
  sub_1AD00412C(v10, v11);
LABEL_15:
  v12 = a2[8];
  a1[7] = a2[7];
  a1[8] = v12;
  swift_retain();
  swift_release();
  v13 = a2[10];
  if (a1[10] == 1)
  {
    if (v13 != 1)
    {
      a1[9] = a2[9];
      a1[10] = a2[10];
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v13 == 1)
  {
    sub_1AD009758((uint64_t)(a1 + 9), &qword_1ED2E3198);
LABEL_20:
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    goto LABEL_22;
  }
  a1[9] = a2[9];
  a1[10] = a2[10];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_22:
  v14 = a2[12];
  a1[11] = a2[11];
  a1[12] = v14;
  swift_retain();
  swift_release();
  v15 = a2[14];
  if (a1[14] != 1)
  {
    if (v15 != 1)
    {
      a1[13] = a2[13];
      a1[14] = a2[14];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758((uint64_t)(a1 + 13), &qword_1ED2E3198);
    goto LABEL_27;
  }
  if (v15 == 1)
  {
LABEL_27:
    *(_OWORD *)(a1 + 13) = *(_OWORD *)(a2 + 13);
    return a1;
  }
  a1[13] = a2[13];
  a1[14] = a2[14];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD007EC0(uint64_t a1)
{
  (*(void (**)(void))(*(_QWORD *)(MEMORY[0x1E0CB0338] - 8) + 8))();
  return a1;
}

__n128 __swift_memcpy120_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[6];
  *(_QWORD *)(a1 + 112) = *((_QWORD *)a2 + 14);
  *(_OWORD *)(a1 + 80) = v6;
  *(_OWORD *)(a1 + 96) = v7;
  *(__n128 *)(a1 + 64) = result;
  return result;
}

uint64_t assignWithTake for SafetyMonitorGroupFields(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = (_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 32) == 1)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 32);
  if (v5 == 1)
  {
    sub_1AD009758(a1 + 24, &qword_1ED2E3198);
LABEL_4:
    *(_OWORD *)(a1 + 24) = *v4;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)v4;
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  v6 = (_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  if (v7 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 40) = *v6;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(a2 + 48);
  if (v8 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 40);
    goto LABEL_9;
  }
  v9 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 48) = v8;
  sub_1AD00412C(v9, v7);
LABEL_11:
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  v10 = (_OWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 80) == 1)
  {
LABEL_14:
    *(_OWORD *)(a1 + 72) = *v10;
    goto LABEL_16;
  }
  v11 = *(_QWORD *)(a2 + 80);
  if (v11 == 1)
  {
    sub_1AD009758(a1 + 72, &qword_1ED2E3198);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 72) = *(_QWORD *)v10;
  *(_QWORD *)(a1 + 80) = v11;
  swift_bridgeObjectRelease();
LABEL_16:
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  v12 = (_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 112) != 1)
  {
    v13 = *(_QWORD *)(a2 + 112);
    if (v13 != 1)
    {
      *(_QWORD *)(a1 + 104) = *v12;
      *(_QWORD *)(a1 + 112) = v13;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(a1 + 104, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 104) = *(_OWORD *)v12;
  return a1;
}

uint64_t getEnumTagSinglePayload for SafetyMonitorGroupFields(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 120))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SafetyMonitorGroupFields(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 120) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 120) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SafetyMonitorGroupFields()
{
  return &type metadata for SafetyMonitorGroupFields;
}

uint64_t destroy for SafetyMonitorMessage(_QWORD *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (a1[12] != 1)
    swift_bridgeObjectRelease();
  v2 = a1[14];
  if (v2 >> 60 != 15)
    sub_1AD00412C(a1[13], v2);
  swift_release();
  if (a1[18] != 1)
    swift_bridgeObjectRelease();
  swift_release();
  if (a1[22] != 1)
    swift_bridgeObjectRelease();
  v3 = a1[29];
  if (v3 >> 60 != 15)
    sub_1AD00412C(a1[28], v3);
  swift_release();
  v4 = a1[50];
  if (v4 >> 60 != 15 && (v4 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(a1[49], v4);
  swift_release();
  v5 = a1[54];
  if (v5 >> 60 != 15 && (v5 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(a1[53], v5);
  swift_release();
  result = a1[58];
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for SafetyMonitorMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  v6 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v6;
  v7 = (_OWORD *)(a2 + 88);
  v8 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v8 == 1)
  {
    *(_OWORD *)(a1 + 88) = *v7;
  }
  else
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)v7;
    *(_QWORD *)(a1 + 96) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = (uint64_t *)(a2 + 104);
  v10 = *(_QWORD *)(a2 + 112);
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_1AD0040A0(*v9, *(_QWORD *)(a2 + 112));
    *(_QWORD *)(a1 + 104) = v11;
    *(_QWORD *)(a1 + 112) = v10;
  }
  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  v13 = (_OWORD *)(a2 + 136);
  v14 = *(_QWORD *)(a2 + 144);
  swift_retain();
  if (v14 == 1)
  {
    *(_OWORD *)(a1 + 136) = *v13;
  }
  else
  {
    *(_QWORD *)(a1 + 136) = *(_QWORD *)v13;
    *(_QWORD *)(a1 + 144) = v14;
    swift_bridgeObjectRetain();
  }
  v15 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v15;
  v16 = (_OWORD *)(a2 + 168);
  v17 = *(_QWORD *)(a2 + 176);
  swift_retain();
  if (v17 == 1)
  {
    *(_OWORD *)(a1 + 168) = *v16;
  }
  else
  {
    *(_QWORD *)(a1 + 168) = *(_QWORD *)v16;
    *(_QWORD *)(a1 + 176) = v17;
    swift_bridgeObjectRetain();
  }
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  v18 = (uint64_t *)(a2 + 224);
  v19 = *(_QWORD *)(a2 + 232);
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 224) = *(_OWORD *)v18;
  }
  else
  {
    v20 = *v18;
    sub_1AD0040A0(*v18, *(_QWORD *)(a2 + 232));
    *(_QWORD *)(a1 + 224) = v20;
    *(_QWORD *)(a1 + 232) = v19;
  }
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_WORD *)(a1 + 368) = *(_WORD *)(a2 + 368);
  v21 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v21;
  v22 = (uint64_t *)(a2 + 392);
  v23 = *(_QWORD *)(a2 + 400);
  swift_retain();
  if (v23 >> 60 == 11 || v23 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 392) = *(_OWORD *)v22;
  }
  else
  {
    v24 = *v22;
    sub_1AD0040A0(*v22, v23);
    *(_QWORD *)(a1 + 392) = v24;
    *(_QWORD *)(a1 + 400) = v23;
  }
  v25 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v25;
  v26 = (uint64_t *)(a2 + 424);
  v27 = *(_QWORD *)(a2 + 432);
  swift_retain();
  if (v27 >> 60 == 11 || v27 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 424) = *(_OWORD *)v26;
  }
  else
  {
    v28 = *v26;
    sub_1AD0040A0(*v26, v27);
    *(_QWORD *)(a1 + 424) = v28;
    *(_QWORD *)(a1 + 432) = v27;
  }
  *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
  v29 = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v29;
  v30 = *(_QWORD *)(a2 + 464);
  swift_retain();
  if (v30 != 1)
    swift_bridgeObjectRetain();
  *(_QWORD *)(a1 + 464) = v30;
  return a1;
}

uint64_t assignWithCopy for SafetyMonitorMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) == 1)
  {
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 == 1)
  {
    sub_1AD009758(a1 + 88, &qword_1ED2E3198);
LABEL_6:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v6 = (uint64_t *)(a2 + 104);
  v7 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112) >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      v8 = *v6;
      sub_1AD0040A0(*v6, *(_QWORD *)(a2 + 112));
      *(_QWORD *)(a1 + 104) = v8;
      *(_QWORD *)(a1 + 112) = v7;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v7 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 104);
LABEL_13:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)v6;
    goto LABEL_15;
  }
  v9 = *v6;
  sub_1AD0040A0(*v6, *(_QWORD *)(a2 + 112));
  v10 = *(_QWORD *)(a1 + 104);
  v11 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 104) = v9;
  *(_QWORD *)(a1 + 112) = v7;
  sub_1AD00412C(v10, v11);
LABEL_15:
  v12 = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = v12;
  swift_retain();
  swift_release();
  v13 = *(_QWORD *)(a2 + 144);
  if (*(_QWORD *)(a1 + 144) == 1)
  {
    if (v13 != 1)
    {
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      swift_bridgeObjectRetain();
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v13 == 1)
  {
    sub_1AD009758(a1 + 136, &qword_1ED2E3198);
LABEL_20:
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    goto LABEL_22;
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_22:
  v14 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v14;
  swift_retain();
  swift_release();
  v15 = *(_QWORD *)(a2 + 176);
  if (*(_QWORD *)(a1 + 176) == 1)
  {
    if (v15 != 1)
    {
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      swift_bridgeObjectRetain();
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v15 == 1)
  {
    sub_1AD009758(a1 + 168, &qword_1ED2E3198);
LABEL_27:
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    goto LABEL_29;
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_29:
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  v16 = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 192) = v16;
  v17 = *(_QWORD *)(a2 + 208);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = v17;
  *(_BYTE *)(a1 + 217) = *(_BYTE *)(a2 + 217);
  v18 = (uint64_t *)(a2 + 224);
  v19 = *(_QWORD *)(a2 + 232);
  if (*(_QWORD *)(a1 + 232) >> 60 == 15)
  {
    if (v19 >> 60 != 15)
    {
      v20 = *v18;
      sub_1AD0040A0(*v18, *(_QWORD *)(a2 + 232));
      *(_QWORD *)(a1 + 224) = v20;
      *(_QWORD *)(a1 + 232) = v19;
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  if (v19 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 224);
LABEL_34:
    *(_OWORD *)(a1 + 224) = *(_OWORD *)v18;
    goto LABEL_36;
  }
  v21 = *v18;
  sub_1AD0040A0(*v18, *(_QWORD *)(a2 + 232));
  v22 = *(_QWORD *)(a1 + 224);
  v23 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 224) = v21;
  *(_QWORD *)(a1 + 232) = v19;
  sub_1AD00412C(v22, v23);
LABEL_36:
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v24 = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = v24;
  v25 = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v25;
  v26 = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = v26;
  v27 = *(_QWORD *)(a2 + 296);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v27;
  v28 = *(_QWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 312) = v28;
  v29 = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_QWORD *)(a1 + 328) = v29;
  v30 = *(_QWORD *)(a2 + 344);
  *(_BYTE *)(a1 + 352) = *(_BYTE *)(a2 + 352);
  *(_QWORD *)(a1 + 344) = v30;
  *(_BYTE *)(a1 + 353) = *(_BYTE *)(a2 + 353);
  v31 = *(_QWORD *)(a2 + 360);
  *(_BYTE *)(a1 + 368) = *(_BYTE *)(a2 + 368);
  *(_QWORD *)(a1 + 360) = v31;
  *(_BYTE *)(a1 + 369) = *(_BYTE *)(a2 + 369);
  v32 = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 384) = v32;
  swift_retain();
  swift_release();
  v33 = (uint64_t *)(a2 + 392);
  v34 = *(_QWORD *)(a2 + 400);
  v35 = v34 & 0xF000000000000000;
  if (*(_QWORD *)(a1 + 400) >> 60 == 11)
  {
    if (v35 == 0xB000000000000000)
      goto LABEL_46;
LABEL_42:
    if (v34 >> 60 != 15)
    {
      v36 = *v33;
      sub_1AD0040A0(*v33, *(_QWORD *)(a2 + 400));
      *(_QWORD *)(a1 + 392) = v36;
      *(_QWORD *)(a1 + 400) = v34;
      goto LABEL_47;
    }
    goto LABEL_46;
  }
  if (v35 == 0xB000000000000000)
  {
    sub_1AD009758(a1 + 392, &qword_1ED2E3250);
LABEL_46:
    *(_OWORD *)(a1 + 392) = *(_OWORD *)v33;
    goto LABEL_47;
  }
  if (*(_QWORD *)(a1 + 400) >> 60 == 15)
    goto LABEL_42;
  if (v34 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 392);
    goto LABEL_46;
  }
  v47 = *v33;
  sub_1AD0040A0(*v33, *(_QWORD *)(a2 + 400));
  v48 = *(_QWORD *)(a1 + 392);
  v49 = *(_QWORD *)(a1 + 400);
  *(_QWORD *)(a1 + 392) = v47;
  *(_QWORD *)(a1 + 400) = v34;
  sub_1AD00412C(v48, v49);
LABEL_47:
  v37 = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 416) = v37;
  swift_retain();
  swift_release();
  v38 = (uint64_t *)(a2 + 424);
  v39 = *(_QWORD *)(a2 + 432);
  v40 = v39 & 0xF000000000000000;
  if (*(_QWORD *)(a1 + 432) >> 60 == 11)
  {
    if (v40 == 0xB000000000000000)
      goto LABEL_57;
LABEL_53:
    if (v39 >> 60 != 15)
    {
      v41 = *v38;
      sub_1AD0040A0(*v38, *(_QWORD *)(a2 + 432));
      *(_QWORD *)(a1 + 424) = v41;
      *(_QWORD *)(a1 + 432) = v39;
      goto LABEL_58;
    }
    goto LABEL_57;
  }
  if (v40 == 0xB000000000000000)
  {
    sub_1AD009758(a1 + 424, &qword_1ED2E3250);
LABEL_57:
    *(_OWORD *)(a1 + 424) = *(_OWORD *)v38;
    goto LABEL_58;
  }
  if (*(_QWORD *)(a1 + 432) >> 60 == 15)
    goto LABEL_53;
  if (v39 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 424);
    goto LABEL_57;
  }
  v50 = *v38;
  sub_1AD0040A0(*v38, *(_QWORD *)(a2 + 432));
  v51 = *(_QWORD *)(a1 + 424);
  v52 = *(_QWORD *)(a1 + 432);
  *(_QWORD *)(a1 + 424) = v50;
  *(_QWORD *)(a1 + 432) = v39;
  sub_1AD00412C(v51, v52);
LABEL_58:
  *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
  v42 = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v42;
  swift_retain();
  swift_release();
  v43 = (uint64_t *)(a1 + 464);
  v44 = *(_QWORD *)(a2 + 464);
  if (*(_QWORD *)(a1 + 464) == 1)
  {
    if (v44 != 1)
    {
      *v43 = v44;
      swift_bridgeObjectRetain();
      return a1;
    }
    v45 = 1;
  }
  else
  {
    if (v44 != 1)
    {
      *v43 = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(a1 + 464, &qword_1EECD1990);
    v45 = *(_QWORD *)(a2 + 464);
  }
  *v43 = v45;
  return a1;
}

void *__swift_memcpy472_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1D8uLL);
}

uint64_t assignWithTake for SafetyMonitorMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  uint64_t v14;
  _OWORD *v15;
  uint64_t v16;
  _OWORD *v17;
  unint64_t v18;
  unint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  unint64_t v22;
  unint64_t v23;
  _OWORD *v24;
  unint64_t v25;
  unint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  v7 = (_OWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 96) == 1)
    goto LABEL_4;
  v8 = *(_QWORD *)(a2 + 96);
  if (v8 == 1)
  {
    sub_1AD009758(a1 + 88, &qword_1ED2E3198);
LABEL_4:
    *(_OWORD *)(a1 + 88) = *v7;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)v7;
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
LABEL_6:
  v9 = (_OWORD *)(a2 + 104);
  v10 = *(_QWORD *)(a1 + 112);
  if (v10 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 104) = *v9;
    goto LABEL_11;
  }
  v11 = *(_QWORD *)(a2 + 112);
  if (v11 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 104);
    goto LABEL_9;
  }
  v12 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)v9;
  *(_QWORD *)(a1 + 112) = v11;
  sub_1AD00412C(v12, v10);
LABEL_11:
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  swift_release();
  v13 = (_OWORD *)(a2 + 136);
  if (*(_QWORD *)(a1 + 144) == 1)
  {
LABEL_14:
    *(_OWORD *)(a1 + 136) = *v13;
    goto LABEL_16;
  }
  v14 = *(_QWORD *)(a2 + 144);
  if (v14 == 1)
  {
    sub_1AD009758(a1 + 136, &qword_1ED2E3198);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 136) = *(_QWORD *)v13;
  *(_QWORD *)(a1 + 144) = v14;
  swift_bridgeObjectRelease();
LABEL_16:
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_release();
  v15 = (_OWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 176) == 1)
  {
LABEL_19:
    *(_OWORD *)(a1 + 168) = *v15;
    goto LABEL_21;
  }
  v16 = *(_QWORD *)(a2 + 176);
  if (v16 == 1)
  {
    sub_1AD009758(a1 + 168, &qword_1ED2E3198);
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 168) = *(_QWORD *)v15;
  *(_QWORD *)(a1 + 176) = v16;
  swift_bridgeObjectRelease();
LABEL_21:
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  v17 = (_OWORD *)(a2 + 224);
  v18 = *(_QWORD *)(a1 + 232);
  if (v18 >> 60 == 15)
  {
LABEL_24:
    *(_OWORD *)(a1 + 224) = *v17;
    goto LABEL_26;
  }
  v19 = *(_QWORD *)(a2 + 232);
  if (v19 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 224);
    goto LABEL_24;
  }
  v20 = *(_QWORD *)(a1 + 224);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)v17;
  *(_QWORD *)(a1 + 232) = v19;
  sub_1AD00412C(v20, v18);
LABEL_26:
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  *(_BYTE *)(a1 + 320) = *(_BYTE *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  *(_BYTE *)(a1 + 336) = *(_BYTE *)(a2 + 336);
  *(_QWORD *)(a1 + 344) = *(_QWORD *)(a2 + 344);
  *(_WORD *)(a1 + 352) = *(_WORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  *(_WORD *)(a1 + 368) = *(_WORD *)(a2 + 368);
  *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
  swift_release();
  v21 = (_OWORD *)(a2 + 392);
  v22 = *(_QWORD *)(a1 + 400);
  if (v22 >> 60 == 11)
  {
LABEL_32:
    *(_OWORD *)(a1 + 392) = *v21;
    goto LABEL_33;
  }
  v23 = *(_QWORD *)(a2 + 400);
  if (v23 >> 60 == 11)
  {
    sub_1AD009758(a1 + 392, &qword_1ED2E3250);
    goto LABEL_32;
  }
  if (v22 >> 60 == 15)
    goto LABEL_32;
  if (v23 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 392);
    goto LABEL_32;
  }
  v30 = *(_QWORD *)(a1 + 392);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)v21;
  *(_QWORD *)(a1 + 400) = v23;
  sub_1AD00412C(v30, v22);
LABEL_33:
  *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
  swift_release();
  v24 = (_OWORD *)(a2 + 424);
  v25 = *(_QWORD *)(a1 + 432);
  if (v25 >> 60 == 11)
  {
LABEL_39:
    *(_OWORD *)(a1 + 424) = *v24;
    goto LABEL_40;
  }
  v26 = *(_QWORD *)(a2 + 432);
  if (v26 >> 60 == 11)
  {
    sub_1AD009758(a1 + 424, &qword_1ED2E3250);
    goto LABEL_39;
  }
  if (v25 >> 60 == 15)
    goto LABEL_39;
  if (v26 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 424);
    goto LABEL_39;
  }
  v31 = *(_QWORD *)(a1 + 424);
  *(_QWORD *)(a1 + 424) = *(_QWORD *)v24;
  *(_QWORD *)(a1 + 432) = v26;
  sub_1AD00412C(v31, v25);
LABEL_40:
  *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  swift_release();
  v27 = (_QWORD *)(a1 + 464);
  v28 = *(_QWORD *)(a2 + 464);
  if (*(_QWORD *)(a1 + 464) != 1)
  {
    if (v28 != 1)
    {
      *v27 = v28;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(a1 + 464, &qword_1EECD1990);
    v28 = *(_QWORD *)(a2 + 464);
  }
  *v27 = v28;
  return a1;
}

uint64_t getEnumTagSinglePayload for SafetyMonitorMessage(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 472))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SafetyMonitorMessage(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 472) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 472) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SafetyMonitorMessage()
{
  return &type metadata for SafetyMonitorMessage;
}

ValueMetadata *type metadata accessor for SafetyMonitorMessage.SMMessageType()
{
  return &type metadata for SafetyMonitorMessage.SMMessageType;
}

ValueMetadata *type metadata accessor for SafetyMonitorMessage.SMsessionType()
{
  return &type metadata for SafetyMonitorMessage.SMsessionType;
}

uint64_t getEnumTagSinglePayload for VideoMessageMessageQuality(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFC)
    goto LABEL_17;
  if (a2 + 4 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 4) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 4;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 4;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 4;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v8 = v6 - 5;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9BlastDoor20SafetyMonitorMessageV13SMsessionTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD00923C + 4 * byte_1AD648185[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD009270 + 4 * byte_1AD648180[v4]))();
}

uint64_t sub_1AD009270(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD009278(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD009280);
  return result;
}

uint64_t sub_1AD00928C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD009294);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD009298(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD0092A0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SafetyMonitorMessage.SMSessionDestinationType()
{
  return &type metadata for SafetyMonitorMessage.SMSessionDestinationType;
}

ValueMetadata *type metadata accessor for SafetyMonitorMessage.CLClientLocationReferenceFrame()
{
  return &type metadata for SafetyMonitorMessage.CLClientLocationReferenceFrame;
}

uint64_t _s9BlastDoor20SafetyMonitorMessageV13SMMessageTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xEE)
    goto LABEL_17;
  if (a2 + 18 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 18) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 18;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 18;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 18;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x13;
  v8 = v6 - 19;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9BlastDoor20SafetyMonitorMessageV13SMMessageTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 18 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 18) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xEE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xED)
    return ((uint64_t (*)(void))((char *)&loc_1AD0093AC + 4 * byte_1AD64818F[v4]))();
  *a1 = a2 + 18;
  return ((uint64_t (*)(void))((char *)sub_1AD0093E0 + 4 * byte_1AD64818A[v4]))();
}

uint64_t sub_1AD0093E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD0093E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD0093F0);
  return result;
}

uint64_t sub_1AD0093FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD009404);
  *(_BYTE *)result = a2 + 18;
  return result;
}

uint64_t sub_1AD009408(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD009410(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SafetyMonitorMessage.SMTriggerCategory()
{
  return &type metadata for SafetyMonitorMessage.SMTriggerCategory;
}

uint64_t _s9BlastDoor20SafetyMonitorMessageV45SMDeviceConfigurationLowPowerModeWarningStateOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD009478 + 4 * byte_1AD648199[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD0094AC + 4 * byte_1AD648194[v4]))();
}

uint64_t sub_1AD0094AC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD0094B4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD0094BCLL);
  return result;
}

uint64_t sub_1AD0094C8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD0094D0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD0094D4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD0094DC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SafetyMonitorMessage.SMDeviceConfigurationLowPowerModeWarningState()
{
  return &type metadata for SafetyMonitorMessage.SMDeviceConfigurationLowPowerModeWarningState;
}

unint64_t sub_1AD0094F8()
{
  unint64_t result;

  result = qword_1EECD1998;
  if (!qword_1EECD1998)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6487C0, &type metadata for SafetyMonitorMessage.SMDeviceConfigurationLowPowerModeWarningState);
    atomic_store(result, (unint64_t *)&qword_1EECD1998);
  }
  return result;
}

unint64_t sub_1AD00953C()
{
  unint64_t result;

  result = qword_1EECD19A0;
  if (!qword_1EECD19A0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6486A4, &type metadata for SafetyMonitorMessage.SMTriggerCategory);
    atomic_store(result, (unint64_t *)&qword_1EECD19A0);
  }
  return result;
}

unint64_t sub_1AD009580()
{
  unint64_t result;

  result = qword_1EECD19A8;
  if (!qword_1EECD19A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648588, &type metadata for SafetyMonitorMessage.CLClientLocationReferenceFrame);
    atomic_store(result, (unint64_t *)&qword_1EECD19A8);
  }
  return result;
}

unint64_t sub_1AD0095C4()
{
  unint64_t result;

  result = qword_1EECD19B0;
  if (!qword_1EECD19B0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64846C, &type metadata for SafetyMonitorMessage.SMSessionDestinationType);
    atomic_store(result, (unint64_t *)&qword_1EECD19B0);
  }
  return result;
}

unint64_t sub_1AD009608()
{
  unint64_t result;

  result = qword_1EECD19B8;
  if (!qword_1EECD19B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648350, &type metadata for SafetyMonitorMessage.SMsessionType);
    atomic_store(result, (unint64_t *)&qword_1EECD19B8);
  }
  return result;
}

unint64_t sub_1AD00964C()
{
  unint64_t result;

  result = qword_1EECD19C0;
  if (!qword_1EECD19C0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648234, &type metadata for SafetyMonitorMessage.SMMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECD19C0);
  }
  return result;
}

unint64_t sub_1AD009690()
{
  unint64_t result;

  result = qword_1EECD19C8;
  if (!qword_1EECD19C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD684AE0, &type metadata for ValidatorError);
    atomic_store(result, (unint64_t *)&qword_1EECD19C8);
  }
  return result;
}

uint64_t sub_1AD0096D4(uint64_t result)
{
  if (result != 1)
    return sub_1AD0096E4(result);
  return result;
}

uint64_t sub_1AD0096E4(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD009710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD009758(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AD009794(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11)
    return sub_1AD004118(a1, a2);
  return a1;
}

BOOL sub_1AD0097A8(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

BOOL sub_1AD0097B4(uint64_t a1, uint64_t a2)
{
  return a2 >= a1;
}

uint64_t sub_1AD0097C0()
{
  return swift_deallocObject();
}

uint64_t sub_1AD0097D0(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD280D48(a1, (char *)(v1 + 16));
}

uint64_t sub_1AD0097D8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD0097FC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AD280D70(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_1AD009804(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AD576A28(a1, (uint64_t *)(v1 + 16));
}

BOOL sub_1AD00980C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AD576A3C(a1, (uint64_t *)(v1 + 16));
}

uint64_t sub_1AD009814()
{
  return swift_deallocObject();
}

uint64_t sub_1AD009824()
{
  return swift_deallocObject();
}

uint64_t sub_1AD009834()
{
  return swift_deallocObject();
}

uint64_t sub_1AD009844(uint64_t result)
{
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t VideoMessageMessageQuality.init(from:)@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  Swift::String v5;
  char v6;
  char v8;
  _QWORD v9[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD63C518();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v9, v9[3]);
    v5._countAndFlagsBits = sub_1AD63C2B4();
    VideoMessageMessageQuality.init(rawValue:)(v5);
    if (v8 == 5)
      v6 = 4;
    else
      v6 = v8;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    *a2 = v6;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

BlastDoor::VideoMessageMessageQuality_optional __swiftcall VideoMessageMessageQuality.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  BlastDoor::VideoMessageMessageQuality_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AD63BE94();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t VideoMessageMessageQuality.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AD009A08 + 4 * byte_1AD648BE0[*v0]))(7827308, 0xE300000000000000);
}

uint64_t sub_1AD009A08()
{
  return 0x6D756964656DLL;
}

uint64_t sub_1AD009A1C()
{
  return 1751607656;
}

uint64_t sub_1AD009A2C()
{
  return 7823730;
}

uint64_t sub_1AD009A38()
{
  return 0x6E776F6E6B6E75;
}

void sub_1AD009A50(char *a1)
{
  sub_1AD434328(*a1);
}

BlastDoor::VideoMessageMessageQuality_optional sub_1AD009A5C(Swift::String *a1)
{
  return VideoMessageMessageQuality.init(rawValue:)(*a1);
}

uint64_t sub_1AD009A68()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1AD009A94 + 4 * byte_1AD648BE5[*v0]))();
}

void sub_1AD009A94(_QWORD *a1@<X8>)
{
  *a1 = 0x6D756964656DLL;
  a1[1] = 0xE600000000000000;
}

void sub_1AD009AAC(_QWORD *a1@<X8>)
{
  *a1 = 1751607656;
  a1[1] = 0xE400000000000000;
}

void sub_1AD009AC0(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 7823730;
  a1[1] = v1;
}

void sub_1AD009AD0(_QWORD *a1@<X8>)
{
  *a1 = 0x6E776F6E6B6E75;
  a1[1] = 0xE700000000000000;
}

void sub_1AD009AEC()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1AD63C4AC();
  __asm { BR              X9 }
}

uint64_t sub_1AD009B34()
{
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

void sub_1AD009BA4()
{
  __asm { BR              X10 }
}

uint64_t sub_1AD009BDC()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

void sub_1AD009C38()
{
  unsigned __int8 *v0;
  uint64_t v1;

  v1 = *v0;
  sub_1AD63C4AC();
  __asm { BR              X9 }
}

uint64_t sub_1AD009C7C()
{
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD009CEC@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return VideoMessageMessageQuality.init(from:)(a1, a2);
}

uint64_t sub_1AD009D00()
{
  sub_1AD00B8B4();
  return sub_1AD63B8C4();
}

uint64_t sub_1AD009D4C@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  uint64_t v2;
  char v5;
  char v7;
  _QWORD v8[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD63C518();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    sub_1AD63C2B4();
    sub_1AD009E1C(&v7);
    if (v7 == 3)
      v5 = 2;
    else
      v5 = v7;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
    *a2 = v5;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AD009E1C@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD009E74()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x6F65646976;
  if (*v0 != 1)
    v1 = 0x6E776F6E6B6E75;
  if (*v0)
    return v1;
  else
    return 0x6F69647561;
}

uint64_t sub_1AD009EC8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD433F20(*a1, *a2);
}

uint64_t sub_1AD009ED4@<X0>(char *a1@<X8>)
{
  return sub_1AD009E1C(a1);
}

void sub_1AD009EE0(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE500000000000000;
  v4 = 0xE500000000000000;
  v5 = 0x6F65646976;
  if (v2 != 1)
  {
    v5 = 0x6E776F6E6B6E75;
    v4 = 0xE700000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x6F69647561;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AD009F38()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD009FD0()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD00A044()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD00A0D8@<X0>(_QWORD *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD009D4C(a1, a2);
}

uint64_t sub_1AD00A0EC()
{
  sub_1AD00B870();
  return sub_1AD63B8C4();
}

uint64_t sub_1AD00A138@<X0>(_QWORD *a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD63C518();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    sub_1AD63C2B4();
    v5 = sub_1AD63BE94();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
    *a2 = v5 != 0;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AD00A220@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD00A280()
{
  _BYTE *v0;

  if (*v0)
    return 0x6E776F6E6B6E75;
  else
    return 0xD00000000000003BLL;
}

uint64_t sub_1AD00A2C0(char *a1, char *a2)
{
  return sub_1AD434280(*a1, *a2);
}

uint64_t sub_1AD00A2CC@<X0>(char *a1@<X8>)
{
  return sub_1AD00A220(a1);
}

void sub_1AD00A2D8(unint64_t *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;
  unint64_t v3;

  v2 = 0xD00000000000003BLL;
  if (*v1)
    v2 = 0x6E776F6E6B6E75;
  v3 = 0x80000001AD69CA00;
  if (*v1)
    v3 = 0xE700000000000000;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AD00A31C()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD00A3A0()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD00A400()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD00A480@<X0>(_QWORD *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_1AD00A138(a1, a2);
}

uint64_t sub_1AD00A494()
{
  sub_1AD00B82C();
  return sub_1AD63B8C4();
}

uint64_t sub_1AD00A4E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1AD00A518(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*sub_1AD00A550())()
{
  return nullsub_1;
}

uint64_t sub_1AD00A560@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoMessageMetadata();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 20));
  return result;
}

uint64_t type metadata accessor for VideoMessageMetadata()
{
  uint64_t result;

  result = qword_1ED2E2440;
  if (!qword_1ED2E2440)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD00A5CC(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for VideoMessageMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 20)) = v2;
  return result;
}

uint64_t (*sub_1AD00A5F8())()
{
  type metadata accessor for VideoMessageMetadata();
  return nullsub_1;
}

uint64_t sub_1AD00A620@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoMessageMetadata();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t sub_1AD00A650(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for VideoMessageMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = v2;
  return result;
}

uint64_t (*sub_1AD00A67C())()
{
  type metadata accessor for VideoMessageMetadata();
  return nullsub_1;
}

uint64_t sub_1AD00A6A4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoMessageMetadata();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t sub_1AD00A6D4(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for VideoMessageMetadata();
  *(_BYTE *)(v1 + *(int *)(result + 28)) = v2;
  return result;
}

uint64_t (*sub_1AD00A700())()
{
  type metadata accessor for VideoMessageMetadata();
  return nullsub_1;
}

uint64_t sub_1AD00A728()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for VideoMessageMetadata() + 32));
}

uint64_t sub_1AD00A748(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoMessageMetadata();
  *(_QWORD *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*sub_1AD00A774())()
{
  type metadata accessor for VideoMessageMetadata();
  return nullsub_1;
}

double sub_1AD00A79C()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(type metadata accessor for VideoMessageMetadata() + 36));
}

uint64_t sub_1AD00A7BC(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for VideoMessageMetadata();
  *(double *)(v1 + *(int *)(result + 36)) = a1;
  return result;
}

uint64_t (*sub_1AD00A7E8())()
{
  type metadata accessor for VideoMessageMetadata();
  return nullsub_1;
}

int *sub_1AD00A810@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>, double a7@<D0>)
{
  char v11;
  char v12;
  char v13;
  uint64_t v14;
  int *result;

  v11 = *a2;
  v12 = *a3;
  v13 = *a4;
  v14 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(a6, a1, v14);
  result = (int *)type metadata accessor for VideoMessageMetadata();
  *(_BYTE *)(a6 + result[5]) = v11;
  *(_BYTE *)(a6 + result[6]) = v12;
  *(_BYTE *)(a6 + result[7]) = v13;
  *(_QWORD *)(a6 + result[8]) = a5;
  *(double *)(a6 + result[9]) = a7;
  return result;
}

void sub_1AD00A8AC()
{
  uint64_t v1;

  sub_1AD63B084();
  sub_1ACFF9724(&qword_1EECD19E0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09C8]);
  sub_1AD63B6C0();
  v1 = type metadata accessor for VideoMessageMetadata();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  __asm { BR              X10 }
}

uint64_t sub_1AD00A9E8()
{
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  sub_1AD63C4B8();
  return sub_1AD63C4E8();
}

uint64_t sub_1AD00AA80()
{
  sub_1AD63C4AC();
  sub_1AD00A8AC();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD00AABC()
{
  sub_1AD63C4AC();
  sub_1AD00A8AC();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD00AAFC()
{
  sub_1AD63C4AC();
  sub_1AD00A8AC();
  return sub_1AD63C4F4();
}

BOOL sub_1AD00AB38(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  int v6;
  int v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  _BOOL8 result;
  uint64_t v13;
  int v14;
  int v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v21;
  char v22;

  if ((sub_1AD63B06C() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for VideoMessageMetadata();
  v5 = v4[5];
  v6 = *(unsigned __int8 *)(a1 + v5);
  v7 = *(unsigned __int8 *)(a2 + v5);
  if (v6)
  {
    if (v6 == 1)
    {
      v8 = 0xE500000000000000;
      v9 = 0x6F65646976;
      if (v7)
        goto LABEL_5;
LABEL_11:
      v10 = 0xE500000000000000;
      if (v9 != 0x6F69647561)
        goto LABEL_16;
      goto LABEL_14;
    }
    v8 = 0xE700000000000000;
    v9 = 0x6E776F6E6B6E75;
    if (!v7)
      goto LABEL_11;
  }
  else
  {
    v8 = 0xE500000000000000;
    v9 = 0x6F69647561;
    if (!v7)
      goto LABEL_11;
  }
LABEL_5:
  if (v7 == 1)
  {
    v10 = 0xE500000000000000;
    if (v9 != 0x6F65646976)
      goto LABEL_16;
  }
  else
  {
    v10 = 0xE700000000000000;
    if (v9 != 0x6E776F6E6B6E75)
      goto LABEL_16;
  }
LABEL_14:
  if (v8 == v10)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_17;
  }
LABEL_16:
  v11 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v11 & 1) == 0)
    return result;
LABEL_17:
  v13 = v4[6];
  v14 = *(unsigned __int8 *)(a1 + v13);
  v15 = *(unsigned __int8 *)(a2 + v13);
  if (v14)
    v16 = 0x6E776F6E6B6E75;
  else
    v16 = 0xD00000000000003BLL;
  if (v14)
    v17 = 0xE700000000000000;
  else
    v17 = 0x80000001AD69CA00;
  if (v15)
    v18 = 0x6E776F6E6B6E75;
  else
    v18 = 0xD00000000000003BLL;
  if (v15)
    v19 = 0xE700000000000000;
  else
    v19 = 0x80000001AD69CA00;
  if (v16 == v18 && v17 == v19)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_36;
  }
  v21 = sub_1AD63C2A8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = 0;
  if ((v21 & 1) != 0)
  {
LABEL_36:
    sub_1AD434328(*(_BYTE *)(a1 + v4[7]));
    if ((v22 & 1) != 0 && *(_QWORD *)(a1 + v4[8]) == *(_QWORD *)(a2 + v4[8]))
      return *(double *)(a1 + v4[9]) == *(double *)(a2 + v4[9]);
    return 0;
  }
  return result;
}

uint64_t sub_1AD00AD60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00AD74, (uint64_t (*)(void))sub_1AD00ADB8);
}

unint64_t sub_1AD00AD74()
{
  unint64_t result;

  result = qword_1EECD19E8;
  if (!qword_1EECD19E8)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for VideoMessageMessageQuality, &type metadata for VideoMessageMessageQuality);
    atomic_store(result, (unint64_t *)&qword_1EECD19E8);
  }
  return result;
}

unint64_t sub_1AD00ADB8()
{
  unint64_t result;

  result = qword_1EECD19F0;
  if (!qword_1EECD19F0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for VideoMessageMessageQuality, &type metadata for VideoMessageMessageQuality);
    atomic_store(result, (unint64_t *)&qword_1EECD19F0);
  }
  return result;
}

unint64_t sub_1AD00AE00()
{
  unint64_t result;

  result = qword_1EECD19F8;
  if (!qword_1EECD19F8)
  {
    result = MEMORY[0x1AF44BDF0]("uLh8T!\t", &type metadata for VideoMessageMessageQuality);
    atomic_store(result, (unint64_t *)&qword_1EECD19F8);
  }
  return result;
}

uint64_t sub_1AD00AE44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00AE58, (uint64_t (*)(void))sub_1AD00AE9C);
}

unint64_t sub_1AD00AE58()
{
  unint64_t result;

  result = qword_1EECD1A00;
  if (!qword_1EECD1A00)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648DE4, &type metadata for VideoMessageMediaType);
    atomic_store(result, (unint64_t *)&qword_1EECD1A00);
  }
  return result;
}

unint64_t sub_1AD00AE9C()
{
  unint64_t result;

  result = qword_1EECD1A08;
  if (!qword_1EECD1A08)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648E0C, &type metadata for VideoMessageMediaType);
    atomic_store(result, (unint64_t *)&qword_1EECD1A08);
  }
  return result;
}

unint64_t sub_1AD00AEE4()
{
  unint64_t result;

  result = qword_1EECD1A10;
  if (!qword_1EECD1A10)
  {
    result = MEMORY[0x1AF44BDF0]("iKh8d \t", &type metadata for VideoMessageMediaType);
    atomic_store(result, (unint64_t *)&qword_1EECD1A10);
  }
  return result;
}

uint64_t sub_1AD00AF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00AF3C, (uint64_t (*)(void))sub_1AD00AF80);
}

unint64_t sub_1AD00AF3C()
{
  unint64_t result;

  result = qword_1EECD1A18;
  if (!qword_1EECD1A18)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648EF0, &type metadata for VideoMessageProvider);
    atomic_store(result, (unint64_t *)&qword_1EECD1A18);
  }
  return result;
}

unint64_t sub_1AD00AF80()
{
  unint64_t result;

  result = qword_1EECD1A20;
  if (!qword_1EECD1A20)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648F18, &type metadata for VideoMessageProvider);
    atomic_store(result, (unint64_t *)&qword_1EECD1A20);
  }
  return result;
}

unint64_t sub_1AD00AFC8()
{
  unint64_t result;

  result = qword_1EECD1A28;
  if (!qword_1EECD1A28)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648E34, &type metadata for VideoMessageProvider);
    atomic_store(result, (unint64_t *)&qword_1EECD1A28);
  }
  return result;
}

uint64_t sub_1AD00B00C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1A30, (uint64_t (*)(uint64_t))type metadata accessor for VideoMessageMetadata, (uint64_t)"YAh84~d8");
  result = sub_1ACFF9724(&qword_1EECD1A38, (uint64_t (*)(uint64_t))type metadata accessor for VideoMessageMetadata, (uint64_t)&unk_1AD653040);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD00B068()
{
  return sub_1ACFF9724(&qword_1EECD1A40, (uint64_t (*)(uint64_t))type metadata accessor for VideoMessageMetadata, (uint64_t)&unk_1AD648F9C);
}

uint64_t storeEnumTagSinglePayload for VideoMessageMessageQuality(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD00B0E0 + 4 * byte_1AD648C03[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD00B114 + 4 * byte_1AD648BFE[v4]))();
}

uint64_t sub_1AD00B114(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD00B11C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD00B124);
  return result;
}

uint64_t sub_1AD00B130(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD00B138);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD00B13C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD00B144(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoMessageMessageQuality()
{
  return &type metadata for VideoMessageMessageQuality;
}

uint64_t storeEnumTagSinglePayload for VideoMessageMediaType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD00B1AC + 4 * byte_1AD648C0D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD00B1E0 + 4 * byte_1AD648C08[v4]))();
}

uint64_t sub_1AD00B1E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD00B1E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD00B1F0);
  return result;
}

uint64_t sub_1AD00B1FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD00B204);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD00B208(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD00B210(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for VideoMessageMediaType()
{
  return &type metadata for VideoMessageMediaType;
}

uint64_t getEnumTagSinglePayload for VideoMessageProvider(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 1 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 1;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 1;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 1;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v8 = v6 - 2;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for VideoMessageProvider(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD00B308 + 4 * byte_1AD648C17[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD00B33C + 4 * byte_1AD648C12[v4]))();
}

uint64_t sub_1AD00B33C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD00B344(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD00B34CLL);
  return result;
}

uint64_t sub_1AD00B358(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD00B360);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD00B364(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD00B36C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_1AD00B378(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for VideoMessageProvider()
{
  return &type metadata for VideoMessageProvider;
}

_QWORD *sub_1AD00B394(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B084();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    *(_QWORD *)((char *)a1 + a3[9]) = *(_QWORD *)((char *)a2 + a3[9]);
  }
  return a1;
}

uint64_t destroy for PlayedReceipt(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1AD00B478(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1AD00B4FC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1AD00B588(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1AD00B60C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1AD00B690()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD00B69C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1AD63B084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return v9 - 1;
  else
    return 0;
}

uint64_t sub_1AD00B714()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD00B720(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1AD63B084();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t sub_1AD00B798()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1AD00B82C()
{
  unint64_t result;

  result = qword_1EECD1A48;
  if (!qword_1EECD1A48)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD648E5C, &type metadata for VideoMessageProvider);
    atomic_store(result, (unint64_t *)&qword_1EECD1A48);
  }
  return result;
}

unint64_t sub_1AD00B870()
{
  unint64_t result;

  result = qword_1EECD1A50;
  if (!qword_1EECD1A50)
  {
    result = MEMORY[0x1AF44BDF0]("QKh8< \t", &type metadata for VideoMessageMediaType);
    atomic_store(result, (unint64_t *)&qword_1EECD1A50);
  }
  return result;
}

unint64_t sub_1AD00B8B4()
{
  unint64_t result;

  result = qword_1EECD1A58;
  if (!qword_1EECD1A58)
  {
    result = MEMORY[0x1AF44BDF0]("]Lh8,!\t", &type metadata for VideoMessageMessageQuality);
    atomic_store(result, (unint64_t *)&qword_1EECD1A58);
  }
  return result;
}

uint64_t sub_1AD00B8F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD00B904(v1, a1);
}

uint64_t sub_1AD00B904(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD00B948(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD00B950(a1, v1);
}

uint64_t sub_1AD00B950(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD00B994())()
{
  return nullsub_1;
}

uint64_t sub_1AD00B9A4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD00BA2C(&qword_1ED2E1A48, (uint64_t)&unk_1AD650458);
  result = sub_1AD00BA2C(&qword_1ED2E1A50, (uint64_t)&unk_1AD650480);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for DeliveryReceipt()
{
  uint64_t result;

  result = qword_1ED2E1A58;
  if (!qword_1ED2E1A58)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD00BA2C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for DeliveryReceipt();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for PlayedReceipt(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v4 = type metadata accessor for Metadata();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = sub_1AD63B084();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = v6[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    *((_BYTE *)a1 + v6[6]) = *((_BYTE *)a2 + v6[6]);
    *((_BYTE *)a1 + v6[7]) = *((_BYTE *)a2 + v6[7]);
    *(_WORD *)((char *)a1 + v6[8]) = *(_WORD *)((char *)a2 + v6[8]);
  }
  return a1;
}

uint64_t initializeWithCopy for PlayedReceipt(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for Metadata();
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  *(_BYTE *)(a1 + v5[6]) = *(_BYTE *)(a2 + v5[6]);
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  *(_WORD *)(a1 + v5[8]) = *(_WORD *)(a2 + v5[8]);
  return a1;
}

uint64_t assignWithCopy for PlayedReceipt(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;

  v4 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = (int *)type metadata accessor for Metadata();
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = *(_BYTE *)(v8 + 8);
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = v9;
  *(_BYTE *)(a1 + v5[6]) = *(_BYTE *)(a2 + v5[6]);
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  v10 = v5[8];
  v11 = (_BYTE *)(a1 + v10);
  v12 = (_BYTE *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  return a1;
}

uint64_t initializeWithTake for PlayedReceipt(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = (int *)type metadata accessor for Metadata();
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  *(_BYTE *)(a1 + v5[6]) = *(_BYTE *)(a2 + v5[6]);
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  *(_WORD *)(a1 + v5[8]) = *(_WORD *)(a2 + v5[8]);
  return a1;
}

uint64_t assignWithTake for PlayedReceipt(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  _BYTE *v11;

  v4 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = (int *)type metadata accessor for Metadata();
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  *(_BYTE *)(a1 + v5[6]) = *(_BYTE *)(a2 + v5[6]);
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  v9 = v5[8];
  v10 = (_BYTE *)(a1 + v9);
  v11 = (_BYTE *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  return a1;
}

uint64_t sub_1AD00BD80()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD00BD8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1AD00BDC8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD00BDD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1AD00BE14()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Metadata();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1AD00BE7C()
{
  sub_1AD63BD38();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E3198);
  sub_1AD63B798();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  return 0xD000000000000018;
}

uint64_t sub_1AD00BF2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00BF40, (uint64_t (*)(void))sub_1AD00BF84);
}

unint64_t sub_1AD00BF40()
{
  unint64_t result;

  result = qword_1ED2DA670;
  if (!qword_1ED2DA670)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD657398, &type metadata for SMSCTPart.Content);
    atomic_store(result, (unint64_t *)&qword_1ED2DA670);
  }
  return result;
}

unint64_t sub_1AD00BF84()
{
  unint64_t result;

  result = qword_1ED2DA660;
  if (!qword_1ED2DA660)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6573C0, &type metadata for SMSCTPart.Content);
    atomic_store(result, (unint64_t *)&qword_1ED2DA660);
  }
  return result;
}

uint64_t sub_1AD00BFC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00BFDC, (uint64_t (*)(void))sub_1AD00C020);
}

unint64_t sub_1AD00BFDC()
{
  unint64_t result;

  result = qword_1ED2DA630;
  if (!qword_1ED2DA630)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651CB8, &type metadata for SMSCTPart);
    atomic_store(result, (unint64_t *)&qword_1ED2DA630);
  }
  return result;
}

unint64_t sub_1AD00C020()
{
  unint64_t result;

  result = qword_1ED2DA598;
  if (!qword_1ED2DA598)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651CE0, &type metadata for SMSCTPart);
    atomic_store(result, (unint64_t *)&qword_1ED2DA598);
  }
  return result;
}

uint64_t sub_1AD00C064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00C078, (uint64_t (*)(void))sub_1AD00C0BC);
}

unint64_t sub_1AD00C078()
{
  unint64_t result;

  result = qword_1EECD1A60;
  if (!qword_1EECD1A60)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651D08, &type metadata for SMSCTPartPlain);
    atomic_store(result, (unint64_t *)&qword_1EECD1A60);
  }
  return result;
}

unint64_t sub_1AD00C0BC()
{
  unint64_t result;

  result = qword_1EECD1A68;
  if (!qword_1EECD1A68)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651D30, &type metadata for SMSCTPartPlain);
    atomic_store(result, (unint64_t *)&qword_1EECD1A68);
  }
  return result;
}

uint64_t sub_1AD00C100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00C114, (uint64_t (*)(void))sub_1AD00C158);
}

unint64_t sub_1AD00C114()
{
  unint64_t result;

  result = qword_1EECD1A70;
  if (!qword_1EECD1A70)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for SMSCTPartSMIL, &type metadata for SMSCTPartSMIL);
    atomic_store(result, (unint64_t *)&qword_1EECD1A70);
  }
  return result;
}

unint64_t sub_1AD00C158()
{
  unint64_t result;

  result = qword_1EECD1A78;
  if (!qword_1EECD1A78)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for SMSCTPartSMIL, &type metadata for SMSCTPartSMIL);
    atomic_store(result, (unint64_t *)&qword_1EECD1A78);
  }
  return result;
}

uint64_t sub_1AD00C19C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00C1B0, (uint64_t (*)(void))sub_1AD00C1F4);
}

unint64_t sub_1AD00C1B0()
{
  unint64_t result;

  result = qword_1EECD1A80;
  if (!qword_1EECD1A80)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651DA8, &type metadata for SMSCTPartAttachment);
    atomic_store(result, (unint64_t *)&qword_1EECD1A80);
  }
  return result;
}

unint64_t sub_1AD00C1F4()
{
  unint64_t result;

  result = qword_1EECD1A88;
  if (!qword_1EECD1A88)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651DD0, &type metadata for SMSCTPartAttachment);
    atomic_store(result, (unint64_t *)&qword_1EECD1A88);
  }
  return result;
}

uint64_t sub_1AD00C238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00C24C, (uint64_t (*)(void))sub_1AD00C290);
}

unint64_t sub_1AD00C24C()
{
  unint64_t result;

  result = qword_1EECD1A90;
  if (!qword_1EECD1A90)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for SMSParserPart, &type metadata for SMSParserPart);
    atomic_store(result, (unint64_t *)&qword_1EECD1A90);
  }
  return result;
}

unint64_t sub_1AD00C290()
{
  unint64_t result;

  result = qword_1EECD1A98;
  if (!qword_1EECD1A98)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for SMSParserPart, &type metadata for SMSParserPart);
    atomic_store(result, (unint64_t *)&qword_1EECD1A98);
  }
  return result;
}

uint64_t sub_1AD00C2D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00C2E8, (uint64_t (*)(void))sub_1AD00C32C);
}

unint64_t sub_1AD00C2E8()
{
  unint64_t result;

  result = qword_1EECD1AA0;
  if (!qword_1EECD1AA0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651E48, &type metadata for SMSParserTextPart);
    atomic_store(result, (unint64_t *)&qword_1EECD1AA0);
  }
  return result;
}

unint64_t sub_1AD00C32C()
{
  unint64_t result;

  result = qword_1EECD1AA8;
  if (!qword_1EECD1AA8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651E70, &type metadata for SMSParserTextPart);
    atomic_store(result, (unint64_t *)&qword_1EECD1AA8);
  }
  return result;
}

uint64_t sub_1AD00C370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD00C384, (uint64_t (*)(void))sub_1AD00C3C8);
}

unint64_t sub_1AD00C384()
{
  unint64_t result;

  result = qword_1EECD1AB0;
  if (!qword_1EECD1AB0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651E98, &type metadata for SMSParserAttachmentPart);
    atomic_store(result, (unint64_t *)&qword_1EECD1AB0);
  }
  return result;
}

unint64_t sub_1AD00C3C8()
{
  unint64_t result;

  result = qword_1EECD1AB8;
  if (!qword_1EECD1AB8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651EC0, &type metadata for SMSParserAttachmentPart);
    atomic_store(result, (unint64_t *)&qword_1EECD1AB8);
  }
  return result;
}

uint64_t sub_1AD00C410(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2)
    return sub_1AD00408C(result, a2);
  if (a5 == 1)
  {
    sub_1AD00C45C(result);
  }
  else if (a5)
  {
    return result;
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD00C45C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for SMSCTPart(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1AD00C4C8(*(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_BYTE *)(a1 + 80));
}

uint64_t sub_1AD00C4C8(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  if (a5 == 2)
    return sub_1AD004118(result, a2);
  if (a5 == 1)
  {
    sub_1AD0096E4(result);
  }
  else if (a5)
  {
    return result;
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SMSCTPart(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  v8 = *(_QWORD *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  v10 = *(_BYTE *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD00C410(v6, v7, v8, v9, v10);
  *(_QWORD *)(a1 + 48) = v6;
  *(_QWORD *)(a1 + 56) = v7;
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = v9;
  *(_BYTE *)(a1 + 80) = v10;
  return a1;
}

uint64_t assignWithCopy for SMSCTPart(uint64_t a1, _QWORD *a2)
{
  _QWORD *v2;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v2 = a2;
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = v2[2];
  *(_QWORD *)(a1 + 24) = v2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = v2[4];
  *(_QWORD *)(a1 + 40) = v2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = v2[6];
  v5 = v2[7];
  v6 = v2[8];
  v7 = v2[9];
  LOBYTE(v2) = *((_BYTE *)v2 + 80);
  sub_1AD00C410(v4, v5, v6, v7, (char)v2);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v7;
  v12 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = (_BYTE)v2;
  sub_1AD00C4C8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for SMSCTPart(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  char v13;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_BYTE *)(a2 + 80);
  v8 = *(_QWORD *)(a1 + 48);
  v9 = *(_QWORD *)(a1 + 56);
  v10 = *(_QWORD *)(a1 + 64);
  v11 = *(_QWORD *)(a1 + 72);
  v12 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v12;
  v13 = *(_BYTE *)(a1 + 80);
  *(_BYTE *)(a1 + 80) = v7;
  sub_1AD00C4C8(v8, v9, v10, v11, v13);
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSCTPart(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 81))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SMSCTPart(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 80) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 81) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSCTPart()
{
  return &type metadata for SMSCTPart;
}

uint64_t destroy for SMSCTPart.Content(uint64_t a1)
{
  return sub_1AD00C4C8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_BYTE *)(a1 + 32));
}

uint64_t initializeWithCopy for SMSCTPart.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1AD00C410(*(_QWORD *)a2, v4, v5, v6, v7);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = v7;
  return a1;
}

uint64_t assignWithCopy for SMSCTPart.Content(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_BYTE *)(a2 + 32);
  sub_1AD00C410(*(_QWORD *)a2, v4, v5, v6, v7);
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  v11 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  v12 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v7;
  sub_1AD00C4C8(v8, v9, v10, v11, v12);
  return a1;
}

uint64_t assignWithTake for SMSCTPart.Content(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  __int128 v8;
  char v9;

  v3 = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)a1;
  v6 = *(_QWORD *)(a1 + 8);
  v5 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v8;
  v9 = *(_BYTE *)(a1 + 32);
  *(_BYTE *)(a1 + 32) = v3;
  sub_1AD00C4C8(v4, v6, v5, v7, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSCTPart.Content(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 2)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SMSCTPart.Content(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AD00C984(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_1AD00C98C(uint64_t result, char a2)
{
  *(_BYTE *)(result + 32) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SMSCTPart.Content()
{
  return &type metadata for SMSCTPart.Content;
}

_QWORD *initializeBufferWithCopyOfBuffer for SMSCTPartPlain(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SMSCTPartPlain()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithTake for SMSCTPartPlain(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSCTPartPlain(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SMSCTPartPlain(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSCTPartPlain()
{
  return &type metadata for SMSCTPartPlain;
}

uint64_t destroy for SMSCTPartSMIL(_QWORD *a1)
{
  if (*a1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SMSCTPartSMIL(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  if (*a2)
  {
    v4 = a2[1];
    v5 = a2[2];
    *a1 = *a2;
    a1[1] = v4;
    a1[2] = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
  }
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for SMSCTPartSMIL(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v4 = *a1;
  v5 = *a2;
  if (v4)
  {
    if (v5)
    {
      *a1 = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[1] = a2[1];
      a1[2] = a2[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD00CC44((uint64_t)a1);
      v6 = a2[2];
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = v6;
    }
  }
  else if (v5)
  {
    *a1 = v5;
    a1[1] = a2[1];
    a1[2] = a2[2];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_OWORD *)a2;
    a1[2] = a2[2];
    *(_OWORD *)a1 = v7;
  }
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD00CC44(uint64_t a1)
{
  destroy for _AttributedString();
  return a1;
}

_QWORD *assignWithTake for SMSCTPartSMIL(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;

  if (!*a1)
    goto LABEL_5;
  if (!*(_QWORD *)a2)
  {
    sub_1AD00CC44((uint64_t)a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = *(_QWORD *)(a2 + 16);
    goto LABEL_6;
  }
  *a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  a1[1] = *(_QWORD *)(a2 + 8);
  a1[2] = v4;
  swift_bridgeObjectRelease();
LABEL_6:
  a1[3] = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSCTPartSMIL(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SMSCTPartSMIL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSCTPartSMIL()
{
  return &type metadata for SMSCTPartSMIL;
}

uint64_t *destroy for SMSCTPartAttachment(uint64_t *result)
{
  unint64_t v1;

  v1 = result[1];
  if (v1 >> 60 != 15)
    return (uint64_t *)sub_1AD00412C(*result, v1);
  return result;
}

uint64_t _s9BlastDoor19SMSCTPartAttachmentVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v4 = *a2;
    sub_1AD0040A0(*a2, a2[1]);
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v3;
  }
  return a1;
}

uint64_t *assignWithCopy for SMSCTPartAttachment(uint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      v6 = *(_QWORD *)a2;
      sub_1AD0040A0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      v7 = *a1;
      v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_1AD00412C(v7, v8);
      return a1;
    }
    sub_1AD007EC0((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  v5 = *(_QWORD *)a2;
  sub_1AD0040A0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t *assignWithTake for SMSCTPartAttachment(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_1AD00412C(v6, v4);
      return a1;
    }
    sub_1AD007EC0((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSCTPartAttachment(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xC && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 12);
  v3 = *(_QWORD *)(a1 + 8) >> 60;
  if (((4 * (_DWORD)v3) & 0xC) != 0)
    v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SMSCTPartAttachment(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_QWORD *)result = a2 - 12;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xC)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSCTPartAttachment()
{
  return &type metadata for SMSCTPartAttachment;
}

uint64_t destroy for SMSParserPart()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9BlastDoor13SMSParserPartVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SMSParserPart(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for SMSParserPart(_OWORD *a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSParserPart(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SMSParserPart(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSParserPart()
{
  return &type metadata for SMSParserPart;
}

uint64_t destroy for SMSParserTextPart()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for SMSParserTextPart(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SMSParserTextPart(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SMSParserTextPart(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSParserTextPart(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SMSParserTextPart(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSParserTextPart()
{
  return &type metadata for SMSParserTextPart;
}

_QWORD *assignWithCopy for MessagesAppBalloon.LiveLayout(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSParserAttachmentPart(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SMSParserAttachmentPart(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SMSParserAttachmentPart()
{
  return &type metadata for SMSParserAttachmentPart;
}

uint64_t sub_1AD00D3D8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD00D404(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD00D438())()
{
  return nullsub_1;
}

uint64_t sub_1AD00D448()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD00D474(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD00D4A8())()
{
  return nullsub_1;
}

uint64_t sub_1AD00D4B8@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[4];
  v3 = v1[5];
  v4 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1AD00C45C(v2);
}

__n128 sub_1AD00D4CC(__n128 *a1)
{
  uint64_t v1;
  unint64_t v2;
  __n128 result;
  __n128 v4;

  v4 = *a1;
  v2 = a1[1].n128_u64[0];
  sub_1AD0096E4(*(_QWORD *)(v1 + 32));
  result = v4;
  *(__n128 *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*sub_1AD00D510())()
{
  return nullsub_1;
}

unint64_t sub_1AD00D520()
{
  return 0xD000000000000010;
}

unint64_t sub_1AD00D53C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD00D568();
  result = sub_1AD00D5AC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD00D568()
{
  unint64_t result;

  result = qword_1EECD1AC0;
  if (!qword_1EECD1AC0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651308, &type metadata for MessageContent);
    atomic_store(result, (unint64_t *)&qword_1EECD1AC0);
  }
  return result;
}

unint64_t sub_1AD00D5AC()
{
  unint64_t result;

  result = qword_1EECD1AC8;
  if (!qword_1EECD1AC8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651330, &type metadata for MessageContent);
    atomic_store(result, (unint64_t *)&qword_1EECD1AC8);
  }
  return result;
}

unint64_t sub_1AD00D5F0()
{
  return 0xD000000000000010;
}

uint64_t destroy for MessageContent(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 32);
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *initializeWithCopy for MessageContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v7 = a2 + 4;
  v6 = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    v8 = a2[5];
    v9 = a2[6];
    a1[4] = v6;
    a1[5] = v8;
    a1[6] = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 2) = *(_OWORD *)v7;
    a1[6] = v7[2];
  }
  return a1;
}

_QWORD *assignWithCopy for MessageContent(_QWORD *a1, _QWORD *a2)
{
  _OWORD *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a1 + 4;
  v6 = a2 + 4;
  v5 = a2[4];
  if (a1[4])
  {
    if (v5)
    {
      a1[4] = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[5] = a2[5];
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD00CC44((uint64_t)(a1 + 4));
      v7 = a2[6];
      *v4 = *v6;
      a1[6] = v7;
    }
  }
  else if (v5)
  {
    a1[4] = v5;
    a1[5] = a2[5];
    a1[6] = a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *v6;
    a1[6] = a2[6];
    *v4 = v8;
  }
  return a1;
}

_QWORD *assignWithTake for MessageContent(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[4];
  if (!a1[4])
    goto LABEL_5;
  if (!v6)
  {
    sub_1AD00CC44((uint64_t)(a1 + 4));
LABEL_5:
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    a1[6] = a2[6];
    return a1;
  }
  a1[4] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[6];
  a1[5] = a2[5];
  a1[6] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MessageContent(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for MessageContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for MessageContent()
{
  return &type metadata for MessageContent;
}

BOOL sub_1AD00D95C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1AD00D984@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD00D9E4@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  if (v2)
  {
    if (v2 == 1)
      v4 = 1;
    else
      v4 = 2;
  }
  else
  {
    v4 = 0;
  }
  *a1 = v4;
  return result;
}

void sub_1AD00DA50(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1AD00DA5C()
{
  return 0;
}

unint64_t sub_1AD00DA68()
{
  return 0xD000000000000011;
}

unint64_t sub_1AD00DA98()
{
  return 0xD000000000000011;
}

uint64_t sub_1AD00DAC8(char *a1, char *a2)
{
  return sub_1AD4333F8(*a1, *a2);
}

uint64_t sub_1AD00DAD4()
{
  return sub_1AD14B4A8();
}

uint64_t sub_1AD00DADC()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD00DB34()
{
  return sub_1AD14CCD8();
}

uint64_t sub_1AD00DB3C@<X0>(char *a1@<X8>)
{
  return sub_1AD00D984(a1);
}

void sub_1AD00DB48(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x80000001AD69CA40;
  if (*v1)
    v2 = 0x80000001AD69CA60;
  *a1 = 0xD000000000000011;
  a1[1] = v2;
}

unint64_t sub_1AD00DB84()
{
  return 0xD000000000000011;
}

void sub_1AD00DBB8(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1AD00DBC4()
{
  sub_1AD010278();
  return sub_1AD63C560();
}

uint64_t sub_1AD00DBEC()
{
  sub_1AD010278();
  return sub_1AD63C56C();
}

uint64_t sub_1AD00DC14(char *a1, char *a2)
{
  return sub_1AD433494(*a1, *a2);
}

uint64_t sub_1AD00DC20()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD00DC84()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD00DCBC()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD00DD1C@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

void sub_1AD00DD78(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;

  v2 = 1701603686;
  if (*v1)
    v2 = 1635017060;
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1AD00DDA0()
{
  sub_1AD010788();
  return sub_1AD63B924();
}

uint64_t sub_1AD00DDFC()
{
  sub_1AD010788();
  return sub_1AD63B8C4();
}

_QWORD *sub_1AD00DE48@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v13;
  _QWORD v14[107];
  _BYTE v15[192];
  __int128 v16[12];
  char v17;

  v14[5] = a3;
  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  sub_1AD00E830(a2, (uint64_t)v16);
  v17 = 0;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E26C0);
  sub_1AD00E86C();
  sub_1AD63BF54();
  if (!v3)
  {
    v14[3] = v10;
    v14[4] = v7;
    sub_1AD00E830(v16, (uint64_t)v15);
    v13 = (char *)&loc_1AD00DF88 + 4 * byte_1AD649410[sub_1AD00E92C((uint64_t)v15)];
    __asm { BR              X10 }
  }
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(a1, v11);
  return sub_1AD00FE40(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD00E8B0);
}

uint64_t sub_1AD00E830(__int128 *a1, uint64_t a2)
{
  __swift_memcpy192_8(a2, a1);
  return a2;
}

unint64_t sub_1AD00E86C()
{
  unint64_t result;

  result = qword_1ED2E2698;
  if (!qword_1ED2E2698)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6499F4, &_s14descr1E5CCDA19V17ImageProviderTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED2E2698);
  }
  return result;
}

uint64_t sub_1AD00E8B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24)
{
  uint64_t result;

  if (a18 >> 62 == 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return sub_1AD004118(a23, a24);
  }
  return result;
}

uint64_t sub_1AD00E92C(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(a1 + 136) >> 62;
  if (v1 <= 1)
    return v1;
  else
    return (*(_DWORD *)a1 + 2);
}

unint64_t sub_1AD00E948()
{
  unint64_t result;

  result = qword_1EECD1AD0;
  if (!qword_1EECD1AD0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6499B4, &type metadata for ImageEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EECD1AD0);
  }
  return result;
}

uint64_t sub_1AD00E98C(uint64_t result)
{
  *(_QWORD *)(result + 136) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

void sub_1AD00E99C(uint64_t a1, __int128 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  __int128 v7[12];
  __int128 v8[12];
  char v9;

  sub_1AD00E830(a2, (uint64_t)v8);
  LOBYTE(v7[0]) = 1;
  v9 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD60);
  sub_1AD00FDB8();
  sub_1AD63C068();
  if (!v2)
  {
    sub_1AD00E830(v8, (uint64_t)v7);
    sub_1AD59A20C(v7);
    v4 = v3;
    v6 = v5;
    *(_QWORD *)&v7[0] = v3;
    *((_QWORD *)&v7[0] + 1) = v5;
    v9 = 1;
    sub_1AD00FDFC();
    sub_1AD63C068();
    sub_1AD00412C(v4, v6);
  }
}

_QWORD *sub_1AD00EAB0@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  __int128 *v9;
  _OWORD v10[12];
  _BYTE v11[192];
  _OWORD v12[12];
  _QWORD v13[24];
  __int128 v14[12];
  __int128 v15[12];
  _BYTE v16[192];

  sub_1AD00E830(a1, (uint64_t)v15);
  sub_1AD00E830(v15, (uint64_t)v16);
  if (sub_1AD00E92C((uint64_t)v16) == 1)
  {
    sub_1AD00E98C((uint64_t)v16);
    v4 = v2[3];
    v5 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v4);
    (*(void (**)(_QWORD *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD, ValueMetadata *, uint64_t, uint64_t))(v5 + 24))(v13, sub_1AD59AFAC, 0, &type metadata for PixelBufferEncodingConfiguration, v4, v5);
    sub_1AD00FF28((uint64_t)v13, (uint64_t)v11, &qword_1EECD1AD8);
    sub_1AD00FF28((uint64_t)v11, (uint64_t)v12, &qword_1EECD1AD8);
    v7 = sub_1AD00FF6C((uint64_t)v12);
    if (v7 == 1)
    {
      sub_1AD63BB7C();
      if (qword_1ED2E7540 != -1)
        swift_once();
      sub_1AD63B48C();
      sub_1AD00E830(v15, (uint64_t)v10);
      v8 = sub_1AD00E98C((uint64_t)v10);
      sub_1AD00F844(v8);
      v9 = v15;
    }
    else
    {
      v10[8] = v12[8];
      v10[9] = v12[9];
      v10[10] = v12[10];
      v10[11] = v12[11];
      v10[4] = v12[4];
      v10[5] = v12[5];
      v10[6] = v12[6];
      v10[7] = v12[7];
      v10[0] = v12[0];
      v10[1] = v12[1];
      v10[2] = v12[2];
      v10[3] = v12[3];
      sub_1AD00F9C0(v10);
      v9 = v10;
    }
    sub_1AD00E830(v9, (uint64_t)v14);
    return (_QWORD *)sub_1AD00E830(v14, a2);
  }
  else
  {
    sub_1AD00E830(v15, a2);
    return sub_1AD00FE40(v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD00FEAC);
  }
}

_QWORD *sub_1AD00EC9C@<X0>(uint64_t a1@<X0>, __int128 *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1AD00DE48(a1, a2, a3);
}

void sub_1AD00ECB0(uint64_t a1, __int128 *a2)
{
  sub_1AD00E99C(a1, a2);
}

void sub_1AD00ECC8(char *a1)
{
  sub_1AD433144(*a1);
}

void sub_1AD00ECD4()
{
  char *v0;

  sub_1AD14B524(*v0);
}

void sub_1AD00ECDC()
{
  __asm { BR              X10 }
}

uint64_t sub_1AD00ED24()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

void sub_1AD00ED98(uint64_t a1)
{
  char *v1;

  sub_1AD14CBF8(a1, *v1);
}

uint64_t sub_1AD00EDA0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AD0107CC();
  *a1 = result;
  return result;
}

uint64_t sub_1AD00EDCC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(void))((char *)sub_1AD00EE08 + 4 * byte_1AD649419[*v0]))();
}

void sub_1AD00EE08(_QWORD *a1@<X8>)
{
  *a1 = 0x6464697754657270;
  a1[1] = 0xEB0000000064656CLL;
}

void sub_1AD00EE2C(_QWORD *a1@<X8>)
{
  *a1 = 0x6D6F436573667A6CLL;
  a1[1] = 0xEF64657373657270;
}

void sub_1AD00EE54(_QWORD *a1@<X8>)
{
  *a1 = 0xD000000000000020;
  a1[1] = 0x80000001AD69CAB0;
}

uint64_t sub_1AD00EE74()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AD00EEB0 + 4 * byte_1AD64941D[*v0]))(0x636E456567616D69, 0xED0000676E69646FLL);
}

uint64_t sub_1AD00EEB0()
{
  return 0x6464697754657270;
}

uint64_t sub_1AD00EED0()
{
  return 0x6D6F436573667A6CLL;
}

unint64_t sub_1AD00EEF4()
{
  return 0xD000000000000020;
}

uint64_t sub_1AD00EF10@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AD0107CC();
  *a1 = result;
  return result;
}

void sub_1AD00EF34(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1AD00EF40()
{
  sub_1AD00FF90();
  return sub_1AD63C560();
}

uint64_t sub_1AD00EF68()
{
  sub_1AD00FF90();
  return sub_1AD63C56C();
}

uint64_t sub_1AD00EF90(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD4332E8(*a1, *a2);
}

uint64_t sub_1AD00EF9C()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD00F038()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD00F0B0()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD00F148@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1AD010858();
  *a1 = result;
  return result;
}

void sub_1AD00F174(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xE300000000000000;
  v4 = 0xE600000000000000;
  v5 = 0x70616D746962;
  if (v2 != 1)
  {
    v5 = 0x6675426C65786970;
    v4 = 0xEB00000000726566;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 7894113;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AD00F1D0()
{
  sub_1AD010814();
  return sub_1AD63B924();
}

uint64_t sub_1AD00F22C()
{
  sub_1AD010814();
  return sub_1AD63B8C4();
}

uint64_t sub_1AD00F278@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v12;
  char v13;
  char v14;
  uint64_t v15;
  _OWORD v16[12];
  char v17;
  _OWORD v18[12];
  __int128 v19[12];
  char v20;
  char v21;
  _QWORD *v22;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E26C8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = a1[3];
  v22 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v9);
  sub_1AD00FF90();
  sub_1AD63C524();
  if (!v2)
  {
    v20 = 0;
    sub_1AD00FFD4();
    sub_1AD63BF54();
    if (v21)
    {
      if (v21 != 1)
      {
        v17 = 3;
        sub_1AD010018();
        sub_1AD63BF54();
        (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
        v16[8] = v18[8];
        v16[9] = v18[9];
        v16[10] = v18[10];
        v16[11] = v18[11];
        v16[4] = v18[4];
        v16[5] = v18[5];
        v16[6] = v18[6];
        v16[7] = v18[7];
        v16[0] = v18[0];
        v16[1] = v18[1];
        v16[2] = v18[2];
        v16[3] = v18[3];
        sub_1AD00F9C0(v16);
        v12 = v16;
        goto LABEL_11;
      }
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      sub_1AD01005C((uint64_t)v18);
    }
    else
    {
      LOBYTE(v18[0]) = 1;
      v13 = sub_1AD63BF18();
      LOBYTE(v18[0]) = 2;
      v14 = sub_1AD63BF18();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      LOBYTE(v18[0]) = v13 & 1;
      BYTE1(v18[0]) = v14 & 1;
      sub_1AD00FD58(v18);
    }
    v12 = v18;
LABEL_11:
    sub_1AD00E830(v12, (uint64_t)v19);
    v15 = (uint64_t)v22;
    sub_1AD00E830(v19, a2);
    v10 = v15;
    return __swift_destroy_boxed_opaque_existential_1(v10);
  }
  v10 = (uint64_t)v22;
  return __swift_destroy_boxed_opaque_existential_1(v10);
}

void sub_1AD00F4FC(_QWORD *a1)
{
  __int128 *v1;
  uint64_t v3;
  char *v4;
  __int128 v5[12];
  _BYTE v6[200];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD58);
  MEMORY[0x1E0C80A78](v3);
  sub_1AD00E830(v1, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD00FF90();
  sub_1AD63C53C();
  sub_1AD00E830(v5, (uint64_t)v6);
  v4 = (char *)sub_1AD00F5D8 + 4 * byte_1AD649421[sub_1AD00E92C((uint64_t)v6)];
  __asm { BR              X10 }
}

uint64_t sub_1AD00F5D8()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_1AD00E98C((uint64_t)(v0 + 584));
  v0[200] = 0;
  *v0 = 0;
  sub_1AD010084();
  sub_1AD63C068();
  if (!v3)
  {
    v0[200] = 1;
    sub_1AD63C02C();
    v0[200] = 2;
    sub_1AD63C02C();
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v1);
}

uint64_t sub_1AD00F81C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD00F278(a1, a2);
}

void sub_1AD00F830(_QWORD *a1)
{
  sub_1AD00F4FC(a1);
}

uint64_t sub_1AD00F844(uint64_t a1)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *(_QWORD *)(a1 + 176);
  v3 = *(_QWORD *)(a1 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1AD00408C(v2, v3);
  return a1;
}

unint64_t sub_1AD00F8A8()
{
  unint64_t result;

  result = qword_1ED2DA7B8;
  if (!qword_1ED2DA7B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD68DFF0, &type metadata for File);
    atomic_store(result, (unint64_t *)&qword_1ED2DA7B8);
  }
  return result;
}

unint64_t sub_1AD00F8EC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED2E3258;
  if (!qword_1ED2E3258)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2E7330);
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0DEAF20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED2E3258);
  }
  return result;
}

unint64_t sub_1AD00F938()
{
  unint64_t result;

  result = qword_1EECDC5E0;
  if (!qword_1EECDC5E0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6969A4, &type metadata for PixelBufferHelperError);
    atomic_store(result, (unint64_t *)&qword_1EECDC5E0);
  }
  return result;
}

unint64_t sub_1AD00F97C()
{
  unint64_t result;

  result = qword_1ED2E7210;
  if (!qword_1ED2E7210)
  {
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0CB0378], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED2E7210);
  }
  return result;
}

_QWORD *sub_1AD00F9C0(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = result[5] & 1;
  v2 = result[7] & 1;
  v3 = result[9] & 0xFF01;
  v4 = result[13] & 0x101;
  v5 = result[15] & 1;
  v6 = result[17] & 1 | 0x4000000000000000;
  result[3] &= 1uLL;
  result[5] = v1;
  result[7] = v2;
  result[9] = v3;
  result[13] = v4;
  result[15] = v5;
  result[17] = v6;
  return result;
}

uint64_t sub_1AD00FA24(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

void sub_1AD00FA3C(uint64_t a1)
{
  __asm { BR              X11 }
}

unint64_t sub_1AD00FA94@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t result;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 v9;

  v5 = v2;
  LOWORD(v6) = a1;
  BYTE2(v6) = BYTE2(a1);
  HIBYTE(v6) = BYTE3(a1);
  v7 = BYTE4(a1);
  v8 = BYTE5(a1);
  v9 = BYTE6(a1);
  result = sub_1AD140534((uint64_t)&v5, (uint64_t)&v5 + BYTE6(a1));
  v4 = v6 | ((unint64_t)v7 << 32) | ((unint64_t)v8 << 40) | ((unint64_t)v9 << 48);
  *v1 = v5;
  v1[1] = v4;
  return result;
}

double sub_1AD00FD30(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_QWORD *)(a1 + 24) = 0x1FFFFFFFELL;
  result = 0.0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  return result;
}

_QWORD *sub_1AD00FD58(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = result[5] & 1;
  v2 = result[7] & 1;
  v3 = result[9] & 0xFF01;
  v4 = result[13] & 0x101;
  v5 = result[15] & 1;
  v6 = result[17] & 1;
  result[3] &= 1uLL;
  result[5] = v1;
  result[7] = v2;
  result[9] = v3;
  result[13] = v4;
  result[15] = v5;
  result[17] = v6;
  return result;
}

unint64_t sub_1AD00FDB8()
{
  unint64_t result;

  result = qword_1ED2DACD8;
  if (!qword_1ED2DACD8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64998C, &_s14descr1E5CCDA19V17ImageProviderTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED2DACD8);
  }
  return result;
}

unint64_t sub_1AD00FDFC()
{
  unint64_t result;

  result = qword_1ED2E31A0;
  if (!qword_1ED2E31A0)
  {
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0CB0350], MEMORY[0x1E0CB0338]);
    atomic_store(result, (unint64_t *)&qword_1ED2E31A0);
  }
  return result;
}

_QWORD *sub_1AD00FE40(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22],
    a1[23]);
  return a1;
}

uint64_t sub_1AD00FEAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,unint64_t a24)
{
  uint64_t result;

  if (a18 >> 62 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return sub_1AD00408C(a23, a24);
  }
  return result;
}

uint64_t sub_1AD00FF28(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1AD00FF6C(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 144);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

unint64_t sub_1AD00FF90()
{
  unint64_t result;

  result = qword_1ED2E2EC8;
  if (!qword_1ED2E2EC8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64993C, &_s14descr1E5CCD961V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED2E2EC8);
  }
  return result;
}

unint64_t sub_1AD00FFD4()
{
  unint64_t result;

  result = qword_1ED2E26A0;
  if (!qword_1ED2E26A0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD649914, &_s14descr1E5CCD961V13ImageEncodingON);
    atomic_store(result, (unint64_t *)&qword_1ED2E26A0);
  }
  return result;
}

unint64_t sub_1AD010018()
{
  unint64_t result;

  result = qword_1EECD1AE0;
  if (!qword_1EECD1AE0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6856B8, &type metadata for PixelBufferEncodingConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EECD1AE0);
  }
  return result;
}

double sub_1AD01005C(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_QWORD *)(a1 + 128) = 0;
  *(_QWORD *)(a1 + 136) = 0x8000000000000000;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  return result;
}

unint64_t sub_1AD010084()
{
  unint64_t result;

  result = qword_1ED2DACE0;
  if (!qword_1ED2DACE0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6498EC, &_s14descr1E5CCD961V13ImageEncodingON);
    atomic_store(result, (unint64_t *)&qword_1ED2DACE0);
  }
  return result;
}

unint64_t sub_1AD0100C8()
{
  unint64_t result;

  result = qword_1EECD1AE8;
  if (!qword_1EECD1AE8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6856E0, &type metadata for PixelBufferEncodingConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EECD1AE8);
  }
  return result;
}

unint64_t sub_1AD010110()
{
  unint64_t result;

  result = qword_1EECD1AF0;
  if (!qword_1EECD1AF0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD649444, &_s14descr1E5CCDA19V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EECD1AF0);
  }
  return result;
}

unint64_t sub_1AD010158()
{
  unint64_t result;

  result = qword_1ED2E2EB8;
  if (!qword_1ED2E2EB8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64955C, &_s14descr1E5CCDA19V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED2E2EB8);
  }
  return result;
}

unint64_t sub_1AD0101A0()
{
  unint64_t result;

  result = qword_1ED2E2EB0;
  if (!qword_1ED2E2EB0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD649534, &_s14descr1E5CCDA19V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED2E2EB0);
  }
  return result;
}

unint64_t sub_1AD0101E8()
{
  unint64_t result;

  result = qword_1ED2E26A8;
  if (!qword_1ED2E26A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6495A0, &type metadata for Image.Encoding);
    atomic_store(result, (unint64_t *)&qword_1ED2E26A8);
  }
  return result;
}

unint64_t sub_1AD010230()
{
  unint64_t result;

  result = qword_1ED2DACE8;
  if (!qword_1ED2DACE8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6495C8, &type metadata for Image.Encoding);
    atomic_store(result, (unint64_t *)&qword_1ED2DACE8);
  }
  return result;
}

unint64_t sub_1AD010278()
{
  unint64_t result;

  result = qword_1ED2E2EA8;
  if (!qword_1ED2E2EA8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6494E4, &_s14descr1E5CCDA19V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED2E2EA8);
  }
  return result;
}

ValueMetadata *_s14descr1E5CCDA19V10CodingKeysOMa()
{
  return &_s14descr1E5CCDA19V10CodingKeysON;
}

uint64_t _s14descr1E5CCD961V13ImageEncodingOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD010320 + 4 * byte_1AD64942B[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD010354 + 4 * byte_1AD649426[v4]))();
}

uint64_t sub_1AD010354(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD01035C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD010364);
  return result;
}

uint64_t sub_1AD010370(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD010378);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD01037C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD010384(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E5CCD961V13ImageEncodingOMa()
{
  return &_s14descr1E5CCD961V13ImageEncodingON;
}

uint64_t _s14descr1E5CCD961V10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s14descr1E5CCD961V10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD01047C + 4 * byte_1AD649435[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD0104B0 + 4 * byte_1AD649430[v4]))();
}

uint64_t sub_1AD0104B0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD0104B8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD0104C0);
  return result;
}

uint64_t sub_1AD0104CC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD0104D4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD0104D8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD0104E0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E5CCD961V10CodingKeysOMa()
{
  return &_s14descr1E5CCD961V10CodingKeysON;
}

ValueMetadata *type metadata accessor for ImageEncodingError()
{
  return &type metadata for ImageEncodingError;
}

uint64_t _s14descr1E5CCDA19V10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD010558 + 4 * byte_1AD64943F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD01058C + 4 * byte_1AD64943A[v4]))();
}

uint64_t sub_1AD01058C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD010594(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD01059CLL);
  return result;
}

uint64_t sub_1AD0105A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD0105B0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD0105B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD0105BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s14descr1E5CCDA19V17ImageProviderTypeOMa()
{
  return &_s14descr1E5CCDA19V17ImageProviderTypeON;
}

unint64_t sub_1AD0105DC()
{
  unint64_t result;

  result = qword_1EECD1AF8;
  if (!qword_1EECD1AF8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6496CC, &_s14descr1E5CCDA19V17ImageProviderTypeON);
    atomic_store(result, (unint64_t *)&qword_1EECD1AF8);
  }
  return result;
}

unint64_t sub_1AD010624()
{
  unint64_t result;

  result = qword_1EECD1B00;
  if (!qword_1EECD1B00)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD649734, &type metadata for ImageEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EECD1B00);
  }
  return result;
}

unint64_t sub_1AD01066C()
{
  unint64_t result;

  result = qword_1EECD1B08;
  if (!qword_1EECD1B08)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD649824, &_s14descr1E5CCD961V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1EECD1B08);
  }
  return result;
}

unint64_t sub_1AD0106B4()
{
  unint64_t result;

  result = qword_1EECD1B10;
  if (!qword_1EECD1B10)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6498C4, &_s14descr1E5CCD961V13ImageEncodingON);
    atomic_store(result, (unint64_t *)&qword_1EECD1B10);
  }
  return result;
}

unint64_t sub_1AD0106FC()
{
  unint64_t result;

  result = qword_1ED2E2ED8;
  if (!qword_1ED2E2ED8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64975C, &_s14descr1E5CCD961V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED2E2ED8);
  }
  return result;
}

unint64_t sub_1AD010744()
{
  unint64_t result;

  result = qword_1ED2E2ED0;
  if (!qword_1ED2E2ED0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD649784, &_s14descr1E5CCD961V10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_1ED2E2ED0);
  }
  return result;
}

unint64_t sub_1AD010788()
{
  unint64_t result;

  result = qword_1ED2E2EA0;
  if (!qword_1ED2E2EA0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD649654, &_s14descr1E5CCDA19V17ImageProviderTypeON);
    atomic_store(result, (unint64_t *)&qword_1ED2E2EA0);
  }
  return result;
}

uint64_t sub_1AD0107CC()
{
  unint64_t v0;

  v0 = sub_1AD63BE94();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

unint64_t sub_1AD010814()
{
  unint64_t result;

  result = qword_1ED2E2EC0;
  if (!qword_1ED2E2EC0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64984C, &_s14descr1E5CCD961V13ImageEncodingON);
    atomic_store(result, (unint64_t *)&qword_1ED2E2EC0);
  }
  return result;
}

uint64_t sub_1AD010858()
{
  unint64_t v0;

  v0 = sub_1AD63BE94();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

uint64_t sub_1AD0108A4()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1ED2E7530 = result;
  return result;
}

uint64_t *sub_1AD010900()
{
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  return &qword_1ED2E7530;
}

id sub_1AD010940()
{
  return sub_1AD0117C8(qword_1ED2E7540, (id *)&qword_1ED2E7530);
}

uint64_t sub_1AD01095C()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1ED2E7528 = result;
  return result;
}

id sub_1AD0109C0()
{
  return sub_1AD0117C8(&qword_1ED2E7328, (id *)&qword_1ED2E7528);
}

uint64_t sub_1AD0109DC()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B18 = result;
  return result;
}

id sub_1AD010A38()
{
  return sub_1AD0117C8(qword_1EECD1310, (id *)&qword_1EECD1B18);
}

uint64_t sub_1AD010A54()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1ED2DA658 = result;
  return result;
}

id sub_1AD010AB0()
{
  return sub_1AD0117C8(&qword_1ED2DA808, (id *)&qword_1ED2DA658);
}

uint64_t sub_1AD010ACC()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B20 = result;
  return result;
}

id sub_1AD010B30()
{
  return sub_1AD0117C8(&qword_1EECD1320, (id *)&qword_1EECD1B20);
}

uint64_t sub_1AD010B4C()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B28 = result;
  return result;
}

id sub_1AD010BA8()
{
  return sub_1AD0117C8(&qword_1EECD1328, (id *)&qword_1EECD1B28);
}

uint64_t sub_1AD010BC4()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B30 = result;
  return result;
}

id sub_1AD010C20()
{
  return sub_1AD0117C8(&qword_1EECD1330, (id *)&qword_1EECD1B30);
}

uint64_t sub_1AD010C3C()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B38 = result;
  return result;
}

id sub_1AD010C98()
{
  return sub_1AD0117C8(&qword_1EECD1338, (id *)&qword_1EECD1B38);
}

uint64_t sub_1AD010CB4()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B40 = result;
  return result;
}

id sub_1AD010D10()
{
  return sub_1AD0117C8(&qword_1EECD1340, (id *)&qword_1EECD1B40);
}

uint64_t sub_1AD010D2C()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B48 = result;
  return result;
}

uint64_t *sub_1AD010D88()
{
  if (qword_1EECD1348 != -1)
    swift_once();
  return &qword_1EECD1B48;
}

id sub_1AD010DC8()
{
  return sub_1AD0117C8(&qword_1EECD1348, (id *)&qword_1EECD1B48);
}

uint64_t sub_1AD010DE4()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B50 = result;
  return result;
}

id sub_1AD010E40()
{
  return sub_1AD0117C8(&qword_1EECD1350, (id *)&qword_1EECD1B50);
}

uint64_t sub_1AD010E5C()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B58 = result;
  return result;
}

id sub_1AD010EB8()
{
  return sub_1AD0117C8(qword_1EECD1358, (id *)&qword_1EECD1B58);
}

uint64_t sub_1AD010ED4()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1ED2DAD28 = result;
  return result;
}

id sub_1AD010F30()
{
  return sub_1AD0117C8(&qword_1ED2DAD30, (id *)&qword_1ED2DAD28);
}

uint64_t sub_1AD010F4C()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B60 = result;
  return result;
}

id sub_1AD010FB4()
{
  return sub_1AD0117C8(&qword_1EECD1368, (id *)&qword_1EECD1B60);
}

uint64_t sub_1AD010FD0()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B68 = result;
  return result;
}

id sub_1AD01102C()
{
  return sub_1AD0117C8(&qword_1EECD1370, (id *)&qword_1EECD1B68);
}

uint64_t sub_1AD011048()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B70 = result;
  return result;
}

id sub_1AD0110A4()
{
  return sub_1AD0117C8(&qword_1EECD1378, (id *)&qword_1EECD1B70);
}

uint64_t sub_1AD0110C0()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B78 = result;
  return result;
}

id sub_1AD01111C()
{
  return sub_1AD0117C8(&qword_1EECD1380, (id *)&qword_1EECD1B78);
}

uint64_t sub_1AD011138()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B80 = result;
  return result;
}

id sub_1AD011194()
{
  return sub_1AD0117C8(&qword_1EECD1388, (id *)&qword_1EECD1B80);
}

uint64_t sub_1AD0111B0()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B88 = result;
  return result;
}

id sub_1AD01120C()
{
  return sub_1AD0117C8(&qword_1EECD1390, (id *)&qword_1EECD1B88);
}

uint64_t sub_1AD011228()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B90 = result;
  return result;
}

id sub_1AD011284()
{
  return sub_1AD0117C8(&qword_1EECD1398, (id *)&qword_1EECD1B90);
}

uint64_t sub_1AD0112A0()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1B98 = result;
  return result;
}

id sub_1AD0112FC()
{
  return sub_1AD0117C8(&qword_1EECD13A0, (id *)&qword_1EECD1B98);
}

uint64_t sub_1AD011318()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1BA0 = result;
  return result;
}

id sub_1AD011374()
{
  return sub_1AD0117C8(qword_1EECD13A8, (id *)&qword_1EECD1BA0);
}

uint64_t sub_1AD011390()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1ED2E19F0 = result;
  return result;
}

id sub_1AD0113EC()
{
  return sub_1AD0117C8(&qword_1ED2E2B10, (id *)&qword_1ED2E19F0);
}

uint64_t sub_1AD011408()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1BA8 = result;
  return result;
}

id sub_1AD011464()
{
  return sub_1AD0117C8(&qword_1EECD13B8, (id *)&qword_1EECD1BA8);
}

uint64_t sub_1AD011480()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1BB0 = result;
  return result;
}

id sub_1AD0114DC()
{
  return sub_1AD0117C8(&qword_1EECD13C0, (id *)&qword_1EECD1BB0);
}

uint64_t sub_1AD0114F8()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1BB8 = result;
  return result;
}

id sub_1AD011554()
{
  return sub_1AD0117C8(&qword_1EECD13C8, (id *)&qword_1EECD1BB8);
}

uint64_t sub_1AD011570()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1BC0 = result;
  return result;
}

id sub_1AD0115CC()
{
  return sub_1AD0117C8(&qword_1EECD13D0, (id *)&qword_1EECD1BC0);
}

uint64_t sub_1AD0115E8()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1BC8 = result;
  return result;
}

id sub_1AD011644()
{
  return sub_1AD0117C8(&qword_1EECD13D8, (id *)&qword_1EECD1BC8);
}

uint64_t sub_1AD011660()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1BD0 = result;
  return result;
}

id sub_1AD0116BC()
{
  return sub_1AD0117C8(&qword_1EECD13E0, (id *)&qword_1EECD1BD0);
}

uint64_t sub_1AD0116D8()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1BD8 = result;
  return result;
}

id sub_1AD011734()
{
  return sub_1AD0117C8(&qword_1EECD13E8, (id *)&qword_1EECD1BD8);
}

uint64_t sub_1AD011750()
{
  uint64_t result;

  sub_1AD011CE4();
  result = sub_1AD63BC3C();
  qword_1EECD1BE0 = result;
  return result;
}

id sub_1AD0117AC()
{
  return sub_1AD0117C8(&qword_1EECD13F0, (id *)&qword_1EECD1BE0);
}

id sub_1AD0117C8(_QWORD *a1, id *a2)
{
  if (*a1 != -1)
    swift_once();
  return *a2;
}

uint64_t sub_1AD011800(uint64_t a1)
{
  return sub_1AD011A68(a1, qword_1EECD1BE8);
}

uint64_t static Logger.relayReachabilityRequestUnpacker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD011880(&qword_1EECD13F8, (uint64_t)qword_1EECD1BE8, a1);
}

uint64_t sub_1AD011840(uint64_t a1)
{
  return sub_1AD011A68(a1, qword_1EECD1C00);
}

uint64_t static Logger.relayReachabilityResponseUnpacker.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD011880(qword_1EECD1400, (uint64_t)qword_1EECD1C00, a1);
}

uint64_t sub_1AD011880@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1AD63B4B0();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1AD0118E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v17;

  v4 = sub_1AD63BC48();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v17 - v7;
  v9 = *(_QWORD *)(a2 - 8);
  v10 = MEMORY[0x1E0C80A78](v6);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v17 - v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a1, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    return 7104878;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v14, v8, a2);
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v14, a2);
    v15 = sub_1AD63B7A4();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v14, a2);
  }
  return v15;
}

uint64_t sub_1AD011A44(uint64_t a1)
{
  return sub_1AD011A68(a1, qword_1ED2E3090);
}

uint64_t sub_1AD011A68(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = sub_1AD63B4B0();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_1AD63B4A4();
}

uint64_t sub_1AD011AD8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD011880(qword_1ED2E32E8, (uint64_t)qword_1ED2E3090, a1);
}

uint64_t sub_1AD011AF4()
{
  uint64_t v0;

  v0 = sub_1AD63B4B0();
  __swift_allocate_value_buffer(v0, qword_1EECD1C18);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECD1C18);
  return sub_1AD63B4A4();
}

uint64_t sub_1AD011B74@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD011880(&qword_1EECD1410, (uint64_t)qword_1EECD1C18, a1);
}

uint64_t sub_1AD011B90()
{
  uint64_t v0;

  v0 = sub_1AD63B4B0();
  __swift_allocate_value_buffer(v0, qword_1EECD1C30);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECD1C30);
  return sub_1AD63B4A4();
}

uint64_t sub_1AD011C10@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD011880(&qword_1EECD1418, (uint64_t)qword_1EECD1C30, a1);
}

uint64_t sub_1AD011C2C()
{
  uint64_t v0;

  v0 = sub_1AD63B4B0();
  __swift_allocate_value_buffer(v0, qword_1EECD1C48);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECD1C48);
  return sub_1AD63B4A4();
}

uint64_t sub_1AD011CAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD011880(&qword_1EECD1420, (uint64_t)qword_1EECD1C48, a1);
}

uint64_t sub_1AD011CCC()
{
  return sub_1AD63B768();
}

ValueMetadata *type metadata accessor for Log()
{
  return &type metadata for Log;
}

unint64_t sub_1AD011CE4()
{
  unint64_t result;

  result = qword_1ED2E7338;
  if (!qword_1ED2E7338)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2E7338);
  }
  return result;
}

uint64_t BalloonPlugin.payload.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD011D2C(v1, a1);
}

uint64_t sub_1AD011D2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BalloonPlugin.Payload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for BalloonPlugin.Payload(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1ED2E1A78);
}

uint64_t BalloonPlugin.payload.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD011D8C(a1, v1);
}

uint64_t sub_1AD011D8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for BalloonPlugin.Payload(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*BalloonPlugin.payload.modify())()
{
  return nullsub_1;
}

uint64_t BalloonPlugin.bundleID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for BalloonPlugin(0) + 20);
  if (*(_QWORD *)(v1 + 24))
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for BalloonPlugin(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1A68);
}

uint64_t sub_1AD011E7C(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD011EB0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 20);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD011F34(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for BalloonPlugin(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v2, v1);
}

uint64_t BalloonPlugin.bundleID.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for BalloonPlugin(0);
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*BalloonPlugin.bundleID.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for BalloonPlugin(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5)
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD012060;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD012060(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t BalloonPlugin.$bundleID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 20));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD01210C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 20));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD012154(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for BalloonPlugin(0) + 20));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v5;
  v6[3] = v4;
  return result;
}

__n128 BalloonPlugin.$bundleID.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 20));
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

void (*BalloonPlugin.$bundleID.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for BalloonPlugin(0) + 20);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v8 = v5[2];
  v7 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v8;
  v3[3] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD0122A8;
}

void sub_1AD0122A8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)((*a1)[4] + *((int *)*a1 + 10));
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v3;
  }
  free(v2);
}

uint64_t BalloonPlugin.isExpirable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for BalloonPlugin(0) + 24));
}

uint64_t BalloonPlugin.isExpirable.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for BalloonPlugin(0);
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*BalloonPlugin.isExpirable.modify())(_QWORD)
{
  type metadata accessor for BalloonPlugin(0);
  return nullsub_1;
}

uint64_t BalloonPlugin.attributionInfo.getter()
{
  type metadata accessor for BalloonPlugin(0);
  return swift_bridgeObjectRetain();
}

uint64_t BalloonPlugin.attributionInfo.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for BalloonPlugin(0) + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*BalloonPlugin.attributionInfo.modify())(_QWORD)
{
  type metadata accessor for BalloonPlugin(0);
  return nullsub_1;
}

uint64_t BalloonPlugin.plainTextBody.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for BalloonPlugin(0) + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t BalloonPlugin.plainTextBody.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for BalloonPlugin(0) + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*BalloonPlugin.plainTextBody.modify())(_QWORD)
{
  type metadata accessor for BalloonPlugin(0);
  return nullsub_1;
}

uint64_t BalloonPlugin.content.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1AD00C45C(v4);
}

__n128 BalloonPlugin.content.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 36));
  sub_1AD0096E4(*v3);
  result = v5;
  *(__n128 *)v3 = v5;
  v3[2] = v2;
  return result;
}

uint64_t (*BalloonPlugin.content.modify())(_QWORD)
{
  type metadata accessor for BalloonPlugin(0);
  return nullsub_1;
}

uint64_t BalloonPlugin.participantDestinationIdentifiers.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + *(int *)(type metadata accessor for BalloonPlugin(0) + 40) + 16))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD01261C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 40) + 16);
  if (v3)
  {
    *a2 = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t BalloonPlugin.participantDestinationIdentifiers.setter(uint64_t a1)
{
  type metadata accessor for BalloonPlugin(0);
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(a1);
}

uint64_t (*BalloonPlugin.participantDestinationIdentifiers.modify(uint64_t a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*result)(_QWORD *, char);

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for BalloonPlugin(0) + 40);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = *(_QWORD *)(v1 + v3 + 16);
  if (v4)
  {
    *(_QWORD *)a1 = v4;
    swift_bridgeObjectRetain();
    return sub_1AD012768;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD012768(_QWORD *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) == 0)
    return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(*a1);
  v2 = swift_bridgeObjectRetain();
  _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v2);
  return swift_bridgeObjectRelease();
}

uint64_t BalloonPlugin.$participantDestinationIdentifiers.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 40));
  v4 = v3[1];
  v5 = v3[2];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD0127F8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 40));
  v4 = v3[1];
  v5 = v3[2];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD012840(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = (_QWORD *)(a2 + *(int *)(type metadata accessor for BalloonPlugin(0) + 40));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  *v5 = v3;
  v5[1] = v2;
  v5[2] = v4;
  return result;
}

__n128 BalloonPlugin.$participantDestinationIdentifiers.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  __n128 *v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = (__n128 *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 40));
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v4 = *a1;
  v4[1].n128_u64[0] = v3;
  return result;
}

void (*BalloonPlugin.$participantDestinationIdentifiers.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(int *)(type metadata accessor for BalloonPlugin(0) + 40);
  *((_DWORD *)v3 + 8) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD01297C;
}

void sub_1AD01297C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *a1;
  v3 = (*a1)[2];
  v4 = (_QWORD *)((*a1)[3] + *((int *)*a1 + 8));
  v6 = **a1;
  v5 = (*a1)[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v3;
  }
  free(v2);
}

uint64_t BalloonPlugin.associatedMessageGUID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for BalloonPlugin(0) + 44);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD012AAC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 44);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD012B34(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for BalloonPlugin(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t BalloonPlugin.associatedMessageGUID.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for BalloonPlugin(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*BalloonPlugin.associatedMessageGUID.modify(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for BalloonPlugin(0) + 44);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD012C64;
  }
  return result;
}

uint64_t sub_1AD012C64(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t BalloonPlugin.$associatedMessageGUID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 44));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD012D1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 44));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD012D70(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for BalloonPlugin(0) + 44));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

__n128 BalloonPlugin.$associatedMessageGUID.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 44));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

void (*BalloonPlugin.$associatedMessageGUID.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for BalloonPlugin(0) + 44);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD012ED0;
}

void sub_1AD012ED0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)((*a1)[4] + *((int *)*a1 + 10));
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[2];
  v9 = v4[3];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD003E48(v7, v3);
    swift_release();
    sub_1AD003F24(v8, v9);
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD003F24(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD003F24(v8, v9);
    *v4 = v6;
    v4[1] = v5;
    v4[2] = v7;
    v4[3] = v3;
  }
  free(v2);
}

uint64_t BalloonPlugin.associatedMessageRange.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for BalloonPlugin(0) + 48));
}

uint64_t BalloonPlugin.associatedMessageRange.setter(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v8;

  result = type metadata accessor for BalloonPlugin(0);
  v8 = v3 + *(int *)(result + 48);
  *(_QWORD *)v8 = a1;
  *(_QWORD *)(v8 + 8) = a2;
  *(_BYTE *)(v8 + 16) = a3 & 1;
  return result;
}

uint64_t (*BalloonPlugin.associatedMessageRange.modify())(_QWORD)
{
  type metadata accessor for BalloonPlugin(0);
  return nullsub_1;
}

uint64_t BalloonPlugin.associatedMessageType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for BalloonPlugin(0) + 52);
  if ((*(_BYTE *)(v1 + 25) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD0130A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = type metadata accessor for BalloonPlugin(0);
  v5 = a1 + *(int *)(result + 52);
  if ((*(_BYTE *)(v5 + 25) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_BYTE *)(v5 + 24);
    *(_QWORD *)a2 = *(_QWORD *)(v5 + 16);
    *(_BYTE *)(a2 + 8) = v6 & 1;
  }
  return result;
}

uint64_t BalloonPlugin.associatedMessageType.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  char v10;

  v4 = a2 & 1;
  v5 = v2 + *(int *)(type metadata accessor for BalloonPlugin(0) + 52);
  v6 = *(uint64_t (**)(uint64_t *))v5;
  v9 = a1;
  v10 = v4;
  result = v6(&v9);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = v4;
    *(_BYTE *)(v5 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v8 = 0x6E776F6E6B6E753CLL;
    v8[1] = 0xE90000000000003ELL;
    v8[2] = 0xD00000000000001CLL;
    v8[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*BalloonPlugin.associatedMessageType.modify(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for BalloonPlugin(0) + 52);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_BYTE *)(v4 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_BYTE *)(a1 + 8) = v5 & 1;
    return sub_1AD0132BC;
  }
  return result;
}

uint64_t sub_1AD0132BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  char v8;

  v1 = a1[2] + *((int *)a1 + 3);
  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(uint64_t (**)(uint64_t *))v1;
  v7 = *a1;
  v8 = v3;
  result = v4(&v7);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 16) = v2;
    *(_BYTE *)(v1 + 24) = v3;
    *(_BYTE *)(v1 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t BalloonPlugin.$associatedMessageType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 52));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD0133E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 52));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD013438(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *((_BYTE *)a1 + 25);
  v7 = a2 + *(int *)(type metadata accessor for BalloonPlugin(0) + 52);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v2;
  *(_QWORD *)(v7 + 16) = v4;
  *(_BYTE *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 25) = v6;
  return result;
}

__n128 BalloonPlugin.$associatedMessageType.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 *v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  v6 = (__n128 *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 52));
  swift_release();
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v3;
  v6[1].n128_u8[8] = v4;
  v6[1].n128_u8[9] = v5;
  return result;
}

void (*BalloonPlugin.$associatedMessageType.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for BalloonPlugin(0) + 52);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  LOBYTE(v5) = *((_BYTE *)v5 + 25);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = v9;
  *((_BYTE *)v3 + 25) = (_BYTE)v5;
  swift_retain();
  return sub_1AD013594;
}

void sub_1AD013594(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *a1;
  v3 = (*a1)[4] + *((int *)*a1 + 7);
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  v8 = *((_BYTE *)*a1 + 25);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v6;
    *(_BYTE *)(v3 + 24) = v7;
    *(_BYTE *)(v3 + 25) = v8;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v6;
    *(_BYTE *)(v3 + 24) = v7;
    *(_BYTE *)(v3 + 25) = v8;
  }
  free(v2);
}

uint64_t BalloonPlugin.attachments.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + *(int *)(type metadata accessor for BalloonPlugin(0) + 56));
  return swift_bridgeObjectRetain();
}

uint64_t BalloonPlugin.attachments.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *(int *)(type metadata accessor for BalloonPlugin(0) + 56);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = v2;
  return result;
}

uint64_t (*BalloonPlugin.attachments.modify())(_QWORD)
{
  type metadata accessor for BalloonPlugin(0);
  return nullsub_1;
}

uint64_t BalloonPlugin.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  sub_1AD63BD38();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63B810();
  v1 = type metadata accessor for BalloonPlugin(0);
  if (!*(_QWORD *)(v0 + *(int *)(v1 + 20) + 24))
    goto LABEL_12;
  v2 = (int *)v1;
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  v3 = v0 + v2[11];
  v4 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (!v5)
  {
    sub_1AD003F24(v4, 0);
    goto LABEL_6;
  }
  if (v5 == 1)
  {
LABEL_12:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  swift_bridgeObjectRetain();
  sub_1AD63B7A4();
LABEL_6:
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  if ((*(_BYTE *)(v0 + v2[12] + 16) & 1) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1AF0);
    sub_1AD63B7A4();
  }
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  v6 = v0 + v2[13];
  if ((*(_BYTE *)(v6 + 25) & 1) != 0)
    goto LABEL_12;
  if ((*(_BYTE *)(v6 + 24) & 1) == 0)
    sub_1AD63B7A4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63BE04();
  sub_1AD63B810();
  v7 = swift_bridgeObjectRetain();
  MEMORY[0x1AF44A6B0](v7, &type metadata for AttributionInfo);
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  return 0;
}

uint64_t sub_1AD013AA8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1C60, type metadata accessor for BalloonPlugin.Payload, (uint64_t)&protocol conformance descriptor for BalloonPlugin.Payload);
  result = sub_1ACFF9724(&qword_1EECD1C68, type metadata accessor for BalloonPlugin.Payload, (uint64_t)&protocol conformance descriptor for BalloonPlugin.Payload);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD013B04(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1C70, type metadata accessor for BalloonPlugin, (uint64_t)&protocol conformance descriptor for BalloonPlugin);
  result = sub_1ACFF9724(&qword_1EECD1C78, type metadata accessor for BalloonPlugin, (uint64_t)&protocol conformance descriptor for BalloonPlugin);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD013B74()
{
  uint64_t v0;

  type metadata accessor for BalloonPlugin(0);
  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD013BD4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  type metadata accessor for BalloonPlugin(0);
  return sub_1AD003180(v1, v2);
}

uint64_t initializeBufferWithCopyOfBuffer for BalloonPlugin(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    type metadata accessor for BalloonPlugin.Payload(0);
    v5 = (char *)&loc_1AD013C90 + 4 * byte_1AD649A68[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for BalloonPlugin(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(void);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unsigned int (*v46)(uint64_t, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int *v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  int *v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  int *v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  unsigned int (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  unsigned int (*v131)(void);

  type metadata accessor for BalloonPlugin.Payload(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      swift_bridgeObjectRelease();
      v4 = (int *)type metadata accessor for MessagesAppBalloon();
      v5 = a1 + v4[5];
      v6 = sub_1AD63B084();
      v7 = *(_QWORD *)(v6 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
        (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
      swift_bridgeObjectRelease();
      v8 = a1 + v4[7];
      v9 = sub_1AD63AF28();
      v10 = *(_QWORD *)(v9 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
        (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
      if (*(_QWORD *)(a1 + v4[8] + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v11 = (_QWORD *)(a1 + v4[11]);
      if (v11[34] >> 1 != 0xFFFFFFFFLL
        || (v11[38] | v11[36]) > 1
        || v11[44] & 0xFFFFFFFFFFFFFEFELL | v11[40] & 0xFFFFFFFFFFFF00FELL
        || (v11[48] | v11[46]) >= 2)
      {
        if (v11[3])
        {
          __swift_destroy_boxed_opaque_existential_1(a1 + v4[11]);
          v12 = v11[10];
          v13 = v11[12];
          v14 = v11[14];
          v15 = v11[16];
          v16 = v11[20];
          v17 = v11[22];
          v18 = v11[24];
          if (v12 >> 1 != 0xFFFFFFFF
            || (v14 | (unint64_t)v13) > 1
            || v16 & 0xFFFFFFFFFFFFFEFELL | v15 & 0xFFFFFFFFFFFF00FELL
            || (v18 | v17) >= 2)
          {
            sub_1AD00E8B0(v11[7], v11[8], v11[9], v12, v11[11], v13, v11[13], v14, v11[15], v15, v11[17], v11[18], v11[19], v16, v11[21], v17, v11[23], v18, v11[25],
              v11[26],
              v11[27],
              v11[28],
              v11[29],
              v11[30]);
          }
        }
        v19 = v11[31];
        v20 = v11[32];
        v21 = v11 + 31;
        sub_1AD00E8B0(v19, v20, v21[2], v21[3], v21[4], v21[5], v21[6], v21[7], v21[8], v21[9], v21[10], v21[11], v21[12], v21[13], v21[14], v21[15], v21[16], v21[17], v21[18],
          v21[19],
          v21[20],
          v21[21],
          v21[22],
          v21[23]);
      }
      v22 = a1 + v4[12];
      swift_release();
      if (*(_QWORD *)(v22 + 24) != 1)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v4[13] + 8) != 1)
        swift_bridgeObjectRelease();
      v23 = (uint64_t *)(a1 + v4[14]);
      v24 = v23[1];
      if (v24 >> 60 != 15)
        sub_1AD00412C(*v23, v24);
      goto LABEL_89;
    case 1u:
      v25 = sub_1AD63B084();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a1, v25);
      v26 = a1 + *(int *)(type metadata accessor for Handwriting() + 20);
      v27 = sub_1AD63B03C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v26, v27);
      goto LABEL_89;
    case 2u:
      v28 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v28 - 1) + 48))(a1, 1, v28))
        goto LABEL_90;
      v29 = a1 + v28[5];
      v30 = sub_1AD63AF28();
      v31 = *(_QWORD *)(v30 - 8);
      v32 = *(unsigned int (**)(void))(v31 + 48);
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v29, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v29, v30);
      v33 = a1 + v28[6];
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v33, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v33, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v34 = a1 + v28[12];
      if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v34, 1, v30))
        (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v34, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v28[21] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v35 = a1 + v28[22];
      v36 = type metadata accessor for LinkPresentation.IconMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 - 8) + 48))(v35, 1, v36))
      {
        v37 = v35 + *(int *)(v36 + 20);
        if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v37, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v37, v30);
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(a1 + v28[23] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v38 = a1 + v28[24];
      v39 = type metadata accessor for LinkPresentation.ARAssetMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 48))(v38, 1, v39))
      {
        v40 = v38 + *(int *)(v39 + 20);
        if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v40, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v40, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(a1 + v28[25] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v41 = a1 + v28[27];
      v42 = type metadata accessor for LinkPresentation.ImageMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42))
      {
        v43 = v41 + *(int *)(v42 + 20);
        if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v43, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v43, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v44 = a1 + v28[30];
      v45 = type metadata accessor for LinkPresentation.Video(0);
      v46 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48);
      if (!v46(v44, 1, v45))
      {
        if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v44, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v44, v30);
        v47 = v44 + *(int *)(v45 + 20);
        if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v32)(v47, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v47, v30);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      v131 = v32;
      v48 = a1 + v28[31];
      v49 = type metadata accessor for LinkPresentation.VideoMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v48, 1, v49))
      {
        v50 = v31;
        v51 = v48 + *(int *)(v49 + 20);
        if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v131)(v51, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v51, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = v50;
      }
      v52 = a1 + v28[32];
      v53 = type metadata accessor for LinkPresentation.Audio(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 1, v53))
      {
        if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v131)(v52, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v52, v30);
        swift_bridgeObjectRelease();
      }
      v54 = a1 + v28[33];
      v55 = type metadata accessor for LinkPresentation.AudioMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v54, 1, v55))
      {
        v56 = v31;
        v57 = v54 + *(int *)(v55 + 20);
        if (!((unsigned int (*)(uint64_t, uint64_t, uint64_t))v131)(v57, 1, v30))
          (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v57, v30);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v31 = v56;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v58 = (_QWORD *)(a1 + v28[41]);
      v59 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            v127 = v31;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[14] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v77 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
            v78 = (char *)v58 + v77[11];
            v79 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v79 - 8) + 48))(v78, 1, v79))
            {
              v80 = &v78[*(int *)(v79 + 20)];
              if (!v131())
                (*(void (**)(char *, uint64_t))(v127 + 8))(v80, v30);
              swift_bridgeObjectRelease();
            }
            v81 = (char *)v58 + v77[12];
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v131)(v81, 1, v30))
              (*(void (**)(char *, uint64_t))(v127 + 8))(v81, v30);
            swift_bridgeObjectRelease();
            if (*(_QWORD *)((char *)v58 + v77[14] + 8) != 1)
              goto LABEL_230;
            break;
          case 1u:
            v82 = v31;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v83 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
            goto LABEL_155;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v84 = type metadata accessor for LinkPresentation.MusicVideoMetadata(0);
            goto LABEL_181;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v84 = type metadata accessor for LinkPresentation.ArtistMetadata(0);
            goto LABEL_181;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v85 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
            v86 = (char *)v58 + v85[8];
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v131)(v86, 1, v30))
              (*(void (**)(char *, uint64_t))(v31 + 8))(v86, v30);
            swift_bridgeObjectRelease();
            if (*(_QWORD *)((char *)v58 + v85[10] + 16) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v87 = v85[11];
            goto LABEL_182;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v84 = type metadata accessor for LinkPresentation.RadioMetadata(0);
            goto LABEL_181;
          case 6u:
            v128 = v31;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[14] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            v88 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
            v89 = (char *)v58 + *(int *)(v88 + 48);
            if (!v46((uint64_t)v89, 1, v45))
            {
              if (!((unsigned int (*)(char *, uint64_t, uint64_t))v131)(v89, 1, v30))
                (*(void (**)(char *, uint64_t))(v128 + 8))(v89, v30);
              v90 = &v89[*(int *)(v45 + 20)];
              if (!((unsigned int (*)(char *, uint64_t, uint64_t))v131)(v90, 1, v30))
                (*(void (**)(char *, uint64_t))(v128 + 8))(v90, v30);
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
            }
            if (*(_QWORD *)((char *)v58 + *(int *)(v88 + 56) + 16) != 1)
              goto LABEL_230;
            break;
          case 7u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v84 = type metadata accessor for LinkPresentation.BookMetadata(0);
            goto LABEL_181;
          case 8u:
            v91 = v31;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[12] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v92 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
            v93 = (char *)v58 + *(int *)(v92 + 40);
            v94 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v94 - 8) + 48))(v93, 1, v94))
            {
              v129 = &v93[*(int *)(v94 + 20)];
              if (!v131())
                (*(void (**)(char *, uint64_t))(v91 + 8))(v129, v30);
              swift_bridgeObjectRelease();
            }
            v95 = (char *)v58 + *(int *)(v92 + 44);
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v131)(v95, 1, v30))
              (*(void (**)(char *, uint64_t))(v91 + 8))(v95, v30);
            break;
          case 9u:
            v130 = v31;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v96 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
            v97 = (char *)v58 + v96[9];
            v98 = sub_1AD63B03C();
            v99 = *(_QWORD *)(v98 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v99 + 48))(v97, 1, v98))
              (*(void (**)(char *, uint64_t))(v99 + 8))(v97, v98);
            if (*(_QWORD *)((char *)v58 + v96[10] + 16) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v100 = (char *)v58 + v96[11];
            v101 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 48))(v100, 1, v101))
            {
              v102 = &v100[*(int *)(v101 + 20)];
              if (!((unsigned int (*)(char *, uint64_t, uint64_t))v131)(v102, 1, v30))
                (*(void (**)(char *, uint64_t))(v130 + 8))(v102, v30);
              swift_bridgeObjectRelease();
            }
            goto LABEL_190;
          case 0xAu:
            v82 = v31;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v83 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
LABEL_155:
            v103 = (char *)v58 + *(int *)(v83 + 36);
            v104 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48))(v103, 1, v104))
            {
              v105 = &v103[*(int *)(v104 + 20)];
              if (!((unsigned int (*)(char *, uint64_t, uint64_t))v131)(v105, 1, v30))
                (*(void (**)(char *, uint64_t))(v82 + 8))(v105, v30);
              swift_bridgeObjectRelease();
            }
            goto LABEL_190;
          case 0xBu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[12] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v87 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
            goto LABEL_182;
          case 0xCu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v84 = type metadata accessor for LinkPresentation.TVSeasonMetadata(0);
            goto LABEL_181;
          case 0xDu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[8] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v87 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
            goto LABEL_182;
          case 0xEu:
            v106 = v31;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v107 = type metadata accessor for LinkPresentation.MovieMetadata(0);
            v108 = (char *)v58 + *(int *)(v107 + 36);
            v109 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v109 - 8) + 48))(v108, 1, v109))
            {
              v110 = &v108[*(int *)(v109 + 20)];
              if (!((unsigned int (*)(char *, uint64_t, uint64_t))v131)(v110, 1, v30))
                (*(void (**)(char *, uint64_t))(v106 + 8))(v110, v30);
              swift_bridgeObjectRelease();
            }
            if (*(_QWORD *)((char *)v58 + *(int *)(v107 + 40) + 16) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            goto LABEL_190;
          case 0xFu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v84 = type metadata accessor for LinkPresentation.MovieBundleMetadata(0);
LABEL_181:
            v87 = *(int *)(v84 + 36);
LABEL_182:
            v111 = (char *)v58 + v87;
            v112 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v112 - 8) + 48))(v111, 1, v112))
            {
              break;
            }
            v113 = &v111[*(int *)(v112 + 20)];
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v131)(v113, 1, v30))
              (*(void (**)(char *, uint64_t))(v31 + 8))(v113, v30);
LABEL_190:
            swift_bridgeObjectRelease();
            break;
          case 0x10u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[8] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[24] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            goto LABEL_190;
          case 0x11u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[8] != 1)
              goto LABEL_230;
            break;
          case 0x12u:
            swift_bridgeObjectRelease();
            if (v58[4] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[20] != 1)
              goto LABEL_230;
            break;
          case 0x13u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[5] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            if (v58[24] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[47] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[67] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            if (v58[88] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[104] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[120] != 1)
              goto LABEL_230;
            break;
          case 0x14u:
            swift_bridgeObjectRelease();
            if (v58[5] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[21] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[37] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[56] != 1)
              goto LABEL_230;
            break;
          case 0x15u:
            swift_bridgeObjectRelease();
            if (v58[4] != 1)
              goto LABEL_230;
            break;
          case 0x16u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[7] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[23] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v114 = (char *)v58 + *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
            v115 = sub_1AD63B03C();
            v116 = *(_QWORD *)(v115 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v114, 1, v115))
              (*(void (**)(char *, uint64_t))(v116 + 8))(v114, v115);
            break;
          case 0x17u:
          case 0x1Bu:
          case 0x1Du:
          case 0x1Fu:
          case 0x20u:
          case 0x21u:
            goto LABEL_190;
          case 0x18u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
              goto LABEL_230;
            break;
          case 0x19u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[6] != 1)
              goto LABEL_230;
            break;
          case 0x1Au:
            swift_bridgeObjectRelease();
            if (v58[7] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v117 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
            v118 = (char *)v58 + v117[9];
            v119 = sub_1AD63B03C();
            v120 = *(_QWORD *)(v119 - 8);
            v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48);
            if (!v121(v118, 1, v119))
              (*(void (**)(char *, uint64_t))(v120 + 8))(v118, v119);
            v122 = (char *)v58 + v117[10];
            if (!v121(v122, 1, v119))
              (*(void (**)(char *, uint64_t))(v120 + 8))(v122, v119);
            v123 = v117[11];
            goto LABEL_241;
          case 0x1Cu:
          case 0x22u:
LABEL_230:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 0x1Eu:
            swift_bridgeObjectRelease();
            v124 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
            v125 = (char *)v58 + *(int *)(v124 + 20);
            v119 = sub_1AD63B03C();
            v120 = *(_QWORD *)(v119 - 8);
            v121 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v120 + 48);
            if (!v121(v125, 1, v119))
              (*(void (**)(char *, uint64_t))(v120 + 8))(v125, v119);
            v123 = *(int *)(v124 + 24);
LABEL_241:
            v126 = (char *)v58 + v123;
            if (!v121(v126, 1, v119))
              (*(void (**)(char *, uint64_t))(v120 + 8))(v126, v119);
            break;
          case 0x23u:
            swift_release();
            break;
          default:
            break;
        }
      }
      v60 = a1 + v28[42];
      if (*(_QWORD *)(v60 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v60 + 32) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v61 = a1 + v28[43];
      v62 = type metadata accessor for CollaborationMetadata();
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62))
        goto LABEL_90;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v63 = v61 + *(int *)(v62 + 24);
      v64 = sub_1AD63B03C();
      v65 = *(_QWORD *)(v64 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v61 + *(int *)(v62 + 40) + 112))
        goto LABEL_90;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_89:
      swift_bridgeObjectRelease();
LABEL_90:
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + *(int *)(a2 + 36)))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      swift_bridgeObjectRelease();
      v75 = a1 + *(int *)(a2 + 44);
      swift_release();
      if (*(_QWORD *)(v75 + 24) != 1)
        swift_bridgeObjectRelease();
      swift_release();
      return swift_bridgeObjectRelease();
    case 3u:
      swift_release();
      v66 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v67 = sub_1AD63AF28();
      v68 = *(_QWORD *)(v67 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
      v69 = type metadata accessor for CombinedPluginAttachmentInfo();
      sub_1AD00412C(*(_QWORD *)(a1 + *(int *)(v69 + 20)), *(_QWORD *)(a1 + *(int *)(v69 + 20) + 8));
      swift_release();
      swift_bridgeObjectRelease();
      sub_1AD00412C(*(_QWORD *)(a1 + *(int *)(v69 + 32)), *(_QWORD *)(a1 + *(int *)(v69 + 32) + 8));
      goto LABEL_90;
    case 4u:
      v70 = sub_1AD63B084();
      v71 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8);
      v71(a1, v70);
      v72 = a1 + *(int *)(type metadata accessor for DigitalTouchBalloon(0) + 20);
      type metadata accessor for DigitalTouchMessage(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 3u:
        case 5u:
        case 6u:
          goto LABEL_88;
        case 2u:
          swift_release();
          swift_release();
          swift_release();
          goto LABEL_90;
        case 4u:
          v73 = v72 + *(int *)(type metadata accessor for VideoMessage(0) + 20);
          v74 = type metadata accessor for IntroBalloon(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(v73, 1, v74))
          {
            v71(v73, v70);
            swift_release();
            swift_bridgeObjectRelease();
          }
LABEL_88:
          swift_release();
          goto LABEL_89;
        default:
          goto LABEL_90;
      }
    default:
      goto LABEL_90;
  }
}

void initializeWithCopy for BalloonPlugin()
{
  char *v0;

  type metadata accessor for BalloonPlugin.Payload(0);
  v0 = (char *)sub_1AD01AA54 + 4 * byte_1AD649B1E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1AD01AA54(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__dst,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  _QWORD *v61;
  uint64_t v62;
  uint64_t v63;
  int *v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  unsigned int (*v70)(char *, uint64_t, uint64_t);
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  _QWORD *v100;
  _QWORD *v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  _QWORD *v105;
  unint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  unint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  unint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  unint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  int *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  _QWORD *v176;
  uint64_t v177;
  _OWORD *v178;
  uint64_t v179;
  int *v180;
  uint64_t v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  uint64_t *v187;
  unint64_t v188;
  uint64_t v189;
  uint64_t v190;
  _QWORD *v191;
  _QWORD *v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  _QWORD *v196;
  _QWORD *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  _QWORD *v201;
  _QWORD *v202;
  uint64_t v203;
  uint64_t v204;
  _QWORD *v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  char *v215;
  uint64_t v216;
  _OWORD *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  unint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;

  *(_QWORD *)(v62 - 104) = v59;
  *(_QWORD *)(v62 - 96) = v58;
  v63 = v60[1];
  *v61 = *v60;
  v61[1] = v63;
  v64 = (int *)type metadata accessor for MessagesAppBalloon();
  v65 = v64[5];
  v66 = (char *)v61 + v65;
  v67 = (char *)v60 + v65;
  v68 = sub_1AD63B084();
  v69 = *(_QWORD *)(v68 - 8);
  v70 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48);
  swift_bridgeObjectRetain();
  if (v70(v67, 1, v68))
  {
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v66, v67, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v66, v67, v68);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v69 + 56))(v66, 0, 1, v68);
  }
  v72 = v64[6];
  v73 = (_QWORD *)((char *)v61 + v72);
  v74 = (_QWORD *)((char *)v60 + v72);
  v75 = v74[1];
  *v73 = *v74;
  v73[1] = v75;
  v76 = v64[7];
  v77 = (char *)v61 + v76;
  v78 = (char *)v60 + v76;
  v79 = sub_1AD63AF28();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
  swift_bridgeObjectRetain();
  if (v81(v78, 1, v79))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v77, v78, v79);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  }
  v83 = v64[8];
  v84 = (char *)v61 + v83;
  v85 = (char *)v60 + v83;
  v86 = *((_QWORD *)v85 + 1);
  if (v86 == 1)
  {
    v87 = *((_OWORD *)v85 + 5);
    *((_OWORD *)v84 + 4) = *((_OWORD *)v85 + 4);
    *((_OWORD *)v84 + 5) = v87;
    *(_OWORD *)(v84 + 89) = *(_OWORD *)(v85 + 89);
    v88 = *((_OWORD *)v85 + 1);
    *(_OWORD *)v84 = *(_OWORD *)v85;
    *((_OWORD *)v84 + 1) = v88;
    v89 = *((_OWORD *)v85 + 3);
    *((_OWORD *)v84 + 2) = *((_OWORD *)v85 + 2);
    *((_OWORD *)v84 + 3) = v89;
  }
  else
  {
    *(_QWORD *)v84 = *(_QWORD *)v85;
    *((_QWORD *)v84 + 1) = v86;
    v90 = *((_QWORD *)v85 + 3);
    *((_QWORD *)v84 + 2) = *((_QWORD *)v85 + 2);
    *((_QWORD *)v84 + 3) = v90;
    v91 = *((_QWORD *)v85 + 5);
    *((_QWORD *)v84 + 4) = *((_QWORD *)v85 + 4);
    *((_QWORD *)v84 + 5) = v91;
    v92 = *((_QWORD *)v85 + 7);
    *((_QWORD *)v84 + 6) = *((_QWORD *)v85 + 6);
    *((_QWORD *)v84 + 7) = v92;
    v93 = *((_QWORD *)v85 + 9);
    *((_QWORD *)v84 + 8) = *((_QWORD *)v85 + 8);
    *((_QWORD *)v84 + 9) = v93;
    v94 = v60;
    v95 = *((_QWORD *)v85 + 11);
    *((_QWORD *)v84 + 10) = *((_QWORD *)v85 + 10);
    *((_QWORD *)v84 + 11) = v95;
    v84[104] = v85[104];
    *((_QWORD *)v84 + 12) = *((_QWORD *)v85 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v60 = v94;
    swift_bridgeObjectRetain();
  }
  v96 = v64[9];
  v97 = (char *)v61 + v96;
  v98 = (char *)v60 + v96;
  *(_QWORD *)v97 = *(_QWORD *)v98;
  v97[8] = v98[8];
  v99 = v64[10];
  v100 = (_QWORD *)((char *)v61 + v99);
  v101 = (_QWORD *)((char *)v60 + v99);
  v102 = v101[1];
  *v100 = *v101;
  v100[1] = v102;
  *(_QWORD *)(v62 - 120) = v64;
  *(_QWORD *)(v62 - 112) = v60;
  v103 = v64[11];
  v104 = (char *)v61 + v103;
  v105 = (_QWORD *)((char *)v60 + v103);
  v106 = *(_QWORD *)((char *)v60 + v103 + 272);
  v107 = v105[36];
  v108 = v105[38];
  v109 = v105[40];
  v110 = v105[44];
  v111 = v105[46];
  v112 = v105[48];
  swift_bridgeObjectRetain();
  if (v106 >> 1 != 0xFFFFFFFF
    || (v108 | v107) > 1
    || v110 & 0xFFFFFFFFFFFFFEFELL | v109 & 0xFFFFFFFFFFFF00FELL
    || (v112 | v111) >= 2)
  {
    *(_QWORD *)(v62 - 128) = v61;
    v113 = v105[3];
    if (v113)
    {
      v114 = v105[4];
      *((_QWORD *)v104 + 3) = v113;
      *((_QWORD *)v104 + 4) = v114;
      (**(void (***)(void *, const void *))(v113 - 8))(v104, v105);
      *((_QWORD *)v104 + 5) = v105[5];
      v104[48] = *((_BYTE *)v105 + 48);
      v115 = v105[10];
      v116 = v105[12];
      v117 = v105[14];
      v118 = v105[16];
      v119 = v105[20];
      v120 = v105[22];
      v121 = v105[24];
      if (v115 >> 1 != 0xFFFFFFFF
        || (v117 | (unint64_t)v116) > 1
        || v119 & 0xFFFFFFFFFFFFFEFELL | v118 & 0xFFFFFFFFFFFF00FELL
        || (v121 | v120) >= 2)
      {
        v136 = v105[7];
        v135 = v105[8];
        v137 = v105[9];
        v138 = v105[11];
        v139 = v105[13];
        v237 = v105[15];
        v243 = v105[17];
        v247 = v105[18];
        v249 = v105[19];
        v251 = v105[21];
        v140 = v105[23];
        v141 = v105[25];
        v142 = v105[26];
        *(_QWORD *)(v62 - 184) = v140;
        *(_QWORD *)(v62 - 176) = v141;
        v143 = v105[27];
        v144 = v105[28];
        *(_QWORD *)(v62 - 168) = v142;
        *(_QWORD *)(v62 - 160) = v143;
        v145 = v105[29];
        v146 = v105[30];
        *(_QWORD *)(v62 - 152) = v144;
        *(_QWORD *)(v62 - 144) = v145;
        *(_QWORD *)(v62 - 136) = v146;
        v229 = v120;
        v228 = v119;
        v227 = v118;
        v236 = v118;
        v147 = v135;
        v245 = v120;
        v239 = v119;
        v241 = v121;
        v148 = v138;
        v149 = v139;
        sub_1AD00FEAC(v136, v135, v137, v115, v138, v116, v139, v117, v237, v227, v243, v247, v249, v228, v251, v229, v140, v121, v141,
          v142,
          v143,
          v144,
          v145,
          v146);
        *((_QWORD *)v104 + 7) = v136;
        *((_QWORD *)v104 + 8) = v147;
        *((_QWORD *)v104 + 9) = v137;
        *((_QWORD *)v104 + 10) = v115;
        *((_QWORD *)v104 + 11) = v148;
        *((_QWORD *)v104 + 12) = v116;
        *((_QWORD *)v104 + 13) = v149;
        *((_QWORD *)v104 + 14) = v117;
        *((_QWORD *)v104 + 15) = v237;
        *((_QWORD *)v104 + 16) = v236;
        *((_QWORD *)v104 + 17) = v243;
        *((_QWORD *)v104 + 18) = v247;
        *((_QWORD *)v104 + 19) = v249;
        *((_QWORD *)v104 + 20) = v239;
        *((_QWORD *)v104 + 21) = v251;
        *((_QWORD *)v104 + 22) = v245;
        *((_QWORD *)v104 + 23) = *(_QWORD *)(v62 - 184);
        *((_QWORD *)v104 + 24) = v241;
        *((_QWORD *)v104 + 25) = *(_QWORD *)(v62 - 176);
        *((_QWORD *)v104 + 26) = *(_QWORD *)(v62 - 168);
        *((_QWORD *)v104 + 27) = *(_QWORD *)(v62 - 160);
        *((_QWORD *)v104 + 28) = *(_QWORD *)(v62 - 152);
        *((_QWORD *)v104 + 29) = *(_QWORD *)(v62 - 144);
        *((_QWORD *)v104 + 30) = *(_QWORD *)(v62 - 136);
      }
      else
      {
        v122 = *(_OWORD *)(v105 + 25);
        *(_OWORD *)(v104 + 184) = *(_OWORD *)(v105 + 23);
        *(_OWORD *)(v104 + 200) = v122;
        v123 = *(_OWORD *)(v105 + 29);
        *(_OWORD *)(v104 + 216) = *(_OWORD *)(v105 + 27);
        *(_OWORD *)(v104 + 232) = v123;
        v124 = *(_OWORD *)(v105 + 17);
        *(_OWORD *)(v104 + 120) = *(_OWORD *)(v105 + 15);
        *(_OWORD *)(v104 + 136) = v124;
        v125 = *(_OWORD *)(v105 + 21);
        *(_OWORD *)(v104 + 152) = *(_OWORD *)(v105 + 19);
        *(_OWORD *)(v104 + 168) = v125;
        v126 = *(_OWORD *)(v105 + 9);
        *(_OWORD *)(v104 + 56) = *(_OWORD *)(v105 + 7);
        *(_OWORD *)(v104 + 72) = v126;
        v127 = *(_OWORD *)(v105 + 13);
        *(_OWORD *)(v104 + 88) = *(_OWORD *)(v105 + 11);
        *(_OWORD *)(v104 + 104) = v127;
      }
    }
    else
    {
      v128 = *((_OWORD *)v105 + 13);
      *((_OWORD *)v104 + 12) = *((_OWORD *)v105 + 12);
      *((_OWORD *)v104 + 13) = v128;
      *((_OWORD *)v104 + 14) = *((_OWORD *)v105 + 14);
      *((_QWORD *)v104 + 30) = v105[30];
      v129 = *((_OWORD *)v105 + 9);
      *((_OWORD *)v104 + 8) = *((_OWORD *)v105 + 8);
      *((_OWORD *)v104 + 9) = v129;
      v130 = *((_OWORD *)v105 + 11);
      *((_OWORD *)v104 + 10) = *((_OWORD *)v105 + 10);
      *((_OWORD *)v104 + 11) = v130;
      v131 = *((_OWORD *)v105 + 5);
      *((_OWORD *)v104 + 4) = *((_OWORD *)v105 + 4);
      *((_OWORD *)v104 + 5) = v131;
      v132 = *((_OWORD *)v105 + 7);
      *((_OWORD *)v104 + 6) = *((_OWORD *)v105 + 6);
      *((_OWORD *)v104 + 7) = v132;
      v133 = *((_OWORD *)v105 + 1);
      *(_OWORD *)v104 = *(_OWORD *)v105;
      *((_OWORD *)v104 + 1) = v133;
      v134 = *((_OWORD *)v105 + 3);
      *((_OWORD *)v104 + 2) = *((_OWORD *)v105 + 2);
      *((_OWORD *)v104 + 3) = v134;
    }
    v150 = v105[31];
    v151 = v105[32];
    v152 = v105[33];
    v153 = v105[34];
    v154 = v105[35];
    v155 = v105[36];
    v156 = v105[37];
    v157 = v105[38];
    v158 = v105[39];
    v238 = v105[40];
    v240 = v105[41];
    v242 = v105[42];
    v244 = v105[43];
    v246 = v105[44];
    v248 = v105[45];
    v159 = v105[48];
    v250 = v105[46];
    v252 = v105[47];
    v160 = v105[49];
    v161 = v105[50];
    *(_QWORD *)(v62 - 184) = v159;
    *(_QWORD *)(v62 - 176) = v160;
    v162 = v105[51];
    v163 = v105[52];
    *(_QWORD *)(v62 - 168) = v161;
    *(_QWORD *)(v62 - 160) = v162;
    v164 = v105[53];
    v165 = v105[54];
    *(_QWORD *)(v62 - 152) = v163;
    *(_QWORD *)(v62 - 144) = v164;
    *(_QWORD *)(v62 - 136) = v165;
    v234 = v164;
    v235 = v165;
    v232 = v162;
    v233 = v163;
    v230 = v160;
    v231 = v161;
    v166 = v158;
    v167 = v150;
    v168 = v151;
    v169 = v154;
    v170 = v155;
    v171 = v156;
    sub_1AD00FEAC(v150, v151, v152, v153, v154, v155, v156, v157, v158, v238, v240, v242, v244, v246, v248, v250, v252, v159, v230,
      v231,
      v232,
      v233,
      v234,
      v235);
    *((_QWORD *)v104 + 31) = v167;
    *((_QWORD *)v104 + 32) = v168;
    *((_QWORD *)v104 + 33) = v152;
    *((_QWORD *)v104 + 34) = v153;
    *((_QWORD *)v104 + 35) = v169;
    *((_QWORD *)v104 + 36) = v170;
    *((_QWORD *)v104 + 37) = v171;
    *((_QWORD *)v104 + 38) = v157;
    *((_QWORD *)v104 + 39) = v166;
    *((_QWORD *)v104 + 40) = v238;
    *((_QWORD *)v104 + 41) = v240;
    *((_QWORD *)v104 + 42) = v242;
    *((_QWORD *)v104 + 43) = v244;
    *((_QWORD *)v104 + 44) = v246;
    *((_QWORD *)v104 + 45) = v248;
    *((_QWORD *)v104 + 46) = v250;
    *((_QWORD *)v104 + 47) = v252;
    *((_QWORD *)v104 + 48) = *(_QWORD *)(v62 - 184);
    *((_QWORD *)v104 + 49) = *(_QWORD *)(v62 - 176);
    *((_QWORD *)v104 + 50) = *(_QWORD *)(v62 - 168);
    *((_QWORD *)v104 + 51) = *(_QWORD *)(v62 - 160);
    *((_QWORD *)v104 + 52) = *(_QWORD *)(v62 - 152);
    *((_QWORD *)v104 + 53) = *(_QWORD *)(v62 - 144);
    v61 = *(_QWORD **)(v62 - 128);
    *((_QWORD *)v104 + 54) = *(_QWORD *)(v62 - 136);
  }
  else
  {
    memcpy(v104, v105, 0x1B8uLL);
  }
  v172 = *(int **)(v62 - 120);
  v173 = *(_QWORD *)(v62 - 112);
  v174 = v172[12];
  v175 = (char *)v61 + v174;
  v176 = (_QWORD *)(v173 + v174);
  v177 = v176[1];
  *(_QWORD *)v175 = *v176;
  *((_QWORD *)v175 + 1) = v177;
  v178 = v176 + 2;
  v179 = v176[3];
  swift_retain();
  v180 = *(int **)(v62 - 104);
  if (v179 == 1)
  {
    *((_OWORD *)v175 + 1) = *v178;
  }
  else
  {
    *((_QWORD *)v175 + 2) = *(_QWORD *)v178;
    *((_QWORD *)v175 + 3) = v179;
    swift_bridgeObjectRetain();
  }
  v181 = v172[13];
  v182 = (char *)v61 + v181;
  v183 = v173 + v181;
  v184 = *(_QWORD *)(v183 + 8);
  if (v184 == 1)
  {
    *(_OWORD *)v182 = *(_OWORD *)v183;
  }
  else
  {
    *(_QWORD *)v182 = *(_QWORD *)v183;
    *((_QWORD *)v182 + 1) = v184;
    swift_bridgeObjectRetain();
  }
  v185 = v172[14];
  v186 = (char *)v61 + v185;
  v187 = (uint64_t *)(v173 + v185);
  v188 = v187[1];
  if (v188 >> 60 == 15)
  {
    *(_OWORD *)v186 = *(_OWORD *)v187;
  }
  else
  {
    v189 = *v187;
    sub_1AD0040A0(*v187, v187[1]);
    *(_QWORD *)v186 = v189;
    *((_QWORD *)v186 + 1) = v188;
  }
  v190 = v172[15];
  v191 = (_QWORD *)((char *)v61 + v190);
  v192 = (_QWORD *)(v173 + v190);
  v193 = v192[1];
  *v191 = *v192;
  v191[1] = v193;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v194 = v180[5];
  v195 = v180[6];
  v196 = (_QWORD *)((char *)v61 + v194);
  v197 = (_QWORD *)(v173 + v194);
  v198 = v197[1];
  *v196 = *v197;
  v196[1] = v198;
  v199 = v197[3];
  v196[2] = v197[2];
  v196[3] = v199;
  *((_BYTE *)v61 + v195) = *(_BYTE *)(v173 + v195);
  v200 = v180[8];
  *(_QWORD *)((char *)v61 + v180[7]) = *(_QWORD *)(v173 + v180[7]);
  v201 = (_QWORD *)((char *)v61 + v200);
  v202 = (_QWORD *)(v173 + v200);
  v203 = v202[1];
  *v201 = *v202;
  v201[1] = v203;
  v204 = v180[9];
  v205 = (_QWORD *)((char *)v61 + v204);
  v206 = v173 + v204;
  v207 = *(_QWORD *)(v173 + v204);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v207)
  {
    v208 = *(_QWORD *)(v206 + 8);
    v209 = *(_QWORD *)(v206 + 16);
    *v205 = v207;
    v205[1] = v208;
    v205[2] = v209;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)v205 = *(_OWORD *)v206;
    v205[2] = *(_QWORD *)(v206 + 16);
  }
  v210 = v180[10];
  v211 = v180[11];
  v212 = (_QWORD *)((char *)v61 + v210);
  v213 = (_QWORD *)(v173 + v210);
  v214 = v213[1];
  *v212 = *v213;
  v212[1] = v214;
  v212[2] = v213[2];
  v215 = (char *)v61 + v211;
  v216 = *(_QWORD *)(v173 + v211 + 8);
  *(_QWORD *)v215 = *(_QWORD *)(v173 + v211);
  *((_QWORD *)v215 + 1) = v216;
  v217 = (_OWORD *)(v173 + v211 + 16);
  v218 = *(_QWORD *)(v173 + v211 + 24);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v218 == 1)
  {
    *((_OWORD *)v215 + 1) = *v217;
  }
  else
  {
    *((_QWORD *)v215 + 2) = *(_QWORD *)v217;
    *((_QWORD *)v215 + 3) = v218;
    swift_bridgeObjectRetain();
  }
  v219 = v180[12];
  v220 = v180[13];
  v221 = (char *)v61 + v219;
  v222 = v173 + v219;
  *(_OWORD *)v221 = *(_OWORD *)v222;
  v221[16] = *(_BYTE *)(v222 + 16);
  v223 = (char *)v61 + v220;
  v224 = v173 + v220;
  v225 = *(_QWORD *)(v224 + 8);
  *(_QWORD *)v223 = *(_QWORD *)v224;
  *((_QWORD *)v223 + 1) = v225;
  *((_QWORD *)v223 + 2) = *(_QWORD *)(v224 + 16);
  *((_WORD *)v223 + 12) = *(_WORD *)(v224 + 24);
  *(_QWORD *)((char *)v61 + v180[14]) = *(_QWORD *)(v173 + v180[14]);
  swift_retain();
  swift_bridgeObjectRetain();
  return v61;
}

uint64_t assignWithCopy for BalloonPlugin(uint64_t a1, uint64_t a2, int *a3)
{
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  __int128 *v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  if (a1 != a2)
  {
    sub_1AD0256A8(a1);
    type metadata accessor for BalloonPlugin.Payload(0);
    v6 = (char *)&loc_1AD01FC5C + 4 * byte_1AD649B7A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a2 + v7 + 8);
  *v8 = *(_QWORD *)(a2 + v7);
  v8[1] = v10;
  swift_retain();
  swift_release();
  v8[2] = *(_QWORD *)(v9 + 16);
  v8[3] = *(_QWORD *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[8];
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v14 = a3[9];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (__int128 *)(a2 + v14);
  v17 = *(_QWORD *)(a2 + v14);
  if (*(_QWORD *)(a1 + v14))
  {
    if (v17)
    {
      *v15 = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v15[1] = *((_QWORD *)v16 + 1);
      v15[2] = *((_QWORD *)v16 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD00CC44(a1 + v14);
      v18 = *((_QWORD *)v16 + 2);
      *(_OWORD *)v15 = *v16;
      v15[2] = v18;
    }
  }
  else if (v17)
  {
    *v15 = v17;
    v15[1] = *((_QWORD *)v16 + 1);
    v15[2] = *((_QWORD *)v16 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v19 = *v16;
    v15[2] = *((_QWORD *)v16 + 2);
    *(_OWORD *)v15 = v19;
  }
  v20 = a3[10];
  v21 = (_QWORD *)(a1 + v20);
  v22 = a2 + v20;
  v23 = *(_QWORD *)(a2 + v20 + 8);
  *v21 = *(_QWORD *)(a2 + v20);
  v21[1] = v23;
  swift_retain();
  swift_release();
  v21[2] = *(_QWORD *)(v22 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = a3[11];
  v25 = (_QWORD *)(a1 + v24);
  v26 = a2 + v24;
  v27 = *(_QWORD *)(a2 + v24 + 8);
  *v25 = *(_QWORD *)(a2 + v24);
  v25[1] = v27;
  swift_retain();
  swift_release();
  v28 = *(_QWORD *)(v26 + 24);
  if (v25[3] != 1)
  {
    if (v28 != 1)
    {
      v25[2] = *(_QWORD *)(v26 + 16);
      v25[3] = *(_QWORD *)(v26 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_17;
    }
    sub_1AD0256E4((uint64_t)(v25 + 2));
    goto LABEL_15;
  }
  if (v28 == 1)
  {
LABEL_15:
    *((_OWORD *)v25 + 1) = *(_OWORD *)(v26 + 16);
    goto LABEL_17;
  }
  v25[2] = *(_QWORD *)(v26 + 16);
  v25[3] = *(_QWORD *)(v26 + 24);
  swift_bridgeObjectRetain();
LABEL_17:
  v29 = a3[12];
  v30 = a1 + v29;
  v31 = (__int128 *)(a2 + v29);
  v32 = *v31;
  *(_BYTE *)(v30 + 16) = *((_BYTE *)v31 + 16);
  *(_OWORD *)v30 = v32;
  v33 = a3[13];
  v34 = a1 + v33;
  v35 = a2 + v33;
  v36 = *(_QWORD *)(a2 + v33 + 8);
  *(_QWORD *)v34 = *(_QWORD *)(a2 + v33);
  *(_QWORD *)(v34 + 8) = v36;
  swift_retain();
  swift_release();
  v37 = *(_QWORD *)(v35 + 16);
  *(_WORD *)(v34 + 24) = *(_WORD *)(v35 + 24);
  *(_QWORD *)(v34 + 16) = v37;
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD0256A8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for BalloonPlugin.Payload(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD0256E4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E3198);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void initializeWithTake for BalloonPlugin()
{
  char *v0;

  type metadata accessor for BalloonPlugin.Payload(0);
  v0 = (char *)sub_1AD025784 + 4 * byte_1AD649BD6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_OWORD *sub_1AD025784(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__src, uint64_t a14, void *__dst, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  _OWORD *v34;
  _OWORD *v35;
  int *v36;
  int *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _OWORD *v51;
  _OWORD *v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  _OWORD *v60;
  _OWORD *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  _OWORD *v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  _OWORD *v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  _OWORD *v84;
  __int128 *v85;
  __int128 v86;

  *v34 = *v35;
  v37 = (int *)type metadata accessor for MessagesAppBalloon();
  v38 = v37[5];
  v39 = (char *)v34 + v38;
  v40 = (char *)v35 + v38;
  v41 = sub_1AD63B084();
  v42 = *(_QWORD *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v39, v40, v41);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v42 + 56))(v39, 0, 1, v41);
  }
  *(_OWORD *)((char *)v34 + v37[6]) = *(_OWORD *)((char *)v35 + v37[6]);
  v44 = v37[7];
  v45 = (char *)v34 + v44;
  v46 = (char *)v35 + v44;
  v47 = sub_1AD63AF28();
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v50 = v37[8];
  v51 = (_OWORD *)((char *)v34 + v50);
  v52 = (_OWORD *)((char *)v35 + v50);
  v53 = v52[5];
  v51[4] = v52[4];
  v51[5] = v53;
  *(_OWORD *)((char *)v51 + 89) = *(_OWORD *)((char *)v52 + 89);
  v54 = v52[1];
  *v51 = *v52;
  v51[1] = v54;
  v55 = v52[3];
  v51[2] = v52[2];
  v51[3] = v55;
  v56 = v37[9];
  v57 = (char *)v34 + v56;
  v58 = (char *)v35 + v56;
  *(_QWORD *)v57 = *(_QWORD *)v58;
  v57[8] = v58[8];
  *(_OWORD *)((char *)v34 + v37[10]) = *(_OWORD *)((char *)v35 + v37[10]);
  memcpy((char *)v34 + v37[11], (char *)v35 + v37[11], 0x1B8uLL);
  v59 = v37[12];
  v60 = (_OWORD *)((char *)v34 + v59);
  v61 = (_OWORD *)((char *)v35 + v59);
  v62 = v61[1];
  *v60 = *v61;
  v60[1] = v62;
  *(_OWORD *)((char *)v34 + v37[13]) = *(_OWORD *)((char *)v35 + v37[13]);
  *(_OWORD *)((char *)v34 + v37[14]) = *(_OWORD *)((char *)v35 + v37[14]);
  *(_OWORD *)((char *)v34 + v37[15]) = *(_OWORD *)((char *)v35 + v37[15]);
  swift_storeEnumTagMultiPayload();
  v63 = v36[5];
  v64 = v36[6];
  v65 = (_OWORD *)((char *)v34 + v63);
  v66 = (_OWORD *)((char *)v35 + v63);
  v67 = v66[1];
  *v65 = *v66;
  v65[1] = v67;
  *((_BYTE *)v34 + v64) = *((_BYTE *)v35 + v64);
  v68 = v36[8];
  *(_QWORD *)((char *)v34 + v36[7]) = *(_QWORD *)((char *)v35 + v36[7]);
  *(_OWORD *)((char *)v34 + v68) = *(_OWORD *)((char *)v35 + v68);
  v69 = v36[9];
  v70 = v36[10];
  v71 = (char *)v34 + v69;
  v72 = (char *)v35 + v69;
  *(_OWORD *)v71 = *(_OWORD *)v72;
  *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
  v73 = (char *)v34 + v70;
  v74 = (char *)v35 + v70;
  *(_OWORD *)v73 = *(_OWORD *)v74;
  *((_QWORD *)v73 + 2) = *((_QWORD *)v74 + 2);
  v75 = v36[11];
  v76 = v36[12];
  v77 = *(_OWORD *)((char *)v35 + v75);
  v78 = *(_OWORD *)((char *)v35 + v75 + 16);
  v79 = (_OWORD *)((char *)v34 + v75);
  *v79 = v77;
  v79[1] = v78;
  v80 = (char *)v34 + v76;
  v81 = (char *)v35 + v76;
  *(_OWORD *)v80 = *(_OWORD *)v81;
  v80[16] = v81[16];
  v82 = v36[13];
  v83 = v36[14];
  v84 = (_OWORD *)((char *)v34 + v82);
  v85 = (_OWORD *)((char *)v35 + v82);
  v86 = *v85;
  *(_OWORD *)((char *)v84 + 10) = *(__int128 *)((char *)v85 + 10);
  *v84 = v86;
  *(_QWORD *)((char *)v34 + v83) = *(_QWORD *)((char *)v35 + v83);
  return v34;
}

uint64_t assignWithTake for BalloonPlugin(uint64_t a1, uint64_t a2, int *a3)
{
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  if (a1 != a2)
  {
    sub_1AD0256A8(a1);
    type metadata accessor for BalloonPlugin.Payload(0);
    v6 = (char *)&loc_1AD028B3C + 4 * byte_1AD649C1A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  swift_release();
  v10 = *(_QWORD *)(v9 + 24);
  *(_QWORD *)(v8 + 16) = *(_QWORD *)(v9 + 16);
  *(_QWORD *)(v8 + 24) = v10;
  swift_bridgeObjectRelease();
  v11 = a3[7];
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  swift_bridgeObjectRelease();
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  v17 = a3[9];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  if (*(_QWORD *)(a1 + v17))
  {
    if (*v19)
    {
      *v18 = *v19;
      swift_bridgeObjectRelease();
      v20 = v19[2];
      v18[1] = v19[1];
      v18[2] = v20;
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1AD00CC44((uint64_t)v18);
  }
  *(_OWORD *)v18 = *(_OWORD *)v19;
  v18[2] = v19[2];
LABEL_8:
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  *(_OWORD *)(a1 + v21) = *(_OWORD *)(a2 + v21);
  swift_release();
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  swift_bridgeObjectRelease();
  v24 = a3[11];
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_OWORD *)(a1 + v24) = *(_OWORD *)(a2 + v24);
  swift_release();
  v27 = (_QWORD *)(v26 + 16);
  if (*(_QWORD *)(v25 + 24) != 1)
  {
    v28 = *(_QWORD *)(v26 + 24);
    if (v28 != 1)
    {
      *(_QWORD *)(v25 + 16) = *v27;
      *(_QWORD *)(v25 + 24) = v28;
      swift_bridgeObjectRelease();
      goto LABEL_13;
    }
    sub_1AD0256E4(v25 + 16);
  }
  *(_OWORD *)(v25 + 16) = *(_OWORD *)v27;
LABEL_13:
  v29 = a3[12];
  v30 = a3[13];
  v31 = a1 + v29;
  v32 = a2 + v29;
  *(_OWORD *)v31 = *(_OWORD *)v32;
  *(_BYTE *)(v31 + 16) = *(_BYTE *)(v32 + 16);
  v33 = a1 + v30;
  v34 = a2 + v30;
  *(_OWORD *)(a1 + v30) = *(_OWORD *)(a2 + v30);
  swift_release();
  *(_QWORD *)(v33 + 16) = *(_QWORD *)(v34 + 16);
  *(_WORD *)(v33 + 24) = *(_WORD *)(v34 + 24);
  *(_QWORD *)(a1 + a3[14]) = *(_QWORD *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BalloonPlugin()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD02BF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for BalloonPlugin.Payload(0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for BalloonPlugin()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD02C004(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for BalloonPlugin.Payload(0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1AD02C07C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BalloonPlugin.Payload(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BalloonPlugin.Payload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1AD02C19C + 4 * byte_1AD649C5E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for BalloonPlugin.Payload(uint64_t a1)
{
  uint64_t result;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unsigned int (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void (*v68)(uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  int *v72;
  char *v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  int *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  int *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  char *v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  int *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  unsigned int (*v114)(char *, uint64_t, uint64_t);
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v3 = (int *)type metadata accessor for MessagesAppBalloon();
      v4 = a1 + v3[5];
      v5 = sub_1AD63B084();
      v6 = *(_QWORD *)(v5 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
      swift_bridgeObjectRelease();
      v7 = a1 + v3[7];
      v8 = sub_1AD63AF28();
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      if (*(_QWORD *)(a1 + v3[8] + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v10 = (_QWORD *)(a1 + v3[11]);
      if (v10[34] >> 1 != 0xFFFFFFFFLL
        || (v10[38] | v10[36]) > 1
        || v10[44] & 0xFFFFFFFFFFFFFEFELL | v10[40] & 0xFFFFFFFFFFFF00FELL
        || (v10[48] | v10[46]) >= 2)
      {
        if (v10[3])
        {
          __swift_destroy_boxed_opaque_existential_1(a1 + v3[11]);
          v11 = v10[10];
          v12 = v10[12];
          v13 = v10[14];
          v14 = v10[16];
          v15 = v10[20];
          v16 = v10[22];
          v17 = v10[24];
          if (v11 >> 1 != 0xFFFFFFFF
            || (v13 | (unint64_t)v12) > 1
            || v15 & 0xFFFFFFFFFFFFFEFELL | v14 & 0xFFFFFFFFFFFF00FELL
            || (v17 | v16) >= 2)
          {
            sub_1AD00E8B0(v10[7], v10[8], v10[9], v11, v10[11], v12, v10[13], v13, v10[15], v14, v10[17], v10[18], v10[19], v15, v10[21], v16, v10[23], v17, v10[25],
              v10[26],
              v10[27],
              v10[28],
              v10[29],
              v10[30]);
          }
        }
        v18 = v10[31];
        v19 = v10[32];
        v20 = v10 + 31;
        sub_1AD00E8B0(v18, v19, v20[2], v20[3], v20[4], v20[5], v20[6], v20[7], v20[8], v20[9], v20[10], v20[11], v20[12], v20[13], v20[14], v20[15], v20[16], v20[17], v20[18],
          v20[19],
          v20[20],
          v20[21],
          v20[22],
          v20[23]);
      }
      v21 = a1 + v3[12];
      swift_release();
      if (*(_QWORD *)(v21 + 24) != 1)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v3[13] + 8) != 1)
        swift_bridgeObjectRelease();
      v22 = (uint64_t *)(a1 + v3[14]);
      v23 = v22[1];
      if (v23 >> 60 != 15)
        sub_1AD00412C(*v22, v23);
      return swift_bridgeObjectRelease();
    case 1:
      v24 = sub_1AD63B084();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(a1, v24);
      v25 = a1 + *(int *)(type metadata accessor for Handwriting() + 20);
      v26 = sub_1AD63B03C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(v25, v26);
      return swift_bridgeObjectRelease();
    case 2:
      v27 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v27 - 1) + 48))(a1, 1, v27);
      if ((_DWORD)result)
        return result;
      v28 = a1 + v27[5];
      v29 = sub_1AD63AF28();
      v30 = *(_QWORD *)(v29 - 8);
      v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v30 + 48);
      if (!v31(v28, 1, v29))
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v28, v29);
      v32 = a1 + v27[6];
      if (!v31(v32, 1, v29))
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v32, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v33 = a1 + v27[12];
      if (!v31(v33, 1, v29))
        (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v33, v29);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(a1 + v27[21] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v34 = a1 + v27[22];
      v35 = type metadata accessor for LinkPresentation.IconMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35))
      {
        v36 = v34 + *(int *)(v35 + 20);
        if (!v31(v36, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v36, v29);
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(a1 + v27[23] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v37 = a1 + v27[24];
      v38 = type metadata accessor for LinkPresentation.ARAssetMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
      {
        v39 = v37 + *(int *)(v38 + 20);
        if (!v31(v39, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v39, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(a1 + v27[25] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v40 = a1 + v27[27];
      v41 = type metadata accessor for LinkPresentation.ImageMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
      {
        v42 = v40 + *(int *)(v41 + 20);
        if (!v31(v42, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v42, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v43 = a1 + v27[30];
      v44 = type metadata accessor for LinkPresentation.Video(0);
      v45 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48);
      if (!v45(v43, 1, v44))
      {
        if (!v31(v43, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v43, v29);
        v46 = v43 + *(int *)(v44 + 20);
        if (!v31(v46, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v46, v29);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      v47 = a1 + v27[31];
      v48 = type metadata accessor for LinkPresentation.VideoMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48))
      {
        v49 = v47 + *(int *)(v48 + 20);
        if (!v31(v49, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v49, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v50 = a1 + v27[32];
      v51 = type metadata accessor for LinkPresentation.Audio(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v50, 1, v51))
      {
        if (!v31(v50, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v50, v29);
        swift_bridgeObjectRelease();
      }
      v52 = a1 + v27[33];
      v53 = type metadata accessor for LinkPresentation.AudioMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 48))(v52, 1, v53))
      {
        v54 = v52 + *(int *)(v53 + 20);
        if (!v31(v54, 1, v29))
          (*(void (**)(uint64_t, uint64_t))(v30 + 8))(v54, v29);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v55 = (_QWORD *)(a1 + v27[41]);
      v56 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[14] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v72 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
            v73 = (char *)v55 + v72[11];
            v74 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(v73, 1, v74))
            {
              v75 = &v73[*(int *)(v74 + 20)];
              if (!v31((uint64_t)v75, 1, v29))
                (*(void (**)(char *, uint64_t))(v30 + 8))(v75, v29);
              swift_bridgeObjectRelease();
            }
            v76 = (char *)v55 + v72[12];
            if (!v31((uint64_t)v76, 1, v29))
              (*(void (**)(char *, uint64_t))(v30 + 8))(v76, v29);
            swift_bridgeObjectRelease();
            if (*(_QWORD *)((char *)v55 + v72[14] + 8) != 1)
              goto LABEL_226;
            break;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v77 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
            goto LABEL_151;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v78 = type metadata accessor for LinkPresentation.MusicVideoMetadata(0);
            goto LABEL_177;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v78 = type metadata accessor for LinkPresentation.ArtistMetadata(0);
            goto LABEL_177;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v79 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
            v80 = (char *)v55 + v79[8];
            if (!v31((uint64_t)v80, 1, v29))
              (*(void (**)(char *, uint64_t))(v30 + 8))(v80, v29);
            swift_bridgeObjectRelease();
            if (*(_QWORD *)((char *)v55 + v79[10] + 16) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v81 = v79[11];
            goto LABEL_178;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v78 = type metadata accessor for LinkPresentation.RadioMetadata(0);
            goto LABEL_177;
          case 6u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[14] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            v82 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
            v83 = (char *)v55 + *(int *)(v82 + 48);
            if (!v45((uint64_t)v83, 1, v44))
            {
              if (!v31((uint64_t)v83, 1, v29))
                (*(void (**)(char *, uint64_t))(v30 + 8))(v83, v29);
              v84 = &v83[*(int *)(v44 + 20)];
              if (!v31((uint64_t)v84, 1, v29))
                (*(void (**)(char *, uint64_t))(v30 + 8))(v84, v29);
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
            }
            if (*(_QWORD *)((char *)v55 + *(int *)(v82 + 56) + 16) != 1)
              goto LABEL_226;
            break;
          case 7u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v78 = type metadata accessor for LinkPresentation.BookMetadata(0);
            goto LABEL_177;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[12] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v85 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
            v86 = (char *)v55 + *(int *)(v85 + 40);
            v87 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v87 - 8) + 48))(v86, 1, v87))
            {
              v88 = &v86[*(int *)(v87 + 20)];
              if (!v31((uint64_t)v88, 1, v29))
                (*(void (**)(char *, uint64_t))(v30 + 8))(v88, v29);
              swift_bridgeObjectRelease();
            }
            v89 = (char *)v55 + *(int *)(v85 + 44);
            if (!v31((uint64_t)v89, 1, v29))
              (*(void (**)(char *, uint64_t))(v30 + 8))(v89, v29);
            break;
          case 9u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v90 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
            v91 = (char *)v55 + v90[9];
            v92 = sub_1AD63B03C();
            v93 = *(_QWORD *)(v92 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v93 + 48))(v91, 1, v92))
              (*(void (**)(char *, uint64_t))(v93 + 8))(v91, v92);
            if (*(_QWORD *)((char *)v55 + v90[10] + 16) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v94 = (char *)v55 + v90[11];
            v95 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v95 - 8) + 48))(v94, 1, v95))
            {
              v96 = &v94[*(int *)(v95 + 20)];
              if (!v31((uint64_t)v96, 1, v29))
                (*(void (**)(char *, uint64_t))(v30 + 8))(v96, v29);
              swift_bridgeObjectRelease();
            }
            goto LABEL_186;
          case 0xAu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v77 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
LABEL_151:
            v97 = (char *)v55 + *(int *)(v77 + 36);
            v98 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 48))(v97, 1, v98))
            {
              v99 = &v97[*(int *)(v98 + 20)];
              if (!v31((uint64_t)v99, 1, v29))
                (*(void (**)(char *, uint64_t))(v30 + 8))(v99, v29);
              swift_bridgeObjectRelease();
            }
            goto LABEL_186;
          case 0xBu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[12] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v81 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
            goto LABEL_178;
          case 0xCu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v78 = type metadata accessor for LinkPresentation.TVSeasonMetadata(0);
            goto LABEL_177;
          case 0xDu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[8] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v81 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
            goto LABEL_178;
          case 0xEu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v100 = type metadata accessor for LinkPresentation.MovieMetadata(0);
            v101 = (char *)v55 + *(int *)(v100 + 36);
            v102 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 48))(v101, 1, v102))
            {
              v103 = &v101[*(int *)(v102 + 20)];
              if (!v31((uint64_t)v103, 1, v29))
                (*(void (**)(char *, uint64_t))(v30 + 8))(v103, v29);
              swift_bridgeObjectRelease();
            }
            if (*(_QWORD *)((char *)v55 + *(int *)(v100 + 40) + 16) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            goto LABEL_186;
          case 0xFu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v78 = type metadata accessor for LinkPresentation.MovieBundleMetadata(0);
LABEL_177:
            v81 = *(int *)(v78 + 36);
LABEL_178:
            v104 = (char *)v55 + v81;
            v105 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 48))(v104, 1, v105))
            {
              break;
            }
            v106 = &v104[*(int *)(v105 + 20)];
            if (!v31((uint64_t)v106, 1, v29))
              (*(void (**)(char *, uint64_t))(v30 + 8))(v106, v29);
LABEL_186:
            swift_bridgeObjectRelease();
            break;
          case 0x10u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[8] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v55[24] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            goto LABEL_186;
          case 0x11u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[8] != 1)
              goto LABEL_226;
            break;
          case 0x12u:
            swift_bridgeObjectRelease();
            if (v55[4] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v55[20] != 1)
              goto LABEL_226;
            break;
          case 0x13u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[5] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            if (v55[24] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[47] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[67] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            if (v55[88] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v55[104] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v55[120] != 1)
              goto LABEL_226;
            break;
          case 0x14u:
            swift_bridgeObjectRelease();
            if (v55[5] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v55[21] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v55[37] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[56] != 1)
              goto LABEL_226;
            break;
          case 0x15u:
            swift_bridgeObjectRelease();
            if (v55[4] != 1)
              goto LABEL_226;
            break;
          case 0x16u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[7] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v55[23] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v107 = (char *)v55 + *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
            v108 = sub_1AD63B03C();
            v109 = *(_QWORD *)(v108 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
              (*(void (**)(char *, uint64_t))(v109 + 8))(v107, v108);
            break;
          case 0x17u:
          case 0x1Bu:
          case 0x1Du:
          case 0x1Fu:
          case 0x20u:
          case 0x21u:
            goto LABEL_186;
          case 0x18u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[10] != 1)
              goto LABEL_226;
            break;
          case 0x19u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v55[6] != 1)
              goto LABEL_226;
            break;
          case 0x1Au:
            swift_bridgeObjectRelease();
            if (v55[7] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v110 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
            v111 = (char *)v55 + v110[9];
            v112 = sub_1AD63B03C();
            v113 = *(_QWORD *)(v112 - 8);
            v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
            if (!v114(v111, 1, v112))
              (*(void (**)(char *, uint64_t))(v113 + 8))(v111, v112);
            v115 = (char *)v55 + v110[10];
            if (!v114(v115, 1, v112))
              (*(void (**)(char *, uint64_t))(v113 + 8))(v115, v112);
            v116 = v110[11];
            goto LABEL_237;
          case 0x1Cu:
          case 0x22u:
LABEL_226:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 0x1Eu:
            swift_bridgeObjectRelease();
            v117 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
            v118 = (char *)v55 + *(int *)(v117 + 20);
            v112 = sub_1AD63B03C();
            v113 = *(_QWORD *)(v112 - 8);
            v114 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v113 + 48);
            if (!v114(v118, 1, v112))
              (*(void (**)(char *, uint64_t))(v113 + 8))(v118, v112);
            v116 = *(int *)(v117 + 24);
LABEL_237:
            v119 = (char *)v55 + v116;
            if (!v114(v119, 1, v112))
              (*(void (**)(char *, uint64_t))(v113 + 8))(v119, v112);
            break;
          case 0x23u:
            swift_release();
            break;
          default:
            break;
        }
      }
      v57 = a1 + v27[42];
      if (*(_QWORD *)(v57 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v57 + 32) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v58 = a1 + v27[43];
      v59 = type metadata accessor for CollaborationMetadata();
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v60 = v58 + *(int *)(v59 + 24);
      v61 = sub_1AD63B03C();
      v62 = *(_QWORD *)(v61 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
        (*(void (**)(uint64_t, uint64_t))(v62 + 8))(v60, v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v58 + *(int *)(v59 + 40) + 112))
        return result;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3:
      swift_release();
      v63 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v64 = sub_1AD63AF28();
      v65 = *(_QWORD *)(v64 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
      v66 = type metadata accessor for CombinedPluginAttachmentInfo();
      sub_1AD00412C(*(_QWORD *)(a1 + *(int *)(v66 + 20)), *(_QWORD *)(a1 + *(int *)(v66 + 20) + 8));
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1AD00412C(*(_QWORD *)(a1 + *(int *)(v66 + 32)), *(_QWORD *)(a1 + *(int *)(v66 + 32) + 8));
    case 4:
      v67 = sub_1AD63B084();
      v68 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v67 - 8) + 8);
      v68(a1, v67);
      v69 = a1 + *(int *)(type metadata accessor for DigitalTouchBalloon(0) + 20);
      type metadata accessor for DigitalTouchMessage(0);
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 3:
        case 5:
        case 6:
          goto LABEL_89;
        case 2:
          swift_release();
          swift_release();
          return swift_release();
        case 4:
          v70 = v69 + *(int *)(type metadata accessor for VideoMessage(0) + 20);
          v71 = type metadata accessor for IntroBalloon(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v70, 1, v71))
          {
            v68(v70, v67);
            swift_release();
            swift_bridgeObjectRelease();
          }
LABEL_89:
          swift_release();
          return swift_bridgeObjectRelease();
        default:
          return result;
      }
    default:
      return result;
  }
}

void initializeWithCopy for BalloonPlugin.Payload()
{
  char *v0;

  v0 = (char *)sub_1AD032D54 + 4 * byte_1AD649D14[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_1AD032D54(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__dst,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  _QWORD *v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  uint64_t v82;
  int *v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  _QWORD *v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  _QWORD *v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  unint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int *v176;
  uint64_t v177;
  char *v178;
  _QWORD *v179;
  uint64_t v180;
  _OWORD *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  char *v188;
  uint64_t *v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  _QWORD *v193;
  _QWORD *v194;
  uint64_t v195;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;

  v62 = v58[1];
  *v60 = *v58;
  v60[1] = v62;
  v63 = type metadata accessor for MessagesAppBalloon();
  *(_QWORD *)(v61 - 96) = v63;
  v64 = *(int *)(v63 + 20);
  v65 = (char *)v60 + v64;
  v66 = (char *)v58 + v64;
  v67 = sub_1AD63B084();
  v68 = *(_QWORD *)(v67 - 8);
  v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
  swift_bridgeObjectRetain();
  if (v69(v66, 1, v67))
  {
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v65, v66, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v65, v66, v67);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v65, 0, 1, v67);
  }
  v71 = *(_QWORD *)(v61 - 96);
  v72 = *(int *)(v71 + 24);
  v73 = (_QWORD *)((char *)v60 + v72);
  v74 = (_QWORD *)((char *)v58 + v72);
  v75 = v74[1];
  *v73 = *v74;
  v73[1] = v75;
  v76 = *(int *)(v71 + 28);
  v77 = (char *)v60 + v76;
  v78 = (char *)v58 + v76;
  v79 = sub_1AD63AF28();
  v80 = *(_QWORD *)(v79 - 8);
  v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
  swift_bridgeObjectRetain();
  if (v81(v78, 1, v79))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v80 + 16))(v77, v78, v79);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v80 + 56))(v77, 0, 1, v79);
  }
  v83 = *(int **)(v61 - 96);
  v84 = v83[8];
  v85 = (char *)v60 + v84;
  v86 = (char *)v58 + v84;
  v87 = *((_QWORD *)v86 + 1);
  *(_QWORD *)(v61 - 120) = v59;
  if (v87 == 1)
  {
    v88 = *((_OWORD *)v86 + 5);
    *((_OWORD *)v85 + 4) = *((_OWORD *)v86 + 4);
    *((_OWORD *)v85 + 5) = v88;
    *(_OWORD *)(v85 + 89) = *(_OWORD *)(v86 + 89);
    v89 = *((_OWORD *)v86 + 1);
    *(_OWORD *)v85 = *(_OWORD *)v86;
    *((_OWORD *)v85 + 1) = v89;
    v90 = *((_OWORD *)v86 + 3);
    *((_OWORD *)v85 + 2) = *((_OWORD *)v86 + 2);
    *((_OWORD *)v85 + 3) = v90;
  }
  else
  {
    *(_QWORD *)v85 = *(_QWORD *)v86;
    *((_QWORD *)v85 + 1) = v87;
    v91 = *((_QWORD *)v86 + 3);
    *((_QWORD *)v85 + 2) = *((_QWORD *)v86 + 2);
    *((_QWORD *)v85 + 3) = v91;
    v92 = *((_QWORD *)v86 + 5);
    *((_QWORD *)v85 + 4) = *((_QWORD *)v86 + 4);
    *((_QWORD *)v85 + 5) = v92;
    v93 = *((_QWORD *)v86 + 7);
    *((_QWORD *)v85 + 6) = *((_QWORD *)v86 + 6);
    *((_QWORD *)v85 + 7) = v93;
    v94 = *((_QWORD *)v86 + 9);
    *((_QWORD *)v85 + 8) = *((_QWORD *)v86 + 8);
    *((_QWORD *)v85 + 9) = v94;
    v95 = v58;
    v96 = *((_QWORD *)v86 + 11);
    *((_QWORD *)v85 + 10) = *((_QWORD *)v86 + 10);
    *((_QWORD *)v85 + 11) = v96;
    v85[104] = v86[104];
    *((_QWORD *)v85 + 12) = *((_QWORD *)v86 + 12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v83 = *(int **)(v61 - 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v58 = v95;
    swift_bridgeObjectRetain();
  }
  v97 = v83[9];
  v98 = (char *)v60 + v97;
  v99 = (char *)v58 + v97;
  *(_QWORD *)v98 = *(_QWORD *)v99;
  v98[8] = v99[8];
  v100 = v83[10];
  v101 = (_QWORD *)((char *)v60 + v100);
  v102 = (_QWORD *)((char *)v58 + v100);
  v103 = v102[1];
  *v101 = *v102;
  v101[1] = v103;
  v104 = v83[11];
  v105 = (char *)v60 + v104;
  *(_QWORD *)(v61 - 104) = v58;
  v106 = (_QWORD *)((char *)v58 + v104);
  v107 = *(_QWORD *)((char *)v58 + v104 + 272);
  v108 = *(_QWORD *)((char *)v58 + v104 + 288);
  v109 = *(_QWORD *)((char *)v58 + v104 + 304);
  v110 = v106[40];
  v111 = v106[44];
  v112 = v106[46];
  v113 = v106[48];
  swift_bridgeObjectRetain();
  if (v107 >> 1 != 0xFFFFFFFF
    || (v109 | v108) > 1
    || v111 & 0xFFFFFFFFFFFFFEFELL | v110 & 0xFFFFFFFFFFFF00FELL
    || (v113 | v112) >= 2)
  {
    v114 = v106[3];
    *(_QWORD *)(v61 - 112) = v60;
    if (v114)
    {
      v115 = v106[4];
      *((_QWORD *)v105 + 3) = v114;
      *((_QWORD *)v105 + 4) = v115;
      (**(void (***)(void *, const void *))(v114 - 8))(v105, v106);
      *((_QWORD *)v105 + 5) = v106[5];
      v105[48] = *((_BYTE *)v106 + 48);
      v116 = v106[10];
      v117 = v106[12];
      v118 = v106[14];
      v119 = v106[16];
      v120 = v106[20];
      v121 = v106[22];
      v122 = v106[24];
      if (v116 >> 1 != 0xFFFFFFFF
        || (v118 | (unint64_t)v117) > 1
        || v120 & 0xFFFFFFFFFFFFFEFELL | v119 & 0xFFFFFFFFFFFF00FELL
        || (v122 | v121) >= 2)
      {
        v136 = v106[7];
        v137 = v106[8];
        v138 = v106[9];
        v139 = v106[11];
        v140 = v106[13];
        v206 = v106[15];
        v213 = v106[17];
        v217 = v106[18];
        v219 = v106[19];
        v141 = v106[21];
        v142 = v106[23];
        *(_QWORD *)(v61 - 184) = v141;
        *(_QWORD *)(v61 - 176) = v142;
        v143 = v106[25];
        v144 = v106[26];
        *(_QWORD *)(v61 - 168) = v143;
        *(_QWORD *)(v61 - 160) = v144;
        v145 = v106[27];
        v146 = v106[28];
        *(_QWORD *)(v61 - 152) = v145;
        *(_QWORD *)(v61 - 144) = v146;
        v147 = v106[29];
        v148 = v106[30];
        *(_QWORD *)(v61 - 136) = v147;
        *(_QWORD *)(v61 - 128) = v148;
        v199 = v121;
        v198 = v120;
        v197 = v119;
        v207 = v119;
        v209 = v120;
        v149 = v136;
        v215 = v121;
        v150 = v139;
        v211 = v122;
        v151 = v140;
        sub_1AD00FEAC(v136, v137, v138, v116, v139, v117, v140, v118, v206, v197, v213, v217, v219, v198, v141, v199, v142, v122, v143,
          v144,
          v145,
          v146,
          v147,
          v148);
        *((_QWORD *)v105 + 7) = v149;
        *((_QWORD *)v105 + 8) = v137;
        *((_QWORD *)v105 + 9) = v138;
        *((_QWORD *)v105 + 10) = v116;
        *((_QWORD *)v105 + 11) = v150;
        *((_QWORD *)v105 + 12) = v117;
        *((_QWORD *)v105 + 13) = v151;
        *((_QWORD *)v105 + 14) = v118;
        *((_QWORD *)v105 + 15) = v206;
        *((_QWORD *)v105 + 16) = v207;
        *((_QWORD *)v105 + 17) = v213;
        *((_QWORD *)v105 + 18) = v217;
        *((_QWORD *)v105 + 19) = v219;
        *((_QWORD *)v105 + 20) = v209;
        *((_QWORD *)v105 + 21) = *(_QWORD *)(v61 - 184);
        *((_QWORD *)v105 + 22) = v215;
        *((_QWORD *)v105 + 23) = *(_QWORD *)(v61 - 176);
        *((_QWORD *)v105 + 24) = v211;
        *((_QWORD *)v105 + 25) = *(_QWORD *)(v61 - 168);
        *((_QWORD *)v105 + 26) = *(_QWORD *)(v61 - 160);
        *((_QWORD *)v105 + 27) = *(_QWORD *)(v61 - 152);
        *((_QWORD *)v105 + 28) = *(_QWORD *)(v61 - 144);
        *((_QWORD *)v105 + 29) = *(_QWORD *)(v61 - 136);
        *((_QWORD *)v105 + 30) = *(_QWORD *)(v61 - 128);
      }
      else
      {
        v123 = *(_OWORD *)(v106 + 25);
        *(_OWORD *)(v105 + 184) = *(_OWORD *)(v106 + 23);
        *(_OWORD *)(v105 + 200) = v123;
        v124 = *(_OWORD *)(v106 + 29);
        *(_OWORD *)(v105 + 216) = *(_OWORD *)(v106 + 27);
        *(_OWORD *)(v105 + 232) = v124;
        v125 = *(_OWORD *)(v106 + 17);
        *(_OWORD *)(v105 + 120) = *(_OWORD *)(v106 + 15);
        *(_OWORD *)(v105 + 136) = v125;
        v126 = *(_OWORD *)(v106 + 21);
        *(_OWORD *)(v105 + 152) = *(_OWORD *)(v106 + 19);
        *(_OWORD *)(v105 + 168) = v126;
        v127 = *(_OWORD *)(v106 + 9);
        *(_OWORD *)(v105 + 56) = *(_OWORD *)(v106 + 7);
        *(_OWORD *)(v105 + 72) = v127;
        v128 = *(_OWORD *)(v106 + 13);
        *(_OWORD *)(v105 + 88) = *(_OWORD *)(v106 + 11);
        *(_OWORD *)(v105 + 104) = v128;
      }
    }
    else
    {
      v129 = *((_OWORD *)v106 + 13);
      *((_OWORD *)v105 + 12) = *((_OWORD *)v106 + 12);
      *((_OWORD *)v105 + 13) = v129;
      *((_OWORD *)v105 + 14) = *((_OWORD *)v106 + 14);
      *((_QWORD *)v105 + 30) = v106[30];
      v130 = *((_OWORD *)v106 + 9);
      *((_OWORD *)v105 + 8) = *((_OWORD *)v106 + 8);
      *((_OWORD *)v105 + 9) = v130;
      v131 = *((_OWORD *)v106 + 11);
      *((_OWORD *)v105 + 10) = *((_OWORD *)v106 + 10);
      *((_OWORD *)v105 + 11) = v131;
      v132 = *((_OWORD *)v106 + 5);
      *((_OWORD *)v105 + 4) = *((_OWORD *)v106 + 4);
      *((_OWORD *)v105 + 5) = v132;
      v133 = *((_OWORD *)v106 + 7);
      *((_OWORD *)v105 + 6) = *((_OWORD *)v106 + 6);
      *((_OWORD *)v105 + 7) = v133;
      v134 = *((_OWORD *)v106 + 1);
      *(_OWORD *)v105 = *(_OWORD *)v106;
      *((_OWORD *)v105 + 1) = v134;
      v135 = *((_OWORD *)v106 + 3);
      *((_OWORD *)v105 + 2) = *((_OWORD *)v106 + 2);
      *((_OWORD *)v105 + 3) = v135;
    }
    v152 = v106[31];
    v153 = v106[32];
    v154 = v106[33];
    v155 = v106[34];
    v157 = v106[35];
    v156 = v106[36];
    v158 = v106[37];
    v159 = v106[38];
    v160 = v106[39];
    v208 = v106[40];
    v210 = v106[41];
    v212 = v106[42];
    v214 = v106[43];
    v216 = v106[44];
    v218 = v106[45];
    v220 = v106[46];
    v161 = v106[47];
    v162 = v106[48];
    *(_QWORD *)(v61 - 184) = v161;
    *(_QWORD *)(v61 - 176) = v162;
    v163 = v106[49];
    v164 = v106[50];
    *(_QWORD *)(v61 - 168) = v163;
    *(_QWORD *)(v61 - 160) = v164;
    v165 = v106[51];
    v166 = v106[52];
    *(_QWORD *)(v61 - 152) = v165;
    *(_QWORD *)(v61 - 144) = v166;
    v168 = v106[53];
    v167 = v106[54];
    *(_QWORD *)(v61 - 136) = v168;
    *(_QWORD *)(v61 - 128) = v167;
    v204 = v168;
    v205 = v167;
    v202 = v165;
    v203 = v166;
    v200 = v163;
    v201 = v164;
    v169 = v160;
    v170 = v152;
    v171 = v153;
    v172 = v156;
    v173 = v158;
    v174 = v159;
    sub_1AD00FEAC(v152, v153, v154, v155, v157, v156, v158, v159, v160, v208, v210, v212, v214, v216, v218, v220, v161, v162, v200,
      v201,
      v202,
      v203,
      v204,
      v205);
    *((_QWORD *)v105 + 31) = v170;
    *((_QWORD *)v105 + 32) = v171;
    *((_QWORD *)v105 + 33) = v154;
    *((_QWORD *)v105 + 34) = v155;
    *((_QWORD *)v105 + 35) = v157;
    *((_QWORD *)v105 + 36) = v172;
    *((_QWORD *)v105 + 37) = v173;
    *((_QWORD *)v105 + 38) = v174;
    *((_QWORD *)v105 + 39) = v169;
    *((_QWORD *)v105 + 40) = v208;
    *((_QWORD *)v105 + 41) = v210;
    *((_QWORD *)v105 + 42) = v212;
    *((_QWORD *)v105 + 43) = v214;
    *((_QWORD *)v105 + 44) = v216;
    *((_QWORD *)v105 + 45) = v218;
    *((_QWORD *)v105 + 46) = v220;
    *((_QWORD *)v105 + 47) = *(_QWORD *)(v61 - 184);
    *((_QWORD *)v105 + 48) = *(_QWORD *)(v61 - 176);
    *((_QWORD *)v105 + 49) = *(_QWORD *)(v61 - 168);
    *((_QWORD *)v105 + 50) = *(_QWORD *)(v61 - 160);
    *((_QWORD *)v105 + 51) = *(_QWORD *)(v61 - 152);
    *((_QWORD *)v105 + 52) = *(_QWORD *)(v61 - 144);
    *((_QWORD *)v105 + 53) = *(_QWORD *)(v61 - 136);
    *((_QWORD *)v105 + 54) = *(_QWORD *)(v61 - 128);
    v60 = *(_QWORD **)(v61 - 112);
  }
  else
  {
    memcpy(v105, v106, 0x1B8uLL);
  }
  v175 = *(_QWORD *)(v61 - 104);
  v176 = *(int **)(v61 - 96);
  v177 = v176[12];
  v178 = (char *)v60 + v177;
  v179 = (_QWORD *)(v175 + v177);
  v180 = v179[1];
  *(_QWORD *)v178 = *v179;
  *((_QWORD *)v178 + 1) = v180;
  v181 = v179 + 2;
  v182 = v179[3];
  swift_retain();
  if (v182 == 1)
  {
    *((_OWORD *)v178 + 1) = *v181;
  }
  else
  {
    *((_QWORD *)v178 + 2) = *(_QWORD *)v181;
    *((_QWORD *)v178 + 3) = v182;
    swift_bridgeObjectRetain();
  }
  v183 = v176[13];
  v184 = (char *)v60 + v183;
  v185 = v175 + v183;
  v186 = *(_QWORD *)(v185 + 8);
  if (v186 == 1)
  {
    *(_OWORD *)v184 = *(_OWORD *)v185;
  }
  else
  {
    *(_QWORD *)v184 = *(_QWORD *)v185;
    *((_QWORD *)v184 + 1) = v186;
    swift_bridgeObjectRetain();
  }
  v187 = v176[14];
  v188 = (char *)v60 + v187;
  v189 = (uint64_t *)(v175 + v187);
  v190 = v189[1];
  if (v190 >> 60 == 15)
  {
    *(_OWORD *)v188 = *(_OWORD *)v189;
  }
  else
  {
    v191 = *v189;
    sub_1AD0040A0(*v189, v189[1]);
    *(_QWORD *)v188 = v191;
    *((_QWORD *)v188 + 1) = v190;
  }
  v192 = v176[15];
  v193 = (_QWORD *)((char *)v60 + v192);
  v194 = (_QWORD *)(v175 + v192);
  v195 = v194[1];
  *v193 = *v194;
  v193[1] = v195;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v60;
}

uint64_t assignWithCopy for BalloonPlugin.Payload(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1AD0256A8(result);
    v2 = (char *)&loc_1AD038018 + 4 * byte_1AD649D70[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for BalloonPlugin.Payload()
{
  char *v0;

  v0 = (char *)sub_1AD03DA38 + 4 * byte_1AD649DCC[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_OWORD *sub_1AD03DA38(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, void *__dst, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  _OWORD *v32;
  _OWORD *v33;
  int *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _OWORD *v48;
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _OWORD *v57;
  _OWORD *v58;
  __int128 v59;

  *v33 = *v32;
  v34 = (int *)type metadata accessor for MessagesAppBalloon();
  v35 = v34[5];
  v36 = (char *)v33 + v35;
  v37 = (char *)v32 + v35;
  v38 = sub_1AD63B084();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v36, v37, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(v36, 0, 1, v38);
  }
  *(_OWORD *)((char *)v33 + v34[6]) = *(_OWORD *)((char *)v32 + v34[6]);
  v41 = v34[7];
  v42 = (char *)v33 + v41;
  v43 = (char *)v32 + v41;
  v44 = sub_1AD63AF28();
  v45 = *(_QWORD *)(v44 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
  {
    v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v46 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v42, v43, v44);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
  }
  v47 = v34[8];
  v48 = (_OWORD *)((char *)v33 + v47);
  v49 = (_OWORD *)((char *)v32 + v47);
  v50 = v49[5];
  v48[4] = v49[4];
  v48[5] = v50;
  *(_OWORD *)((char *)v48 + 89) = *(_OWORD *)((char *)v49 + 89);
  v51 = v49[1];
  *v48 = *v49;
  v48[1] = v51;
  v52 = v49[3];
  v48[2] = v49[2];
  v48[3] = v52;
  v53 = v34[9];
  v54 = (char *)v33 + v53;
  v55 = (char *)v32 + v53;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  v54[8] = v55[8];
  *(_OWORD *)((char *)v33 + v34[10]) = *(_OWORD *)((char *)v32 + v34[10]);
  memcpy((char *)v33 + v34[11], (char *)v32 + v34[11], 0x1B8uLL);
  v56 = v34[12];
  v57 = (_OWORD *)((char *)v33 + v56);
  v58 = (_OWORD *)((char *)v32 + v56);
  v59 = v58[1];
  *v57 = *v58;
  v57[1] = v59;
  *(_OWORD *)((char *)v33 + v34[13]) = *(_OWORD *)((char *)v32 + v34[13]);
  *(_OWORD *)((char *)v33 + v34[14]) = *(_OWORD *)((char *)v32 + v34[14]);
  *(_OWORD *)((char *)v33 + v34[15]) = *(_OWORD *)((char *)v32 + v34[15]);
  swift_storeEnumTagMultiPayload();
  return v33;
}

uint64_t assignWithTake for BalloonPlugin.Payload(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1AD0256A8(result);
    v2 = (char *)&loc_1AD040C94 + 4 * byte_1AD649E10[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BalloonPlugin.Payload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for BalloonPlugin.Payload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_1AD043EEC()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1AD043EFC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  result = type metadata accessor for MessagesAppBalloon();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Handwriting();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for LinkPresentation.MessagesPayload(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for CombinedPluginAttachmentInfo();
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for DigitalTouchBalloon(319);
          if (v5 <= 0x3F)
          {
            swift_initEnumMetadataMultiPayload();
            return 0;
          }
        }
      }
    }
  }
  return result;
}

BOOL sub_1AD043FD0(uint64_t a1, uint64_t a2)
{
  return a1 >= a2;
}

uint64_t sub_1AD043FDC(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v12 = MEMORY[0x1E0DEE9D8];
    sub_1AD1474DC(0, v1, 0);
    v2 = v12;
    sub_1AD0442F4();
    v4 = a1 + 40;
    do
    {
      v5 = sub_1AD63BC84();
      v7 = v6;
      v9 = *(_QWORD *)(v12 + 16);
      v8 = *(_QWORD *)(v12 + 24);
      if (v9 >= v8 >> 1)
        sub_1AD1474DC(v8 > 1, v9 + 1, 1);
      v4 += 16;
      *(_QWORD *)(v12 + 16) = v9 + 1;
      v10 = v12 + 16 * v9;
      *(_QWORD *)(v10 + 32) = v5;
      *(_QWORD *)(v10 + 40) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_1AD0440D4(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (!v1)
    return MEMORY[0x1E0DEE9D8];
  v29 = MEMORY[0x1E0DEE9D8];
  sub_1AD1474F8(0, v1, 0);
  v4 = v29;
  v24 = a1 + 32;
  sub_1AD0442F4();
  v5 = 0;
  v23 = v1;
  do
  {
    v28 = v5;
    v6 = *(_QWORD *)(v24 + 24 * v5 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = sub_1AD63BC84();
    v8 = v7;
    v27 = v9;
    v10 = *(_QWORD *)(v6 + 16);
    if (v10)
    {
      v25 = v7;
      v26 = v4;
      sub_1AD1474DC(0, v10, 0);
      v11 = v2;
      v12 = v6 + 40;
      do
      {
        v13 = sub_1AD63BC84();
        v15 = v14;
        v17 = *(_QWORD *)(v11 + 16);
        v16 = *(_QWORD *)(v11 + 24);
        if (v17 >= v16 >> 1)
          sub_1AD1474DC(v16 > 1, v17 + 1, 1);
        v12 += 16;
        *(_QWORD *)(v11 + 16) = v17 + 1;
        v18 = v11 + 16 * v17;
        *(_QWORD *)(v18 + 32) = v13;
        *(_QWORD *)(v18 + 40) = v15;
        --v10;
      }
      while (v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v2 = MEMORY[0x1E0DEE9D8];
      v1 = v23;
      v8 = v25;
      v4 = v26;
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = v2;
    }
    v20 = *(_QWORD *)(v4 + 16);
    v19 = *(_QWORD *)(v4 + 24);
    if (v20 >= v19 >> 1)
      sub_1AD1474F8(v19 > 1, v20 + 1, 1);
    v5 = v28 + 1;
    *(_QWORD *)(v4 + 16) = v20 + 1;
    v21 = (_QWORD *)(v4 + 24 * v20);
    v21[4] = v8;
    v21[5] = v27;
    v21[6] = v11;
  }
  while (v28 + 1 != v1);
  return v4;
}

unint64_t sub_1AD0442F4()
{
  unint64_t result;

  result = qword_1ED2E3190;
  if (!qword_1ED2E3190)
  {
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0DEA9B8], MEMORY[0x1E0DEA968]);
    atomic_store(result, (unint64_t *)&qword_1ED2E3190);
  }
  return result;
}

unint64_t sub_1AD044338@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 6;
  if (result < 6)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD04434C()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1AD044354@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD044338(*a1, a2);
}

uint64_t sub_1AD04435C()
{
  sub_1AD045550();
  return sub_1AD63B930();
}

uint64_t sub_1AD0443B8()
{
  sub_1AD045550();
  return sub_1AD63B8D0();
}

uint64_t sub_1AD044404()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1AD04440C(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD044414())()
{
  return nullsub_1;
}

uint64_t sub_1AD044424()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD04449C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 32);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 24);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD044504(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD044524(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 32);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 24);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD0445AC;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD0445AC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD044610@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[2];
  v4 = v1[3];
  v3 = v1[4];
  *a1 = v1[1];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD044640(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[1] = v4;
  a2[2] = v3;
  a2[3] = v6;
  a2[4] = v5;
  return result;
}

__n128 sub_1AD0446AC(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  return result;
}

void (*sub_1AD0446FC(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[2];
  v6 = v1[3];
  v5 = v1[4];
  *v3 = v1[1];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD044760;
}

void sub_1AD044760(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[1] = v6;
    v4[2] = v5;
    v4[3] = v7;
    v4[4] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[1] = v6;
    v4[2] = v5;
    v4[3] = v7;
    v4[4] = v3;
  }
  free(v2);
}

uint64_t sub_1AD044808()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 64))
  {
    v1 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD044880@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 64);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 56);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD0448E8(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD044908(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 64);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 56);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD044990;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD044990(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD0449F4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[6];
  v4 = v1[7];
  v3 = v1[8];
  *a1 = v1[5];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD044A24(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[5] = v4;
  a2[6] = v3;
  a2[7] = v6;
  a2[8] = v5;
  return result;
}

__n128 sub_1AD044A90(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 40) = *a1;
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v4;
  return result;
}

void (*sub_1AD044AE0(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[6];
  v6 = v1[7];
  v5 = v1[8];
  *v3 = v1[5];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD044B44;
}

void sub_1AD044B44(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[5] = v6;
    v4[6] = v5;
    v4[7] = v7;
    v4[8] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[5] = v6;
    v4[6] = v5;
    v4[7] = v7;
    v4[8] = v3;
  }
  free(v2);
}

void sub_1AD044BEC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 72);
}

_BYTE *sub_1AD044BF8(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 72) = *result;
  return result;
}

uint64_t (*sub_1AD044C04())()
{
  return nullsub_1;
}

uint64_t sub_1AD044C14()
{
  uint64_t v0;

  sub_1AD044D2C();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD044CA0()
{
  uint64_t v0;

  sub_1AD044D2C();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD044D2C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  ValueMetadata *v9;
  char v10;
  char v11;
  char v12;
  uint64_t result;
  _OWORD v14[2];
  __int128 v15;
  ValueMetadata *v16;

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v5 = v0[7];
  v4 = v0[8];
  v6 = *((_BYTE *)v0 + 72);
  v16 = (ValueMetadata *)MEMORY[0x1E0DEBB98];
  *(_QWORD *)&v15 = v1;
  sub_1AD002F7C(&v15, v14);
  v7 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v14, 118, 0xE100000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_4;
  v9 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  v16 = (ValueMetadata *)MEMORY[0x1E0DEA968];
  *(_QWORD *)&v15 = v3;
  *((_QWORD *)&v15 + 1) = v2;
  sub_1AD002F7C(&v15, v14);
  swift_bridgeObjectRetain();
  v10 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v14, 115, 0xE100000000000000, v10);
  swift_bridgeObjectRelease();
  if (v4)
  {
    v16 = v9;
    *(_QWORD *)&v15 = v5;
    *((_QWORD *)&v15 + 1) = v4;
    sub_1AD002F7C(&v15, v14);
    swift_bridgeObjectRetain();
    v11 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v14, 112, 0xE100000000000000, v11);
    swift_bridgeObjectRelease();
    v16 = &type metadata for IDSSessionReinitiate.IDSSessionReinitiateSubcommand;
    LOBYTE(v15) = v6;
    sub_1AD002F7C(&v15, v14);
    v12 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v14, 26994, 0xE200000000000000, v12);
    swift_bridgeObjectRelease();
    return v7;
  }
  else
  {
LABEL_4:
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

unint64_t sub_1AD044F00()
{
  unint64_t result;

  result = qword_1EECD1CE0;
  if (!qword_1EECD1CE0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64A03C, &type metadata for IDSSessionReinitiate.IDSSessionReinitiateSubcommand);
    atomic_store(result, (unint64_t *)&qword_1EECD1CE0);
  }
  return result;
}

uint64_t sub_1AD044F44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD044F58, (uint64_t (*)(void))sub_1AD044F9C);
}

unint64_t sub_1AD044F58()
{
  unint64_t result;

  result = qword_1EECD1CE8;
  if (!qword_1EECD1CE8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64A108, &type metadata for IDSSessionReinitiate.IDSSessionReinitiateSubcommand);
    atomic_store(result, (unint64_t *)&qword_1EECD1CE8);
  }
  return result;
}

unint64_t sub_1AD044F9C()
{
  unint64_t result;

  result = qword_1EECD1CF0;
  if (!qword_1EECD1CF0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64A130, &type metadata for IDSSessionReinitiate.IDSSessionReinitiateSubcommand);
    atomic_store(result, (unint64_t *)&qword_1EECD1CF0);
  }
  return result;
}

uint64_t sub_1AD044FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD044FF4, (uint64_t (*)(void))sub_1AD045038);
}

unint64_t sub_1AD044FF4()
{
  unint64_t result;

  result = qword_1EECD1CF8;
  if (!qword_1EECD1CF8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD651178, &type metadata for IDSSessionReinitiate);
    atomic_store(result, (unint64_t *)&qword_1EECD1CF8);
  }
  return result;
}

unint64_t sub_1AD045038()
{
  unint64_t result;

  result = qword_1EECD1D00;
  if (!qword_1EECD1D00)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6511A0, &type metadata for IDSSessionReinitiate);
    atomic_store(result, (unint64_t *)&qword_1EECD1D00);
  }
  return result;
}

uint64_t sub_1AD045080(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD0450BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v5 = a1[3];
  v4 = a1[4];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD0450F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD045130@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[5];
  v3 = a1[6];
  v5 = a1[7];
  v4 = a1[8];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t destroy for IDSSessionReinitiate()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for IDSSessionReinitiate(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for IDSSessionReinitiate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for IDSSessionReinitiate(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v4;
  swift_release();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSSessionReinitiate(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 73))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSSessionReinitiate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 72) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 73) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 73) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSSessionReinitiate()
{
  return &type metadata for IDSSessionReinitiate;
}

uint64_t getEnumTagSinglePayload for IDSSessionReinitiate.IDSSessionReinitiateSubcommand(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSSessionReinitiate.IDSSessionReinitiateSubcommand(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1AD0454D0 + 4 * byte_1AD64A035[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1AD045504 + 4 * byte_1AD64A030[v4]))();
}

uint64_t sub_1AD045504(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD04550C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD045514);
  return result;
}

uint64_t sub_1AD045520(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD045528);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1AD04552C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD045534(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IDSSessionReinitiate.IDSSessionReinitiateSubcommand()
{
  return &type metadata for IDSSessionReinitiate.IDSSessionReinitiateSubcommand;
}

unint64_t sub_1AD045550()
{
  unint64_t result;

  result = qword_1EECD1D08;
  if (!qword_1EECD1D08)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD64A0A4, &type metadata for IDSSessionReinitiate.IDSSessionReinitiateSubcommand);
    atomic_store(result, (unint64_t *)&qword_1EECD1D08);
  }
  return result;
}

uint64_t sub_1AD045594()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v0 = sub_1AD0455D8();
  v2 = v1;
  v3 = sub_1AD63AFA0();
  sub_1AD00412C(v0, v2);
  return v3;
}

uint64_t sub_1AD0455D8()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v24;
  char v25;
  int *v26;
  char *v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  _QWORD *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  uint64_t *v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char v87;
  uint64_t *v88;
  uint64_t v89;
  char v90;
  uint64_t v91;
  void *v92;
  uint64_t v93;
  void *v94;
  id v95;
  id v96;
  uint64_t v97;
  void *v98;
  void *v99;
  uint64_t v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t result;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char v110;
  uint64_t v111;
  _QWORD *v112;
  int *v113;
  uint64_t v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  _OWORD v131[15];
  uint64_t v132;
  __int128 v133;
  uint64_t v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  char v142;
  unint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;

  v1 = v0;
  v150 = *MEMORY[0x1E0C80C00];
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v3 = MEMORY[0x1E0C80A78](v2);
  v111 = (uint64_t)&v111 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v112 = (uint64_t *)((char *)&v111 - v5);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v111 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v111 - v10;
  v12 = MEMORY[0x1E0DEE9E0];
  v114 = MEMORY[0x1E0DEE9E0];
  v13 = type metadata accessor for MessagesAppBalloon();
  v14 = (_QWORD *)((char *)v1 + *(int *)(v13 + 24));
  v15 = v14[1];
  if (v15)
  {
    v16 = *v14;
    *((_QWORD *)&v136 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v135 = v16;
    *((_QWORD *)&v135 + 1) = v15;
    sub_1AD002F7C(&v135, v131);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v115 = v12;
    sub_1AD43F448(v131, 0x74786574646CLL, 0xE600000000000000, isUniquelyReferenced_nonNull_native);
    v114 = v115;
    swift_bridgeObjectRelease();
  }
  v113 = (int *)v13;
  v18 = (uint64_t)v1 + *(int *)(v13 + 20);
  sub_1ACFF64C0(v18, (uint64_t)v11, &qword_1ED2E7140);
  v19 = sub_1AD63B084();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v11, 1, v19);
  sub_1AD009758((uint64_t)v11, &qword_1ED2E7140);
  if (v22 != 1)
  {
    sub_1ACFF64C0(v18, (uint64_t)v9, &qword_1ED2E7140);
    if (v21(v9, 1, v19) == 1)
    {
      sub_1AD009758((uint64_t)v9, &qword_1ED2E7140);
      sub_1AD43D86C(0xD000000000000011, 0x80000001AD69F360, &v135);
      sub_1AD009758((uint64_t)&v135, &qword_1EECDC5F0);
    }
    else
    {
      *((_QWORD *)&v136 + 1) = v19;
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v135);
      (*(void (**)(uint64_t *, char *, uint64_t))(v20 + 32))(boxed_opaque_existential_0, v9, v19);
      sub_1AD002F7C(&v135, v131);
      v24 = v114;
      v25 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v115 = v24;
      sub_1AD43F448(v131, 0xD000000000000011, 0x80000001AD69F360, v25);
      v114 = v115;
      swift_bridgeObjectRelease();
    }
  }
  v26 = v113;
  v27 = (char *)v1 + v113[8];
  v28 = *((_QWORD *)v27 + 1);
  if (v28 != 1)
  {
    v29 = v27[104];
    v30 = *((_QWORD *)v27 + 12);
    *(_QWORD *)&v135 = *(_QWORD *)v27;
    *((_QWORD *)&v135 + 1) = v28;
    v31 = *((_OWORD *)v27 + 2);
    v136 = *((_OWORD *)v27 + 1);
    v137 = v31;
    v32 = *((_OWORD *)v27 + 4);
    v138 = *((_OWORD *)v27 + 3);
    v139 = v32;
    v140 = *((_OWORD *)v27 + 5);
    v141 = v30;
    v142 = v29 & 1;
    v33 = sub_1AD046338();
    *((_QWORD *)&v136 + 1) = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1D18);
    *(_QWORD *)&v135 = v33;
    sub_1AD002F7C(&v135, v131);
    v34 = v114;
    v35 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v115 = v34;
    sub_1AD43F448(v131, 0x6F666E4972657375, 0xE800000000000000, v35);
    v114 = v115;
    swift_bridgeObjectRelease();
  }
  v36 = (char *)v1 + v26[12];
  v37 = *((_QWORD *)v36 + 3);
  if (v37)
  {
    if (v37 == 1)
      goto LABEL_52;
    v38 = *((_QWORD *)v36 + 2);
    *((_QWORD *)&v136 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v135 = v38;
    *((_QWORD *)&v135 + 1) = v37;
    sub_1AD002F7C(&v135, v131);
    swift_bridgeObjectRetain();
    v39 = v114;
    v40 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v115 = v39;
    sub_1AD43F448(v131, 0x6C4374756F79616CLL, 0xEB00000000737361, v40);
    v114 = v115;
    swift_bridgeObjectRelease();
  }
  v41 = (uint64_t)v1 + v26[7];
  v42 = (uint64_t)v112;
  sub_1ACFF64C0(v41, (uint64_t)v112, &qword_1ED2E1A40);
  v43 = sub_1AD63AF28();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v42, 1, v43);
  sub_1AD009758(v42, &qword_1ED2E1A40);
  if (v46 != 1)
  {
    v47 = v111;
    sub_1ACFF64C0(v41, v111, &qword_1ED2E1A40);
    if (v45(v47, 1, v43) != 1)
    {
      *((_QWORD *)&v136 + 1) = v43;
      v88 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v135);
      (*(void (**)(uint64_t *, uint64_t, uint64_t))(v44 + 32))(v88, v47, v43);
      sub_1AD002F7C(&v135, v131);
      v89 = v114;
      v90 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v115 = v89;
      sub_1AD43F448(v131, 5001813, 0xE300000000000000, v90);
      v114 = v115;
      swift_bridgeObjectRelease();
      v48 = v1[1];
      if (!v48)
        goto LABEL_17;
      goto LABEL_16;
    }
    sub_1AD009758(v47, &qword_1ED2E1A40);
    sub_1AD43D86C(5001813, 0xE300000000000000, &v135);
    sub_1AD009758((uint64_t)&v135, &qword_1EECDC5F0);
  }
  v48 = v1[1];
  if (v48)
  {
LABEL_16:
    v49 = *v1;
    *((_QWORD *)&v136 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v135 = v49;
    *((_QWORD *)&v135 + 1) = v48;
    sub_1AD002F7C(&v135, v131);
    swift_bridgeObjectRetain();
    v50 = v114;
    v51 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v115 = v50;
    sub_1AD43F448(v131, 0xD000000000000012, 0x80000001AD69F340, v51);
    v114 = v115;
    swift_bridgeObjectRelease();
  }
LABEL_17:
  v52 = v26[11];
  v112 = v1;
  v53 = (uint64_t)v1 + v52;
  sub_1ACFF64C0((uint64_t)v1 + v52, (uint64_t)&v135, &qword_1EECD1D10);
  v54 = v143;
  v55 = v144;
  v56 = v145;
  v57 = v146;
  v58 = v147;
  v59 = v148;
  v60 = v149;
  sub_1AD009758((uint64_t)&v135, &qword_1EECD1D10);
  if (v54 >> 1 == 0xFFFFFFFF
    && (v56 | v55) <= 1
    && !(v58 & 0xFFFFFFFFFFFFFEFELL | v57 & 0xFFFFFFFFFFFF00FELL)
    && (v60 | v59) < 2)
  {
    goto LABEL_28;
  }
  sub_1ACFF64C0(v53, (uint64_t)&v135, &qword_1EECD1D10);
  if (v143 >> 1 != 0xFFFFFFFF
    || (v145 | v144) > 1
    || v147 & 0xFFFFFFFFFFFFFEFELL | v146 & 0xFFFFFFFFFFFF00FELL
    || (v149 | v148) >= 2)
  {
    sub_1ACFF64C0((uint64_t)&v135, (uint64_t)&v115, &qword_1ED2E2680);
    if (*((_QWORD *)&v116 + 1))
    {
      v131[12] = v127;
      v131[13] = v128;
      v131[14] = v129;
      v132 = v130;
      v131[8] = v123;
      v131[9] = v124;
      v131[10] = v125;
      v131[11] = v126;
      v131[4] = v119;
      v131[5] = v120;
      v131[6] = v121;
      v131[7] = v122;
      v131[0] = v115;
      v131[1] = v116;
      v131[2] = v117;
      v131[3] = v118;
      sub_1AD0469FC(&v135);
      type metadata accessor for JPEGEncoder();
      v61 = swift_allocObject();
      v106 = sub_1AD59AB30(v61);
      v108 = v107;
      swift_setDeallocating();
      swift_deallocClassInstance();
      sub_1AD046A30(v131);
      v134 = MEMORY[0x1E0CB0338];
      *(_QWORD *)&v133 = v106;
      *((_QWORD *)&v133 + 1) = v108;
      sub_1AD002F7C(&v133, &v135);
      v109 = v114;
      v110 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v131[0] = v109;
      sub_1AD43F448(&v135, 26977, 0xE200000000000000, v110);
      v114 = *(_QWORD *)&v131[0];
      swift_bridgeObjectRelease();
      goto LABEL_28;
    }
    __break(1u);
LABEL_52:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  sub_1AD009758((uint64_t)&v135, &qword_1EECD1D10);
  sub_1AD43D86C(26977, 0xE200000000000000, &v135);
  sub_1AD009758((uint64_t)&v135, &qword_1EECDC5F0);
LABEL_28:
  v62 = (uint64_t)v112;
  v63 = v113;
  v64 = (_QWORD *)((char *)v112 + v113[10]);
  v65 = v64[1];
  v66 = MEMORY[0x1E0DEA968];
  if (v65)
  {
    v67 = *v64;
    *((_QWORD *)&v136 + 1) = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v135 = v67;
    *((_QWORD *)&v135 + 1) = v65;
    sub_1AD002F7C(&v135, v131);
    swift_bridgeObjectRetain();
    v68 = v114;
    v69 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v115 = v68;
    sub_1AD43F448(v131, 28257, 0xE200000000000000, v69);
    v114 = v115;
    swift_bridgeObjectRelease();
  }
  v70 = v62 + v63[9];
  if ((*(_BYTE *)(v70 + 8) & 1) == 0)
  {
    v71 = *(_QWORD *)v70;
    *((_QWORD *)&v136 + 1) = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v135 = v71;
    sub_1AD002F7C(&v135, v131);
    v72 = v114;
    v73 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v115 = v72;
    sub_1AD43F448(v131, 0x6469707061, 0xE500000000000000, v73);
    v114 = v115;
    swift_bridgeObjectRelease();
  }
  v74 = (_QWORD *)(v62 + v63[13]);
  v75 = v74[1];
  if (v75 != 1)
  {
    *(_QWORD *)&v135 = *v74;
    *((_QWORD *)&v135 + 1) = v75;
    v76 = sub_1AD04669C();
    *((_QWORD *)&v136 + 1) = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v135 = v76;
    *((_QWORD *)&v135 + 1) = v77;
    sub_1AD002F7C(&v135, v131);
    v78 = v114;
    v79 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)&v115 = v78;
    sub_1AD43F448(v131, 0x6F79614C6576696CLL, 0xEE006F666E497475, v79);
    v114 = v115;
    swift_bridgeObjectRelease();
  }
  v80 = (uint64_t *)(v62 + v63[14]);
  v81 = v80[1];
  if (v81 >> 60 != 15)
  {
    v82 = *v80;
    if (qword_1EECD1558 != -1)
      swift_once();
    v83 = (uint64_t *)(v62 + v113[15]);
    v85 = *v83;
    v84 = v83[1];
    if ((sub_1AD37834C(*v83, v84, (_QWORD *)qword_1EECDC748) & 1) != 0)
    {
      *((_QWORD *)&v136 + 1) = MEMORY[0x1E0CB0338];
      *(_QWORD *)&v135 = v82;
      *((_QWORD *)&v135 + 1) = v81;
      sub_1AD002F7C(&v135, v131);
      sub_1AD0040A0(v82, v81);
      v86 = v114;
      v87 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)&v115 = v86;
      sub_1AD43F448(v131, 1635017060, 0xE400000000000000, v87);
      v114 = v115;
    }
    else
    {
      sub_1AD63BB7C();
      if (qword_1ED2E7540[0] != -1)
        swift_once();
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
      v91 = swift_allocObject();
      *(_OWORD *)(v91 + 16) = xmmword_1AD648160;
      *(_QWORD *)(v91 + 56) = v66;
      *(_QWORD *)(v91 + 64) = sub_1AD0469B8();
      *(_QWORD *)(v91 + 32) = v85;
      *(_QWORD *)(v91 + 40) = v84;
      swift_bridgeObjectRetain();
      sub_1AD63B48C();
    }
    swift_bridgeObjectRelease();
  }
  v92 = (void *)objc_opt_self();
  v93 = MEMORY[0x1E0DEA968];
  v94 = (void *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v135 = 0;
  v95 = objc_msgSend(v92, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v94, 1, &v135);

  v96 = (id)v135;
  if (v95)
  {
    v97 = sub_1AD63AFB8();

  }
  else
  {
    v98 = v96;
    v99 = (void *)sub_1AD63AE50();

    swift_willThrow();
    sub_1AD63BB7C();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
    v100 = swift_allocObject();
    *(_OWORD *)(v100 + 16) = xmmword_1AD648160;
    *(_QWORD *)&v135 = v99;
    v101 = v99;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
    v102 = sub_1AD63B7A4();
    v104 = v103;
    *(_QWORD *)(v100 + 56) = v93;
    *(_QWORD *)(v100 + 64) = sub_1AD0469B8();
    *(_QWORD *)(v100 + 32) = v102;
    *(_QWORD *)(v100 + 40) = v104;
    sub_1AD63B48C();
    swift_bridgeObjectRelease();

    return 0;
  }
  return v97;
}

uint64_t sub_1AD046338()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;
  char v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  _OWORD v26[2];
  __int128 v27;
  uint64_t v28;

  v1 = v0[1];
  v2 = v0[3];
  v21 = *v0;
  v22 = v0[2];
  v3 = v0[5];
  v4 = v0[7];
  v23 = v0[4];
  v24 = v0[6];
  v5 = v0[9];
  v6 = v0[10];
  v7 = v0[11];
  v20 = v0[12];
  v25 = *((_BYTE *)v0 + 104);
  v8 = MEMORY[0x1E0DEE9E0];
  if (v5)
  {
    v9 = v0[8];
    v10 = MEMORY[0x1E0DEA968];
    v28 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v27 = v9;
    *((_QWORD *)&v27 + 1) = v5;
    sub_1AD002F7C(&v27, v26);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v26, 0x69742D6567616D69, 0xEB00000000656C74, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    if (v7)
      goto LABEL_3;
  }
  else
  {
    v10 = MEMORY[0x1E0DEA968];
    if (v7)
    {
LABEL_3:
      v12 = v10;
      v28 = v10;
      *(_QWORD *)&v27 = v6;
      *((_QWORD *)&v27 + 1) = v7;
      sub_1AD002F7C(&v27, v26);
      swift_bridgeObjectRetain();
      v13 = swift_isUniquelyReferenced_nonNull_native();
      sub_1AD43F448(v26, 0x75732D6567616D69, 0xEE00656C74697462, v13);
      swift_bridgeObjectRelease();
      if (!v1)
        goto LABEL_5;
      goto LABEL_4;
    }
  }
  v12 = v10;
  if (v1)
  {
LABEL_4:
    v28 = v12;
    *(_QWORD *)&v27 = v21;
    *((_QWORD *)&v27 + 1) = v1;
    sub_1AD002F7C(&v27, v26);
    swift_bridgeObjectRetain();
    v14 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v26, 0x6E6F6974706163, 0xE700000000000000, v14);
    swift_bridgeObjectRelease();
  }
LABEL_5:
  if (v2)
  {
    v28 = v12;
    *(_QWORD *)&v27 = v22;
    *((_QWORD *)&v27 + 1) = v2;
    sub_1AD002F7C(&v27, v26);
    swift_bridgeObjectRetain();
    v15 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v26, 0x6974706163627573, 0xEA00000000006E6FLL, v15);
    swift_bridgeObjectRelease();
  }
  if (v3)
  {
    v28 = v12;
    *(_QWORD *)&v27 = v23;
    *((_QWORD *)&v27 + 1) = v3;
    sub_1AD002F7C(&v27, v26);
    swift_bridgeObjectRetain();
    v16 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v26, 0xD000000000000014, 0x80000001AD69F3A0, v16);
    swift_bridgeObjectRelease();
  }
  if (v4)
  {
    v28 = v12;
    *(_QWORD *)&v27 = v24;
    *((_QWORD *)&v27 + 1) = v4;
    sub_1AD002F7C(&v27, v26);
    swift_bridgeObjectRetain();
    v17 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v26, 0xD000000000000013, 0x80000001AD69F380, v17);
    swift_bridgeObjectRelease();
  }
  if ((v25 & 1) == 0)
  {
    v28 = MEMORY[0x1E0DEB418];
    *(_QWORD *)&v27 = v20;
    sub_1AD002F7C(&v27, v26);
    v18 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v26, 0x697463612D706174, 0xEA00000000006E6FLL, v18);
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1AD04669C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  char v5;
  void *v6;
  uint64_t v7;
  void *v8;
  id v9;
  id v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _OWORD v20[2];
  __int128 v21;
  uint64_t v22;
  uint64_t v23;

  v23 = *MEMORY[0x1E0C80C00];
  v1 = v0[1];
  v2 = MEMORY[0x1E0DEE9E0];
  if (v1)
  {
    v3 = *v0;
    v22 = MEMORY[0x1E0DEA968];
    *(_QWORD *)&v21 = v3;
    *((_QWORD *)&v21 + 1) = v1;
    sub_1AD002F7C(&v21, v20);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v20, 0x6C4374756F79616CLL, 0xEB00000000737361, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
  }
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1D18);
  *(_QWORD *)&v21 = v2;
  sub_1AD002F7C(&v21, v20);
  v5 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v20, 0x6F666E4972657375, 0xE800000000000000, v5);
  swift_bridgeObjectRelease();
  v6 = (void *)objc_opt_self();
  v7 = MEMORY[0x1E0DEA968];
  v8 = (void *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v21 = 0;
  v9 = objc_msgSend(v6, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v8, 1, &v21);

  v10 = (id)v21;
  if (v9)
  {
    v11 = sub_1AD63AFB8();

  }
  else
  {
    v12 = v10;
    v13 = (void *)sub_1AD63AE50();

    swift_willThrow();
    sub_1AD63BB7C();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1AD648160;
    *(_QWORD *)&v21 = v13;
    v15 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
    v16 = sub_1AD63B7A4();
    v18 = v17;
    *(_QWORD *)(v14 + 56) = v7;
    *(_QWORD *)(v14 + 64) = sub_1AD0469B8();
    *(_QWORD *)(v14 + 32) = v16;
    *(_QWORD *)(v14 + 40) = v18;
    sub_1AD63B48C();
    swift_bridgeObjectRelease();

    return 0;
  }
  return v11;
}

uint64_t sub_1AD046974()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v0 = sub_1AD0455D8();
  v2 = v1;
  v3 = sub_1AD63AFA0();
  sub_1AD00412C(v0, v2);
  return v3;
}

unint64_t sub_1AD0469B8()
{
  unint64_t result;

  result = qword_1ED2E7350[0];
  if (!qword_1ED2E7350[0])
  {
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0CB1A70], MEMORY[0x1E0DEA968]);
    atomic_store(result, qword_1ED2E7350);
  }
  return result;
}

_QWORD *sub_1AD0469FC(_QWORD *a1)
{
  destroy for MessagesAppBalloon.AppIconImage(a1);
  return a1;
}

_QWORD *sub_1AD046A30(_QWORD *a1)
{
  destroy for Image(a1);
  return a1;
}

uint64_t sub_1AD046A64@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, _DWORD *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,__int128 *a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,__int128 *a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  _QWORD *v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  char *v63;
  _QWORD *v64;
  _QWORD *v65;
  char *v66;
  char v71;
  uint64_t v72;
  uint64_t v73;
  __int128 v74;
  __int128 v79;
  __int128 v80;
  uint64_t v81;
  _BYTE v83[128];
  _BYTE v84[128];
  _BYTE v85[192];

  v74 = *a25;
  v72 = *((_QWORD *)a25 + 3);
  v73 = *((_QWORD *)a25 + 2);
  v71 = *((_BYTE *)a25 + 32);
  sub_1AD00FF28(a30, (uint64_t)v83, &qword_1EECD1D20);
  v79 = *a32;
  v80 = a32[1];
  v81 = *((_QWORD *)a32 + 4);
  sub_1AD00FF28(a34, (uint64_t)v84, &qword_1EECD1D20);
  sub_1AD00FF28(a51, (uint64_t)v85, &qword_1EECD20E0);
  *a9 = a1;
  v53 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
  sub_1AD00FF28(a2, (uint64_t)a9 + v53[5], &qword_1ED2E1A40);
  sub_1AD00FF28(a3, (uint64_t)a9 + v53[6], &qword_1ED2E1A40);
  v54 = (_QWORD *)((char *)a9 + v53[7]);
  *v54 = a4;
  v54[1] = a5;
  v55 = (_QWORD *)((char *)a9 + v53[8]);
  *v55 = a6;
  v55[1] = a7;
  v56 = (_QWORD *)((char *)a9 + v53[9]);
  *v56 = a8;
  v56[1] = a10;
  v57 = (_QWORD *)((char *)a9 + v53[10]);
  *v57 = a11;
  v57[1] = a12;
  v58 = (_QWORD *)((char *)a9 + v53[11]);
  *v58 = a13;
  v58[1] = a14;
  sub_1AD00FF28(a15, (uint64_t)a9 + v53[12], &qword_1ED2E1A40);
  v59 = (_QWORD *)((char *)a9 + v53[13]);
  *v59 = a16;
  v59[1] = a17;
  v60 = (_QWORD *)((char *)a9 + v53[14]);
  *v60 = a18;
  v60[1] = a19;
  v61 = (_QWORD *)((char *)a9 + v53[15]);
  *v61 = a20;
  v61[1] = a21;
  v62 = (_QWORD *)((char *)a9 + v53[16]);
  *v62 = a22;
  v62[1] = a23;
  *((_BYTE *)a9 + v53[17]) = a24;
  v63 = (char *)a9 + v53[18];
  *(_OWORD *)v63 = v74;
  *((_QWORD *)v63 + 2) = v73;
  *((_QWORD *)v63 + 3) = v72;
  v63[32] = v71;
  v64 = (_QWORD *)((char *)a9 + v53[19]);
  *v64 = a26;
  v64[1] = a27;
  v65 = (_QWORD *)((char *)a9 + v53[20]);
  *v65 = a28;
  v65[1] = a29;
  sub_1AD00FF28((uint64_t)v83, (uint64_t)a9 + v53[21], &qword_1EECD1D20);
  sub_1AD00FF28(a31, (uint64_t)a9 + v53[22], &qword_1EECD1C80);
  v66 = (char *)a9 + v53[23];
  *(_OWORD *)v66 = v79;
  *((_OWORD *)v66 + 1) = v80;
  *((_QWORD *)v66 + 4) = v81;
  sub_1AD00FF28(a33, (uint64_t)a9 + v53[24], &qword_1EECD1C88);
  sub_1AD00FF28((uint64_t)v84, (uint64_t)a9 + v53[25], &qword_1EECD1D20);
  *(_QWORD *)((char *)a9 + v53[26]) = a35;
  sub_1AD00FF28(a36, (uint64_t)a9 + v53[27], &qword_1EECD1C90);
  *(_QWORD *)((char *)a9 + v53[28]) = a37;
  *(_QWORD *)((char *)a9 + v53[29]) = a38;
  sub_1AD00FF28(a39, (uint64_t)a9 + v53[30], &qword_1EECD1C98);
  sub_1AD00FF28(a40, (uint64_t)a9 + v53[31], &qword_1EECD1CA0);
  sub_1AD00FF28(a41, (uint64_t)a9 + v53[32], &qword_1EECD1CA8);
  sub_1AD00FF28(a42, (uint64_t)a9 + v53[33], &qword_1EECD1CB0);
  *(_QWORD *)((char *)a9 + v53[34]) = a43;
  *(_QWORD *)((char *)a9 + v53[35]) = a44;
  *(_QWORD *)((char *)a9 + v53[36]) = a45;
  *(_QWORD *)((char *)a9 + v53[37]) = a46;
  *(_QWORD *)((char *)a9 + v53[38]) = a47;
  *(_QWORD *)((char *)a9 + v53[39]) = a48;
  *(_QWORD *)((char *)a9 + v53[40]) = a49;
  sub_1AD00FF28(a50, (uint64_t)a9 + v53[41], &qword_1EECD1CC0);
  sub_1AD00FF28((uint64_t)v85, (uint64_t)a9 + v53[42], &qword_1EECD20E0);
  return sub_1AD00FF28(a52, (uint64_t)a9 + v53[43], &qword_1EECD1CC8);
}

uint64_t (*sub_1AD046F44())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD046F58())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD046F6C())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD046F80())()
{
  return nullsub_1;
}

uint64_t sub_1AD046F90()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*sub_1AD046FC0())()
{
  return nullsub_1;
}

uint64_t sub_1AD046FD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*sub_1AD047000())()
{
  return nullsub_1;
}

uint64_t sub_1AD047014(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD04704C(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))
{
  char v4;

  v4 = *(_BYTE *)(a1 + 120);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), v4);
  return a1;
}

uint64_t sub_1AD0470B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;

  if (a3 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*sub_1AD0470E4())()
{
  return nullsub_1;
}

uint64_t sub_1AD0470F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD047934(type metadata accessor for LinkPresentation.SongMetadata, &qword_1EECD1CB8, a1);
}

uint64_t type metadata accessor for LinkPresentation.SongMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1DB8);
}

uint64_t sub_1AD04711C(uint64_t a1)
{
  return sub_1AD047990(a1, type metadata accessor for LinkPresentation.SongMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD047130())(_QWORD)
{
  type metadata accessor for LinkPresentation.SongMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD047158@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD047CA4(type metadata accessor for LinkPresentation.SongMetadata, &qword_1ED2E1A40, a1);
}

uint64_t sub_1AD04716C(uint64_t a1)
{
  return sub_1AD047D14(a1, type metadata accessor for LinkPresentation.SongMetadata, &qword_1ED2E1A40);
}

uint64_t (*sub_1AD047180())(_QWORD)
{
  type metadata accessor for LinkPresentation.SongMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD0471A8()
{
  type metadata accessor for LinkPresentation.SongMetadata(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD0471C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for LinkPresentation.SongMetadata(0) + 52);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_1AD047204())(_QWORD)
{
  type metadata accessor for LinkPresentation.SongMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD04722C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = v1 + *(int *)(type metadata accessor for LinkPresentation.SongMetadata(0) + 56);
  v4 = *(_QWORD *)v3;
  v5 = *(_QWORD *)(v3 + 8);
  v6 = *(_QWORD *)(v3 + 16);
  v7 = *(_QWORD *)(v3 + 24);
  v8 = *(_QWORD *)(v3 + 32);
  v9 = *(_QWORD *)(v3 + 40);
  v10 = *(_QWORD *)(v3 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v3;
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  *(_QWORD *)(a1 + 40) = v9;
  *(_QWORD *)(a1 + 48) = v10;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v3 + 56);
  return sub_1AD047280(v4, v5);
}

uint64_t sub_1AD047280(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 sub_1AD0472B4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;
  __int128 v7;
  __int128 v8;

  v7 = a1[1];
  v8 = *a1;
  v6 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  v4 = v1 + *(int *)(type metadata accessor for LinkPresentation.SongMetadata(0) + 56);
  sub_1AD04733C(*(_QWORD *)v4, *(_QWORD *)(v4 + 8));
  *(_OWORD *)v4 = v8;
  *(_OWORD *)(v4 + 16) = v7;
  result = v6;
  *(__n128 *)(v4 + 32) = v6;
  *(_QWORD *)(v4 + 48) = v2;
  *(_BYTE *)(v4 + 56) = v3;
  return result;
}

uint64_t sub_1AD04733C(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*sub_1AD047370())(_QWORD)
{
  type metadata accessor for LinkPresentation.SongMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD047398())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0473AC())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0473C0())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0473D4())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0473EC())()
{
  return nullsub_1;
}

uint64_t sub_1AD0473FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.AlbumMetadata, &qword_1EECD1CB8, a1);
}

uint64_t type metadata accessor for LinkPresentation.AlbumMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1DD0);
}

uint64_t sub_1AD047424(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.AlbumMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD047438())(_QWORD)
{
  type metadata accessor for LinkPresentation.AlbumMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD047460()
{
  return sub_1AD0485E4((void (*)(_QWORD))type metadata accessor for LinkPresentation.AlbumMetadata);
}

uint64_t sub_1AD04746C(uint64_t a1)
{
  return sub_1AD048614(a1, type metadata accessor for LinkPresentation.AlbumMetadata);
}

uint64_t (*sub_1AD047478())(_QWORD)
{
  type metadata accessor for LinkPresentation.AlbumMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD0474A0())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0474B4())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0474C8())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0474DC())()
{
  return nullsub_1;
}

uint64_t sub_1AD0474F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 64, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD047550(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 64;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD0475C0())()
{
  return nullsub_1;
}

uint64_t sub_1AD0475D0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.MusicVideoMetadata, &qword_1EECD1CB8, a1);
}

uint64_t sub_1AD0475E4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_1ACFF64C0(v3 + *(int *)(v6 + 36), a3, a2);
}

uint64_t type metadata accessor for LinkPresentation.MusicVideoMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1DE0);
}

uint64_t sub_1AD047640(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.MusicVideoMetadata, &qword_1EECD1CB8);
}

uint64_t sub_1AD047654(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_1ACFF6540(a1, v3 + *(int *)(v6 + 36), a3);
}

uint64_t (*sub_1AD047698())(_QWORD)
{
  type metadata accessor for LinkPresentation.MusicVideoMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD0476C0())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0476D4())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0476E8())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0476FC())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD047714())()
{
  return nullsub_1;
}

uint64_t sub_1AD047724@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.ArtistMetadata, &qword_1EECD1CB8, a1);
}

uint64_t type metadata accessor for LinkPresentation.ArtistMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1DF0);
}

uint64_t sub_1AD04774C(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.ArtistMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD047760())(_QWORD)
{
  type metadata accessor for LinkPresentation.ArtistMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD047788())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04779C())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0477B0())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0477C4())()
{
  return nullsub_1;
}

uint64_t sub_1AD0477D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD048A0C(type metadata accessor for LinkPresentation.PlaylistMetadata, &qword_1ED2E1A40, a1);
}

uint64_t type metadata accessor for LinkPresentation.PlaylistMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1E00);
}

uint64_t sub_1AD0477FC(uint64_t a1)
{
  return sub_1AD048A7C(a1, type metadata accessor for LinkPresentation.PlaylistMetadata, &qword_1ED2E1A40);
}

uint64_t (*sub_1AD047810())(_QWORD)
{
  type metadata accessor for LinkPresentation.PlaylistMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD047838()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for LinkPresentation.PlaylistMetadata(0) + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD047874(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for LinkPresentation.PlaylistMetadata(0) + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1AD0478B8())(_QWORD)
{
  type metadata accessor for LinkPresentation.PlaylistMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD0478E0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD04831C(type metadata accessor for LinkPresentation.PlaylistMetadata, a1);
}

uint64_t sub_1AD0478EC(uint64_t a1)
{
  return sub_1AD048394(a1, type metadata accessor for LinkPresentation.PlaylistMetadata);
}

uint64_t (*sub_1AD0478F8())(_QWORD)
{
  type metadata accessor for LinkPresentation.PlaylistMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD047920@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD047934(type metadata accessor for LinkPresentation.PlaylistMetadata, &qword_1EECD1CB8, a1);
}

uint64_t sub_1AD047934@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_1ACFF64C0(v3 + *(int *)(v6 + 44), a3, a2);
}

uint64_t sub_1AD04797C(uint64_t a1)
{
  return sub_1AD047990(a1, type metadata accessor for LinkPresentation.PlaylistMetadata, &qword_1EECD1CB8);
}

uint64_t sub_1AD047990(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_1ACFF6540(a1, v3 + *(int *)(v6 + 44), a3);
}

uint64_t (*sub_1AD0479D4())(_QWORD)
{
  type metadata accessor for LinkPresentation.PlaylistMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD0479FC())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD047A10())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD047A24())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD047A38())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD047A50())()
{
  return nullsub_1;
}

uint64_t sub_1AD047A60@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.RadioMetadata, &qword_1EECD1CB8, a1);
}

uint64_t type metadata accessor for LinkPresentation.RadioMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1E10);
}

uint64_t sub_1AD047A88(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.RadioMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD047A9C())(_QWORD)
{
  type metadata accessor for LinkPresentation.RadioMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD047AC4())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD047AD8())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD047AEC())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD047B00())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD047B14())()
{
  return nullsub_1;
}

uint64_t sub_1AD047B28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*sub_1AD047B5C())()
{
  return nullsub_1;
}

uint64_t sub_1AD047B70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 96, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD047BD0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 96;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD047C40())()
{
  return nullsub_1;
}

uint64_t sub_1AD047C50()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD047C58(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 224) = a1;
  return result;
}

uint64_t (*sub_1AD047C80())()
{
  return nullsub_1;
}

uint64_t sub_1AD047C90@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD047CA4(type metadata accessor for LinkPresentation.SoftwareMetadata, &qword_1EECD1C98, a1);
}

uint64_t sub_1AD047CA4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_1ACFF64C0(v3 + *(int *)(v6 + 48), a3, a2);
}

uint64_t type metadata accessor for LinkPresentation.SoftwareMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1E20);
}

uint64_t sub_1AD047D00(uint64_t a1)
{
  return sub_1AD047D14(a1, type metadata accessor for LinkPresentation.SoftwareMetadata, &qword_1EECD1C98);
}

uint64_t sub_1AD047D14(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_1ACFF6540(a1, v3 + *(int *)(v6 + 48), a3);
}

uint64_t (*sub_1AD047D58())(_QWORD)
{
  type metadata accessor for LinkPresentation.SoftwareMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD047D80()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LinkPresentation.SoftwareMetadata(0) + 52));
}

uint64_t sub_1AD047DA0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*sub_1AD047DCC())(_QWORD)
{
  type metadata accessor for LinkPresentation.SoftwareMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD047DF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _BYTE v5[128];

  v3 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
  sub_1AD00FF28(v1 + *(int *)(v3 + 56), (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v5, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD047E5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + *(int *)(type metadata accessor for LinkPresentation.SoftwareMetadata(0) + 56);
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD047ED8())(_QWORD)
{
  type metadata accessor for LinkPresentation.SoftwareMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD047F00()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD047F2C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD047F60())()
{
  return nullsub_1;
}

uint64_t sub_1AD047F70()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*sub_1AD047FA0())()
{
  return nullsub_1;
}

uint64_t sub_1AD047FB0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*sub_1AD047FE0())()
{
  return nullsub_1;
}

uint64_t sub_1AD047FF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t (*sub_1AD048020())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048038())()
{
  return nullsub_1;
}

uint64_t sub_1AD048048@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.BookMetadata, &qword_1EECD1CB8, a1);
}

uint64_t type metadata accessor for LinkPresentation.BookMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1E30);
}

uint64_t sub_1AD048070(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.BookMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD048084())(_QWORD)
{
  type metadata accessor for LinkPresentation.BookMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD0480AC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for LinkPresentation.BookMetadata(0) + 40));
}

uint64_t sub_1AD0480CC(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for LinkPresentation.BookMetadata(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*sub_1AD0480F8())(_QWORD)
{
  type metadata accessor for LinkPresentation.BookMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD048120())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048134())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048148())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04815C())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048170())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048188())()
{
  return nullsub_1;
}

uint64_t sub_1AD048198@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD048804(type metadata accessor for LinkPresentation.AudioBookMetadata, &qword_1EECD1CB8, a1);
}

uint64_t type metadata accessor for LinkPresentation.AudioBookMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1E40);
}

uint64_t sub_1AD0481C0(uint64_t a1)
{
  return sub_1AD048874(a1, type metadata accessor for LinkPresentation.AudioBookMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD0481D4())(_QWORD)
{
  type metadata accessor for LinkPresentation.AudioBookMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD0481FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD047934(type metadata accessor for LinkPresentation.AudioBookMetadata, &qword_1ED2E1A40, a1);
}

uint64_t sub_1AD048210(uint64_t a1)
{
  return sub_1AD047990(a1, type metadata accessor for LinkPresentation.AudioBookMetadata, &qword_1ED2E1A40);
}

uint64_t (*sub_1AD048224())(_QWORD)
{
  type metadata accessor for LinkPresentation.AudioBookMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD04824C())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048260())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048274())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048288())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04829C())()
{
  return nullsub_1;
}

uint64_t sub_1AD0482AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.PodcastEpisodeMetadata, (uint64_t *)&unk_1ED2E2D98, a1);
}

uint64_t type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1E50);
}

uint64_t sub_1AD0482D4(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.PodcastEpisodeMetadata, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD0482E8())(_QWORD)
{
  type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD048310@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD04831C(type metadata accessor for LinkPresentation.PodcastEpisodeMetadata, a1);
}

uint64_t sub_1AD04831C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[128];

  v4 = a1(0);
  sub_1AD00FF28(v2 + *(int *)(v4 + 40), (uint64_t)v6, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v6, a2, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v6, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD048388(uint64_t a1)
{
  return sub_1AD048394(a1, type metadata accessor for LinkPresentation.PodcastEpisodeMetadata);
}

uint64_t sub_1AD048394(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  _BYTE v6[128];
  _BYTE v7[128];

  sub_1AD00FF28(a1, (uint64_t)v6, &qword_1EECD1D20);
  v4 = v2 + *(int *)(a2(0) + 40);
  sub_1AD00FF28(v4, (uint64_t)v7, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v7, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v6, v4, &qword_1EECD1D20);
}

uint64_t (*sub_1AD048414())(_QWORD)
{
  type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD04843C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD047934(type metadata accessor for LinkPresentation.PodcastEpisodeMetadata, &qword_1EECD1CB8, a1);
}

uint64_t sub_1AD048450(uint64_t a1)
{
  return sub_1AD047990(a1, type metadata accessor for LinkPresentation.PodcastEpisodeMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD048464())(_QWORD)
{
  type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD04848C()
{
  type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD0484AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0) + 48);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*sub_1AD0484E8())(_QWORD)
{
  type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD048510())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048524())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048538())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04854C())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048564())()
{
  return nullsub_1;
}

uint64_t sub_1AD048574@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.PodcastMetadata, &qword_1EECD1CB8, a1);
}

uint64_t type metadata accessor for LinkPresentation.PodcastMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1E60);
}

uint64_t sub_1AD04859C(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.PodcastMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD0485B0())(_QWORD)
{
  type metadata accessor for LinkPresentation.PodcastMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD0485D8()
{
  return sub_1AD0485E4((void (*)(_QWORD))type metadata accessor for LinkPresentation.PodcastMetadata);
}

uint64_t sub_1AD0485E4(void (*a1)(_QWORD))
{
  a1(0);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD048608(uint64_t a1)
{
  return sub_1AD048614(a1, type metadata accessor for LinkPresentation.PodcastMetadata);
}

uint64_t sub_1AD048614(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2(0) + 40);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*sub_1AD048650())(_QWORD)
{
  type metadata accessor for LinkPresentation.PodcastMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD048678())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04868C())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0486A0())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0486B4())()
{
  return nullsub_1;
}

uint64_t sub_1AD0486C8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*sub_1AD0486FC())()
{
  return nullsub_1;
}

uint64_t sub_1AD048710@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 80, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD048770(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 80;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD0487E0())()
{
  return nullsub_1;
}

uint64_t sub_1AD0487F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD048804(type metadata accessor for LinkPresentation.TVEpisodeMetadata, &qword_1EECD1CB8, a1);
}

uint64_t sub_1AD048804@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_1ACFF64C0(v3 + *(int *)(v6 + 40), a3, a2);
}

uint64_t type metadata accessor for LinkPresentation.TVEpisodeMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1E70);
}

uint64_t sub_1AD048860(uint64_t a1)
{
  return sub_1AD048874(a1, type metadata accessor for LinkPresentation.TVEpisodeMetadata, &qword_1EECD1CB8);
}

uint64_t sub_1AD048874(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_1ACFF6540(a1, v3 + *(int *)(v6 + 40), a3);
}

uint64_t (*sub_1AD0488B8())(_QWORD)
{
  type metadata accessor for LinkPresentation.TVEpisodeMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD0488E0())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0488F4())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048908())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04891C())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048934())()
{
  return nullsub_1;
}

uint64_t sub_1AD048944@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.TVSeasonMetadata, &qword_1EECD1CB8, a1);
}

uint64_t type metadata accessor for LinkPresentation.TVSeasonMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1E80);
}

uint64_t sub_1AD04896C(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.TVSeasonMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD048980())(_QWORD)
{
  type metadata accessor for LinkPresentation.TVSeasonMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD0489A8())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0489BC())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0489D0())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD0489E8())()
{
  return nullsub_1;
}

uint64_t sub_1AD0489F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD048A0C(type metadata accessor for LinkPresentation.TVShowMetadata, &qword_1EECD1CB8, a1);
}

uint64_t sub_1AD048A0C@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a1(0);
  return sub_1ACFF64C0(v3 + *(int *)(v6 + 32), a3, a2);
}

uint64_t type metadata accessor for LinkPresentation.TVShowMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1E90);
}

uint64_t sub_1AD048A68(uint64_t a1)
{
  return sub_1AD048A7C(a1, type metadata accessor for LinkPresentation.TVShowMetadata, &qword_1EECD1CB8);
}

uint64_t sub_1AD048A7C(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t *a3)
{
  uint64_t v3;
  uint64_t v6;

  v6 = a2(0);
  return sub_1ACFF6540(a1, v3 + *(int *)(v6 + 32), a3);
}

uint64_t (*sub_1AD048AC0())(_QWORD)
{
  type metadata accessor for LinkPresentation.TVShowMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD048AE8())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048AFC())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048B10())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048B24())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048B3C())()
{
  return nullsub_1;
}

uint64_t sub_1AD048B4C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.MovieMetadata, &qword_1EECD1CB8, a1);
}

uint64_t type metadata accessor for LinkPresentation.MovieMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1EA0);
}

uint64_t sub_1AD048B74(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.MovieMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD048B88())(_QWORD)
{
  type metadata accessor for LinkPresentation.MovieMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD048BB0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD04831C(type metadata accessor for LinkPresentation.MovieMetadata, a1);
}

uint64_t sub_1AD048BBC(uint64_t a1)
{
  return sub_1AD048394(a1, type metadata accessor for LinkPresentation.MovieMetadata);
}

uint64_t (*sub_1AD048BC8())(_QWORD)
{
  type metadata accessor for LinkPresentation.MovieMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD048BF0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for LinkPresentation.MovieMetadata(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD048C2C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for LinkPresentation.MovieMetadata(0) + 44));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1AD048C70())(_QWORD)
{
  type metadata accessor for LinkPresentation.MovieMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD048C98())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048CAC())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048CC0())()
{
  return nullsub_1;
}

uint64_t sub_1AD048CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*sub_1AD048D08())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD048D20())()
{
  return nullsub_1;
}

uint64_t sub_1AD048D30@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.MovieBundleMetadata, &qword_1EECD1CB8, a1);
}

uint64_t type metadata accessor for LinkPresentation.MovieBundleMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1EB0);
}

uint64_t sub_1AD048D58(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.MovieBundleMetadata, &qword_1EECD1CB8);
}

uint64_t (*sub_1AD048D6C())(_QWORD)
{
  type metadata accessor for LinkPresentation.MovieBundleMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD048D94()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD048DC0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD048DF4())()
{
  return nullsub_1;
}

uint64_t sub_1AD048E04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LinkPresentation.EncodedToken(0) + 20);
  return sub_1AD048E48(v3, a1);
}

uint64_t type metadata accessor for LinkPresentation.EncodedToken(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECD20C0);
}

uint64_t sub_1AD048E48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CloudKitSharingToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD048E8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for LinkPresentation.EncodedToken(0) + 20);
  return sub_1AD048EBC(a1, v3);
}

uint64_t sub_1AD048EBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CloudKitSharingToken();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD048F00())(_QWORD)
{
  type metadata accessor for LinkPresentation.EncodedToken(0);
  return nullsub_1;
}

uint64_t sub_1AD048F28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;

  *a4 = a1;
  a4[1] = a2;
  v5 = (uint64_t)a4 + *(int *)(type metadata accessor for LinkPresentation.EncodedToken(0) + 20);
  return sub_1AD0CE1D8(a3, v5);
}

uint64_t sub_1AD048F60()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD048F8C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD048FC0())()
{
  return nullsub_1;
}

uint64_t sub_1AD048FD0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD048FFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD049030())()
{
  return nullsub_1;
}

uint64_t sub_1AD049040()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04906C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1AD0490A0())()
{
  return nullsub_1;
}

uint64_t sub_1AD0490B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 48, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04910C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 48;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04917C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04918C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 176, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD0491E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 176;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD049258())()
{
  return nullsub_1;
}

uint64_t sub_1AD049268()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD049270(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 304) = a1;
  return result;
}

uint64_t (*sub_1AD049298())()
{
  return nullsub_1;
}

uint64_t sub_1AD0492A8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD0492D4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD049308())()
{
  return nullsub_1;
}

uint64_t sub_1AD049318()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD049378())()
{
  return nullsub_1;
}

uint64_t sub_1AD049388()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD0493B4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1AD0493E8())()
{
  return nullsub_1;
}

uint64_t sub_1AD0493F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 48, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD049454(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 48;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD0494C4())()
{
  return nullsub_1;
}

uint64_t sub_1AD0494D4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049500(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD049534())()
{
  return nullsub_1;
}

uint64_t sub_1AD049544@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 16, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD0495A0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 16;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD049610())()
{
  return nullsub_1;
}

uint64_t sub_1AD049620@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 144, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04967C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 144;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD0496EC())()
{
  return nullsub_1;
}

uint64_t sub_1AD0496FC()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 268);
}

uint64_t sub_1AD049704(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 268) = result;
  return result;
}

uint64_t (*sub_1AD04970C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04971C()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 272);
}

uint64_t sub_1AD049724(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 272) = result;
  return result;
}

uint64_t (*sub_1AD04972C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04973C()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 276);
}

uint64_t sub_1AD049744(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 276) = result;
  return result;
}

uint64_t (*sub_1AD04974C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04975C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049788(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD0497BC())()
{
  return nullsub_1;
}

uint64_t sub_1AD0497CC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD0497F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD04982C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04983C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049868(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1AD04989C())()
{
  return nullsub_1;
}

uint64_t sub_1AD0498AC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD0498D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*sub_1AD04990C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04991C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049948(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*sub_1AD04997C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04998C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD0499B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 80) = a1;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

uint64_t (*sub_1AD0499EC())()
{
  return nullsub_1;
}

uint64_t sub_1AD0499FC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 96);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049A28(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 96) = a1;
  *(_QWORD *)(v2 + 104) = a2;
  return result;
}

uint64_t (*sub_1AD049A5C())()
{
  return nullsub_1;
}

uint64_t sub_1AD049A6C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 112);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049A98(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 112) = a1;
  *(_QWORD *)(v2 + 120) = a2;
  return result;
}

uint64_t (*sub_1AD049ACC())()
{
  return nullsub_1;
}

uint64_t sub_1AD049ADC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049B08(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD049B3C())()
{
  return nullsub_1;
}

uint64_t sub_1AD049B4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049B78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD049BAC())()
{
  return nullsub_1;
}

_QWORD *sub_1AD049BBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[16];

  sub_1AD00FF28(v1 + 32, (uint64_t)v4, &qword_1EECD1D28);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D28);
  return sub_1AD049D1C(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD049C18);
}

uint64_t sub_1AD049C18(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD049CAC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _QWORD v5[16];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D28);
  v2 = v1 + 32;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D28);
  sub_1AD049D1C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD049D78);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D28);
}

_QWORD *sub_1AD049D1C(_QWORD *a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15]);
  return a1;
}

uint64_t sub_1AD049D78(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t (*sub_1AD049E0C())()
{
  return nullsub_1;
}

uint64_t sub_1AD049E1C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049E48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = a2;
  return result;
}

uint64_t (*sub_1AD049E7C())()
{
  return nullsub_1;
}

uint64_t sub_1AD049E8C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 176, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD049EE8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 176;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD049F58())()
{
  return nullsub_1;
}

uint64_t sub_1AD049F68()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 304);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD049F94(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 304) = a1;
  *(_QWORD *)(v2 + 312) = a2;
  return result;
}

uint64_t (*sub_1AD049FC8())()
{
  return nullsub_1;
}

uint64_t sub_1AD049FD8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 320);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04A004(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 320) = a1;
  *(_QWORD *)(v2 + 328) = a2;
  return result;
}

uint64_t (*sub_1AD04A038())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A048()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 336);
}

uint64_t sub_1AD04A058(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 336) = result;
  *(_BYTE *)(v2 + 344) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD04A068())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A078()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 352);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04A0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 352) = a1;
  *(_QWORD *)(v2 + 360) = a2;
  return result;
}

uint64_t (*sub_1AD04A0D8())()
{
  return nullsub_1;
}

_QWORD *sub_1AD04A0E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[16];

  sub_1AD00FF28(v1 + 368, (uint64_t)v4, &qword_1EECD1D28);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D28);
  return sub_1AD049D1C(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD049C18);
}

uint64_t sub_1AD04A144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _QWORD v5[16];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D28);
  v2 = v1 + 368;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D28);
  sub_1AD049D1C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD049D78);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D28);
}

uint64_t (*sub_1AD04A1B4())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A1C4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 496);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04A1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 496) = a1;
  *(_QWORD *)(v2 + 504) = a2;
  return result;
}

uint64_t (*sub_1AD04A224())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A234()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 512);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04A264(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 512) = a1;
  *(_QWORD *)(v2 + 520) = a2;
  return result;
}

uint64_t (*sub_1AD04A29C())()
{
  return nullsub_1;
}

_QWORD *sub_1AD04A2AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[16];

  sub_1AD00FF28(v1 + 528, (uint64_t)v4, &qword_1EECD1D28);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D28);
  return sub_1AD049D1C(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD049C18);
}

uint64_t sub_1AD04A308(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _QWORD v5[16];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D28);
  v2 = v1 + 528;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D28);
  sub_1AD049D1C(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD049D78);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D28);
}

uint64_t (*sub_1AD04A378())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A388()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 656);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04A3B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 656) = a1;
  *(_QWORD *)(v2 + 664) = a2;
  return result;
}

uint64_t (*sub_1AD04A3F0())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A400()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 672);
}

uint64_t sub_1AD04A410(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 672) = result;
  *(_BYTE *)(v2 + 680) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD04A420())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A430@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 688, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04A48C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 688;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04A4FC())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A50C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 816, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04A568(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 816;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04A5D8())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A5E8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 944, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04A644(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 944;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04A6B4())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A6C4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1065);
}

uint64_t sub_1AD04A6CC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1065) = result;
  return result;
}

uint64_t (*sub_1AD04A6D4())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A6E4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04A710(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD04A744())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A754()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 16);
}

uint64_t sub_1AD04A75C(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*sub_1AD04A764())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A774@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 24, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04A7D0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 24;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04A840())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A850@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 152, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04A8AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 152;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04A91C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04A92C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 280, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04A988(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 280;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04A9F8())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AA08()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD04AA10(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 408) = a1;
  return result;
}

uint64_t (*sub_1AD04AA38())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AA48()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 416);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04AA74(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 416) = a1;
  *(_QWORD *)(v2 + 424) = a2;
  return result;
}

uint64_t (*sub_1AD04AAA8())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AAB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 432, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04AB14(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 432;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04AB84())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AB94()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04ABC0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD04ABF4())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AC04@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 16, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04AC60(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 16;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04ACD0())()
{
  return nullsub_1;
}

uint64_t sub_1AD04ACE0()
{
  uint64_t v0;

  return *(unsigned int *)(v0 + 140);
}

uint64_t sub_1AD04ACE8(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 140) = result;
  return result;
}

uint64_t (*sub_1AD04ACF0())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04AD00())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04AD14())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AD24()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 32);
}

uint64_t sub_1AD04AD2C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = result;
  return result;
}

uint64_t (*sub_1AD04AD34())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04AD4C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AD5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 168, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04ADB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 168;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04AE28())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AE38@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.FileMetadata, (uint64_t *)&unk_1ED2E2D98, a1);
}

uint64_t type metadata accessor for LinkPresentation.FileMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1EC0);
}

uint64_t sub_1AD04AE60(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.FileMetadata, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD04AE74())(_QWORD)
{
  type metadata accessor for LinkPresentation.FileMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD04AE9C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AEAC()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04AED8(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD04AF0C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AF1C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04AF48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD04AF7C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AF8C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04AFB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1AD04AFEC())()
{
  return nullsub_1;
}

uint64_t sub_1AD04AFFC()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04B028(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 48) = a1;
  *(_QWORD *)(v2 + 56) = a2;
  return result;
}

uint64_t (*sub_1AD04B05C())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B06C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 64, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04B0C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 64;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04B138())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B148()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04B174(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD04B1A8())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B1B8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04B1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD04B218())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B228@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 32, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04B284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 32;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04B2F4())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04B304())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B314()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AD04B31C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*sub_1AD04B324())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B334()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1AD04B33C(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*sub_1AD04B344())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04B354())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B368@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 40, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04B3C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 40;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04B438())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B448@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.PhotosMomentMetadata, (uint64_t *)&unk_1ED2E2D98, a1);
}

uint64_t type metadata accessor for LinkPresentation.PhotosMomentMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1ED0);
}

uint64_t sub_1AD04B470(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.PhotosMomentMetadata, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD04B484())(_QWORD)
{
  type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD04B4AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD048804(type metadata accessor for LinkPresentation.PhotosMomentMetadata, (uint64_t *)&unk_1ED2E2D98, a1);
}

uint64_t sub_1AD04B4C0(uint64_t a1)
{
  return sub_1AD048874(a1, type metadata accessor for LinkPresentation.PhotosMomentMetadata, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD04B4D4())(_QWORD)
{
  type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD04B4FC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD047934(type metadata accessor for LinkPresentation.PhotosMomentMetadata, (uint64_t *)&unk_1ED2E2D98, a1);
}

uint64_t sub_1AD04B510(uint64_t a1)
{
  return sub_1AD047990(a1, type metadata accessor for LinkPresentation.PhotosMomentMetadata, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD04B524())(_QWORD)
{
  type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD04B54C())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04B55C())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04B570())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04B580())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04B590())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B5A0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 20), a1, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t type metadata accessor for LinkPresentation.WalletPassMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1EE0);
}

uint64_t sub_1AD04B5F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 20), (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD04B62C())(_QWORD)
{
  type metadata accessor for LinkPresentation.WalletPassMetadata(0);
  return nullsub_1;
}

uint64_t sub_1AD04B654@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 24), a1, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t sub_1AD04B690(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 24), (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*sub_1AD04B6CC())(_QWORD)
{
  type metadata accessor for LinkPresentation.WalletPassMetadata(0);
  return nullsub_1;
}

uint64_t (*sub_1AD04B6F4())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B704()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04B730(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD04B764())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B774()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04B7A0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD04B7D4())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B7E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 16, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04B840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 16;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04B8B0())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B8C0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 144);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04B8EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 144) = a1;
  *(_QWORD *)(v2 + 152) = a2;
  return result;
}

uint64_t (*sub_1AD04B920())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B930()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 160);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04B95C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 160) = a1;
  *(_QWORD *)(v2 + 168) = a2;
  return result;
}

uint64_t (*sub_1AD04B990())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B9A0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 176);
}

uint64_t sub_1AD04B9A8(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 176) = result;
  return result;
}

uint64_t (*sub_1AD04B9B0())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04B9C0())()
{
  return nullsub_1;
}

uint64_t sub_1AD04B9D0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04B9FC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD04BA30())()
{
  return nullsub_1;
}

uint64_t sub_1AD04BA40()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD04BA70(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD04BAA4())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04BAB4())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD04BAC8())()
{
  return nullsub_1;
}

uint64_t sub_1AD04BADC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return result;
}

uint64_t (*sub_1AD04BB10())()
{
  return nullsub_1;
}

uint64_t sub_1AD04BB24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[128];

  sub_1AD00FF28(v1 + 48, (uint64_t)v4, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD1D20);
  return sub_1AD04704C((uint64_t)v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD047014);
}

uint64_t sub_1AD04BB84(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[128];
  _BYTE v5[128];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1EECD1D20);
  v2 = v1 + 48;
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1EECD1D20);
  sub_1AD04704C((uint64_t)v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, char))sub_1AD0470B0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1EECD1D20);
}

uint64_t (*sub_1AD04BBF4())()
{
  return nullsub_1;
}

uint64_t sub_1AD04BC04()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 169);
}

uint64_t sub_1AD04BC0C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 169) = result;
  return result;
}

uint64_t (*sub_1AD04BC14())()
{
  return nullsub_1;
}

uint64_t sub_1AD04BC24@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD0475E4(type metadata accessor for LinkPresentation.SharedObjectMetadata, &qword_1EECD1CC0, a1);
}

uint64_t type metadata accessor for LinkPresentation.SharedObjectMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECD20D0);
}

uint64_t sub_1AD04BC4C(uint64_t a1)
{
  return sub_1AD047654(a1, type metadata accessor for LinkPresentation.SharedObjectMetadata, &qword_1EECD1CC0);
}

uint64_t (*sub_1AD04BC60())(_QWORD)
{
  type metadata accessor for LinkPresentation.SharedObjectMetadata(0);
  return nullsub_1;
}

unint64_t sub_1AD04BC88()
{
  return 0xD000000000000011;
}

uint64_t sub_1AD04BCA4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1D30, type metadata accessor for LinkPresentation.MessagesPayload, (uint64_t)&unk_1AD654B98);
  result = sub_1ACFF9724(&qword_1EECD1D38, type metadata accessor for LinkPresentation.MessagesPayload, (uint64_t)&unk_1AD654BC0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.MessagesPayload(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1CD8);
}

uint64_t sub_1AD04BD14(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1D40, type metadata accessor for LinkPresentation.LinkMetadata, (uint64_t)&unk_1AD654BE8);
  result = sub_1ACFF9724(&qword_1EECD1D48, type metadata accessor for LinkPresentation.LinkMetadata, (uint64_t)"q%h8D]d8");
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.LinkMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1CF0);
}

uint64_t sub_1AD04BD84(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1D50, type metadata accessor for LinkPresentation.ARAssetMetadata, (uint64_t)&unk_1AD654C38);
  result = sub_1ACFF9724(&qword_1EECD1D58, type metadata accessor for LinkPresentation.ARAssetMetadata, (uint64_t)"!%h8|]d8");
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.ARAssetMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1D48);
}

uint64_t sub_1AD04BDF4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1D60, type metadata accessor for LinkPresentation.IconMetadata, (uint64_t)&unk_1AD654C88);
  result = sub_1ACFF9724(&qword_1EECD1D68, type metadata accessor for LinkPresentation.IconMetadata, (uint64_t)&unk_1AD654CB0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.IconMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1D58);
}

uint64_t sub_1AD04BE64(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1D70, type metadata accessor for LinkPresentation.ImageMetadata, (uint64_t)&unk_1AD654CD8);
  result = sub_1ACFF9724(&qword_1EECD1D78, type metadata accessor for LinkPresentation.ImageMetadata, (uint64_t)&unk_1AD654D00);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.ImageMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1D68);
}

uint64_t sub_1AD04BED4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1D80, type metadata accessor for LinkPresentation.ArtworkMetadata, (uint64_t)&unk_1AD654D28);
  result = sub_1ACFF9724(&qword_1EECD1D88, type metadata accessor for LinkPresentation.ArtworkMetadata, (uint64_t)&unk_1AD654D50);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.ArtworkMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1D78);
}

uint64_t sub_1AD04BF44(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1D90, type metadata accessor for LinkPresentation.VideoMetadata, (uint64_t)&unk_1AD654D78);
  result = sub_1ACFF9724(&qword_1EECD1D98, type metadata accessor for LinkPresentation.VideoMetadata, (uint64_t)&unk_1AD654DA0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.VideoMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1D88);
}

uint64_t sub_1AD04BFB4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1DA0, type metadata accessor for LinkPresentation.AudioMetadata, (uint64_t)&unk_1AD654DC8);
  result = sub_1ACFF9724(&qword_1EECD1DA8, type metadata accessor for LinkPresentation.AudioMetadata, (uint64_t)&unk_1AD654DF0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.AudioMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1D98);
}

uint64_t sub_1AD04C024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04C038, (uint64_t (*)(void))sub_1AD04C07C);
}

unint64_t sub_1AD04C038()
{
  unint64_t result;

  result = qword_1EECD1DB0;
  if (!qword_1EECD1DB0)
  {
    result = MEMORY[0x1AF44BDF0]("Y#h8d\\d8", &type metadata for LinkPresentation.LyricExcerptMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1DB0);
  }
  return result;
}

unint64_t sub_1AD04C07C()
{
  unint64_t result;

  result = qword_1EECD1DB8;
  if (!qword_1EECD1DB8)
  {
    result = MEMORY[0x1AF44BDF0]("A#h8<\\d8", &type metadata for LinkPresentation.LyricExcerptMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1DB8);
  }
  return result;
}

uint64_t sub_1AD04C0C0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1DC0, type metadata accessor for LinkPresentation.SpecializationMetadata, (uint64_t)&unk_1AD6577F8);
  result = sub_1ACFF9724(&qword_1EECD1DC8, type metadata accessor for LinkPresentation.SpecializationMetadata, (uint64_t)&unk_1AD657820);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.SpecializationMetadata(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1DA8);
}

uint64_t sub_1AD04C130(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1DD0, type metadata accessor for LinkPresentation.SongMetadata, (uint64_t)&unk_1AD654E68);
  result = sub_1ACFF9724(&qword_1EECD1DD8, type metadata accessor for LinkPresentation.SongMetadata, (uint64_t)&unk_1AD654E90);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C18C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1DE0, type metadata accessor for LinkPresentation.AlbumMetadata, (uint64_t)&unk_1AD654EB8);
  result = sub_1ACFF9724(&qword_1EECD1DE8, type metadata accessor for LinkPresentation.AlbumMetadata, (uint64_t)&unk_1AD654EE0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C1E8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1DF0, type metadata accessor for LinkPresentation.MusicVideoMetadata, (uint64_t)"i\"h8<[d8");
  result = sub_1ACFF9724(&qword_1EECD1DF8, type metadata accessor for LinkPresentation.MusicVideoMetadata, (uint64_t)&unk_1AD654F30);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C244(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1E00, type metadata accessor for LinkPresentation.ArtistMetadata, (uint64_t)&unk_1AD654F58);
  result = sub_1ACFF9724(&qword_1EECD1E08, type metadata accessor for LinkPresentation.ArtistMetadata, (uint64_t)&unk_1AD654F80);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C2A0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1E10, type metadata accessor for LinkPresentation.PlaylistMetadata, (uint64_t)&unk_1AD654FA8);
  result = sub_1ACFF9724(&qword_1EECD1E18, type metadata accessor for LinkPresentation.PlaylistMetadata, (uint64_t)&unk_1AD654FD0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C2FC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1E20, type metadata accessor for LinkPresentation.RadioMetadata, (uint64_t)&unk_1AD654FF8);
  result = sub_1ACFF9724(&qword_1EECD1E28, type metadata accessor for LinkPresentation.RadioMetadata, (uint64_t)&unk_1AD655020);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C358(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1E30, type metadata accessor for LinkPresentation.SoftwareMetadata, (uint64_t)&unk_1AD655048);
  result = sub_1ACFF9724(&qword_1EECD1E38, type metadata accessor for LinkPresentation.SoftwareMetadata, (uint64_t)&unk_1AD655070);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C3B4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1E40, type metadata accessor for LinkPresentation.BookMetadata, (uint64_t)&unk_1AD655098);
  result = sub_1ACFF9724(&qword_1EECD1E48, type metadata accessor for LinkPresentation.BookMetadata, (uint64_t)&unk_1AD6550C0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C410(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1E50, type metadata accessor for LinkPresentation.AudioBookMetadata, (uint64_t)&unk_1AD6550E8);
  result = sub_1ACFF9724(&qword_1EECD1E58, type metadata accessor for LinkPresentation.AudioBookMetadata, (uint64_t)"q h8$Yd8");
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C46C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1E60, type metadata accessor for LinkPresentation.PodcastEpisodeMetadata, (uint64_t)"9 h8|Yd8");
  result = sub_1ACFF9724(&qword_1EECD1E68, type metadata accessor for LinkPresentation.PodcastEpisodeMetadata, (uint64_t)"! h8TYd8");
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C4C8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1E70, type metadata accessor for LinkPresentation.PodcastMetadata, (uint64_t)&unk_1AD655188);
  result = sub_1ACFF9724(&qword_1EECD1E78, type metadata accessor for LinkPresentation.PodcastMetadata, (uint64_t)&unk_1AD6551B0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C524(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1E80, type metadata accessor for LinkPresentation.TVEpisodeMetadata, (uint64_t)&unk_1AD6551D8);
  result = sub_1ACFF9724(&qword_1EECD1E88, type metadata accessor for LinkPresentation.TVEpisodeMetadata, (uint64_t)&unk_1AD655200);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C580(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1E90, type metadata accessor for LinkPresentation.TVSeasonMetadata, (uint64_t)&unk_1AD655228);
  result = sub_1ACFF9724(&qword_1EECD1E98, type metadata accessor for LinkPresentation.TVSeasonMetadata, (uint64_t)&unk_1AD655250);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C5DC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1EA0, type metadata accessor for LinkPresentation.TVShowMetadata, (uint64_t)&unk_1AD655278);
  result = sub_1ACFF9724(&qword_1EECD1EA8, type metadata accessor for LinkPresentation.TVShowMetadata, (uint64_t)&unk_1AD6552A0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C638(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1EB0, type metadata accessor for LinkPresentation.MovieMetadata, (uint64_t)&unk_1AD6552C8);
  result = sub_1ACFF9724(&qword_1EECD1EB8, type metadata accessor for LinkPresentation.MovieMetadata, (uint64_t)&unk_1AD6552F0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C694(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1EC0, type metadata accessor for LinkPresentation.MovieBundleMetadata, (uint64_t)&unk_1AD655318);
  result = sub_1ACFF9724(&qword_1EECD1EC8, type metadata accessor for LinkPresentation.MovieBundleMetadata, (uint64_t)&unk_1AD655340);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C6F0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1ED0, type metadata accessor for LinkPresentation.EncodedToken, (uint64_t)&unk_1AD655368);
  result = sub_1ACFF9724(&qword_1EECD1ED8, type metadata accessor for LinkPresentation.EncodedToken, (uint64_t)&unk_1AD655390);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04C74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04C760, (uint64_t (*)(void))sub_1AD04C7A4);
}

unint64_t sub_1AD04C760()
{
  unint64_t result;

  result = qword_1EECD1EE0;
  if (!qword_1EECD1EE0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6553B8, &type metadata for LinkPresentation.CloudSharingMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1EE0);
  }
  return result;
}

unint64_t sub_1AD04C7A4()
{
  unint64_t result;

  result = qword_1EECD1EE8;
  if (!qword_1EECD1EE8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6553E0, &type metadata for LinkPresentation.CloudSharingMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1EE8);
  }
  return result;
}

uint64_t sub_1AD04C7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04C7FC, (uint64_t (*)(void))sub_1AD04C840);
}

unint64_t sub_1AD04C7FC()
{
  unint64_t result;

  result = qword_1EECD1EF0;
  if (!qword_1EECD1EF0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655408, &type metadata for LinkPresentation.CloudFamilyInvitationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1EF0);
  }
  return result;
}

unint64_t sub_1AD04C840()
{
  unint64_t result;

  result = qword_1EECD1EF8;
  if (!qword_1EECD1EF8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655430, &type metadata for LinkPresentation.CloudFamilyInvitationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1EF8);
  }
  return result;
}

uint64_t sub_1AD04C884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04C898, (uint64_t (*)(void))sub_1AD04C8DC);
}

unint64_t sub_1AD04C898()
{
  unint64_t result;

  result = qword_1EECD1F00;
  if (!qword_1EECD1F00)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655458, &type metadata for LinkPresentation.GameCenterInvitationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F00);
  }
  return result;
}

unint64_t sub_1AD04C8DC()
{
  unint64_t result;

  result = qword_1EECD1F08;
  if (!qword_1EECD1F08)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655480, &type metadata for LinkPresentation.GameCenterInvitationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F08);
  }
  return result;
}

uint64_t sub_1AD04C920(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04C934, (uint64_t (*)(void))sub_1AD04C978);
}

unint64_t sub_1AD04C934()
{
  unint64_t result;

  result = qword_1EECD1F10;
  if (!qword_1EECD1F10)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6554A8, &type metadata for LinkPresentation.PostalAddress);
    atomic_store(result, (unint64_t *)&qword_1EECD1F10);
  }
  return result;
}

unint64_t sub_1AD04C978()
{
  unint64_t result;

  result = qword_1EECD1F18;
  if (!qword_1EECD1F18)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6554D0, &type metadata for LinkPresentation.PostalAddress);
    atomic_store(result, (unint64_t *)&qword_1EECD1F18);
  }
  return result;
}

uint64_t sub_1AD04C9BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04C9D0, (uint64_t (*)(void))sub_1AD04CA14);
}

unint64_t sub_1AD04C9D0()
{
  unint64_t result;

  result = qword_1EECD1F20;
  if (!qword_1EECD1F20)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6554F8, &type metadata for LinkPresentation.MapMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F20);
  }
  return result;
}

unint64_t sub_1AD04CA14()
{
  unint64_t result;

  result = qword_1EECD1F28;
  if (!qword_1EECD1F28)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655520, &type metadata for LinkPresentation.MapMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F28);
  }
  return result;
}

uint64_t sub_1AD04CA58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04CA6C, (uint64_t (*)(void))sub_1AD04CAB0);
}

unint64_t sub_1AD04CA6C()
{
  unint64_t result;

  result = qword_1EECD1F30;
  if (!qword_1EECD1F30)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655548, &type metadata for LinkPresentation.MapCollectionMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F30);
  }
  return result;
}

unint64_t sub_1AD04CAB0()
{
  unint64_t result;

  result = qword_1EECD1F38;
  if (!qword_1EECD1F38)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655570, &type metadata for LinkPresentation.MapCollectionMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F38);
  }
  return result;
}

uint64_t sub_1AD04CAF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04CB08, (uint64_t (*)(void))sub_1AD04CB4C);
}

unint64_t sub_1AD04CB08()
{
  unint64_t result;

  result = qword_1EECD1F40;
  if (!qword_1EECD1F40)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655598, &type metadata for LinkPresentation.MapCollectionPublisherMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F40);
  }
  return result;
}

unint64_t sub_1AD04CB4C()
{
  unint64_t result;

  result = qword_1EECD1F48;
  if (!qword_1EECD1F48)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6555C0, &type metadata for LinkPresentation.MapCollectionPublisherMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F48);
  }
  return result;
}

uint64_t sub_1AD04CB90(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1F50, type metadata accessor for LinkPresentation.FileMetadata, (uint64_t)&unk_1AD6555E8);
  result = sub_1ACFF9724(&qword_1EECD1F58, type metadata accessor for LinkPresentation.FileMetadata, (uint64_t)"q\x1Bh8dSd8");
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04CBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04CC00, (uint64_t (*)(void))sub_1AD04CC44);
}

unint64_t sub_1AD04CC00()
{
  unint64_t result;

  result = qword_1EECD1F60;
  if (!qword_1EECD1F60)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655638, &type metadata for LinkPresentation.AppleNewsMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F60);
  }
  return result;
}

unint64_t sub_1AD04CC44()
{
  unint64_t result;

  result = qword_1EECD1F68;
  if (!qword_1EECD1F68)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655660, &type metadata for LinkPresentation.AppleNewsMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F68);
  }
  return result;
}

uint64_t sub_1AD04CC88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04CC9C, (uint64_t (*)(void))sub_1AD04CCE0);
}

unint64_t sub_1AD04CC9C()
{
  unint64_t result;

  result = qword_1EECD1F70;
  if (!qword_1EECD1F70)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655688, &type metadata for LinkPresentation.StocksMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F70);
  }
  return result;
}

unint64_t sub_1AD04CCE0()
{
  unint64_t result;

  result = qword_1EECD1F78;
  if (!qword_1EECD1F78)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6556B0, &type metadata for LinkPresentation.StocksMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F78);
  }
  return result;
}

uint64_t sub_1AD04CD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04CD38, (uint64_t (*)(void))sub_1AD04CD7C);
}

unint64_t sub_1AD04CD38()
{
  unint64_t result;

  result = qword_1EECD1F80;
  if (!qword_1EECD1F80)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6556D8, &type metadata for LinkPresentation.AppleTVMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F80);
  }
  return result;
}

unint64_t sub_1AD04CD7C()
{
  unint64_t result;

  result = qword_1EECD1F88;
  if (!qword_1EECD1F88)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655700, &type metadata for LinkPresentation.AppleTVMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1F88);
  }
  return result;
}

uint64_t sub_1AD04CDC0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1F90, type metadata accessor for LinkPresentation.PhotosMomentMetadata, (uint64_t)&unk_1AD655728);
  result = sub_1ACFF9724(&qword_1EECD1F98, type metadata accessor for LinkPresentation.PhotosMomentMetadata, (uint64_t)&unk_1AD655750);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04CE1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04CE30, (uint64_t (*)(void))sub_1AD04CE74);
}

unint64_t sub_1AD04CE30()
{
  unint64_t result;

  result = qword_1EECD1FA0;
  if (!qword_1EECD1FA0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655778, &type metadata for LinkPresentation.PhotosStatusMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1FA0);
  }
  return result;
}

unint64_t sub_1AD04CE74()
{
  unint64_t result;

  result = qword_1EECD1FA8;
  if (!qword_1EECD1FA8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6557A0, &type metadata for LinkPresentation.PhotosStatusMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1FA8);
  }
  return result;
}

uint64_t sub_1AD04CEB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04CECC, (uint64_t (*)(void))sub_1AD04CF10);
}

unint64_t sub_1AD04CECC()
{
  unint64_t result;

  result = qword_1EECD1FB0;
  if (!qword_1EECD1FB0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6557C8, &type metadata for LinkPresentation.PhotosSharedLibraryInvitationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1FB0);
  }
  return result;
}

unint64_t sub_1AD04CF10()
{
  unint64_t result;

  result = qword_1EECD1FB8;
  if (!qword_1EECD1FB8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6557F0, &type metadata for LinkPresentation.PhotosSharedLibraryInvitationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1FB8);
  }
  return result;
}

uint64_t sub_1AD04CF54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04CF68, (uint64_t (*)(void))sub_1AD04CFAC);
}

unint64_t sub_1AD04CF68()
{
  unint64_t result;

  result = qword_1EECD1FC0;
  if (!qword_1EECD1FC0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655818, &type metadata for LinkPresentation.BusinessChatMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1FC0);
  }
  return result;
}

unint64_t sub_1AD04CFAC()
{
  unint64_t result;

  result = qword_1EECD1FC8;
  if (!qword_1EECD1FC8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655840, &type metadata for LinkPresentation.BusinessChatMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1FC8);
  }
  return result;
}

uint64_t sub_1AD04CFF0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD1FD0, type metadata accessor for LinkPresentation.WalletPassMetadata, (uint64_t)&unk_1AD655868);
  result = sub_1ACFF9724(&qword_1EECD1FD8, type metadata accessor for LinkPresentation.WalletPassMetadata, (uint64_t)&unk_1AD655890);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04D04C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D060, (uint64_t (*)(void))sub_1AD04D0A4);
}

unint64_t sub_1AD04D060()
{
  unint64_t result;

  result = qword_1EECD1FE0;
  if (!qword_1EECD1FE0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6558B8, &type metadata for LinkPresentation.AppStoreStoryMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1FE0);
  }
  return result;
}

unint64_t sub_1AD04D0A4()
{
  unint64_t result;

  result = qword_1EECD1FE8;
  if (!qword_1EECD1FE8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6558E0, &type metadata for LinkPresentation.AppStoreStoryMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1FE8);
  }
  return result;
}

uint64_t sub_1AD04D0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D0FC, (uint64_t (*)(void))sub_1AD04D140);
}

unint64_t sub_1AD04D0FC()
{
  unint64_t result;

  result = qword_1EECD1FF0;
  if (!qword_1EECD1FF0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655908, &type metadata for LinkPresentation.SummarizedLinkMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1FF0);
  }
  return result;
}

unint64_t sub_1AD04D140()
{
  unint64_t result;

  result = qword_1EECD1FF8;
  if (!qword_1EECD1FF8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655930, &type metadata for LinkPresentation.SummarizedLinkMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD1FF8);
  }
  return result;
}

uint64_t sub_1AD04D184(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D198, (uint64_t (*)(void))sub_1AD04D1DC);
}

unint64_t sub_1AD04D198()
{
  unint64_t result;

  result = qword_1EECD2000;
  if (!qword_1EECD2000)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655958, &type metadata for LinkPresentation.AssociatedApplicationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD2000);
  }
  return result;
}

unint64_t sub_1AD04D1DC()
{
  unint64_t result;

  result = qword_1EECD2008;
  if (!qword_1EECD2008)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655980, &type metadata for LinkPresentation.AssociatedApplicationMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD2008);
  }
  return result;
}

uint64_t sub_1AD04D220(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D234, (uint64_t (*)(void))sub_1AD04D278);
}

unint64_t sub_1AD04D234()
{
  unint64_t result;

  result = qword_1EECD2010;
  if (!qword_1EECD2010)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6559A8, &type metadata for LinkPresentation.FaceTimeInviteMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD2010);
  }
  return result;
}

unint64_t sub_1AD04D278()
{
  unint64_t result;

  result = qword_1EECD2018;
  if (!qword_1EECD2018)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6559D0, &type metadata for LinkPresentation.FaceTimeInviteMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD2018);
  }
  return result;
}

uint64_t sub_1AD04D2BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D2D0, (uint64_t (*)(void))sub_1AD04D314);
}

unint64_t sub_1AD04D2D0()
{
  unint64_t result;

  result = qword_1EECD2020;
  if (!qword_1EECD2020)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6559F8, &type metadata for LinkPresentation.PasswordsInviteMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD2020);
  }
  return result;
}

unint64_t sub_1AD04D314()
{
  unint64_t result;

  result = qword_1EECD2028;
  if (!qword_1EECD2028)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655A20, &type metadata for LinkPresentation.PasswordsInviteMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECD2028);
  }
  return result;
}

uint64_t sub_1AD04D358(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD2030, type metadata accessor for LinkPresentation.SharedObjectMetadata, (uint64_t)&unk_1AD655A48);
  result = sub_1ACFF9724(&qword_1EECD2038, type metadata accessor for LinkPresentation.SharedObjectMetadata, (uint64_t)&unk_1AD655A70);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD04D3B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D3C8, (uint64_t (*)(void))sub_1AD04D40C);
}

unint64_t sub_1AD04D3C8()
{
  unint64_t result;

  result = qword_1EECD2040;
  if (!qword_1EECD2040)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655AE8, &type metadata for LinkPresentation.PlaceholderARAsset.Properties);
    atomic_store(result, (unint64_t *)&qword_1EECD2040);
  }
  return result;
}

unint64_t sub_1AD04D40C()
{
  unint64_t result;

  result = qword_1EECD2048;
  if (!qword_1EECD2048)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655B10, &type metadata for LinkPresentation.PlaceholderARAsset.Properties);
    atomic_store(result, (unint64_t *)&qword_1EECD2048);
  }
  return result;
}

uint64_t sub_1AD04D450(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D464, (uint64_t (*)(void))sub_1AD04D4A8);
}

unint64_t sub_1AD04D464()
{
  unint64_t result;

  result = qword_1EECD2050;
  if (!qword_1EECD2050)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655A98, &type metadata for LinkPresentation.PlaceholderARAsset);
    atomic_store(result, (unint64_t *)&qword_1EECD2050);
  }
  return result;
}

unint64_t sub_1AD04D4A8()
{
  unint64_t result;

  result = qword_1EECD2058;
  if (!qword_1EECD2058)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655AC0, &type metadata for LinkPresentation.PlaceholderARAsset);
    atomic_store(result, (unint64_t *)&qword_1EECD2058);
  }
  return result;
}

uint64_t sub_1AD04D4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D500, (uint64_t (*)(void))sub_1AD04D544);
}

unint64_t sub_1AD04D500()
{
  unint64_t result;

  result = qword_1EECD2060;
  if (!qword_1EECD2060)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655B88, &type metadata for LinkPresentation.PlaceholderImage.Properties);
    atomic_store(result, (unint64_t *)&qword_1EECD2060);
  }
  return result;
}

unint64_t sub_1AD04D544()
{
  unint64_t result;

  result = qword_1EECD2068;
  if (!qword_1EECD2068)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655BB0, &type metadata for LinkPresentation.PlaceholderImage.Properties);
    atomic_store(result, (unint64_t *)&qword_1EECD2068);
  }
  return result;
}

uint64_t sub_1AD04D588(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D59C, (uint64_t (*)(void))sub_1AD04D5E0);
}

unint64_t sub_1AD04D59C()
{
  unint64_t result;

  result = qword_1EECD2070;
  if (!qword_1EECD2070)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655B38, &type metadata for LinkPresentation.PlaceholderImage);
    atomic_store(result, (unint64_t *)&qword_1EECD2070);
  }
  return result;
}

unint64_t sub_1AD04D5E0()
{
  unint64_t result;

  result = qword_1EECD2078;
  if (!qword_1EECD2078)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655B60, &type metadata for LinkPresentation.PlaceholderImage);
    atomic_store(result, (unint64_t *)&qword_1EECD2078);
  }
  return result;
}

uint64_t sub_1AD04D624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D638, (uint64_t (*)(void))sub_1AD04D67C);
}

unint64_t sub_1AD04D638()
{
  unint64_t result;

  result = qword_1EECD2080;
  if (!qword_1EECD2080)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD657848, &type metadata for LinkPresentation.Video.Attachment);
    atomic_store(result, (unint64_t *)&qword_1EECD2080);
  }
  return result;
}

unint64_t sub_1AD04D67C()
{
  unint64_t result;

  result = qword_1EECD2088;
  if (!qword_1EECD2088)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD657870, &type metadata for LinkPresentation.Video.Attachment);
    atomic_store(result, (unint64_t *)&qword_1EECD2088);
  }
  return result;
}

uint64_t sub_1AD04D6C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD04D6D4, (uint64_t (*)(void))sub_1AD04D718);
}

unint64_t sub_1AD04D6D4()
{
  unint64_t result;

  result = qword_1EECD2090;
  if (!qword_1EECD2090)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655C28, &type metadata for LinkPresentation.Video.Properties);
    atomic_store(result, (unint64_t *)&qword_1EECD2090);
  }
  return result;
}

unint64_t sub_1AD04D718()
{
  unint64_t result;

  result = qword_1EECD2098;
  if (!qword_1EECD2098)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD655C50, &type metadata for LinkPresentation.Video.Properties);
    atomic_store(result, (unint64_t *)&qword_1EECD2098);
  }
  return result;
}

uint64_t sub_1AD04D75C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD20A0, type metadata accessor for LinkPresentation.Video, (uint64_t)&unk_1AD655BD8);
  result = sub_1ACFF9724(&qword_1EECD20A8, type metadata accessor for LinkPresentation.Video, (uint64_t)&unk_1AD655C00);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.Video(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1EF0);
}

uint64_t sub_1AD04D7CC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD20B0, type metadata accessor for LinkPresentation.Audio, (uint64_t)&unk_1AD655C78);
  result = sub_1ACFF9724(&qword_1EECD20B8, type metadata accessor for LinkPresentation.Audio, (uint64_t)&unk_1AD655CA0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for LinkPresentation.Audio(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1F00);
}

unint64_t sub_1AD04D83C()
{
  return 0xD000000000000011;
}

ValueMetadata *type metadata accessor for LinkPresentation()
{
  return &type metadata for LinkPresentation;
}

_QWORD *sub_1AD04D868(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _DWORD *v3;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  __int128 v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD *v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  int *v81;
  uint64_t v82;
  _DWORD *v83;
  _DWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  _QWORD *v93;
  _QWORD *v94;
  uint64_t v95;
  void (*v96)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  __int128 v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  _DWORD *v105;
  _DWORD *v106;
  int *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  void (*v122)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  _DWORD *v132;
  _DWORD *v133;
  int *v134;
  uint64_t v135;
  unsigned int (*v136)(_DWORD *, uint64_t, int *);
  uint64_t v137;
  uint64_t v138;
  char *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  _QWORD *v147;
  _QWORD *v148;
  uint64_t v149;
  void (*v150)(_DWORD *, _QWORD, uint64_t, int *);
  _DWORD *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  int *v155;
  unsigned int (*v156)(char *, uint64_t, int *);
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  void (*v171)(char *, _QWORD, uint64_t, int *);
  uint64_t v172;
  _DWORD *v173;
  _DWORD *v174;
  int *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  _QWORD *v183;
  _QWORD *v184;
  uint64_t v185;
  uint64_t v186;
  _QWORD *v187;
  _QWORD *v188;
  uint64_t v189;
  void (*v190)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  void (*v202)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v203;
  _DWORD *v204;
  _DWORD *v205;
  int *v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  _QWORD *v214;
  _QWORD *v215;
  uint64_t v216;
  uint64_t v217;
  _QWORD *v218;
  _QWORD *v219;
  uint64_t v220;
  void (*v221)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  int *v226;
  char *v227;
  uint64_t v228;
  char *v229;
  char *v230;
  uint64_t v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  uint64_t v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  _QWORD *v245;
  _QWORD *v246;
  int *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  unsigned int (*v257)(char *, uint64_t, uint64_t);
  uint64_t v258;
  uint64_t v259;
  _QWORD *v260;
  _QWORD *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  uint64_t v276;
  unsigned int (*v277)(char *, uint64_t, uint64_t);
  uint64_t v278;
  uint64_t v279;
  char *__dst;
  _QWORD *v281;
  uint64_t v282;
  uint64_t v283;
  int *v284;
  _DWORD *v285;
  unsigned int (*v286)(char *, uint64_t, uint64_t);
  uint64_t v287;

  v3 = a2;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
    v8 = *((_QWORD *)v7 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v8 + 48))(v3, 1, v7))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD0);
      memcpy(a1, v3, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v278 = v8;
      v279 = v6;
      *(_DWORD *)a1 = *v3;
      v11 = v7[5];
      v12 = (char *)a1 + v11;
      v13 = (char *)v3 + v11;
      v14 = sub_1AD63AF28();
      v15 = *(_QWORD *)(v14 - 8);
      v286 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
      if (v286(v13, 1, v14))
      {
        v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      }
      v17 = v7[6];
      v18 = (char *)a1 + v17;
      v19 = (char *)v3 + v17;
      v283 = v15;
      if (v286((char *)v3 + v17, 1, v14))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v19, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
      }
      v21 = v7[7];
      v22 = (_QWORD *)((char *)a1 + v21);
      v23 = (_QWORD *)((char *)v3 + v21);
      v24 = v23[1];
      *v22 = *v23;
      v22[1] = v24;
      v25 = v7[8];
      v26 = (_QWORD *)((char *)a1 + v25);
      v27 = (_QWORD *)((char *)v3 + v25);
      v28 = v27[1];
      *v26 = *v27;
      v26[1] = v28;
      v29 = v7[9];
      v30 = (_QWORD *)((char *)a1 + v29);
      v31 = (_QWORD *)((char *)v3 + v29);
      v32 = v31[1];
      *v30 = *v31;
      v30[1] = v32;
      v33 = v7[10];
      v34 = (_QWORD *)((char *)a1 + v33);
      v35 = (_QWORD *)((char *)v3 + v33);
      v36 = v35[1];
      *v34 = *v35;
      v34[1] = v36;
      v37 = v7[11];
      v38 = (_QWORD *)((char *)a1 + v37);
      v39 = (_QWORD *)((char *)v3 + v37);
      v40 = v39[1];
      *v38 = *v39;
      v38[1] = v40;
      v284 = v7;
      v41 = v7[12];
      v42 = (char *)a1 + v41;
      v43 = (char *)v3 + v41;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v282 = v14;
      if (v286(v43, 1, v14))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v42, v43, v14);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v42, 0, 1, v14);
      }
      v45 = v7[13];
      v46 = (_QWORD *)((char *)a1 + v45);
      v47 = (_QWORD *)((char *)v3 + v45);
      v48 = v47[1];
      *v46 = *v47;
      v46[1] = v48;
      v49 = v7[14];
      v50 = (_QWORD *)((char *)a1 + v49);
      v51 = (_QWORD *)((char *)v3 + v49);
      v52 = v51[1];
      *v50 = *v51;
      v50[1] = v52;
      v53 = v7[15];
      v54 = (_QWORD *)((char *)a1 + v53);
      v55 = (_QWORD *)((char *)v3 + v53);
      v56 = v55[1];
      *v54 = *v55;
      v54[1] = v56;
      v57 = v7[16];
      v58 = (_QWORD *)((char *)a1 + v57);
      v59 = (_QWORD *)((char *)v3 + v57);
      v60 = v59[1];
      *v58 = *v59;
      v58[1] = v60;
      *((_BYTE *)a1 + v7[17]) = *((_BYTE *)v3 + v7[17]);
      v61 = v7[18];
      v62 = (char *)a1 + v61;
      v63 = (char *)v3 + v61;
      v64 = *((_OWORD *)v63 + 1);
      *(_OWORD *)v62 = *(_OWORD *)v63;
      *((_OWORD *)v62 + 1) = v64;
      v62[32] = v63[32];
      v65 = v7[19];
      v66 = (_QWORD *)((char *)a1 + v65);
      v67 = (_QWORD *)((char *)v3 + v65);
      v68 = v67[1];
      *v66 = *v67;
      v66[1] = v68;
      v69 = v7[20];
      v70 = (_QWORD *)((char *)a1 + v69);
      v71 = (_QWORD *)((char *)v3 + v69);
      v72 = v71[1];
      *v70 = *v71;
      v70[1] = v72;
      v73 = v7[21];
      v74 = (char *)a1 + v73;
      v75 = (char *)v3 + v73;
      v76 = *(_QWORD *)((char *)v3 + v73 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v76 == 1)
      {
        v77 = *((_OWORD *)v75 + 5);
        *((_OWORD *)v74 + 4) = *((_OWORD *)v75 + 4);
        *((_OWORD *)v74 + 5) = v77;
        *((_OWORD *)v74 + 6) = *((_OWORD *)v75 + 6);
        *(_OWORD *)(v74 + 105) = *(_OWORD *)(v75 + 105);
        v78 = *((_OWORD *)v75 + 1);
        *(_OWORD *)v74 = *(_OWORD *)v75;
        *((_OWORD *)v74 + 1) = v78;
        v79 = *((_OWORD *)v75 + 3);
        *((_OWORD *)v74 + 2) = *((_OWORD *)v75 + 2);
        *((_OWORD *)v74 + 3) = v79;
      }
      else
      {
        *(_OWORD *)v74 = *(_OWORD *)v75;
        *((_QWORD *)v74 + 2) = v76;
        *(_OWORD *)(v74 + 24) = *(_OWORD *)(v75 + 24);
        *((_QWORD *)v74 + 5) = *((_QWORD *)v75 + 5);
        v80 = *((_OWORD *)v75 + 4);
        *((_OWORD *)v74 + 3) = *((_OWORD *)v75 + 3);
        *((_OWORD *)v74 + 4) = v80;
        v74[80] = v75[80];
        *(_OWORD *)(v74 + 88) = *(_OWORD *)(v75 + 88);
        *(_OWORD *)(v74 + 104) = *(_OWORD *)(v75 + 104);
        v74[120] = v75[120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v81 = v284;
      v82 = v284[22];
      v83 = (_DWORD *)((char *)a1 + v82);
      v84 = (_DWORD *)((char *)v3 + v82);
      v85 = type metadata accessor for LinkPresentation.IconMetadata(0);
      v86 = *(_QWORD *)(v85 - 8);
      v285 = v3;
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v86 + 48))(v84, 1, v85))
      {
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
      }
      else
      {
        *v83 = *v84;
        v88 = *(int *)(v85 + 20);
        v89 = (char *)v83 + v88;
        v90 = (char *)v84 + v88;
        if (v286((char *)v84 + v88, 1, v282))
        {
          v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v89, v90, v282);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v89, 0, 1, v282);
        }
        v92 = *(int *)(v85 + 24);
        v93 = (_QWORD *)((char *)v83 + v92);
        v94 = (_QWORD *)((char *)v84 + v92);
        v95 = v94[1];
        *v93 = *v94;
        v93[1] = v95;
        v96 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v86 + 56);
        swift_bridgeObjectRetain();
        v96(v83, 0, 1, v85);
        v81 = v284;
        v3 = v285;
      }
      v97 = v81[23];
      v98 = (char *)a1 + v97;
      v99 = (char *)v3 + v97;
      v100 = *((_QWORD *)v99 + 2);
      if (v100 == 1)
      {
        v101 = *((_OWORD *)v99 + 1);
        *(_OWORD *)v98 = *(_OWORD *)v99;
        *((_OWORD *)v98 + 1) = v101;
        *((_QWORD *)v98 + 4) = *((_QWORD *)v99 + 4);
      }
      else
      {
        *(_OWORD *)v98 = *(_OWORD *)v99;
        v102 = *((_QWORD *)v99 + 3);
        v103 = *((_QWORD *)v99 + 4);
        *((_QWORD *)v98 + 2) = v100;
        *((_QWORD *)v98 + 3) = v102;
        *((_QWORD *)v98 + 4) = v103;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v104 = v81[24];
      v105 = (_DWORD *)((char *)a1 + v104);
      v106 = (_DWORD *)((char *)v3 + v104);
      v107 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
      v108 = *((_QWORD *)v107 - 1);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v108 + 48))(v106, 1, v107))
      {
        v109 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
        memcpy(v105, v106, *(_QWORD *)(*(_QWORD *)(v109 - 8) + 64));
      }
      else
      {
        *v105 = *v106;
        v110 = v107[5];
        v111 = (char *)v105 + v110;
        v112 = (char *)v106 + v110;
        if (v286((char *)v106 + v110, 1, v282))
        {
          v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v111, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v111, v112, v282);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v111, 0, 1, v282);
        }
        v114 = v107[6];
        v115 = (_QWORD *)((char *)v105 + v114);
        v116 = (_QWORD *)((char *)v106 + v114);
        v117 = v116[1];
        *v115 = *v116;
        v115[1] = v117;
        v118 = v107[7];
        v119 = (_QWORD *)((char *)v105 + v118);
        v120 = (_QWORD *)((char *)v106 + v118);
        v121 = v120[1];
        *v119 = *v120;
        v119[1] = v121;
        v122 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v108 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v122(v105, 0, 1, v107);
        v81 = v284;
        v3 = v285;
      }
      v123 = v81[25];
      v124 = (char *)a1 + v123;
      v125 = (char *)v3 + v123;
      v126 = *((_QWORD *)v125 + 2);
      if (v126 == 1)
      {
        v127 = *((_OWORD *)v125 + 5);
        *((_OWORD *)v124 + 4) = *((_OWORD *)v125 + 4);
        *((_OWORD *)v124 + 5) = v127;
        *((_OWORD *)v124 + 6) = *((_OWORD *)v125 + 6);
        *(_OWORD *)(v124 + 105) = *(_OWORD *)(v125 + 105);
        v128 = *((_OWORD *)v125 + 1);
        *(_OWORD *)v124 = *(_OWORD *)v125;
        *((_OWORD *)v124 + 1) = v128;
        v129 = *((_OWORD *)v125 + 3);
        *((_OWORD *)v124 + 2) = *((_OWORD *)v125 + 2);
        *((_OWORD *)v124 + 3) = v129;
      }
      else
      {
        *(_OWORD *)v124 = *(_OWORD *)v125;
        *((_QWORD *)v124 + 2) = v126;
        *(_OWORD *)(v124 + 24) = *(_OWORD *)(v125 + 24);
        *((_QWORD *)v124 + 5) = *((_QWORD *)v125 + 5);
        v130 = *((_OWORD *)v125 + 4);
        *((_OWORD *)v124 + 3) = *((_OWORD *)v125 + 3);
        *((_OWORD *)v124 + 4) = v130;
        v124[80] = v125[80];
        *(_OWORD *)(v124 + 88) = *(_OWORD *)(v125 + 88);
        *(_OWORD *)(v124 + 104) = *(_OWORD *)(v125 + 104);
        v124[120] = v125[120];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)((char *)a1 + v81[26]) = *(_QWORD *)((char *)v3 + v81[26]);
      v131 = v81[27];
      v132 = (_DWORD *)((char *)a1 + v131);
      v133 = (_DWORD *)((char *)v3 + v131);
      v134 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
      v135 = *((_QWORD *)v134 - 1);
      v136 = *(unsigned int (**)(_DWORD *, uint64_t, int *))(v135 + 48);
      swift_bridgeObjectRetain();
      if (v136(v133, 1, v134))
      {
        v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
        memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
      }
      else
      {
        *v132 = *v133;
        v138 = v134[5];
        v139 = (char *)v132 + v138;
        v140 = (char *)v133 + v138;
        if (v286((char *)v133 + v138, 1, v282))
        {
          v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v141 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v139, v140, v282);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v139, 0, 1, v282);
        }
        v142 = v134[6];
        v143 = (_QWORD *)((char *)v132 + v142);
        v144 = (_QWORD *)((char *)v133 + v142);
        v145 = v144[1];
        *v143 = *v144;
        v143[1] = v145;
        *(_OWORD *)((char *)v132 + v134[7]) = *(_OWORD *)((char *)v133 + v134[7]);
        v146 = v134[8];
        v147 = (_QWORD *)((char *)v132 + v146);
        v148 = (_QWORD *)((char *)v133 + v146);
        v149 = v148[1];
        *v147 = *v148;
        v147[1] = v149;
        v150 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v135 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v150(v132, 0, 1, v134);
        v81 = v284;
      }
      v151 = v285;
      *(_QWORD *)((char *)a1 + v81[28]) = *(_QWORD *)((char *)v285 + v81[28]);
      *(_QWORD *)((char *)a1 + v81[29]) = *(_QWORD *)((char *)v285 + v81[29]);
      v152 = v81[30];
      v153 = (char *)a1 + v152;
      v154 = (char *)v285 + v152;
      v155 = (int *)type metadata accessor for LinkPresentation.Video(0);
      v276 = *((_QWORD *)v155 - 1);
      v156 = *(unsigned int (**)(char *, uint64_t, int *))(v276 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v156(v154, 1, v155))
      {
        v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
        memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
      }
      else
      {
        if (v286(v154, 1, v282))
        {
          v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v153, v154, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v153, v154, v282);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v153, 0, 1, v282);
        }
        v159 = v155[5];
        v160 = &v153[v159];
        v161 = &v154[v159];
        if (v286(&v154[v159], 1, v282))
        {
          v162 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v160, v161, *(_QWORD *)(*(_QWORD *)(v162 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v160, v161, v282);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v160, 0, 1, v282);
        }
        v163 = v155[6];
        v164 = &v153[v163];
        v165 = &v154[v163];
        v166 = *((_QWORD *)v165 + 1);
        *(_QWORD *)v164 = *(_QWORD *)v165;
        *((_QWORD *)v164 + 1) = v166;
        v153[v155[7]] = v154[v155[7]];
        *(_QWORD *)&v153[v155[8]] = *(_QWORD *)&v154[v155[8]];
        v167 = v155[9];
        v168 = &v153[v167];
        v169 = &v154[v167];
        *v168 = *v169;
        v170 = *((_QWORD *)v169 + 2);
        *((_QWORD *)v168 + 1) = *((_QWORD *)v169 + 1);
        *((_QWORD *)v168 + 2) = v170;
        v171 = *(void (**)(char *, _QWORD, uint64_t, int *))(v276 + 56);
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        v171(v153, 0, 1, v155);
        v151 = v285;
      }
      v172 = v81[31];
      v173 = (_DWORD *)((char *)a1 + v172);
      v174 = (_DWORD *)((char *)v151 + v172);
      v175 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
      v176 = *((_QWORD *)v175 - 1);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v176 + 48))(v174, 1, v175))
      {
        v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
        memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
      }
      else
      {
        *v173 = *v174;
        v178 = v175[5];
        v179 = (char *)v173 + v178;
        v180 = (char *)v174 + v178;
        if (v286((char *)v174 + v178, 1, v282))
        {
          v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v181 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v179, v180, v282);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v179, 0, 1, v282);
        }
        v182 = v175[6];
        v183 = (_QWORD *)((char *)v173 + v182);
        v184 = (_QWORD *)((char *)v174 + v182);
        v185 = v184[1];
        *v183 = *v184;
        v183[1] = v185;
        *(_OWORD *)((char *)v173 + v175[7]) = *(_OWORD *)((char *)v174 + v175[7]);
        v186 = v175[8];
        v187 = (_QWORD *)((char *)v173 + v186);
        v188 = (_QWORD *)((char *)v174 + v186);
        v189 = v188[1];
        *v187 = *v188;
        v187[1] = v189;
        v190 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v176 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v190(v173, 0, 1, v175);
        v151 = v285;
      }
      v191 = v81[32];
      v192 = (char *)a1 + v191;
      v193 = (char *)v151 + v191;
      v194 = type metadata accessor for LinkPresentation.Audio(0);
      v195 = *(_QWORD *)(v194 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v195 + 48))(v193, 1, v194))
      {
        v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
        memcpy(v192, v193, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
      }
      else
      {
        if (v286(v193, 1, v282))
        {
          v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v192, v193, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v192, v193, v282);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v192, 0, 1, v282);
        }
        v198 = *(int *)(v194 + 20);
        v199 = &v192[v198];
        v200 = &v193[v198];
        v201 = *((_QWORD *)v200 + 1);
        *(_QWORD *)v199 = *(_QWORD *)v200;
        *((_QWORD *)v199 + 1) = v201;
        v202 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v195 + 56);
        swift_bridgeObjectRetain();
        v202(v192, 0, 1, v194);
        v151 = v285;
      }
      v203 = v81[33];
      v204 = (_DWORD *)((char *)a1 + v203);
      v205 = (_DWORD *)((char *)v151 + v203);
      v206 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
      v207 = *((_QWORD *)v206 - 1);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v207 + 48))(v205, 1, v206))
      {
        v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
        memcpy(v204, v205, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
      }
      else
      {
        *v204 = *v205;
        v209 = v206[5];
        v210 = (char *)v204 + v209;
        v211 = (char *)v205 + v209;
        if (v286((char *)v205 + v209, 1, v282))
        {
          v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v210, v211, v282);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v210, 0, 1, v282);
        }
        v213 = v206[6];
        v214 = (_QWORD *)((char *)v204 + v213);
        v215 = (_QWORD *)((char *)v205 + v213);
        v216 = v215[1];
        *v214 = *v215;
        v214[1] = v216;
        v217 = v206[7];
        v218 = (_QWORD *)((char *)v204 + v217);
        v219 = (_QWORD *)((char *)v205 + v217);
        v220 = v219[1];
        *v218 = *v219;
        v218[1] = v220;
        v221 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v207 + 56);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v221(v204, 0, 1, v206);
        v151 = v285;
      }
      *(_QWORD *)((char *)a1 + v81[34]) = *(_QWORD *)((char *)v151 + v81[34]);
      *(_QWORD *)((char *)a1 + v81[35]) = *(_QWORD *)((char *)v151 + v81[35]);
      *(_QWORD *)((char *)a1 + v81[36]) = *(_QWORD *)((char *)v151 + v81[36]);
      *(_QWORD *)((char *)a1 + v81[37]) = *(_QWORD *)((char *)v151 + v81[37]);
      *(_QWORD *)((char *)a1 + v81[38]) = *(_QWORD *)((char *)v151 + v81[38]);
      *(_QWORD *)((char *)a1 + v81[39]) = *(_QWORD *)((char *)v151 + v81[39]);
      *(_QWORD *)((char *)a1 + v81[40]) = *(_QWORD *)((char *)v151 + v81[40]);
      v222 = v81[41];
      v281 = a1;
      __dst = (char *)a1 + v222;
      v223 = (char *)v151 + v222;
      v224 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
      v277 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v224 - 8) + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v277(v223, 1, v224))
      {
        v227 = (char *)&loc_1AD04E77C + 4 * (unsigned __int16)a3tv[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
      memcpy(__dst, v223, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
      v226 = v284;
      v3 = v285;
      v228 = v284[42];
      v229 = (char *)a1 + v228;
      v230 = (char *)v285 + v228;
      v231 = *(_QWORD *)((char *)v285 + v228 + 8);
      if (v231 == 1)
      {
        v232 = *((_OWORD *)v230 + 9);
        *((_OWORD *)v229 + 8) = *((_OWORD *)v230 + 8);
        *((_OWORD *)v229 + 9) = v232;
        *((_OWORD *)v229 + 10) = *((_OWORD *)v230 + 10);
        *((_QWORD *)v229 + 22) = *((_QWORD *)v230 + 22);
        v233 = *((_OWORD *)v230 + 5);
        *((_OWORD *)v229 + 4) = *((_OWORD *)v230 + 4);
        *((_OWORD *)v229 + 5) = v233;
        v234 = *((_OWORD *)v230 + 7);
        *((_OWORD *)v229 + 6) = *((_OWORD *)v230 + 6);
        *((_OWORD *)v229 + 7) = v234;
        v235 = *((_OWORD *)v230 + 1);
        *(_OWORD *)v229 = *(_OWORD *)v230;
        *((_OWORD *)v229 + 1) = v235;
        v236 = *((_OWORD *)v230 + 3);
        *((_OWORD *)v229 + 2) = *((_OWORD *)v230 + 2);
        *((_OWORD *)v229 + 3) = v236;
      }
      else
      {
        *(_QWORD *)v229 = *(_QWORD *)v230;
        *((_QWORD *)v229 + 1) = v231;
        v237 = *((_QWORD *)v230 + 4);
        swift_bridgeObjectRetain();
        if (v237 == 1)
        {
          v238 = *((_OWORD *)v230 + 6);
          *((_OWORD *)v229 + 5) = *((_OWORD *)v230 + 5);
          *((_OWORD *)v229 + 6) = v238;
          *((_OWORD *)v229 + 7) = *((_OWORD *)v230 + 7);
          *(_OWORD *)(v229 + 121) = *(_OWORD *)(v230 + 121);
          v239 = *((_OWORD *)v230 + 2);
          *((_OWORD *)v229 + 1) = *((_OWORD *)v230 + 1);
          *((_OWORD *)v229 + 2) = v239;
          v240 = *((_OWORD *)v230 + 4);
          *((_OWORD *)v229 + 3) = *((_OWORD *)v230 + 3);
          *((_OWORD *)v229 + 4) = v240;
        }
        else
        {
          *((_OWORD *)v229 + 1) = *((_OWORD *)v230 + 1);
          *((_QWORD *)v229 + 4) = v237;
          *(_OWORD *)(v229 + 40) = *(_OWORD *)(v230 + 40);
          *((_QWORD *)v229 + 7) = *((_QWORD *)v230 + 7);
          v241 = *((_OWORD *)v230 + 5);
          *((_OWORD *)v229 + 4) = *((_OWORD *)v230 + 4);
          *((_OWORD *)v229 + 5) = v241;
          v229[96] = v230[96];
          *(_OWORD *)(v229 + 104) = *(_OWORD *)(v230 + 104);
          *(_OWORD *)(v229 + 120) = *(_OWORD *)(v230 + 120);
          v229[136] = v230[136];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        v242 = *((_QWORD *)v230 + 19);
        *((_QWORD *)v229 + 18) = *((_QWORD *)v230 + 18);
        *((_QWORD *)v229 + 19) = v242;
        v243 = *((_QWORD *)v230 + 21);
        *((_QWORD *)v229 + 20) = *((_QWORD *)v230 + 20);
        *((_QWORD *)v229 + 21) = v243;
        *((_QWORD *)v229 + 22) = *((_QWORD *)v230 + 22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v244 = v284[43];
      v245 = (_QWORD *)((char *)a1 + v244);
      v246 = (_QWORD *)((char *)v285 + v244);
      v247 = (int *)type metadata accessor for CollaborationMetadata();
      v248 = *((_QWORD *)v247 - 1);
      if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v248 + 48))(v246, 1, v247))
      {
        v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
        memcpy(v245, v246, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
      }
      else
      {
        v287 = v248;
        v250 = v246[1];
        *v245 = *v246;
        v245[1] = v250;
        v251 = v246[3];
        v245[2] = v246[2];
        v245[3] = v251;
        v252 = v247[6];
        v253 = (char *)v245 + v252;
        v254 = (char *)v246 + v252;
        v255 = sub_1AD63B03C();
        v256 = *(_QWORD *)(v255 - 8);
        v257 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v256 + 48);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v257(v254, 1, v255))
        {
          v258 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v256 + 16))(v253, v254, v255);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v256 + 56))(v253, 0, 1, v255);
        }
        v259 = v247[7];
        v260 = (_QWORD *)((char *)v245 + v259);
        v261 = (_QWORD *)((char *)v246 + v259);
        v262 = v261[1];
        *v260 = *v261;
        v260[1] = v262;
        *(_QWORD *)((char *)v245 + v247[8]) = *(_QWORD *)((char *)v246 + v247[8]);
        *(_QWORD *)((char *)v245 + v247[9]) = *(_QWORD *)((char *)v246 + v247[9]);
        v263 = v247[10];
        v264 = (char *)v245 + v263;
        v265 = (char *)v246 + v263;
        v266 = *(_QWORD *)((char *)v246 + v263 + 112);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v266)
        {
          *v264 = *v265;
          *(_OWORD *)(v264 + 8) = *(_OWORD *)(v265 + 8);
          v267 = *((_QWORD *)v265 + 4);
          *((_QWORD *)v264 + 3) = *((_QWORD *)v265 + 3);
          *((_QWORD *)v264 + 4) = v267;
          v268 = *((_QWORD *)v265 + 6);
          *((_QWORD *)v264 + 5) = *((_QWORD *)v265 + 5);
          *((_QWORD *)v264 + 6) = v268;
          v269 = *((_QWORD *)v265 + 8);
          *((_QWORD *)v264 + 7) = *((_QWORD *)v265 + 7);
          *((_QWORD *)v264 + 8) = v269;
          v270 = *((_QWORD *)v265 + 10);
          *((_QWORD *)v264 + 9) = *((_QWORD *)v265 + 9);
          *((_QWORD *)v264 + 10) = v270;
          *((_QWORD *)v264 + 11) = *((_QWORD *)v265 + 11);
          v264[96] = v265[96];
          *((_QWORD *)v264 + 13) = *((_QWORD *)v265 + 13);
          *((_QWORD *)v264 + 14) = v266;
          *((_QWORD *)v264 + 15) = *((_QWORD *)v265 + 15);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          v271 = *((_OWORD *)v265 + 5);
          *((_OWORD *)v264 + 4) = *((_OWORD *)v265 + 4);
          *((_OWORD *)v264 + 5) = v271;
          v272 = *((_OWORD *)v265 + 7);
          *((_OWORD *)v264 + 6) = *((_OWORD *)v265 + 6);
          *((_OWORD *)v264 + 7) = v272;
          v273 = *((_OWORD *)v265 + 1);
          *(_OWORD *)v264 = *(_OWORD *)v265;
          *((_OWORD *)v264 + 1) = v273;
          v274 = *((_OWORD *)v265 + 3);
          *((_OWORD *)v264 + 2) = *((_OWORD *)v265 + 2);
          *((_OWORD *)v264 + 3) = v274;
        }
        a1 = v281;
        (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v287 + 56))(v245, 0, 1, v247);
        v226 = v284;
        v3 = v285;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v278 + 56))(a1, 0, 1, v226);
      v6 = v279;
    }
    *((_BYTE *)a1 + *(int *)(v6 + 20)) = *((_BYTE *)v3 + *(int *)(v6 + 20));
  }
  return a1;
}

uint64_t sub_1AD051C54(uint64_t a1)
{
  int *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  int *v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  int *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  int *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  int *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  unsigned int (*v81)(char *, uint64_t, uint64_t);
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;

  v2 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v2 - 1) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = a1 + v2[5];
    v5 = sub_1AD63AF28();
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    if (!v7(v4, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    v8 = a1 + v2[6];
    if (!v7(v8, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v9 = a1 + v2[12];
    if (!v7(v9, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + v2[21] + 16) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v10 = a1 + v2[22];
    v11 = type metadata accessor for LinkPresentation.IconMetadata(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
    {
      v12 = v10 + *(int *)(v11 + 20);
      if (!v7(v12, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(a1 + v2[23] + 16) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v13 = a1 + v2[24];
    v14 = type metadata accessor for LinkPresentation.ARAssetMetadata(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
    {
      v15 = v13 + *(int *)(v14 + 20);
      if (!v7(v15, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (*(_QWORD *)(a1 + v2[25] + 16) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    v16 = a1 + v2[27];
    v17 = type metadata accessor for LinkPresentation.ImageMetadata(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
    {
      v18 = v16 + *(int *)(v17 + 20);
      if (!v7(v18, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = a1 + v2[30];
    v20 = type metadata accessor for LinkPresentation.Video(0);
    v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
    if (!v21(v19, 1, v20))
    {
      if (!v7(v19, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
      v22 = v19 + *(int *)(v20 + 20);
      if (!v7(v22, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v5);
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
    }
    v23 = a1 + v2[31];
    v24 = type metadata accessor for LinkPresentation.VideoMetadata(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24))
    {
      v25 = v23 + *(int *)(v24 + 20);
      if (!v7(v25, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v25, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v26 = a1 + v2[32];
    v27 = type metadata accessor for LinkPresentation.Audio(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27))
    {
      if (!v7(v26, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v26, v5);
      swift_bridgeObjectRelease();
    }
    v28 = a1 + v2[33];
    v29 = type metadata accessor for LinkPresentation.AudioMetadata(0);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
    {
      v30 = v28 + *(int *)(v29 + 20);
      if (!v7(v30, 1, v5))
        (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v30, v5);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v31 = (_QWORD *)(a1 + v2[41]);
    v32 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
    if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[14] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v39 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
          v40 = (char *)v31 + v39[11];
          v41 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
          {
            v42 = &v40[*(int *)(v41 + 20)];
            if (!v7((uint64_t)v42, 1, v5))
              (*(void (**)(char *, uint64_t))(v6 + 8))(v42, v5);
            swift_bridgeObjectRelease();
          }
          v43 = (char *)v31 + v39[12];
          if (!v7((uint64_t)v43, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v43, v5);
          swift_bridgeObjectRelease();
          if (*(_QWORD *)((char *)v31 + v39[14] + 8) != 1)
            goto LABEL_191;
          break;
        case 1u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[10] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v44 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
          goto LABEL_116;
        case 2u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[10] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v45 = type metadata accessor for LinkPresentation.MusicVideoMetadata(0);
          goto LABEL_142;
        case 3u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[10] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v45 = type metadata accessor for LinkPresentation.ArtistMetadata(0);
          goto LABEL_142;
        case 4u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v46 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
          v47 = (char *)v31 + v46[8];
          if (!v7((uint64_t)v47, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v47, v5);
          swift_bridgeObjectRelease();
          if (*(_QWORD *)((char *)v31 + v46[10] + 16) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v48 = v46[11];
          goto LABEL_143;
        case 5u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[10] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v45 = type metadata accessor for LinkPresentation.RadioMetadata(0);
          goto LABEL_142;
        case 6u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[14] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          v49 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
          v50 = (char *)v31 + *(int *)(v49 + 48);
          if (!v21((uint64_t)v50, 1, v20))
          {
            if (!v7((uint64_t)v50, 1, v5))
              (*(void (**)(char *, uint64_t))(v6 + 8))(v50, v5);
            v51 = &v50[*(int *)(v20 + 20)];
            if (!v7((uint64_t)v51, 1, v5))
              (*(void (**)(char *, uint64_t))(v6 + 8))(v51, v5);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
          }
          if (*(_QWORD *)((char *)v31 + *(int *)(v49 + 56) + 16) != 1)
            goto LABEL_191;
          break;
        case 7u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[10] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v45 = type metadata accessor for LinkPresentation.BookMetadata(0);
          goto LABEL_142;
        case 8u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[12] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v52 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
          v53 = (char *)v31 + *(int *)(v52 + 40);
          v54 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v53, 1, v54))
          {
            v55 = &v53[*(int *)(v54 + 20)];
            if (!v7((uint64_t)v55, 1, v5))
              (*(void (**)(char *, uint64_t))(v6 + 8))(v55, v5);
            swift_bridgeObjectRelease();
          }
          v56 = (char *)v31 + *(int *)(v52 + 44);
          if (!v7((uint64_t)v56, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v56, v5);
          break;
        case 9u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v57 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
          v58 = (char *)v31 + v57[9];
          v59 = sub_1AD63B03C();
          v60 = *(_QWORD *)(v59 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v60 + 48))(v58, 1, v59))
            (*(void (**)(char *, uint64_t))(v60 + 8))(v58, v59);
          if (*(_QWORD *)((char *)v31 + v57[10] + 16) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v61 = (char *)v31 + v57[11];
          v62 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62))
          {
            v63 = &v61[*(int *)(v62 + 20)];
            if (!v7((uint64_t)v63, 1, v5))
              (*(void (**)(char *, uint64_t))(v6 + 8))(v63, v5);
            swift_bridgeObjectRelease();
          }
          goto LABEL_151;
        case 0xAu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[10] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v44 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
LABEL_116:
          v64 = (char *)v31 + *(int *)(v44 + 36);
          v65 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v65 - 8) + 48))(v64, 1, v65))
          {
            v66 = &v64[*(int *)(v65 + 20)];
            if (!v7((uint64_t)v66, 1, v5))
              (*(void (**)(char *, uint64_t))(v6 + 8))(v66, v5);
            swift_bridgeObjectRelease();
          }
          goto LABEL_151;
        case 0xBu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[12] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v48 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
          goto LABEL_143;
        case 0xCu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[10] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v45 = type metadata accessor for LinkPresentation.TVSeasonMetadata(0);
          goto LABEL_142;
        case 0xDu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[8] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v48 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
          goto LABEL_143;
        case 0xEu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[10] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v67 = type metadata accessor for LinkPresentation.MovieMetadata(0);
          v68 = (char *)v31 + *(int *)(v67 + 36);
          v69 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v69 - 8) + 48))(v68, 1, v69))
          {
            v70 = &v68[*(int *)(v69 + 20)];
            if (!v7((uint64_t)v70, 1, v5))
              (*(void (**)(char *, uint64_t))(v6 + 8))(v70, v5);
            swift_bridgeObjectRelease();
          }
          if (*(_QWORD *)((char *)v31 + *(int *)(v67 + 40) + 16) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_151;
        case 0xFu:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[10] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v45 = type metadata accessor for LinkPresentation.MovieBundleMetadata(0);
LABEL_142:
          v48 = *(int *)(v45 + 36);
LABEL_143:
          v71 = (char *)v31 + v48;
          v72 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v72 - 8) + 48))(v71, 1, v72))
            break;
          v73 = &v71[*(int *)(v72 + 20)];
          if (!v7((uint64_t)v73, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v73, v5);
LABEL_151:
          swift_bridgeObjectRelease();
          break;
        case 0x10u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[8] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v31[24] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          goto LABEL_151;
        case 0x11u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[8] != 1)
            goto LABEL_191;
          break;
        case 0x12u:
          swift_bridgeObjectRelease();
          if (v31[4] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v31[20] != 1)
            goto LABEL_191;
          break;
        case 0x13u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[5] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          if (v31[24] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[47] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[67] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          if (v31[88] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v31[104] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v31[120] != 1)
            goto LABEL_191;
          break;
        case 0x14u:
          swift_bridgeObjectRelease();
          if (v31[5] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v31[21] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v31[37] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[56] != 1)
            goto LABEL_191;
          break;
        case 0x15u:
          swift_bridgeObjectRelease();
          if (v31[4] != 1)
            goto LABEL_191;
          break;
        case 0x16u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[7] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (v31[23] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v74 = (char *)v31 + *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
          v75 = sub_1AD63B03C();
          v76 = *(_QWORD *)(v75 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v74, 1, v75))
            (*(void (**)(char *, uint64_t))(v76 + 8))(v74, v75);
          break;
        case 0x17u:
        case 0x1Bu:
        case 0x1Du:
        case 0x1Fu:
        case 0x20u:
        case 0x21u:
          goto LABEL_151;
        case 0x18u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[10] != 1)
            goto LABEL_191;
          break;
        case 0x19u:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v31[6] != 1)
            goto LABEL_191;
          break;
        case 0x1Au:
          swift_bridgeObjectRelease();
          if (v31[7] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v77 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
          v78 = (char *)v31 + v77[9];
          v79 = sub_1AD63B03C();
          v80 = *(_QWORD *)(v79 - 8);
          v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
          if (!v81(v78, 1, v79))
            (*(void (**)(char *, uint64_t))(v80 + 8))(v78, v79);
          v82 = (char *)v31 + v77[10];
          if (!v81(v82, 1, v79))
            (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v79);
          v83 = v77[11];
          goto LABEL_202;
        case 0x1Cu:
        case 0x22u:
LABEL_191:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          break;
        case 0x1Eu:
          swift_bridgeObjectRelease();
          v84 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
          v85 = (char *)v31 + *(int *)(v84 + 20);
          v79 = sub_1AD63B03C();
          v80 = *(_QWORD *)(v79 - 8);
          v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48);
          if (!v81(v85, 1, v79))
            (*(void (**)(char *, uint64_t))(v80 + 8))(v85, v79);
          v83 = *(int *)(v84 + 24);
LABEL_202:
          v86 = (char *)v31 + v83;
          if (!v81(v86, 1, v79))
            (*(void (**)(char *, uint64_t))(v80 + 8))(v86, v79);
          break;
        case 0x23u:
          swift_release();
          break;
        default:
          break;
      }
    }
    v33 = a1 + v2[42];
    if (*(_QWORD *)(v33 + 8) != 1)
    {
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v33 + 32) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v34 = a1 + v2[43];
    v35 = type metadata accessor for CollaborationMetadata();
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35);
    if (!(_DWORD)result)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = v34 + *(int *)(v35 + 24);
      v37 = sub_1AD63B03C();
      v38 = *(_QWORD *)(v37 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
        (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v36, v37);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (*(_QWORD *)(v34 + *(int *)(v35 + 40) + 112))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
  }
  return result;
}

_DWORD *sub_1AD053214(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  _QWORD *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  int *v79;
  uint64_t v80;
  _DWORD *v81;
  _DWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  uint64_t v89;
  uint64_t v90;
  _QWORD *v91;
  _QWORD *v92;
  uint64_t v93;
  void (*v94)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _DWORD *v103;
  _DWORD *v104;
  int *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  _QWORD *v118;
  uint64_t v119;
  void (*v120)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v121;
  char *v122;
  char *v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  _DWORD *v130;
  _DWORD *v131;
  int *v132;
  uint64_t v133;
  unsigned int (*v134)(_DWORD *, uint64_t, int *);
  uint64_t v135;
  uint64_t v136;
  char *v137;
  char *v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  _QWORD *v146;
  uint64_t v147;
  void (*v148)(_DWORD *, _QWORD, uint64_t, int *);
  _DWORD *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  int *v153;
  unsigned int (*v154)(char *, uint64_t, int *);
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  char *v166;
  char *v167;
  uint64_t v168;
  void (*v169)(char *, _QWORD, uint64_t, int *);
  uint64_t v170;
  _DWORD *v171;
  _DWORD *v172;
  int *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  char *v178;
  uint64_t v179;
  uint64_t v180;
  _QWORD *v181;
  _QWORD *v182;
  uint64_t v183;
  uint64_t v184;
  _QWORD *v185;
  _QWORD *v186;
  uint64_t v187;
  void (*v188)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  char *v197;
  char *v198;
  uint64_t v199;
  void (*v200)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v201;
  _DWORD *v202;
  _DWORD *v203;
  int *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  _QWORD *v212;
  _QWORD *v213;
  uint64_t v214;
  uint64_t v215;
  _QWORD *v216;
  _QWORD *v217;
  uint64_t v218;
  void (*v219)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  int *v224;
  char *v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  uint64_t v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _QWORD *v243;
  _QWORD *v244;
  int *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  unsigned int (*v255)(char *, uint64_t, uint64_t);
  uint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  _QWORD *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  _QWORD *v274;
  unsigned int (*v275)(char *, uint64_t, uint64_t);
  uint64_t v276;
  uint64_t v277;
  char *__dst;
  _DWORD *v279;
  uint64_t v280;
  uint64_t v281;
  int *v282;
  _DWORD *v283;
  unsigned int (*v284)(char *, uint64_t, uint64_t);
  uint64_t v285;

  v6 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
  v7 = *((_QWORD *)v6 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v276 = v7;
    v277 = a3;
    *a1 = *a2;
    v9 = v6[5];
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1AD63AF28();
    v13 = *(_QWORD *)(v12 - 8);
    v284 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    if (v284(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v15 = v6[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v281 = v13;
    if (v284((char *)a2 + v15, 1, v12))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v17, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v16, 0, 1, v12);
    }
    v19 = v6[7];
    v20 = (_QWORD *)((char *)a1 + v19);
    v21 = (_QWORD *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = v6[8];
    v24 = (_QWORD *)((char *)a1 + v23);
    v25 = (_QWORD *)((char *)a2 + v23);
    v26 = v25[1];
    *v24 = *v25;
    v24[1] = v26;
    v27 = v6[9];
    v28 = (_QWORD *)((char *)a1 + v27);
    v29 = (_QWORD *)((char *)a2 + v27);
    v30 = v29[1];
    *v28 = *v29;
    v28[1] = v30;
    v31 = v6[10];
    v32 = (_QWORD *)((char *)a1 + v31);
    v33 = (_QWORD *)((char *)a2 + v31);
    v34 = v33[1];
    *v32 = *v33;
    v32[1] = v34;
    v35 = v6[11];
    v36 = (_QWORD *)((char *)a1 + v35);
    v37 = (_QWORD *)((char *)a2 + v35);
    v38 = v37[1];
    *v36 = *v37;
    v36[1] = v38;
    v282 = v6;
    v39 = v6[12];
    v40 = (char *)a1 + v39;
    v41 = (char *)a2 + v39;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v280 = v12;
    if (v284(v41, 1, v12))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v40, v41, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v40, 0, 1, v12);
    }
    v43 = v6[13];
    v44 = (_QWORD *)((char *)a1 + v43);
    v45 = (_QWORD *)((char *)a2 + v43);
    v46 = v45[1];
    *v44 = *v45;
    v44[1] = v46;
    v47 = v6[14];
    v48 = (_QWORD *)((char *)a1 + v47);
    v49 = (_QWORD *)((char *)a2 + v47);
    v50 = v49[1];
    *v48 = *v49;
    v48[1] = v50;
    v51 = v6[15];
    v52 = (_QWORD *)((char *)a1 + v51);
    v53 = (_QWORD *)((char *)a2 + v51);
    v54 = v53[1];
    *v52 = *v53;
    v52[1] = v54;
    v55 = v6[16];
    v56 = (_QWORD *)((char *)a1 + v55);
    v57 = (_QWORD *)((char *)a2 + v55);
    v58 = v57[1];
    *v56 = *v57;
    v56[1] = v58;
    *((_BYTE *)a1 + v6[17]) = *((_BYTE *)a2 + v6[17]);
    v59 = v6[18];
    v60 = (char *)a1 + v59;
    v61 = (char *)a2 + v59;
    v62 = *((_OWORD *)v61 + 1);
    *(_OWORD *)v60 = *(_OWORD *)v61;
    *((_OWORD *)v60 + 1) = v62;
    v60[32] = v61[32];
    v63 = v6[19];
    v64 = (_QWORD *)((char *)a1 + v63);
    v65 = (_QWORD *)((char *)a2 + v63);
    v66 = v65[1];
    *v64 = *v65;
    v64[1] = v66;
    v67 = v6[20];
    v68 = (_QWORD *)((char *)a1 + v67);
    v69 = (_QWORD *)((char *)a2 + v67);
    v70 = v69[1];
    *v68 = *v69;
    v68[1] = v70;
    v71 = v6[21];
    v72 = (char *)a1 + v71;
    v73 = (char *)a2 + v71;
    v74 = *(_QWORD *)((char *)a2 + v71 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v74 == 1)
    {
      v75 = *((_OWORD *)v73 + 5);
      *((_OWORD *)v72 + 4) = *((_OWORD *)v73 + 4);
      *((_OWORD *)v72 + 5) = v75;
      *((_OWORD *)v72 + 6) = *((_OWORD *)v73 + 6);
      *(_OWORD *)(v72 + 105) = *(_OWORD *)(v73 + 105);
      v76 = *((_OWORD *)v73 + 1);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *((_OWORD *)v72 + 1) = v76;
      v77 = *((_OWORD *)v73 + 3);
      *((_OWORD *)v72 + 2) = *((_OWORD *)v73 + 2);
      *((_OWORD *)v72 + 3) = v77;
    }
    else
    {
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *((_QWORD *)v72 + 2) = v74;
      *(_OWORD *)(v72 + 24) = *(_OWORD *)(v73 + 24);
      *((_QWORD *)v72 + 5) = *((_QWORD *)v73 + 5);
      v78 = *((_OWORD *)v73 + 4);
      *((_OWORD *)v72 + 3) = *((_OWORD *)v73 + 3);
      *((_OWORD *)v72 + 4) = v78;
      v72[80] = v73[80];
      *(_OWORD *)(v72 + 88) = *(_OWORD *)(v73 + 88);
      *(_OWORD *)(v72 + 104) = *(_OWORD *)(v73 + 104);
      v72[120] = v73[120];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v79 = v282;
    v80 = v282[22];
    v81 = (_DWORD *)((char *)a1 + v80);
    v82 = (_DWORD *)((char *)a2 + v80);
    v83 = type metadata accessor for LinkPresentation.IconMetadata(0);
    v84 = *(_QWORD *)(v83 - 8);
    v283 = a2;
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v84 + 48))(v82, 1, v83))
    {
      v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
      memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
    }
    else
    {
      *v81 = *v82;
      v86 = *(int *)(v83 + 20);
      v87 = (char *)v81 + v86;
      v88 = (char *)v82 + v86;
      if (v284((char *)v82 + v86, 1, v280))
      {
        v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v87, v88, v280);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v87, 0, 1, v280);
      }
      v90 = *(int *)(v83 + 24);
      v91 = (_QWORD *)((char *)v81 + v90);
      v92 = (_QWORD *)((char *)v82 + v90);
      v93 = v92[1];
      *v91 = *v92;
      v91[1] = v93;
      v94 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v84 + 56);
      swift_bridgeObjectRetain();
      v94(v81, 0, 1, v83);
      v79 = v282;
      a2 = v283;
    }
    v95 = v79[23];
    v96 = (char *)a1 + v95;
    v97 = (char *)a2 + v95;
    v98 = *((_QWORD *)v97 + 2);
    if (v98 == 1)
    {
      v99 = *((_OWORD *)v97 + 1);
      *(_OWORD *)v96 = *(_OWORD *)v97;
      *((_OWORD *)v96 + 1) = v99;
      *((_QWORD *)v96 + 4) = *((_QWORD *)v97 + 4);
    }
    else
    {
      *(_OWORD *)v96 = *(_OWORD *)v97;
      v100 = *((_QWORD *)v97 + 3);
      v101 = *((_QWORD *)v97 + 4);
      *((_QWORD *)v96 + 2) = v98;
      *((_QWORD *)v96 + 3) = v100;
      *((_QWORD *)v96 + 4) = v101;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v102 = v79[24];
    v103 = (_DWORD *)((char *)a1 + v102);
    v104 = (_DWORD *)((char *)a2 + v102);
    v105 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
    v106 = *((_QWORD *)v105 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v106 + 48))(v104, 1, v105))
    {
      v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
      memcpy(v103, v104, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
    }
    else
    {
      *v103 = *v104;
      v108 = v105[5];
      v109 = (char *)v103 + v108;
      v110 = (char *)v104 + v108;
      if (v284((char *)v104 + v108, 1, v280))
      {
        v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v109, v110, v280);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v109, 0, 1, v280);
      }
      v112 = v105[6];
      v113 = (_QWORD *)((char *)v103 + v112);
      v114 = (_QWORD *)((char *)v104 + v112);
      v115 = v114[1];
      *v113 = *v114;
      v113[1] = v115;
      v116 = v105[7];
      v117 = (_QWORD *)((char *)v103 + v116);
      v118 = (_QWORD *)((char *)v104 + v116);
      v119 = v118[1];
      *v117 = *v118;
      v117[1] = v119;
      v120 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v106 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v120(v103, 0, 1, v105);
      v79 = v282;
      a2 = v283;
    }
    v121 = v79[25];
    v122 = (char *)a1 + v121;
    v123 = (char *)a2 + v121;
    v124 = *((_QWORD *)v123 + 2);
    if (v124 == 1)
    {
      v125 = *((_OWORD *)v123 + 5);
      *((_OWORD *)v122 + 4) = *((_OWORD *)v123 + 4);
      *((_OWORD *)v122 + 5) = v125;
      *((_OWORD *)v122 + 6) = *((_OWORD *)v123 + 6);
      *(_OWORD *)(v122 + 105) = *(_OWORD *)(v123 + 105);
      v126 = *((_OWORD *)v123 + 1);
      *(_OWORD *)v122 = *(_OWORD *)v123;
      *((_OWORD *)v122 + 1) = v126;
      v127 = *((_OWORD *)v123 + 3);
      *((_OWORD *)v122 + 2) = *((_OWORD *)v123 + 2);
      *((_OWORD *)v122 + 3) = v127;
    }
    else
    {
      *(_OWORD *)v122 = *(_OWORD *)v123;
      *((_QWORD *)v122 + 2) = v124;
      *(_OWORD *)(v122 + 24) = *(_OWORD *)(v123 + 24);
      *((_QWORD *)v122 + 5) = *((_QWORD *)v123 + 5);
      v128 = *((_OWORD *)v123 + 4);
      *((_OWORD *)v122 + 3) = *((_OWORD *)v123 + 3);
      *((_OWORD *)v122 + 4) = v128;
      v122[80] = v123[80];
      *(_OWORD *)(v122 + 88) = *(_OWORD *)(v123 + 88);
      *(_OWORD *)(v122 + 104) = *(_OWORD *)(v123 + 104);
      v122[120] = v123[120];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)((char *)a1 + v79[26]) = *(_QWORD *)((char *)a2 + v79[26]);
    v129 = v79[27];
    v130 = (_DWORD *)((char *)a1 + v129);
    v131 = (_DWORD *)((char *)a2 + v129);
    v132 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
    v133 = *((_QWORD *)v132 - 1);
    v134 = *(unsigned int (**)(_DWORD *, uint64_t, int *))(v133 + 48);
    swift_bridgeObjectRetain();
    if (v134(v131, 1, v132))
    {
      v135 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
      memcpy(v130, v131, *(_QWORD *)(*(_QWORD *)(v135 - 8) + 64));
    }
    else
    {
      *v130 = *v131;
      v136 = v132[5];
      v137 = (char *)v130 + v136;
      v138 = (char *)v131 + v136;
      if (v284((char *)v131 + v136, 1, v280))
      {
        v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v137, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v137, v138, v280);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v137, 0, 1, v280);
      }
      v140 = v132[6];
      v141 = (_QWORD *)((char *)v130 + v140);
      v142 = (_QWORD *)((char *)v131 + v140);
      v143 = v142[1];
      *v141 = *v142;
      v141[1] = v143;
      *(_OWORD *)((char *)v130 + v132[7]) = *(_OWORD *)((char *)v131 + v132[7]);
      v144 = v132[8];
      v145 = (_QWORD *)((char *)v130 + v144);
      v146 = (_QWORD *)((char *)v131 + v144);
      v147 = v146[1];
      *v145 = *v146;
      v145[1] = v147;
      v148 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v133 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v148(v130, 0, 1, v132);
      v79 = v282;
    }
    v149 = v283;
    *(_QWORD *)((char *)a1 + v79[28]) = *(_QWORD *)((char *)v283 + v79[28]);
    *(_QWORD *)((char *)a1 + v79[29]) = *(_QWORD *)((char *)v283 + v79[29]);
    v150 = v79[30];
    v151 = (char *)a1 + v150;
    v152 = (char *)v283 + v150;
    v153 = (int *)type metadata accessor for LinkPresentation.Video(0);
    v274 = (_QWORD *)*((_QWORD *)v153 - 1);
    v154 = (unsigned int (*)(char *, uint64_t, int *))v274[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v154(v152, 1, v153))
    {
      v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
      memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
    }
    else
    {
      if (v284(v152, 1, v280))
      {
        v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v151, v152, v280);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v151, 0, 1, v280);
      }
      v157 = v153[5];
      v158 = &v151[v157];
      v159 = &v152[v157];
      if (v284(&v152[v157], 1, v280))
      {
        v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v158, v159, v280);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v158, 0, 1, v280);
      }
      v161 = v153[6];
      v162 = &v151[v161];
      v163 = &v152[v161];
      v164 = *((_QWORD *)v163 + 1);
      *(_QWORD *)v162 = *(_QWORD *)v163;
      *((_QWORD *)v162 + 1) = v164;
      v151[v153[7]] = v152[v153[7]];
      *(_QWORD *)&v151[v153[8]] = *(_QWORD *)&v152[v153[8]];
      v165 = v153[9];
      v166 = &v151[v165];
      v167 = &v152[v165];
      *v166 = *v167;
      v168 = *((_QWORD *)v167 + 2);
      *((_QWORD *)v166 + 1) = *((_QWORD *)v167 + 1);
      *((_QWORD *)v166 + 2) = v168;
      v169 = (void (*)(char *, _QWORD, uint64_t, int *))v274[7];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v169(v151, 0, 1, v153);
      v149 = v283;
    }
    v170 = v79[31];
    v171 = (_DWORD *)((char *)a1 + v170);
    v172 = (_DWORD *)((char *)v149 + v170);
    v173 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
    v174 = *((_QWORD *)v173 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v174 + 48))(v172, 1, v173))
    {
      v175 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
      memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v175 - 8) + 64));
    }
    else
    {
      *v171 = *v172;
      v176 = v173[5];
      v177 = (char *)v171 + v176;
      v178 = (char *)v172 + v176;
      if (v284((char *)v172 + v176, 1, v280))
      {
        v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v177, v178, *(_QWORD *)(*(_QWORD *)(v179 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v177, v178, v280);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v177, 0, 1, v280);
      }
      v180 = v173[6];
      v181 = (_QWORD *)((char *)v171 + v180);
      v182 = (_QWORD *)((char *)v172 + v180);
      v183 = v182[1];
      *v181 = *v182;
      v181[1] = v183;
      *(_OWORD *)((char *)v171 + v173[7]) = *(_OWORD *)((char *)v172 + v173[7]);
      v184 = v173[8];
      v185 = (_QWORD *)((char *)v171 + v184);
      v186 = (_QWORD *)((char *)v172 + v184);
      v187 = v186[1];
      *v185 = *v186;
      v185[1] = v187;
      v188 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v174 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v188(v171, 0, 1, v173);
      v149 = v283;
    }
    v189 = v79[32];
    v190 = (char *)a1 + v189;
    v191 = (char *)v149 + v189;
    v192 = type metadata accessor for LinkPresentation.Audio(0);
    v193 = *(_QWORD *)(v192 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v193 + 48))(v191, 1, v192))
    {
      v194 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
      memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v194 - 8) + 64));
    }
    else
    {
      if (v284(v191, 1, v280))
      {
        v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v190, v191, *(_QWORD *)(*(_QWORD *)(v195 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v190, v191, v280);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v190, 0, 1, v280);
      }
      v196 = *(int *)(v192 + 20);
      v197 = &v190[v196];
      v198 = &v191[v196];
      v199 = *((_QWORD *)v198 + 1);
      *(_QWORD *)v197 = *(_QWORD *)v198;
      *((_QWORD *)v197 + 1) = v199;
      v200 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v193 + 56);
      swift_bridgeObjectRetain();
      v200(v190, 0, 1, v192);
      v149 = v283;
    }
    v201 = v79[33];
    v202 = (_DWORD *)((char *)a1 + v201);
    v203 = (_DWORD *)((char *)v149 + v201);
    v204 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
    v205 = *((_QWORD *)v204 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v205 + 48))(v203, 1, v204))
    {
      v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
      memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
    }
    else
    {
      *v202 = *v203;
      v207 = v204[5];
      v208 = (char *)v202 + v207;
      v209 = (char *)v203 + v207;
      if (v284((char *)v203 + v207, 1, v280))
      {
        v210 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v208, v209, *(_QWORD *)(*(_QWORD *)(v210 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v208, v209, v280);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v208, 0, 1, v280);
      }
      v211 = v204[6];
      v212 = (_QWORD *)((char *)v202 + v211);
      v213 = (_QWORD *)((char *)v203 + v211);
      v214 = v213[1];
      *v212 = *v213;
      v212[1] = v214;
      v215 = v204[7];
      v216 = (_QWORD *)((char *)v202 + v215);
      v217 = (_QWORD *)((char *)v203 + v215);
      v218 = v217[1];
      *v216 = *v217;
      v216[1] = v218;
      v219 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v205 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v219(v202, 0, 1, v204);
      v149 = v283;
    }
    *(_QWORD *)((char *)a1 + v79[34]) = *(_QWORD *)((char *)v149 + v79[34]);
    *(_QWORD *)((char *)a1 + v79[35]) = *(_QWORD *)((char *)v149 + v79[35]);
    *(_QWORD *)((char *)a1 + v79[36]) = *(_QWORD *)((char *)v149 + v79[36]);
    *(_QWORD *)((char *)a1 + v79[37]) = *(_QWORD *)((char *)v149 + v79[37]);
    *(_QWORD *)((char *)a1 + v79[38]) = *(_QWORD *)((char *)v149 + v79[38]);
    *(_QWORD *)((char *)a1 + v79[39]) = *(_QWORD *)((char *)v149 + v79[39]);
    *(_QWORD *)((char *)a1 + v79[40]) = *(_QWORD *)((char *)v149 + v79[40]);
    v220 = v79[41];
    v279 = a1;
    __dst = (char *)a1 + v220;
    v221 = (char *)v149 + v220;
    v222 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
    v275 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v222 - 8) + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v275(v221, 1, v222))
    {
      v225 = (char *)&loc_1AD0540FC + 4 * (unsigned __int16)a3tv_0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
    memcpy(__dst, v221, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
    v224 = v282;
    a2 = v283;
    v226 = v282[42];
    v227 = (char *)a1 + v226;
    v228 = (char *)v283 + v226;
    v229 = *(_QWORD *)((char *)v283 + v226 + 8);
    if (v229 == 1)
    {
      v230 = *((_OWORD *)v228 + 9);
      *((_OWORD *)v227 + 8) = *((_OWORD *)v228 + 8);
      *((_OWORD *)v227 + 9) = v230;
      *((_OWORD *)v227 + 10) = *((_OWORD *)v228 + 10);
      *((_QWORD *)v227 + 22) = *((_QWORD *)v228 + 22);
      v231 = *((_OWORD *)v228 + 5);
      *((_OWORD *)v227 + 4) = *((_OWORD *)v228 + 4);
      *((_OWORD *)v227 + 5) = v231;
      v232 = *((_OWORD *)v228 + 7);
      *((_OWORD *)v227 + 6) = *((_OWORD *)v228 + 6);
      *((_OWORD *)v227 + 7) = v232;
      v233 = *((_OWORD *)v228 + 1);
      *(_OWORD *)v227 = *(_OWORD *)v228;
      *((_OWORD *)v227 + 1) = v233;
      v234 = *((_OWORD *)v228 + 3);
      *((_OWORD *)v227 + 2) = *((_OWORD *)v228 + 2);
      *((_OWORD *)v227 + 3) = v234;
    }
    else
    {
      *(_QWORD *)v227 = *(_QWORD *)v228;
      *((_QWORD *)v227 + 1) = v229;
      v235 = *((_QWORD *)v228 + 4);
      swift_bridgeObjectRetain();
      if (v235 == 1)
      {
        v236 = *((_OWORD *)v228 + 6);
        *((_OWORD *)v227 + 5) = *((_OWORD *)v228 + 5);
        *((_OWORD *)v227 + 6) = v236;
        *((_OWORD *)v227 + 7) = *((_OWORD *)v228 + 7);
        *(_OWORD *)(v227 + 121) = *(_OWORD *)(v228 + 121);
        v237 = *((_OWORD *)v228 + 2);
        *((_OWORD *)v227 + 1) = *((_OWORD *)v228 + 1);
        *((_OWORD *)v227 + 2) = v237;
        v238 = *((_OWORD *)v228 + 4);
        *((_OWORD *)v227 + 3) = *((_OWORD *)v228 + 3);
        *((_OWORD *)v227 + 4) = v238;
      }
      else
      {
        *((_OWORD *)v227 + 1) = *((_OWORD *)v228 + 1);
        *((_QWORD *)v227 + 4) = v235;
        *(_OWORD *)(v227 + 40) = *(_OWORD *)(v228 + 40);
        *((_QWORD *)v227 + 7) = *((_QWORD *)v228 + 7);
        v239 = *((_OWORD *)v228 + 5);
        *((_OWORD *)v227 + 4) = *((_OWORD *)v228 + 4);
        *((_OWORD *)v227 + 5) = v239;
        v227[96] = v228[96];
        *(_OWORD *)(v227 + 104) = *(_OWORD *)(v228 + 104);
        *(_OWORD *)(v227 + 120) = *(_OWORD *)(v228 + 120);
        v227[136] = v228[136];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v240 = *((_QWORD *)v228 + 19);
      *((_QWORD *)v227 + 18) = *((_QWORD *)v228 + 18);
      *((_QWORD *)v227 + 19) = v240;
      v241 = *((_QWORD *)v228 + 21);
      *((_QWORD *)v227 + 20) = *((_QWORD *)v228 + 20);
      *((_QWORD *)v227 + 21) = v241;
      *((_QWORD *)v227 + 22) = *((_QWORD *)v228 + 22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v242 = v282[43];
    v243 = (_QWORD *)((char *)a1 + v242);
    v244 = (_QWORD *)((char *)v283 + v242);
    v245 = (int *)type metadata accessor for CollaborationMetadata();
    v246 = *((_QWORD *)v245 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v246 + 48))(v244, 1, v245))
    {
      v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
      memcpy(v243, v244, *(_QWORD *)(*(_QWORD *)(v247 - 8) + 64));
    }
    else
    {
      v285 = v246;
      v248 = v244[1];
      *v243 = *v244;
      v243[1] = v248;
      v249 = v244[3];
      v243[2] = v244[2];
      v243[3] = v249;
      v250 = v245[6];
      v251 = (char *)v243 + v250;
      v252 = (char *)v244 + v250;
      v253 = sub_1AD63B03C();
      v254 = *(_QWORD *)(v253 - 8);
      v255 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v254 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v255(v252, 1, v253))
      {
        v256 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v251, v252, *(_QWORD *)(*(_QWORD *)(v256 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v254 + 16))(v251, v252, v253);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v254 + 56))(v251, 0, 1, v253);
      }
      v257 = v245[7];
      v258 = (_QWORD *)((char *)v243 + v257);
      v259 = (_QWORD *)((char *)v244 + v257);
      v260 = v259[1];
      *v258 = *v259;
      v258[1] = v260;
      *(_QWORD *)((char *)v243 + v245[8]) = *(_QWORD *)((char *)v244 + v245[8]);
      *(_QWORD *)((char *)v243 + v245[9]) = *(_QWORD *)((char *)v244 + v245[9]);
      v261 = v245[10];
      v262 = (char *)v243 + v261;
      v263 = (char *)v244 + v261;
      v264 = *(_QWORD *)((char *)v244 + v261 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v264)
      {
        *v262 = *v263;
        *(_OWORD *)(v262 + 8) = *(_OWORD *)(v263 + 8);
        v265 = *((_QWORD *)v263 + 4);
        *((_QWORD *)v262 + 3) = *((_QWORD *)v263 + 3);
        *((_QWORD *)v262 + 4) = v265;
        v266 = *((_QWORD *)v263 + 6);
        *((_QWORD *)v262 + 5) = *((_QWORD *)v263 + 5);
        *((_QWORD *)v262 + 6) = v266;
        v267 = *((_QWORD *)v263 + 8);
        *((_QWORD *)v262 + 7) = *((_QWORD *)v263 + 7);
        *((_QWORD *)v262 + 8) = v267;
        v268 = *((_QWORD *)v263 + 10);
        *((_QWORD *)v262 + 9) = *((_QWORD *)v263 + 9);
        *((_QWORD *)v262 + 10) = v268;
        *((_QWORD *)v262 + 11) = *((_QWORD *)v263 + 11);
        v262[96] = v263[96];
        *((_QWORD *)v262 + 13) = *((_QWORD *)v263 + 13);
        *((_QWORD *)v262 + 14) = v264;
        *((_QWORD *)v262 + 15) = *((_QWORD *)v263 + 15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v269 = *((_OWORD *)v263 + 5);
        *((_OWORD *)v262 + 4) = *((_OWORD *)v263 + 4);
        *((_OWORD *)v262 + 5) = v269;
        v270 = *((_OWORD *)v263 + 7);
        *((_OWORD *)v262 + 6) = *((_OWORD *)v263 + 6);
        *((_OWORD *)v262 + 7) = v270;
        v271 = *((_OWORD *)v263 + 1);
        *(_OWORD *)v262 = *(_OWORD *)v263;
        *((_OWORD *)v262 + 1) = v271;
        v272 = *((_OWORD *)v263 + 3);
        *((_OWORD *)v262 + 2) = *((_OWORD *)v263 + 2);
        *((_OWORD *)v262 + 3) = v272;
      }
      a1 = v279;
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v285 + 56))(v243, 0, 1, v245);
      v224 = v282;
      a2 = v283;
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v276 + 56))(a1, 0, 1, v224);
    a3 = v277;
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

char *sub_1AD0575D4(char *a1, _DWORD *a2, uint64_t a3)
{
  int *v6;
  _QWORD *v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, uint64_t);
  unsigned int v23;
  unsigned int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  _QWORD *v34;
  uint64_t v35;
  char *v36;
  _QWORD *v37;
  uint64_t v38;
  char *v39;
  _QWORD *v40;
  uint64_t v41;
  char *v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  _QWORD *v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  char *v56;
  _QWORD *v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  __int128 v64;
  __int128 v65;
  uint64_t v66;
  char *v67;
  _QWORD *v68;
  uint64_t v69;
  char *v70;
  _QWORD *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  uint64_t v86;
  char *v87;
  _DWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  unsigned int v100;
  unsigned int v101;
  uint64_t v102;
  uint64_t v103;
  char *v104;
  _QWORD *v105;
  uint64_t v106;
  char *v107;
  _QWORD *v108;
  uint64_t v109;
  char *v110;
  _QWORD *v111;
  uint64_t v112;
  char *v113;
  _QWORD *v114;
  uint64_t v115;
  char *v116;
  _QWORD *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  unsigned int v121;
  unsigned int v122;
  uint64_t v123;
  uint64_t v124;
  char *v125;
  _QWORD *v126;
  uint64_t v127;
  char *v128;
  _QWORD *v129;
  uint64_t v130;
  char *v131;
  _QWORD *v132;
  uint64_t v133;
  char *v134;
  _QWORD *v135;
  uint64_t v136;
  char *v137;
  char *v138;
  char v139;
  __int128 v140;
  uint64_t v141;
  char *v142;
  _QWORD *v143;
  uint64_t v144;
  char *v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  uint64_t v172;
  char *v173;
  char *v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t (*v177)(char *, uint64_t, uint64_t);
  int v178;
  int v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  _QWORD *v188;
  void (*v189)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v190;
  char *v191;
  char *v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;
  char *v196;
  _DWORD *v197;
  int *v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  char *v202;
  char *v203;
  uint64_t v204;
  uint64_t v205;
  char *v206;
  _QWORD *v207;
  uint64_t v208;
  char *v209;
  _QWORD *v210;
  void (*v211)(char *, _QWORD, uint64_t, int *);
  uint64_t v212;
  char *v213;
  char *v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  uint64_t v225;
  char *v226;
  _DWORD *v227;
  int *v228;
  uint64_t v229;
  unsigned int (*v230)(_DWORD *, uint64_t, int *);
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  _QWORD *v238;
  uint64_t v239;
  char *v240;
  _QWORD *v241;
  void (*v242)(char *, _QWORD, uint64_t, int *);
  uint64_t v243;
  char *v244;
  char *v245;
  int *v246;
  unsigned int (*v247)(char *, uint64_t, int *);
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  char *v258;
  char *v259;
  void (*v260)(char *, _QWORD, uint64_t, int *);
  uint64_t v261;
  char *v262;
  _DWORD *v263;
  int *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  _QWORD *v273;
  uint64_t v274;
  char *v275;
  _QWORD *v276;
  void (*v277)(char *, _QWORD, uint64_t, int *);
  uint64_t v278;
  char *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  void (*v288)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v289;
  char *v290;
  _DWORD *v291;
  int *v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  char *v300;
  _QWORD *v301;
  uint64_t v302;
  char *v303;
  _QWORD *v304;
  void (*v305)(char *, _QWORD, uint64_t, int *);
  uint64_t v306;
  char *v307;
  uint64_t v308;
  uint64_t v309;
  int *v310;
  char *v311;
  uint64_t v312;
  char *v313;
  uint64_t v314;
  char *v315;
  unsigned int v316;
  unsigned int v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  char *v321;
  void (*v322)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v323;
  const void *v324;
  char *v325;
  char *v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  __int128 v335;
  __int128 v336;
  uint64_t v337;
  __int128 v338;
  uint64_t v339;
  char *v340;
  char *v341;
  int *v342;
  uint64_t v343;
  uint64_t (*v344)(char *, uint64_t, int *);
  int v345;
  int v346;
  char *v347;
  uint64_t v348;
  char *v349;
  char *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  uint64_t v355;
  char *v356;
  unsigned int v357;
  unsigned int v358;
  uint64_t v359;
  uint64_t v360;
  char *v361;
  char *v362;
  uint64_t v363;
  char *v364;
  char *v365;
  void (*v366)(char *, _QWORD, uint64_t, int *);
  uint64_t v367;
  const void *v368;
  char *v369;
  char *v370;
  uint64_t v371;
  char *v372;
  char *v373;
  uint64_t v374;
  char *v375;
  char *v376;
  uint64_t v377;
  uint64_t v378;
  char *v379;
  uint64_t v380;
  uint64_t v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  uint64_t v402;
  char *v403;
  char *v404;
  int *v405;
  uint64_t v406;
  uint64_t (*v407)(char *, uint64_t, int *);
  int v408;
  int v409;
  char *v410;
  uint64_t v411;
  char *v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  char *v417;
  char *v418;
  unsigned int v419;
  unsigned int v420;
  uint64_t v421;
  char *v422;
  char *v423;
  uint64_t v424;
  char *v425;
  char *v426;
  void (*v427)(char *, _QWORD, uint64_t, int *);
  uint64_t v428;
  uint64_t v429;
  char *v430;
  char *v431;
  uint64_t v432;
  char *v433;
  char *v434;
  uint64_t v435;
  char *v436;
  char *v437;
  uint64_t v438;
  char *v439;
  char *v440;
  int *v441;
  uint64_t (*v442)(char *, uint64_t, int *);
  int v443;
  int v444;
  uint64_t v445;
  uint64_t v446;
  unsigned int v447;
  unsigned int v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  char *v452;
  char *v453;
  uint64_t v454;
  uint64_t v455;
  char *v456;
  char *v457;
  uint64_t v458;
  char *v459;
  char *v460;
  void (*v461)(char *, _QWORD, uint64_t, int *);
  uint64_t v462;
  uint64_t v463;
  char *v464;
  char *v465;
  unsigned int v466;
  unsigned int v467;
  uint64_t v468;
  uint64_t v469;
  char *v470;
  char *v471;
  uint64_t v472;
  char *v473;
  char *v474;
  uint64_t v475;
  char *v476;
  char *v477;
  int *v478;
  uint64_t v479;
  uint64_t (*v480)(char *, uint64_t, int *);
  int v481;
  int v482;
  char *v483;
  uint64_t v484;
  char *v485;
  char *v486;
  uint64_t v487;
  uint64_t v488;
  _DWORD *v489;
  char *v490;
  uint64_t v491;
  char *v492;
  char *v493;
  unsigned int v494;
  unsigned int v495;
  uint64_t v496;
  char *v497;
  char *v498;
  uint64_t v499;
  char *v500;
  char *v501;
  void (*v502)(char *, _QWORD, uint64_t, int *);
  uint64_t v503;
  uint64_t v504;
  char *v505;
  char *v506;
  uint64_t v507;
  char *v508;
  char *v509;
  uint64_t v510;
  char *v511;
  char *v512;
  uint64_t v513;
  char *v514;
  char *v515;
  uint64_t v516;
  uint64_t v517;
  uint64_t (*v518)(char *, uint64_t, uint64_t);
  int v519;
  int v520;
  uint64_t v521;
  uint64_t v522;
  unsigned int v523;
  unsigned int v524;
  _DWORD *v525;
  uint64_t v526;
  char *v527;
  char *v528;
  void (*v529)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v530;
  char *v531;
  char *v532;
  int *v533;
  uint64_t v534;
  uint64_t (*v535)(char *, uint64_t, int *);
  int v536;
  int v537;
  char *v538;
  uint64_t v539;
  char *v540;
  char *v541;
  uint64_t v542;
  uint64_t v543;
  char *v544;
  char *v545;
  uint64_t v546;
  char *v547;
  char *v548;
  unsigned int v549;
  unsigned int v550;
  uint64_t v551;
  char *v552;
  char *v553;
  uint64_t v554;
  char *v555;
  char *v556;
  void (*v557)(char *, _QWORD, uint64_t, int *);
  uint64_t v558;
  uint64_t v559;
  char *v560;
  char *v561;
  uint64_t v562;
  uint64_t v563;
  char *v564;
  char *v565;
  uint64_t v566;
  char *v567;
  char *v568;
  uint64_t v569;
  char *v570;
  char *v571;
  uint64_t v572;
  uint64_t (*v573)(char *, uint64_t, uint64_t);
  int v574;
  int v575;
  char *v576;
  uint64_t v577;
  char *v578;
  uint64_t v579;
  char *v580;
  char *v581;
  __int128 v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  uint64_t v591;
  __int128 v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  __int128 v596;
  __int128 v597;
  __int128 v598;
  __int128 v599;
  __int128 v600;
  __int128 v601;
  uint64_t v602;
  char *v603;
  _QWORD *v604;
  int *v605;
  uint64_t v606;
  uint64_t v607;
  void (**v608)(_DWORD *, _QWORD, uint64_t, _QWORD);
  uint64_t v609;
  char *v610;
  char *v611;
  uint64_t v612;
  uint64_t v613;
  unsigned int (*v614)(char *, uint64_t, uint64_t);
  uint64_t v615;
  uint64_t v616;
  char *v617;
  _QWORD *v618;
  uint64_t v619;
  char *v620;
  char *v621;
  uint64_t v622;
  __int128 v623;
  __int128 v624;
  __int128 v625;
  __int128 v626;
  __int128 v627;
  __int128 v628;
  uint64_t v629;
  uint64_t v630;
  char *v631;
  uint64_t v632;
  uint64_t v633;
  __int128 v634;
  __int128 v635;
  __int128 v636;
  __int128 v637;
  __int128 v638;
  __int128 v639;
  __int128 v640;
  __int128 v641;
  __int128 v642;
  __int128 v643;
  __int128 v644;
  __int128 v645;
  __int128 v646;
  __int128 v647;
  __int128 v648;
  __int128 v649;
  __int128 v650;
  __int128 v651;
  uint64_t v652;
  __int128 v653;
  __int128 v654;
  __int128 v655;
  __int128 v656;
  __int128 v657;
  __int128 v658;
  _OWORD *v659;
  __int128 *v660;
  uint64_t v661;
  __int128 v662;
  __int128 v663;
  __int128 v664;
  __int128 v665;
  __int128 v666;
  __int128 v667;
  __int128 v668;
  __int128 v669;
  __int128 v670;
  __int128 v671;
  __int128 v672;
  __int128 v673;
  __int128 v674;
  __int128 v675;
  __int128 v676;
  __int128 v677;
  __int128 v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  __int128 v682;
  __int128 v683;
  __int128 v684;
  __int128 v685;
  uint64_t v686;
  char *v687;
  _QWORD *v688;
  int *v689;
  uint64_t v690;
  uint64_t (*v691)(char *, uint64_t, int *);
  int v692;
  int v693;
  uint64_t v694;
  char *v695;
  uint64_t v696;
  uint64_t v697;
  unsigned int (*v698)(char *, uint64_t, uint64_t);
  uint64_t v699;
  uint64_t v700;
  char *v701;
  uint64_t v702;
  char *v703;
  char *v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t (*v707)(char *, uint64_t, uint64_t);
  int v708;
  int v709;
  uint64_t v710;
  char *v711;
  _QWORD *v712;
  uint64_t v713;
  char *v714;
  char *v715;
  uint64_t v716;
  __int128 v717;
  __int128 v718;
  __int128 v719;
  __int128 v720;
  __int128 v721;
  __int128 v722;
  uint64_t v724;
  uint64_t v725;
  char *v726;
  _QWORD *v727;
  uint64_t v728;
  uint64_t v729;
  char *v730;
  uint64_t v731;
  __int128 v732;
  __int128 v733;
  __int128 v734;
  __int128 v735;
  __int128 v736;
  __int128 v737;
  __int128 v738;
  __int128 v739;
  __int128 v740;
  __int128 v741;
  __int128 v742;
  __int128 v743;
  _QWORD *v744;
  char *__dst;
  void *v746;
  _QWORD *v747;
  void *v748;
  unsigned int (*v749)(char *, uint64_t, uint64_t);
  uint64_t v750;
  uint64_t v751;
  uint64_t v752;
  uint64_t v753;
  char *v754;
  char *v755;
  unsigned int (*v756)(char *, uint64_t, uint64_t);
  unsigned int (*v757)(char *, uint64_t, uint64_t);
  uint64_t v758;
  int *v759;
  char *v760;
  _DWORD *v761;

  v6 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
  v7 = (_QWORD *)*((_QWORD *)v6 - 1);
  v8 = (uint64_t (*)(_DWORD *, uint64_t, int *))v7[6];
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  v759 = v6;
  v761 = a2;
  if (!v9)
  {
    if (v10)
    {
      sub_1AD066230((uint64_t)a1, type metadata accessor for LinkPresentation.LinkMetadata);
      goto LABEL_7;
    }
    v752 = a3;
    *(_DWORD *)a1 = *a2;
    v18 = v6[5];
    v19 = &a1[v18];
    v20 = (char *)a2 + v18;
    v21 = sub_1AD63AF28();
    v750 = *(_QWORD *)(v21 - 8);
    v22 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v750 + 48);
    v23 = v22(v19, 1, v21);
    v757 = v22;
    v24 = v22(v20, 1, v21);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v750 + 16))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v750 + 56))(v19, 0, 1, v21);
        goto LABEL_28;
      }
    }
    else
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v750 + 24))(v19, v20, v21);
LABEL_28:
        v97 = v6[6];
        v98 = &a1[v97];
        v99 = (char *)a2 + v97;
        v100 = v22(&a1[v97], 1, v21);
        v101 = v22(v99, 1, v21);
        if (v100)
        {
          if (!v101)
          {
            (*(void (**)(char *, char *, uint64_t))(v750 + 16))(v98, v99, v21);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v750 + 56))(v98, 0, 1, v21);
            goto LABEL_34;
          }
        }
        else
        {
          if (!v101)
          {
            (*(void (**)(char *, char *, uint64_t))(v750 + 24))(v98, v99, v21);
LABEL_34:
            v103 = v6[7];
            v104 = &a1[v103];
            v105 = (_QWORD *)((char *)a2 + v103);
            *(_QWORD *)v104 = *v105;
            *((_QWORD *)v104 + 1) = v105[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v106 = v6[8];
            v107 = &a1[v106];
            v108 = (_QWORD *)((char *)a2 + v106);
            *(_QWORD *)v107 = *v108;
            *((_QWORD *)v107 + 1) = v108[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v109 = v6[9];
            v110 = &a1[v109];
            v111 = (_QWORD *)((char *)a2 + v109);
            *(_QWORD *)v110 = *v111;
            *((_QWORD *)v110 + 1) = v111[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v112 = v6[10];
            v113 = &a1[v112];
            v114 = (_QWORD *)((char *)a2 + v112);
            *(_QWORD *)v113 = *v114;
            *((_QWORD *)v113 + 1) = v114[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v115 = v6[11];
            v116 = &a1[v115];
            v117 = (_QWORD *)((char *)a2 + v115);
            *(_QWORD *)v116 = *v117;
            *((_QWORD *)v116 + 1) = v117[1];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
            v118 = v6[12];
            v119 = &a1[v118];
            v120 = (char *)a2 + v118;
            v121 = v22(&a1[v118], 1, v21);
            v122 = v22(v120, 1, v21);
            if (v121)
            {
              if (!v122)
              {
                (*(void (**)(char *, char *, uint64_t))(v750 + 16))(v119, v120, v21);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v750 + 56))(v119, 0, 1, v21);
                goto LABEL_40;
              }
            }
            else
            {
              if (!v122)
              {
                (*(void (**)(char *, char *, uint64_t))(v750 + 24))(v119, v120, v21);
LABEL_40:
                v124 = v6[13];
                v125 = &a1[v124];
                v126 = (_QWORD *)((char *)a2 + v124);
                *(_QWORD *)v125 = *v126;
                *((_QWORD *)v125 + 1) = v126[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v127 = v6[14];
                v128 = &a1[v127];
                v129 = (_QWORD *)((char *)a2 + v127);
                *(_QWORD *)v128 = *v129;
                *((_QWORD *)v128 + 1) = v129[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v130 = v6[15];
                v131 = &a1[v130];
                v132 = (_QWORD *)((char *)a2 + v130);
                *(_QWORD *)v131 = *v132;
                *((_QWORD *)v131 + 1) = v132[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v133 = v6[16];
                v134 = &a1[v133];
                v135 = (_QWORD *)((char *)a2 + v133);
                *(_QWORD *)v134 = *v135;
                *((_QWORD *)v134 + 1) = v135[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                a1[v6[17]] = *((_BYTE *)a2 + v6[17]);
                v136 = v6[18];
                v137 = &a1[v136];
                v138 = (char *)a2 + v136;
                v139 = v138[32];
                v140 = *((_OWORD *)v138 + 1);
                *(_OWORD *)v137 = *(_OWORD *)v138;
                *((_OWORD *)v137 + 1) = v140;
                v137[32] = v139;
                v141 = v6[19];
                v142 = &a1[v141];
                v143 = (_QWORD *)((char *)a2 + v141);
                *(_QWORD *)v142 = *v143;
                *((_QWORD *)v142 + 1) = v143[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v144 = v6[20];
                v145 = &a1[v144];
                v146 = (_QWORD *)((char *)a2 + v144);
                *(_QWORD *)v145 = *v146;
                *((_QWORD *)v145 + 1) = v146[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                v147 = v6[21];
                v148 = (uint64_t)&a1[v147];
                v149 = (char *)a2 + v147;
                v150 = *(_QWORD *)&a1[v147 + 16];
                v151 = *(_QWORD *)((char *)a2 + v147 + 16);
                if (v150 == 1)
                {
                  if (v151 == 1)
                  {
                    v152 = *(_OWORD *)v149;
                    v153 = *((_OWORD *)v149 + 1);
                    v154 = *((_OWORD *)v149 + 3);
                    *(_OWORD *)(v148 + 32) = *((_OWORD *)v149 + 2);
                    *(_OWORD *)(v148 + 48) = v154;
                    *(_OWORD *)v148 = v152;
                    *(_OWORD *)(v148 + 16) = v153;
                    v155 = *((_OWORD *)v149 + 4);
                    v156 = *((_OWORD *)v149 + 5);
                    v157 = *((_OWORD *)v149 + 6);
                    *(_OWORD *)(v148 + 105) = *(_OWORD *)(v149 + 105);
                    *(_OWORD *)(v148 + 80) = v156;
                    *(_OWORD *)(v148 + 96) = v157;
                    *(_OWORD *)(v148 + 64) = v155;
                  }
                  else
                  {
                    *(_QWORD *)v148 = *(_QWORD *)v149;
                    *(_QWORD *)(v148 + 8) = *((_QWORD *)v149 + 1);
                    *(_QWORD *)(v148 + 16) = *((_QWORD *)v149 + 2);
                    *(_QWORD *)(v148 + 24) = *((_QWORD *)v149 + 3);
                    *(_QWORD *)(v148 + 32) = *((_QWORD *)v149 + 4);
                    *(_QWORD *)(v148 + 40) = *((_QWORD *)v149 + 5);
                    v164 = *((_OWORD *)v149 + 3);
                    v165 = *((_OWORD *)v149 + 4);
                    *(_BYTE *)(v148 + 80) = v149[80];
                    *(_OWORD *)(v148 + 48) = v164;
                    *(_OWORD *)(v148 + 64) = v165;
                    v166 = *(_OWORD *)(v149 + 88);
                    v167 = *(_OWORD *)(v149 + 104);
                    *(_BYTE *)(v148 + 120) = v149[120];
                    *(_OWORD *)(v148 + 104) = v167;
                    *(_OWORD *)(v148 + 88) = v166;
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                  }
                }
                else if (v151 == 1)
                {
                  sub_1AD0661D0(v148);
                  v158 = *((_OWORD *)v149 + 3);
                  v160 = *(_OWORD *)v149;
                  v159 = *((_OWORD *)v149 + 1);
                  *(_OWORD *)(v148 + 32) = *((_OWORD *)v149 + 2);
                  *(_OWORD *)(v148 + 48) = v158;
                  *(_OWORD *)v148 = v160;
                  *(_OWORD *)(v148 + 16) = v159;
                  v162 = *((_OWORD *)v149 + 5);
                  v161 = *((_OWORD *)v149 + 6);
                  v163 = *((_OWORD *)v149 + 4);
                  *(_OWORD *)(v148 + 105) = *(_OWORD *)(v149 + 105);
                  *(_OWORD *)(v148 + 80) = v162;
                  *(_OWORD *)(v148 + 96) = v161;
                  *(_OWORD *)(v148 + 64) = v163;
                }
                else
                {
                  *(_QWORD *)v148 = *(_QWORD *)v149;
                  *(_QWORD *)(v148 + 8) = *((_QWORD *)v149 + 1);
                  *(_QWORD *)(v148 + 16) = *((_QWORD *)v149 + 2);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  *(_QWORD *)(v148 + 24) = *((_QWORD *)v149 + 3);
                  *(_QWORD *)(v148 + 32) = *((_QWORD *)v149 + 4);
                  *(_QWORD *)(v148 + 40) = *((_QWORD *)v149 + 5);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRelease();
                  v168 = *((_OWORD *)v149 + 3);
                  v169 = *((_OWORD *)v149 + 4);
                  *(_BYTE *)(v148 + 80) = v149[80];
                  *(_OWORD *)(v148 + 48) = v168;
                  *(_OWORD *)(v148 + 64) = v169;
                  v170 = *(_OWORD *)(v149 + 88);
                  v171 = *(_OWORD *)(v149 + 104);
                  *(_BYTE *)(v148 + 120) = v149[120];
                  *(_OWORD *)(v148 + 104) = v171;
                  *(_OWORD *)(v148 + 88) = v170;
                }
                v172 = v6[22];
                v173 = &a1[v172];
                v174 = (char *)a2 + v172;
                v175 = type metadata accessor for LinkPresentation.IconMetadata(0);
                v176 = *(_QWORD *)(v175 - 8);
                v177 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v176 + 48);
                v178 = v177(v173, 1, v175);
                v179 = v177(v174, 1, v175);
                v748 = (void *)v21;
                v754 = a1;
                if (v178)
                {
                  if (!v179)
                  {
                    v180 = a1;
                    *(_DWORD *)v173 = *(_DWORD *)v174;
                    v181 = *(int *)(v175 + 20);
                    v182 = &v173[v181];
                    v183 = &v174[v181];
                    if (v757(&v174[v181], 1, v21))
                    {
                      v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                      memcpy(v182, v183, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
                    }
                    else
                    {
                      (*(void (**)(char *, char *, uint64_t))(v750 + 16))(v182, v183, v21);
                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v750 + 56))(v182, 0, 1, v21);
                    }
                    v319 = *(int *)(v175 + 24);
                    v320 = &v173[v319];
                    v321 = &v174[v319];
                    *(_QWORD *)v320 = *(_QWORD *)v321;
                    *((_QWORD *)v320 + 1) = *((_QWORD *)v321 + 1);
                    v322 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v176 + 56);
                    swift_bridgeObjectRetain();
                    v322(v173, 0, 1, v175);
                    a1 = v180;
                    a2 = v761;
                    goto LABEL_117;
                  }
                }
                else
                {
                  if (!v179)
                  {
                    *(_DWORD *)v173 = *(_DWORD *)v174;
                    v312 = *(int *)(v175 + 20);
                    v313 = &v173[v312];
                    v314 = v21;
                    v315 = &v174[v312];
                    v316 = v757(&v173[v312], 1, v314);
                    v317 = v757(v315, 1, v314);
                    if (v316)
                    {
                      if (v317)
                      {
                        v318 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                        memcpy(v313, v315, *(_QWORD *)(*(_QWORD *)(v318 - 8) + 64));
                        v21 = (uint64_t)v748;
                      }
                      else
                      {
                        v325 = v315;
                        v21 = (uint64_t)v748;
                        (*(void (**)(char *, char *, void *))(v750 + 16))(v313, v325, v748);
                        (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v313, 0, 1, v748);
                      }
                    }
                    else if (v317)
                    {
                      (*(void (**)(char *, void *))(v750 + 8))(v313, v748);
                      v323 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                      v324 = v315;
                      v21 = (uint64_t)v748;
                      memcpy(v313, v324, *(_QWORD *)(*(_QWORD *)(v323 - 8) + 64));
                    }
                    else
                    {
                      v326 = v315;
                      v21 = (uint64_t)v748;
                      (*(void (**)(char *, char *, void *))(v750 + 24))(v313, v326, v748);
                    }
                    v327 = *(int *)(v175 + 24);
                    v328 = &v173[v327];
                    v329 = &v174[v327];
                    *(_QWORD *)v328 = *(_QWORD *)v329;
                    *((_QWORD *)v328 + 1) = *((_QWORD *)v329 + 1);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRelease();
                    a1 = v754;
LABEL_117:
                    v330 = v6[23];
                    v331 = (uint64_t)&a1[v330];
                    v332 = (char *)a2 + v330;
                    v333 = *(_QWORD *)&a1[v330 + 16];
                    v334 = *(_QWORD *)((char *)a2 + v330 + 16);
                    if (v333 == 1)
                    {
                      if (v334 == 1)
                      {
                        v335 = *(_OWORD *)v332;
                        v336 = *((_OWORD *)v332 + 1);
                        *(_QWORD *)(v331 + 32) = *((_QWORD *)v332 + 4);
                        *(_OWORD *)v331 = v335;
                        *(_OWORD *)(v331 + 16) = v336;
                      }
                      else
                      {
                        *(_QWORD *)v331 = *(_QWORD *)v332;
                        *(_QWORD *)(v331 + 8) = *((_QWORD *)v332 + 1);
                        *(_QWORD *)(v331 + 16) = *((_QWORD *)v332 + 2);
                        *(_QWORD *)(v331 + 24) = *((_QWORD *)v332 + 3);
                        *(_QWORD *)(v331 + 32) = *((_QWORD *)v332 + 4);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                      }
                    }
                    else if (v334 == 1)
                    {
                      sub_1AD066200(v331);
                      v337 = *((_QWORD *)v332 + 4);
                      v338 = *((_OWORD *)v332 + 1);
                      *(_OWORD *)v331 = *(_OWORD *)v332;
                      *(_OWORD *)(v331 + 16) = v338;
                      *(_QWORD *)(v331 + 32) = v337;
                    }
                    else
                    {
                      *(_QWORD *)v331 = *(_QWORD *)v332;
                      *(_QWORD *)(v331 + 8) = *((_QWORD *)v332 + 1);
                      *(_QWORD *)(v331 + 16) = *((_QWORD *)v332 + 2);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                      *(_QWORD *)(v331 + 24) = *((_QWORD *)v332 + 3);
                      *(_QWORD *)(v331 + 32) = *((_QWORD *)v332 + 4);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRelease();
                    }
                    v339 = v6[24];
                    v340 = &a1[v339];
                    v341 = (char *)a2 + v339;
                    v342 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
                    v343 = *((_QWORD *)v342 - 1);
                    v344 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v343 + 48);
                    v345 = v344(v340, 1, v342);
                    v346 = v344(v341, 1, v342);
                    if (v345)
                    {
                      if (!v346)
                      {
                        v347 = a1;
                        *(_DWORD *)v340 = *(_DWORD *)v341;
                        v348 = v342[5];
                        v349 = &v340[v348];
                        v350 = &v341[v348];
                        if (v757(&v341[v348], 1, v21))
                        {
                          v351 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                          memcpy(v349, v350, *(_QWORD *)(*(_QWORD *)(v351 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, char *, uint64_t))(v750 + 16))(v349, v350, v21);
                          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v750 + 56))(v349, 0, 1, v21);
                        }
                        v360 = v342[6];
                        v361 = &v340[v360];
                        v362 = &v341[v360];
                        *(_QWORD *)v361 = *(_QWORD *)v362;
                        *((_QWORD *)v361 + 1) = *((_QWORD *)v362 + 1);
                        v363 = v342[7];
                        v364 = &v340[v363];
                        v365 = &v341[v363];
                        *(_QWORD *)v364 = *(_QWORD *)v365;
                        *((_QWORD *)v364 + 1) = *((_QWORD *)v365 + 1);
                        v366 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v343 + 56);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        v366(v340, 0, 1, v342);
                        a1 = v347;
                        a2 = v761;
                        goto LABEL_141;
                      }
                    }
                    else
                    {
                      if (!v346)
                      {
                        *(_DWORD *)v340 = *(_DWORD *)v341;
                        v353 = v342[5];
                        v354 = &v340[v353];
                        v355 = v21;
                        v356 = &v341[v353];
                        v357 = v757(&v340[v353], 1, v355);
                        v358 = v757(v356, 1, v355);
                        if (v357)
                        {
                          if (v358)
                          {
                            v359 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                            memcpy(v354, v356, *(_QWORD *)(*(_QWORD *)(v359 - 8) + 64));
                            v21 = (uint64_t)v748;
                          }
                          else
                          {
                            v369 = v356;
                            v21 = (uint64_t)v748;
                            (*(void (**)(char *, char *, void *))(v750 + 16))(v354, v369, v748);
                            (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v354, 0, 1, v748);
                          }
                        }
                        else if (v358)
                        {
                          (*(void (**)(char *, void *))(v750 + 8))(v354, v748);
                          v367 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                          v368 = v356;
                          v21 = (uint64_t)v748;
                          memcpy(v354, v368, *(_QWORD *)(*(_QWORD *)(v367 - 8) + 64));
                        }
                        else
                        {
                          v370 = v356;
                          v21 = (uint64_t)v748;
                          (*(void (**)(char *, char *, void *))(v750 + 24))(v354, v370, v748);
                        }
                        v371 = v342[6];
                        v372 = &v340[v371];
                        v373 = &v341[v371];
                        *(_QWORD *)v372 = *(_QWORD *)v373;
                        *((_QWORD *)v372 + 1) = *((_QWORD *)v373 + 1);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        v374 = v342[7];
                        v375 = &v340[v374];
                        v376 = &v341[v374];
                        *(_QWORD *)v375 = *(_QWORD *)v376;
                        *((_QWORD *)v375 + 1) = *((_QWORD *)v376 + 1);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        a1 = v754;
LABEL_141:
                        v377 = v6[25];
                        v378 = (uint64_t)&a1[v377];
                        v379 = (char *)a2 + v377;
                        v380 = *(_QWORD *)&a1[v377 + 16];
                        v381 = *(_QWORD *)((char *)a2 + v377 + 16);
                        if (v380 == 1)
                        {
                          if (v381 == 1)
                          {
                            v382 = *(_OWORD *)v379;
                            v383 = *((_OWORD *)v379 + 1);
                            v384 = *((_OWORD *)v379 + 3);
                            *(_OWORD *)(v378 + 32) = *((_OWORD *)v379 + 2);
                            *(_OWORD *)(v378 + 48) = v384;
                            *(_OWORD *)v378 = v382;
                            *(_OWORD *)(v378 + 16) = v383;
                            v385 = *((_OWORD *)v379 + 4);
                            v386 = *((_OWORD *)v379 + 5);
                            v387 = *((_OWORD *)v379 + 6);
                            *(_OWORD *)(v378 + 105) = *(_OWORD *)(v379 + 105);
                            *(_OWORD *)(v378 + 80) = v386;
                            *(_OWORD *)(v378 + 96) = v387;
                            *(_OWORD *)(v378 + 64) = v385;
                          }
                          else
                          {
                            *(_QWORD *)v378 = *(_QWORD *)v379;
                            *(_QWORD *)(v378 + 8) = *((_QWORD *)v379 + 1);
                            *(_QWORD *)(v378 + 16) = *((_QWORD *)v379 + 2);
                            *(_QWORD *)(v378 + 24) = *((_QWORD *)v379 + 3);
                            *(_QWORD *)(v378 + 32) = *((_QWORD *)v379 + 4);
                            *(_QWORD *)(v378 + 40) = *((_QWORD *)v379 + 5);
                            v394 = *((_OWORD *)v379 + 3);
                            v395 = *((_OWORD *)v379 + 4);
                            *(_BYTE *)(v378 + 80) = v379[80];
                            *(_OWORD *)(v378 + 48) = v394;
                            *(_OWORD *)(v378 + 64) = v395;
                            v396 = *(_OWORD *)(v379 + 88);
                            v397 = *(_OWORD *)(v379 + 104);
                            *(_BYTE *)(v378 + 120) = v379[120];
                            *(_OWORD *)(v378 + 104) = v397;
                            *(_OWORD *)(v378 + 88) = v396;
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                          }
                        }
                        else if (v381 == 1)
                        {
                          sub_1AD0661D0(v378);
                          v388 = *((_OWORD *)v379 + 3);
                          v390 = *(_OWORD *)v379;
                          v389 = *((_OWORD *)v379 + 1);
                          *(_OWORD *)(v378 + 32) = *((_OWORD *)v379 + 2);
                          *(_OWORD *)(v378 + 48) = v388;
                          *(_OWORD *)v378 = v390;
                          *(_OWORD *)(v378 + 16) = v389;
                          v392 = *((_OWORD *)v379 + 5);
                          v391 = *((_OWORD *)v379 + 6);
                          v393 = *((_OWORD *)v379 + 4);
                          *(_OWORD *)(v378 + 105) = *(_OWORD *)(v379 + 105);
                          *(_OWORD *)(v378 + 80) = v392;
                          *(_OWORD *)(v378 + 96) = v391;
                          *(_OWORD *)(v378 + 64) = v393;
                        }
                        else
                        {
                          *(_QWORD *)v378 = *(_QWORD *)v379;
                          *(_QWORD *)(v378 + 8) = *((_QWORD *)v379 + 1);
                          *(_QWORD *)(v378 + 16) = *((_QWORD *)v379 + 2);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          *(_QWORD *)(v378 + 24) = *((_QWORD *)v379 + 3);
                          *(_QWORD *)(v378 + 32) = *((_QWORD *)v379 + 4);
                          *(_QWORD *)(v378 + 40) = *((_QWORD *)v379 + 5);
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          v398 = *((_OWORD *)v379 + 3);
                          v399 = *((_OWORD *)v379 + 4);
                          *(_BYTE *)(v378 + 80) = v379[80];
                          *(_OWORD *)(v378 + 48) = v398;
                          *(_OWORD *)(v378 + 64) = v399;
                          v400 = *(_OWORD *)(v379 + 88);
                          v401 = *(_OWORD *)(v379 + 104);
                          *(_BYTE *)(v378 + 120) = v379[120];
                          *(_OWORD *)(v378 + 104) = v401;
                          *(_OWORD *)(v378 + 88) = v400;
                        }
                        *(_QWORD *)&a1[v6[26]] = *(_QWORD *)((char *)a2 + v6[26]);
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRelease();
                        v402 = v6[27];
                        v403 = &a1[v402];
                        v404 = (char *)a2 + v402;
                        v405 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
                        v406 = *((_QWORD *)v405 - 1);
                        v407 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v406 + 48);
                        v408 = v407(v403, 1, v405);
                        v409 = v407(v404, 1, v405);
                        if (v408)
                        {
                          if (!v409)
                          {
                            v410 = a1;
                            *(_DWORD *)v403 = *(_DWORD *)v404;
                            v411 = v405[5];
                            v412 = &v403[v411];
                            v413 = &v404[v411];
                            if (v757(&v404[v411], 1, v21))
                            {
                              v414 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                              memcpy(v412, v413, *(_QWORD *)(*(_QWORD *)(v414 - 8) + 64));
                            }
                            else
                            {
                              (*(void (**)(char *, char *, uint64_t))(v750 + 16))(v412, v413, v21);
                              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v750 + 56))(v412, 0, 1, v21);
                            }
                            v421 = v405[6];
                            v422 = &v403[v421];
                            v423 = &v404[v421];
                            *(_QWORD *)v422 = *(_QWORD *)v423;
                            *((_QWORD *)v422 + 1) = *((_QWORD *)v423 + 1);
                            *(_OWORD *)&v403[v405[7]] = *(_OWORD *)&v404[v405[7]];
                            v424 = v405[8];
                            v425 = &v403[v424];
                            v426 = &v404[v424];
                            *(_QWORD *)v425 = *(_QWORD *)v426;
                            *((_QWORD *)v425 + 1) = *((_QWORD *)v426 + 1);
                            v427 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v406 + 56);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRetain();
                            v427(v403, 0, 1, v405);
                            a1 = v410;
                            a2 = v761;
LABEL_164:
                            *(_QWORD *)&a1[v6[28]] = *(_QWORD *)((char *)a2 + v6[28]);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            *(_QWORD *)&a1[v6[29]] = *(_QWORD *)((char *)a2 + v6[29]);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v438 = v6[30];
                            v439 = &a1[v438];
                            v440 = (char *)a2 + v438;
                            v441 = (int *)type metadata accessor for LinkPresentation.Video(0);
                            v747 = (_QWORD *)*((_QWORD *)v441 - 1);
                            v442 = (uint64_t (*)(char *, uint64_t, int *))v747[6];
                            v443 = v442(v439, 1, v441);
                            v444 = v442(v440, 1, v441);
                            if (v443)
                            {
                              if (!v444)
                              {
                                if (v757(v440, 1, (uint64_t)v748))
                                {
                                  v445 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                  memcpy(v439, v440, *(_QWORD *)(*(_QWORD *)(v445 - 8) + 64));
                                }
                                else
                                {
                                  (*(void (**)(char *, char *, void *))(v750 + 16))(v439, v440, v748);
                                  (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v439, 0, 1, v748);
                                }
                                v451 = v441[5];
                                v452 = &v439[v451];
                                v453 = &v440[v451];
                                if (v757(&v440[v451], 1, (uint64_t)v748))
                                {
                                  v454 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                  memcpy(v452, v453, *(_QWORD *)(*(_QWORD *)(v454 - 8) + 64));
                                }
                                else
                                {
                                  (*(void (**)(char *, char *, void *))(v750 + 16))(v452, v453, v748);
                                  (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v452, 0, 1, v748);
                                }
                                v455 = v441[6];
                                v456 = &v439[v455];
                                v457 = &v440[v455];
                                *(_QWORD *)v456 = *(_QWORD *)v457;
                                *((_QWORD *)v456 + 1) = *((_QWORD *)v457 + 1);
                                v439[v441[7]] = v440[v441[7]];
                                *(_QWORD *)&v439[v441[8]] = *(_QWORD *)&v440[v441[8]];
                                v458 = v441[9];
                                v459 = &v439[v458];
                                v460 = &v440[v458];
                                *v459 = *v460;
                                *((_QWORD *)v459 + 1) = *((_QWORD *)v460 + 1);
                                *((_QWORD *)v459 + 2) = *((_QWORD *)v460 + 2);
                                v461 = (void (*)(char *, _QWORD, uint64_t, int *))v747[7];
                                swift_bridgeObjectRetain();
                                swift_retain();
                                swift_bridgeObjectRetain();
                                v461(v439, 0, 1, v441);
LABEL_191:
                                v475 = v6[31];
                                v476 = &a1[v475];
                                v477 = (char *)a2 + v475;
                                v478 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
                                v479 = *((_QWORD *)v478 - 1);
                                v480 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v479 + 48);
                                v481 = v480(v476, 1, v478);
                                v482 = v480(v477, 1, v478);
                                if (v481)
                                {
                                  if (!v482)
                                  {
                                    v483 = a1;
                                    *(_DWORD *)v476 = *(_DWORD *)v477;
                                    v484 = v478[5];
                                    v485 = &v476[v484];
                                    v486 = &v477[v484];
                                    if (v757(&v477[v484], 1, (uint64_t)v748))
                                    {
                                      v487 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                      memcpy(v485, v486, *(_QWORD *)(*(_QWORD *)(v487 - 8) + 64));
                                    }
                                    else
                                    {
                                      (*(void (**)(char *, char *, void *))(v750 + 16))(v485, v486, v748);
                                      (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v485, 0, 1, v748);
                                    }
                                    v496 = v478[6];
                                    v497 = &v476[v496];
                                    v498 = &v477[v496];
                                    *(_QWORD *)v497 = *(_QWORD *)v498;
                                    *((_QWORD *)v497 + 1) = *((_QWORD *)v498 + 1);
                                    *(_OWORD *)&v476[v478[7]] = *(_OWORD *)&v477[v478[7]];
                                    v499 = v478[8];
                                    v500 = &v476[v499];
                                    v501 = &v477[v499];
                                    *(_QWORD *)v500 = *(_QWORD *)v501;
                                    *((_QWORD *)v500 + 1) = *((_QWORD *)v501 + 1);
                                    v502 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v479 + 56);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRetain();
                                    v502(v476, 0, 1, v478);
                                    a1 = v483;
                                    v6 = v759;
                                    v489 = v761;
LABEL_207:
                                    v513 = v6[32];
                                    v514 = &a1[v513];
                                    v515 = (char *)v489 + v513;
                                    v516 = type metadata accessor for LinkPresentation.Audio(0);
                                    v517 = *(_QWORD *)(v516 - 8);
                                    v518 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v517 + 48);
                                    v519 = v518(v514, 1, v516);
                                    v520 = v518(v515, 1, v516);
                                    if (v519)
                                    {
                                      if (!v520)
                                      {
                                        if (v757(v515, 1, (uint64_t)v748))
                                        {
                                          v521 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                          memcpy(v514, v515, *(_QWORD *)(*(_QWORD *)(v521 - 8) + 64));
                                        }
                                        else
                                        {
                                          (*(void (**)(char *, char *, void *))(v750 + 16))(v514, v515, v748);
                                          (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v514, 0, 1, v748);
                                        }
                                        v526 = *(int *)(v516 + 20);
                                        v527 = &v514[v526];
                                        v528 = &v515[v526];
                                        *(_QWORD *)v527 = *(_QWORD *)v528;
                                        *((_QWORD *)v527 + 1) = *((_QWORD *)v528 + 1);
                                        v529 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v517 + 56);
                                        swift_bridgeObjectRetain();
                                        v529(v514, 0, 1, v516);
                                        goto LABEL_219;
                                      }
LABEL_213:
                                      v522 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
                                      memcpy(v514, v515, *(_QWORD *)(*(_QWORD *)(v522 - 8) + 64));
LABEL_219:
                                      v525 = v761;
                                      goto LABEL_220;
                                    }
                                    if (v520)
                                    {
                                      sub_1AD066230((uint64_t)v514, type metadata accessor for LinkPresentation.Audio);
                                      goto LABEL_213;
                                    }
                                    v523 = v757(v514, 1, (uint64_t)v748);
                                    v524 = v757(v515, 1, (uint64_t)v748);
                                    v525 = v761;
                                    if (v523)
                                    {
                                      if (!v524)
                                      {
                                        (*(void (**)(char *, char *, void *))(v750 + 16))(v514, v515, v748);
                                        (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v514, 0, 1, v748);
LABEL_235:
                                        v559 = *(int *)(v516 + 20);
                                        v560 = &v514[v559];
                                        v561 = &v515[v559];
                                        *(_QWORD *)v560 = *(_QWORD *)v561;
                                        *((_QWORD *)v560 + 1) = *((_QWORD *)v561 + 1);
                                        swift_bridgeObjectRetain();
                                        swift_bridgeObjectRelease();
LABEL_220:
                                        v530 = v6[33];
                                        v531 = &a1[v530];
                                        v532 = (char *)v525 + v530;
                                        v533 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
                                        v534 = *((_QWORD *)v533 - 1);
                                        v535 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v534 + 48);
                                        v536 = v535(v531, 1, v533);
                                        v537 = v535(v532, 1, v533);
                                        if (v536)
                                        {
                                          if (!v537)
                                          {
                                            v538 = a1;
                                            *(_DWORD *)v531 = *(_DWORD *)v532;
                                            v539 = v533[5];
                                            v540 = &v531[v539];
                                            v541 = &v532[v539];
                                            if (v757(&v532[v539], 1, (uint64_t)v748))
                                            {
                                              v542 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                              memcpy(v540, v541, *(_QWORD *)(*(_QWORD *)(v542 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(char *, char *, void *))(v750 + 16))(v540, v541, v748);
                                              (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v540, 0, 1, v748);
                                            }
                                            v551 = v533[6];
                                            v552 = &v531[v551];
                                            v553 = &v532[v551];
                                            *(_QWORD *)v552 = *(_QWORD *)v553;
                                            *((_QWORD *)v552 + 1) = *((_QWORD *)v553 + 1);
                                            v554 = v533[7];
                                            v555 = &v531[v554];
                                            v556 = &v532[v554];
                                            *(_QWORD *)v555 = *(_QWORD *)v556;
                                            *((_QWORD *)v555 + 1) = *((_QWORD *)v556 + 1);
                                            v557 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v534 + 56);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRetain();
                                            v557(v531, 0, 1, v533);
                                            a1 = v538;
                                            v6 = v759;
                                            v544 = (char *)v761;
LABEL_240:
                                            *(_QWORD *)&a1[v6[34]] = *(_QWORD *)&v544[v6[34]];
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(_QWORD *)&a1[v6[35]] = *(_QWORD *)&v544[v6[35]];
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(_QWORD *)&a1[v6[36]] = *(_QWORD *)&v544[v6[36]];
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(_QWORD *)&a1[v6[37]] = *(_QWORD *)&v544[v6[37]];
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(_QWORD *)&a1[v6[38]] = *(_QWORD *)&v544[v6[38]];
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(_QWORD *)&a1[v6[39]] = *(_QWORD *)&v544[v6[39]];
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            *(_QWORD *)&a1[v6[40]] = *(_QWORD *)&v544[v6[40]];
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            v569 = v6[41];
                                            v570 = &a1[v569];
                                            v571 = &v544[v569];
                                            v572 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
                                            v573 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v572 - 8) + 48);
                                            v574 = v573(v570, 1, v572);
                                            v575 = v573(v571, 1, v572);
                                            if (v574)
                                            {
                                              if (!v575)
                                              {
                                                v576 = (char *)&loc_1AD05A334
                                                     + 4 * word_1AD64A320[swift_getEnumCaseMultiPayload()];
                                                __asm { BR              X10 }
                                              }
                                            }
                                            else
                                            {
                                              if (!v575)
                                              {
                                                if (a1 != v544)
                                                {
                                                  sub_1AD066230((uint64_t)v570, type metadata accessor for LinkPresentation.SpecializationMetadata);
                                                  v578 = (char *)&loc_1AD05A3C4
                                                       + 4
                                                       * word_1AD64A368[swift_getEnumCaseMultiPayload()];
                                                  __asm { BR              X10 }
                                                }
LABEL_268:
                                                v629 = v6[42];
                                                v630 = (uint64_t)&a1[v629];
                                                v631 = &v544[v629];
                                                v632 = *(_QWORD *)&a1[v629 + 8];
                                                v633 = *(_QWORD *)&v544[v629 + 8];
                                                if (v632 == 1)
                                                {
                                                  if (v633 == 1)
                                                  {
                                                    v634 = *(_OWORD *)v631;
                                                    v635 = *((_OWORD *)v631 + 1);
                                                    v636 = *((_OWORD *)v631 + 3);
                                                    *(_OWORD *)(v630 + 32) = *((_OWORD *)v631 + 2);
                                                    *(_OWORD *)(v630 + 48) = v636;
                                                    *(_OWORD *)v630 = v634;
                                                    *(_OWORD *)(v630 + 16) = v635;
                                                    v637 = *((_OWORD *)v631 + 4);
                                                    v638 = *((_OWORD *)v631 + 5);
                                                    v639 = *((_OWORD *)v631 + 7);
                                                    *(_OWORD *)(v630 + 96) = *((_OWORD *)v631 + 6);
                                                    *(_OWORD *)(v630 + 112) = v639;
                                                    *(_OWORD *)(v630 + 64) = v637;
                                                    *(_OWORD *)(v630 + 80) = v638;
                                                    v640 = *((_OWORD *)v631 + 8);
                                                    v641 = *((_OWORD *)v631 + 9);
                                                    v642 = *((_OWORD *)v631 + 10);
                                                    *(_QWORD *)(v630 + 176) = *((_QWORD *)v631 + 22);
                                                    *(_OWORD *)(v630 + 144) = v641;
                                                    *(_OWORD *)(v630 + 160) = v642;
                                                    *(_OWORD *)(v630 + 128) = v640;
                                                  }
                                                  else
                                                  {
                                                    *(_QWORD *)v630 = *(_QWORD *)v631;
                                                    *(_QWORD *)(v630 + 8) = *((_QWORD *)v631 + 1);
                                                    v652 = *((_QWORD *)v631 + 4);
                                                    swift_bridgeObjectRetain();
                                                    if (v652 == 1)
                                                    {
                                                      v653 = *((_OWORD *)v631 + 1);
                                                      v654 = *((_OWORD *)v631 + 2);
                                                      v655 = *((_OWORD *)v631 + 4);
                                                      *(_OWORD *)(v630 + 48) = *((_OWORD *)v631 + 3);
                                                      *(_OWORD *)(v630 + 64) = v655;
                                                      *(_OWORD *)(v630 + 16) = v653;
                                                      *(_OWORD *)(v630 + 32) = v654;
                                                      v656 = *((_OWORD *)v631 + 5);
                                                      v657 = *((_OWORD *)v631 + 6);
                                                      v658 = *((_OWORD *)v631 + 7);
                                                      *(_OWORD *)(v630 + 121) = *(_OWORD *)(v631 + 121);
                                                      *(_OWORD *)(v630 + 96) = v657;
                                                      *(_OWORD *)(v630 + 112) = v658;
                                                      *(_OWORD *)(v630 + 80) = v656;
                                                    }
                                                    else
                                                    {
                                                      *(_QWORD *)(v630 + 16) = *((_QWORD *)v631 + 2);
                                                      *(_QWORD *)(v630 + 24) = *((_QWORD *)v631 + 3);
                                                      *(_QWORD *)(v630 + 32) = *((_QWORD *)v631 + 4);
                                                      *(_QWORD *)(v630 + 40) = *((_QWORD *)v631 + 5);
                                                      *(_QWORD *)(v630 + 48) = *((_QWORD *)v631 + 6);
                                                      *(_QWORD *)(v630 + 56) = *((_QWORD *)v631 + 7);
                                                      v668 = *((_OWORD *)v631 + 4);
                                                      v669 = *((_OWORD *)v631 + 5);
                                                      *(_BYTE *)(v630 + 96) = v631[96];
                                                      *(_OWORD *)(v630 + 64) = v668;
                                                      *(_OWORD *)(v630 + 80) = v669;
                                                      v670 = *(_OWORD *)(v631 + 104);
                                                      v671 = *(_OWORD *)(v631 + 120);
                                                      *(_BYTE *)(v630 + 136) = v631[136];
                                                      *(_OWORD *)(v630 + 120) = v671;
                                                      *(_OWORD *)(v630 + 104) = v670;
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                    }
                                                    *(_QWORD *)(v630 + 144) = *((_QWORD *)v631 + 18);
                                                    *(_QWORD *)(v630 + 152) = *((_QWORD *)v631 + 19);
                                                    *(_QWORD *)(v630 + 160) = *((_QWORD *)v631 + 20);
                                                    *(_QWORD *)(v630 + 168) = *((_QWORD *)v631 + 21);
                                                    *(_QWORD *)(v630 + 176) = *((_QWORD *)v631 + 22);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                  }
                                                }
                                                else if (v633 == 1)
                                                {
                                                  sub_1AD06626C(v630);
                                                  v643 = *((_OWORD *)v631 + 3);
                                                  v645 = *(_OWORD *)v631;
                                                  v644 = *((_OWORD *)v631 + 1);
                                                  *(_OWORD *)(v630 + 32) = *((_OWORD *)v631 + 2);
                                                  *(_OWORD *)(v630 + 48) = v643;
                                                  *(_OWORD *)v630 = v645;
                                                  *(_OWORD *)(v630 + 16) = v644;
                                                  v646 = *((_OWORD *)v631 + 7);
                                                  v648 = *((_OWORD *)v631 + 4);
                                                  v647 = *((_OWORD *)v631 + 5);
                                                  *(_OWORD *)(v630 + 96) = *((_OWORD *)v631 + 6);
                                                  *(_OWORD *)(v630 + 112) = v646;
                                                  *(_OWORD *)(v630 + 64) = v648;
                                                  *(_OWORD *)(v630 + 80) = v647;
                                                  v650 = *((_OWORD *)v631 + 9);
                                                  v649 = *((_OWORD *)v631 + 10);
                                                  v651 = *((_OWORD *)v631 + 8);
                                                  *(_QWORD *)(v630 + 176) = *((_QWORD *)v631 + 22);
                                                  *(_OWORD *)(v630 + 144) = v650;
                                                  *(_OWORD *)(v630 + 160) = v649;
                                                  *(_OWORD *)(v630 + 128) = v651;
                                                }
                                                else
                                                {
                                                  *(_QWORD *)v630 = *(_QWORD *)v631;
                                                  *(_QWORD *)(v630 + 8) = *((_QWORD *)v631 + 1);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRelease();
                                                  v659 = (_OWORD *)(v630 + 16);
                                                  v660 = (__int128 *)(v631 + 16);
                                                  v661 = *((_QWORD *)v631 + 4);
                                                  if (*(_QWORD *)(v630 + 32) == 1)
                                                  {
                                                    if (v661 == 1)
                                                    {
                                                      v662 = *v660;
                                                      v663 = *((_OWORD *)v631 + 2);
                                                      v664 = *((_OWORD *)v631 + 4);
                                                      *(_OWORD *)(v630 + 48) = *((_OWORD *)v631 + 3);
                                                      *(_OWORD *)(v630 + 64) = v664;
                                                      *v659 = v662;
                                                      *(_OWORD *)(v630 + 32) = v663;
                                                      v665 = *((_OWORD *)v631 + 5);
                                                      v666 = *((_OWORD *)v631 + 6);
                                                      v667 = *((_OWORD *)v631 + 7);
                                                      *(_OWORD *)(v630 + 121) = *(_OWORD *)(v631 + 121);
                                                      *(_OWORD *)(v630 + 96) = v666;
                                                      *(_OWORD *)(v630 + 112) = v667;
                                                      *(_OWORD *)(v630 + 80) = v665;
                                                    }
                                                    else
                                                    {
                                                      *(_QWORD *)(v630 + 16) = *((_QWORD *)v631 + 2);
                                                      *(_QWORD *)(v630 + 24) = *((_QWORD *)v631 + 3);
                                                      *(_QWORD *)(v630 + 32) = *((_QWORD *)v631 + 4);
                                                      *(_QWORD *)(v630 + 40) = *((_QWORD *)v631 + 5);
                                                      *(_QWORD *)(v630 + 48) = *((_QWORD *)v631 + 6);
                                                      *(_QWORD *)(v630 + 56) = *((_QWORD *)v631 + 7);
                                                      v678 = *((_OWORD *)v631 + 4);
                                                      v679 = *((_OWORD *)v631 + 5);
                                                      *(_BYTE *)(v630 + 96) = v631[96];
                                                      *(_OWORD *)(v630 + 64) = v678;
                                                      *(_OWORD *)(v630 + 80) = v679;
                                                      v680 = *(_OWORD *)(v631 + 104);
                                                      v681 = *(_OWORD *)(v631 + 120);
                                                      *(_BYTE *)(v630 + 136) = v631[136];
                                                      *(_OWORD *)(v630 + 120) = v681;
                                                      *(_OWORD *)(v630 + 104) = v680;
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                    }
                                                  }
                                                  else if (v661 == 1)
                                                  {
                                                    sub_1AD0661D0(v630 + 16);
                                                    v672 = *((_OWORD *)v631 + 4);
                                                    v674 = *v660;
                                                    v673 = *((_OWORD *)v631 + 2);
                                                    *(_OWORD *)(v630 + 48) = *((_OWORD *)v631 + 3);
                                                    *(_OWORD *)(v630 + 64) = v672;
                                                    *v659 = v674;
                                                    *(_OWORD *)(v630 + 32) = v673;
                                                    v676 = *((_OWORD *)v631 + 6);
                                                    v675 = *((_OWORD *)v631 + 7);
                                                    v677 = *((_OWORD *)v631 + 5);
                                                    *(_OWORD *)(v630 + 121) = *(_OWORD *)(v631 + 121);
                                                    *(_OWORD *)(v630 + 96) = v676;
                                                    *(_OWORD *)(v630 + 112) = v675;
                                                    *(_OWORD *)(v630 + 80) = v677;
                                                  }
                                                  else
                                                  {
                                                    *(_QWORD *)(v630 + 16) = *((_QWORD *)v631 + 2);
                                                    *(_QWORD *)(v630 + 24) = *((_QWORD *)v631 + 3);
                                                    *(_QWORD *)(v630 + 32) = *((_QWORD *)v631 + 4);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(_QWORD *)(v630 + 40) = *((_QWORD *)v631 + 5);
                                                    *(_QWORD *)(v630 + 48) = *((_QWORD *)v631 + 6);
                                                    *(_QWORD *)(v630 + 56) = *((_QWORD *)v631 + 7);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    v682 = *((_OWORD *)v631 + 4);
                                                    v683 = *((_OWORD *)v631 + 5);
                                                    *(_BYTE *)(v630 + 96) = v631[96];
                                                    *(_OWORD *)(v630 + 64) = v682;
                                                    *(_OWORD *)(v630 + 80) = v683;
                                                    v684 = *(_OWORD *)(v631 + 104);
                                                    v685 = *(_OWORD *)(v631 + 120);
                                                    *(_BYTE *)(v630 + 136) = v631[136];
                                                    *(_OWORD *)(v630 + 120) = v685;
                                                    *(_OWORD *)(v630 + 104) = v684;
                                                  }
                                                  *(_QWORD *)(v630 + 144) = *((_QWORD *)v631 + 18);
                                                  *(_QWORD *)(v630 + 152) = *((_QWORD *)v631 + 19);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRelease();
                                                  *(_QWORD *)(v630 + 160) = *((_QWORD *)v631 + 20);
                                                  *(_QWORD *)(v630 + 168) = *((_QWORD *)v631 + 21);
                                                  swift_bridgeObjectRetain();
                                                  swift_bridgeObjectRelease();
                                                  *(_QWORD *)(v630 + 176) = *((_QWORD *)v631 + 22);
                                                }
                                                v686 = v6[43];
                                                v687 = &a1[v686];
                                                v688 = (_QWORD *)((char *)v761 + v686);
                                                v689 = (int *)type metadata accessor for CollaborationMetadata();
                                                v690 = *((_QWORD *)v689 - 1);
                                                v691 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v690 + 48);
                                                v692 = v691(v687, 1, v689);
                                                v693 = v691(v688, 1, v689);
                                                if (v692)
                                                {
                                                  if (!v693)
                                                  {
                                                    *(_QWORD *)v687 = *v688;
                                                    *((_QWORD *)v687 + 1) = v688[1];
                                                    *((_QWORD *)v687 + 2) = v688[2];
                                                    *((_QWORD *)v687 + 3) = v688[3];
                                                    v694 = v689[6];
                                                    v760 = &v687[v694];
                                                    v695 = (char *)v688 + v694;
                                                    v696 = sub_1AD63B03C();
                                                    v697 = *(_QWORD *)(v696 - 8);
                                                    v698 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v697 + 48);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    if (v698(v695, 1, v696))
                                                    {
                                                      v699 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                      memcpy(v760, v695, *(_QWORD *)(*(_QWORD *)(v699 - 8) + 64));
                                                    }
                                                    else
                                                    {
                                                      (*(void (**)(char *, char *, uint64_t))(v697 + 16))(v760, v695, v696);
                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v697 + 56))(v760, 0, 1, v696);
                                                    }
                                                    v710 = v689[7];
                                                    v711 = &v687[v710];
                                                    v712 = (_QWORD *)((char *)v688 + v710);
                                                    *(_QWORD *)v711 = *v712;
                                                    *((_QWORD *)v711 + 1) = v712[1];
                                                    *(_QWORD *)&v687[v689[8]] = *(_QWORD *)((char *)v688 + v689[8]);
                                                    *(_QWORD *)&v687[v689[9]] = *(_QWORD *)((char *)v688 + v689[9]);
                                                    v713 = v689[10];
                                                    v714 = &v687[v713];
                                                    v715 = (char *)v688 + v713;
                                                    v716 = *(_QWORD *)((char *)v688 + v713 + 112);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRetain();
                                                    if (v716)
                                                    {
                                                      *v714 = *v715;
                                                      *((_QWORD *)v714 + 1) = *((_QWORD *)v715 + 1);
                                                      *((_QWORD *)v714 + 2) = *((_QWORD *)v715 + 2);
                                                      *((_QWORD *)v714 + 3) = *((_QWORD *)v715 + 3);
                                                      *((_QWORD *)v714 + 4) = *((_QWORD *)v715 + 4);
                                                      *((_QWORD *)v714 + 5) = *((_QWORD *)v715 + 5);
                                                      *((_QWORD *)v714 + 6) = *((_QWORD *)v715 + 6);
                                                      *((_QWORD *)v714 + 7) = *((_QWORD *)v715 + 7);
                                                      *((_QWORD *)v714 + 8) = *((_QWORD *)v715 + 8);
                                                      *((_QWORD *)v714 + 9) = *((_QWORD *)v715 + 9);
                                                      *((_QWORD *)v714 + 10) = *((_QWORD *)v715 + 10);
                                                      *((_QWORD *)v714 + 11) = *((_QWORD *)v715 + 11);
                                                      v714[96] = v715[96];
                                                      *((_QWORD *)v714 + 13) = *((_QWORD *)v715 + 13);
                                                      *((_QWORD *)v714 + 14) = *((_QWORD *)v715 + 14);
                                                      *((_QWORD *)v714 + 15) = *((_QWORD *)v715 + 15);
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                    }
                                                    else
                                                    {
                                                      v717 = *(_OWORD *)v715;
                                                      v718 = *((_OWORD *)v715 + 1);
                                                      v719 = *((_OWORD *)v715 + 3);
                                                      *((_OWORD *)v714 + 2) = *((_OWORD *)v715 + 2);
                                                      *((_OWORD *)v714 + 3) = v719;
                                                      *(_OWORD *)v714 = v717;
                                                      *((_OWORD *)v714 + 1) = v718;
                                                      v720 = *((_OWORD *)v715 + 4);
                                                      v721 = *((_OWORD *)v715 + 5);
                                                      v722 = *((_OWORD *)v715 + 7);
                                                      *((_OWORD *)v714 + 6) = *((_OWORD *)v715 + 6);
                                                      *((_OWORD *)v714 + 7) = v722;
                                                      *((_OWORD *)v714 + 4) = v720;
                                                      *((_OWORD *)v714 + 5) = v721;
                                                    }
                                                    a3 = v752;
                                                    a1 = v754;
                                                    (*(void (**)(char *, _QWORD, uint64_t, int *))(v690 + 56))(v687, 0, 1, v689);
                                                    a2 = v761;
                                                    goto LABEL_301;
                                                  }
                                                  goto LABEL_291;
                                                }
                                                if (v693)
                                                {
                                                  sub_1AD066230((uint64_t)v687, (uint64_t (*)(_QWORD))type metadata accessor for CollaborationMetadata);
LABEL_291:
                                                  v700 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
                                                  memcpy(v687, v688, *(_QWORD *)(*(_QWORD *)(v700 - 8) + 64));
LABEL_292:
                                                  a2 = v761;
                                                  a3 = v752;
                                                  goto LABEL_301;
                                                }
                                                v701 = a1;
                                                *(_QWORD *)v687 = *v688;
                                                *((_QWORD *)v687 + 1) = v688[1];
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRelease();
                                                *((_QWORD *)v687 + 2) = v688[2];
                                                *((_QWORD *)v687 + 3) = v688[3];
                                                swift_bridgeObjectRetain();
                                                swift_bridgeObjectRelease();
                                                v702 = v689[6];
                                                v703 = &v687[v702];
                                                v704 = (char *)v688 + v702;
                                                v705 = sub_1AD63B03C();
                                                v706 = *(_QWORD *)(v705 - 8);
                                                v707 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v706 + 48);
                                                v708 = v707(v703, 1, v705);
                                                v709 = v707(v704, 1, v705);
                                                if (v708)
                                                {
                                                  if (!v709)
                                                  {
                                                    (*(void (**)(char *, char *, uint64_t))(v706 + 16))(v703, v704, v705);
                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v706 + 56))(v703, 0, 1, v705);
                                                    goto LABEL_305;
                                                  }
                                                }
                                                else
                                                {
                                                  if (!v709)
                                                  {
                                                    (*(void (**)(char *, char *, uint64_t))(v706 + 24))(v703, v704, v705);
LABEL_305:
                                                    a1 = v701;
                                                    v725 = v689[7];
                                                    v726 = &v687[v725];
                                                    v727 = (_QWORD *)((char *)v688 + v725);
                                                    *(_QWORD *)v726 = *v727;
                                                    *((_QWORD *)v726 + 1) = v727[1];
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(_QWORD *)&v687[v689[8]] = *(_QWORD *)((char *)v688 + v689[8]);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    *(_QWORD *)&v687[v689[9]] = *(_QWORD *)((char *)v688 + v689[9]);
                                                    swift_bridgeObjectRetain();
                                                    swift_bridgeObjectRelease();
                                                    v728 = v689[10];
                                                    v729 = (uint64_t)&v687[v728];
                                                    v730 = (char *)v688 + v728;
                                                    v731 = *(_QWORD *)((char *)v688 + v728 + 112);
                                                    if (*(_QWORD *)(v729 + 112))
                                                    {
                                                      if (v731)
                                                      {
                                                        *(_BYTE *)v729 = *v730;
                                                        *(_QWORD *)(v729 + 8) = *((_QWORD *)v730 + 1);
                                                        *(_QWORD *)(v729 + 16) = *((_QWORD *)v730 + 2);
                                                        *(_QWORD *)(v729 + 24) = *((_QWORD *)v730 + 3);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)(v729 + 32) = *((_QWORD *)v730 + 4);
                                                        *(_QWORD *)(v729 + 40) = *((_QWORD *)v730 + 5);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)(v729 + 48) = *((_QWORD *)v730 + 6);
                                                        *(_QWORD *)(v729 + 56) = *((_QWORD *)v730 + 7);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)(v729 + 64) = *((_QWORD *)v730 + 8);
                                                        *(_QWORD *)(v729 + 72) = *((_QWORD *)v730 + 9);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)(v729 + 80) = *((_QWORD *)v730 + 10);
                                                        *(_QWORD *)(v729 + 88) = *((_QWORD *)v730 + 11);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(_BYTE *)(v729 + 96) = v730[96];
                                                        *(_QWORD *)(v729 + 104) = *((_QWORD *)v730 + 13);
                                                        *(_QWORD *)(v729 + 112) = *((_QWORD *)v730 + 14);
                                                        swift_bridgeObjectRetain();
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)(v729 + 120) = *((_QWORD *)v730 + 15);
                                                      }
                                                      else
                                                      {
                                                        sub_1AD066298(v729);
                                                        v732 = *((_OWORD *)v730 + 3);
                                                        v734 = *(_OWORD *)v730;
                                                        v733 = *((_OWORD *)v730 + 1);
                                                        *(_OWORD *)(v729 + 32) = *((_OWORD *)v730 + 2);
                                                        *(_OWORD *)(v729 + 48) = v732;
                                                        *(_OWORD *)v729 = v734;
                                                        *(_OWORD *)(v729 + 16) = v733;
                                                        v735 = *((_OWORD *)v730 + 7);
                                                        v737 = *((_OWORD *)v730 + 4);
                                                        v736 = *((_OWORD *)v730 + 5);
                                                        *(_OWORD *)(v729 + 96) = *((_OWORD *)v730 + 6);
                                                        *(_OWORD *)(v729 + 112) = v735;
                                                        *(_OWORD *)(v729 + 64) = v737;
                                                        *(_OWORD *)(v729 + 80) = v736;
                                                      }
                                                    }
                                                    else if (v731)
                                                    {
                                                      *(_BYTE *)v729 = *v730;
                                                      *(_QWORD *)(v729 + 8) = *((_QWORD *)v730 + 1);
                                                      *(_QWORD *)(v729 + 16) = *((_QWORD *)v730 + 2);
                                                      *(_QWORD *)(v729 + 24) = *((_QWORD *)v730 + 3);
                                                      *(_QWORD *)(v729 + 32) = *((_QWORD *)v730 + 4);
                                                      *(_QWORD *)(v729 + 40) = *((_QWORD *)v730 + 5);
                                                      *(_QWORD *)(v729 + 48) = *((_QWORD *)v730 + 6);
                                                      *(_QWORD *)(v729 + 56) = *((_QWORD *)v730 + 7);
                                                      *(_QWORD *)(v729 + 64) = *((_QWORD *)v730 + 8);
                                                      *(_QWORD *)(v729 + 72) = *((_QWORD *)v730 + 9);
                                                      *(_QWORD *)(v729 + 80) = *((_QWORD *)v730 + 10);
                                                      *(_QWORD *)(v729 + 88) = *((_QWORD *)v730 + 11);
                                                      *(_BYTE *)(v729 + 96) = v730[96];
                                                      *(_QWORD *)(v729 + 104) = *((_QWORD *)v730 + 13);
                                                      *(_QWORD *)(v729 + 112) = *((_QWORD *)v730 + 14);
                                                      *(_QWORD *)(v729 + 120) = *((_QWORD *)v730 + 15);
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                      swift_bridgeObjectRetain();
                                                    }
                                                    else
                                                    {
                                                      v738 = *(_OWORD *)v730;
                                                      v739 = *((_OWORD *)v730 + 1);
                                                      v740 = *((_OWORD *)v730 + 3);
                                                      *(_OWORD *)(v729 + 32) = *((_OWORD *)v730 + 2);
                                                      *(_OWORD *)(v729 + 48) = v740;
                                                      *(_OWORD *)v729 = v738;
                                                      *(_OWORD *)(v729 + 16) = v739;
                                                      v741 = *((_OWORD *)v730 + 4);
                                                      v742 = *((_OWORD *)v730 + 5);
                                                      v743 = *((_OWORD *)v730 + 7);
                                                      *(_OWORD *)(v729 + 96) = *((_OWORD *)v730 + 6);
                                                      *(_OWORD *)(v729 + 112) = v743;
                                                      *(_OWORD *)(v729 + 64) = v741;
                                                      *(_OWORD *)(v729 + 80) = v742;
                                                    }
                                                    goto LABEL_292;
                                                  }
                                                  (*(void (**)(char *, uint64_t))(v706 + 8))(v703, v705);
                                                }
                                                v724 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                memcpy(v703, v704, *(_QWORD *)(*(_QWORD *)(v724 - 8) + 64));
                                                goto LABEL_305;
                                              }
                                              sub_1AD066230((uint64_t)v570, type metadata accessor for LinkPresentation.SpecializationMetadata);
                                            }
                                            v577 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
                                            memcpy(v570, v571, *(_QWORD *)(*(_QWORD *)(v577 - 8) + 64));
                                            goto LABEL_268;
                                          }
LABEL_226:
                                          v543 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
                                          memcpy(v531, v532, *(_QWORD *)(*(_QWORD *)(v543 - 8) + 64));
                                          v544 = (char *)v761;
                                          goto LABEL_240;
                                        }
                                        if (v537)
                                        {
                                          sub_1AD066230((uint64_t)v531, type metadata accessor for LinkPresentation.AudioMetadata);
                                          goto LABEL_226;
                                        }
                                        v545 = a1;
                                        *(_DWORD *)v531 = *(_DWORD *)v532;
                                        v546 = v533[5];
                                        v547 = &v531[v546];
                                        v548 = &v532[v546];
                                        v549 = v757(&v531[v546], 1, (uint64_t)v748);
                                        v550 = v757(v548, 1, (uint64_t)v748);
                                        v544 = (char *)v761;
                                        if (v549)
                                        {
                                          if (!v550)
                                          {
                                            (*(void (**)(char *, char *, void *))(v750 + 16))(v547, v548, v748);
                                            (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v547, 0, 1, v748);
LABEL_239:
                                            v6 = v759;
                                            v563 = v533[6];
                                            v564 = &v531[v563];
                                            v565 = &v532[v563];
                                            *(_QWORD *)v564 = *(_QWORD *)v565;
                                            *((_QWORD *)v564 + 1) = *((_QWORD *)v565 + 1);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            v566 = v533[7];
                                            v567 = &v531[v566];
                                            v568 = &v532[v566];
                                            *(_QWORD *)v567 = *(_QWORD *)v568;
                                            *((_QWORD *)v567 + 1) = *((_QWORD *)v568 + 1);
                                            swift_bridgeObjectRetain();
                                            swift_bridgeObjectRelease();
                                            a1 = v545;
                                            goto LABEL_240;
                                          }
                                        }
                                        else
                                        {
                                          if (!v550)
                                          {
                                            (*(void (**)(char *, char *, void *))(v750 + 24))(v547, v548, v748);
                                            goto LABEL_239;
                                          }
                                          (*(void (**)(char *, void *))(v750 + 8))(v547, v748);
                                        }
                                        v562 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                        memcpy(v547, v548, *(_QWORD *)(*(_QWORD *)(v562 - 8) + 64));
                                        goto LABEL_239;
                                      }
                                    }
                                    else
                                    {
                                      if (!v524)
                                      {
                                        (*(void (**)(char *, char *, void *))(v750 + 24))(v514, v515, v748);
                                        goto LABEL_235;
                                      }
                                      (*(void (**)(char *, void *))(v750 + 8))(v514, v748);
                                    }
                                    v558 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                    memcpy(v514, v515, *(_QWORD *)(*(_QWORD *)(v558 - 8) + 64));
                                    goto LABEL_235;
                                  }
LABEL_197:
                                  v488 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
                                  memcpy(v476, v477, *(_QWORD *)(*(_QWORD *)(v488 - 8) + 64));
                                  v489 = v761;
                                  goto LABEL_207;
                                }
                                if (v482)
                                {
                                  sub_1AD066230((uint64_t)v476, type metadata accessor for LinkPresentation.VideoMetadata);
                                  goto LABEL_197;
                                }
                                v490 = a1;
                                *(_DWORD *)v476 = *(_DWORD *)v477;
                                v491 = v478[5];
                                v492 = &v476[v491];
                                v493 = &v477[v491];
                                v494 = v757(&v476[v491], 1, (uint64_t)v748);
                                v495 = v757(v493, 1, (uint64_t)v748);
                                v489 = v761;
                                if (v494)
                                {
                                  if (!v495)
                                  {
                                    (*(void (**)(char *, char *, void *))(v750 + 16))(v492, v493, v748);
                                    (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v492, 0, 1, v748);
LABEL_206:
                                    v6 = v759;
                                    v504 = v478[6];
                                    v505 = &v476[v504];
                                    v506 = &v477[v504];
                                    *(_QWORD *)v505 = *(_QWORD *)v506;
                                    *((_QWORD *)v505 + 1) = *((_QWORD *)v506 + 1);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    v507 = v478[7];
                                    v508 = &v476[v507];
                                    v509 = &v477[v507];
                                    *(_QWORD *)v508 = *(_QWORD *)v509;
                                    *((_QWORD *)v508 + 1) = *((_QWORD *)v509 + 1);
                                    v510 = v478[8];
                                    v511 = &v476[v510];
                                    v512 = &v477[v510];
                                    *(_QWORD *)v511 = *(_QWORD *)v512;
                                    *((_QWORD *)v511 + 1) = *((_QWORD *)v512 + 1);
                                    swift_bridgeObjectRetain();
                                    swift_bridgeObjectRelease();
                                    a1 = v490;
                                    goto LABEL_207;
                                  }
                                }
                                else
                                {
                                  if (!v495)
                                  {
                                    (*(void (**)(char *, char *, void *))(v750 + 24))(v492, v493, v748);
                                    goto LABEL_206;
                                  }
                                  (*(void (**)(char *, void *))(v750 + 8))(v492, v748);
                                }
                                v503 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                memcpy(v492, v493, *(_QWORD *)(*(_QWORD *)(v503 - 8) + 64));
                                goto LABEL_206;
                              }
LABEL_170:
                              v446 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
                              memcpy(v439, v440, *(_QWORD *)(*(_QWORD *)(v446 - 8) + 64));
                              goto LABEL_191;
                            }
                            if (v444)
                            {
                              sub_1AD066230((uint64_t)v439, type metadata accessor for LinkPresentation.Video);
                              goto LABEL_170;
                            }
                            v447 = v757(v439, 1, (uint64_t)v748);
                            v448 = v757(v440, 1, (uint64_t)v748);
                            if (v447)
                            {
                              if (v448)
                              {
                                v449 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                memcpy(v439, v440, *(_QWORD *)(*(_QWORD *)(v449 - 8) + 64));
                                v450 = (uint64_t)v748;
                              }
                              else
                              {
                                v450 = (uint64_t)v748;
                                (*(void (**)(char *, char *, void *))(v750 + 16))(v439, v440, v748);
                                (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v439, 0, 1, v748);
                              }
                            }
                            else
                            {
                              v450 = (uint64_t)v748;
                              if (v448)
                              {
                                (*(void (**)(char *, void *))(v750 + 8))(v439, v748);
                                v462 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                memcpy(v439, v440, *(_QWORD *)(*(_QWORD *)(v462 - 8) + 64));
                              }
                              else
                              {
                                (*(void (**)(char *, char *, void *))(v750 + 24))(v439, v440, v748);
                              }
                            }
                            v463 = v441[5];
                            v464 = &v439[v463];
                            v465 = &v440[v463];
                            v466 = v757(&v439[v463], 1, v450);
                            v467 = v757(v465, 1, v450);
                            if (v466)
                            {
                              if (!v467)
                              {
                                (*(void (**)(char *, char *, void *))(v750 + 16))(v464, v465, v748);
                                (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v464, 0, 1, v748);
LABEL_190:
                                v469 = v441[6];
                                v470 = &v439[v469];
                                v471 = &v440[v469];
                                *(_QWORD *)v470 = *(_QWORD *)v471;
                                *((_QWORD *)v470 + 1) = *((_QWORD *)v471 + 1);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                v439[v441[7]] = v440[v441[7]];
                                *(_QWORD *)&v439[v441[8]] = *(_QWORD *)&v440[v441[8]];
                                swift_retain();
                                swift_release();
                                v472 = v441[9];
                                v473 = &v439[v472];
                                v474 = &v440[v472];
                                *v473 = *v474;
                                *((_QWORD *)v473 + 1) = *((_QWORD *)v474 + 1);
                                *((_QWORD *)v473 + 2) = *((_QWORD *)v474 + 2);
                                swift_bridgeObjectRetain();
                                swift_bridgeObjectRelease();
                                a1 = v754;
                                goto LABEL_191;
                              }
                            }
                            else
                            {
                              if (!v467)
                              {
                                (*(void (**)(char *, char *, void *))(v750 + 24))(v464, v465, v748);
                                goto LABEL_190;
                              }
                              (*(void (**)(char *, void *))(v750 + 8))(v464, v748);
                            }
                            v468 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                            memcpy(v464, v465, *(_QWORD *)(*(_QWORD *)(v468 - 8) + 64));
                            goto LABEL_190;
                          }
LABEL_154:
                          v415 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
                          memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v415 - 8) + 64));
                          goto LABEL_164;
                        }
                        if (v409)
                        {
                          sub_1AD066230((uint64_t)v403, type metadata accessor for LinkPresentation.ImageMetadata);
                          goto LABEL_154;
                        }
                        *(_DWORD *)v403 = *(_DWORD *)v404;
                        v416 = v405[5];
                        v417 = &v403[v416];
                        v418 = &v404[v416];
                        v419 = v757(&v403[v416], 1, (uint64_t)v748);
                        v420 = v757(v418, 1, (uint64_t)v748);
                        if (v419)
                        {
                          if (!v420)
                          {
                            (*(void (**)(char *, char *, void *))(v750 + 16))(v417, v418, v748);
                            (*(void (**)(char *, _QWORD, uint64_t, void *))(v750 + 56))(v417, 0, 1, v748);
LABEL_163:
                            v429 = v405[6];
                            v430 = &v403[v429];
                            v431 = &v404[v429];
                            *(_QWORD *)v430 = *(_QWORD *)v431;
                            *((_QWORD *)v430 + 1) = *((_QWORD *)v431 + 1);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            v432 = v405[7];
                            v433 = &v403[v432];
                            v434 = &v404[v432];
                            *(_QWORD *)v433 = *(_QWORD *)v434;
                            *((_QWORD *)v433 + 1) = *((_QWORD *)v434 + 1);
                            v435 = v405[8];
                            v436 = &v403[v435];
                            v437 = &v404[v435];
                            *(_QWORD *)v436 = *(_QWORD *)v437;
                            *((_QWORD *)v436 + 1) = *((_QWORD *)v437 + 1);
                            swift_bridgeObjectRetain();
                            swift_bridgeObjectRelease();
                            a1 = v754;
                            goto LABEL_164;
                          }
                        }
                        else
                        {
                          if (!v420)
                          {
                            (*(void (**)(char *, char *, void *))(v750 + 24))(v417, v418, v748);
                            goto LABEL_163;
                          }
                          (*(void (**)(char *, void *))(v750 + 8))(v417, v748);
                        }
                        v428 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                        memcpy(v417, v418, *(_QWORD *)(*(_QWORD *)(v428 - 8) + 64));
                        goto LABEL_163;
                      }
                      sub_1AD066230((uint64_t)v340, type metadata accessor for LinkPresentation.ARAssetMetadata);
                    }
                    v352 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
                    memcpy(v340, v341, *(_QWORD *)(*(_QWORD *)(v352 - 8) + 64));
                    goto LABEL_141;
                  }
                  sub_1AD066230((uint64_t)v173, type metadata accessor for LinkPresentation.IconMetadata);
                }
                v185 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
                memcpy(v173, v174, *(_QWORD *)(*(_QWORD *)(v185 - 8) + 64));
                goto LABEL_117;
              }
              (*(void (**)(char *, uint64_t))(v750 + 8))(v119, v21);
            }
            v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
            goto LABEL_40;
          }
          (*(void (**)(char *, uint64_t))(v750 + 8))(v98, v21);
        }
        v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        goto LABEL_34;
      }
      (*(void (**)(char *, uint64_t))(v750 + 8))(v19, v21);
    }
    v96 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v96 - 8) + 64));
    goto LABEL_28;
  }
  if (v10)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_301;
  }
  *(_DWORD *)a1 = *a2;
  v11 = v6[5];
  v12 = &a1[v11];
  v13 = (char *)a2 + v11;
  v14 = sub_1AD63AF28();
  v15 = *(_QWORD *)(v14 - 8);
  v756 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v756(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v25 = v6[6];
  v26 = &a1[v25];
  v27 = (char *)a2 + v25;
  v751 = v15;
  v753 = a3;
  v746 = v7;
  if (v756((char *)a2 + v25, 1, v14))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v26, v27, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v26, 0, 1, v14);
  }
  v29 = v6[7];
  v30 = &a1[v29];
  v31 = (_QWORD *)((char *)a2 + v29);
  *(_QWORD *)v30 = *v31;
  *((_QWORD *)v30 + 1) = v31[1];
  v32 = v6[8];
  v33 = &a1[v32];
  v34 = (_QWORD *)((char *)a2 + v32);
  *(_QWORD *)v33 = *v34;
  *((_QWORD *)v33 + 1) = v34[1];
  v35 = v6[9];
  v36 = &a1[v35];
  v37 = (_QWORD *)((char *)a2 + v35);
  *(_QWORD *)v36 = *v37;
  *((_QWORD *)v36 + 1) = v37[1];
  v38 = v6[10];
  v39 = &a1[v38];
  v40 = (_QWORD *)((char *)a2 + v38);
  *(_QWORD *)v39 = *v40;
  *((_QWORD *)v39 + 1) = v40[1];
  v41 = v6[11];
  v42 = &a1[v41];
  v43 = (_QWORD *)((char *)a2 + v41);
  *(_QWORD *)v42 = *v43;
  *((_QWORD *)v42 + 1) = v43[1];
  v44 = v6[12];
  v45 = &a1[v44];
  v46 = (char *)a2 + v44;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v47 = v14;
  if (v756(v46, 1, v14))
  {
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v45, v46, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v45, 0, 1, v14);
  }
  v49 = v6[13];
  v50 = &a1[v49];
  v51 = (_QWORD *)((char *)a2 + v49);
  *(_QWORD *)v50 = *v51;
  *((_QWORD *)v50 + 1) = v51[1];
  v52 = v6[14];
  v53 = &a1[v52];
  v54 = (_QWORD *)((char *)a2 + v52);
  *(_QWORD *)v53 = *v54;
  *((_QWORD *)v53 + 1) = v54[1];
  v55 = v6[15];
  v56 = &a1[v55];
  v57 = (_QWORD *)((char *)a2 + v55);
  *(_QWORD *)v56 = *v57;
  *((_QWORD *)v56 + 1) = v57[1];
  v58 = v6[16];
  v59 = &a1[v58];
  v60 = (_QWORD *)((char *)a2 + v58);
  *(_QWORD *)v59 = *v60;
  *((_QWORD *)v59 + 1) = v60[1];
  a1[v6[17]] = *((_BYTE *)a2 + v6[17]);
  v61 = v6[18];
  v62 = &a1[v61];
  v63 = (char *)a2 + v61;
  v64 = *(_OWORD *)v63;
  v65 = *((_OWORD *)v63 + 1);
  v62[32] = v63[32];
  *(_OWORD *)v62 = v64;
  *((_OWORD *)v62 + 1) = v65;
  v66 = v6[19];
  v67 = &a1[v66];
  v68 = (_QWORD *)((char *)a2 + v66);
  *(_QWORD *)v67 = *v68;
  *((_QWORD *)v67 + 1) = v68[1];
  v69 = v6[20];
  v70 = &a1[v69];
  v71 = (_QWORD *)((char *)a2 + v69);
  *(_QWORD *)v70 = *v71;
  *((_QWORD *)v70 + 1) = v71[1];
  v72 = v6[21];
  v73 = &a1[v72];
  v74 = (char *)a2 + v72;
  v75 = *((_QWORD *)v74 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v75 == 1)
  {
    v76 = *(_OWORD *)v74;
    v77 = *((_OWORD *)v74 + 1);
    v78 = *((_OWORD *)v74 + 3);
    *((_OWORD *)v73 + 2) = *((_OWORD *)v74 + 2);
    *((_OWORD *)v73 + 3) = v78;
    *(_OWORD *)v73 = v76;
    *((_OWORD *)v73 + 1) = v77;
    v79 = *((_OWORD *)v74 + 4);
    v80 = *((_OWORD *)v74 + 5);
    v81 = *((_OWORD *)v74 + 6);
    *(_OWORD *)(v73 + 105) = *(_OWORD *)(v74 + 105);
    *((_OWORD *)v73 + 5) = v80;
    *((_OWORD *)v73 + 6) = v81;
    *((_OWORD *)v73 + 4) = v79;
  }
  else
  {
    *(_QWORD *)v73 = *(_QWORD *)v74;
    *((_QWORD *)v73 + 1) = *((_QWORD *)v74 + 1);
    *((_QWORD *)v73 + 2) = *((_QWORD *)v74 + 2);
    *((_QWORD *)v73 + 3) = *((_QWORD *)v74 + 3);
    *((_QWORD *)v73 + 4) = *((_QWORD *)v74 + 4);
    *((_QWORD *)v73 + 5) = *((_QWORD *)v74 + 5);
    v82 = *((_OWORD *)v74 + 3);
    v83 = *((_OWORD *)v74 + 4);
    v73[80] = v74[80];
    *((_OWORD *)v73 + 3) = v82;
    *((_OWORD *)v73 + 4) = v83;
    v84 = *(_OWORD *)(v74 + 88);
    v85 = *(_OWORD *)(v74 + 104);
    v73[120] = v74[120];
    *(_OWORD *)(v73 + 104) = v85;
    *(_OWORD *)(v73 + 88) = v84;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v86 = v6[22];
  v87 = &a1[v86];
  v88 = (_DWORD *)((char *)v761 + v86);
  v89 = type metadata accessor for LinkPresentation.IconMetadata(0);
  v90 = *(_QWORD *)(v89 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v90 + 48))(v88, 1, v89))
  {
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
    memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v87 = *v88;
    v92 = *(int *)(v89 + 20);
    v93 = &v87[v92];
    v94 = (char *)v88 + v92;
    if (v756((char *)v88 + v92, 1, v47))
    {
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v93, v94, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v751 + 16))(v93, v94, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v93, 0, 1, v47);
    }
    v186 = *(int *)(v89 + 24);
    v187 = &v87[v186];
    v188 = (_QWORD *)((char *)v88 + v186);
    *(_QWORD *)v187 = *v188;
    *((_QWORD *)v187 + 1) = v188[1];
    v189 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v90 + 56);
    swift_bridgeObjectRetain();
    v189(v87, 0, 1, v89);
    v6 = v759;
  }
  v190 = v6[23];
  v191 = &a1[v190];
  v192 = (char *)v761 + v190;
  if (*((_QWORD *)v192 + 2) == 1)
  {
    v193 = *(_OWORD *)v192;
    v194 = *((_OWORD *)v192 + 1);
    *((_QWORD *)v191 + 4) = *((_QWORD *)v192 + 4);
    *(_OWORD *)v191 = v193;
    *((_OWORD *)v191 + 1) = v194;
  }
  else
  {
    *(_QWORD *)v191 = *(_QWORD *)v192;
    *((_QWORD *)v191 + 1) = *((_QWORD *)v192 + 1);
    *((_QWORD *)v191 + 2) = *((_QWORD *)v192 + 2);
    *((_QWORD *)v191 + 3) = *((_QWORD *)v192 + 3);
    *((_QWORD *)v191 + 4) = *((_QWORD *)v192 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v195 = v6[24];
  v196 = &a1[v195];
  v197 = (_DWORD *)((char *)v761 + v195);
  v198 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
  v199 = *((_QWORD *)v198 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v199 + 48))(v197, 1, v198))
  {
    v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
    memcpy(v196, v197, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v196 = *v197;
    v201 = v198[5];
    v202 = &v196[v201];
    v203 = (char *)v197 + v201;
    if (v756((char *)v197 + v201, 1, v47))
    {
      v204 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v202, v203, *(_QWORD *)(*(_QWORD *)(v204 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v751 + 16))(v202, v203, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v202, 0, 1, v47);
    }
    v205 = v198[6];
    v206 = &v196[v205];
    v207 = (_QWORD *)((char *)v197 + v205);
    *(_QWORD *)v206 = *v207;
    *((_QWORD *)v206 + 1) = v207[1];
    v208 = v198[7];
    v209 = &v196[v208];
    v210 = (_QWORD *)((char *)v197 + v208);
    *(_QWORD *)v209 = *v210;
    *((_QWORD *)v209 + 1) = v210[1];
    v211 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v199 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v211(v196, 0, 1, v198);
    v6 = v759;
  }
  v212 = v6[25];
  v213 = &a1[v212];
  v214 = (char *)v761 + v212;
  if (*((_QWORD *)v214 + 2) == 1)
  {
    v215 = *(_OWORD *)v214;
    v216 = *((_OWORD *)v214 + 1);
    v217 = *((_OWORD *)v214 + 3);
    *((_OWORD *)v213 + 2) = *((_OWORD *)v214 + 2);
    *((_OWORD *)v213 + 3) = v217;
    *(_OWORD *)v213 = v215;
    *((_OWORD *)v213 + 1) = v216;
    v218 = *((_OWORD *)v214 + 4);
    v219 = *((_OWORD *)v214 + 5);
    v220 = *((_OWORD *)v214 + 6);
    *(_OWORD *)(v213 + 105) = *(_OWORD *)(v214 + 105);
    *((_OWORD *)v213 + 5) = v219;
    *((_OWORD *)v213 + 6) = v220;
    *((_OWORD *)v213 + 4) = v218;
  }
  else
  {
    *(_QWORD *)v213 = *(_QWORD *)v214;
    *((_QWORD *)v213 + 1) = *((_QWORD *)v214 + 1);
    *((_QWORD *)v213 + 2) = *((_QWORD *)v214 + 2);
    *((_QWORD *)v213 + 3) = *((_QWORD *)v214 + 3);
    *((_QWORD *)v213 + 4) = *((_QWORD *)v214 + 4);
    *((_QWORD *)v213 + 5) = *((_QWORD *)v214 + 5);
    v221 = *((_OWORD *)v214 + 3);
    v222 = *((_OWORD *)v214 + 4);
    v213[80] = v214[80];
    *((_OWORD *)v213 + 3) = v221;
    *((_OWORD *)v213 + 4) = v222;
    v223 = *(_OWORD *)(v214 + 88);
    v224 = *(_OWORD *)(v214 + 104);
    v213[120] = v214[120];
    *(_OWORD *)(v213 + 104) = v224;
    *(_OWORD *)(v213 + 88) = v223;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)&a1[v6[26]] = *(_QWORD *)((char *)v761 + v6[26]);
  v225 = v6[27];
  v226 = &a1[v225];
  v227 = (_DWORD *)((char *)v761 + v225);
  v228 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
  v229 = *((_QWORD *)v228 - 1);
  v230 = *(unsigned int (**)(_DWORD *, uint64_t, int *))(v229 + 48);
  swift_bridgeObjectRetain();
  if (v230(v227, 1, v228))
  {
    v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
    memcpy(v226, v227, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v226 = *v227;
    v232 = v228[5];
    v233 = &v226[v232];
    v234 = (char *)v227 + v232;
    if (v756((char *)v227 + v232, 1, v47))
    {
      v235 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v235 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v751 + 16))(v233, v234, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v233, 0, 1, v47);
    }
    v236 = v228[6];
    v237 = &v226[v236];
    v238 = (_QWORD *)((char *)v227 + v236);
    *(_QWORD *)v237 = *v238;
    *((_QWORD *)v237 + 1) = v238[1];
    *(_OWORD *)&v226[v228[7]] = *(_OWORD *)((char *)v227 + v228[7]);
    v239 = v228[8];
    v240 = &v226[v239];
    v241 = (_QWORD *)((char *)v227 + v239);
    *(_QWORD *)v240 = *v241;
    *((_QWORD *)v240 + 1) = v241[1];
    v242 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v229 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v242(v226, 0, 1, v228);
    v6 = v759;
  }
  *(_QWORD *)&a1[v6[28]] = *(_QWORD *)((char *)v761 + v6[28]);
  *(_QWORD *)&a1[v6[29]] = *(_QWORD *)((char *)v761 + v6[29]);
  v243 = v6[30];
  v244 = &a1[v243];
  v245 = (char *)v761 + v243;
  v246 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v744 = (_QWORD *)*((_QWORD *)v246 - 1);
  v247 = (unsigned int (*)(char *, uint64_t, int *))v744[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v247(v245, 1, v246))
  {
    v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    memcpy(v244, v245, *(_QWORD *)(*(_QWORD *)(v248 - 8) + 64));
  }
  else
  {
    if (v756(v245, 1, v47))
    {
      v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v244, v245, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v751 + 16))(v244, v245, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v244, 0, 1, v47);
    }
    v250 = v246[5];
    v251 = &v244[v250];
    v252 = &v245[v250];
    if (v756(&v245[v250], 1, v47))
    {
      v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v251, v252, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v751 + 16))(v251, v252, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v251, 0, 1, v47);
    }
    v254 = v246[6];
    v255 = &v244[v254];
    v256 = &v245[v254];
    *(_QWORD *)v255 = *(_QWORD *)v256;
    *((_QWORD *)v255 + 1) = *((_QWORD *)v256 + 1);
    v244[v246[7]] = v245[v246[7]];
    *(_QWORD *)&v244[v246[8]] = *(_QWORD *)&v245[v246[8]];
    v257 = v246[9];
    v258 = &v244[v257];
    v259 = &v245[v257];
    *v258 = *v259;
    *((_QWORD *)v258 + 1) = *((_QWORD *)v259 + 1);
    *((_QWORD *)v258 + 2) = *((_QWORD *)v259 + 2);
    v260 = (void (*)(char *, _QWORD, uint64_t, int *))v744[7];
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v260(v244, 0, 1, v246);
  }
  v261 = v6[31];
  v262 = &a1[v261];
  v263 = (_DWORD *)((char *)v761 + v261);
  v264 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
  v265 = *((_QWORD *)v264 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v265 + 48))(v263, 1, v264))
  {
    v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
    memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v262 = *v263;
    v267 = v264[5];
    v268 = &v262[v267];
    v269 = (char *)v263 + v267;
    if (v756((char *)v263 + v267, 1, v47))
    {
      v270 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v268, v269, *(_QWORD *)(*(_QWORD *)(v270 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v751 + 16))(v268, v269, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v268, 0, 1, v47);
    }
    v271 = v264[6];
    v272 = &v262[v271];
    v273 = (_QWORD *)((char *)v263 + v271);
    *(_QWORD *)v272 = *v273;
    *((_QWORD *)v272 + 1) = v273[1];
    *(_OWORD *)&v262[v264[7]] = *(_OWORD *)((char *)v263 + v264[7]);
    v274 = v264[8];
    v275 = &v262[v274];
    v276 = (_QWORD *)((char *)v263 + v274);
    *(_QWORD *)v275 = *v276;
    *((_QWORD *)v275 + 1) = v276[1];
    v277 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v265 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v277(v262, 0, 1, v264);
    v6 = v759;
  }
  v278 = v6[32];
  v279 = &a1[v278];
  v280 = (char *)v761 + v278;
  v281 = type metadata accessor for LinkPresentation.Audio(0);
  v282 = *(_QWORD *)(v281 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v282 + 48))(v280, 1, v281))
  {
    v283 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
    memcpy(v279, v280, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
  }
  else
  {
    if (v756(v280, 1, v47))
    {
      v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v279, v280, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v751 + 16))(v279, v280, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v279, 0, 1, v47);
    }
    v285 = *(int *)(v281 + 20);
    v286 = &v279[v285];
    v287 = &v280[v285];
    *(_QWORD *)v286 = *(_QWORD *)v287;
    *((_QWORD *)v286 + 1) = *((_QWORD *)v287 + 1);
    v288 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v282 + 56);
    swift_bridgeObjectRetain();
    v288(v279, 0, 1, v281);
  }
  v289 = v6[33];
  v290 = &a1[v289];
  v291 = (_DWORD *)((char *)v761 + v289);
  v292 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
  v293 = *((_QWORD *)v292 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v293 + 48))(v291, 1, v292))
  {
    v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
    memcpy(v290, v291, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v290 = *v291;
    v295 = v292[5];
    v296 = &v290[v295];
    v297 = (char *)v291 + v295;
    if (v756((char *)v291 + v295, 1, v47))
    {
      v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v296, v297, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v751 + 16))(v296, v297, v47);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v751 + 56))(v296, 0, 1, v47);
    }
    v299 = v292[6];
    v300 = &v290[v299];
    v301 = (_QWORD *)((char *)v291 + v299);
    *(_QWORD *)v300 = *v301;
    *((_QWORD *)v300 + 1) = v301[1];
    v302 = v292[7];
    v303 = &v290[v302];
    v304 = (_QWORD *)((char *)v291 + v302);
    *(_QWORD *)v303 = *v304;
    *((_QWORD *)v303 + 1) = v304[1];
    v305 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v293 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v305(v290, 0, 1, v292);
    v6 = v759;
  }
  *(_QWORD *)&a1[v6[34]] = *(_QWORD *)((char *)v761 + v6[34]);
  *(_QWORD *)&a1[v6[35]] = *(_QWORD *)((char *)v761 + v6[35]);
  *(_QWORD *)&a1[v6[36]] = *(_QWORD *)((char *)v761 + v6[36]);
  *(_QWORD *)&a1[v6[37]] = *(_QWORD *)((char *)v761 + v6[37]);
  *(_QWORD *)&a1[v6[38]] = *(_QWORD *)((char *)v761 + v6[38]);
  *(_QWORD *)&a1[v6[39]] = *(_QWORD *)((char *)v761 + v6[39]);
  *(_QWORD *)&a1[v6[40]] = *(_QWORD *)((char *)v761 + v6[40]);
  v306 = v6[41];
  v755 = a1;
  __dst = &a1[v306];
  v307 = (char *)v761 + v306;
  v308 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
  v749 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v308 - 8) + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v749(v307, 1, v308))
  {
    v311 = (char *)&loc_1AD058C3C + 4 * word_1AD64A2D8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v309 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
  memcpy(__dst, v307, *(_QWORD *)(*(_QWORD *)(v309 - 8) + 64));
  v310 = v759;
  v579 = v759[42];
  v580 = &a1[v579];
  v581 = (char *)v761 + v579;
  if (*(_QWORD *)((char *)v761 + v579 + 8) == 1)
  {
    v582 = *(_OWORD *)v581;
    v583 = *((_OWORD *)v581 + 1);
    v584 = *((_OWORD *)v581 + 3);
    *((_OWORD *)v580 + 2) = *((_OWORD *)v581 + 2);
    *((_OWORD *)v580 + 3) = v584;
    *(_OWORD *)v580 = v582;
    *((_OWORD *)v580 + 1) = v583;
    v585 = *((_OWORD *)v581 + 4);
    v586 = *((_OWORD *)v581 + 5);
    v587 = *((_OWORD *)v581 + 7);
    *((_OWORD *)v580 + 6) = *((_OWORD *)v581 + 6);
    *((_OWORD *)v580 + 7) = v587;
    *((_OWORD *)v580 + 4) = v585;
    *((_OWORD *)v580 + 5) = v586;
    v588 = *((_OWORD *)v581 + 8);
    v589 = *((_OWORD *)v581 + 9);
    v590 = *((_OWORD *)v581 + 10);
    *((_QWORD *)v580 + 22) = *((_QWORD *)v581 + 22);
    *((_OWORD *)v580 + 9) = v589;
    *((_OWORD *)v580 + 10) = v590;
    *((_OWORD *)v580 + 8) = v588;
  }
  else
  {
    *(_QWORD *)v580 = *(_QWORD *)v581;
    *((_QWORD *)v580 + 1) = *((_QWORD *)v581 + 1);
    v591 = *((_QWORD *)v581 + 4);
    swift_bridgeObjectRetain();
    if (v591 == 1)
    {
      v592 = *((_OWORD *)v581 + 1);
      v593 = *((_OWORD *)v581 + 2);
      v594 = *((_OWORD *)v581 + 4);
      *((_OWORD *)v580 + 3) = *((_OWORD *)v581 + 3);
      *((_OWORD *)v580 + 4) = v594;
      *((_OWORD *)v580 + 1) = v592;
      *((_OWORD *)v580 + 2) = v593;
      v595 = *((_OWORD *)v581 + 5);
      v596 = *((_OWORD *)v581 + 6);
      v597 = *((_OWORD *)v581 + 7);
      *(_OWORD *)(v580 + 121) = *(_OWORD *)(v581 + 121);
      *((_OWORD *)v580 + 6) = v596;
      *((_OWORD *)v580 + 7) = v597;
      *((_OWORD *)v580 + 5) = v595;
    }
    else
    {
      *((_QWORD *)v580 + 2) = *((_QWORD *)v581 + 2);
      *((_QWORD *)v580 + 3) = *((_QWORD *)v581 + 3);
      *((_QWORD *)v580 + 4) = *((_QWORD *)v581 + 4);
      *((_QWORD *)v580 + 5) = *((_QWORD *)v581 + 5);
      *((_QWORD *)v580 + 6) = *((_QWORD *)v581 + 6);
      *((_QWORD *)v580 + 7) = *((_QWORD *)v581 + 7);
      v598 = *((_OWORD *)v581 + 4);
      v599 = *((_OWORD *)v581 + 5);
      v580[96] = v581[96];
      *((_OWORD *)v580 + 4) = v598;
      *((_OWORD *)v580 + 5) = v599;
      v600 = *(_OWORD *)(v581 + 104);
      v601 = *(_OWORD *)(v581 + 120);
      v580[136] = v581[136];
      *(_OWORD *)(v580 + 120) = v601;
      *(_OWORD *)(v580 + 104) = v600;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *((_QWORD *)v580 + 18) = *((_QWORD *)v581 + 18);
    *((_QWORD *)v580 + 19) = *((_QWORD *)v581 + 19);
    *((_QWORD *)v580 + 20) = *((_QWORD *)v581 + 20);
    *((_QWORD *)v580 + 21) = *((_QWORD *)v581 + 21);
    *((_QWORD *)v580 + 22) = *((_QWORD *)v581 + 22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v602 = v759[43];
  v603 = &a1[v602];
  a2 = v761;
  v604 = (_QWORD *)((char *)v761 + v602);
  v605 = (int *)type metadata accessor for CollaborationMetadata();
  v606 = *((_QWORD *)v605 - 1);
  if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v606 + 48))(v604, 1, v605))
  {
    v607 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
    memcpy(v603, v604, *(_QWORD *)(*(_QWORD *)(v607 - 8) + 64));
    v608 = (void (**)(_DWORD *, _QWORD, uint64_t, _QWORD))v746;
  }
  else
  {
    v758 = v606;
    *(_QWORD *)v603 = *v604;
    *((_QWORD *)v603 + 1) = v604[1];
    *((_QWORD *)v603 + 2) = v604[2];
    *((_QWORD *)v603 + 3) = v604[3];
    v609 = v605[6];
    v610 = &v603[v609];
    v611 = (char *)v604 + v609;
    v612 = sub_1AD63B03C();
    v613 = *(_QWORD *)(v612 - 8);
    v614 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v613 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v614(v611, 1, v612))
    {
      v615 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v610, v611, *(_QWORD *)(*(_QWORD *)(v615 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v613 + 16))(v610, v611, v612);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v613 + 56))(v610, 0, 1, v612);
    }
    v616 = v605[7];
    v617 = &v603[v616];
    v618 = (_QWORD *)((char *)v604 + v616);
    *(_QWORD *)v617 = *v618;
    *((_QWORD *)v617 + 1) = v618[1];
    *(_QWORD *)&v603[v605[8]] = *(_QWORD *)((char *)v604 + v605[8]);
    *(_QWORD *)&v603[v605[9]] = *(_QWORD *)((char *)v604 + v605[9]);
    v619 = v605[10];
    v620 = &v603[v619];
    v621 = (char *)v604 + v619;
    v622 = *(_QWORD *)((char *)v604 + v619 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v622)
    {
      *v620 = *v621;
      *((_QWORD *)v620 + 1) = *((_QWORD *)v621 + 1);
      *((_QWORD *)v620 + 2) = *((_QWORD *)v621 + 2);
      *((_QWORD *)v620 + 3) = *((_QWORD *)v621 + 3);
      *((_QWORD *)v620 + 4) = *((_QWORD *)v621 + 4);
      *((_QWORD *)v620 + 5) = *((_QWORD *)v621 + 5);
      *((_QWORD *)v620 + 6) = *((_QWORD *)v621 + 6);
      *((_QWORD *)v620 + 7) = *((_QWORD *)v621 + 7);
      *((_QWORD *)v620 + 8) = *((_QWORD *)v621 + 8);
      *((_QWORD *)v620 + 9) = *((_QWORD *)v621 + 9);
      *((_QWORD *)v620 + 10) = *((_QWORD *)v621 + 10);
      *((_QWORD *)v620 + 11) = *((_QWORD *)v621 + 11);
      v620[96] = v621[96];
      *((_QWORD *)v620 + 13) = *((_QWORD *)v621 + 13);
      *((_QWORD *)v620 + 14) = *((_QWORD *)v621 + 14);
      *((_QWORD *)v620 + 15) = *((_QWORD *)v621 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v623 = *(_OWORD *)v621;
      v624 = *((_OWORD *)v621 + 1);
      v625 = *((_OWORD *)v621 + 3);
      *((_OWORD *)v620 + 2) = *((_OWORD *)v621 + 2);
      *((_OWORD *)v620 + 3) = v625;
      *(_OWORD *)v620 = v623;
      *((_OWORD *)v620 + 1) = v624;
      v626 = *((_OWORD *)v621 + 4);
      v627 = *((_OWORD *)v621 + 5);
      v628 = *((_OWORD *)v621 + 7);
      *((_OWORD *)v620 + 6) = *((_OWORD *)v621 + 6);
      *((_OWORD *)v620 + 7) = v628;
      *((_OWORD *)v620 + 4) = v626;
      *((_OWORD *)v620 + 5) = v627;
    }
    a1 = v755;
    v310 = v759;
    v608 = (void (**)(_DWORD *, _QWORD, uint64_t, _QWORD))v746;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v758 + 56))(v603, 0, 1, v605);
    a2 = v761;
  }
  ((void (**)(char *, _QWORD, uint64_t, int *))v608)[7](a1, 0, 1, v310);
  a3 = v753;
LABEL_301:
  a1[*(int *)(a3 + 20)] = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AD0661D0(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD066200(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD066230(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1AD06626C(uint64_t a1)
{
  destroy for LinkPresentation.AssociatedApplicationMetadata(a1);
  return a1;
}

uint64_t sub_1AD066298(uint64_t a1)
{
  destroy for CloudKitContainerSetupInfo();
  return a1;
}

_DWORD *sub_1AD0662CC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  __int128 v26;
  uint64_t v27;
  _OWORD *v28;
  _OWORD *v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  _DWORD *v35;
  _DWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  __int128 v48;
  uint64_t v49;
  _DWORD *v50;
  _DWORD *v51;
  int *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  unsigned int (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  _OWORD *v61;
  _OWORD *v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  _DWORD *v68;
  _DWORD *v69;
  int *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  int *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  _DWORD *v91;
  _DWORD *v92;
  int *v93;
  uint64_t v94;
  uint64_t v95;
  void *v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _DWORD *v109;
  _DWORD *v110;
  int *v111;
  uint64_t v112;
  uint64_t v113;
  void *v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  _OWORD *v120;
  _OWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  int *v132;
  uint64_t v133;
  _DWORD *v134;
  uint64_t v135;
  void (**v136)(void);
  uint64_t v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  uint64_t v143;
  uint64_t v144;
  _DWORD *v145;
  uint64_t v146;
  void (**v147)(void);
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  uint64_t v154;
  _DWORD *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  uint64_t v164;
  __int128 v165;
  __int128 v166;
  uint64_t v167;
  unsigned int (*v168)(char *, uint64_t, void *);
  int *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  uint64_t v195;
  uint64_t v196;
  _DWORD *v197;
  uint64_t v198;
  void (**v199)(void);
  uint64_t v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  uint64_t v207;
  uint64_t v208;
  _DWORD *v209;
  uint64_t v210;
  void (**v211)(void);
  uint64_t v212;
  __int128 v213;
  __int128 v214;
  int *v215;
  uint64_t v216;
  char *v217;
  char *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  uint64_t v227;
  uint64_t v228;
  _DWORD *v229;
  uint64_t v230;
  void (**v231)(void);
  uint64_t v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  uint64_t v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  uint64_t v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  uint64_t v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  int *v257;
  uint64_t v258;
  _DWORD *v259;
  uint64_t v260;
  void (**v261)(void);
  uint64_t v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  uint64_t v268;
  __int128 v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  __int128 v276;
  uint64_t v277;
  char *v278;
  char *v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  char *v288;
  char *v289;
  uint64_t v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  uint64_t v297;
  uint64_t v298;
  _OWORD *v299;
  _OWORD *v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  char *v309;
  uint64_t v310;
  char *v311;
  char *v312;
  uint64_t v313;
  uint64_t v314;
  char *v315;
  char *v316;
  uint64_t v317;
  uint64_t v318;
  _OWORD *v319;
  _OWORD *v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  uint64_t v324;
  _DWORD *v325;
  _DWORD *v326;
  uint64_t v327;
  void (**v328)(void);
  uint64_t v329;
  uint64_t v330;
  char *v331;
  char *v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  char *v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  char *v358;
  char *v359;
  uint64_t v360;
  uint64_t v361;
  _OWORD *v362;
  _OWORD *v363;
  __int128 v364;
  uint64_t v365;
  char *v366;
  uint64_t v367;
  uint64_t v368;
  char *v369;
  char *v370;
  uint64_t v371;
  uint64_t v372;
  _OWORD *v373;
  _OWORD *v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  _OWORD *v382;
  _OWORD *v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  uint64_t v387;
  char *v388;
  char *v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  uint64_t v395;
  _OWORD *v396;
  _OWORD *v397;
  int *v398;
  uint64_t v399;
  uint64_t v400;
  __int128 v401;
  uint64_t v402;
  char *v403;
  char *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  _OWORD *v409;
  _OWORD *v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  unsigned int (*v424)(char *, uint64_t, int *);
  void (**v425)(void);
  void (**v426)(void);
  void (**v427)(void);
  void (**v428)(void);
  void (**v429)(void);
  void (**v430)(void);
  void (**v431)(void);
  char *v432;
  int *__dst;
  _DWORD *__dsta;
  _QWORD *v435;
  _DWORD *v436;
  _DWORD *v437;
  _DWORD *v438;
  _DWORD *v439;
  _DWORD *v440;
  char *v441;
  int *v442;
  uint64_t v443;
  void (**__src)(void *, const void *, void *);
  char *__srca;
  unsigned int (*v446)(char *, uint64_t, uint64_t);
  int *v447;
  unsigned int (*v448)(char *, uint64_t, uint64_t);
  char *v449;
  void *v450;
  char *v451;
  int *v452;
  unsigned int (*v453)(char *, uint64_t, uint64_t);
  int *v454;

  v5 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
  v6 = *((_QWORD *)v5 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v6 + 48))(a2, 1, v5))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v8 = v5[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1AD63AF28();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v15 = v5[6];
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    if (v13((char *)a2 + v15, 1, v11))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v16, v17, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v16, 0, 1, v11);
    }
    *(_OWORD *)((char *)a1 + v5[7]) = *(_OWORD *)((char *)a2 + v5[7]);
    *(_OWORD *)((char *)a1 + v5[8]) = *(_OWORD *)((char *)a2 + v5[8]);
    *(_OWORD *)((char *)a1 + v5[9]) = *(_OWORD *)((char *)a2 + v5[9]);
    *(_OWORD *)((char *)a1 + v5[10]) = *(_OWORD *)((char *)a2 + v5[10]);
    *(_OWORD *)((char *)a1 + v5[11]) = *(_OWORD *)((char *)a2 + v5[11]);
    v19 = v5[12];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v443 = v6;
    if (v13((char *)a2 + v19, 1, v11))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v21, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v20, 0, 1, v11);
    }
    *(_OWORD *)((char *)a1 + v5[13]) = *(_OWORD *)((char *)a2 + v5[13]);
    *(_OWORD *)((char *)a1 + v5[14]) = *(_OWORD *)((char *)a2 + v5[14]);
    *(_OWORD *)((char *)a1 + v5[15]) = *(_OWORD *)((char *)a2 + v5[15]);
    *(_OWORD *)((char *)a1 + v5[16]) = *(_OWORD *)((char *)a2 + v5[16]);
    *((_BYTE *)a1 + v5[17]) = *((_BYTE *)a2 + v5[17]);
    v23 = v5[18];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *((_OWORD *)v25 + 1);
    *(_OWORD *)v24 = *(_OWORD *)v25;
    *((_OWORD *)v24 + 1) = v26;
    v24[32] = v25[32];
    *(_OWORD *)((char *)a1 + v5[19]) = *(_OWORD *)((char *)a2 + v5[19]);
    *(_OWORD *)((char *)a1 + v5[20]) = *(_OWORD *)((char *)a2 + v5[20]);
    v27 = v5[21];
    v28 = (_OWORD *)((char *)a1 + v27);
    v29 = (_OWORD *)((char *)a2 + v27);
    v30 = v29[3];
    v28[2] = v29[2];
    v28[3] = v30;
    v31 = v29[1];
    *v28 = *v29;
    v28[1] = v31;
    *(_OWORD *)((char *)v28 + 105) = *(_OWORD *)((char *)v29 + 105);
    v32 = v29[6];
    v33 = v29[4];
    v28[5] = v29[5];
    v28[6] = v32;
    v28[4] = v33;
    v34 = v5[22];
    v35 = (_DWORD *)((char *)a1 + v34);
    v36 = (_DWORD *)((char *)a2 + v34);
    v37 = type metadata accessor for LinkPresentation.IconMetadata(0);
    v38 = *(_QWORD *)(v37 - 8);
    v454 = v5;
    v446 = v13;
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      *v35 = *v36;
      v40 = *(int *)(v37 + 20);
      v41 = v13;
      v42 = (char *)v35 + v40;
      v43 = (char *)v36 + v40;
      if (v41((char *)v36 + v40, 1, v11))
      {
        v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v42, v43, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v42, 0, 1, v11);
      }
      *(_OWORD *)((char *)v35 + *(int *)(v37 + 24)) = *(_OWORD *)((char *)v36 + *(int *)(v37 + 24));
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      v5 = v454;
    }
    v45 = v5[23];
    v46 = (char *)a1 + v45;
    v47 = (char *)a2 + v45;
    v48 = *((_OWORD *)v47 + 1);
    *(_OWORD *)v46 = *(_OWORD *)v47;
    *((_OWORD *)v46 + 1) = v48;
    *((_QWORD *)v46 + 4) = *((_QWORD *)v47 + 4);
    v49 = v5[24];
    v50 = (_DWORD *)((char *)a1 + v49);
    v51 = (_DWORD *)((char *)a2 + v49);
    v52 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
    v53 = *((_QWORD *)v52 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v53 + 48))(v51, 1, v52))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      *v50 = *v51;
      v55 = v52[5];
      v56 = (char *)v50 + v55;
      v57 = (char *)v51 + v55;
      if (v446((char *)v51 + v55, 1, v11))
      {
        v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v56, v57, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v56, 0, 1, v11);
      }
      *(_OWORD *)((char *)v50 + v52[6]) = *(_OWORD *)((char *)v51 + v52[6]);
      *(_OWORD *)((char *)v50 + v52[7]) = *(_OWORD *)((char *)v51 + v52[7]);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v53 + 56))(v50, 0, 1, v52);
      v5 = v454;
    }
    v59 = v446;
    v60 = v5[25];
    v61 = (_OWORD *)((char *)a1 + v60);
    v62 = (_OWORD *)((char *)a2 + v60);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    v64 = v62[3];
    v61[2] = v62[2];
    v61[3] = v64;
    *(_OWORD *)((char *)v61 + 105) = *(_OWORD *)((char *)v62 + 105);
    v65 = v62[6];
    v66 = v62[4];
    v61[5] = v62[5];
    v61[6] = v65;
    v61[4] = v66;
    *(_QWORD *)((char *)a1 + v5[26]) = *(_QWORD *)((char *)a2 + v5[26]);
    v67 = v5[27];
    v68 = (_DWORD *)((char *)a1 + v67);
    v69 = (_DWORD *)((char *)a2 + v67);
    v70 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
    v71 = *((_QWORD *)v70 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v71 + 48))(v69, 1, v70))
    {
      v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
      memcpy(v68, v69, *(_QWORD *)(*(_QWORD *)(v72 - 8) + 64));
    }
    else
    {
      *v68 = *v69;
      v73 = v70[5];
      v74 = (char *)v68 + v73;
      v75 = (char *)v69 + v73;
      if (v446((char *)v69 + v73, 1, v11))
      {
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v74, v75, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v74, 0, 1, v11);
      }
      *(_OWORD *)((char *)v68 + v70[6]) = *(_OWORD *)((char *)v69 + v70[6]);
      *(_OWORD *)((char *)v68 + v70[7]) = *(_OWORD *)((char *)v69 + v70[7]);
      *(_OWORD *)((char *)v68 + v70[8]) = *(_OWORD *)((char *)v69 + v70[8]);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v71 + 56))(v68, 0, 1, v70);
      v5 = v454;
      v59 = v446;
    }
    *(_QWORD *)((char *)a1 + v5[28]) = *(_QWORD *)((char *)a2 + v5[28]);
    *(_QWORD *)((char *)a1 + v5[29]) = *(_QWORD *)((char *)a2 + v5[29]);
    v77 = v5[30];
    v78 = (char *)a1 + v77;
    v79 = (char *)a2 + v77;
    v80 = (int *)type metadata accessor for LinkPresentation.Video(0);
    v435 = (_QWORD *)*((_QWORD *)v80 - 1);
    v450 = (void *)v11;
    v424 = (unsigned int (*)(char *, uint64_t, int *))v435[6];
    if (v424(v79, 1, v80))
    {
      v81 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
      memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v81 - 8) + 64));
    }
    else
    {
      if (v59(v79, 1, v11))
      {
        v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v78, v79, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v78, 0, 1, v11);
      }
      v83 = v80[5];
      v84 = &v78[v83];
      v85 = &v79[v83];
      if (v59(&v79[v83], 1, v11))
      {
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v84, v85, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v84, 0, 1, v11);
      }
      *(_OWORD *)&v78[v80[6]] = *(_OWORD *)&v79[v80[6]];
      v78[v80[7]] = v79[v80[7]];
      *(_QWORD *)&v78[v80[8]] = *(_QWORD *)&v79[v80[8]];
      v87 = v80[9];
      v88 = &v78[v87];
      v89 = &v79[v87];
      *(_OWORD *)v88 = *(_OWORD *)v89;
      *((_QWORD *)v88 + 2) = *((_QWORD *)v89 + 2);
      ((void (*)(char *, _QWORD, uint64_t, int *))v435[7])(v78, 0, 1, v80);
      v5 = v454;
    }
    v90 = v5[31];
    v91 = (_DWORD *)((char *)a1 + v90);
    v92 = (_DWORD *)((char *)a2 + v90);
    v93 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
    v94 = *((_QWORD *)v93 - 1);
    __src = (void (**)(void *, const void *, void *))v12;
    __dst = v80;
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v94 + 48))(v92, 1, v93))
    {
      v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
      memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v95 - 8) + 64));
      v96 = v450;
    }
    else
    {
      *v91 = *v92;
      v97 = v93[5];
      v98 = (char *)v91 + v97;
      v99 = (char *)v92 + v97;
      if (v59((char *)v92 + v97, 1, (uint64_t)v450))
      {
        v100 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v100 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v12 + 32))(v98, v99, v450);
        v59 = v446;
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v12 + 56))(v98, 0, 1, v450);
      }
      *(_OWORD *)((char *)v91 + v93[6]) = *(_OWORD *)((char *)v92 + v93[6]);
      *(_OWORD *)((char *)v91 + v93[7]) = *(_OWORD *)((char *)v92 + v93[7]);
      *(_OWORD *)((char *)v91 + v93[8]) = *(_OWORD *)((char *)v92 + v93[8]);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v94 + 56))(v91, 0, 1, v93);
      v96 = v450;
      v5 = v454;
    }
    v101 = v5[32];
    v102 = (char *)a1 + v101;
    v103 = (char *)a2 + v101;
    v104 = type metadata accessor for LinkPresentation.Audio(0);
    v105 = *(_QWORD *)(v104 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v105 + 48))(v103, 1, v104))
    {
      v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
      memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v106 - 8) + 64));
    }
    else
    {
      if (v59(v103, 1, (uint64_t)v96))
      {
        v107 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v107 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v12 + 32))(v102, v103, v96);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v12 + 56))(v102, 0, 1, v96);
      }
      *(_OWORD *)&v102[*(int *)(v104 + 20)] = *(_OWORD *)&v103[*(int *)(v104 + 20)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v105 + 56))(v102, 0, 1, v104);
    }
    v108 = v5[33];
    v109 = (_DWORD *)((char *)a1 + v108);
    v110 = (_DWORD *)((char *)a2 + v108);
    v111 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
    v112 = *((_QWORD *)v111 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v112 + 48))(v110, 1, v111))
    {
      v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
      memcpy(v109, v110, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      v114 = v450;
    }
    else
    {
      *v109 = *v110;
      v115 = v111[5];
      v116 = (char *)v109 + v115;
      v117 = (char *)v110 + v115;
      if (v59((char *)v110 + v115, 1, (uint64_t)v450))
      {
        v118 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v116, v117, *(_QWORD *)(*(_QWORD *)(v118 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v12 + 32))(v116, v117, v450);
        v59 = v446;
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v12 + 56))(v116, 0, 1, v450);
      }
      *(_OWORD *)((char *)v109 + v111[6]) = *(_OWORD *)((char *)v110 + v111[6]);
      *(_OWORD *)((char *)v109 + v111[7]) = *(_OWORD *)((char *)v110 + v111[7]);
      (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v112 + 56))(v109, 0, 1, v111);
      v114 = v450;
      v5 = v454;
    }
    *(_QWORD *)((char *)a1 + v5[34]) = *(_QWORD *)((char *)a2 + v5[34]);
    *(_QWORD *)((char *)a1 + v5[35]) = *(_QWORD *)((char *)a2 + v5[35]);
    *(_QWORD *)((char *)a1 + v5[36]) = *(_QWORD *)((char *)a2 + v5[36]);
    *(_QWORD *)((char *)a1 + v5[37]) = *(_QWORD *)((char *)a2 + v5[37]);
    *(_QWORD *)((char *)a1 + v5[38]) = *(_QWORD *)((char *)a2 + v5[38]);
    *(_QWORD *)((char *)a1 + v5[39]) = *(_QWORD *)((char *)a2 + v5[39]);
    *(_QWORD *)((char *)a1 + v5[40]) = *(_QWORD *)((char *)a2 + v5[40]);
    v119 = v5[41];
    v120 = (_OWORD *)((char *)a1 + v119);
    v121 = (_OWORD *)((char *)a2 + v119);
    v122 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
    v123 = *(_QWORD *)(v122 - 8);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v123 + 48))(v121, 1, v122))
    {
      v124 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
      memcpy(v120, v121, *(_QWORD *)(*(_QWORD *)(v124 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v125 = v121[1];
          *v120 = *v121;
          v120[1] = v125;
          v126 = v121[3];
          v120[2] = v121[2];
          v120[3] = v126;
          v127 = v121[5];
          v120[4] = v121[4];
          v120[5] = v127;
          v128 = v121[9];
          v120[8] = v121[8];
          v120[9] = v128;
          v129 = v121[7];
          v120[6] = v121[6];
          v120[7] = v129;
          *(_OWORD *)((char *)v120 + 201) = *(_OWORD *)((char *)v121 + 201);
          v130 = v121[12];
          v131 = v121[10];
          v120[11] = v121[11];
          v120[12] = v130;
          v120[10] = v131;
          v132 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
          v133 = v132[11];
          __dsta = (_DWORD *)((char *)v120 + v133);
          v134 = (_DWORD *)((char *)v121 + v133);
          v135 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v136 = *(void (***)(void))(v135 - 8);
          v416 = v123;
          if (((unsigned int (*)(_DWORD *, uint64_t, uint64_t))v136[6])(v134, 1, v135))
          {
            v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(__dsta, v134, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
          }
          else
          {
            v425 = v136;
            *__dsta = *v134;
            v287 = *(int *)(v135 + 20);
            v288 = (char *)__dsta + v287;
            v289 = (char *)v134 + v287;
            if (v446((char *)v134 + v287, 1, (uint64_t)v450))
            {
              v290 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v288, v289, *(_QWORD *)(*(_QWORD *)(v290 - 8) + 64));
            }
            else
            {
              __src[4](v288, v289, v450);
              ((void (*)(char *, _QWORD, uint64_t, void *))__src[7])(v288, 0, 1, v450);
            }
            *(_QWORD *)((char *)__dsta + *(int *)(v135 + 24)) = *(_QWORD *)((char *)v134 + *(int *)(v135 + 24));
            v425[7]();
          }
          v357 = v132[12];
          v358 = (char *)v120 + v357;
          v359 = (char *)v121 + v357;
          v5 = v454;
          if (v446((char *)v121 + v357, 1, (uint64_t)v450))
          {
            v360 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v358, v359, *(_QWORD *)(*(_QWORD *)(v360 - 8) + 64));
          }
          else
          {
            __src[4](v358, v359, v450);
            ((void (*)(char *, _QWORD, uint64_t, void *))__src[7])(v358, 0, 1, v450);
          }
          *(_QWORD *)((char *)v120 + v132[13]) = *(_QWORD *)((char *)v121 + v132[13]);
          v361 = v132[14];
          v362 = (_OWORD *)((char *)v120 + v361);
          v363 = (_OWORD *)((char *)v121 + v361);
          v364 = v363[1];
          *v362 = *v363;
          v362[1] = v364;
          v362[2] = v363[2];
          *(_OWORD *)((char *)v362 + 41) = *(_OWORD *)((char *)v363 + 41);
          goto LABEL_172;
        case 1u:
          v138 = v121[1];
          *v120 = *v121;
          v120[1] = v138;
          v139 = v121[3];
          v120[2] = v121[2];
          v120[3] = v139;
          v140 = v121[9];
          v120[8] = v121[8];
          v120[9] = v140;
          v120[10] = v121[10];
          *(_OWORD *)((char *)v120 + 169) = *(_OWORD *)((char *)v121 + 169);
          v141 = v121[5];
          v120[4] = v121[4];
          v120[5] = v141;
          v142 = v121[7];
          v120[6] = v121[6];
          v120[7] = v142;
          v143 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
          v144 = *(int *)(v143 + 36);
          v436 = (_DWORD *)((char *)v120 + v144);
          v145 = (_DWORD *)((char *)v121 + v144);
          v146 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v147 = *(void (***)(void))(v146 - 8);
          if (((unsigned int (*)(_DWORD *, uint64_t, uint64_t))v147[6])(v145, 1, v146))
          {
            v148 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v436, v145, *(_QWORD *)(*(_QWORD *)(v148 - 8) + 64));
          }
          else
          {
            v426 = v147;
            v419 = v123;
            *v436 = *v145;
            v291 = *(int *)(v146 + 20);
            v292 = (char *)v436 + v291;
            v293 = (char *)v145 + v291;
            if (v446((char *)v145 + v291, 1, (uint64_t)v450))
            {
              v294 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v292, v293, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
            }
            else
            {
              __src[4](v292, v293, v450);
              ((void (*)(char *, _QWORD, uint64_t, void *))__src[7])(v292, 0, 1, v450);
            }
            *(_QWORD *)((char *)v436 + *(int *)(v146 + 24)) = *(_QWORD *)((char *)v145 + *(int *)(v146 + 24));
            v426[7]();
            v123 = v419;
          }
          *(_QWORD *)((char *)v120 + *(int *)(v143 + 40)) = *(_QWORD *)((char *)v121 + *(int *)(v143 + 40));
          goto LABEL_190;
        case 2u:
          v149 = v121[1];
          *v120 = *v121;
          v120[1] = v149;
          v150 = v121[3];
          v120[2] = v121[2];
          v120[3] = v150;
          v151 = v121[9];
          v120[8] = v121[8];
          v120[9] = v151;
          v120[10] = v121[10];
          *(_OWORD *)((char *)v120 + 169) = *(_OWORD *)((char *)v121 + 169);
          v152 = v121[5];
          v120[4] = v121[4];
          v120[5] = v152;
          v153 = v121[7];
          v120[6] = v121[6];
          v120[7] = v153;
          v154 = *(int *)(type metadata accessor for LinkPresentation.MusicVideoMetadata(0) + 36);
          v155 = (_DWORD *)((char *)v120 + v154);
          v156 = (char *)v121 + v154;
          v157 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v158 = *(_QWORD *)(v157 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
            goto LABEL_109;
          v417 = v123;
          *v155 = *(_DWORD *)v156;
          v295 = *(int *)(v157 + 20);
          v441 = (char *)v155 + v295;
          v296 = &v156[v295];
          if (v446(&v156[v295], 1, (uint64_t)v450))
            goto LABEL_141;
          goto LABEL_182;
        case 3u:
          v159 = v121[1];
          *v120 = *v121;
          v120[1] = v159;
          v160 = v121[3];
          v120[2] = v121[2];
          v120[3] = v160;
          v161 = v121[9];
          v120[8] = v121[8];
          v120[9] = v161;
          v120[10] = v121[10];
          *(_OWORD *)((char *)v120 + 169) = *(_OWORD *)((char *)v121 + 169);
          v162 = v121[5];
          v120[4] = v121[4];
          v120[5] = v162;
          v163 = v121[7];
          v120[6] = v121[6];
          v120[7] = v163;
          v164 = *(int *)(type metadata accessor for LinkPresentation.ArtistMetadata(0) + 36);
          v155 = (_DWORD *)((char *)v120 + v164);
          v156 = (char *)v121 + v164;
          v157 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v158 = *(_QWORD *)(v157 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
            goto LABEL_109;
          v417 = v123;
          *v155 = *(_DWORD *)v156;
          v297 = *(int *)(v157 + 20);
          v441 = (char *)v155 + v297;
          v296 = &v156[v297];
          if (v446(&v156[v297], 1, (uint64_t)v450))
            goto LABEL_141;
          goto LABEL_182;
        case 4u:
          v417 = v123;
          v165 = v121[1];
          *v120 = *v121;
          v120[1] = v165;
          v166 = v121[3];
          v120[2] = v121[2];
          v120[3] = v166;
          v167 = type metadata accessor for LinkPresentation.PlaylistMetadata(0);
          v168 = (unsigned int (*)(char *, uint64_t, void *))v59;
          v169 = (int *)v167;
          v170 = *(int *)(v167 + 32);
          v171 = (char *)v120 + v170;
          v172 = (char *)v121 + v170;
          if (v168((char *)v121 + v170, 1, v114))
          {
            v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, void *))(v12 + 32))(v171, v172, v114);
            (*(void (**)(char *, _QWORD, uint64_t, void *))(v12 + 56))(v171, 0, 1, v114);
          }
          *(_OWORD *)((char *)v120 + v169[9]) = *(_OWORD *)((char *)v121 + v169[9]);
          v298 = v169[10];
          v299 = (_OWORD *)((char *)v120 + v298);
          v300 = (_OWORD *)((char *)v121 + v298);
          v301 = v300[3];
          v299[2] = v300[2];
          v299[3] = v301;
          v302 = v300[1];
          *v299 = *v300;
          v299[1] = v302;
          *(_OWORD *)((char *)v299 + 105) = *(_OWORD *)((char *)v300 + 105);
          v303 = v300[6];
          v304 = v300[4];
          v299[5] = v300[5];
          v299[6] = v303;
          v299[4] = v304;
          v305 = v169[11];
          v155 = (_DWORD *)((char *)v120 + v305);
          v156 = (char *)v121 + v305;
          v157 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v158 = *(_QWORD *)(v157 - 8);
          v123 = v417;
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
            goto LABEL_109;
          *v155 = *(_DWORD *)v156;
          v350 = *(int *)(v157 + 20);
          v441 = (char *)v155 + v350;
          v296 = &v156[v350];
          if (v446(&v156[v350], 1, (uint64_t)v450))
            goto LABEL_141;
          goto LABEL_182;
        case 5u:
          v174 = v121[1];
          *v120 = *v121;
          v120[1] = v174;
          v175 = v121[3];
          v120[2] = v121[2];
          v120[3] = v175;
          v176 = v121[9];
          v120[8] = v121[8];
          v120[9] = v176;
          v120[10] = v121[10];
          *(_OWORD *)((char *)v120 + 169) = *(_OWORD *)((char *)v121 + 169);
          v177 = v121[5];
          v120[4] = v121[4];
          v120[5] = v177;
          v178 = v121[7];
          v120[6] = v121[6];
          v120[7] = v178;
          v179 = *(int *)(type metadata accessor for LinkPresentation.RadioMetadata(0) + 36);
          v155 = (_DWORD *)((char *)v120 + v179);
          v156 = (char *)v121 + v179;
          v157 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v158 = *(_QWORD *)(v157 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
            goto LABEL_109;
          v417 = v123;
          *v155 = *(_DWORD *)v156;
          v307 = *(int *)(v157 + 20);
          v441 = (char *)v155 + v307;
          v296 = &v156[v307];
          if (v446(&v156[v307], 1, (uint64_t)v450))
            goto LABEL_141;
          goto LABEL_182;
        case 6u:
          v180 = v121[1];
          *v120 = *v121;
          v120[1] = v180;
          v181 = v121[3];
          v120[2] = v121[2];
          v120[3] = v181;
          v182 = v121[5];
          v120[4] = v121[4];
          v120[5] = v182;
          v183 = v121[9];
          v120[8] = v121[8];
          v120[9] = v183;
          v184 = v121[7];
          v120[6] = v121[6];
          v120[7] = v184;
          *(_OWORD *)((char *)v120 + 201) = *(_OWORD *)((char *)v121 + 201);
          v185 = v121[12];
          v186 = v121[10];
          v120[11] = v121[11];
          v120[12] = v185;
          v120[10] = v186;
          *((_QWORD *)v120 + 28) = *((_QWORD *)v121 + 28);
          v187 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
          v188 = *(int *)(v187 + 48);
          v447 = (int *)v187;
          v451 = (char *)v120 + v188;
          __srca = (char *)v121 + v188;
          if (((unsigned int (*)(void))v424)())
          {
            v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
            memcpy(v451, __srca, *(_QWORD *)(*(_QWORD *)(v189 - 8) + 64));
          }
          else
          {
            v420 = v123;
            if (v59(__srca, 1, (uint64_t)v114))
            {
              v308 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              v309 = v451;
              memcpy(v451, __srca, *(_QWORD *)(*(_QWORD *)(v308 - 8) + 64));
            }
            else
            {
              v309 = v451;
              (*(void (**)(char *, char *, void *))(v12 + 32))(v451, __srca, v114);
              (*(void (**)(char *, _QWORD, uint64_t, void *))(v12 + 56))(v451, 0, 1, v114);
            }
            v365 = __dst[5];
            v432 = &v309[v365];
            v366 = &__srca[v365];
            if (v59(&__srca[v365], 1, (uint64_t)v114))
            {
              v367 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v432, v366, *(_QWORD *)(*(_QWORD *)(v367 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, void *))(v12 + 32))(v432, v366, v114);
              (*(void (**)(char *, _QWORD, uint64_t, void *))(v12 + 56))(v432, 0, 1, v114);
            }
            *(_OWORD *)&v451[__dst[6]] = *(_OWORD *)&__srca[__dst[6]];
            v451[__dst[7]] = __srca[__dst[7]];
            *(_QWORD *)&v451[__dst[8]] = *(_QWORD *)&__srca[__dst[8]];
            v378 = __dst[9];
            v379 = &v451[v378];
            v380 = &__srca[v378];
            *(_OWORD *)v379 = *(_OWORD *)v380;
            *((_QWORD *)v379 + 2) = *((_QWORD *)v380 + 2);
            ((void (*)(void))v435[7])();
            v123 = v420;
          }
          *((_BYTE *)v120 + v447[13]) = *((_BYTE *)v121 + v447[13]);
          v381 = v447[14];
          v382 = (_OWORD *)((char *)v120 + v381);
          v383 = (_OWORD *)((char *)v121 + v381);
          v384 = v383[5];
          v382[4] = v383[4];
          v382[5] = v384;
          v382[6] = v383[6];
          *(_OWORD *)((char *)v382 + 105) = *(_OWORD *)((char *)v383 + 105);
          v385 = v383[1];
          *v382 = *v383;
          v382[1] = v385;
          v386 = v383[3];
          v382[2] = v383[2];
          v382[3] = v386;
          goto LABEL_190;
        case 7u:
          v190 = v121[1];
          *v120 = *v121;
          v120[1] = v190;
          v191 = v121[3];
          v120[2] = v121[2];
          v120[3] = v191;
          v192 = v121[9];
          v120[8] = v121[8];
          v120[9] = v192;
          v120[10] = v121[10];
          *(_OWORD *)((char *)v120 + 169) = *(_OWORD *)((char *)v121 + 169);
          v193 = v121[5];
          v120[4] = v121[4];
          v120[5] = v193;
          v194 = v121[7];
          v120[6] = v121[6];
          v120[7] = v194;
          v195 = type metadata accessor for LinkPresentation.BookMetadata(0);
          v196 = *(int *)(v195 + 36);
          v437 = (_DWORD *)((char *)v120 + v196);
          v197 = (_DWORD *)((char *)v121 + v196);
          v198 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v199 = *(void (***)(void))(v198 - 8);
          if (((unsigned int (*)(_DWORD *, uint64_t, uint64_t))v199[6])(v197, 1, v198))
          {
            v200 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v437, v197, *(_QWORD *)(*(_QWORD *)(v200 - 8) + 64));
          }
          else
          {
            v427 = v199;
            v421 = v123;
            *v437 = *v197;
            v310 = *(int *)(v198 + 20);
            v311 = (char *)v437 + v310;
            v312 = (char *)v197 + v310;
            if (v446((char *)v197 + v310, 1, (uint64_t)v450))
            {
              v313 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v311, v312, *(_QWORD *)(*(_QWORD *)(v313 - 8) + 64));
            }
            else
            {
              __src[4](v311, v312, v450);
              ((void (*)(char *, _QWORD, uint64_t, void *))__src[7])(v311, 0, 1, v450);
            }
            *(_QWORD *)((char *)v437 + *(int *)(v198 + 24)) = *(_QWORD *)((char *)v197 + *(int *)(v198 + 24));
            v427[7]();
            v123 = v421;
          }
          *((_BYTE *)v120 + *(int *)(v195 + 40)) = *((_BYTE *)v121 + *(int *)(v195 + 40));
          goto LABEL_190;
        case 8u:
          v201 = v121[1];
          *v120 = *v121;
          v120[1] = v201;
          v202 = v121[3];
          v120[2] = v121[2];
          v120[3] = v202;
          v203 = v121[7];
          v120[6] = v121[6];
          v120[7] = v203;
          v204 = v121[5];
          v120[4] = v121[4];
          v120[5] = v204;
          *(_OWORD *)((char *)v120 + 185) = *(_OWORD *)((char *)v121 + 185);
          v205 = v121[11];
          v120[10] = v121[10];
          v120[11] = v205;
          v206 = v121[9];
          v120[8] = v121[8];
          v120[9] = v206;
          v207 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
          v208 = *(int *)(v207 + 40);
          v438 = (_DWORD *)((char *)v120 + v208);
          v209 = (_DWORD *)((char *)v121 + v208);
          v210 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v211 = *(void (***)(void))(v210 - 8);
          v416 = v123;
          if (((unsigned int (*)(_DWORD *, uint64_t, uint64_t))v211[6])(v209, 1, v210))
          {
            v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v438, v209, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
          }
          else
          {
            v428 = v211;
            *v438 = *v209;
            v314 = *(int *)(v210 + 20);
            v315 = (char *)v438 + v314;
            v316 = (char *)v209 + v314;
            if (v446((char *)v209 + v314, 1, (uint64_t)v450))
            {
              v317 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v315, v316, *(_QWORD *)(*(_QWORD *)(v317 - 8) + 64));
            }
            else
            {
              __src[4](v315, v316, v450);
              ((void (*)(char *, _QWORD, uint64_t, void *))__src[7])(v315, 0, 1, v450);
            }
            *(_QWORD *)((char *)v438 + *(int *)(v210 + 24)) = *(_QWORD *)((char *)v209 + *(int *)(v210 + 24));
            v428[7]();
          }
          v368 = *(int *)(v207 + 44);
          v369 = (char *)v120 + v368;
          v370 = (char *)v121 + v368;
          v5 = v454;
          if (v446((char *)v121 + v368, 1, (uint64_t)v450))
          {
            v371 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v369, v370, *(_QWORD *)(*(_QWORD *)(v371 - 8) + 64));
          }
          else
          {
            __src[4](v369, v370, v450);
            ((void (*)(char *, _QWORD, uint64_t, void *))__src[7])(v369, 0, 1, v450);
          }
          goto LABEL_172;
        case 9u:
          v418 = v123;
          v213 = v121[1];
          *v120 = *v121;
          v120[1] = v213;
          v214 = v121[3];
          v120[2] = v121[2];
          v120[3] = v214;
          v120[4] = v121[4];
          v215 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
          v216 = v215[9];
          v217 = (char *)v120 + v216;
          v218 = (char *)v121 + v216;
          v219 = sub_1AD63B03C();
          v220 = *(_QWORD *)(v219 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v220 + 48))(v218, 1, v219))
          {
            v221 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v220 + 32))(v217, v218, v219);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v220 + 56))(v217, 0, 1, v219);
          }
          v318 = v215[10];
          v319 = (_OWORD *)((char *)v120 + v318);
          v320 = (_OWORD *)((char *)v121 + v318);
          v321 = v320[5];
          v319[4] = v320[4];
          v319[5] = v321;
          v319[6] = v320[6];
          *(_OWORD *)((char *)v319 + 105) = *(_OWORD *)((char *)v320 + 105);
          v322 = v320[1];
          *v319 = *v320;
          v319[1] = v322;
          v323 = v320[3];
          v319[2] = v320[2];
          v319[3] = v323;
          v324 = v215[11];
          v325 = (_DWORD *)((char *)v120 + v324);
          v442 = v215;
          v326 = (_DWORD *)((char *)v121 + v324);
          v327 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v328 = *(void (***)(void))(v327 - 8);
          v123 = v418;
          if (((unsigned int (*)(_DWORD *, uint64_t, uint64_t))v328[6])(v326, 1, v327))
          {
            v329 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v325, v326, *(_QWORD *)(*(_QWORD *)(v329 - 8) + 64));
          }
          else
          {
            v431 = v328;
            *v325 = *v326;
            v352 = *(int *)(v327 + 20);
            v353 = (char *)v325 + v352;
            v354 = (char *)v326 + v352;
            if (v446((char *)v326 + v352, 1, (uint64_t)v450))
            {
              v355 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v353, v354, *(_QWORD *)(*(_QWORD *)(v355 - 8) + 64));
            }
            else
            {
              __src[4](v353, v354, v450);
              ((void (*)(char *, _QWORD, uint64_t, void *))__src[7])(v353, 0, 1, v450);
            }
            *(_QWORD *)((char *)v325 + *(int *)(v327 + 24)) = *(_QWORD *)((char *)v326 + *(int *)(v327 + 24));
            v431[7]();
            v123 = v418;
          }
          *(_QWORD *)((char *)v120 + v442[12]) = *(_QWORD *)((char *)v121 + v442[12]);
          goto LABEL_190;
        case 0xAu:
          v222 = v121[1];
          *v120 = *v121;
          v120[1] = v222;
          v223 = v121[3];
          v120[2] = v121[2];
          v120[3] = v223;
          v224 = v121[9];
          v120[8] = v121[8];
          v120[9] = v224;
          v120[10] = v121[10];
          *(_OWORD *)((char *)v120 + 169) = *(_OWORD *)((char *)v121 + 169);
          v225 = v121[5];
          v120[4] = v121[4];
          v120[5] = v225;
          v226 = v121[7];
          v120[6] = v121[6];
          v120[7] = v226;
          v227 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
          v228 = *(int *)(v227 + 36);
          v439 = (_DWORD *)((char *)v120 + v228);
          v229 = (_DWORD *)((char *)v121 + v228);
          v230 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v231 = *(void (***)(void))(v230 - 8);
          if (((unsigned int (*)(_DWORD *, uint64_t, uint64_t))v231[6])(v229, 1, v230))
          {
            v232 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v439, v229, *(_QWORD *)(*(_QWORD *)(v232 - 8) + 64));
          }
          else
          {
            v429 = v231;
            v422 = v123;
            *v439 = *v229;
            v330 = *(int *)(v230 + 20);
            v331 = (char *)v439 + v330;
            v332 = (char *)v229 + v330;
            if (v446((char *)v229 + v330, 1, (uint64_t)v450))
            {
              v333 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v331, v332, *(_QWORD *)(*(_QWORD *)(v333 - 8) + 64));
            }
            else
            {
              __src[4](v331, v332, v450);
              ((void (*)(char *, _QWORD, uint64_t, void *))__src[7])(v331, 0, 1, v450);
            }
            *(_QWORD *)((char *)v439 + *(int *)(v230 + 24)) = *(_QWORD *)((char *)v229 + *(int *)(v230 + 24));
            v429[7]();
            v123 = v422;
          }
          *(_QWORD *)((char *)v120 + *(int *)(v227 + 40)) = *(_QWORD *)((char *)v121 + *(int *)(v227 + 40));
          goto LABEL_190;
        case 0xBu:
          v233 = v121[1];
          *v120 = *v121;
          v120[1] = v233;
          v234 = v121[3];
          v120[2] = v121[2];
          v120[3] = v234;
          v235 = v121[7];
          v120[6] = v121[6];
          v120[7] = v235;
          v236 = v121[5];
          v120[4] = v121[4];
          v120[5] = v236;
          *(_OWORD *)((char *)v120 + 185) = *(_OWORD *)((char *)v121 + 185);
          v237 = v121[11];
          v120[10] = v121[10];
          v120[11] = v237;
          v238 = v121[9];
          v120[8] = v121[8];
          v120[9] = v238;
          v239 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
          v155 = (_DWORD *)((char *)v120 + v239);
          v156 = (char *)v121 + v239;
          v157 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v158 = *(_QWORD *)(v157 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
            goto LABEL_109;
          v417 = v123;
          *v155 = *(_DWORD *)v156;
          v334 = *(int *)(v157 + 20);
          v441 = (char *)v155 + v334;
          v296 = &v156[v334];
          if (v446(&v156[v334], 1, (uint64_t)v450))
            goto LABEL_141;
          goto LABEL_182;
        case 0xCu:
          v240 = v121[1];
          *v120 = *v121;
          v120[1] = v240;
          v241 = v121[3];
          v120[2] = v121[2];
          v120[3] = v241;
          v242 = v121[9];
          v120[8] = v121[8];
          v120[9] = v242;
          v120[10] = v121[10];
          *(_OWORD *)((char *)v120 + 169) = *(_OWORD *)((char *)v121 + 169);
          v243 = v121[5];
          v120[4] = v121[4];
          v120[5] = v243;
          v244 = v121[7];
          v120[6] = v121[6];
          v120[7] = v244;
          v245 = *(int *)(type metadata accessor for LinkPresentation.TVSeasonMetadata(0) + 36);
          v155 = (_DWORD *)((char *)v120 + v245);
          v156 = (char *)v121 + v245;
          v157 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v158 = *(_QWORD *)(v157 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
            goto LABEL_109;
          v417 = v123;
          *v155 = *(_DWORD *)v156;
          v335 = *(int *)(v157 + 20);
          v441 = (char *)v155 + v335;
          v296 = &v156[v335];
          if (v446(&v156[v335], 1, (uint64_t)v450))
            goto LABEL_141;
          goto LABEL_182;
        case 0xDu:
          v246 = v121[1];
          *v120 = *v121;
          v120[1] = v246;
          v247 = v121[9];
          v120[8] = v121[8];
          v120[9] = v247;
          *(_OWORD *)((char *)v120 + 153) = *(_OWORD *)((char *)v121 + 153);
          v248 = v121[3];
          v120[2] = v121[2];
          v120[3] = v248;
          v249 = v121[5];
          v120[4] = v121[4];
          v120[5] = v249;
          v250 = v121[7];
          v120[6] = v121[6];
          v120[7] = v250;
          v251 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
          v155 = (_DWORD *)((char *)v120 + v251);
          v156 = (char *)v121 + v251;
          v157 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v158 = *(_QWORD *)(v157 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
            goto LABEL_109;
          v417 = v123;
          *v155 = *(_DWORD *)v156;
          v336 = *(int *)(v157 + 20);
          v441 = (char *)v155 + v336;
          v296 = &v156[v336];
          if (v446(&v156[v336], 1, (uint64_t)v450))
            goto LABEL_141;
          goto LABEL_182;
        case 0xEu:
          v252 = v121[1];
          *v120 = *v121;
          v120[1] = v252;
          v253 = v121[3];
          v120[2] = v121[2];
          v120[3] = v253;
          v254 = v121[9];
          v120[8] = v121[8];
          v120[9] = v254;
          v120[10] = v121[10];
          *(_OWORD *)((char *)v120 + 169) = *(_OWORD *)((char *)v121 + 169);
          v255 = v121[5];
          v120[4] = v121[4];
          v120[5] = v255;
          v256 = v121[7];
          v120[6] = v121[6];
          v120[7] = v256;
          v257 = (int *)type metadata accessor for LinkPresentation.MovieMetadata(0);
          v258 = v257[9];
          v440 = (_DWORD *)((char *)v120 + v258);
          v259 = (_DWORD *)((char *)v121 + v258);
          v260 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v261 = *(void (***)(void))(v260 - 8);
          if (((unsigned int (*)(_DWORD *, uint64_t, uint64_t))v261[6])(v259, 1, v260))
          {
            v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v440, v259, *(_QWORD *)(*(_QWORD *)(v262 - 8) + 64));
          }
          else
          {
            v430 = v261;
            v423 = v123;
            *v440 = *v259;
            v337 = *(int *)(v260 + 20);
            v338 = (char *)v440 + v337;
            v339 = (char *)v259 + v337;
            if (v446((char *)v259 + v337, 1, (uint64_t)v450))
            {
              v340 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v338, v339, *(_QWORD *)(*(_QWORD *)(v340 - 8) + 64));
            }
            else
            {
              __src[4](v338, v339, v450);
              ((void (*)(char *, _QWORD, uint64_t, void *))__src[7])(v338, 0, 1, v450);
            }
            *(_QWORD *)((char *)v440 + *(int *)(v260 + 24)) = *(_QWORD *)((char *)v259 + *(int *)(v260 + 24));
            v430[7]();
            v123 = v423;
          }
          v372 = v257[10];
          v373 = (_OWORD *)((char *)v120 + v372);
          v374 = (_OWORD *)((char *)v121 + v372);
          v375 = v374[5];
          v373[4] = v374[4];
          v373[5] = v375;
          v373[6] = v374[6];
          *(_OWORD *)((char *)v373 + 105) = *(_OWORD *)((char *)v374 + 105);
          v376 = v374[1];
          *v373 = *v374;
          v373[1] = v376;
          v377 = v374[3];
          v373[2] = v374[2];
          v373[3] = v377;
          *(_OWORD *)((char *)v120 + v257[11]) = *(_OWORD *)((char *)v121 + v257[11]);
          goto LABEL_190;
        case 0xFu:
          v263 = v121[1];
          *v120 = *v121;
          v120[1] = v263;
          v264 = v121[3];
          v120[2] = v121[2];
          v120[3] = v264;
          v265 = v121[9];
          v120[8] = v121[8];
          v120[9] = v265;
          v120[10] = v121[10];
          *(_OWORD *)((char *)v120 + 169) = *(_OWORD *)((char *)v121 + 169);
          v266 = v121[5];
          v120[4] = v121[4];
          v120[5] = v266;
          v267 = v121[7];
          v120[6] = v121[6];
          v120[7] = v267;
          v268 = *(int *)(type metadata accessor for LinkPresentation.MovieBundleMetadata(0) + 36);
          v155 = (_DWORD *)((char *)v120 + v268);
          v156 = (char *)v121 + v268;
          v157 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v158 = *(_QWORD *)(v157 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v158 + 48))(v156, 1, v157))
          {
LABEL_109:
            v306 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v306 - 8) + 64));
          }
          else
          {
            v417 = v123;
            *v155 = *(_DWORD *)v156;
            v341 = *(int *)(v157 + 20);
            v441 = (char *)v155 + v341;
            v296 = &v156[v341];
            if (v446(&v156[v341], 1, (uint64_t)v450))
            {
LABEL_141:
              v351 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v441, v296, *(_QWORD *)(*(_QWORD *)(v351 - 8) + 64));
            }
            else
            {
LABEL_182:
              (*(void (**)(char *, char *, void *))(v12 + 32))(v441, v296, v450);
              (*(void (**)(char *, _QWORD, uint64_t, void *))(v12 + 56))(v441, 0, 1, v450);
            }
            *(_QWORD *)((char *)v155 + *(int *)(v157 + 24)) = *(_QWORD *)&v156[*(int *)(v157 + 24)];
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v158 + 56))(v155, 0, 1, v157);
            v123 = v417;
          }
LABEL_190:
          swift_storeEnumTagMultiPayload();
          v5 = v454;
          break;
        case 0x16u:
          v416 = v123;
          v269 = v121[1];
          *v120 = *v121;
          v120[1] = v269;
          *((_QWORD *)v120 + 4) = *((_QWORD *)v121 + 4);
          *(_OWORD *)((char *)v120 + 104) = *(_OWORD *)((char *)v121 + 104);
          *(_OWORD *)((char *)v120 + 120) = *(_OWORD *)((char *)v121 + 120);
          *(_OWORD *)((char *)v120 + 136) = *(_OWORD *)((char *)v121 + 136);
          *(_OWORD *)((char *)v120 + 145) = *(_OWORD *)((char *)v121 + 145);
          *(_OWORD *)((char *)v120 + 40) = *(_OWORD *)((char *)v121 + 40);
          *(_OWORD *)((char *)v120 + 56) = *(_OWORD *)((char *)v121 + 56);
          *(_OWORD *)((char *)v120 + 72) = *(_OWORD *)((char *)v121 + 72);
          *(_OWORD *)((char *)v120 + 88) = *(_OWORD *)((char *)v121 + 88);
          *(_OWORD *)((char *)v120 + 273) = *(_OWORD *)((char *)v121 + 273);
          *(_OWORD *)((char *)v120 + 264) = *(_OWORD *)((char *)v121 + 264);
          *(_OWORD *)((char *)v120 + 248) = *(_OWORD *)((char *)v121 + 248);
          *(_OWORD *)((char *)v120 + 232) = *(_OWORD *)((char *)v121 + 232);
          *(_OWORD *)((char *)v120 + 216) = *(_OWORD *)((char *)v121 + 216);
          *(_OWORD *)((char *)v120 + 200) = *(_OWORD *)((char *)v121 + 200);
          *(_OWORD *)((char *)v120 + 184) = *(_OWORD *)((char *)v121 + 184);
          *(_OWORD *)((char *)v120 + 168) = *(_OWORD *)((char *)v121 + 168);
          v270 = *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
          v271 = (char *)v120 + v270;
          v272 = (char *)v121 + v270;
          v273 = sub_1AD63B03C();
          v274 = *(_QWORD *)(v273 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v274 + 48))(v272, 1, v273))
          {
            v275 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v271, v272, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v274 + 32))(v271, v272, v273);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v274 + 56))(v271, 0, 1, v273);
          }
          goto LABEL_172;
        case 0x1Au:
          v276 = v121[1];
          *v120 = *v121;
          v120[1] = v276;
          *((_QWORD *)v120 + 4) = *((_QWORD *)v121 + 4);
          *(_OWORD *)((char *)v120 + 104) = *(_OWORD *)((char *)v121 + 104);
          *(_OWORD *)((char *)v120 + 120) = *(_OWORD *)((char *)v121 + 120);
          *(_OWORD *)((char *)v120 + 136) = *(_OWORD *)((char *)v121 + 136);
          *(_OWORD *)((char *)v120 + 145) = *(_OWORD *)((char *)v121 + 145);
          *(_OWORD *)((char *)v120 + 40) = *(_OWORD *)((char *)v121 + 40);
          *(_OWORD *)((char *)v120 + 56) = *(_OWORD *)((char *)v121 + 56);
          *(_OWORD *)((char *)v120 + 72) = *(_OWORD *)((char *)v121 + 72);
          *(_OWORD *)((char *)v120 + 88) = *(_OWORD *)((char *)v121 + 88);
          v452 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
          v277 = v452[9];
          v278 = (char *)v120 + v277;
          v279 = (char *)v121 + v277;
          v280 = sub_1AD63B03C();
          v281 = *(_QWORD *)(v280 - 8);
          v448 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v281 + 48);
          v416 = v123;
          if (v448(v279, 1, v280))
          {
            v282 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v278, v279, *(_QWORD *)(*(_QWORD *)(v282 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v281 + 32))(v278, v279, v280);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v278, 0, 1, v280);
          }
          v342 = v452[10];
          v343 = (char *)v120 + v342;
          v344 = (char *)v121 + v342;
          v5 = v454;
          if (v448((char *)v121 + v342, 1, v280))
          {
            v345 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v343, v344, *(_QWORD *)(*(_QWORD *)(v345 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v281 + 32))(v343, v344, v280);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v343, 0, 1, v280);
          }
          v356 = v452[11];
          v347 = (char *)v120 + v356;
          v348 = (char *)v121 + v356;
          if (v448((char *)v121 + v356, 1, v280))
            goto LABEL_139;
          goto LABEL_147;
        case 0x1Eu:
          *v120 = *v121;
          v283 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
          v284 = *(int *)(v283 + 20);
          v449 = (char *)v120 + v284;
          v285 = (char *)v121 + v284;
          v280 = sub_1AD63B03C();
          v281 = *(_QWORD *)(v280 - 8);
          v453 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v281 + 48);
          v416 = v123;
          if (v453(v285, 1, v280))
          {
            v286 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v449, v285, *(_QWORD *)(*(_QWORD *)(v286 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v281 + 32))(v449, v285, v280);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v449, 0, 1, v280);
          }
          v346 = *(int *)(v283 + 24);
          v347 = (char *)v120 + v346;
          v348 = (char *)v121 + v346;
          v5 = v454;
          if (v453((char *)v121 + v346, 1, v280))
          {
LABEL_139:
            v349 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v347, v348, *(_QWORD *)(*(_QWORD *)(v349 - 8) + 64));
          }
          else
          {
LABEL_147:
            (*(void (**)(char *, char *, uint64_t))(v281 + 32))(v347, v348, v280);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v281 + 56))(v347, 0, 1, v280);
          }
LABEL_172:
          swift_storeEnumTagMultiPayload();
          v123 = v416;
          break;
        default:
          memcpy(v120, v121, *(_QWORD *)(v123 + 64));
          break;
      }
      (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v123 + 56))(v120, 0, 1, v122);
    }
    v387 = v5[42];
    v388 = (char *)a1 + v387;
    v389 = (char *)a2 + v387;
    v390 = *((_OWORD *)v389 + 9);
    *((_OWORD *)v388 + 8) = *((_OWORD *)v389 + 8);
    *((_OWORD *)v388 + 9) = v390;
    *((_OWORD *)v388 + 10) = *((_OWORD *)v389 + 10);
    *((_QWORD *)v388 + 22) = *((_QWORD *)v389 + 22);
    v391 = *((_OWORD *)v389 + 5);
    *((_OWORD *)v388 + 4) = *((_OWORD *)v389 + 4);
    *((_OWORD *)v388 + 5) = v391;
    v392 = *((_OWORD *)v389 + 7);
    *((_OWORD *)v388 + 6) = *((_OWORD *)v389 + 6);
    *((_OWORD *)v388 + 7) = v392;
    v393 = *((_OWORD *)v389 + 1);
    *(_OWORD *)v388 = *(_OWORD *)v389;
    *((_OWORD *)v388 + 1) = v393;
    v394 = *((_OWORD *)v389 + 3);
    *((_OWORD *)v388 + 2) = *((_OWORD *)v389 + 2);
    *((_OWORD *)v388 + 3) = v394;
    v395 = v5[43];
    v396 = (_OWORD *)((char *)a1 + v395);
    v397 = (_OWORD *)((char *)a2 + v395);
    v398 = (int *)type metadata accessor for CollaborationMetadata();
    v399 = *((_QWORD *)v398 - 1);
    if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v399 + 48))(v397, 1, v398))
    {
      v400 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
      memcpy(v396, v397, *(_QWORD *)(*(_QWORD *)(v400 - 8) + 64));
    }
    else
    {
      v401 = v397[1];
      *v396 = *v397;
      v396[1] = v401;
      v402 = v398[6];
      v403 = (char *)v396 + v402;
      v404 = (char *)v397 + v402;
      v405 = sub_1AD63B03C();
      v406 = *(_QWORD *)(v405 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v406 + 48))(v404, 1, v405))
      {
        v407 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v403, v404, *(_QWORD *)(*(_QWORD *)(v407 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v406 + 32))(v403, v404, v405);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v406 + 56))(v403, 0, 1, v405);
      }
      *(_OWORD *)((char *)v396 + v398[7]) = *(_OWORD *)((char *)v397 + v398[7]);
      *(_QWORD *)((char *)v396 + v398[8]) = *(_QWORD *)((char *)v397 + v398[8]);
      *(_QWORD *)((char *)v396 + v398[9]) = *(_QWORD *)((char *)v397 + v398[9]);
      v408 = v398[10];
      v409 = (_OWORD *)((char *)v396 + v408);
      v410 = (_OWORD *)((char *)v397 + v408);
      v411 = v410[5];
      v409[4] = v410[4];
      v409[5] = v411;
      v412 = v410[7];
      v409[6] = v410[6];
      v409[7] = v412;
      v413 = v410[1];
      *v409 = *v410;
      v409[1] = v413;
      v414 = v410[3];
      v409[2] = v410[2];
      v409[3] = v414;
      (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v399 + 56))(v396, 0, 1, v398);
      v5 = v454;
    }
    (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v443 + 56))(a1, 0, 1, v5);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 20)) = *((_BYTE *)a2 + *(int *)(a3 + 20));
  return a1;
}

char *sub_1AD068F20(char *a1, char *a2, uint64_t a3)
{
  int *v6;
  _QWORD *v7;
  uint64_t (*v8)(char *, uint64_t, int *);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  char *v38;
  char *v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  uint64_t *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  char *v88;
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  uint64_t *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  char *v114;
  __int128 v115;
  uint64_t v116;
  char *v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t *v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char *v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t (*v139)(char *, uint64_t, uint64_t);
  int v140;
  int v141;
  uint64_t v142;
  char *v143;
  char *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  __int128 v150;
  uint64_t v151;
  char *v152;
  char *v153;
  int *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  char *v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  uint64_t v168;
  char *v169;
  char *v170;
  int *v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  _DWORD *v178;
  uint64_t v179;
  char *v180;
  char *v181;
  int *v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  char *v193;
  _DWORD *v194;
  int *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  char *v210;
  _DWORD *v211;
  int *v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  char *v220;
  _OWORD *v221;
  uint64_t v222;
  size_t *v223;
  uint64_t v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  uint64_t v232;
  char *v233;
  _DWORD *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  unsigned int v242;
  unsigned int v243;
  uint64_t v244;
  uint64_t v245;
  char *v246;
  uint64_t *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  __int128 v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  int *v259;
  uint64_t v260;
  uint64_t (*v261)(char *, uint64_t, int *);
  int v262;
  int v263;
  uint64_t v264;
  char *v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  char *v270;
  char *v271;
  unsigned int v272;
  unsigned int v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  uint64_t *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  uint64_t v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  uint64_t v293;
  char *v294;
  char *v295;
  int *v296;
  uint64_t v297;
  uint64_t (*v298)(char *, uint64_t, int *);
  int v299;
  int v300;
  uint64_t v301;
  char *v302;
  char *v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  char *v308;
  unsigned int v309;
  unsigned int v310;
  uint64_t v311;
  uint64_t v312;
  char *v313;
  uint64_t *v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  char *v318;
  uint64_t *v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  char *v323;
  char *v324;
  int *v325;
  uint64_t (*v326)(char *, uint64_t, int *);
  int v327;
  int v328;
  uint64_t v329;
  uint64_t v330;
  unsigned int v331;
  unsigned int v332;
  uint64_t v333;
  char *v334;
  char *v335;
  uint64_t v336;
  uint64_t v337;
  char *v338;
  char *v339;
  uint64_t v340;
  uint64_t v341;
  char *v342;
  char *v343;
  unsigned int v344;
  unsigned int v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  char *v353;
  char *v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  char *v358;
  char *v359;
  int *v360;
  uint64_t v361;
  uint64_t (*v362)(char *, uint64_t, int *);
  int v363;
  int v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  char *v371;
  char *v372;
  unsigned int v373;
  unsigned int v374;
  uint64_t v375;
  uint64_t v376;
  char *v377;
  uint64_t *v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  char *v382;
  uint64_t *v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t (*v391)(char *, uint64_t, uint64_t);
  int v392;
  int v393;
  uint64_t v394;
  uint64_t v395;
  unsigned int v396;
  unsigned int v397;
  uint64_t v398;
  uint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  char *v405;
  char *v406;
  int *v407;
  uint64_t v408;
  uint64_t (*v409)(char *, uint64_t, int *);
  int v410;
  int v411;
  uint64_t v412;
  char *v413;
  char *v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  char *v418;
  char *v419;
  unsigned int v420;
  unsigned int v421;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  uint64_t *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  char *v429;
  uint64_t *v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  char *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t (*v438)(uint64_t, uint64_t, uint64_t);
  int v439;
  int v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  uint64_t v448;
  _DWORD *v449;
  char *v450;
  uint64_t v451;
  void (**v452)(void);
  uint64_t v453;
  int *v454;
  size_t v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  int *v463;
  uint64_t v464;
  _DWORD *v465;
  char *v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  __int128 v470;
  __int128 v471;
  __int128 v472;
  __int128 v473;
  __int128 v474;
  uint64_t v475;
  uint64_t v476;
  _DWORD *v477;
  uint64_t v478;
  uint64_t v479;
  uint64_t v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  uint64_t v486;
  char *v487;
  char *v488;
  uint64_t v489;
  uint64_t v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  uint64_t v496;
  __int128 v497;
  __int128 v498;
  int *v499;
  uint64_t v500;
  char *v501;
  char *v502;
  uint64_t v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  uint64_t v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  int *v517;
  uint64_t v518;
  char *v519;
  char *v520;
  uint64_t v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  uint64_t v527;
  uint64_t v528;
  _DWORD *v529;
  uint64_t v530;
  uint64_t v531;
  uint64_t v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  uint64_t v539;
  char *v540;
  _DWORD *v541;
  uint64_t v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  __int128 v546;
  __int128 v547;
  int *v548;
  uint64_t v549;
  char *v550;
  char *v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  uint64_t v560;
  uint64_t v561;
  _DWORD *v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  uint64_t v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  uint64_t v578;
  __int128 v579;
  __int128 v580;
  __int128 v581;
  __int128 v582;
  __int128 v583;
  uint64_t v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  int *v590;
  uint64_t v591;
  _DWORD *v592;
  uint64_t v593;
  uint64_t v594;
  uint64_t v595;
  __int128 v596;
  __int128 v597;
  __int128 v598;
  __int128 v599;
  __int128 v600;
  uint64_t v601;
  size_t *v602;
  __int128 v603;
  uint64_t v604;
  char *v605;
  char *v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  __int128 v610;
  uint64_t v611;
  char *v612;
  char *v613;
  uint64_t v614;
  uint64_t v615;
  unsigned int (*v616)(char *, uint64_t, uint64_t);
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  char *v620;
  uint64_t v621;
  unsigned int (*v622)(char *, uint64_t, uint64_t);
  uint64_t v623;
  uint64_t v624;
  char *v625;
  uint64_t v626;
  __int128 v627;
  __int128 v628;
  __int128 v629;
  __int128 v630;
  __int128 v631;
  uint64_t v632;
  uint64_t v633;
  char *v634;
  uint64_t v635;
  void (**v636)(void);
  uint64_t v637;
  __int128 v638;
  __int128 v639;
  __int128 v640;
  __int128 v641;
  __int128 v642;
  uint64_t v643;
  _DWORD *v644;
  char *v645;
  uint64_t v646;
  uint64_t v647;
  __int128 v648;
  __int128 v649;
  __int128 v650;
  __int128 v651;
  __int128 v652;
  uint64_t v653;
  __int128 v654;
  __int128 v655;
  int *v656;
  uint64_t v657;
  void *v658;
  char *v659;
  uint64_t v660;
  __int128 v661;
  __int128 v662;
  __int128 v663;
  __int128 v664;
  __int128 v665;
  uint64_t v666;
  __int128 v667;
  __int128 v668;
  __int128 v669;
  __int128 v670;
  __int128 v671;
  __int128 v672;
  __int128 v673;
  int *v674;
  uint64_t v675;
  char *v676;
  char *v677;
  uint64_t v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  __int128 v682;
  __int128 v683;
  uint64_t v684;
  uint64_t v685;
  char *v686;
  uint64_t v687;
  void (**v688)(void);
  uint64_t v689;
  __int128 v690;
  __int128 v691;
  __int128 v692;
  __int128 v693;
  __int128 v694;
  __int128 v695;
  uint64_t v696;
  _DWORD *v697;
  char *v698;
  uint64_t v699;
  void (**v700)(void);
  uint64_t v701;
  __int128 v702;
  __int128 v703;
  int *v704;
  uint64_t v705;
  char *v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  __int128 v710;
  __int128 v711;
  __int128 v712;
  __int128 v713;
  __int128 v714;
  uint64_t v715;
  void (**v716)(void);
  __int128 v717;
  __int128 v718;
  __int128 v719;
  __int128 v720;
  __int128 v721;
  __int128 v722;
  uint64_t v723;
  __int128 v724;
  __int128 v725;
  __int128 v726;
  __int128 v727;
  __int128 v728;
  uint64_t v729;
  __int128 v730;
  __int128 v731;
  __int128 v732;
  __int128 v733;
  __int128 v734;
  uint64_t v735;
  __int128 v736;
  __int128 v737;
  __int128 v738;
  __int128 v739;
  __int128 v740;
  int *v741;
  uint64_t v742;
  char *v743;
  uint64_t v744;
  void (**v745)(void);
  uint64_t v746;
  __int128 v747;
  __int128 v748;
  __int128 v749;
  __int128 v750;
  __int128 v751;
  uint64_t v752;
  uint64_t v753;
  char *v754;
  __int128 v755;
  uint64_t v756;
  void *v757;
  char *v758;
  uint64_t v759;
  uint64_t v760;
  uint64_t v761;
  __int128 v762;
  uint64_t v763;
  void *v764;
  char *v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  char *v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  char *v775;
  char *v776;
  uint64_t v777;
  uint64_t v778;
  char *v779;
  uint64_t v780;
  uint64_t v781;
  char *v782;
  _OWORD *v783;
  __int128 v784;
  __int128 v785;
  __int128 v786;
  __int128 v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  char *v792;
  uint64_t v793;
  char *v794;
  char *v795;
  uint64_t v796;
  uint64_t v797;
  char *v798;
  uint64_t v799;
  uint64_t v800;
  char *v801;
  _OWORD *v802;
  __int128 v803;
  __int128 v804;
  __int128 v805;
  uint64_t v806;
  char *v807;
  _DWORD *v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  char *v813;
  char *v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  uint64_t v819;
  char *v820;
  char *v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  char *v825;
  char *v826;
  uint64_t v827;
  uint64_t v828;
  char *v829;
  char *v830;
  uint64_t v831;
  uint64_t v832;
  uint64_t v833;
  uint64_t v834;
  char *v835;
  char *v836;
  uint64_t v837;
  uint64_t v838;
  uint64_t v839;
  char *v840;
  char *v841;
  uint64_t v842;
  void (**v843)(void);
  __int128 v844;
  __int128 v845;
  __int128 v846;
  __int128 v847;
  __int128 v848;
  uint64_t v849;
  uint64_t v850;
  _DWORD *v851;
  char *v852;
  uint64_t v853;
  uint64_t v854;
  uint64_t v855;
  __int128 v856;
  __int128 v857;
  __int128 v858;
  __int128 v859;
  __int128 v860;
  uint64_t v861;
  _DWORD *v862;
  char *v863;
  uint64_t v864;
  uint64_t v865;
  __int128 v866;
  __int128 v867;
  __int128 v868;
  __int128 v869;
  __int128 v870;
  uint64_t v871;
  __int128 v872;
  __int128 v873;
  int *v874;
  uint64_t v875;
  void *v876;
  char *v877;
  uint64_t v878;
  __int128 v879;
  __int128 v880;
  __int128 v881;
  __int128 v882;
  __int128 v883;
  uint64_t v884;
  __int128 v885;
  __int128 v886;
  __int128 v887;
  __int128 v888;
  __int128 v889;
  __int128 v890;
  __int128 v891;
  int *v892;
  uint64_t v893;
  char *v894;
  char *v895;
  uint64_t v896;
  __int128 v897;
  __int128 v898;
  __int128 v899;
  __int128 v900;
  __int128 v901;
  uint64_t v902;
  uint64_t v903;
  _DWORD *v904;
  char *v905;
  uint64_t v906;
  uint64_t v907;
  uint64_t v908;
  __int128 v909;
  __int128 v910;
  __int128 v911;
  __int128 v912;
  __int128 v913;
  __int128 v914;
  uint64_t v915;
  uint64_t v916;
  _DWORD *v917;
  char *v918;
  uint64_t v919;
  uint64_t v920;
  uint64_t v921;
  __int128 v922;
  __int128 v923;
  int *v924;
  uint64_t v925;
  void *v926;
  char *v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  __int128 v931;
  __int128 v932;
  __int128 v933;
  __int128 v934;
  __int128 v935;
  uint64_t v936;
  uint64_t v937;
  _DWORD *v938;
  char *v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  __int128 v943;
  __int128 v944;
  __int128 v945;
  __int128 v946;
  __int128 v947;
  __int128 v948;
  uint64_t v949;
  __int128 v950;
  __int128 v951;
  __int128 v952;
  __int128 v953;
  __int128 v954;
  uint64_t v955;
  __int128 v956;
  __int128 v957;
  __int128 v958;
  __int128 v959;
  __int128 v960;
  uint64_t v961;
  __int128 v962;
  __int128 v963;
  __int128 v964;
  __int128 v965;
  __int128 v966;
  int *v967;
  uint64_t v968;
  _DWORD *v969;
  char *v970;
  uint64_t v971;
  uint64_t v972;
  uint64_t v973;
  __int128 v974;
  __int128 v975;
  __int128 v976;
  __int128 v977;
  __int128 v978;
  uint64_t v979;
  __int128 v980;
  uint64_t v981;
  void *v982;
  char *v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  __int128 v987;
  int *v988;
  uint64_t v989;
  void *v990;
  char *v991;
  uint64_t v992;
  unsigned int (*v993)(char *, uint64_t, uint64_t);
  uint64_t v994;
  uint64_t v995;
  uint64_t v996;
  void *v997;
  char *v998;
  unsigned int (*v999)(char *, uint64_t, uint64_t);
  uint64_t v1000;
  int *v1001;
  uint64_t v1002;
  char *v1003;
  char *v1004;
  unsigned int v1005;
  uint64_t v1006;
  uint64_t v1007;
  uint64_t v1008;
  char *v1009;
  _OWORD *v1010;
  __int128 v1011;
  uint64_t v1012;
  char *v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  _OWORD *v1018;
  char *v1019;
  __int128 v1020;
  __int128 v1021;
  __int128 v1022;
  __int128 v1023;
  uint64_t v1024;
  _DWORD *v1025;
  char *v1026;
  uint64_t v1027;
  uint64_t v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  char *v1033;
  uint64_t v1034;
  uint64_t v1035;
  char *v1036;
  char *v1037;
  uint64_t v1038;
  uint64_t v1039;
  _OWORD *v1040;
  char *v1041;
  __int128 v1042;
  __int128 v1043;
  __int128 v1044;
  uint64_t v1045;
  _DWORD *v1046;
  char *v1047;
  uint64_t v1048;
  void (**v1049)(void);
  uint64_t v1050;
  uint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  char *v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  uint64_t v1061;
  void *v1062;
  char *v1063;
  uint64_t v1064;
  uint64_t v1065;
  void *v1066;
  char *v1067;
  uint64_t v1068;
  uint64_t v1069;
  char *v1070;
  uint64_t v1071;
  uint64_t v1072;
  char *v1073;
  char *v1074;
  unsigned int v1075;
  uint64_t v1076;
  uint64_t v1077;
  uint64_t v1078;
  char *v1079;
  _OWORD *v1080;
  __int128 v1081;
  __int128 v1082;
  __int128 v1083;
  uint64_t v1084;
  uint64_t v1085;
  uint64_t v1086;
  char *v1087;
  uint64_t v1088;
  uint64_t v1089;
  uint64_t v1090;
  char *v1091;
  char *v1092;
  uint64_t v1093;
  char *v1094;
  _OWORD *v1095;
  __int128 v1096;
  __int128 v1097;
  __int128 v1098;
  uint64_t v1099;
  char *v1100;
  uint64_t v1101;
  __int128 v1102;
  __int128 v1103;
  __int128 v1104;
  __int128 v1105;
  __int128 v1106;
  uint64_t v1107;
  char *v1108;
  _OWORD *v1109;
  int *v1110;
  uint64_t v1111;
  uint64_t v1112;
  __int128 v1113;
  uint64_t v1114;
  char *v1115;
  char *v1116;
  uint64_t v1117;
  uint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  char *v1121;
  _OWORD *v1122;
  __int128 v1123;
  __int128 v1124;
  __int128 v1125;
  __int128 v1126;
  uint64_t v1127;
  char *v1128;
  uint64_t v1129;
  uint64_t v1130;
  void *v1131;
  char *v1132;
  uint64_t v1133;
  uint64_t v1134;
  _OWORD *v1135;
  char *v1136;
  __int128 v1137;
  uint64_t v1138;
  char *v1139;
  uint64_t v1140;
  uint64_t v1141;
  char *v1142;
  uint64_t v1143;
  uint64_t v1144;
  _OWORD *v1145;
  char *v1146;
  __int128 v1147;
  __int128 v1148;
  __int128 v1149;
  __int128 v1150;
  uint64_t v1151;
  uint64_t v1152;
  uint64_t v1153;
  uint64_t v1154;
  uint64_t v1155;
  char *v1156;
  uint64_t v1157;
  uint64_t v1158;
  char *v1159;
  uint64_t v1160;
  uint64_t v1161;
  _OWORD *v1162;
  char *v1163;
  __int128 v1164;
  __int128 v1165;
  __int128 v1166;
  uint64_t v1167;
  _DWORD *v1168;
  char *v1169;
  uint64_t v1170;
  uint64_t v1171;
  uint64_t v1172;
  uint64_t v1173;
  char *v1174;
  uint64_t v1175;
  uint64_t v1176;
  uint64_t v1177;
  uint64_t v1178;
  uint64_t v1179;
  char *v1180;
  uint64_t v1181;
  uint64_t v1182;
  uint64_t v1183;
  void *v1184;
  char *v1185;
  uint64_t v1186;
  uint64_t v1187;
  void *v1188;
  char *v1189;
  uint64_t v1190;
  char *v1191;
  uint64_t v1192;
  uint64_t v1193;
  void *v1194;
  char *v1195;
  uint64_t v1196;
  uint64_t v1197;
  _OWORD *v1198;
  char *v1199;
  __int128 v1200;
  __int128 v1201;
  __int128 v1202;
  uint64_t v1203;
  uint64_t v1204;
  uint64_t v1205;
  char *v1206;
  uint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  char *v1211;
  char *v1212;
  uint64_t v1213;
  _OWORD *v1214;
  char *v1215;
  __int128 v1216;
  __int128 v1217;
  __int128 v1218;
  uint64_t v1219;
  void *v1220;
  char *v1221;
  uint64_t v1222;
  uint64_t v1223;
  _OWORD *v1224;
  char *v1225;
  __int128 v1226;
  uint64_t v1227;
  char *v1228;
  uint64_t v1229;
  uint64_t v1230;
  _OWORD *v1231;
  char *v1232;
  __int128 v1233;
  __int128 v1234;
  __int128 v1235;
  uint64_t v1236;
  char *v1237;
  char *v1238;
  uint64_t v1239;
  _OWORD *v1240;
  char *v1241;
  __int128 v1242;
  __int128 v1243;
  __int128 v1244;
  uint64_t v1245;
  uint64_t v1246;
  char *v1247;
  uint64_t v1248;
  __int128 v1249;
  __int128 v1250;
  __int128 v1251;
  __int128 v1252;
  __int128 v1253;
  uint64_t v1254;
  __int128 v1255;
  __int128 v1256;
  __int128 v1257;
  __int128 v1258;
  uint64_t v1259;
  uint64_t v1260;
  uint64_t v1261;
  char *v1262;
  char *v1263;
  int *v1264;
  uint64_t v1265;
  uint64_t (*v1266)(char *, uint64_t, int *);
  int v1267;
  int v1268;
  char *v1269;
  __int128 v1270;
  uint64_t v1271;
  char *v1272;
  char *v1273;
  uint64_t v1274;
  uint64_t v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  uint64_t v1279;
  uint64_t v1280;
  char *v1281;
  char *v1282;
  uint64_t v1283;
  uint64_t v1284;
  uint64_t (*v1285)(char *, uint64_t, uint64_t);
  int v1286;
  int v1287;
  uint64_t v1288;
  char *v1289;
  char *v1290;
  __int128 v1291;
  __int128 v1292;
  __int128 v1293;
  __int128 v1294;
  uint64_t v1296;
  uint64_t v1297;
  char *v1298;
  uint64_t *v1299;
  uint64_t v1300;
  uint64_t v1301;
  uint64_t v1302;
  uint64_t v1303;
  char *v1304;
  uint64_t v1305;
  uint64_t v1306;
  uint64_t v1307;
  uint64_t v1308;
  uint64_t v1309;
  __int128 v1310;
  __int128 v1311;
  __int128 v1312;
  __int128 v1313;
  __int128 v1314;
  __int128 v1315;
  __int128 v1316;
  __int128 v1317;
  uint64_t v1318;
  void *v1319;
  char *v1320;
  uint64_t v1321;
  _DWORD *v1322;
  uint64_t v1323;
  uint64_t v1324;
  _DWORD *v1325;
  uint64_t v1326;
  uint64_t v1327;
  uint64_t v1328;
  char *v1329;
  char *v1330;
  char *v1331;
  size_t *v1332;
  size_t *v1333;
  size_t *v1334;
  size_t *v1335;
  size_t *v1336;
  size_t *v1337;
  size_t *v1338;
  size_t *v1339;
  char *v1340;
  char *v1341;
  char *v1342;
  char *v1343;
  char *v1344;
  char *v1345;
  unsigned int (*__dst)(char *, uint64_t, int *);
  int *__dsta;
  unsigned int (*__dstb)(char *, uint64_t, int *);
  char *__dstc;
  char *__dstd;
  int *__dste;
  char *__dstf;
  char *__dstg;
  char *__dsth;
  int *__dsti;
  void (**__dstj)(void);
  void (**__dstk)(void);
  char *__dstl;
  void (**__dstm)(void);
  void (**__dstn)(void);
  void (**__dsto)(void);
  void (**__dstp)(void);
  char *__dstq;
  char *__dstr;
  char *__dsts;
  char *__dstt;
  char *__dstu;
  char *__dstv;
  char *__dstw;
  _QWORD *v1370;
  _QWORD *v1371;
  char *v1372;
  char *v1373;
  char *v1374;
  char *v1375;
  char *v1376;
  char *v1377;
  void (**v1378)(char *, _QWORD, uint64_t, int *);
  int *v1379;
  _DWORD *v1380;
  _DWORD *v1381;
  int *v1382;
  void *v1383;
  _DWORD *v1384;
  char *v1385;
  int *v1386;
  char *v1387;
  char *v1388;
  char *v1389;
  char *v1390;
  char *v1391;
  char *v1392;
  char *v1393;
  char *v1394;
  char *v1395;
  uint64_t v1396;
  uint64_t v1397;
  uint64_t v1398;
  uint64_t v1399;
  uint64_t v1400;
  uint64_t v1401;
  uint64_t v1402;
  unsigned int (*v1403)(char *, uint64_t, uint64_t);
  uint64_t v1404;
  uint64_t v1405;
  char *v1406;
  _DWORD *v1407;
  unsigned int (*v1408)(char *, uint64_t, uint64_t);
  unsigned int (*v1409)(char *, uint64_t, uint64_t);
  int *v1410;
  char *v1411;
  unsigned int (*v1412)(char *, uint64_t, uint64_t);
  void *v1413;
  _QWORD *v1414;

  v6 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
  v7 = (_QWORD *)*((_QWORD *)v6 - 1);
  v8 = (uint64_t (*)(_DWORD *, uint64_t, int *))v7[6];
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (v10)
    {
      sub_1AD066230((uint64_t)a1, type metadata accessor for LinkPresentation.LinkMetadata);
      goto LABEL_7;
    }
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v18 = v6[5];
    v19 = &a1[v18];
    v20 = &a2[v18];
    v21 = sub_1AD63AF28();
    v1396 = *(_QWORD *)(v21 - 8);
    v22 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v1396 + 48);
    v23 = v22(v19, 1, v21);
    v1409 = (unsigned int (*)(char *, uint64_t, uint64_t))v22;
    v24 = v22(v20, 1, v21);
    if (v23)
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v19, v20, v21);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v19, 0, 1, v21);
        goto LABEL_25;
      }
    }
    else
    {
      if (!v24)
      {
        (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v19, v20, v21);
LABEL_25:
        v55 = v6[6];
        v56 = &a1[v55];
        v57 = &a2[v55];
        v58 = v22(&a1[v55], 1, v21);
        v59 = v22(v57, 1, v21);
        if (v58)
        {
          if (!v59)
          {
            (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v56, v57, v21);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v56, 0, 1, v21);
            goto LABEL_31;
          }
        }
        else
        {
          if (!v59)
          {
            (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v56, v57, v21);
LABEL_31:
            v61 = v6[7];
            v62 = &a1[v61];
            v63 = (uint64_t *)&a2[v61];
            v65 = *v63;
            v64 = v63[1];
            *(_QWORD *)v62 = v65;
            *((_QWORD *)v62 + 1) = v64;
            swift_bridgeObjectRelease();
            v66 = v6[8];
            v67 = &a1[v66];
            v68 = (uint64_t *)&a2[v66];
            v70 = *v68;
            v69 = v68[1];
            *(_QWORD *)v67 = v70;
            *((_QWORD *)v67 + 1) = v69;
            swift_bridgeObjectRelease();
            v71 = v6[9];
            v72 = &a1[v71];
            v73 = (uint64_t *)&a2[v71];
            v75 = *v73;
            v74 = v73[1];
            *(_QWORD *)v72 = v75;
            *((_QWORD *)v72 + 1) = v74;
            swift_bridgeObjectRelease();
            v76 = v6[10];
            v77 = &a1[v76];
            v78 = (uint64_t *)&a2[v76];
            v80 = *v78;
            v79 = v78[1];
            *(_QWORD *)v77 = v80;
            *((_QWORD *)v77 + 1) = v79;
            swift_bridgeObjectRelease();
            v81 = v6[11];
            v82 = &a1[v81];
            v83 = (uint64_t *)&a2[v81];
            v85 = *v83;
            v84 = v83[1];
            *(_QWORD *)v82 = v85;
            *((_QWORD *)v82 + 1) = v84;
            swift_bridgeObjectRelease();
            v86 = v6[12];
            v87 = &a1[v86];
            v88 = &a2[v86];
            v89 = v22(&a1[v86], 1, v21);
            v90 = v22(v88, 1, v21);
            if (v89)
            {
              if (!v90)
              {
                (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v87, v88, v21);
                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v87, 0, 1, v21);
                goto LABEL_37;
              }
            }
            else
            {
              if (!v90)
              {
                (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v87, v88, v21);
LABEL_37:
                v92 = v6[13];
                v93 = &a1[v92];
                v94 = (uint64_t *)&a2[v92];
                v96 = *v94;
                v95 = v94[1];
                *(_QWORD *)v93 = v96;
                *((_QWORD *)v93 + 1) = v95;
                swift_bridgeObjectRelease();
                v97 = v6[14];
                v98 = &a1[v97];
                v99 = (uint64_t *)&a2[v97];
                v101 = *v99;
                v100 = v99[1];
                *(_QWORD *)v98 = v101;
                *((_QWORD *)v98 + 1) = v100;
                swift_bridgeObjectRelease();
                v102 = v6[15];
                v103 = &a1[v102];
                v104 = (uint64_t *)&a2[v102];
                v106 = *v104;
                v105 = v104[1];
                *(_QWORD *)v103 = v106;
                *((_QWORD *)v103 + 1) = v105;
                swift_bridgeObjectRelease();
                v107 = v6[16];
                v108 = &a1[v107];
                v109 = (uint64_t *)&a2[v107];
                v111 = *v109;
                v110 = v109[1];
                *(_QWORD *)v108 = v111;
                *((_QWORD *)v108 + 1) = v110;
                swift_bridgeObjectRelease();
                a1[v6[17]] = a2[v6[17]];
                v112 = v6[18];
                v113 = &a1[v112];
                v114 = &a2[v112];
                v115 = *((_OWORD *)v114 + 1);
                *(_OWORD *)v113 = *(_OWORD *)v114;
                *((_OWORD *)v113 + 1) = v115;
                v113[32] = v114[32];
                v116 = v6[19];
                v117 = &a1[v116];
                v118 = (uint64_t *)&a2[v116];
                v120 = *v118;
                v119 = v118[1];
                *(_QWORD *)v117 = v120;
                *((_QWORD *)v117 + 1) = v119;
                swift_bridgeObjectRelease();
                v121 = v6[20];
                v122 = &a1[v121];
                v123 = (uint64_t *)&a2[v121];
                v125 = *v123;
                v124 = v123[1];
                *(_QWORD *)v122 = v125;
                *((_QWORD *)v122 + 1) = v124;
                swift_bridgeObjectRelease();
                v126 = v6[21];
                v127 = (uint64_t)&a1[v126];
                v128 = &a2[v126];
                v1399 = v21;
                v1405 = a3;
                if (*(_QWORD *)&a1[v126 + 16] != 1)
                {
                  v129 = *((_QWORD *)v128 + 2);
                  if (v129 != 1)
                  {
                    *(_OWORD *)v127 = *(_OWORD *)v128;
                    *(_QWORD *)(v127 + 16) = v129;
                    swift_bridgeObjectRelease();
                    *(_OWORD *)(v127 + 24) = *(_OWORD *)(v128 + 24);
                    *(_QWORD *)(v127 + 40) = *((_QWORD *)v128 + 5);
                    swift_bridgeObjectRelease();
                    v133 = *((_OWORD *)v128 + 4);
                    *(_OWORD *)(v127 + 48) = *((_OWORD *)v128 + 3);
                    *(_OWORD *)(v127 + 64) = v133;
                    *(_BYTE *)(v127 + 80) = v128[80];
                    *(_OWORD *)(v127 + 88) = *(_OWORD *)(v128 + 88);
                    *(_OWORD *)(v127 + 104) = *(_OWORD *)(v128 + 104);
                    *(_BYTE *)(v127 + 120) = v128[120];
LABEL_42:
                    v134 = v6[22];
                    v135 = &a1[v134];
                    v136 = &a2[v134];
                    v137 = type metadata accessor for LinkPresentation.IconMetadata(0);
                    v138 = *(_QWORD *)(v137 - 8);
                    v139 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v138 + 48);
                    v140 = v139(v135, 1, v137);
                    v141 = v139(v136, 1, v137);
                    v1406 = a2;
                    if (v140)
                    {
                      if (!v141)
                      {
                        *(_DWORD *)v135 = *(_DWORD *)v136;
                        v142 = *(int *)(v137 + 20);
                        v143 = &v135[v142];
                        v144 = &v136[v142];
                        if (v1409(&v136[v142], 1, v1399))
                        {
                          v145 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                          memcpy(v143, v144, *(_QWORD *)(*(_QWORD *)(v145 - 8) + 64));
                        }
                        else
                        {
                          (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v143, v144, v1399);
                          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v143, 0, 1, v1399);
                        }
                        *(_OWORD *)&v135[*(int *)(v137 + 24)] = *(_OWORD *)&v136[*(int *)(v137 + 24)];
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v138 + 56))(v135, 0, 1, v137);
LABEL_107:
                        v250 = v6[23];
                        v251 = (uint64_t)&a1[v250];
                        v252 = &a2[v250];
                        if (*(_QWORD *)&a1[v250 + 16] != 1)
                        {
                          v253 = *((_QWORD *)v252 + 2);
                          if (v253 != 1)
                          {
                            *(_OWORD *)v251 = *(_OWORD *)v252;
                            *(_QWORD *)(v251 + 16) = v253;
                            swift_bridgeObjectRelease();
                            v255 = *((_QWORD *)v252 + 4);
                            *(_QWORD *)(v251 + 24) = *((_QWORD *)v252 + 3);
                            *(_QWORD *)(v251 + 32) = v255;
                            swift_bridgeObjectRelease();
LABEL_112:
                            v256 = v6[24];
                            v257 = &a1[v256];
                            v258 = &a2[v256];
                            v259 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
                            v260 = *((_QWORD *)v259 - 1);
                            v261 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v260 + 48);
                            v262 = v261(v257, 1, v259);
                            v263 = v261(v258, 1, v259);
                            if (v262)
                            {
                              if (!v263)
                              {
                                *(_DWORD *)v257 = *(_DWORD *)v258;
                                v264 = v259[5];
                                v265 = &v257[v264];
                                v266 = &v258[v264];
                                if (v1409(&v258[v264], 1, v1399))
                                {
                                  v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                  memcpy(v265, v266, *(_QWORD *)(*(_QWORD *)(v267 - 8) + 64));
                                }
                                else
                                {
                                  (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v265, v266, v1399);
                                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v265, 0, 1, v1399);
                                }
                                *(_OWORD *)&v257[v259[6]] = *(_OWORD *)&v258[v259[6]];
                                *(_OWORD *)&v257[v259[7]] = *(_OWORD *)&v258[v259[7]];
                                (*(void (**)(char *, _QWORD, uint64_t, int *))(v260 + 56))(v257, 0, 1, v259);
LABEL_128:
                                v285 = v6[25];
                                v286 = (uint64_t)&a1[v285];
                                v287 = &a2[v285];
                                if (*(_QWORD *)&a1[v285 + 16] != 1)
                                {
                                  v288 = *((_QWORD *)v287 + 2);
                                  if (v288 != 1)
                                  {
                                    *(_OWORD *)v286 = *(_OWORD *)v287;
                                    *(_QWORD *)(v286 + 16) = v288;
                                    swift_bridgeObjectRelease();
                                    *(_OWORD *)(v286 + 24) = *(_OWORD *)(v287 + 24);
                                    *(_QWORD *)(v286 + 40) = *((_QWORD *)v287 + 5);
                                    swift_bridgeObjectRelease();
                                    v292 = *((_OWORD *)v287 + 4);
                                    *(_OWORD *)(v286 + 48) = *((_OWORD *)v287 + 3);
                                    *(_OWORD *)(v286 + 64) = v292;
                                    *(_BYTE *)(v286 + 80) = v287[80];
                                    *(_OWORD *)(v286 + 88) = *(_OWORD *)(v287 + 88);
                                    *(_OWORD *)(v286 + 104) = *(_OWORD *)(v287 + 104);
                                    *(_BYTE *)(v286 + 120) = v287[120];
LABEL_133:
                                    *(_QWORD *)&a1[v6[26]] = *(_QWORD *)&a2[v6[26]];
                                    swift_bridgeObjectRelease();
                                    v293 = v6[27];
                                    v294 = &a1[v293];
                                    v295 = &a2[v293];
                                    v296 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
                                    v297 = *((_QWORD *)v296 - 1);
                                    v298 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v297 + 48);
                                    v299 = v298(v294, 1, v296);
                                    v300 = v298(v295, 1, v296);
                                    if (v299)
                                    {
                                      if (!v300)
                                      {
                                        *(_DWORD *)v294 = *(_DWORD *)v295;
                                        v301 = v296[5];
                                        v302 = &v294[v301];
                                        v303 = &v295[v301];
                                        if (v1409(&v295[v301], 1, v1399))
                                        {
                                          v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                          memcpy(v302, v303, *(_QWORD *)(*(_QWORD *)(v304 - 8) + 64));
                                        }
                                        else
                                        {
                                          (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v302, v303, v1399);
                                          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v302, 0, 1, v1399);
                                        }
                                        *(_OWORD *)&v294[v296[6]] = *(_OWORD *)&v295[v296[6]];
                                        *(_OWORD *)&v294[v296[7]] = *(_OWORD *)&v295[v296[7]];
                                        *(_OWORD *)&v294[v296[8]] = *(_OWORD *)&v295[v296[8]];
                                        (*(void (**)(char *, _QWORD, uint64_t, int *))(v297 + 56))(v294, 0, 1, v296);
LABEL_149:
                                        *(_QWORD *)&a1[v6[28]] = *(_QWORD *)&a2[v6[28]];
                                        swift_bridgeObjectRelease();
                                        *(_QWORD *)&a1[v6[29]] = *(_QWORD *)&a2[v6[29]];
                                        swift_bridgeObjectRelease();
                                        v322 = v6[30];
                                        v323 = &a1[v322];
                                        v324 = &a2[v322];
                                        v325 = (int *)type metadata accessor for LinkPresentation.Video(0);
                                        v1371 = (_QWORD *)*((_QWORD *)v325 - 1);
                                        v326 = (uint64_t (*)(char *, uint64_t, int *))v1371[6];
                                        v327 = v326(v323, 1, v325);
                                        v328 = v326(v324, 1, v325);
                                        __dstb = (unsigned int (*)(char *, uint64_t, int *))v326;
                                        if (v327)
                                        {
                                          if (!v328)
                                          {
                                            if (v1409(v324, 1, v1399))
                                            {
                                              v329 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                              memcpy(v323, v324, *(_QWORD *)(*(_QWORD *)(v329 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v323, v324, v1399);
                                              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v323, 0, 1, v1399);
                                            }
                                            v333 = v325[5];
                                            v334 = &v323[v333];
                                            v335 = &v324[v333];
                                            if (v1409(&v324[v333], 1, v1399))
                                            {
                                              v336 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                              memcpy(v334, v335, *(_QWORD *)(*(_QWORD *)(v336 - 8) + 64));
                                            }
                                            else
                                            {
                                              (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v334, v335, v1399);
                                              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v334, 0, 1, v1399);
                                            }
                                            *(_OWORD *)&v323[v325[6]] = *(_OWORD *)&v324[v325[6]];
                                            v323[v325[7]] = v324[v325[7]];
                                            *(_QWORD *)&v323[v325[8]] = *(_QWORD *)&v324[v325[8]];
                                            v337 = v325[9];
                                            v338 = &v323[v337];
                                            v339 = &v324[v337];
                                            *(_OWORD *)v338 = *(_OWORD *)v339;
                                            *((_QWORD *)v338 + 2) = *((_QWORD *)v339 + 2);
                                            ((void (*)(char *, _QWORD, uint64_t, int *))v1371[7])(v323, 0, 1, v325);
LABEL_174:
                                            v357 = v6[31];
                                            v358 = &a1[v357];
                                            v359 = &a2[v357];
                                            v360 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
                                            v361 = *((_QWORD *)v360 - 1);
                                            v362 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v361 + 48);
                                            v363 = v362(v358, 1, v360);
                                            v364 = v362(v359, 1, v360);
                                            if (v363)
                                            {
                                              if (!v364)
                                              {
                                                *(_DWORD *)v358 = *(_DWORD *)v359;
                                                v365 = v360[5];
                                                v366 = &v358[v365];
                                                v367 = &v359[v365];
                                                if (v1409(&v359[v365], 1, v1399))
                                                {
                                                  v368 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                  memcpy(v366, v367, *(_QWORD *)(*(_QWORD *)(v368 - 8) + 64));
                                                }
                                                else
                                                {
                                                  (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v366, v367, v1399);
                                                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v366, 0, 1, v1399);
                                                }
                                                *(_OWORD *)&v358[v360[6]] = *(_OWORD *)&v359[v360[6]];
                                                *(_OWORD *)&v358[v360[7]] = *(_OWORD *)&v359[v360[7]];
                                                *(_OWORD *)&v358[v360[8]] = *(_OWORD *)&v359[v360[8]];
                                                (*(void (**)(char *, _QWORD, uint64_t, int *))(v361 + 56))(v358, 0, 1, v360);
                                                a2 = v1406;
LABEL_190:
                                                v386 = v6[32];
                                                v387 = &a1[v386];
                                                v388 = &a2[v386];
                                                v389 = type metadata accessor for LinkPresentation.Audio(0);
                                                v390 = *(_QWORD *)(v389 - 8);
                                                v391 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v390 + 48);
                                                v392 = v391(v387, 1, v389);
                                                v393 = v391(v388, 1, v389);
                                                if (v392)
                                                {
                                                  if (!v393)
                                                  {
                                                    if (v1409(v388, 1, v1399))
                                                    {
                                                      v394 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                      memcpy(v387, v388, *(_QWORD *)(*(_QWORD *)(v394 - 8) + 64));
                                                    }
                                                    else
                                                    {
                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v387, v388, v1399);
                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v387, 0, 1, v1399);
                                                    }
                                                    *(_OWORD *)&v387[*(int *)(v389 + 20)] = *(_OWORD *)&v388[*(int *)(v389 + 20)];
                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v390 + 56))(v387, 0, 1, v389);
LABEL_206:
                                                    v404 = v6[33];
                                                    v405 = &a1[v404];
                                                    v406 = &a2[v404];
                                                    v407 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
                                                    v408 = *((_QWORD *)v407 - 1);
                                                    v409 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v408 + 48);
                                                    v410 = v409(v405, 1, v407);
                                                    v411 = v409(v406, 1, v407);
                                                    if (v410)
                                                    {
                                                      if (!v411)
                                                      {
                                                        *(_DWORD *)v405 = *(_DWORD *)v406;
                                                        v412 = v407[5];
                                                        v413 = &v405[v412];
                                                        v414 = &v406[v412];
                                                        if (v1409(&v406[v412], 1, v1399))
                                                        {
                                                          v415 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                          memcpy(v413, v414, *(_QWORD *)(*(_QWORD *)(v415 - 8) + 64));
                                                        }
                                                        else
                                                        {
                                                          (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v413, v414, v1399);
                                                          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v413, 0, 1, v1399);
                                                        }
                                                        *(_OWORD *)&v405[v407[6]] = *(_OWORD *)&v406[v407[6]];
                                                        *(_OWORD *)&v405[v407[7]] = *(_OWORD *)&v406[v407[7]];
                                                        (*(void (**)(char *, _QWORD, uint64_t, int *))(v408 + 56))(v405, 0, 1, v407);
                                                        goto LABEL_222;
                                                      }
LABEL_212:
                                                      v416 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
                                                      memcpy(v405, v406, *(_QWORD *)(*(_QWORD *)(v416 - 8) + 64));
                                                      goto LABEL_223;
                                                    }
                                                    if (v411)
                                                    {
                                                      sub_1AD066230((uint64_t)v405, type metadata accessor for LinkPresentation.AudioMetadata);
                                                      goto LABEL_212;
                                                    }
                                                    *(_DWORD *)v405 = *(_DWORD *)v406;
                                                    v417 = v407[5];
                                                    v418 = &v405[v417];
                                                    v419 = &v406[v417];
                                                    v420 = v1409(&v405[v417], 1, v1399);
                                                    v421 = v1409(v419, 1, v1399);
                                                    if (v420)
                                                    {
                                                      if (!v421)
                                                      {
                                                        (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v418, v419, v1399);
                                                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v418, 0, 1, v1399);
LABEL_221:
                                                        v423 = v407[6];
                                                        v424 = &v405[v423];
                                                        v425 = (uint64_t *)&v406[v423];
                                                        v427 = *v425;
                                                        v426 = v425[1];
                                                        *(_QWORD *)v424 = v427;
                                                        *((_QWORD *)v424 + 1) = v426;
                                                        swift_bridgeObjectRelease();
                                                        v428 = v407[7];
                                                        v429 = &v405[v428];
                                                        v430 = (uint64_t *)&v406[v428];
                                                        v432 = *v430;
                                                        v431 = v430[1];
                                                        *(_QWORD *)v429 = v432;
                                                        *((_QWORD *)v429 + 1) = v431;
                                                        swift_bridgeObjectRelease();
LABEL_222:
                                                        a2 = v1406;
LABEL_223:
                                                        *(_QWORD *)&a1[v6[34]] = *(_QWORD *)&a2[v6[34]];
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)&a1[v6[35]] = *(_QWORD *)&a2[v6[35]];
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)&a1[v6[36]] = *(_QWORD *)&a2[v6[36]];
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)&a1[v6[37]] = *(_QWORD *)&a2[v6[37]];
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)&a1[v6[38]] = *(_QWORD *)&a2[v6[38]];
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)&a1[v6[39]] = *(_QWORD *)&a2[v6[39]];
                                                        swift_bridgeObjectRelease();
                                                        *(_QWORD *)&a1[v6[40]] = *(_QWORD *)&a2[v6[40]];
                                                        swift_bridgeObjectRelease();
                                                        v433 = v6[41];
                                                        v434 = (uint64_t)&a1[v433];
                                                        v435 = &a2[v433];
                                                        v436 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
                                                        v437 = *(_QWORD *)(v436 - 8);
                                                        v438 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v437 + 48);
                                                        v439 = v438(v434, 1, v436);
                                                        v440 = v438((uint64_t)v435, 1, v436);
                                                        if (v439)
                                                        {
                                                          if (!v440)
                                                          {
                                                            switch(swift_getEnumCaseMultiPayload())
                                                            {
                                                              case 0u:
                                                                v441 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v441;
                                                                v442 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v442;
                                                                v443 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v443;
                                                                v444 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v444;
                                                                v445 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v445;
                                                                *(_OWORD *)(v434 + 201) = *(_OWORD *)(v435 + 201);
                                                                v446 = *((_OWORD *)v435 + 12);
                                                                v447 = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 176) = *((_OWORD *)v435 + 11);
                                                                *(_OWORD *)(v434 + 192) = v446;
                                                                *(_OWORD *)(v434 + 160) = v447;
                                                                v1379 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
                                                                v448 = v1379[11];
                                                                v449 = (_DWORD *)(v434 + v448);
                                                                v450 = &v435[v448];
                                                                v451 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v452 = *(void (***)(void))(v451 - 8);
                                                                if (((unsigned int (*)(char *, uint64_t, uint64_t))v452[6])(v450, 1, v451))
                                                                {
                                                                  v453 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                  memcpy(v449, v450, *(_QWORD *)(*(_QWORD *)(v453 - 8) + 64));
                                                                  v454 = v1379;
                                                                }
                                                                else
                                                                {
                                                                  __dstj = v452;
                                                                  v1372 = (char *)v449;
                                                                  *v449 = *(_DWORD *)v450;
                                                                  v839 = *(int *)(v451 + 20);
                                                                  v840 = (char *)v449 + v839;
                                                                  v841 = &v450[v839];
                                                                  v1340 = v450;
                                                                  if (((unsigned int (*)(void))v1409)())
                                                                  {
                                                                    v842 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v840, v841, *(_QWORD *)(*(_QWORD *)(v842 - 8) + 64));
                                                                    v843 = __dstj;
                                                                    v454 = v1379;
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v840, v841, v1399);
                                                                    v454 = v1379;
                                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v840, 0, 1, v1399);
                                                                    v843 = __dstj;
                                                                  }
                                                                  *(_QWORD *)&v1372[*(int *)(v451 + 24)] = *(_QWORD *)&v1340[*(int *)(v451 + 24)];
                                                                  v843[7]();
                                                                }
                                                                v1130 = v454[12];
                                                                v1131 = (void *)(v434 + v1130);
                                                                v1132 = &v435[v1130];
                                                                a2 = v1406;
                                                                if (v1409(&v435[v1130], 1, v1399))
                                                                {
                                                                  v1133 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                  memcpy(v1131, v1132, *(_QWORD *)(*(_QWORD *)(v1133 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, char *, uint64_t))(v1396 + 32))(v1131, v1132, v1399);
                                                                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1131, 0, 1, v1399);
                                                                }
                                                                *(_QWORD *)(v434 + v1379[13]) = *(_QWORD *)&v435[v1379[13]];
                                                                v1134 = v1379[14];
                                                                v1135 = (_OWORD *)(v434 + v1134);
                                                                v1136 = &v435[v1134];
                                                                v1137 = *((_OWORD *)v1136 + 1);
                                                                *v1135 = *(_OWORD *)v1136;
                                                                v1135[1] = v1137;
                                                                v1135[2] = *((_OWORD *)v1136 + 2);
                                                                *(_OWORD *)((char *)v1135 + 41) = *(_OWORD *)(v1136 + 41);
                                                                swift_storeEnumTagMultiPayload();
                                                                break;
                                                              case 1u:
                                                                v627 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v627;
                                                                v628 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v628;
                                                                v629 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v629;
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                v630 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v630;
                                                                v631 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v631;
                                                                v632 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
                                                                v633 = *(int *)(v632 + 36);
                                                                v1380 = (_DWORD *)(v434 + v633);
                                                                v634 = &v435[v633];
                                                                v635 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v636 = *(void (***)(void))(v635 - 8);
                                                                if (((unsigned int (*)(char *, uint64_t, uint64_t))v636[6])(v634, 1, v635))
                                                                {
                                                                  goto LABEL_284;
                                                                }
                                                                __dstk = v636;
                                                                *v1380 = *(_DWORD *)v634;
                                                                v1012 = *(int *)(v635 + 20);
                                                                v1341 = (char *)v1380 + v1012;
                                                                v1013 = &v634[v1012];
                                                                if (!((unsigned int (*)(void))v1409)())
                                                                  goto LABEL_554;
                                                                goto LABEL_415;
                                                              case 2u:
                                                                v638 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v638;
                                                                v639 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v639;
                                                                v640 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v640;
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                v641 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v641;
                                                                v642 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v642;
                                                                v643 = *(int *)(type metadata accessor for LinkPresentation.MusicVideoMetadata(0)
                                                                              + 36);
                                                                v644 = (_DWORD *)(v434 + v643);
                                                                v645 = &v435[v643];
                                                                v646 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v647 = *(_QWORD *)(v646 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v647 + 48))(v645, 1, v646))
                                                                {
                                                                  goto LABEL_312;
                                                                }
                                                                *v644 = *(_DWORD *)v645;
                                                                v1015 = *(int *)(v646 + 20);
                                                                v1373 = &v645[v1015];
                                                                v1385 = (char *)v644 + v1015;
                                                                if (((unsigned int (*)(void))v1409)())
                                                                  goto LABEL_439;
                                                                goto LABEL_579;
                                                              case 3u:
                                                                v648 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v648;
                                                                v649 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v649;
                                                                v650 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v650;
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                v651 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v651;
                                                                v652 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v652;
                                                                v653 = *(int *)(type metadata accessor for LinkPresentation.ArtistMetadata(0)
                                                                              + 36);
                                                                v644 = (_DWORD *)(v434 + v653);
                                                                v645 = &v435[v653];
                                                                v646 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v647 = *(_QWORD *)(v646 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v647 + 48))(v645, 1, v646))
                                                                {
                                                                  goto LABEL_312;
                                                                }
                                                                *v644 = *(_DWORD *)v645;
                                                                v1016 = *(int *)(v646 + 20);
                                                                v1373 = &v645[v1016];
                                                                v1385 = (char *)v644 + v1016;
                                                                if (((unsigned int (*)(void))v1409)())
                                                                  goto LABEL_439;
                                                                goto LABEL_579;
                                                              case 4u:
                                                                v654 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v654;
                                                                v655 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v655;
                                                                v656 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
                                                                v657 = v656[8];
                                                                v658 = (void *)(v434 + v657);
                                                                v659 = &v435[v657];
                                                                if (v1409(&v435[v657], 1, v1399))
                                                                {
                                                                  v660 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                  memcpy(v658, v659, *(_QWORD *)(*(_QWORD *)(v660 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, char *, uint64_t))(v1396 + 32))(v658, v659, v1399);
                                                                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v658, 0, 1, v1399);
                                                                }
                                                                *(_OWORD *)(v434 + v656[9]) = *(_OWORD *)&v435[v656[9]];
                                                                v1017 = v656[10];
                                                                v1018 = (_OWORD *)(v434 + v1017);
                                                                v1019 = &v435[v1017];
                                                                v1020 = *((_OWORD *)v1019 + 3);
                                                                v1018[2] = *((_OWORD *)v1019 + 2);
                                                                v1018[3] = v1020;
                                                                v1021 = *((_OWORD *)v1019 + 1);
                                                                *v1018 = *(_OWORD *)v1019;
                                                                v1018[1] = v1021;
                                                                *(_OWORD *)((char *)v1018 + 105) = *(_OWORD *)(v1019 + 105);
                                                                v1022 = *((_OWORD *)v1019 + 6);
                                                                v1023 = *((_OWORD *)v1019 + 4);
                                                                v1018[5] = *((_OWORD *)v1019 + 5);
                                                                v1018[6] = v1022;
                                                                v1018[4] = v1023;
                                                                v1024 = v656[11];
                                                                v1025 = (_DWORD *)(v434 + v1024);
                                                                v1026 = &v435[v1024];
                                                                v1027 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v1028 = *(_QWORD *)(v1027 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1028 + 48))(v1026, 1, v1027))
                                                                {
                                                                  v1029 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                  memcpy(v1025, v1026, *(_QWORD *)(*(_QWORD *)(v1029 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  *v1025 = *(_DWORD *)v1026;
                                                                  v1084 = *(int *)(v1027 + 20);
                                                                  v1375 = &v1026[v1084];
                                                                  v1387 = (char *)v1025 + v1084;
                                                                  if (((unsigned int (*)(void))v1409)())
                                                                  {
                                                                    v1085 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v1387, v1375, *(_QWORD *)(*(_QWORD *)(v1085 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1387, v1375, v1399);
                                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1387, 0, 1, v1399);
                                                                  }
                                                                  *(_QWORD *)((char *)v1025 + *(int *)(v1027 + 24)) = *(_QWORD *)&v1026[*(int *)(v1027 + 24)];
                                                                  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v1028 + 56))(v1025, 0, 1, v1027);
                                                                }
                                                                goto LABEL_598;
                                                              case 5u:
                                                                v661 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v661;
                                                                v662 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v662;
                                                                v663 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v663;
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                v664 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v664;
                                                                v665 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v665;
                                                                v666 = *(int *)(type metadata accessor for LinkPresentation.RadioMetadata(0)
                                                                              + 36);
                                                                v644 = (_DWORD *)(v434 + v666);
                                                                v645 = &v435[v666];
                                                                v646 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v647 = *(_QWORD *)(v646 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v647 + 48))(v645, 1, v646))
                                                                {
                                                                  goto LABEL_312;
                                                                }
                                                                *v644 = *(_DWORD *)v645;
                                                                v1030 = *(int *)(v646 + 20);
                                                                v1373 = &v645[v1030];
                                                                v1385 = (char *)v644 + v1030;
                                                                if (((unsigned int (*)(void))v1409)())
                                                                  goto LABEL_439;
                                                                goto LABEL_579;
                                                              case 6u:
                                                                v667 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v667;
                                                                v668 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v668;
                                                                v669 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v669;
                                                                v670 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v670;
                                                                v671 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v671;
                                                                *(_OWORD *)(v434 + 201) = *(_OWORD *)(v435 + 201);
                                                                v672 = *((_OWORD *)v435 + 12);
                                                                v673 = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 176) = *((_OWORD *)v435 + 11);
                                                                *(_OWORD *)(v434 + 192) = v672;
                                                                *(_OWORD *)(v434 + 160) = v673;
                                                                *(_QWORD *)(v434 + 224) = *((_QWORD *)v435 + 28);
                                                                v674 = (int *)type metadata accessor for LinkPresentation.SoftwareMetadata(0);
                                                                v675 = v674[12];
                                                                v676 = (char *)(v434 + v675);
                                                                v677 = &v435[v675];
                                                                if (__dstb(&v435[v675], 1, v325))
                                                                {
                                                                  v678 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
                                                                  memcpy(v676, v677, *(_QWORD *)(*(_QWORD *)(v678 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  __dstl = v676;
                                                                  if (v1409(v677, 1, v1399))
                                                                  {
                                                                    v1031 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v676, v677, *(_QWORD *)(*(_QWORD *)(v1031 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v676, v677, v1399);
                                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v676, 0, 1, v1399);
                                                                  }
                                                                  v1190 = v325[5];
                                                                  v1345 = &v676[v1190];
                                                                  v1191 = &v677[v1190];
                                                                  if (v1409(&v677[v1190], 1, v1399))
                                                                  {
                                                                    v1192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v1345, v1191, *(_QWORD *)(*(_QWORD *)(v1192 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1345, v1191, v1399);
                                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1345, 0, 1, v1399);
                                                                  }
                                                                  *(_OWORD *)&__dstl[v325[6]] = *(_OWORD *)&v677[v325[6]];
                                                                  __dstl[v325[7]] = v677[v325[7]];
                                                                  *(_QWORD *)&__dstl[v325[8]] = *(_QWORD *)&v677[v325[8]];
                                                                  v1210 = v325[9];
                                                                  v1211 = &__dstl[v1210];
                                                                  v1212 = &v677[v1210];
                                                                  *(_OWORD *)v1211 = *(_OWORD *)v1212;
                                                                  *((_QWORD *)v1211 + 2) = *((_QWORD *)v1212 + 2);
                                                                  ((void (*)(void))v1371[7])();
                                                                }
                                                                *(_BYTE *)(v434 + v674[13]) = v435[v674[13]];
                                                                v1213 = v674[14];
                                                                v1214 = (_OWORD *)(v434 + v1213);
                                                                v1215 = &v435[v1213];
                                                                v1216 = *((_OWORD *)v1215 + 5);
                                                                v1214[4] = *((_OWORD *)v1215 + 4);
                                                                v1214[5] = v1216;
                                                                v1214[6] = *((_OWORD *)v1215 + 6);
                                                                *(_OWORD *)((char *)v1214 + 105) = *(_OWORD *)(v1215 + 105);
                                                                v1217 = *((_OWORD *)v1215 + 1);
                                                                *v1214 = *(_OWORD *)v1215;
                                                                v1214[1] = v1217;
                                                                v1218 = *((_OWORD *)v1215 + 3);
                                                                v1214[2] = *((_OWORD *)v1215 + 2);
                                                                v1214[3] = v1218;
                                                                goto LABEL_598;
                                                              case 7u:
                                                                v679 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v679;
                                                                v680 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v680;
                                                                v681 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v681;
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                v682 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v682;
                                                                v683 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v683;
                                                                v684 = type metadata accessor for LinkPresentation.BookMetadata(0);
                                                                v685 = *(int *)(v684 + 36);
                                                                v1381 = (_DWORD *)(v434 + v685);
                                                                v686 = &v435[v685];
                                                                v687 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v688 = *(void (***)(void))(v687 - 8);
                                                                if (((unsigned int (*)(char *, uint64_t, uint64_t))v688[6])(v686, 1, v687))
                                                                {
                                                                  v689 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                  memcpy(v1381, v686, *(_QWORD *)(*(_QWORD *)(v689 - 8) + 64));
                                                                  a2 = v1406;
                                                                }
                                                                else
                                                                {
                                                                  __dstm = v688;
                                                                  *v1381 = *(_DWORD *)v686;
                                                                  v1032 = *(int *)(v687 + 20);
                                                                  v1342 = (char *)v1381 + v1032;
                                                                  v1033 = &v686[v1032];
                                                                  if (((unsigned int (*)(void))v1409)())
                                                                  {
                                                                    v1034 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v1342, v1033, *(_QWORD *)(*(_QWORD *)(v1034 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1342, v1033, v1399);
                                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1342, 0, 1, v1399);
                                                                  }
                                                                  *(_QWORD *)((char *)v1381 + *(int *)(v687 + 24)) = *(_QWORD *)&v686[*(int *)(v687 + 24)];
                                                                  __dstm[7]();
                                                                  a2 = v1406;
                                                                }
                                                                *(_BYTE *)(v434 + *(int *)(v684 + 40)) = v435[*(int *)(v684 + 40)];
                                                                swift_storeEnumTagMultiPayload();
                                                                break;
                                                              case 8u:
                                                                v690 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v690;
                                                                v691 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v691;
                                                                v692 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v692;
                                                                v693 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v693;
                                                                *(_OWORD *)(v434 + 185) = *(_OWORD *)(v435 + 185);
                                                                v694 = *((_OWORD *)v435 + 11);
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 176) = v694;
                                                                v695 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v695;
                                                                v1382 = (int *)type metadata accessor for LinkPresentation.AudioBookMetadata(0);
                                                                v696 = v1382[10];
                                                                v697 = (_DWORD *)(v434 + v696);
                                                                v698 = &v435[v696];
                                                                v699 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v700 = *(void (***)(void))(v699 - 8);
                                                                if (((unsigned int (*)(char *, uint64_t, uint64_t))v700[6])(v698, 1, v699))
                                                                {
                                                                  v701 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                  memcpy(v697, v698, *(_QWORD *)(*(_QWORD *)(v701 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  __dstn = v700;
                                                                  v1374 = (char *)v697;
                                                                  *v697 = *(_DWORD *)v698;
                                                                  v1035 = *(int *)(v699 + 20);
                                                                  v1036 = (char *)v697 + v1035;
                                                                  v1037 = &v698[v1035];
                                                                  if (v1409(&v698[v1035], 1, v1399))
                                                                  {
                                                                    v1038 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v1036, v1037, *(_QWORD *)(*(_QWORD *)(v1038 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1036, v1037, v1399);
                                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1036, 0, 1, v1399);
                                                                  }
                                                                  *(_QWORD *)&v1374[*(int *)(v699 + 24)] = *(_QWORD *)&v698[*(int *)(v699 + 24)];
                                                                  __dstn[7]();
                                                                }
                                                                v1193 = v1382[11];
                                                                v1194 = (void *)(v434 + v1193);
                                                                v1195 = &v435[v1193];
                                                                a2 = v1406;
                                                                if (v1409(v1195, 1, v1399))
                                                                {
                                                                  v1196 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                  memcpy(v1194, v1195, *(_QWORD *)(*(_QWORD *)(v1196 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, char *, uint64_t))(v1396 + 32))(v1194, v1195, v1399);
                                                                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1194, 0, 1, v1399);
                                                                }
                                                                goto LABEL_571;
                                                              case 9u:
                                                                v702 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v702;
                                                                v703 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v703;
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                v704 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
                                                                v705 = v704[9];
                                                                v1383 = (void *)(v434 + v705);
                                                                v706 = &v435[v705];
                                                                v707 = sub_1AD63B03C();
                                                                v708 = *(_QWORD *)(v707 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v708 + 48))(v706, 1, v707))
                                                                {
                                                                  v709 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                  memcpy(v1383, v706, *(_QWORD *)(*(_QWORD *)(v709 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, char *, uint64_t))(v708 + 32))(v1383, v706, v707);
                                                                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v708 + 56))(v1383, 0, 1, v707);
                                                                }
                                                                v1039 = v704[10];
                                                                v1040 = (_OWORD *)(v434 + v1039);
                                                                v1041 = &v435[v1039];
                                                                v1042 = *((_OWORD *)v1041 + 5);
                                                                v1040[4] = *((_OWORD *)v1041 + 4);
                                                                v1040[5] = v1042;
                                                                v1040[6] = *((_OWORD *)v1041 + 6);
                                                                *(_OWORD *)((char *)v1040 + 105) = *(_OWORD *)(v1041 + 105);
                                                                v1043 = *((_OWORD *)v1041 + 1);
                                                                *v1040 = *(_OWORD *)v1041;
                                                                v1040[1] = v1043;
                                                                v1044 = *((_OWORD *)v1041 + 3);
                                                                v1040[2] = *((_OWORD *)v1041 + 2);
                                                                v1040[3] = v1044;
                                                                v1045 = v704[11];
                                                                v1046 = (_DWORD *)(v434 + v1045);
                                                                v1386 = v704;
                                                                v1047 = &v435[v1045];
                                                                v1048 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v1049 = *(void (***)(void))(v1048 - 8);
                                                                if (((unsigned int (*)(char *, uint64_t, uint64_t))v1049[6])(v1047, 1, v1048))
                                                                {
                                                                  v1050 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                  memcpy(v1046, v1047, *(_QWORD *)(*(_QWORD *)(v1050 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  __dstp = v1049;
                                                                  *v1046 = *(_DWORD *)v1047;
                                                                  v1086 = *(int *)(v1048 + 20);
                                                                  v1344 = (char *)v1046 + v1086;
                                                                  v1087 = &v1047[v1086];
                                                                  if (((unsigned int (*)(void))v1409)())
                                                                  {
                                                                    v1088 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v1344, v1087, *(_QWORD *)(*(_QWORD *)(v1088 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1344, v1087, v1399);
                                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1344, 0, 1, v1399);
                                                                  }
                                                                  *(_QWORD *)((char *)v1046 + *(int *)(v1048 + 24)) = *(_QWORD *)&v1047[*(int *)(v1048 + 24)];
                                                                  __dstp[7]();
                                                                }
                                                                *(_QWORD *)(v434 + v1386[12]) = *(_QWORD *)&v435[v1386[12]];
LABEL_598:
                                                                swift_storeEnumTagMultiPayload();
                                                                a2 = v1406;
                                                                break;
                                                              case 0xAu:
                                                                v710 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v710;
                                                                v711 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v711;
                                                                v712 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v712;
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                v713 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v713;
                                                                v714 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v714;
                                                                v632 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
                                                                v715 = *(int *)(v632 + 36);
                                                                v1380 = (_DWORD *)(v434 + v715);
                                                                v634 = &v435[v715];
                                                                v635 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v716 = *(void (***)(void))(v635 - 8);
                                                                if (((unsigned int (*)(char *, uint64_t, uint64_t))v716[6])(v634, 1, v635))
                                                                {
LABEL_284:
                                                                  v637 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                  memcpy(v1380, v634, *(_QWORD *)(*(_QWORD *)(v637 - 8) + 64));
                                                                  a2 = v1406;
                                                                }
                                                                else
                                                                {
                                                                  __dstk = v716;
                                                                  *v1380 = *(_DWORD *)v634;
                                                                  v1051 = *(int *)(v635 + 20);
                                                                  v1341 = (char *)v1380 + v1051;
                                                                  v1013 = &v634[v1051];
                                                                  if (((unsigned int (*)(void))v1409)())
                                                                  {
LABEL_415:
                                                                    v1014 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v1341, v1013, *(_QWORD *)(*(_QWORD *)(v1014 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
LABEL_554:
                                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1341, v1013, v1399);
                                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1341, 0, 1, v1399);
                                                                  }
                                                                  *(_QWORD *)((char *)v1380 + *(int *)(v635 + 24)) = *(_QWORD *)&v634[*(int *)(v635 + 24)];
                                                                  __dstk[7]();
                                                                  a2 = v1406;
                                                                }
                                                                *(_QWORD *)(v434 + *(int *)(v632 + 40)) = *(_QWORD *)&v435[*(int *)(v632 + 40)];
                                                                swift_storeEnumTagMultiPayload();
                                                                break;
                                                              case 0xBu:
                                                                v717 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v717;
                                                                v718 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v718;
                                                                v719 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v719;
                                                                v720 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v720;
                                                                *(_OWORD *)(v434 + 185) = *(_OWORD *)(v435 + 185);
                                                                v721 = *((_OWORD *)v435 + 11);
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 176) = v721;
                                                                v722 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v722;
                                                                v723 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0)
                                                                              + 40);
                                                                v644 = (_DWORD *)(v434 + v723);
                                                                v645 = &v435[v723];
                                                                v646 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v647 = *(_QWORD *)(v646 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v647 + 48))(v645, 1, v646))
                                                                {
                                                                  goto LABEL_312;
                                                                }
                                                                *v644 = *(_DWORD *)v645;
                                                                v1052 = *(int *)(v646 + 20);
                                                                v1373 = &v645[v1052];
                                                                v1385 = (char *)v644 + v1052;
                                                                if (((unsigned int (*)(void))v1409)())
                                                                  goto LABEL_439;
                                                                goto LABEL_579;
                                                              case 0xCu:
                                                                v724 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v724;
                                                                v725 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v725;
                                                                v726 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v726;
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                v727 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v727;
                                                                v728 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v728;
                                                                v729 = *(int *)(type metadata accessor for LinkPresentation.TVSeasonMetadata(0)
                                                                              + 36);
                                                                v644 = (_DWORD *)(v434 + v729);
                                                                v645 = &v435[v729];
                                                                v646 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v647 = *(_QWORD *)(v646 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v647 + 48))(v645, 1, v646))
                                                                {
                                                                  goto LABEL_312;
                                                                }
                                                                *v644 = *(_DWORD *)v645;
                                                                v1053 = *(int *)(v646 + 20);
                                                                v1373 = &v645[v1053];
                                                                v1385 = (char *)v644 + v1053;
                                                                if (((unsigned int (*)(void))v1409)())
                                                                  goto LABEL_439;
                                                                goto LABEL_579;
                                                              case 0xDu:
                                                                v730 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v730;
                                                                v731 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v731;
                                                                *(_OWORD *)(v434 + 153) = *(_OWORD *)(v435 + 153);
                                                                v732 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v732;
                                                                v733 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v733;
                                                                v734 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v734;
                                                                v735 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0)
                                                                              + 32);
                                                                v644 = (_DWORD *)(v434 + v735);
                                                                v645 = &v435[v735];
                                                                v646 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v647 = *(_QWORD *)(v646 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v647 + 48))(v645, 1, v646))
                                                                {
                                                                  goto LABEL_312;
                                                                }
                                                                *v644 = *(_DWORD *)v645;
                                                                v1055 = *(int *)(v646 + 20);
                                                                v1373 = &v645[v1055];
                                                                v1385 = (char *)v644 + v1055;
                                                                if (((unsigned int (*)(void))v1409)())
                                                                  goto LABEL_439;
                                                                goto LABEL_579;
                                                              case 0xEu:
                                                                v736 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v736;
                                                                v737 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v737;
                                                                v738 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v738;
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                v739 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v739;
                                                                v740 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v740;
                                                                v741 = (int *)type metadata accessor for LinkPresentation.MovieMetadata(0);
                                                                v742 = v741[9];
                                                                v1384 = (_DWORD *)(v434 + v742);
                                                                v743 = &v435[v742];
                                                                v744 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v745 = *(void (***)(void))(v744 - 8);
                                                                if (((unsigned int (*)(char *, uint64_t, uint64_t))v745[6])(v743, 1, v744))
                                                                {
                                                                  v746 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                  memcpy(v1384, v743, *(_QWORD *)(*(_QWORD *)(v746 - 8) + 64));
                                                                  a2 = v1406;
                                                                }
                                                                else
                                                                {
                                                                  __dsto = v745;
                                                                  *v1384 = *(_DWORD *)v743;
                                                                  v1056 = *(int *)(v744 + 20);
                                                                  v1343 = (char *)v1384 + v1056;
                                                                  v1057 = &v743[v1056];
                                                                  if (((unsigned int (*)(void))v1409)())
                                                                  {
                                                                    v1058 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v1343, v1057, *(_QWORD *)(*(_QWORD *)(v1058 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1343, v1057, v1399);
                                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1343, 0, 1, v1399);
                                                                  }
                                                                  *(_QWORD *)((char *)v1384 + *(int *)(v744 + 24)) = *(_QWORD *)&v743[*(int *)(v744 + 24)];
                                                                  __dsto[7]();
                                                                  a2 = v1406;
                                                                }
                                                                v1197 = v741[10];
                                                                v1198 = (_OWORD *)(v434 + v1197);
                                                                v1199 = &v435[v1197];
                                                                v1200 = *((_OWORD *)v1199 + 5);
                                                                v1198[4] = *((_OWORD *)v1199 + 4);
                                                                v1198[5] = v1200;
                                                                v1198[6] = *((_OWORD *)v1199 + 6);
                                                                *(_OWORD *)((char *)v1198 + 105) = *(_OWORD *)(v1199 + 105);
                                                                v1201 = *((_OWORD *)v1199 + 1);
                                                                *v1198 = *(_OWORD *)v1199;
                                                                v1198[1] = v1201;
                                                                v1202 = *((_OWORD *)v1199 + 3);
                                                                v1198[2] = *((_OWORD *)v1199 + 2);
                                                                v1198[3] = v1202;
                                                                *(_OWORD *)(v434 + v741[11]) = *(_OWORD *)&v435[v741[11]];
                                                                swift_storeEnumTagMultiPayload();
                                                                break;
                                                              case 0xFu:
                                                                v747 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v747;
                                                                v748 = *((_OWORD *)v435 + 3);
                                                                *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                *(_OWORD *)(v434 + 48) = v748;
                                                                v749 = *((_OWORD *)v435 + 9);
                                                                *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                *(_OWORD *)(v434 + 144) = v749;
                                                                *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                v750 = *((_OWORD *)v435 + 5);
                                                                *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 80) = v750;
                                                                v751 = *((_OWORD *)v435 + 7);
                                                                *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                *(_OWORD *)(v434 + 112) = v751;
                                                                v752 = *(int *)(type metadata accessor for LinkPresentation.MovieBundleMetadata(0)
                                                                              + 36);
                                                                v644 = (_DWORD *)(v434 + v752);
                                                                v645 = &v435[v752];
                                                                v646 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                v647 = *(_QWORD *)(v646 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v647 + 48))(v645, 1, v646))
                                                                {
LABEL_312:
                                                                  v753 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                  memcpy(v644, v645, *(_QWORD *)(*(_QWORD *)(v753 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  *v644 = *(_DWORD *)v645;
                                                                  v1059 = *(int *)(v646 + 20);
                                                                  v1373 = &v645[v1059];
                                                                  v1385 = (char *)v644 + v1059;
                                                                  if (((unsigned int (*)(void))v1409)())
                                                                  {
LABEL_439:
                                                                    v1054 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v1385, v1373, *(_QWORD *)(*(_QWORD *)(v1054 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
LABEL_579:
                                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1385, v1373, v1399);
                                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1385, 0, 1, v1399);
                                                                  }
                                                                  *(_QWORD *)((char *)v644 + *(int *)(v646 + 24)) = *(_QWORD *)&v645[*(int *)(v646 + 24)];
                                                                  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v647 + 56))(v644, 0, 1, v646);
                                                                }
                                                                a2 = v1406;
                                                                swift_storeEnumTagMultiPayload();
                                                                break;
                                                              case 0x16u:
                                                                v754 = a2;
                                                                v755 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v755;
                                                                *(_QWORD *)(v434 + 32) = *((_QWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 104) = *(_OWORD *)(v435 + 104);
                                                                *(_OWORD *)(v434 + 120) = *(_OWORD *)(v435 + 120);
                                                                *(_OWORD *)(v434 + 136) = *(_OWORD *)(v435 + 136);
                                                                *(_OWORD *)(v434 + 145) = *(_OWORD *)(v435 + 145);
                                                                *(_OWORD *)(v434 + 40) = *(_OWORD *)(v435 + 40);
                                                                *(_OWORD *)(v434 + 56) = *(_OWORD *)(v435 + 56);
                                                                *(_OWORD *)(v434 + 72) = *(_OWORD *)(v435 + 72);
                                                                *(_OWORD *)(v434 + 88) = *(_OWORD *)(v435 + 88);
                                                                *(_OWORD *)(v434 + 273) = *(_OWORD *)(v435 + 273);
                                                                *(_OWORD *)(v434 + 264) = *(_OWORD *)(v435 + 264);
                                                                *(_OWORD *)(v434 + 248) = *(_OWORD *)(v435 + 248);
                                                                *(_OWORD *)(v434 + 232) = *(_OWORD *)(v435 + 232);
                                                                *(_OWORD *)(v434 + 216) = *(_OWORD *)(v435 + 216);
                                                                *(_OWORD *)(v434 + 200) = *(_OWORD *)(v435 + 200);
                                                                *(_OWORD *)(v434 + 184) = *(_OWORD *)(v435 + 184);
                                                                *(_OWORD *)(v434 + 168) = *(_OWORD *)(v435 + 168);
                                                                v756 = *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0)
                                                                              + 36);
                                                                v757 = (void *)(v434 + v756);
                                                                v758 = &v435[v756];
                                                                v759 = sub_1AD63B03C();
                                                                v760 = *(_QWORD *)(v759 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v760 + 48))(v758, 1, v759))
                                                                {
                                                                  v761 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                  memcpy(v757, v758, *(_QWORD *)(*(_QWORD *)(v761 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, char *, uint64_t))(v760 + 32))(v757, v758, v759);
                                                                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v760 + 56))(v757, 0, 1, v759);
                                                                }
                                                                a2 = v754;
                                                                swift_storeEnumTagMultiPayload();
                                                                break;
                                                              case 0x1Au:
                                                                v762 = *((_OWORD *)v435 + 1);
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                *(_OWORD *)(v434 + 16) = v762;
                                                                *(_QWORD *)(v434 + 32) = *((_QWORD *)v435 + 4);
                                                                *(_OWORD *)(v434 + 104) = *(_OWORD *)(v435 + 104);
                                                                *(_OWORD *)(v434 + 120) = *(_OWORD *)(v435 + 120);
                                                                *(_OWORD *)(v434 + 136) = *(_OWORD *)(v435 + 136);
                                                                *(_OWORD *)(v434 + 145) = *(_OWORD *)(v435 + 145);
                                                                *(_OWORD *)(v434 + 40) = *(_OWORD *)(v435 + 40);
                                                                *(_OWORD *)(v434 + 56) = *(_OWORD *)(v435 + 56);
                                                                *(_OWORD *)(v434 + 72) = *(_OWORD *)(v435 + 72);
                                                                *(_OWORD *)(v434 + 88) = *(_OWORD *)(v435 + 88);
                                                                v1402 = type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
                                                                v763 = *(int *)(v1402 + 36);
                                                                v764 = (void *)(v434 + v763);
                                                                v765 = &v435[v763];
                                                                v766 = sub_1AD63B03C();
                                                                v767 = *(_QWORD *)(v766 - 8);
                                                                v1412 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v767 + 48);
                                                                v1398 = v767;
                                                                if (v1412(v765, 1, v766))
                                                                {
                                                                  v768 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                  memcpy(v764, v765, *(_QWORD *)(*(_QWORD *)(v768 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, char *, uint64_t))(v767 + 32))(v764, v765, v766);
                                                                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v767 + 56))(v764, 0, 1, v766);
                                                                }
                                                                v1060 = v1402;
                                                                v1061 = *(int *)(v1402 + 40);
                                                                v1062 = (void *)(v434 + v1061);
                                                                v1063 = &v435[v1061];
                                                                if (v1412(&v435[v1061], 1, v766))
                                                                {
                                                                  v1064 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                  memcpy(v1062, v1063, *(_QWORD *)(*(_QWORD *)(v1064 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, char *, uint64_t))(v1398 + 32))(v1062, v1063, v766);
                                                                  v1060 = v1402;
                                                                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1398 + 56))(v1062, 0, 1, v766);
                                                                }
                                                                v1089 = *(int *)(v1060 + 44);
                                                                v1066 = (void *)(v434 + v1089);
                                                                v1067 = &v435[v1089];
                                                                a2 = v1406;
                                                                if (v1412(v1067, 1, v766))
                                                                  goto LABEL_453;
                                                                goto LABEL_493;
                                                              case 0x1Eu:
                                                                *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                v769 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
                                                                v770 = *(int *)(v769 + 20);
                                                                v1413 = (void *)(v434 + v770);
                                                                v771 = &v435[v770];
                                                                v766 = sub_1AD63B03C();
                                                                v772 = *(_QWORD *)(v766 - 8);
                                                                v1403 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v772 + 48);
                                                                v1398 = v772;
                                                                if (v1403(v771, 1, v766))
                                                                {
                                                                  v773 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                  memcpy(v1413, v771, *(_QWORD *)(*(_QWORD *)(v773 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(void *, char *, uint64_t))(v772 + 32))(v1413, v771, v766);
                                                                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v772 + 56))(v1413, 0, 1, v766);
                                                                }
                                                                v1065 = *(int *)(v769 + 24);
                                                                v1066 = (void *)(v434 + v1065);
                                                                v1067 = &v435[v1065];
                                                                a2 = v1406;
                                                                if (v1403(v1067, 1, v766))
                                                                {
LABEL_453:
                                                                  v1068 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                  memcpy(v1066, v1067, *(_QWORD *)(*(_QWORD *)(v1068 - 8) + 64));
                                                                }
                                                                else
                                                                {
LABEL_493:
                                                                  (*(void (**)(void *, char *, uint64_t))(v1398 + 32))(v1066, v1067, v766);
                                                                  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1398 + 56))(v1066, 0, 1, v766);
                                                                }
LABEL_571:
                                                                swift_storeEnumTagMultiPayload();
                                                                break;
                                                              default:
                                                                memcpy((void *)v434, v435, *(_QWORD *)(v437 + 64));
                                                                break;
                                                            }
                                                            (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v437 + 56))(v434, 0, 1, v436);
                                                            goto LABEL_637;
                                                          }
                                                        }
                                                        else
                                                        {
                                                          if (!v440)
                                                          {
                                                            if (a1 != a2)
                                                            {
                                                              sub_1AD066230(v434, type metadata accessor for LinkPresentation.SpecializationMetadata);
                                                              switch(swift_getEnumCaseMultiPayload())
                                                              {
                                                                case 0u:
                                                                  v456 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v456;
                                                                  v457 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v457;
                                                                  v458 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v458;
                                                                  v459 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v459;
                                                                  v460 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v460;
                                                                  *(_OWORD *)(v434 + 201) = *(_OWORD *)(v435 + 201);
                                                                  v461 = *((_OWORD *)v435 + 12);
                                                                  v462 = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 176) = *((_OWORD *)v435 + 11);
                                                                  *(_OWORD *)(v434 + 192) = v461;
                                                                  *(_OWORD *)(v434 + 160) = v462;
                                                                  v463 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
                                                                  v464 = v463[11];
                                                                  v465 = (_DWORD *)(v434 + v464);
                                                                  v466 = &v435[v464];
                                                                  v467 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v468 = *(_QWORD *)(v467 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v468 + 48))(v466, 1, v467))
                                                                  {
                                                                    v469 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                    memcpy(v465, v466, *(_QWORD *)(*(_QWORD *)(v469 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    *v465 = *(_DWORD *)v466;
                                                                    v1127 = *(int *)(v467 + 20);
                                                                    __dstq = (char *)v465;
                                                                    v1376 = (char *)v465 + v1127;
                                                                    v1128 = &v466[v1127];
                                                                    if (v1409(&v466[v1127], 1, v1399))
                                                                    {
                                                                      v1129 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                      memcpy(v1376, v1128, *(_QWORD *)(*(_QWORD *)(v1129 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1376, v1128, v1399);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1376, 0, 1, v1399);
                                                                    }
                                                                    *(_QWORD *)&__dstq[*(int *)(v467 + 24)] = *(_QWORD *)&v466[*(int *)(v467 + 24)];
                                                                    (*(void (**)(void))(v468 + 56))();
                                                                  }
                                                                  v1219 = v463[12];
                                                                  v1220 = (void *)(v434 + v1219);
                                                                  v1221 = &v435[v1219];
                                                                  a2 = v1406;
                                                                  if (v1409(&v435[v1219], 1, v1399))
                                                                  {
                                                                    v1222 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v1220, v1221, *(_QWORD *)(*(_QWORD *)(v1222 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(void *, char *, uint64_t))(v1396 + 32))(v1220, v1221, v1399);
                                                                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1220, 0, 1, v1399);
                                                                  }
                                                                  *(_QWORD *)(v434 + v463[13]) = *(_QWORD *)&v435[v463[13]];
                                                                  v1223 = v463[14];
                                                                  v1224 = (_OWORD *)(v434 + v1223);
                                                                  v1225 = &v435[v1223];
                                                                  v1226 = *((_OWORD *)v1225 + 1);
                                                                  *v1224 = *(_OWORD *)v1225;
                                                                  v1224[1] = v1226;
                                                                  v1224[2] = *((_OWORD *)v1225 + 2);
                                                                  *(_OWORD *)((char *)v1224 + 41) = *(_OWORD *)(v1225 + 41);
                                                                  swift_storeEnumTagMultiPayload();
                                                                  break;
                                                                case 1u:
                                                                  v844 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v844;
                                                                  v845 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v845;
                                                                  v846 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v846;
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                  v847 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v847;
                                                                  v848 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v848;
                                                                  v849 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
                                                                  v850 = *(int *)(v849 + 36);
                                                                  v851 = (_DWORD *)(v434 + v850);
                                                                  v852 = &v435[v850];
                                                                  v853 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v854 = *(_QWORD *)(v853 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v854 + 48))(v852, 1, v853))
                                                                  {
                                                                    v855 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                    memcpy(v851, v852, *(_QWORD *)(*(_QWORD *)(v855 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    __dstr = (char *)v851;
                                                                    *v851 = *(_DWORD *)v852;
                                                                    v1138 = *(int *)(v853 + 20);
                                                                    v1388 = (char *)v851 + v1138;
                                                                    v1139 = &v852[v1138];
                                                                    if (v1409(&v852[v1138], 1, v1399))
                                                                    {
                                                                      v1140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                      memcpy(v1388, v1139, *(_QWORD *)(*(_QWORD *)(v1140 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1388, v1139, v1399);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1388, 0, 1, v1399);
                                                                    }
                                                                    *(_QWORD *)&__dstr[*(int *)(v853 + 24)] = *(_QWORD *)&v852[*(int *)(v853 + 24)];
                                                                    (*(void (**)(void))(v854 + 56))();
                                                                  }
                                                                  *(_QWORD *)(v434 + *(int *)(v849 + 40)) = *(_QWORD *)&v435[*(int *)(v849 + 40)];
                                                                  goto LABEL_636;
                                                                case 2u:
                                                                  v856 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v856;
                                                                  v857 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v857;
                                                                  v858 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v858;
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                  v859 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v859;
                                                                  v860 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v860;
                                                                  v861 = *(int *)(type metadata accessor for LinkPresentation.MusicVideoMetadata(0)
                                                                                + 36);
                                                                  v862 = (_DWORD *)(v434 + v861);
                                                                  v863 = &v435[v861];
                                                                  v864 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v865 = *(_QWORD *)(v864 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v865 + 48))(v863, 1, v864))
                                                                  {
                                                                    goto LABEL_523;
                                                                  }
                                                                  *v862 = *(_DWORD *)v863;
                                                                  v1141 = *(int *)(v864 + 20);
                                                                  v1389 = (char *)v862 + v1141;
                                                                  v1142 = &v863[v1141];
                                                                  if (v1409(&v863[v1141], 1, v1399))
                                                                    goto LABEL_588;
                                                                  goto LABEL_628;
                                                                case 3u:
                                                                  v866 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v866;
                                                                  v867 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v867;
                                                                  v868 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v868;
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                  v869 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v869;
                                                                  v870 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v870;
                                                                  v871 = *(int *)(type metadata accessor for LinkPresentation.ArtistMetadata(0)
                                                                                + 36);
                                                                  v862 = (_DWORD *)(v434 + v871);
                                                                  v863 = &v435[v871];
                                                                  v864 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v865 = *(_QWORD *)(v864 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v865 + 48))(v863, 1, v864))
                                                                  {
                                                                    goto LABEL_523;
                                                                  }
                                                                  *v862 = *(_DWORD *)v863;
                                                                  v1143 = *(int *)(v864 + 20);
                                                                  v1389 = (char *)v862 + v1143;
                                                                  v1142 = &v863[v1143];
                                                                  if (v1409(&v863[v1143], 1, v1399))
                                                                    goto LABEL_588;
                                                                  goto LABEL_628;
                                                                case 4u:
                                                                  v872 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v872;
                                                                  v873 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v873;
                                                                  v874 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
                                                                  v875 = v874[8];
                                                                  v876 = (void *)(v434 + v875);
                                                                  v877 = &v435[v875];
                                                                  if (v1409(&v435[v875], 1, v1399))
                                                                  {
                                                                    v878 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v876, v877, *(_QWORD *)(*(_QWORD *)(v878 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(void *, char *, uint64_t))(v1396 + 32))(v876, v877, v1399);
                                                                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v876, 0, 1, v1399);
                                                                  }
                                                                  *(_OWORD *)(v434 + v874[9]) = *(_OWORD *)&v435[v874[9]];
                                                                  v1144 = v874[10];
                                                                  v1145 = (_OWORD *)(v434 + v1144);
                                                                  v1146 = &v435[v1144];
                                                                  v1147 = *((_OWORD *)v1146 + 3);
                                                                  v1145[2] = *((_OWORD *)v1146 + 2);
                                                                  v1145[3] = v1147;
                                                                  v1148 = *((_OWORD *)v1146 + 1);
                                                                  *v1145 = *(_OWORD *)v1146;
                                                                  v1145[1] = v1148;
                                                                  *(_OWORD *)((char *)v1145 + 105) = *(_OWORD *)(v1146 + 105);
                                                                  v1149 = *((_OWORD *)v1146 + 6);
                                                                  v1150 = *((_OWORD *)v1146 + 4);
                                                                  v1145[5] = *((_OWORD *)v1146 + 5);
                                                                  v1145[6] = v1149;
                                                                  v1145[4] = v1150;
                                                                  v1151 = v874[11];
                                                                  v862 = (_DWORD *)(v434 + v1151);
                                                                  v863 = &v435[v1151];
                                                                  v864 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v865 = *(_QWORD *)(v864 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v865 + 48))(v863, 1, v864))
                                                                  {
                                                                    goto LABEL_523;
                                                                  }
                                                                  *v862 = *(_DWORD *)v863;
                                                                  v1203 = *(int *)(v864 + 20);
                                                                  v1389 = (char *)v862 + v1203;
                                                                  v1142 = &v863[v1203];
                                                                  if (v1409(&v863[v1203], 1, v1399))
                                                                    goto LABEL_588;
                                                                  goto LABEL_628;
                                                                case 5u:
                                                                  v879 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v879;
                                                                  v880 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v880;
                                                                  v881 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v881;
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                  v882 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v882;
                                                                  v883 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v883;
                                                                  v884 = *(int *)(type metadata accessor for LinkPresentation.RadioMetadata(0)
                                                                                + 36);
                                                                  v862 = (_DWORD *)(v434 + v884);
                                                                  v863 = &v435[v884];
                                                                  v864 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v865 = *(_QWORD *)(v864 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v865 + 48))(v863, 1, v864))
                                                                  {
                                                                    goto LABEL_523;
                                                                  }
                                                                  *v862 = *(_DWORD *)v863;
                                                                  v1153 = *(int *)(v864 + 20);
                                                                  v1389 = (char *)v862 + v1153;
                                                                  v1142 = &v863[v1153];
                                                                  if (v1409(&v863[v1153], 1, v1399))
                                                                    goto LABEL_588;
                                                                  goto LABEL_628;
                                                                case 6u:
                                                                  v885 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v885;
                                                                  v886 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v886;
                                                                  v887 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v887;
                                                                  v888 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v888;
                                                                  v889 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v889;
                                                                  *(_OWORD *)(v434 + 201) = *(_OWORD *)(v435 + 201);
                                                                  v890 = *((_OWORD *)v435 + 12);
                                                                  v891 = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 176) = *((_OWORD *)v435 + 11);
                                                                  *(_OWORD *)(v434 + 192) = v890;
                                                                  *(_OWORD *)(v434 + 160) = v891;
                                                                  *(_QWORD *)(v434 + 224) = *((_QWORD *)v435 + 28);
                                                                  v892 = (int *)type metadata accessor for LinkPresentation.SoftwareMetadata(0);
                                                                  v893 = v892[12];
                                                                  v894 = (char *)(v434 + v893);
                                                                  v895 = &v435[v893];
                                                                  if (__dstb(&v435[v893], 1, v325))
                                                                  {
                                                                    v896 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
                                                                    memcpy(v894, v895, *(_QWORD *)(*(_QWORD *)(v896 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    v1390 = v894;
                                                                    if (v1409(v895, 1, v1399))
                                                                    {
                                                                      v1154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                      memcpy(v894, v895, *(_QWORD *)(*(_QWORD *)(v1154 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v894, v895, v1399);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v894, 0, 1, v1399);
                                                                    }
                                                                    v1227 = v325[5];
                                                                    __dstw = &v894[v1227];
                                                                    v1228 = &v895[v1227];
                                                                    if (v1409(&v895[v1227], 1, v1399))
                                                                    {
                                                                      v1229 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                      memcpy(__dstw, v1228, *(_QWORD *)(*(_QWORD *)(v1229 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(__dstw, v1228, v1399);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(__dstw, 0, 1, v1399);
                                                                    }
                                                                    *(_OWORD *)&v1390[v325[6]] = *(_OWORD *)&v895[v325[6]];
                                                                    v1390[v325[7]] = v895[v325[7]];
                                                                    *(_QWORD *)&v1390[v325[8]] = *(_QWORD *)&v895[v325[8]];
                                                                    v1236 = v325[9];
                                                                    v1237 = &v1390[v1236];
                                                                    v1238 = &v895[v1236];
                                                                    *(_OWORD *)v1237 = *(_OWORD *)v1238;
                                                                    *((_QWORD *)v1237 + 2) = *((_QWORD *)v1238 + 2);
                                                                    ((void (*)(void))v1371[7])();
                                                                  }
                                                                  *(_BYTE *)(v434 + v892[13]) = v435[v892[13]];
                                                                  v1239 = v892[14];
                                                                  v1240 = (_OWORD *)(v434 + v1239);
                                                                  v1241 = &v435[v1239];
                                                                  v1242 = *((_OWORD *)v1241 + 5);
                                                                  v1240[4] = *((_OWORD *)v1241 + 4);
                                                                  v1240[5] = v1242;
                                                                  v1240[6] = *((_OWORD *)v1241 + 6);
                                                                  *(_OWORD *)((char *)v1240 + 105) = *(_OWORD *)(v1241 + 105);
                                                                  v1243 = *((_OWORD *)v1241 + 1);
                                                                  *v1240 = *(_OWORD *)v1241;
                                                                  v1240[1] = v1243;
                                                                  v1244 = *((_OWORD *)v1241 + 3);
                                                                  v1240[2] = *((_OWORD *)v1241 + 2);
                                                                  v1240[3] = v1244;
                                                                  goto LABEL_636;
                                                                case 7u:
                                                                  v897 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v897;
                                                                  v898 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v898;
                                                                  v899 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v899;
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                  v900 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v900;
                                                                  v901 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v901;
                                                                  v902 = type metadata accessor for LinkPresentation.BookMetadata(0);
                                                                  v903 = *(int *)(v902 + 36);
                                                                  v904 = (_DWORD *)(v434 + v903);
                                                                  v905 = &v435[v903];
                                                                  v906 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v907 = *(_QWORD *)(v906 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v907 + 48))(v905, 1, v906))
                                                                  {
                                                                    v908 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                    memcpy(v904, v905, *(_QWORD *)(*(_QWORD *)(v908 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    __dsts = (char *)v904;
                                                                    *v904 = *(_DWORD *)v905;
                                                                    v1155 = *(int *)(v906 + 20);
                                                                    v1391 = (char *)v904 + v1155;
                                                                    v1156 = &v905[v1155];
                                                                    if (v1409(&v905[v1155], 1, v1399))
                                                                    {
                                                                      v1157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                      memcpy(v1391, v1156, *(_QWORD *)(*(_QWORD *)(v1157 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1391, v1156, v1399);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1391, 0, 1, v1399);
                                                                    }
                                                                    *(_QWORD *)&__dsts[*(int *)(v906 + 24)] = *(_QWORD *)&v905[*(int *)(v906 + 24)];
                                                                    (*(void (**)(void))(v907 + 56))();
                                                                  }
                                                                  *(_BYTE *)(v434 + *(int *)(v902 + 40)) = v435[*(int *)(v902 + 40)];
                                                                  goto LABEL_636;
                                                                case 8u:
                                                                  v909 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v909;
                                                                  v910 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v910;
                                                                  v911 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v911;
                                                                  v912 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v912;
                                                                  *(_OWORD *)(v434 + 185) = *(_OWORD *)(v435 + 185);
                                                                  v913 = *((_OWORD *)v435 + 11);
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 176) = v913;
                                                                  v914 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v914;
                                                                  v915 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
                                                                  v916 = *(int *)(v915 + 40);
                                                                  v917 = (_DWORD *)(v434 + v916);
                                                                  v918 = &v435[v916];
                                                                  v919 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v920 = *(_QWORD *)(v919 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v920 + 48))(v918, 1, v919))
                                                                  {
                                                                    v921 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                    memcpy(v917, v918, *(_QWORD *)(*(_QWORD *)(v921 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    *v917 = *(_DWORD *)v918;
                                                                    v1158 = *(int *)(v919 + 20);
                                                                    v1377 = (char *)v917;
                                                                    v1392 = (char *)v917 + v1158;
                                                                    v1159 = &v918[v1158];
                                                                    if (v1409(&v918[v1158], 1, v1399))
                                                                    {
                                                                      v1160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                      memcpy(v1392, v1159, *(_QWORD *)(*(_QWORD *)(v1160 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1392, v1159, v1399);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1392, 0, 1, v1399);
                                                                    }
                                                                    *(_QWORD *)&v1377[*(int *)(v919 + 24)] = *(_QWORD *)&v918[*(int *)(v919 + 24)];
                                                                    (*(void (**)(void))(v920 + 56))();
                                                                  }
                                                                  v1318 = *(int *)(v915 + 44);
                                                                  v1319 = (void *)(v434 + v1318);
                                                                  v1320 = &v435[v1318];
                                                                  a2 = v1406;
                                                                  if (v1409(v1320, 1, v1399))
                                                                  {
                                                                    v1321 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                    memcpy(v1319, v1320, *(_QWORD *)(*(_QWORD *)(v1321 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(void *, char *, uint64_t))(v1396 + 32))(v1319, v1320, v1399);
                                                                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1319, 0, 1, v1399);
                                                                  }
                                                                  goto LABEL_675;
                                                                case 9u:
                                                                  v922 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v922;
                                                                  v923 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v923;
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  v924 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
                                                                  v925 = v924[9];
                                                                  v926 = (void *)(v434 + v925);
                                                                  v927 = &v435[v925];
                                                                  v928 = sub_1AD63B03C();
                                                                  v929 = *(_QWORD *)(v928 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v929 + 48))(v927, 1, v928))
                                                                  {
                                                                    v930 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                    memcpy(v926, v927, *(_QWORD *)(*(_QWORD *)(v930 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(void *, char *, uint64_t))(v929 + 32))(v926, v927, v928);
                                                                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v929 + 56))(v926, 0, 1, v928);
                                                                  }
                                                                  v1161 = v924[10];
                                                                  v1162 = (_OWORD *)(v434 + v1161);
                                                                  v1163 = &v435[v1161];
                                                                  v1164 = *((_OWORD *)v1163 + 5);
                                                                  v1162[4] = *((_OWORD *)v1163 + 4);
                                                                  v1162[5] = v1164;
                                                                  v1162[6] = *((_OWORD *)v1163 + 6);
                                                                  *(_OWORD *)((char *)v1162 + 105) = *(_OWORD *)(v1163 + 105);
                                                                  v1165 = *((_OWORD *)v1163 + 1);
                                                                  *v1162 = *(_OWORD *)v1163;
                                                                  v1162[1] = v1165;
                                                                  v1166 = *((_OWORD *)v1163 + 3);
                                                                  v1162[2] = *((_OWORD *)v1163 + 2);
                                                                  v1162[3] = v1166;
                                                                  v1167 = v924[11];
                                                                  v1168 = (_DWORD *)(v434 + v1167);
                                                                  v1169 = &v435[v1167];
                                                                  v1170 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v1171 = *(_QWORD *)(v1170 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1171 + 48))(v1169, 1, v1170))
                                                                  {
                                                                    v1172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                    memcpy(v1168, v1169, *(_QWORD *)(*(_QWORD *)(v1172 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    __dstv = (char *)v1168;
                                                                    *v1168 = *(_DWORD *)v1169;
                                                                    v1205 = *(int *)(v1170 + 20);
                                                                    v1395 = (char *)v1168 + v1205;
                                                                    v1206 = &v1169[v1205];
                                                                    if (v1409(&v1169[v1205], 1, v1399))
                                                                    {
                                                                      v1207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                      memcpy(v1395, v1206, *(_QWORD *)(*(_QWORD *)(v1207 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1395, v1206, v1399);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1395, 0, 1, v1399);
                                                                    }
                                                                    *(_QWORD *)&__dstv[*(int *)(v1170 + 24)] = *(_QWORD *)&v1169[*(int *)(v1170 + 24)];
                                                                    (*(void (**)(void))(v1171 + 56))();
                                                                  }
                                                                  *(_QWORD *)(v434 + v924[12]) = *(_QWORD *)&v435[v924[12]];
                                                                  goto LABEL_636;
                                                                case 0xAu:
                                                                  v931 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v931;
                                                                  v932 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v932;
                                                                  v933 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v933;
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                  v934 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v934;
                                                                  v935 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v935;
                                                                  v936 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
                                                                  v937 = *(int *)(v936 + 36);
                                                                  v938 = (_DWORD *)(v434 + v937);
                                                                  v939 = &v435[v937];
                                                                  v940 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v941 = *(_QWORD *)(v940 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v941 + 48))(v939, 1, v940))
                                                                  {
                                                                    v942 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                    memcpy(v938, v939, *(_QWORD *)(*(_QWORD *)(v942 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    __dstt = (char *)v938;
                                                                    *v938 = *(_DWORD *)v939;
                                                                    v1173 = *(int *)(v940 + 20);
                                                                    v1393 = (char *)v938 + v1173;
                                                                    v1174 = &v939[v1173];
                                                                    if (v1409(&v939[v1173], 1, v1399))
                                                                    {
                                                                      v1175 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                      memcpy(v1393, v1174, *(_QWORD *)(*(_QWORD *)(v1175 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1393, v1174, v1399);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1393, 0, 1, v1399);
                                                                    }
                                                                    *(_QWORD *)&__dstt[*(int *)(v940 + 24)] = *(_QWORD *)&v939[*(int *)(v940 + 24)];
                                                                    (*(void (**)(void))(v941 + 56))();
                                                                  }
                                                                  *(_QWORD *)(v434 + *(int *)(v936 + 40)) = *(_QWORD *)&v435[*(int *)(v936 + 40)];
                                                                  goto LABEL_636;
                                                                case 0xBu:
                                                                  v943 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v943;
                                                                  v944 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v944;
                                                                  v945 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v945;
                                                                  v946 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v946;
                                                                  *(_OWORD *)(v434 + 185) = *(_OWORD *)(v435 + 185);
                                                                  v947 = *((_OWORD *)v435 + 11);
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 176) = v947;
                                                                  v948 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v948;
                                                                  v949 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0)
                                                                                + 40);
                                                                  v862 = (_DWORD *)(v434 + v949);
                                                                  v863 = &v435[v949];
                                                                  v864 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v865 = *(_QWORD *)(v864 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v865 + 48))(v863, 1, v864))
                                                                  {
                                                                    goto LABEL_523;
                                                                  }
                                                                  *v862 = *(_DWORD *)v863;
                                                                  v1176 = *(int *)(v864 + 20);
                                                                  v1389 = (char *)v862 + v1176;
                                                                  v1142 = &v863[v1176];
                                                                  if (v1409(&v863[v1176], 1, v1399))
                                                                    goto LABEL_588;
                                                                  goto LABEL_628;
                                                                case 0xCu:
                                                                  v950 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v950;
                                                                  v951 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v951;
                                                                  v952 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v952;
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                  v953 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v953;
                                                                  v954 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v954;
                                                                  v955 = *(int *)(type metadata accessor for LinkPresentation.TVSeasonMetadata(0)
                                                                                + 36);
                                                                  v862 = (_DWORD *)(v434 + v955);
                                                                  v863 = &v435[v955];
                                                                  v864 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v865 = *(_QWORD *)(v864 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v865 + 48))(v863, 1, v864))
                                                                  {
                                                                    goto LABEL_523;
                                                                  }
                                                                  *v862 = *(_DWORD *)v863;
                                                                  v1177 = *(int *)(v864 + 20);
                                                                  v1389 = (char *)v862 + v1177;
                                                                  v1142 = &v863[v1177];
                                                                  if (v1409(&v863[v1177], 1, v1399))
                                                                    goto LABEL_588;
                                                                  goto LABEL_628;
                                                                case 0xDu:
                                                                  v956 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v956;
                                                                  v957 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v957;
                                                                  *(_OWORD *)(v434 + 153) = *(_OWORD *)(v435 + 153);
                                                                  v958 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v958;
                                                                  v959 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v959;
                                                                  v960 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v960;
                                                                  v961 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0)
                                                                                + 32);
                                                                  v862 = (_DWORD *)(v434 + v961);
                                                                  v863 = &v435[v961];
                                                                  v864 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v865 = *(_QWORD *)(v864 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v865 + 48))(v863, 1, v864))
                                                                  {
                                                                    goto LABEL_523;
                                                                  }
                                                                  *v862 = *(_DWORD *)v863;
                                                                  v1178 = *(int *)(v864 + 20);
                                                                  v1389 = (char *)v862 + v1178;
                                                                  v1142 = &v863[v1178];
                                                                  if (v1409(&v863[v1178], 1, v1399))
                                                                    goto LABEL_588;
                                                                  goto LABEL_628;
                                                                case 0xEu:
                                                                  v962 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v962;
                                                                  v963 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v963;
                                                                  v964 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v964;
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                  v965 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v965;
                                                                  v966 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v966;
                                                                  v967 = (int *)type metadata accessor for LinkPresentation.MovieMetadata(0);
                                                                  v968 = v967[9];
                                                                  v969 = (_DWORD *)(v434 + v968);
                                                                  v970 = &v435[v968];
                                                                  v971 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v972 = *(_QWORD *)(v971 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v972 + 48))(v970, 1, v971))
                                                                  {
                                                                    v973 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                    memcpy(v969, v970, *(_QWORD *)(*(_QWORD *)(v973 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    __dstu = (char *)v969;
                                                                    *v969 = *(_DWORD *)v970;
                                                                    v1179 = *(int *)(v971 + 20);
                                                                    v1394 = (char *)v969 + v1179;
                                                                    v1180 = &v970[v1179];
                                                                    if (v1409(&v970[v1179], 1, v1399))
                                                                    {
                                                                      v1181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                      memcpy(v1394, v1180, *(_QWORD *)(*(_QWORD *)(v1181 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
                                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1394, v1180, v1399);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1394, 0, 1, v1399);
                                                                    }
                                                                    *(_QWORD *)&__dstu[*(int *)(v971 + 24)] = *(_QWORD *)&v970[*(int *)(v971 + 24)];
                                                                    (*(void (**)(void))(v972 + 56))();
                                                                  }
                                                                  v1230 = v967[10];
                                                                  v1231 = (_OWORD *)(v434 + v1230);
                                                                  v1232 = &v435[v1230];
                                                                  v1233 = *((_OWORD *)v1232 + 5);
                                                                  v1231[4] = *((_OWORD *)v1232 + 4);
                                                                  v1231[5] = v1233;
                                                                  v1231[6] = *((_OWORD *)v1232 + 6);
                                                                  *(_OWORD *)((char *)v1231 + 105) = *(_OWORD *)(v1232 + 105);
                                                                  v1234 = *((_OWORD *)v1232 + 1);
                                                                  *v1231 = *(_OWORD *)v1232;
                                                                  v1231[1] = v1234;
                                                                  v1235 = *((_OWORD *)v1232 + 3);
                                                                  v1231[2] = *((_OWORD *)v1232 + 2);
                                                                  v1231[3] = v1235;
                                                                  *(_OWORD *)(v434 + v967[11]) = *(_OWORD *)&v435[v967[11]];
                                                                  goto LABEL_636;
                                                                case 0xFu:
                                                                  v974 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v974;
                                                                  v975 = *((_OWORD *)v435 + 3);
                                                                  *(_OWORD *)(v434 + 32) = *((_OWORD *)v435 + 2);
                                                                  *(_OWORD *)(v434 + 48) = v975;
                                                                  v976 = *((_OWORD *)v435 + 9);
                                                                  *(_OWORD *)(v434 + 128) = *((_OWORD *)v435 + 8);
                                                                  *(_OWORD *)(v434 + 144) = v976;
                                                                  *(_OWORD *)(v434 + 160) = *((_OWORD *)v435 + 10);
                                                                  *(_OWORD *)(v434 + 169) = *(_OWORD *)(v435 + 169);
                                                                  v977 = *((_OWORD *)v435 + 5);
                                                                  *(_OWORD *)(v434 + 64) = *((_OWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 80) = v977;
                                                                  v978 = *((_OWORD *)v435 + 7);
                                                                  *(_OWORD *)(v434 + 96) = *((_OWORD *)v435 + 6);
                                                                  *(_OWORD *)(v434 + 112) = v978;
                                                                  v979 = *(int *)(type metadata accessor for LinkPresentation.MovieBundleMetadata(0)
                                                                                + 36);
                                                                  v862 = (_DWORD *)(v434 + v979);
                                                                  v863 = &v435[v979];
                                                                  v864 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                                                                  v865 = *(_QWORD *)(v864 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v865 + 48))(v863, 1, v864))
                                                                  {
LABEL_523:
                                                                    v1152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
                                                                    memcpy(v862, v863, *(_QWORD *)(*(_QWORD *)(v1152 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    *v862 = *(_DWORD *)v863;
                                                                    v1182 = *(int *)(v864 + 20);
                                                                    v1389 = (char *)v862 + v1182;
                                                                    v1142 = &v863[v1182];
                                                                    if (v1409(&v863[v1182], 1, v1399))
                                                                    {
LABEL_588:
                                                                      v1204 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                                      memcpy(v1389, v1142, *(_QWORD *)(*(_QWORD *)(v1204 - 8) + 64));
                                                                    }
                                                                    else
                                                                    {
LABEL_628:
                                                                      (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v1389, v1142, v1399);
                                                                      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v1389, 0, 1, v1399);
                                                                    }
                                                                    *(_QWORD *)((char *)v862 + *(int *)(v864 + 24)) = *(_QWORD *)&v863[*(int *)(v864 + 24)];
                                                                    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v865 + 56))(v862, 0, 1, v864);
                                                                  }
LABEL_636:
                                                                  swift_storeEnumTagMultiPayload();
                                                                  a2 = v1406;
                                                                  break;
                                                                case 0x16u:
                                                                  v980 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v980;
                                                                  *(_QWORD *)(v434 + 32) = *((_QWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 104) = *(_OWORD *)(v435 + 104);
                                                                  *(_OWORD *)(v434 + 120) = *(_OWORD *)(v435 + 120);
                                                                  *(_OWORD *)(v434 + 136) = *(_OWORD *)(v435 + 136);
                                                                  *(_OWORD *)(v434 + 145) = *(_OWORD *)(v435 + 145);
                                                                  *(_OWORD *)(v434 + 40) = *(_OWORD *)(v435 + 40);
                                                                  *(_OWORD *)(v434 + 56) = *(_OWORD *)(v435 + 56);
                                                                  *(_OWORD *)(v434 + 72) = *(_OWORD *)(v435 + 72);
                                                                  *(_OWORD *)(v434 + 88) = *(_OWORD *)(v435 + 88);
                                                                  *(_OWORD *)(v434 + 273) = *(_OWORD *)(v435 + 273);
                                                                  *(_OWORD *)(v434 + 264) = *(_OWORD *)(v435 + 264);
                                                                  *(_OWORD *)(v434 + 248) = *(_OWORD *)(v435 + 248);
                                                                  *(_OWORD *)(v434 + 232) = *(_OWORD *)(v435 + 232);
                                                                  *(_OWORD *)(v434 + 216) = *(_OWORD *)(v435 + 216);
                                                                  *(_OWORD *)(v434 + 200) = *(_OWORD *)(v435 + 200);
                                                                  *(_OWORD *)(v434 + 184) = *(_OWORD *)(v435 + 184);
                                                                  *(_OWORD *)(v434 + 168) = *(_OWORD *)(v435 + 168);
                                                                  v981 = *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0)
                                                                                + 36);
                                                                  v982 = (void *)(v434 + v981);
                                                                  v983 = &v435[v981];
                                                                  v984 = sub_1AD63B03C();
                                                                  v985 = *(_QWORD *)(v984 - 8);
                                                                  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v985 + 48))(v983, 1, v984))
                                                                  {
                                                                    v986 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                    memcpy(v982, v983, *(_QWORD *)(*(_QWORD *)(v986 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    (*(void (**)(void *, char *, uint64_t))(v985 + 32))(v982, v983, v984);
                                                                    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v985 + 56))(v982, 0, 1, v984);
                                                                  }
                                                                  goto LABEL_675;
                                                                case 0x1Au:
                                                                  v987 = *((_OWORD *)v435 + 1);
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  *(_OWORD *)(v434 + 16) = v987;
                                                                  *(_QWORD *)(v434 + 32) = *((_QWORD *)v435 + 4);
                                                                  *(_OWORD *)(v434 + 104) = *(_OWORD *)(v435 + 104);
                                                                  *(_OWORD *)(v434 + 120) = *(_OWORD *)(v435 + 120);
                                                                  *(_OWORD *)(v434 + 136) = *(_OWORD *)(v435 + 136);
                                                                  *(_OWORD *)(v434 + 145) = *(_OWORD *)(v435 + 145);
                                                                  *(_OWORD *)(v434 + 40) = *(_OWORD *)(v435 + 40);
                                                                  *(_OWORD *)(v434 + 56) = *(_OWORD *)(v435 + 56);
                                                                  *(_OWORD *)(v434 + 72) = *(_OWORD *)(v435 + 72);
                                                                  *(_OWORD *)(v434 + 88) = *(_OWORD *)(v435 + 88);
                                                                  v988 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
                                                                  v989 = v988[9];
                                                                  v990 = (void *)(v434 + v989);
                                                                  v991 = &v435[v989];
                                                                  v992 = sub_1AD63B03C();
                                                                  v1414 = *(_QWORD **)(v992 - 8);
                                                                  v993 = (unsigned int (*)(char *, uint64_t, uint64_t))v1414[6];
                                                                  if (v993(v991, 1, v992))
                                                                  {
                                                                    v994 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                    memcpy(v990, v991, *(_QWORD *)(*(_QWORD *)(v994 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    ((void (*)(void *, char *, uint64_t))v1414[4])(v990, v991, v992);
                                                                    ((void (*)(void *, _QWORD, uint64_t, uint64_t))v1414[7])(v990, 0, 1, v992);
                                                                  }
                                                                  v1183 = v988[10];
                                                                  v1184 = (void *)(v434 + v1183);
                                                                  v1185 = &v435[v1183];
                                                                  if (v993(&v435[v1183], 1, v992))
                                                                  {
                                                                    v1186 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                    memcpy(v1184, v1185, *(_QWORD *)(*(_QWORD *)(v1186 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    ((void (*)(void *, char *, uint64_t))v1414[4])(v1184, v1185, v992);
                                                                    ((void (*)(void *, _QWORD, uint64_t, uint64_t))v1414[7])(v1184, 0, 1, v992);
                                                                  }
                                                                  v1208 = v988[11];
                                                                  v1188 = (void *)(v434 + v1208);
                                                                  v1189 = &v435[v1208];
                                                                  a2 = v1406;
                                                                  if (v993(v1189, 1, v992))
                                                                    goto LABEL_593;
                                                                  goto LABEL_600;
                                                                case 0x1Eu:
                                                                  *(_OWORD *)v434 = *(_OWORD *)v435;
                                                                  v995 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
                                                                  v996 = *(int *)(v995 + 20);
                                                                  v997 = (void *)(v434 + v996);
                                                                  v998 = &v435[v996];
                                                                  v992 = sub_1AD63B03C();
                                                                  v1414 = *(_QWORD **)(v992 - 8);
                                                                  v999 = (unsigned int (*)(char *, uint64_t, uint64_t))v1414[6];
                                                                  if (v999(v998, 1, v992))
                                                                  {
                                                                    v1000 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                    memcpy(v997, v998, *(_QWORD *)(*(_QWORD *)(v1000 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
                                                                    ((void (*)(void *, char *, uint64_t))v1414[4])(v997, v998, v992);
                                                                    ((void (*)(void *, _QWORD, uint64_t, uint64_t))v1414[7])(v997, 0, 1, v992);
                                                                  }
                                                                  v1187 = *(int *)(v995 + 24);
                                                                  v1188 = (void *)(v434 + v1187);
                                                                  v1189 = &v435[v1187];
                                                                  a2 = v1406;
                                                                  if (v999(v1189, 1, v992))
                                                                  {
LABEL_593:
                                                                    v1209 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                    memcpy(v1188, v1189, *(_QWORD *)(*(_QWORD *)(v1209 - 8) + 64));
                                                                  }
                                                                  else
                                                                  {
LABEL_600:
                                                                    ((void (*)(void *, char *, uint64_t))v1414[4])(v1188, v1189, v992);
                                                                    ((void (*)(void *, _QWORD, uint64_t, uint64_t))v1414[7])(v1188, 0, 1, v992);
                                                                  }
LABEL_675:
                                                                  swift_storeEnumTagMultiPayload();
                                                                  break;
                                                                default:
                                                                  v455 = *(_QWORD *)(v437 + 64);
                                                                  goto LABEL_231;
                                                              }
                                                            }
LABEL_637:
                                                            v1245 = v6[42];
                                                            v1246 = (uint64_t)&a1[v1245];
                                                            v1247 = &a2[v1245];
                                                            if (*(_QWORD *)&a1[v1245 + 8] == 1)
                                                            {
LABEL_640:
                                                              v1249 = *((_OWORD *)v1247 + 9);
                                                              *(_OWORD *)(v1246 + 128) = *((_OWORD *)v1247 + 8);
                                                              *(_OWORD *)(v1246 + 144) = v1249;
                                                              *(_OWORD *)(v1246 + 160) = *((_OWORD *)v1247 + 10);
                                                              *(_QWORD *)(v1246 + 176) = *((_QWORD *)v1247 + 22);
                                                              v1250 = *((_OWORD *)v1247 + 5);
                                                              *(_OWORD *)(v1246 + 64) = *((_OWORD *)v1247 + 4);
                                                              *(_OWORD *)(v1246 + 80) = v1250;
                                                              v1251 = *((_OWORD *)v1247 + 7);
                                                              *(_OWORD *)(v1246 + 96) = *((_OWORD *)v1247 + 6);
                                                              *(_OWORD *)(v1246 + 112) = v1251;
                                                              v1252 = *((_OWORD *)v1247 + 1);
                                                              *(_OWORD *)v1246 = *(_OWORD *)v1247;
                                                              *(_OWORD *)(v1246 + 16) = v1252;
                                                              v1253 = *((_OWORD *)v1247 + 3);
                                                              *(_OWORD *)(v1246 + 32) = *((_OWORD *)v1247 + 2);
                                                              *(_OWORD *)(v1246 + 48) = v1253;
                                                              goto LABEL_647;
                                                            }
                                                            v1248 = *((_QWORD *)v1247 + 1);
                                                            if (v1248 == 1)
                                                            {
                                                              sub_1AD06626C(v1246);
                                                              goto LABEL_640;
                                                            }
                                                            *(_QWORD *)v1246 = *(_QWORD *)v1247;
                                                            *(_QWORD *)(v1246 + 8) = v1248;
                                                            swift_bridgeObjectRelease();
                                                            if (*(_QWORD *)(v1246 + 32) != 1)
                                                            {
                                                              v1254 = *((_QWORD *)v1247 + 4);
                                                              if (v1254 != 1)
                                                              {
                                                                *(_OWORD *)(v1246 + 16) = *((_OWORD *)v1247 + 1);
                                                                *(_QWORD *)(v1246 + 32) = v1254;
                                                                swift_bridgeObjectRelease();
                                                                *(_OWORD *)(v1246 + 40) = *(_OWORD *)(v1247 + 40);
                                                                *(_QWORD *)(v1246 + 56) = *((_QWORD *)v1247 + 7);
                                                                swift_bridgeObjectRelease();
                                                                v1258 = *((_OWORD *)v1247 + 5);
                                                                *(_OWORD *)(v1246 + 64) = *((_OWORD *)v1247 + 4);
                                                                *(_OWORD *)(v1246 + 80) = v1258;
                                                                *(_BYTE *)(v1246 + 96) = v1247[96];
                                                                *(_OWORD *)(v1246 + 104) = *(_OWORD *)(v1247 + 104);
                                                                *(_OWORD *)(v1246 + 120) = *(_OWORD *)(v1247 + 120);
                                                                *(_BYTE *)(v1246 + 136) = v1247[136];
                                                                goto LABEL_646;
                                                              }
                                                              sub_1AD0661D0(v1246 + 16);
                                                            }
                                                            v1255 = *((_OWORD *)v1247 + 6);
                                                            *(_OWORD *)(v1246 + 80) = *((_OWORD *)v1247 + 5);
                                                            *(_OWORD *)(v1246 + 96) = v1255;
                                                            *(_OWORD *)(v1246 + 112) = *((_OWORD *)v1247 + 7);
                                                            *(_OWORD *)(v1246 + 121) = *(_OWORD *)(v1247 + 121);
                                                            v1256 = *((_OWORD *)v1247 + 2);
                                                            *(_OWORD *)(v1246 + 16) = *((_OWORD *)v1247 + 1);
                                                            *(_OWORD *)(v1246 + 32) = v1256;
                                                            v1257 = *((_OWORD *)v1247 + 4);
                                                            *(_OWORD *)(v1246 + 48) = *((_OWORD *)v1247 + 3);
                                                            *(_OWORD *)(v1246 + 64) = v1257;
LABEL_646:
                                                            v1259 = *((_QWORD *)v1247 + 19);
                                                            *(_QWORD *)(v1246 + 144) = *((_QWORD *)v1247 + 18);
                                                            *(_QWORD *)(v1246 + 152) = v1259;
                                                            swift_bridgeObjectRelease();
                                                            v1260 = *((_QWORD *)v1247 + 21);
                                                            *(_QWORD *)(v1246 + 160) = *((_QWORD *)v1247 + 20);
                                                            *(_QWORD *)(v1246 + 168) = v1260;
                                                            swift_bridgeObjectRelease();
                                                            *(_QWORD *)(v1246 + 176) = *((_QWORD *)v1247 + 22);
LABEL_647:
                                                            v1261 = v6[43];
                                                            v1262 = &a1[v1261];
                                                            v1263 = &a2[v1261];
                                                            v1264 = (int *)type metadata accessor for CollaborationMetadata();
                                                            v1265 = *((_QWORD *)v1264 - 1);
                                                            v1266 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v1265 + 48);
                                                            v1267 = v1266(v1262, 1, v1264);
                                                            v1268 = v1266(v1263, 1, v1264);
                                                            if (v1267)
                                                            {
                                                              if (!v1268)
                                                              {
                                                                v1269 = a2;
                                                                v1270 = *((_OWORD *)v1263 + 1);
                                                                *(_OWORD *)v1262 = *(_OWORD *)v1263;
                                                                *((_OWORD *)v1262 + 1) = v1270;
                                                                v1271 = v1264[6];
                                                                v1272 = &v1262[v1271];
                                                                v1273 = &v1263[v1271];
                                                                v1274 = sub_1AD63B03C();
                                                                v1275 = *(_QWORD *)(v1274 - 8);
                                                                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1275 + 48))(v1273, 1, v1274))
                                                                {
                                                                  v1276 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                                  memcpy(v1272, v1273, *(_QWORD *)(*(_QWORD *)(v1276 - 8) + 64));
                                                                }
                                                                else
                                                                {
                                                                  (*(void (**)(char *, char *, uint64_t))(v1275 + 32))(v1272, v1273, v1274);
                                                                  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1275 + 56))(v1272, 0, 1, v1274);
                                                                }
                                                                a2 = v1269;
                                                                *(_OWORD *)&v1262[v1264[7]] = *(_OWORD *)&v1263[v1264[7]];
                                                                *(_QWORD *)&v1262[v1264[8]] = *(_QWORD *)&v1263[v1264[8]];
                                                                *(_QWORD *)&v1262[v1264[9]] = *(_QWORD *)&v1263[v1264[9]];
                                                                v1288 = v1264[10];
                                                                v1289 = &v1262[v1288];
                                                                v1290 = &v1263[v1288];
                                                                v1291 = *((_OWORD *)v1290 + 5);
                                                                *((_OWORD *)v1289 + 4) = *((_OWORD *)v1290 + 4);
                                                                *((_OWORD *)v1289 + 5) = v1291;
                                                                v1292 = *((_OWORD *)v1290 + 7);
                                                                *((_OWORD *)v1289 + 6) = *((_OWORD *)v1290 + 6);
                                                                *((_OWORD *)v1289 + 7) = v1292;
                                                                v1293 = *((_OWORD *)v1290 + 1);
                                                                *(_OWORD *)v1289 = *(_OWORD *)v1290;
                                                                *((_OWORD *)v1289 + 1) = v1293;
                                                                v1294 = *((_OWORD *)v1290 + 3);
                                                                *((_OWORD *)v1289 + 2) = *((_OWORD *)v1290 + 2);
                                                                *((_OWORD *)v1289 + 3) = v1294;
                                                                (*(void (**)(char *, _QWORD, uint64_t, int *))(v1265 + 56))(v1262, 0, 1, v1264);
                                                                goto LABEL_659;
                                                              }
                                                              goto LABEL_653;
                                                            }
                                                            if (v1268)
                                                            {
                                                              sub_1AD066230((uint64_t)v1262, (uint64_t (*)(_QWORD))type metadata accessor for CollaborationMetadata);
LABEL_653:
                                                              v1277 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
                                                              memcpy(v1262, v1263, *(_QWORD *)(*(_QWORD *)(v1277 - 8) + 64));
                                                              goto LABEL_659;
                                                            }
                                                            v1278 = *((_QWORD *)v1263 + 1);
                                                            *(_QWORD *)v1262 = *(_QWORD *)v1263;
                                                            *((_QWORD *)v1262 + 1) = v1278;
                                                            swift_bridgeObjectRelease();
                                                            v1279 = *((_QWORD *)v1263 + 3);
                                                            *((_QWORD *)v1262 + 2) = *((_QWORD *)v1263 + 2);
                                                            *((_QWORD *)v1262 + 3) = v1279;
                                                            swift_bridgeObjectRelease();
                                                            v1280 = v1264[6];
                                                            v1281 = &v1262[v1280];
                                                            v1282 = &v1263[v1280];
                                                            v1283 = sub_1AD63B03C();
                                                            v1284 = *(_QWORD *)(v1283 - 8);
                                                            v1285 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v1284 + 48);
                                                            v1286 = v1285(v1281, 1, v1283);
                                                            v1287 = v1285(v1282, 1, v1283);
                                                            if (v1286)
                                                            {
                                                              if (!v1287)
                                                              {
                                                                (*(void (**)(char *, char *, uint64_t))(v1284 + 32))(v1281, v1282, v1283);
                                                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1284 + 56))(v1281, 0, 1, v1283);
LABEL_664:
                                                                v1297 = v1264[7];
                                                                v1298 = &v1262[v1297];
                                                                v1299 = (uint64_t *)&v1263[v1297];
                                                                v1301 = *v1299;
                                                                v1300 = v1299[1];
                                                                *(_QWORD *)v1298 = v1301;
                                                                *((_QWORD *)v1298 + 1) = v1300;
                                                                swift_bridgeObjectRelease();
                                                                *(_QWORD *)&v1262[v1264[8]] = *(_QWORD *)&v1263[v1264[8]];
                                                                swift_bridgeObjectRelease();
                                                                *(_QWORD *)&v1262[v1264[9]] = *(_QWORD *)&v1263[v1264[9]];
                                                                swift_bridgeObjectRelease();
                                                                v1302 = v1264[10];
                                                                v1303 = (uint64_t)&v1262[v1302];
                                                                v1304 = &v1263[v1302];
                                                                a2 = v1406;
                                                                if (*(_QWORD *)(v1303 + 112))
                                                                {
                                                                  a3 = v1405;
                                                                  if (*((_QWORD *)v1304 + 14))
                                                                  {
                                                                    *(_BYTE *)v1303 = *v1304;
                                                                    *(_OWORD *)(v1303 + 8) = *(_OWORD *)(v1304 + 8);
                                                                    *(_QWORD *)(v1303 + 24) = *((_QWORD *)v1304 + 3);
                                                                    swift_bridgeObjectRelease();
                                                                    v1305 = *((_QWORD *)v1304 + 5);
                                                                    *(_QWORD *)(v1303 + 32) = *((_QWORD *)v1304 + 4);
                                                                    *(_QWORD *)(v1303 + 40) = v1305;
                                                                    swift_bridgeObjectRelease();
                                                                    v1306 = *((_QWORD *)v1304 + 7);
                                                                    *(_QWORD *)(v1303 + 48) = *((_QWORD *)v1304 + 6);
                                                                    *(_QWORD *)(v1303 + 56) = v1306;
                                                                    swift_bridgeObjectRelease();
                                                                    v1307 = *((_QWORD *)v1304 + 9);
                                                                    *(_QWORD *)(v1303 + 64) = *((_QWORD *)v1304 + 8);
                                                                    *(_QWORD *)(v1303 + 72) = v1307;
                                                                    swift_bridgeObjectRelease();
                                                                    v1308 = *((_QWORD *)v1304 + 11);
                                                                    *(_QWORD *)(v1303 + 80) = *((_QWORD *)v1304 + 10);
                                                                    *(_QWORD *)(v1303 + 88) = v1308;
                                                                    swift_bridgeObjectRelease();
                                                                    *(_BYTE *)(v1303 + 96) = v1304[96];
                                                                    v1309 = *((_QWORD *)v1304 + 14);
                                                                    *(_QWORD *)(v1303 + 104) = *((_QWORD *)v1304 + 13);
                                                                    *(_QWORD *)(v1303 + 112) = v1309;
                                                                    swift_bridgeObjectRelease();
                                                                    *(_QWORD *)(v1303 + 120) = *((_QWORD *)v1304 + 15);
                                                                  }
                                                                  else
                                                                  {
                                                                    sub_1AD066298(v1303);
                                                                    v1314 = *((_OWORD *)v1304 + 5);
                                                                    *(_OWORD *)(v1303 + 64) = *((_OWORD *)v1304 + 4);
                                                                    *(_OWORD *)(v1303 + 80) = v1314;
                                                                    v1315 = *((_OWORD *)v1304 + 7);
                                                                    *(_OWORD *)(v1303 + 96) = *((_OWORD *)v1304 + 6);
                                                                    *(_OWORD *)(v1303 + 112) = v1315;
                                                                    v1316 = *((_OWORD *)v1304 + 1);
                                                                    *(_OWORD *)v1303 = *(_OWORD *)v1304;
                                                                    *(_OWORD *)(v1303 + 16) = v1316;
                                                                    v1317 = *((_OWORD *)v1304 + 3);
                                                                    *(_OWORD *)(v1303 + 32) = *((_OWORD *)v1304 + 2);
                                                                    *(_OWORD *)(v1303 + 48) = v1317;
                                                                  }
                                                                  goto LABEL_660;
                                                                }
                                                                v1310 = *((_OWORD *)v1304 + 5);
                                                                *(_OWORD *)(v1303 + 64) = *((_OWORD *)v1304 + 4);
                                                                *(_OWORD *)(v1303 + 80) = v1310;
                                                                v1311 = *((_OWORD *)v1304 + 7);
                                                                *(_OWORD *)(v1303 + 96) = *((_OWORD *)v1304 + 6);
                                                                *(_OWORD *)(v1303 + 112) = v1311;
                                                                v1312 = *((_OWORD *)v1304 + 1);
                                                                *(_OWORD *)v1303 = *(_OWORD *)v1304;
                                                                *(_OWORD *)(v1303 + 16) = v1312;
                                                                v1313 = *((_OWORD *)v1304 + 3);
                                                                *(_OWORD *)(v1303 + 32) = *((_OWORD *)v1304 + 2);
                                                                *(_OWORD *)(v1303 + 48) = v1313;
LABEL_659:
                                                                a3 = v1405;
                                                                goto LABEL_660;
                                                              }
                                                            }
                                                            else
                                                            {
                                                              if (!v1287)
                                                              {
                                                                (*(void (**)(char *, char *, uint64_t))(v1284 + 40))(v1281, v1282, v1283);
                                                                goto LABEL_664;
                                                              }
                                                              (*(void (**)(char *, uint64_t))(v1284 + 8))(v1281, v1283);
                                                            }
                                                            v1296 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
                                                            memcpy(v1281, v1282, *(_QWORD *)(*(_QWORD *)(v1296 - 8) + 64));
                                                            goto LABEL_664;
                                                          }
                                                          sub_1AD066230(v434, type metadata accessor for LinkPresentation.SpecializationMetadata);
                                                        }
                                                        v455 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0)
                                                                                     - 8)
                                                                         + 64);
LABEL_231:
                                                        memcpy((void *)v434, v435, v455);
                                                        goto LABEL_637;
                                                      }
                                                    }
                                                    else
                                                    {
                                                      if (!v421)
                                                      {
                                                        (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v418, v419, v1399);
                                                        goto LABEL_221;
                                                      }
                                                      (*(void (**)(char *, uint64_t))(v1396 + 8))(v418, v1399);
                                                    }
                                                    v422 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                    memcpy(v418, v419, *(_QWORD *)(*(_QWORD *)(v422 - 8) + 64));
                                                    goto LABEL_221;
                                                  }
LABEL_196:
                                                  v395 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
                                                  memcpy(v387, v388, *(_QWORD *)(*(_QWORD *)(v395 - 8) + 64));
                                                  goto LABEL_206;
                                                }
                                                if (v393)
                                                {
                                                  sub_1AD066230((uint64_t)v387, type metadata accessor for LinkPresentation.Audio);
                                                  goto LABEL_196;
                                                }
                                                v396 = v1409(v387, 1, v1399);
                                                v397 = v1409(v388, 1, v1399);
                                                if (v396)
                                                {
                                                  if (!v397)
                                                  {
                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v387, v388, v1399);
                                                    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v387, 0, 1, v1399);
LABEL_205:
                                                    v399 = *(int *)(v389 + 20);
                                                    v400 = &v387[v399];
                                                    v401 = &v388[v399];
                                                    v403 = *(_QWORD *)v401;
                                                    v402 = *((_QWORD *)v401 + 1);
                                                    *(_QWORD *)v400 = v403;
                                                    *((_QWORD *)v400 + 1) = v402;
                                                    swift_bridgeObjectRelease();
                                                    goto LABEL_206;
                                                  }
                                                }
                                                else
                                                {
                                                  if (!v397)
                                                  {
                                                    (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v387, v388, v1399);
                                                    goto LABEL_205;
                                                  }
                                                  (*(void (**)(char *, uint64_t))(v1396 + 8))(v387, v1399);
                                                }
                                                v398 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                                memcpy(v387, v388, *(_QWORD *)(*(_QWORD *)(v398 - 8) + 64));
                                                goto LABEL_205;
                                              }
LABEL_180:
                                              v369 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
                                              memcpy(v358, v359, *(_QWORD *)(*(_QWORD *)(v369 - 8) + 64));
                                              goto LABEL_190;
                                            }
                                            if (v364)
                                            {
                                              sub_1AD066230((uint64_t)v358, type metadata accessor for LinkPresentation.VideoMetadata);
                                              goto LABEL_180;
                                            }
                                            *(_DWORD *)v358 = *(_DWORD *)v359;
                                            v370 = v360[5];
                                            v371 = &v358[v370];
                                            v372 = &v359[v370];
                                            v373 = v1409(&v358[v370], 1, v1399);
                                            v374 = v1409(v372, 1, v1399);
                                            if (v373)
                                            {
                                              if (!v374)
                                              {
                                                (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v371, v372, v1399);
                                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v371, 0, 1, v1399);
LABEL_189:
                                                v376 = v360[6];
                                                v377 = &v358[v376];
                                                v378 = (uint64_t *)&v359[v376];
                                                v380 = *v378;
                                                v379 = v378[1];
                                                *(_QWORD *)v377 = v380;
                                                *((_QWORD *)v377 + 1) = v379;
                                                swift_bridgeObjectRelease();
                                                *(_OWORD *)&v358[v360[7]] = *(_OWORD *)&v359[v360[7]];
                                                v381 = v360[8];
                                                v382 = &v358[v381];
                                                v383 = (uint64_t *)&v359[v381];
                                                v385 = *v383;
                                                v384 = v383[1];
                                                *(_QWORD *)v382 = v385;
                                                *((_QWORD *)v382 + 1) = v384;
                                                swift_bridgeObjectRelease();
                                                a2 = v1406;
                                                goto LABEL_190;
                                              }
                                            }
                                            else
                                            {
                                              if (!v374)
                                              {
                                                (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v371, v372, v1399);
                                                goto LABEL_189;
                                              }
                                              (*(void (**)(char *, uint64_t))(v1396 + 8))(v371, v1399);
                                            }
                                            v375 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                            memcpy(v371, v372, *(_QWORD *)(*(_QWORD *)(v375 - 8) + 64));
                                            goto LABEL_189;
                                          }
LABEL_155:
                                          v330 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
                                          memcpy(v323, v324, *(_QWORD *)(*(_QWORD *)(v330 - 8) + 64));
                                          goto LABEL_174;
                                        }
                                        if (v328)
                                        {
                                          sub_1AD066230((uint64_t)v323, type metadata accessor for LinkPresentation.Video);
                                          goto LABEL_155;
                                        }
                                        v331 = v1409(v323, 1, v1399);
                                        v332 = v1409(v324, 1, v1399);
                                        if (v331)
                                        {
                                          if (!v332)
                                          {
                                            (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v323, v324, v1399);
                                            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v323, 0, 1, v1399);
                                            goto LABEL_167;
                                          }
                                        }
                                        else
                                        {
                                          if (!v332)
                                          {
                                            (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v323, v324, v1399);
LABEL_167:
                                            v341 = v325[5];
                                            v342 = &v323[v341];
                                            v343 = &v324[v341];
                                            v344 = v1409(&v323[v341], 1, v1399);
                                            v345 = v1409(v343, 1, v1399);
                                            if (v344)
                                            {
                                              if (!v345)
                                              {
                                                (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v342, v343, v1399);
                                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v342, 0, 1, v1399);
LABEL_173:
                                                v347 = v325[6];
                                                v348 = &v323[v347];
                                                v349 = &v324[v347];
                                                v351 = *(_QWORD *)v349;
                                                v350 = *((_QWORD *)v349 + 1);
                                                *(_QWORD *)v348 = v351;
                                                *((_QWORD *)v348 + 1) = v350;
                                                swift_bridgeObjectRelease();
                                                v323[v325[7]] = v324[v325[7]];
                                                *(_QWORD *)&v323[v325[8]] = *(_QWORD *)&v324[v325[8]];
                                                swift_release();
                                                v352 = v325[9];
                                                v353 = &v323[v352];
                                                v354 = &v324[v352];
                                                *v353 = *v354;
                                                v356 = *((_QWORD *)v354 + 1);
                                                v355 = *((_QWORD *)v354 + 2);
                                                *((_QWORD *)v353 + 1) = v356;
                                                *((_QWORD *)v353 + 2) = v355;
                                                swift_bridgeObjectRelease();
                                                a2 = v1406;
                                                goto LABEL_174;
                                              }
                                            }
                                            else
                                            {
                                              if (!v345)
                                              {
                                                (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v342, v343, v1399);
                                                goto LABEL_173;
                                              }
                                              (*(void (**)(char *, uint64_t))(v1396 + 8))(v342, v1399);
                                            }
                                            v346 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                            memcpy(v342, v343, *(_QWORD *)(*(_QWORD *)(v346 - 8) + 64));
                                            goto LABEL_173;
                                          }
                                          (*(void (**)(char *, uint64_t))(v1396 + 8))(v323, v1399);
                                        }
                                        v340 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                        memcpy(v323, v324, *(_QWORD *)(*(_QWORD *)(v340 - 8) + 64));
                                        goto LABEL_167;
                                      }
LABEL_139:
                                      v305 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
                                      memcpy(v294, v295, *(_QWORD *)(*(_QWORD *)(v305 - 8) + 64));
                                      goto LABEL_149;
                                    }
                                    if (v300)
                                    {
                                      sub_1AD066230((uint64_t)v294, type metadata accessor for LinkPresentation.ImageMetadata);
                                      goto LABEL_139;
                                    }
                                    *(_DWORD *)v294 = *(_DWORD *)v295;
                                    v306 = v296[5];
                                    v307 = &v294[v306];
                                    v308 = &v295[v306];
                                    v309 = v1409(&v294[v306], 1, v1399);
                                    v310 = v1409(v308, 1, v1399);
                                    if (v309)
                                    {
                                      if (!v310)
                                      {
                                        (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v307, v308, v1399);
                                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v307, 0, 1, v1399);
LABEL_148:
                                        v312 = v296[6];
                                        v313 = &v294[v312];
                                        v314 = (uint64_t *)&v295[v312];
                                        v316 = *v314;
                                        v315 = v314[1];
                                        *(_QWORD *)v313 = v316;
                                        *((_QWORD *)v313 + 1) = v315;
                                        swift_bridgeObjectRelease();
                                        *(_OWORD *)&v294[v296[7]] = *(_OWORD *)&v295[v296[7]];
                                        v317 = v296[8];
                                        v318 = &v294[v317];
                                        v319 = (uint64_t *)&v295[v317];
                                        v321 = *v319;
                                        v320 = v319[1];
                                        *(_QWORD *)v318 = v321;
                                        *((_QWORD *)v318 + 1) = v320;
                                        swift_bridgeObjectRelease();
                                        a2 = v1406;
                                        goto LABEL_149;
                                      }
                                    }
                                    else
                                    {
                                      if (!v310)
                                      {
                                        (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v307, v308, v1399);
                                        goto LABEL_148;
                                      }
                                      (*(void (**)(char *, uint64_t))(v1396 + 8))(v307, v1399);
                                    }
                                    v311 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                                    memcpy(v307, v308, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
                                    goto LABEL_148;
                                  }
                                  sub_1AD0661D0(v286);
                                }
                                v289 = *((_OWORD *)v287 + 5);
                                *(_OWORD *)(v286 + 64) = *((_OWORD *)v287 + 4);
                                *(_OWORD *)(v286 + 80) = v289;
                                *(_OWORD *)(v286 + 96) = *((_OWORD *)v287 + 6);
                                *(_OWORD *)(v286 + 105) = *(_OWORD *)(v287 + 105);
                                v290 = *((_OWORD *)v287 + 1);
                                *(_OWORD *)v286 = *(_OWORD *)v287;
                                *(_OWORD *)(v286 + 16) = v290;
                                v291 = *((_OWORD *)v287 + 3);
                                *(_OWORD *)(v286 + 32) = *((_OWORD *)v287 + 2);
                                *(_OWORD *)(v286 + 48) = v291;
                                goto LABEL_133;
                              }
LABEL_118:
                              v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
                              memcpy(v257, v258, *(_QWORD *)(*(_QWORD *)(v268 - 8) + 64));
                              goto LABEL_128;
                            }
                            if (v263)
                            {
                              sub_1AD066230((uint64_t)v257, type metadata accessor for LinkPresentation.ARAssetMetadata);
                              goto LABEL_118;
                            }
                            *(_DWORD *)v257 = *(_DWORD *)v258;
                            v269 = v259[5];
                            v270 = &v257[v269];
                            v271 = &v258[v269];
                            v272 = v1409(&v257[v269], 1, v1399);
                            v273 = v1409(v271, 1, v1399);
                            if (v272)
                            {
                              if (!v273)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v270, v271, v1399);
                                (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v270, 0, 1, v1399);
LABEL_127:
                                v275 = v259[6];
                                v276 = &v257[v275];
                                v277 = (uint64_t *)&v258[v275];
                                v279 = *v277;
                                v278 = v277[1];
                                *(_QWORD *)v276 = v279;
                                *((_QWORD *)v276 + 1) = v278;
                                swift_bridgeObjectRelease();
                                v280 = v259[7];
                                v281 = &v257[v280];
                                v282 = (uint64_t *)&v258[v280];
                                v284 = *v282;
                                v283 = v282[1];
                                *(_QWORD *)v281 = v284;
                                *((_QWORD *)v281 + 1) = v283;
                                swift_bridgeObjectRelease();
                                a2 = v1406;
                                goto LABEL_128;
                              }
                            }
                            else
                            {
                              if (!v273)
                              {
                                (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v270, v271, v1399);
                                goto LABEL_127;
                              }
                              (*(void (**)(char *, uint64_t))(v1396 + 8))(v270, v1399);
                            }
                            v274 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                            memcpy(v270, v271, *(_QWORD *)(*(_QWORD *)(v274 - 8) + 64));
                            goto LABEL_127;
                          }
                          sub_1AD066200(v251);
                        }
                        v254 = *((_OWORD *)v252 + 1);
                        *(_OWORD *)v251 = *(_OWORD *)v252;
                        *(_OWORD *)(v251 + 16) = v254;
                        *(_QWORD *)(v251 + 32) = *((_QWORD *)v252 + 4);
                        goto LABEL_112;
                      }
LABEL_48:
                      v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
                      memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
                      goto LABEL_107;
                    }
                    if (v141)
                    {
                      sub_1AD066230((uint64_t)v135, type metadata accessor for LinkPresentation.IconMetadata);
                      goto LABEL_48;
                    }
                    *(_DWORD *)v135 = *(_DWORD *)v136;
                    v239 = *(int *)(v137 + 20);
                    v240 = &v135[v239];
                    v241 = &v136[v239];
                    v242 = v1409(&v135[v239], 1, v1399);
                    v243 = v1409(v241, 1, v1399);
                    if (v242)
                    {
                      if (!v243)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v1396 + 32))(v240, v241, v1399);
                        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1396 + 56))(v240, 0, 1, v1399);
LABEL_106:
                        v245 = *(int *)(v137 + 24);
                        v246 = &v135[v245];
                        v247 = (uint64_t *)&v136[v245];
                        v249 = *v247;
                        v248 = v247[1];
                        *(_QWORD *)v246 = v249;
                        *((_QWORD *)v246 + 1) = v248;
                        swift_bridgeObjectRelease();
                        a2 = v1406;
                        goto LABEL_107;
                      }
                    }
                    else
                    {
                      if (!v243)
                      {
                        (*(void (**)(char *, char *, uint64_t))(v1396 + 40))(v240, v241, v1399);
                        goto LABEL_106;
                      }
                      (*(void (**)(char *, uint64_t))(v1396 + 8))(v240, v1399);
                    }
                    v244 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
                    memcpy(v240, v241, *(_QWORD *)(*(_QWORD *)(v244 - 8) + 64));
                    goto LABEL_106;
                  }
                  sub_1AD0661D0(v127);
                }
                v130 = *((_OWORD *)v128 + 5);
                *(_OWORD *)(v127 + 64) = *((_OWORD *)v128 + 4);
                *(_OWORD *)(v127 + 80) = v130;
                *(_OWORD *)(v127 + 96) = *((_OWORD *)v128 + 6);
                *(_OWORD *)(v127 + 105) = *(_OWORD *)(v128 + 105);
                v131 = *((_OWORD *)v128 + 1);
                *(_OWORD *)v127 = *(_OWORD *)v128;
                *(_OWORD *)(v127 + 16) = v131;
                v132 = *((_OWORD *)v128 + 3);
                *(_OWORD *)(v127 + 32) = *((_OWORD *)v128 + 2);
                *(_OWORD *)(v127 + 48) = v132;
                goto LABEL_42;
              }
              (*(void (**)(char *, uint64_t))(v1396 + 8))(v87, v21);
            }
            v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v87, v88, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
            goto LABEL_37;
          }
          (*(void (**)(char *, uint64_t))(v1396 + 8))(v56, v21);
        }
        v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v56, v57, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
        goto LABEL_31;
      }
      (*(void (**)(char *, uint64_t))(v1396 + 8))(v19, v21);
    }
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    goto LABEL_25;
  }
  if (v10)
  {
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_660;
  }
  v1404 = a3;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v11 = v6[5];
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_1AD63AF28();
  v15 = *(_QWORD *)(v14 - 8);
  v1408 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v1408(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v25 = v6[6];
  v26 = &a1[v25];
  v27 = &a2[v25];
  if (v1408(&a2[v25], 1, v14))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v26, v27, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v26, 0, 1, v14);
  }
  *(_OWORD *)&a1[v6[7]] = *(_OWORD *)&a2[v6[7]];
  *(_OWORD *)&a1[v6[8]] = *(_OWORD *)&a2[v6[8]];
  *(_OWORD *)&a1[v6[9]] = *(_OWORD *)&a2[v6[9]];
  *(_OWORD *)&a1[v6[10]] = *(_OWORD *)&a2[v6[10]];
  *(_OWORD *)&a1[v6[11]] = *(_OWORD *)&a2[v6[11]];
  v29 = v6[12];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v1378 = (void (**)(char *, _QWORD, uint64_t, int *))v7;
  v1397 = v15;
  if (v1408(&a2[v29], 1, v14))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v30, v31, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v30, 0, 1, v14);
  }
  *(_OWORD *)&a1[v6[13]] = *(_OWORD *)&a2[v6[13]];
  *(_OWORD *)&a1[v6[14]] = *(_OWORD *)&a2[v6[14]];
  *(_OWORD *)&a1[v6[15]] = *(_OWORD *)&a2[v6[15]];
  *(_OWORD *)&a1[v6[16]] = *(_OWORD *)&a2[v6[16]];
  a1[v6[17]] = a2[v6[17]];
  v33 = v6[18];
  v34 = &a1[v33];
  v35 = &a2[v33];
  v36 = *((_OWORD *)v35 + 1);
  *(_OWORD *)v34 = *(_OWORD *)v35;
  *((_OWORD *)v34 + 1) = v36;
  v34[32] = v35[32];
  *(_OWORD *)&a1[v6[19]] = *(_OWORD *)&a2[v6[19]];
  *(_OWORD *)&a1[v6[20]] = *(_OWORD *)&a2[v6[20]];
  v37 = v6[21];
  v38 = &a1[v37];
  v39 = &a2[v37];
  v40 = *((_OWORD *)v39 + 3);
  *((_OWORD *)v38 + 2) = *((_OWORD *)v39 + 2);
  *((_OWORD *)v38 + 3) = v40;
  v41 = *((_OWORD *)v39 + 1);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *((_OWORD *)v38 + 1) = v41;
  *(_OWORD *)(v38 + 105) = *(_OWORD *)(v39 + 105);
  v42 = *((_OWORD *)v39 + 6);
  v43 = *((_OWORD *)v39 + 4);
  *((_OWORD *)v38 + 5) = *((_OWORD *)v39 + 5);
  *((_OWORD *)v38 + 6) = v42;
  *((_OWORD *)v38 + 4) = v43;
  v44 = v6[22];
  v45 = &a1[v44];
  v46 = &a2[v44];
  v47 = type metadata accessor for LinkPresentation.IconMetadata(0);
  v48 = *(_QWORD *)(v47 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v46, 1, v47))
  {
    v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v45 = *(_DWORD *)v46;
    v50 = *(int *)(v47 + 20);
    v51 = &v45[v50];
    v52 = &v46[v50];
    if (v1408(&v46[v50], 1, v14))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v51, v52, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v51, 0, 1, v14);
    }
    *(_OWORD *)&v45[*(int *)(v47 + 24)] = *(_OWORD *)&v46[*(int *)(v47 + 24)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
  }
  v147 = v6[23];
  v148 = &a1[v147];
  v149 = &a2[v147];
  v150 = *((_OWORD *)v149 + 1);
  *(_OWORD *)v148 = *(_OWORD *)v149;
  *((_OWORD *)v148 + 1) = v150;
  *((_QWORD *)v148 + 4) = *((_QWORD *)v149 + 4);
  v151 = v6[24];
  v152 = &a1[v151];
  v153 = &a2[v151];
  v154 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
  v155 = *((_QWORD *)v154 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v155 + 48))(v153, 1, v154))
  {
    v156 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
    memcpy(v152, v153, *(_QWORD *)(*(_QWORD *)(v156 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v152 = *(_DWORD *)v153;
    v157 = v154[5];
    v158 = &v152[v157];
    v159 = &v153[v157];
    if (v1408(&v153[v157], 1, v14))
    {
      v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v158, v159, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v158, v159, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v158, 0, 1, v14);
    }
    *(_OWORD *)&v152[v154[6]] = *(_OWORD *)&v153[v154[6]];
    *(_OWORD *)&v152[v154[7]] = *(_OWORD *)&v153[v154[7]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v155 + 56))(v152, 0, 1, v154);
  }
  v161 = v6[25];
  v162 = &a1[v161];
  v163 = &a2[v161];
  v164 = *((_OWORD *)v163 + 1);
  *(_OWORD *)v162 = *(_OWORD *)v163;
  *((_OWORD *)v162 + 1) = v164;
  v165 = *((_OWORD *)v163 + 3);
  *((_OWORD *)v162 + 2) = *((_OWORD *)v163 + 2);
  *((_OWORD *)v162 + 3) = v165;
  *(_OWORD *)(v162 + 105) = *(_OWORD *)(v163 + 105);
  v166 = *((_OWORD *)v163 + 6);
  v167 = *((_OWORD *)v163 + 4);
  *((_OWORD *)v162 + 5) = *((_OWORD *)v163 + 5);
  *((_OWORD *)v162 + 6) = v166;
  *((_OWORD *)v162 + 4) = v167;
  *(_QWORD *)&a1[v6[26]] = *(_QWORD *)&a2[v6[26]];
  v168 = v6[27];
  v169 = &a1[v168];
  v1407 = a2;
  v170 = &a2[v168];
  v171 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
  v172 = *((_QWORD *)v171 - 1);
  v1400 = v14;
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v172 + 48))(v170, 1, v171))
  {
    v173 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
    memcpy(v169, v170, *(_QWORD *)(*(_QWORD *)(v173 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v169 = *(_DWORD *)v170;
    v174 = v171[5];
    v175 = &v169[v174];
    v176 = &v170[v174];
    if (v1408(&v170[v174], 1, v14))
    {
      v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v175, v176, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v175, 0, 1, v14);
    }
    *(_OWORD *)&v169[v171[6]] = *(_OWORD *)&v170[v171[6]];
    *(_OWORD *)&v169[v171[7]] = *(_OWORD *)&v170[v171[7]];
    *(_OWORD *)&v169[v171[8]] = *(_OWORD *)&v170[v171[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v172 + 56))(v169, 0, 1, v171);
  }
  v178 = v1407;
  *(_QWORD *)&a1[v6[28]] = *(_QWORD *)((char *)v1407 + v6[28]);
  *(_QWORD *)&a1[v6[29]] = *(_QWORD *)((char *)v1407 + v6[29]);
  v179 = v6[30];
  v180 = &a1[v179];
  v181 = (char *)v1407 + v179;
  v182 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v1370 = (_QWORD *)*((_QWORD *)v182 - 1);
  __dst = (unsigned int (*)(char *, uint64_t, int *))v1370[6];
  if (__dst(v181, 1, v182))
  {
    v183 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
  }
  else
  {
    if (v1408(v181, 1, v1400))
    {
      v184 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v184 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v180, v181, v1400);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v180, 0, 1, v1400);
    }
    v185 = v182[5];
    v186 = &v180[v185];
    v187 = &v181[v185];
    if (v1408(&v181[v185], 1, v1400))
    {
      v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v186, v187, *(_QWORD *)(*(_QWORD *)(v188 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v186, v187, v1400);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v186, 0, 1, v1400);
    }
    *(_OWORD *)&v180[v182[6]] = *(_OWORD *)&v181[v182[6]];
    v180[v182[7]] = v181[v182[7]];
    *(_QWORD *)&v180[v182[8]] = *(_QWORD *)&v181[v182[8]];
    v189 = v182[9];
    v190 = &v180[v189];
    v191 = &v181[v189];
    *(_OWORD *)v190 = *(_OWORD *)v191;
    *((_QWORD *)v190 + 2) = *((_QWORD *)v191 + 2);
    ((void (*)(char *, _QWORD, uint64_t, int *))v1370[7])(v180, 0, 1, v182);
  }
  v192 = v6[31];
  v193 = &a1[v192];
  v194 = (_DWORD *)((char *)v1407 + v192);
  v195 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
  v196 = *((_QWORD *)v195 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v196 + 48))(v194, 1, v195))
  {
    v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
    memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v193 = *v194;
    v198 = v195[5];
    v199 = &v193[v198];
    v200 = (char *)v194 + v198;
    if (v1408((char *)v194 + v198, 1, v1400))
    {
      v201 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v201 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v199, v200, v1400);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v199, 0, 1, v1400);
    }
    *(_OWORD *)&v193[v195[6]] = *(_OWORD *)((char *)v194 + v195[6]);
    *(_OWORD *)&v193[v195[7]] = *(_OWORD *)((char *)v194 + v195[7]);
    *(_OWORD *)&v193[v195[8]] = *(_OWORD *)((char *)v194 + v195[8]);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v196 + 56))(v193, 0, 1, v195);
    v178 = v1407;
  }
  v202 = v6[32];
  v203 = &a1[v202];
  v204 = (char *)v178 + v202;
  v205 = type metadata accessor for LinkPresentation.Audio(0);
  v206 = *(_QWORD *)(v205 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v204, 1, v205))
  {
    v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
    memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
  }
  else
  {
    if (v1408(v204, 1, v1400))
    {
      v208 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v208 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v203, v204, v1400);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v203, 0, 1, v1400);
    }
    *(_OWORD *)&v203[*(int *)(v205 + 20)] = *(_OWORD *)&v204[*(int *)(v205 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v203, 0, 1, v205);
  }
  v209 = v6[33];
  v210 = &a1[v209];
  v211 = (_DWORD *)((char *)v178 + v209);
  v212 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
  v213 = *((_QWORD *)v212 - 1);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v213 + 48))(v211, 1, v212))
  {
    v214 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
    memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v214 - 8) + 64));
  }
  else
  {
    *(_DWORD *)v210 = *v211;
    v215 = v212[5];
    v216 = &v210[v215];
    v217 = (char *)v211 + v215;
    if (v1408((char *)v211 + v215, 1, v1400))
    {
      v218 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v216, v217, *(_QWORD *)(*(_QWORD *)(v218 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v216, v217, v1400);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v216, 0, 1, v1400);
    }
    *(_OWORD *)&v210[v212[6]] = *(_OWORD *)((char *)v211 + v212[6]);
    *(_OWORD *)&v210[v212[7]] = *(_OWORD *)((char *)v211 + v212[7]);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v213 + 56))(v210, 0, 1, v212);
    v178 = v1407;
  }
  *(_QWORD *)&a1[v6[34]] = *(_QWORD *)((char *)v178 + v6[34]);
  *(_QWORD *)&a1[v6[35]] = *(_QWORD *)((char *)v178 + v6[35]);
  *(_QWORD *)&a1[v6[36]] = *(_QWORD *)((char *)v178 + v6[36]);
  *(_QWORD *)&a1[v6[37]] = *(_QWORD *)((char *)v178 + v6[37]);
  *(_QWORD *)&a1[v6[38]] = *(_QWORD *)((char *)v178 + v6[38]);
  *(_QWORD *)&a1[v6[39]] = *(_QWORD *)((char *)v178 + v6[39]);
  *(_QWORD *)&a1[v6[40]] = *(_QWORD *)((char *)v178 + v6[40]);
  v219 = v6[41];
  v220 = &a1[v219];
  v221 = (_OWORD *)((char *)v178 + v219);
  v222 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
  v223 = *(size_t **)(v222 - 8);
  if (((unsigned int (*)(_OWORD *, uint64_t, uint64_t))v223[6])(v221, 1, v222))
  {
    v224 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
    memcpy(v220, v221, *(_QWORD *)(*(_QWORD *)(v224 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v225 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v225;
        v226 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v226;
        v227 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v227;
        v228 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v228;
        v229 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v229;
        *(_OWORD *)(v220 + 201) = *(_OWORD *)((char *)v221 + 201);
        v230 = v221[12];
        v231 = v221[10];
        *((_OWORD *)v220 + 11) = v221[11];
        *((_OWORD *)v220 + 12) = v230;
        *((_OWORD *)v220 + 10) = v231;
        __dsta = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
        v232 = __dsta[11];
        v233 = &v220[v232];
        v234 = (_DWORD *)((char *)v221 + v232);
        v235 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v236 = *(_QWORD *)(v235 - 8);
        v1332 = v223;
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v236 + 48))(v234, 1, v235))
        {
          v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
          v238 = v1400;
        }
        else
        {
          *(_DWORD *)v233 = *v234;
          v624 = *(int *)(v235 + 20);
          v1322 = v233;
          v1329 = &v233[v624];
          v625 = (char *)v234 + v624;
          v238 = v1400;
          if (v1408((char *)v234 + v624, 1, v1400))
          {
            v626 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v1329, v625, *(_QWORD *)(*(_QWORD *)(v626 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v1329, v625, v1400);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v1329, 0, 1, v1400);
          }
          *(_QWORD *)((char *)v1322 + *(int *)(v235 + 24)) = *(_QWORD *)((char *)v234 + *(int *)(v235 + 24));
          (*(void (**)(void))(v236 + 56))();
        }
        v1001 = __dsta;
        v1002 = __dsta[12];
        v1003 = &v220[v1002];
        v1004 = (char *)v221 + v1002;
        v1005 = v1408((char *)v221 + v1002, 1, v238);
        v1006 = v238;
        v178 = v1407;
        if (v1005)
        {
          v1007 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v1003, v1004, *(_QWORD *)(*(_QWORD *)(v1007 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v1003, v1004, v1006);
          v1001 = __dsta;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v1003, 0, 1, v1006);
        }
        *(_QWORD *)&v220[v1001[13]] = *(_QWORD *)((char *)v221 + v1001[13]);
        v1008 = v1001[14];
        v1009 = &v220[v1008];
        v1010 = (_OWORD *)((char *)v221 + v1008);
        v1011 = v1010[1];
        *(_OWORD *)v1009 = *v1010;
        *((_OWORD *)v1009 + 1) = v1011;
        *((_OWORD *)v1009 + 2) = v1010[2];
        *(_OWORD *)(v1009 + 41) = *(_OWORD *)((char *)v1010 + 41);
        goto LABEL_471;
      case 1u:
        v470 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v470;
        v471 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v471;
        v472 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v472;
        *((_OWORD *)v220 + 10) = v221[10];
        *(_OWORD *)(v220 + 169) = *(_OWORD *)((char *)v221 + 169);
        v473 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v473;
        v474 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v474;
        v475 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
        v476 = *(int *)(v475 + 36);
        __dstc = &v220[v476];
        v477 = (_DWORD *)((char *)v221 + v476);
        v478 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v479 = *(_QWORD *)(v478 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v479 + 48))(v477, 1, v478))
        {
          v480 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(__dstc, v477, *(_QWORD *)(*(_QWORD *)(v480 - 8) + 64));
        }
        else
        {
          v1323 = v479;
          v1335 = v223;
          *(_DWORD *)__dstc = *v477;
          v774 = *(int *)(v478 + 20);
          v775 = &__dstc[v774];
          v776 = (char *)v477 + v774;
          if (v1408((char *)v477 + v774, 1, v1400))
          {
            v777 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v775, v776, *(_QWORD *)(*(_QWORD *)(v777 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v775, v776, v1400);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v775, 0, 1, v1400);
          }
          *(_QWORD *)&__dstc[*(int *)(v478 + 24)] = *(_QWORD *)((char *)v477 + *(int *)(v478 + 24));
          (*(void (**)(void))(v1323 + 56))();
          v223 = v1335;
        }
        *(_QWORD *)&v220[*(int *)(v475 + 40)] = *(_QWORD *)((char *)v221 + *(int *)(v475 + 40));
        goto LABEL_497;
      case 2u:
        v481 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v481;
        v482 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v482;
        v483 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v483;
        *((_OWORD *)v220 + 10) = v221[10];
        *(_OWORD *)(v220 + 169) = *(_OWORD *)((char *)v221 + 169);
        v484 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v484;
        v485 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v485;
        v486 = *(int *)(type metadata accessor for LinkPresentation.MusicVideoMetadata(0) + 36);
        v487 = &v220[v486];
        v488 = (char *)v221 + v486;
        v489 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v490 = *(_QWORD *)(v489 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v490 + 48))(v488, 1, v489))
          goto LABEL_328;
        *(_DWORD *)v487 = *(_DWORD *)v488;
        v778 = *(int *)(v489 + 20);
        v1333 = v223;
        __dsth = &v487[v778];
        v779 = &v488[v778];
        if (v1408(&v488[v778], 1, v1400))
          goto LABEL_361;
        goto LABEL_481;
      case 3u:
        v491 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v491;
        v492 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v492;
        v493 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v493;
        *((_OWORD *)v220 + 10) = v221[10];
        *(_OWORD *)(v220 + 169) = *(_OWORD *)((char *)v221 + 169);
        v494 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v494;
        v495 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v495;
        v496 = *(int *)(type metadata accessor for LinkPresentation.ArtistMetadata(0) + 36);
        v487 = &v220[v496];
        v488 = (char *)v221 + v496;
        v489 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v490 = *(_QWORD *)(v489 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v490 + 48))(v488, 1, v489))
          goto LABEL_328;
        *(_DWORD *)v487 = *(_DWORD *)v488;
        v780 = *(int *)(v489 + 20);
        v1333 = v223;
        __dsth = &v487[v780];
        v779 = &v488[v780];
        if (v1408(&v488[v780], 1, v1400))
          goto LABEL_361;
        goto LABEL_481;
      case 4u:
        v1333 = v223;
        v497 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v497;
        v498 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v498;
        v499 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
        v500 = v499[8];
        v501 = &v220[v500];
        v502 = (char *)v221 + v500;
        if (v1408((char *)v221 + v500, 1, v1400))
        {
          v503 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v501, v502, *(_QWORD *)(*(_QWORD *)(v503 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v501, v502, v1400);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v501, 0, 1, v1400);
        }
        *(_OWORD *)&v220[v499[9]] = *(_OWORD *)((char *)v221 + v499[9]);
        v781 = v499[10];
        v782 = &v220[v781];
        v783 = (_OWORD *)((char *)v221 + v781);
        v784 = v783[3];
        *((_OWORD *)v782 + 2) = v783[2];
        *((_OWORD *)v782 + 3) = v784;
        v785 = v783[1];
        *(_OWORD *)v782 = *v783;
        *((_OWORD *)v782 + 1) = v785;
        *(_OWORD *)(v782 + 105) = *(_OWORD *)((char *)v783 + 105);
        v786 = v783[6];
        v787 = v783[4];
        *((_OWORD *)v782 + 5) = v783[5];
        *((_OWORD *)v782 + 6) = v786;
        *((_OWORD *)v782 + 4) = v787;
        v788 = v499[11];
        v487 = &v220[v788];
        v488 = (char *)v221 + v788;
        v489 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v490 = *(_QWORD *)(v489 - 8);
        v223 = v1333;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v490 + 48))(v488, 1, v489))
          goto LABEL_328;
        *(_DWORD *)v487 = *(_DWORD *)v488;
        v832 = *(int *)(v489 + 20);
        __dsth = &v487[v832];
        v779 = &v488[v832];
        if (v1408(&v488[v832], 1, v1400))
          goto LABEL_361;
        goto LABEL_481;
      case 5u:
        v504 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v504;
        v505 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v505;
        v506 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v506;
        *((_OWORD *)v220 + 10) = v221[10];
        *(_OWORD *)(v220 + 169) = *(_OWORD *)((char *)v221 + 169);
        v507 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v507;
        v508 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v508;
        v509 = *(int *)(type metadata accessor for LinkPresentation.RadioMetadata(0) + 36);
        v487 = &v220[v509];
        v488 = (char *)v221 + v509;
        v489 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v490 = *(_QWORD *)(v489 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v490 + 48))(v488, 1, v489))
          goto LABEL_328;
        *(_DWORD *)v487 = *(_DWORD *)v488;
        v790 = *(int *)(v489 + 20);
        v1333 = v223;
        __dsth = &v487[v790];
        v779 = &v488[v790];
        if (v1408(&v488[v790], 1, v1400))
          goto LABEL_361;
        goto LABEL_481;
      case 6u:
        v510 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v510;
        v511 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v511;
        v512 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v512;
        v513 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v513;
        v514 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v514;
        *(_OWORD *)(v220 + 201) = *(_OWORD *)((char *)v221 + 201);
        v515 = v221[12];
        v516 = v221[10];
        *((_OWORD *)v220 + 11) = v221[11];
        *((_OWORD *)v220 + 12) = v515;
        *((_OWORD *)v220 + 10) = v516;
        *((_QWORD *)v220 + 28) = *((_QWORD *)v221 + 28);
        v517 = (int *)type metadata accessor for LinkPresentation.SoftwareMetadata(0);
        v518 = v517[12];
        v519 = &v220[v518];
        v520 = (char *)v221 + v518;
        if (__dst((char *)v221 + v518, 1, v182))
        {
          v521 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
          memcpy(v519, v520, *(_QWORD *)(*(_QWORD *)(v521 - 8) + 64));
        }
        else
        {
          v1336 = v223;
          if (v1408(v520, 1, v1400))
          {
            v791 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            v792 = v519;
            memcpy(v519, v520, *(_QWORD *)(*(_QWORD *)(v791 - 8) + 64));
          }
          else
          {
            v792 = v519;
            (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v519, v520, v1400);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v519, 0, 1, v1400);
          }
          v1069 = v182[5];
          v1331 = &v792[v1069];
          v1070 = &v520[v1069];
          if (v1408(&v520[v1069], 1, v1400))
          {
            v1071 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v1331, v1070, *(_QWORD *)(*(_QWORD *)(v1071 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v1331, v1070, v1400);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v1331, 0, 1, v1400);
          }
          *(_OWORD *)&v519[v182[6]] = *(_OWORD *)&v520[v182[6]];
          v519[v182[7]] = v520[v182[7]];
          *(_QWORD *)&v519[v182[8]] = *(_QWORD *)&v520[v182[8]];
          v1090 = v182[9];
          v1091 = &v519[v1090];
          v1092 = &v520[v1090];
          *(_OWORD *)v1091 = *(_OWORD *)v1092;
          *((_QWORD *)v1091 + 2) = *((_QWORD *)v1092 + 2);
          ((void (*)(void))v1370[7])();
          v223 = v1336;
        }
        v220[v517[13]] = *((_BYTE *)v221 + v517[13]);
        v1093 = v517[14];
        v1094 = &v220[v1093];
        v1095 = (_OWORD *)((char *)v221 + v1093);
        v1096 = v1095[5];
        *((_OWORD *)v1094 + 4) = v1095[4];
        *((_OWORD *)v1094 + 5) = v1096;
        *((_OWORD *)v1094 + 6) = v1095[6];
        *(_OWORD *)(v1094 + 105) = *(_OWORD *)((char *)v1095 + 105);
        v1097 = v1095[1];
        *(_OWORD *)v1094 = *v1095;
        *((_OWORD *)v1094 + 1) = v1097;
        v1098 = v1095[3];
        *((_OWORD *)v1094 + 2) = v1095[2];
        *((_OWORD *)v1094 + 3) = v1098;
        goto LABEL_497;
      case 7u:
        v522 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v522;
        v523 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v523;
        v524 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v524;
        *((_OWORD *)v220 + 10) = v221[10];
        *(_OWORD *)(v220 + 169) = *(_OWORD *)((char *)v221 + 169);
        v525 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v525;
        v526 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v526;
        v527 = type metadata accessor for LinkPresentation.BookMetadata(0);
        v528 = *(int *)(v527 + 36);
        __dstd = &v220[v528];
        v529 = (_DWORD *)((char *)v221 + v528);
        v530 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v531 = *(_QWORD *)(v530 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v531 + 48))(v529, 1, v530))
        {
          v532 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(__dstd, v529, *(_QWORD *)(*(_QWORD *)(v532 - 8) + 64));
        }
        else
        {
          v1324 = v531;
          v1337 = v223;
          *(_DWORD *)__dstd = *v529;
          v793 = *(int *)(v530 + 20);
          v794 = &__dstd[v793];
          v795 = (char *)v529 + v793;
          if (v1408((char *)v529 + v793, 1, v1400))
          {
            v796 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v794, v795, *(_QWORD *)(*(_QWORD *)(v796 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v794, v795, v1400);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v794, 0, 1, v1400);
          }
          *(_QWORD *)&__dstd[*(int *)(v530 + 24)] = *(_QWORD *)((char *)v529 + *(int *)(v530 + 24));
          (*(void (**)(void))(v1324 + 56))();
          v223 = v1337;
        }
        v220[*(int *)(v527 + 40)] = *((_BYTE *)v221 + *(int *)(v527 + 40));
        goto LABEL_497;
      case 8u:
        v533 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v533;
        v534 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v534;
        v535 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v535;
        v536 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v536;
        *(_OWORD *)(v220 + 185) = *(_OWORD *)((char *)v221 + 185);
        v537 = v221[11];
        *((_OWORD *)v220 + 10) = v221[10];
        *((_OWORD *)v220 + 11) = v537;
        v538 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v538;
        __dste = (int *)type metadata accessor for LinkPresentation.AudioBookMetadata(0);
        v539 = __dste[10];
        v540 = &v220[v539];
        v541 = (_DWORD *)((char *)v221 + v539);
        v542 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v543 = *(_QWORD *)(v542 - 8);
        v1332 = v223;
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v543 + 48))(v541, 1, v542))
        {
          v544 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v540, v541, *(_QWORD *)(*(_QWORD *)(v544 - 8) + 64));
          v545 = v1400;
        }
        else
        {
          *(_DWORD *)v540 = *v541;
          v797 = *(int *)(v542 + 20);
          v1325 = v540;
          v1330 = &v540[v797];
          v798 = (char *)v541 + v797;
          v545 = v1400;
          if (v1408((char *)v541 + v797, 1, v1400))
          {
            v799 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v1330, v798, *(_QWORD *)(*(_QWORD *)(v799 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v1330, v798, v1400);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v1330, 0, 1, v1400);
          }
          *(_QWORD *)((char *)v1325 + *(int *)(v542 + 24)) = *(_QWORD *)((char *)v541 + *(int *)(v542 + 24));
          (*(void (**)(void))(v543 + 56))();
        }
        v1072 = __dste[11];
        v1073 = &v220[v1072];
        v1074 = (char *)v221 + v1072;
        v1075 = v1408(v1074, 1, v545);
        v1076 = v545;
        v178 = v1407;
        if (v1075)
        {
          v1077 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v1073, v1074, *(_QWORD *)(*(_QWORD *)(v1077 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v1073, v1074, v1076);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v1073, 0, 1, v1076);
        }
        goto LABEL_471;
      case 9u:
        v1334 = v223;
        v546 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v546;
        v547 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v547;
        *((_OWORD *)v220 + 4) = v221[4];
        v548 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
        v549 = v548[9];
        v550 = &v220[v549];
        v551 = (char *)v221 + v549;
        v552 = sub_1AD63B03C();
        v553 = *(_QWORD *)(v552 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v553 + 48))(v551, 1, v552))
        {
          v554 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v550, v551, *(_QWORD *)(*(_QWORD *)(v554 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v553 + 32))(v550, v551, v552);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v553 + 56))(v550, 0, 1, v552);
        }
        v800 = v548[10];
        v801 = &v220[v800];
        v802 = (_OWORD *)((char *)v221 + v800);
        v803 = v802[5];
        *((_OWORD *)v801 + 4) = v802[4];
        *((_OWORD *)v801 + 5) = v803;
        *((_OWORD *)v801 + 6) = v802[6];
        *(_OWORD *)(v801 + 105) = *(_OWORD *)((char *)v802 + 105);
        v804 = v802[1];
        *(_OWORD *)v801 = *v802;
        *((_OWORD *)v801 + 1) = v804;
        v805 = v802[3];
        *((_OWORD *)v801 + 2) = v802[2];
        *((_OWORD *)v801 + 3) = v805;
        v806 = v548[11];
        v807 = &v220[v806];
        __dsti = v548;
        v808 = (_DWORD *)((char *)v221 + v806);
        v809 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v810 = *(_QWORD *)(v809 - 8);
        v223 = v1334;
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v810 + 48))(v808, 1, v809))
        {
          v811 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v807, v808, *(_QWORD *)(*(_QWORD *)(v811 - 8) + 64));
        }
        else
        {
          v1328 = v810;
          *(_DWORD *)v807 = *v808;
          v834 = *(int *)(v809 + 20);
          v835 = &v807[v834];
          v836 = (char *)v808 + v834;
          if (v1408((char *)v808 + v834, 1, v1400))
          {
            v837 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v835, v836, *(_QWORD *)(*(_QWORD *)(v837 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v835, v836, v1400);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v835, 0, 1, v1400);
          }
          *(_QWORD *)&v807[*(int *)(v809 + 24)] = *(_QWORD *)((char *)v808 + *(int *)(v809 + 24));
          (*(void (**)(void))(v1328 + 56))();
          v223 = v1334;
        }
        *(_QWORD *)&v220[__dsti[12]] = *(_QWORD *)((char *)v221 + __dsti[12]);
        goto LABEL_497;
      case 0xAu:
        v555 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v555;
        v556 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v556;
        v557 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v557;
        *((_OWORD *)v220 + 10) = v221[10];
        *(_OWORD *)(v220 + 169) = *(_OWORD *)((char *)v221 + 169);
        v558 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v558;
        v559 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v559;
        v560 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
        v561 = *(int *)(v560 + 36);
        __dstf = &v220[v561];
        v562 = (_DWORD *)((char *)v221 + v561);
        v563 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v564 = *(_QWORD *)(v563 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v564 + 48))(v562, 1, v563))
        {
          v565 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(__dstf, v562, *(_QWORD *)(*(_QWORD *)(v565 - 8) + 64));
        }
        else
        {
          v1326 = v564;
          v1338 = v223;
          *(_DWORD *)__dstf = *v562;
          v812 = *(int *)(v563 + 20);
          v813 = &__dstf[v812];
          v814 = (char *)v562 + v812;
          if (v1408((char *)v562 + v812, 1, v1400))
          {
            v815 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v813, v814, *(_QWORD *)(*(_QWORD *)(v815 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v813, v814, v1400);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v813, 0, 1, v1400);
          }
          *(_QWORD *)&__dstf[*(int *)(v563 + 24)] = *(_QWORD *)((char *)v562 + *(int *)(v563 + 24));
          (*(void (**)(void))(v1326 + 56))();
          v223 = v1338;
        }
        *(_QWORD *)&v220[*(int *)(v560 + 40)] = *(_QWORD *)((char *)v221 + *(int *)(v560 + 40));
        goto LABEL_497;
      case 0xBu:
        v566 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v566;
        v567 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v567;
        v568 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v568;
        v569 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v569;
        *(_OWORD *)(v220 + 185) = *(_OWORD *)((char *)v221 + 185);
        v570 = v221[11];
        *((_OWORD *)v220 + 10) = v221[10];
        *((_OWORD *)v220 + 11) = v570;
        v571 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v571;
        v572 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
        v487 = &v220[v572];
        v488 = (char *)v221 + v572;
        v489 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v490 = *(_QWORD *)(v489 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v490 + 48))(v488, 1, v489))
          goto LABEL_328;
        *(_DWORD *)v487 = *(_DWORD *)v488;
        v816 = *(int *)(v489 + 20);
        v1333 = v223;
        __dsth = &v487[v816];
        v779 = &v488[v816];
        if (v1408(&v488[v816], 1, v1400))
          goto LABEL_361;
        goto LABEL_481;
      case 0xCu:
        v573 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v573;
        v574 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v574;
        v575 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v575;
        *((_OWORD *)v220 + 10) = v221[10];
        *(_OWORD *)(v220 + 169) = *(_OWORD *)((char *)v221 + 169);
        v576 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v576;
        v577 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v577;
        v578 = *(int *)(type metadata accessor for LinkPresentation.TVSeasonMetadata(0) + 36);
        v487 = &v220[v578];
        v488 = (char *)v221 + v578;
        v489 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v490 = *(_QWORD *)(v489 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v490 + 48))(v488, 1, v489))
          goto LABEL_328;
        *(_DWORD *)v487 = *(_DWORD *)v488;
        v817 = *(int *)(v489 + 20);
        v1333 = v223;
        __dsth = &v487[v817];
        v779 = &v488[v817];
        if (v1408(&v488[v817], 1, v1400))
          goto LABEL_361;
        goto LABEL_481;
      case 0xDu:
        v579 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v579;
        v580 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v580;
        *(_OWORD *)(v220 + 153) = *(_OWORD *)((char *)v221 + 153);
        v581 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v581;
        v582 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v582;
        v583 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v583;
        v584 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
        v487 = &v220[v584];
        v488 = (char *)v221 + v584;
        v489 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v490 = *(_QWORD *)(v489 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v490 + 48))(v488, 1, v489))
          goto LABEL_328;
        *(_DWORD *)v487 = *(_DWORD *)v488;
        v818 = *(int *)(v489 + 20);
        v1333 = v223;
        __dsth = &v487[v818];
        v779 = &v488[v818];
        if (v1408(&v488[v818], 1, v1400))
          goto LABEL_361;
        goto LABEL_481;
      case 0xEu:
        v585 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v585;
        v586 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v586;
        v587 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v587;
        *((_OWORD *)v220 + 10) = v221[10];
        *(_OWORD *)(v220 + 169) = *(_OWORD *)((char *)v221 + 169);
        v588 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v588;
        v589 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v589;
        v590 = (int *)type metadata accessor for LinkPresentation.MovieMetadata(0);
        v591 = v590[9];
        __dstg = &v220[v591];
        v592 = (_DWORD *)((char *)v221 + v591);
        v593 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v594 = *(_QWORD *)(v593 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v594 + 48))(v592, 1, v593))
        {
          v595 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(__dstg, v592, *(_QWORD *)(*(_QWORD *)(v595 - 8) + 64));
        }
        else
        {
          v1327 = v594;
          v1339 = v223;
          *(_DWORD *)__dstg = *v592;
          v819 = *(int *)(v593 + 20);
          v820 = &__dstg[v819];
          v821 = (char *)v592 + v819;
          if (v1408((char *)v592 + v819, 1, v1400))
          {
            v822 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v820, v821, *(_QWORD *)(*(_QWORD *)(v822 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(v820, v821, v1400);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(v820, 0, 1, v1400);
          }
          *(_QWORD *)&__dstg[*(int *)(v593 + 24)] = *(_QWORD *)((char *)v592 + *(int *)(v593 + 24));
          (*(void (**)(void))(v1327 + 56))();
          v223 = v1339;
        }
        v1078 = v590[10];
        v1079 = &v220[v1078];
        v1080 = (_OWORD *)((char *)v221 + v1078);
        v1081 = v1080[5];
        *((_OWORD *)v1079 + 4) = v1080[4];
        *((_OWORD *)v1079 + 5) = v1081;
        *((_OWORD *)v1079 + 6) = v1080[6];
        *(_OWORD *)(v1079 + 105) = *(_OWORD *)((char *)v1080 + 105);
        v1082 = v1080[1];
        *(_OWORD *)v1079 = *v1080;
        *((_OWORD *)v1079 + 1) = v1082;
        v1083 = v1080[3];
        *((_OWORD *)v1079 + 2) = v1080[2];
        *((_OWORD *)v1079 + 3) = v1083;
        *(_OWORD *)&v220[v590[11]] = *(_OWORD *)((char *)v221 + v590[11]);
        goto LABEL_497;
      case 0xFu:
        v596 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v596;
        v597 = v221[3];
        *((_OWORD *)v220 + 2) = v221[2];
        *((_OWORD *)v220 + 3) = v597;
        v598 = v221[9];
        *((_OWORD *)v220 + 8) = v221[8];
        *((_OWORD *)v220 + 9) = v598;
        *((_OWORD *)v220 + 10) = v221[10];
        *(_OWORD *)(v220 + 169) = *(_OWORD *)((char *)v221 + 169);
        v599 = v221[5];
        *((_OWORD *)v220 + 4) = v221[4];
        *((_OWORD *)v220 + 5) = v599;
        v600 = v221[7];
        *((_OWORD *)v220 + 6) = v221[6];
        *((_OWORD *)v220 + 7) = v600;
        v601 = *(int *)(type metadata accessor for LinkPresentation.MovieBundleMetadata(0) + 36);
        v487 = &v220[v601];
        v488 = (char *)v221 + v601;
        v489 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v490 = *(_QWORD *)(v489 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v490 + 48))(v488, 1, v489))
        {
LABEL_328:
          v789 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v487, v488, *(_QWORD *)(*(_QWORD *)(v789 - 8) + 64));
        }
        else
        {
          *(_DWORD *)v487 = *(_DWORD *)v488;
          v823 = *(int *)(v489 + 20);
          v1333 = v223;
          __dsth = &v487[v823];
          v779 = &v488[v823];
          if (v1408(&v488[v823], 1, v1400))
          {
LABEL_361:
            v833 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(__dsth, v779, *(_QWORD *)(*(_QWORD *)(v833 - 8) + 64));
          }
          else
          {
LABEL_481:
            (*(void (**)(char *, char *, uint64_t))(v1397 + 32))(__dsth, v779, v1400);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1397 + 56))(__dsth, 0, 1, v1400);
          }
          *(_QWORD *)&v487[*(int *)(v489 + 24)] = *(_QWORD *)&v488[*(int *)(v489 + 24)];
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v490 + 56))(v487, 0, 1, v489);
          v223 = v1333;
        }
LABEL_497:
        swift_storeEnumTagMultiPayload();
        v178 = v1407;
        break;
      case 0x16u:
        v602 = v223;
        v603 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v603;
        *((_QWORD *)v220 + 4) = *((_QWORD *)v221 + 4);
        *(_OWORD *)(v220 + 104) = *(_OWORD *)((char *)v221 + 104);
        *(_OWORD *)(v220 + 120) = *(_OWORD *)((char *)v221 + 120);
        *(_OWORD *)(v220 + 136) = *(_OWORD *)((char *)v221 + 136);
        *(_OWORD *)(v220 + 145) = *(_OWORD *)((char *)v221 + 145);
        *(_OWORD *)(v220 + 40) = *(_OWORD *)((char *)v221 + 40);
        *(_OWORD *)(v220 + 56) = *(_OWORD *)((char *)v221 + 56);
        *(_OWORD *)(v220 + 72) = *(_OWORD *)((char *)v221 + 72);
        *(_OWORD *)(v220 + 88) = *(_OWORD *)((char *)v221 + 88);
        *(_OWORD *)(v220 + 273) = *(_OWORD *)((char *)v221 + 273);
        *(_OWORD *)(v220 + 264) = *(_OWORD *)((char *)v221 + 264);
        *(_OWORD *)(v220 + 248) = *(_OWORD *)((char *)v221 + 248);
        *(_OWORD *)(v220 + 232) = *(_OWORD *)((char *)v221 + 232);
        *(_OWORD *)(v220 + 216) = *(_OWORD *)((char *)v221 + 216);
        *(_OWORD *)(v220 + 200) = *(_OWORD *)((char *)v221 + 200);
        *(_OWORD *)(v220 + 184) = *(_OWORD *)((char *)v221 + 184);
        *(_OWORD *)(v220 + 168) = *(_OWORD *)((char *)v221 + 168);
        v604 = *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
        v605 = &v220[v604];
        v606 = (char *)v221 + v604;
        v607 = sub_1AD63B03C();
        v608 = *(_QWORD *)(v607 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v608 + 48))(v606, 1, v607))
        {
          v609 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v605, v606, *(_QWORD *)(*(_QWORD *)(v609 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v608 + 32))(v605, v606, v607);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v608 + 56))(v605, 0, 1, v607);
        }
        swift_storeEnumTagMultiPayload();
        v223 = v602;
        break;
      case 0x1Au:
        v1332 = v223;
        v610 = v221[1];
        *(_OWORD *)v220 = *v221;
        *((_OWORD *)v220 + 1) = v610;
        *((_QWORD *)v220 + 4) = *((_QWORD *)v221 + 4);
        *(_OWORD *)(v220 + 104) = *(_OWORD *)((char *)v221 + 104);
        *(_OWORD *)(v220 + 120) = *(_OWORD *)((char *)v221 + 120);
        *(_OWORD *)(v220 + 136) = *(_OWORD *)((char *)v221 + 136);
        *(_OWORD *)(v220 + 145) = *(_OWORD *)((char *)v221 + 145);
        *(_OWORD *)(v220 + 40) = *(_OWORD *)((char *)v221 + 40);
        *(_OWORD *)(v220 + 56) = *(_OWORD *)((char *)v221 + 56);
        *(_OWORD *)(v220 + 72) = *(_OWORD *)((char *)v221 + 72);
        *(_OWORD *)(v220 + 88) = *(_OWORD *)((char *)v221 + 88);
        v1410 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
        v611 = v1410[9];
        v612 = &v220[v611];
        v613 = (char *)v221 + v611;
        v614 = sub_1AD63B03C();
        v615 = *(_QWORD *)(v614 - 8);
        v616 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v615 + 48);
        if (v616(v613, 1, v614))
        {
          v617 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v612, v613, *(_QWORD *)(*(_QWORD *)(v617 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v615 + 32))(v612, v613, v614);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v615 + 56))(v612, 0, 1, v614);
        }
        v824 = v1410[10];
        v825 = &v220[v824];
        v826 = (char *)v221 + v824;
        v1401 = v615;
        if (v616((char *)v221 + v824, 1, v614))
        {
          v827 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v825, v826, *(_QWORD *)(*(_QWORD *)(v827 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v615 + 32))(v825, v826, v614);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v615 + 56))(v825, 0, 1, v614);
        }
        v838 = v1410[11];
        v829 = &v220[v838];
        v830 = (char *)v221 + v838;
        v178 = v1407;
        if (v616(v830, 1, v614))
          goto LABEL_359;
        goto LABEL_367;
      case 0x1Eu:
        v1332 = v223;
        *(_OWORD *)v220 = *v221;
        v618 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
        v619 = *(int *)(v618 + 20);
        v1411 = &v220[v619];
        v620 = (char *)v221 + v619;
        v614 = sub_1AD63B03C();
        v621 = *(_QWORD *)(v614 - 8);
        v622 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v621 + 48);
        v1401 = v621;
        if (v622(v620, 1, v614))
        {
          v623 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v1411, v620, *(_QWORD *)(*(_QWORD *)(v623 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v621 + 32))(v1411, v620, v614);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v621 + 56))(v1411, 0, 1, v614);
        }
        v828 = *(int *)(v618 + 24);
        v829 = &v220[v828];
        v830 = (char *)v221 + v828;
        v178 = v1407;
        if (v622(v830, 1, v614))
        {
LABEL_359:
          v831 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v829, v830, *(_QWORD *)(*(_QWORD *)(v831 - 8) + 64));
        }
        else
        {
LABEL_367:
          (*(void (**)(char *, char *, uint64_t))(v1401 + 32))(v829, v830, v614);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1401 + 56))(v829, 0, 1, v614);
        }
LABEL_471:
        swift_storeEnumTagMultiPayload();
        v223 = v1332;
        break;
      default:
        memcpy(v220, v221, v223[8]);
        break;
    }
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v223[7])(v220, 0, 1, v222);
  }
  v1099 = v6[42];
  v1100 = &a1[v1099];
  v1101 = (uint64_t)v178 + v1099;
  v1102 = *(_OWORD *)(v1101 + 144);
  *((_OWORD *)v1100 + 8) = *(_OWORD *)(v1101 + 128);
  *((_OWORD *)v1100 + 9) = v1102;
  *((_OWORD *)v1100 + 10) = *(_OWORD *)(v1101 + 160);
  *((_QWORD *)v1100 + 22) = *(_QWORD *)(v1101 + 176);
  v1103 = *(_OWORD *)(v1101 + 80);
  *((_OWORD *)v1100 + 4) = *(_OWORD *)(v1101 + 64);
  *((_OWORD *)v1100 + 5) = v1103;
  v1104 = *(_OWORD *)(v1101 + 112);
  *((_OWORD *)v1100 + 6) = *(_OWORD *)(v1101 + 96);
  *((_OWORD *)v1100 + 7) = v1104;
  v1105 = *(_OWORD *)(v1101 + 16);
  *(_OWORD *)v1100 = *(_OWORD *)v1101;
  *((_OWORD *)v1100 + 1) = v1105;
  v1106 = *(_OWORD *)(v1101 + 48);
  *((_OWORD *)v1100 + 2) = *(_OWORD *)(v1101 + 32);
  *((_OWORD *)v1100 + 3) = v1106;
  v1107 = v6[43];
  v1108 = &a1[v1107];
  v1109 = (_OWORD *)((char *)v178 + v1107);
  v1110 = (int *)type metadata accessor for CollaborationMetadata();
  v1111 = *((_QWORD *)v1110 - 1);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, int *))(v1111 + 48))(v1109, 1, v1110))
  {
    v1112 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
    memcpy(v1108, v1109, *(_QWORD *)(*(_QWORD *)(v1112 - 8) + 64));
  }
  else
  {
    v1113 = v1109[1];
    *(_OWORD *)v1108 = *v1109;
    *((_OWORD *)v1108 + 1) = v1113;
    v1114 = v1110[6];
    v1115 = &v1108[v1114];
    v1116 = (char *)v1109 + v1114;
    v1117 = sub_1AD63B03C();
    v1118 = *(_QWORD *)(v1117 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1118 + 48))(v1116, 1, v1117))
    {
      v1119 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v1115, v1116, *(_QWORD *)(*(_QWORD *)(v1119 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v1118 + 32))(v1115, v1116, v1117);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v1118 + 56))(v1115, 0, 1, v1117);
    }
    *(_OWORD *)&v1108[v1110[7]] = *(_OWORD *)((char *)v1109 + v1110[7]);
    *(_QWORD *)&v1108[v1110[8]] = *(_QWORD *)((char *)v1109 + v1110[8]);
    *(_QWORD *)&v1108[v1110[9]] = *(_QWORD *)((char *)v1109 + v1110[9]);
    v1120 = v1110[10];
    v1121 = &v1108[v1120];
    v1122 = (_OWORD *)((char *)v1109 + v1120);
    v1123 = v1122[5];
    *((_OWORD *)v1121 + 4) = v1122[4];
    *((_OWORD *)v1121 + 5) = v1123;
    v1124 = v1122[7];
    *((_OWORD *)v1121 + 6) = v1122[6];
    *((_OWORD *)v1121 + 7) = v1124;
    v1125 = v1122[1];
    *(_OWORD *)v1121 = *v1122;
    *((_OWORD *)v1121 + 1) = v1125;
    v1126 = v1122[3];
    *((_OWORD *)v1121 + 2) = v1122[2];
    *((_OWORD *)v1121 + 3) = v1126;
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v1111 + 56))(v1108, 0, 1, v1110);
  }
  v1378[7](a1, 0, 1, v6);
  a3 = v1404;
  a2 = (char *)v1407;
LABEL_660:
  a1[*(int *)(a3 + 20)] = a2[*(int *)(a3 + 20)];
  return a1;
}

uint64_t sub_1AD0716C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0716D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1AD071760()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD07176C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CD0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 20)) = a2 + 1;
  return result;
}

void sub_1AD0717E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AD0CE164(a1, a2, a3, &qword_1ED2E1CE8, (void (*)(uint64_t))type metadata accessor for LinkPresentation.LinkMetadata);
}

_QWORD *sub_1AD071804(_QWORD *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  _QWORD *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  _QWORD *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  __int128 v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  _QWORD *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  _DWORD *v82;
  _DWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  _QWORD *v93;
  uint64_t v94;
  void (*v95)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  __int128 v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _DWORD *v104;
  _DWORD *v105;
  int *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  _QWORD *v119;
  _QWORD *v120;
  uint64_t v121;
  void (*v122)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  uint64_t v131;
  _DWORD *v132;
  _DWORD *v133;
  int *v134;
  uint64_t v135;
  unsigned int (*v136)(_DWORD *, uint64_t, int *);
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  _QWORD *v149;
  uint64_t v150;
  void (*v151)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  int *v156;
  unsigned int (*v157)(char *, uint64_t, int *);
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  char *v161;
  char *v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  void (*v172)(char *, _QWORD, uint64_t, int *);
  uint64_t v173;
  _DWORD *v174;
  _DWORD *v175;
  int *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  _QWORD *v189;
  uint64_t v190;
  void (*v191)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  char *v200;
  char *v201;
  uint64_t v202;
  void (*v203)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v204;
  _DWORD *v205;
  _DWORD *v206;
  int *v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  char *v212;
  uint64_t v213;
  uint64_t v214;
  _QWORD *v215;
  _QWORD *v216;
  uint64_t v217;
  uint64_t v218;
  _QWORD *v219;
  _QWORD *v220;
  uint64_t v221;
  void (*v222)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unsigned int (*v228)(char *, uint64_t, uint64_t);
  uint64_t v229;
  char *v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  uint64_t v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  _QWORD *v248;
  _QWORD *v249;
  int *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  unsigned int (*v260)(char *, uint64_t, uint64_t);
  uint64_t v261;
  uint64_t v262;
  _QWORD *v263;
  _QWORD *v264;
  uint64_t v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  _QWORD *v279;
  char *v280;
  uint64_t v281;
  char *__dst;
  uint64_t v283;
  _QWORD *v284;
  _QWORD *v285;
  unsigned int (*v286)(char *, uint64_t, uint64_t);
  uint64_t v287;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *(_QWORD *)a2;
    *a1 = *(_QWORD *)a2;
    v14 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = &a2[v7];
    v10 = sub_1AD63AF28();
    v11 = *(_QWORD *)(v10 - 8);
    v286 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    if (v286(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v15 = a3[6];
    v16 = (char *)a1 + v15;
    v17 = &a2[v15];
    v283 = v11;
    if (v286(&a2[v15], 1, v10))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v16, v17, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
    }
    v19 = a3[7];
    v20 = a3[8];
    v21 = (_QWORD *)((char *)a1 + v19);
    v22 = &a2[v19];
    v23 = *((_QWORD *)v22 + 1);
    *v21 = *(_QWORD *)v22;
    v21[1] = v23;
    v24 = (_QWORD *)((char *)a1 + v20);
    v25 = &a2[v20];
    v26 = *((_QWORD *)v25 + 1);
    *v24 = *(_QWORD *)v25;
    v24[1] = v26;
    v27 = a3[9];
    v28 = a3[10];
    v29 = (_QWORD *)((char *)a1 + v27);
    v30 = &a2[v27];
    v31 = *((_QWORD *)v30 + 1);
    *v29 = *(_QWORD *)v30;
    v29[1] = v31;
    v32 = (_QWORD *)((char *)a1 + v28);
    v33 = &a2[v28];
    v34 = *((_QWORD *)v33 + 1);
    *v32 = *(_QWORD *)v33;
    v32[1] = v34;
    v35 = a3[11];
    v36 = a3[12];
    v37 = (_QWORD *)((char *)a1 + v35);
    v38 = &a2[v35];
    v39 = *((_QWORD *)v38 + 1);
    *v37 = *(_QWORD *)v38;
    v37[1] = v39;
    v40 = (char *)a1 + v36;
    v285 = a2;
    v41 = &a2[v36];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v281 = v10;
    if (v286(v41, 1, v10))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v40, v41, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v40, 0, 1, v10);
    }
    v43 = a3[13];
    v44 = a3[14];
    v45 = (_QWORD *)((char *)a1 + v43);
    v46 = &a2[v43];
    v47 = *((_QWORD *)v46 + 1);
    *v45 = *(_QWORD *)v46;
    v45[1] = v47;
    v48 = (_QWORD *)((char *)a1 + v44);
    v49 = &a2[v44];
    v50 = *((_QWORD *)v49 + 1);
    *v48 = *(_QWORD *)v49;
    v48[1] = v50;
    v51 = a3[15];
    v52 = a3[16];
    v53 = (_QWORD *)((char *)a1 + v51);
    v54 = &a2[v51];
    v55 = *((_QWORD *)v54 + 1);
    *v53 = *(_QWORD *)v54;
    v53[1] = v55;
    v56 = (_QWORD *)((char *)a1 + v52);
    v57 = &a2[v52];
    v58 = *((_QWORD *)v57 + 1);
    *v56 = *(_QWORD *)v57;
    v56[1] = v58;
    v59 = a3[18];
    *((_BYTE *)a1 + a3[17]) = a2[a3[17]];
    v60 = (char *)a1 + v59;
    v61 = &a2[v59];
    v62 = *((_OWORD *)v61 + 1);
    *(_OWORD *)v60 = *(_OWORD *)v61;
    *((_OWORD *)v60 + 1) = v62;
    v60[32] = v61[32];
    v63 = a3[19];
    v64 = a3[20];
    v65 = (_QWORD *)((char *)a1 + v63);
    v66 = &a2[v63];
    v67 = *((_QWORD *)v66 + 1);
    *v65 = *(_QWORD *)v66;
    v65[1] = v67;
    v68 = (_QWORD *)((char *)a1 + v64);
    v69 = &a2[v64];
    v70 = *((_QWORD *)v69 + 1);
    *v68 = *(_QWORD *)v69;
    v68[1] = v70;
    v71 = a3[21];
    v284 = a1;
    v72 = (char *)a1 + v71;
    v73 = &a2[v71];
    v74 = *(_QWORD *)((char *)v285 + v71 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v74 == 1)
    {
      v75 = *((_OWORD *)v73 + 5);
      *((_OWORD *)v72 + 4) = *((_OWORD *)v73 + 4);
      *((_OWORD *)v72 + 5) = v75;
      *((_OWORD *)v72 + 6) = *((_OWORD *)v73 + 6);
      *(_OWORD *)(v72 + 105) = *(_OWORD *)(v73 + 105);
      v76 = *((_OWORD *)v73 + 1);
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *((_OWORD *)v72 + 1) = v76;
      v77 = *((_OWORD *)v73 + 3);
      *((_OWORD *)v72 + 2) = *((_OWORD *)v73 + 2);
      *((_OWORD *)v72 + 3) = v77;
    }
    else
    {
      *(_OWORD *)v72 = *(_OWORD *)v73;
      *((_QWORD *)v72 + 2) = v74;
      *(_OWORD *)(v72 + 24) = *(_OWORD *)(v73 + 24);
      *((_QWORD *)v72 + 5) = *((_QWORD *)v73 + 5);
      v78 = *((_OWORD *)v73 + 4);
      *((_OWORD *)v72 + 3) = *((_OWORD *)v73 + 3);
      *((_OWORD *)v72 + 4) = v78;
      v72[80] = v73[80];
      *(_OWORD *)(v72 + 88) = *(_OWORD *)(v73 + 88);
      *(_OWORD *)(v72 + 104) = *(_OWORD *)(v73 + 104);
      v72[120] = v73[120];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v79 = v285;
    v80 = v281;
    v81 = a3[22];
    v82 = (_DWORD *)((char *)a1 + v81);
    v83 = (_DWORD *)((char *)v285 + v81);
    v84 = type metadata accessor for LinkPresentation.IconMetadata(0);
    v85 = *(_QWORD *)(v84 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v85 + 48))(v83, 1, v84))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      *v82 = *v83;
      v87 = *(int *)(v84 + 20);
      v88 = (char *)v82 + v87;
      v89 = (char *)v83 + v87;
      if (v286((char *)v83 + v87, 1, v281))
      {
        v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v88, v89, v281);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v88, 0, 1, v281);
      }
      v80 = v281;
      v91 = *(int *)(v84 + 24);
      v92 = (_QWORD *)((char *)v82 + v91);
      v93 = (_QWORD *)((char *)v83 + v91);
      v94 = v93[1];
      *v92 = *v93;
      v92[1] = v94;
      v95 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v85 + 56);
      swift_bridgeObjectRetain();
      v95(v82, 0, 1, v84);
    }
    v96 = a3[23];
    v97 = (char *)v284 + v96;
    v98 = (char *)v285 + v96;
    v99 = *((_QWORD *)v98 + 2);
    if (v99 == 1)
    {
      v100 = *((_OWORD *)v98 + 1);
      *(_OWORD *)v97 = *(_OWORD *)v98;
      *((_OWORD *)v97 + 1) = v100;
      *((_QWORD *)v97 + 4) = *((_QWORD *)v98 + 4);
    }
    else
    {
      *(_OWORD *)v97 = *(_OWORD *)v98;
      v101 = *((_QWORD *)v98 + 3);
      v102 = *((_QWORD *)v98 + 4);
      *((_QWORD *)v97 + 2) = v99;
      *((_QWORD *)v97 + 3) = v101;
      *((_QWORD *)v97 + 4) = v102;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v103 = a3[24];
    v104 = (_DWORD *)((char *)v284 + v103);
    v105 = (_DWORD *)((char *)v285 + v103);
    v106 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
    v107 = *((_QWORD *)v106 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v107 + 48))(v105, 1, v106))
    {
      v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
      memcpy(v104, v105, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      *v104 = *v105;
      v109 = v106[5];
      v110 = (char *)v104 + v109;
      v111 = v80;
      v112 = (char *)v105 + v109;
      if (v286((char *)v105 + v109, 1, v111))
      {
        v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v110, v112, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v110, v112, v111);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v110, 0, 1, v111);
      }
      v80 = v111;
      v114 = v106[6];
      v115 = (_QWORD *)((char *)v104 + v114);
      v116 = (_QWORD *)((char *)v105 + v114);
      v117 = v116[1];
      *v115 = *v116;
      v115[1] = v117;
      v118 = v106[7];
      v119 = (_QWORD *)((char *)v104 + v118);
      v120 = (_QWORD *)((char *)v105 + v118);
      v121 = v120[1];
      *v119 = *v120;
      v119[1] = v121;
      v122 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v107 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v122(v104, 0, 1, v106);
    }
    v123 = a3[25];
    v124 = (char *)v284 + v123;
    v125 = (char *)v285 + v123;
    v126 = *((_QWORD *)v125 + 2);
    if (v126 == 1)
    {
      v127 = *((_OWORD *)v125 + 5);
      *((_OWORD *)v124 + 4) = *((_OWORD *)v125 + 4);
      *((_OWORD *)v124 + 5) = v127;
      *((_OWORD *)v124 + 6) = *((_OWORD *)v125 + 6);
      *(_OWORD *)(v124 + 105) = *(_OWORD *)(v125 + 105);
      v128 = *((_OWORD *)v125 + 1);
      *(_OWORD *)v124 = *(_OWORD *)v125;
      *((_OWORD *)v124 + 1) = v128;
      v129 = *((_OWORD *)v125 + 3);
      *((_OWORD *)v124 + 2) = *((_OWORD *)v125 + 2);
      *((_OWORD *)v124 + 3) = v129;
    }
    else
    {
      *(_OWORD *)v124 = *(_OWORD *)v125;
      *((_QWORD *)v124 + 2) = v126;
      *(_OWORD *)(v124 + 24) = *(_OWORD *)(v125 + 24);
      *((_QWORD *)v124 + 5) = *((_QWORD *)v125 + 5);
      v130 = *((_OWORD *)v125 + 4);
      *((_OWORD *)v124 + 3) = *((_OWORD *)v125 + 3);
      *((_OWORD *)v124 + 4) = v130;
      v124[80] = v125[80];
      *(_OWORD *)(v124 + 88) = *(_OWORD *)(v125 + 88);
      *(_OWORD *)(v124 + 104) = *(_OWORD *)(v125 + 104);
      v124[120] = v125[120];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v131 = a3[27];
    *(_QWORD *)((char *)v284 + a3[26]) = *(_QWORD *)((char *)v285 + a3[26]);
    v132 = (_DWORD *)((char *)v284 + v131);
    v133 = (_DWORD *)((char *)v285 + v131);
    v134 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
    v135 = *((_QWORD *)v134 - 1);
    v136 = *(unsigned int (**)(_DWORD *, uint64_t, int *))(v135 + 48);
    swift_bridgeObjectRetain();
    if (v136(v133, 1, v134))
    {
      v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
      memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
    }
    else
    {
      *v132 = *v133;
      v138 = v134[5];
      v139 = (char *)v132 + v138;
      v140 = v80;
      v141 = (char *)v133 + v138;
      if (v286((char *)v133 + v138, 1, v140))
      {
        v142 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v139, v141, *(_QWORD *)(*(_QWORD *)(v142 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v139, v141, v140);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v139, 0, 1, v140);
      }
      v80 = v140;
      v143 = v134[6];
      v144 = (_QWORD *)((char *)v132 + v143);
      v145 = (_QWORD *)((char *)v133 + v143);
      v146 = v145[1];
      *v144 = *v145;
      v144[1] = v146;
      *(_OWORD *)((char *)v132 + v134[7]) = *(_OWORD *)((char *)v133 + v134[7]);
      v147 = v134[8];
      v148 = (_QWORD *)((char *)v132 + v147);
      v149 = (_QWORD *)((char *)v133 + v147);
      v150 = v149[1];
      *v148 = *v149;
      v148[1] = v150;
      v151 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v135 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v151(v132, 0, 1, v134);
    }
    v152 = a3[29];
    *(_QWORD *)((char *)v284 + a3[28]) = *(_QWORD *)((char *)v285 + a3[28]);
    *(_QWORD *)((char *)v284 + v152) = *(_QWORD *)((char *)v285 + v152);
    v153 = a3[30];
    v154 = (char *)v284 + v153;
    v155 = (char *)v285 + v153;
    v156 = (int *)type metadata accessor for LinkPresentation.Video(0);
    v279 = (_QWORD *)*((_QWORD *)v156 - 1);
    v157 = (unsigned int (*)(char *, uint64_t, int *))v279[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v157(v155, 1, v156))
    {
      v158 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
      memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v158 - 8) + 64));
    }
    else
    {
      if (v286(v155, 1, v80))
      {
        v159 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v154, v155, *(_QWORD *)(*(_QWORD *)(v159 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v154, v155, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v154, 0, 1, v80);
      }
      v160 = v156[5];
      v161 = &v154[v160];
      v162 = &v155[v160];
      if (v286(&v155[v160], 1, v80))
      {
        v163 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v161, v162, *(_QWORD *)(*(_QWORD *)(v163 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v161, v162, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v161, 0, 1, v80);
      }
      v164 = v156[6];
      v165 = &v154[v164];
      v166 = &v155[v164];
      v167 = *((_QWORD *)v166 + 1);
      *(_QWORD *)v165 = *(_QWORD *)v166;
      *((_QWORD *)v165 + 1) = v167;
      v154[v156[7]] = v155[v156[7]];
      *(_QWORD *)&v154[v156[8]] = *(_QWORD *)&v155[v156[8]];
      v168 = v156[9];
      v169 = &v154[v168];
      v170 = &v155[v168];
      *v169 = *v170;
      v171 = *((_QWORD *)v170 + 2);
      *((_QWORD *)v169 + 1) = *((_QWORD *)v170 + 1);
      *((_QWORD *)v169 + 2) = v171;
      v172 = (void (*)(char *, _QWORD, uint64_t, int *))v279[7];
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v172(v154, 0, 1, v156);
    }
    v173 = a3[31];
    v174 = (_DWORD *)((char *)v284 + v173);
    v175 = (_DWORD *)((char *)v285 + v173);
    v176 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
    v177 = *((_QWORD *)v176 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v177 + 48))(v175, 1, v176))
    {
      v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
      memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
    }
    else
    {
      *v174 = *v175;
      v179 = v176[5];
      v180 = (char *)v174 + v179;
      v181 = (char *)v175 + v179;
      if (v286((char *)v175 + v179, 1, v80))
      {
        v182 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v180, v181, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v180, 0, 1, v80);
      }
      v183 = v176[6];
      v184 = (_QWORD *)((char *)v174 + v183);
      v185 = (_QWORD *)((char *)v175 + v183);
      v186 = v185[1];
      *v184 = *v185;
      v184[1] = v186;
      *(_OWORD *)((char *)v174 + v176[7]) = *(_OWORD *)((char *)v175 + v176[7]);
      v187 = v176[8];
      v188 = (_QWORD *)((char *)v174 + v187);
      v189 = (_QWORD *)((char *)v175 + v187);
      v190 = v189[1];
      *v188 = *v189;
      v188[1] = v190;
      v191 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v177 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v191(v174, 0, 1, v176);
      v79 = v285;
    }
    v192 = a3[32];
    v193 = (char *)v284 + v192;
    v194 = (char *)v79 + v192;
    v195 = type metadata accessor for LinkPresentation.Audio(0);
    v196 = *(_QWORD *)(v195 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48))(v194, 1, v195))
    {
      v197 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
      memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v197 - 8) + 64));
    }
    else
    {
      if (v286(v194, 1, v80))
      {
        v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v193, v194, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v193, v194, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v193, 0, 1, v80);
      }
      v199 = *(int *)(v195 + 20);
      v200 = &v193[v199];
      v201 = &v194[v199];
      v202 = *((_QWORD *)v201 + 1);
      *(_QWORD *)v200 = *(_QWORD *)v201;
      *((_QWORD *)v200 + 1) = v202;
      v203 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v196 + 56);
      swift_bridgeObjectRetain();
      v203(v193, 0, 1, v195);
    }
    v204 = a3[33];
    v205 = (_DWORD *)((char *)v284 + v204);
    v206 = (_DWORD *)((char *)v79 + v204);
    v207 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
    v208 = *((_QWORD *)v207 - 1);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, int *))(v208 + 48))(v206, 1, v207))
    {
      v209 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
      memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v209 - 8) + 64));
    }
    else
    {
      *v205 = *v206;
      v210 = v207[5];
      v211 = (char *)v205 + v210;
      v212 = (char *)v206 + v210;
      if (v286((char *)v206 + v210, 1, v80))
      {
        v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v211, v212, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v283 + 16))(v211, v212, v80);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v283 + 56))(v211, 0, 1, v80);
      }
      v214 = v207[6];
      v215 = (_QWORD *)((char *)v205 + v214);
      v216 = (_QWORD *)((char *)v206 + v214);
      v217 = v216[1];
      *v215 = *v216;
      v215[1] = v217;
      v218 = v207[7];
      v219 = (_QWORD *)((char *)v205 + v218);
      v220 = (_QWORD *)((char *)v206 + v218);
      v221 = v220[1];
      *v219 = *v220;
      v219[1] = v221;
      v222 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v208 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v222(v205, 0, 1, v207);
      v79 = v285;
    }
    v223 = a3[35];
    *(_QWORD *)((char *)v284 + a3[34]) = *(_QWORD *)((char *)v79 + a3[34]);
    *(_QWORD *)((char *)v284 + v223) = *(_QWORD *)((char *)v79 + v223);
    v224 = a3[37];
    *(_QWORD *)((char *)v284 + a3[36]) = *(_QWORD *)((char *)v79 + a3[36]);
    *(_QWORD *)((char *)v284 + v224) = *(_QWORD *)((char *)v79 + v224);
    v225 = a3[39];
    *(_QWORD *)((char *)v284 + a3[38]) = *(_QWORD *)((char *)v79 + a3[38]);
    *(_QWORD *)((char *)v284 + v225) = *(_QWORD *)((char *)v79 + v225);
    v226 = a3[41];
    *(_QWORD *)((char *)v284 + a3[40]) = *(_QWORD *)((char *)v79 + a3[40]);
    __dst = (char *)v284 + v226;
    v280 = (char *)v79 + v226;
    v227 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
    v228 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v227 - 8) + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v228(v280, 1, v227))
    {
      v230 = (char *)&loc_1AD072694 + 4 * (unsigned __int16)a2qp[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v229 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
    memcpy(__dst, v280, *(_QWORD *)(*(_QWORD *)(v229 - 8) + 64));
    v231 = a3[42];
    v232 = (char *)v284 + v231;
    v233 = (char *)v285 + v231;
    v234 = *(_QWORD *)((char *)v285 + v231 + 8);
    if (v234 == 1)
    {
      v235 = *((_OWORD *)v233 + 9);
      *((_OWORD *)v232 + 8) = *((_OWORD *)v233 + 8);
      *((_OWORD *)v232 + 9) = v235;
      *((_OWORD *)v232 + 10) = *((_OWORD *)v233 + 10);
      *((_QWORD *)v232 + 22) = *((_QWORD *)v233 + 22);
      v236 = *((_OWORD *)v233 + 5);
      *((_OWORD *)v232 + 4) = *((_OWORD *)v233 + 4);
      *((_OWORD *)v232 + 5) = v236;
      v237 = *((_OWORD *)v233 + 7);
      *((_OWORD *)v232 + 6) = *((_OWORD *)v233 + 6);
      *((_OWORD *)v232 + 7) = v237;
      v238 = *((_OWORD *)v233 + 1);
      *(_OWORD *)v232 = *(_OWORD *)v233;
      *((_OWORD *)v232 + 1) = v238;
      v239 = *((_OWORD *)v233 + 3);
      *((_OWORD *)v232 + 2) = *((_OWORD *)v233 + 2);
      *((_OWORD *)v232 + 3) = v239;
    }
    else
    {
      *(_QWORD *)v232 = *(_QWORD *)v233;
      *((_QWORD *)v232 + 1) = v234;
      v240 = *((_QWORD *)v233 + 4);
      swift_bridgeObjectRetain();
      if (v240 == 1)
      {
        v241 = *((_OWORD *)v233 + 6);
        *((_OWORD *)v232 + 5) = *((_OWORD *)v233 + 5);
        *((_OWORD *)v232 + 6) = v241;
        *((_OWORD *)v232 + 7) = *((_OWORD *)v233 + 7);
        *(_OWORD *)(v232 + 121) = *(_OWORD *)(v233 + 121);
        v242 = *((_OWORD *)v233 + 2);
        *((_OWORD *)v232 + 1) = *((_OWORD *)v233 + 1);
        *((_OWORD *)v232 + 2) = v242;
        v243 = *((_OWORD *)v233 + 4);
        *((_OWORD *)v232 + 3) = *((_OWORD *)v233 + 3);
        *((_OWORD *)v232 + 4) = v243;
      }
      else
      {
        *((_OWORD *)v232 + 1) = *((_OWORD *)v233 + 1);
        *((_QWORD *)v232 + 4) = v240;
        *(_OWORD *)(v232 + 40) = *(_OWORD *)(v233 + 40);
        *((_QWORD *)v232 + 7) = *((_QWORD *)v233 + 7);
        v244 = *((_OWORD *)v233 + 5);
        *((_OWORD *)v232 + 4) = *((_OWORD *)v233 + 4);
        *((_OWORD *)v232 + 5) = v244;
        v232[96] = v233[96];
        *(_OWORD *)(v232 + 104) = *(_OWORD *)(v233 + 104);
        *(_OWORD *)(v232 + 120) = *(_OWORD *)(v233 + 120);
        v232[136] = v233[136];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      v245 = *((_QWORD *)v233 + 19);
      *((_QWORD *)v232 + 18) = *((_QWORD *)v233 + 18);
      *((_QWORD *)v232 + 19) = v245;
      v246 = *((_QWORD *)v233 + 21);
      *((_QWORD *)v232 + 20) = *((_QWORD *)v233 + 20);
      *((_QWORD *)v232 + 21) = v246;
      *((_QWORD *)v232 + 22) = *((_QWORD *)v233 + 22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v247 = a3[43];
    v248 = (_QWORD *)((char *)v284 + v247);
    v249 = (_QWORD *)((char *)v285 + v247);
    v250 = (int *)type metadata accessor for CollaborationMetadata();
    v251 = *((_QWORD *)v250 - 1);
    if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(v251 + 48))(v249, 1, v250))
    {
      v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
      memcpy(v248, v249, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
    }
    else
    {
      v287 = v251;
      v253 = v249[1];
      *v248 = *v249;
      v248[1] = v253;
      v254 = v249[3];
      v248[2] = v249[2];
      v248[3] = v254;
      v255 = v250[6];
      v256 = (char *)v248 + v255;
      v257 = (char *)v249 + v255;
      v258 = sub_1AD63B03C();
      v259 = *(_QWORD *)(v258 - 8);
      v260 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v259 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v260(v257, 1, v258))
      {
        v261 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v256, v257, *(_QWORD *)(*(_QWORD *)(v261 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v259 + 16))(v256, v257, v258);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v259 + 56))(v256, 0, 1, v258);
      }
      v262 = v250[7];
      v263 = (_QWORD *)((char *)v248 + v262);
      v264 = (_QWORD *)((char *)v249 + v262);
      v265 = v264[1];
      *v263 = *v264;
      v263[1] = v265;
      *(_QWORD *)((char *)v248 + v250[8]) = *(_QWORD *)((char *)v249 + v250[8]);
      *(_QWORD *)((char *)v248 + v250[9]) = *(_QWORD *)((char *)v249 + v250[9]);
      v266 = v250[10];
      v267 = (char *)v248 + v266;
      v268 = (char *)v249 + v266;
      v269 = *(_QWORD *)((char *)v249 + v266 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v269)
      {
        *v267 = *v268;
        *(_OWORD *)(v267 + 8) = *(_OWORD *)(v268 + 8);
        v270 = *((_QWORD *)v268 + 4);
        *((_QWORD *)v267 + 3) = *((_QWORD *)v268 + 3);
        *((_QWORD *)v267 + 4) = v270;
        v271 = *((_QWORD *)v268 + 6);
        *((_QWORD *)v267 + 5) = *((_QWORD *)v268 + 5);
        *((_QWORD *)v267 + 6) = v271;
        v272 = *((_QWORD *)v268 + 8);
        *((_QWORD *)v267 + 7) = *((_QWORD *)v268 + 7);
        *((_QWORD *)v267 + 8) = v272;
        v273 = *((_QWORD *)v268 + 10);
        *((_QWORD *)v267 + 9) = *((_QWORD *)v268 + 9);
        *((_QWORD *)v267 + 10) = v273;
        *((_QWORD *)v267 + 11) = *((_QWORD *)v268 + 11);
        v267[96] = v268[96];
        *((_QWORD *)v267 + 13) = *((_QWORD *)v268 + 13);
        *((_QWORD *)v267 + 14) = v269;
        *((_QWORD *)v267 + 15) = *((_QWORD *)v268 + 15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v274 = *((_OWORD *)v268 + 5);
        *((_OWORD *)v267 + 4) = *((_OWORD *)v268 + 4);
        *((_OWORD *)v267 + 5) = v274;
        v275 = *((_OWORD *)v268 + 7);
        *((_OWORD *)v267 + 6) = *((_OWORD *)v268 + 6);
        *((_OWORD *)v267 + 7) = v275;
        v276 = *((_OWORD *)v268 + 1);
        *(_OWORD *)v267 = *(_OWORD *)v268;
        *((_OWORD *)v267 + 1) = v276;
        v277 = *((_OWORD *)v268 + 3);
        *((_OWORD *)v267 + 2) = *((_OWORD *)v268 + 2);
        *((_OWORD *)v267 + 3) = v277;
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v287 + 56))(v248, 0, 1, v250);
    }
    return v284;
  }
  return (_QWORD *)v14;
}

uint64_t sub_1AD075A20(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t result;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  int *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  int *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  int *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  unsigned int (*v82)(char *, uint64_t, uint64_t);
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;

  v4 = a1 + a2[5];
  v5 = sub_1AD63AF28();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v8 = a1 + a2[6];
  if (!v7(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + a2[12];
  if (!v7(v9, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v9, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[21] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v10 = a1 + a2[22];
  v11 = type metadata accessor for LinkPresentation.IconMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v10, 1, v11))
  {
    v12 = v10 + *(int *)(v11 + 20);
    if (!v7(v12, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v12, v5);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[23] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v13 = a1 + a2[24];
  v14 = type metadata accessor for LinkPresentation.ARAssetMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 48))(v13, 1, v14))
  {
    v15 = v13 + *(int *)(v14 + 20);
    if (!v7(v15, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v15, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + a2[25] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v16 = a1 + a2[27];
  v17 = type metadata accessor for LinkPresentation.ImageMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 48))(v16, 1, v17))
  {
    v18 = v16 + *(int *)(v17 + 20);
    if (!v7(v18, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v18, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = a1 + a2[30];
  v20 = type metadata accessor for LinkPresentation.Video(0);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48);
  if (!v21(v19, 1, v20))
  {
    if (!v7(v19, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v19, v5);
    v22 = v19 + *(int *)(v20 + 20);
    if (!v7(v22, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v22, v5);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v23 = a1 + a2[31];
  v24 = type metadata accessor for LinkPresentation.VideoMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24))
  {
    v25 = v23 + *(int *)(v24 + 20);
    if (!v7(v25, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v25, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v26 = a1 + a2[32];
  v27 = type metadata accessor for LinkPresentation.Audio(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 48))(v26, 1, v27))
  {
    if (!v7(v26, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v26, v5);
    swift_bridgeObjectRelease();
  }
  v28 = a1 + a2[33];
  v29 = type metadata accessor for LinkPresentation.AudioMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 48))(v28, 1, v29))
  {
    v30 = v28 + *(int *)(v29 + 20);
    if (!v7(v30, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v30, v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v31 = (_QWORD *)(a1 + a2[41]);
  v32 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
  if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 48))(v31, 1, v32))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[14] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v40 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
        v41 = (char *)v31 + v40[11];
        v42 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42))
        {
          v43 = &v41[*(int *)(v42 + 20)];
          if (!v7((uint64_t)v43, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v43, v5);
          swift_bridgeObjectRelease();
        }
        v44 = (char *)v31 + v40[12];
        if (!v7((uint64_t)v44, 1, v5))
          (*(void (**)(char *, uint64_t))(v6 + 8))(v44, v5);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)((char *)v31 + v40[14] + 8) != 1)
          goto LABEL_190;
        break;
      case 1u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[10] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v45 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
        goto LABEL_115;
      case 2u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[10] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 = type metadata accessor for LinkPresentation.MusicVideoMetadata(0);
        goto LABEL_141;
      case 3u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[10] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 = type metadata accessor for LinkPresentation.ArtistMetadata(0);
        goto LABEL_141;
      case 4u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v47 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
        v48 = (char *)v31 + v47[8];
        if (!v7((uint64_t)v48, 1, v5))
          (*(void (**)(char *, uint64_t))(v6 + 8))(v48, v5);
        swift_bridgeObjectRelease();
        if (*(_QWORD *)((char *)v31 + v47[10] + 16) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v49 = v47[11];
        goto LABEL_142;
      case 5u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[10] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 = type metadata accessor for LinkPresentation.RadioMetadata(0);
        goto LABEL_141;
      case 6u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[14] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        v50 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
        v51 = (char *)v31 + *(int *)(v50 + 48);
        if (!v21((uint64_t)v51, 1, v20))
        {
          if (!v7((uint64_t)v51, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v51, v5);
          v52 = &v51[*(int *)(v20 + 20)];
          if (!v7((uint64_t)v52, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v52, v5);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)((char *)v31 + *(int *)(v50 + 56) + 16) != 1)
          goto LABEL_190;
        break;
      case 7u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[10] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 = type metadata accessor for LinkPresentation.BookMetadata(0);
        goto LABEL_141;
      case 8u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[12] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v53 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
        v54 = (char *)v31 + *(int *)(v53 + 40);
        v55 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v54, 1, v55))
        {
          v56 = &v54[*(int *)(v55 + 20)];
          if (!v7((uint64_t)v56, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v56, v5);
          swift_bridgeObjectRelease();
        }
        v57 = (char *)v31 + *(int *)(v53 + 44);
        if (!v7((uint64_t)v57, 1, v5))
          (*(void (**)(char *, uint64_t))(v6 + 8))(v57, v5);
        break;
      case 9u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v58 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
        v59 = (char *)v31 + v58[9];
        v60 = sub_1AD63B03C();
        v61 = *(_QWORD *)(v60 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v59, 1, v60))
          (*(void (**)(char *, uint64_t))(v61 + 8))(v59, v60);
        if (*(_QWORD *)((char *)v31 + v58[10] + 16) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v62 = (char *)v31 + v58[11];
        v63 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v62, 1, v63))
        {
          v64 = &v62[*(int *)(v63 + 20)];
          if (!v7((uint64_t)v64, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v64, v5);
          swift_bridgeObjectRelease();
        }
        goto LABEL_150;
      case 0xAu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[10] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v45 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
LABEL_115:
        v65 = (char *)v31 + *(int *)(v45 + 36);
        v66 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48))(v65, 1, v66))
        {
          v67 = &v65[*(int *)(v66 + 20)];
          if (!v7((uint64_t)v67, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v67, v5);
          swift_bridgeObjectRelease();
        }
        goto LABEL_150;
      case 0xBu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[12] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v49 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
        goto LABEL_142;
      case 0xCu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[10] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 = type metadata accessor for LinkPresentation.TVSeasonMetadata(0);
        goto LABEL_141;
      case 0xDu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[8] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v49 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
        goto LABEL_142;
      case 0xEu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[10] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v68 = type metadata accessor for LinkPresentation.MovieMetadata(0);
        v69 = (char *)v31 + *(int *)(v68 + 36);
        v70 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 48))(v69, 1, v70))
        {
          v71 = &v69[*(int *)(v70 + 20)];
          if (!v7((uint64_t)v71, 1, v5))
            (*(void (**)(char *, uint64_t))(v6 + 8))(v71, v5);
          swift_bridgeObjectRelease();
        }
        if (*(_QWORD *)((char *)v31 + *(int *)(v68 + 40) + 16) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_150;
      case 0xFu:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[10] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v46 = type metadata accessor for LinkPresentation.MovieBundleMetadata(0);
LABEL_141:
        v49 = *(int *)(v46 + 36);
LABEL_142:
        v72 = (char *)v31 + v49;
        v73 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 48))(v72, 1, v73))
          break;
        v74 = &v72[*(int *)(v73 + 20)];
        if (!v7((uint64_t)v74, 1, v5))
          (*(void (**)(char *, uint64_t))(v6 + 8))(v74, v5);
LABEL_150:
        swift_bridgeObjectRelease();
        break;
      case 0x10u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[8] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v31[24] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        goto LABEL_150;
      case 0x11u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[8] != 1)
          goto LABEL_190;
        break;
      case 0x12u:
        swift_bridgeObjectRelease();
        if (v31[4] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v31[20] != 1)
          goto LABEL_190;
        break;
      case 0x13u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[5] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        if (v31[24] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[47] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[67] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        if (v31[88] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v31[104] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v31[120] != 1)
          goto LABEL_190;
        break;
      case 0x14u:
        swift_bridgeObjectRelease();
        if (v31[5] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v31[21] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v31[37] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[56] != 1)
          goto LABEL_190;
        break;
      case 0x15u:
        swift_bridgeObjectRelease();
        if (v31[4] != 1)
          goto LABEL_190;
        break;
      case 0x16u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[7] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        if (v31[23] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v75 = (char *)v31 + *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
        v76 = sub_1AD63B03C();
        v77 = *(_QWORD *)(v76 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
          (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v76);
        break;
      case 0x17u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Fu:
      case 0x20u:
      case 0x21u:
        goto LABEL_150;
      case 0x18u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[10] != 1)
          goto LABEL_190;
        break;
      case 0x19u:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v31[6] != 1)
          goto LABEL_190;
        break;
      case 0x1Au:
        swift_bridgeObjectRelease();
        if (v31[7] != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        v78 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
        v79 = (char *)v31 + v78[9];
        v80 = sub_1AD63B03C();
        v81 = *(_QWORD *)(v80 - 8);
        v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
        if (!v82(v79, 1, v80))
          (*(void (**)(char *, uint64_t))(v81 + 8))(v79, v80);
        v83 = (char *)v31 + v78[10];
        if (!v82(v83, 1, v80))
          (*(void (**)(char *, uint64_t))(v81 + 8))(v83, v80);
        v84 = v78[11];
        goto LABEL_201;
      case 0x1Cu:
      case 0x22u:
LABEL_190:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
      case 0x1Eu:
        swift_bridgeObjectRelease();
        v85 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
        v86 = (char *)v31 + *(int *)(v85 + 20);
        v80 = sub_1AD63B03C();
        v81 = *(_QWORD *)(v80 - 8);
        v82 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48);
        if (!v82(v86, 1, v80))
          (*(void (**)(char *, uint64_t))(v81 + 8))(v86, v80);
        v84 = *(int *)(v85 + 24);
LABEL_201:
        v87 = (char *)v31 + v84;
        if (!v82(v87, 1, v80))
          (*(void (**)(char *, uint64_t))(v81 + 8))(v87, v80);
        break;
      case 0x23u:
        swift_release();
        break;
      default:
        break;
    }
  }
  v33 = a1 + a2[42];
  if (*(_QWORD *)(v33 + 8) != 1)
  {
    swift_bridgeObjectRelease();
    if (*(_QWORD *)(v33 + 32) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v34 = a1 + a2[43];
  v35 = type metadata accessor for CollaborationMetadata();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 48))(v34, 1, v35);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v37 = v34 + *(int *)(v35 + 24);
    v38 = sub_1AD63B03C();
    v39 = *(_QWORD *)(v38 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
      (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v37, v38);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    if (*(_QWORD *)(v34 + *(int *)(v35 + 40) + 112))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

_DWORD *sub_1AD076FBC(_DWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  char *v19;
  uint64_t v20;
  _QWORD *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  char *v27;
  uint64_t v28;
  _QWORD *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  char *v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  int *v76;
  uint64_t v77;
  _DWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _DWORD *v100;
  char *v101;
  int *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  _QWORD *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  _QWORD *v114;
  char *v115;
  uint64_t v116;
  void (*v117)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  _DWORD *v127;
  char *v128;
  int *v129;
  uint64_t v130;
  unsigned int (*v131)(char *, uint64_t, int *);
  uint64_t v132;
  uint64_t v133;
  char *v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  char *v143;
  uint64_t v144;
  void (*v145)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  int *v150;
  unsigned int (*v151)(char *, uint64_t, int *);
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  void (*v166)(char *, _QWORD, uint64_t, int *);
  uint64_t v167;
  _DWORD *v168;
  char *v169;
  int *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  char *v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  _QWORD *v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  _QWORD *v182;
  char *v183;
  uint64_t v184;
  void (*v185)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  void (*v197)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v198;
  _DWORD *v199;
  char *v200;
  int *v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  _QWORD *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  _QWORD *v213;
  char *v214;
  uint64_t v215;
  void (*v216)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  char *v221;
  uint64_t v222;
  uint64_t v223;
  _DWORD *v224;
  char *v225;
  uint64_t v226;
  char *v227;
  char *v228;
  uint64_t v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  uint64_t v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  _QWORD *v243;
  char *v244;
  int *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  char *v251;
  char *v252;
  uint64_t v253;
  uint64_t v254;
  unsigned int (*v255)(char *, uint64_t, uint64_t);
  uint64_t v256;
  uint64_t v257;
  _QWORD *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  uint64_t v274;
  unsigned int (*v275)(char *, uint64_t, uint64_t);
  char *__dst;
  uint64_t v277;
  _DWORD *v278;
  uint64_t v279;
  int *v280;
  unsigned int (*v281)(char *, uint64_t, uint64_t);
  uint64_t v282;

  *a1 = *(_DWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v281 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (v281(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = &a2[v12];
  v277 = v10;
  if (v281(&a2[v12], 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v16 = a3[7];
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v16);
  v19 = &a2[v16];
  v20 = *((_QWORD *)v19 + 1);
  *v18 = *(_QWORD *)v19;
  v18[1] = v20;
  v21 = (_QWORD *)((char *)a1 + v17);
  v22 = &a2[v17];
  v23 = *((_QWORD *)v22 + 1);
  *v21 = *(_QWORD *)v22;
  v21[1] = v23;
  v24 = a3[9];
  v25 = a3[10];
  v26 = (_QWORD *)((char *)a1 + v24);
  v27 = &a2[v24];
  v28 = *((_QWORD *)v27 + 1);
  *v26 = *(_QWORD *)v27;
  v26[1] = v28;
  v29 = (_QWORD *)((char *)a1 + v25);
  v30 = &a2[v25];
  v31 = *((_QWORD *)v30 + 1);
  *v29 = *(_QWORD *)v30;
  v29[1] = v31;
  v32 = a3[11];
  v33 = a3[12];
  v280 = a3;
  v34 = (_QWORD *)((char *)a1 + v32);
  v35 = &a2[v32];
  v36 = *((_QWORD *)v35 + 1);
  *v34 = *(_QWORD *)v35;
  v34[1] = v36;
  v37 = (char *)a1 + v33;
  v38 = &a2[v33];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v279 = v9;
  if (v281(v38, 1, v9))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v37, v38, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v37, 0, 1, v9);
  }
  v40 = a3[13];
  v41 = a3[14];
  v42 = (_QWORD *)((char *)a1 + v40);
  v43 = &a2[v40];
  v44 = *((_QWORD *)v43 + 1);
  *v42 = *(_QWORD *)v43;
  v42[1] = v44;
  v45 = (_QWORD *)((char *)a1 + v41);
  v46 = &a2[v41];
  v47 = *((_QWORD *)v46 + 1);
  *v45 = *(_QWORD *)v46;
  v45[1] = v47;
  v48 = a3[15];
  v49 = a3[16];
  v50 = (_QWORD *)((char *)a1 + v48);
  v51 = &a2[v48];
  v52 = *((_QWORD *)v51 + 1);
  *v50 = *(_QWORD *)v51;
  v50[1] = v52;
  v53 = (_QWORD *)((char *)a1 + v49);
  v54 = &a2[v49];
  v55 = *((_QWORD *)v54 + 1);
  *v53 = *(_QWORD *)v54;
  v53[1] = v55;
  v56 = a3[18];
  *((_BYTE *)a1 + a3[17]) = a2[a3[17]];
  v57 = (char *)a1 + v56;
  v58 = &a2[v56];
  v59 = *((_OWORD *)v58 + 1);
  *(_OWORD *)v57 = *(_OWORD *)v58;
  *((_OWORD *)v57 + 1) = v59;
  v57[32] = v58[32];
  v60 = a3[19];
  v61 = a3[20];
  v62 = (_QWORD *)((char *)a1 + v60);
  v63 = &a2[v60];
  v64 = *((_QWORD *)v63 + 1);
  *v62 = *(_QWORD *)v63;
  v62[1] = v64;
  v65 = (_QWORD *)((char *)a1 + v61);
  v66 = &a2[v61];
  v67 = *((_QWORD *)v66 + 1);
  *v65 = *(_QWORD *)v66;
  v65[1] = v67;
  v68 = a3[21];
  v278 = a1;
  v69 = (char *)a1 + v68;
  v70 = &a2[v68];
  v71 = *(_QWORD *)&a2[v68 + 16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v71 == 1)
  {
    v72 = *((_OWORD *)v70 + 5);
    *((_OWORD *)v69 + 4) = *((_OWORD *)v70 + 4);
    *((_OWORD *)v69 + 5) = v72;
    *((_OWORD *)v69 + 6) = *((_OWORD *)v70 + 6);
    *(_OWORD *)(v69 + 105) = *(_OWORD *)(v70 + 105);
    v73 = *((_OWORD *)v70 + 1);
    *(_OWORD *)v69 = *(_OWORD *)v70;
    *((_OWORD *)v69 + 1) = v73;
    v74 = *((_OWORD *)v70 + 3);
    *((_OWORD *)v69 + 2) = *((_OWORD *)v70 + 2);
    *((_OWORD *)v69 + 3) = v74;
  }
  else
  {
    *(_OWORD *)v69 = *(_OWORD *)v70;
    *((_QWORD *)v69 + 2) = v71;
    *(_OWORD *)(v69 + 24) = *(_OWORD *)(v70 + 24);
    *((_QWORD *)v69 + 5) = *((_QWORD *)v70 + 5);
    v75 = *((_OWORD *)v70 + 4);
    *((_OWORD *)v69 + 3) = *((_OWORD *)v70 + 3);
    *((_OWORD *)v69 + 4) = v75;
    v69[80] = v70[80];
    *(_OWORD *)(v69 + 88) = *(_OWORD *)(v70 + 88);
    *(_OWORD *)(v69 + 104) = *(_OWORD *)(v70 + 104);
    v69[120] = v70[120];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v76 = v280;
  v77 = v280[22];
  v78 = (_DWORD *)((char *)a1 + v77);
  v79 = &a2[v77];
  v80 = type metadata accessor for LinkPresentation.IconMetadata(0);
  v81 = *(_QWORD *)(v80 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v81 + 48))(v79, 1, v80))
  {
    v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
    memcpy(v78, v79, *(_QWORD *)(*(_QWORD *)(v82 - 8) + 64));
  }
  else
  {
    *v78 = *(_DWORD *)v79;
    v83 = *(int *)(v80 + 20);
    v84 = (char *)v78 + v83;
    v85 = &v79[v83];
    if (v281(&v79[v83], 1, v279))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v84, v85, v279);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v84, 0, 1, v279);
    }
    v87 = *(int *)(v80 + 24);
    v88 = (_QWORD *)((char *)v78 + v87);
    v89 = &v79[v87];
    v90 = *((_QWORD *)v89 + 1);
    *v88 = *(_QWORD *)v89;
    v88[1] = v90;
    v91 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v81 + 56);
    swift_bridgeObjectRetain();
    v91(v78, 0, 1, v80);
  }
  v92 = v280[23];
  v93 = (char *)v278 + v92;
  v94 = &a2[v92];
  v95 = *((_QWORD *)v94 + 2);
  if (v95 == 1)
  {
    v96 = *((_OWORD *)v94 + 1);
    *(_OWORD *)v93 = *(_OWORD *)v94;
    *((_OWORD *)v93 + 1) = v96;
    *((_QWORD *)v93 + 4) = *((_QWORD *)v94 + 4);
  }
  else
  {
    *(_OWORD *)v93 = *(_OWORD *)v94;
    v97 = *((_QWORD *)v94 + 3);
    v98 = *((_QWORD *)v94 + 4);
    *((_QWORD *)v93 + 2) = v95;
    *((_QWORD *)v93 + 3) = v97;
    *((_QWORD *)v93 + 4) = v98;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v99 = v280[24];
  v100 = (_DWORD *)((char *)v278 + v99);
  v101 = &a2[v99];
  v102 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
  v103 = *((_QWORD *)v102 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v103 + 48))(v101, 1, v102))
  {
    v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
    memcpy(v100, v101, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
  }
  else
  {
    *v100 = *(_DWORD *)v101;
    v105 = v102[5];
    v106 = (char *)v100 + v105;
    v107 = &v101[v105];
    if (v281(&v101[v105], 1, v279))
    {
      v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v108 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v106, v107, v279);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v106, 0, 1, v279);
    }
    v109 = v102[6];
    v110 = (_QWORD *)((char *)v100 + v109);
    v111 = &v101[v109];
    v112 = *((_QWORD *)v111 + 1);
    *v110 = *(_QWORD *)v111;
    v110[1] = v112;
    v113 = v102[7];
    v114 = (_QWORD *)((char *)v100 + v113);
    v115 = &v101[v113];
    v116 = *((_QWORD *)v115 + 1);
    *v114 = *(_QWORD *)v115;
    v114[1] = v116;
    v117 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v103 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v117(v100, 0, 1, v102);
  }
  v118 = v280[25];
  v119 = (char *)v278 + v118;
  v120 = &a2[v118];
  v121 = *((_QWORD *)v120 + 2);
  if (v121 == 1)
  {
    v122 = *((_OWORD *)v120 + 5);
    *((_OWORD *)v119 + 4) = *((_OWORD *)v120 + 4);
    *((_OWORD *)v119 + 5) = v122;
    *((_OWORD *)v119 + 6) = *((_OWORD *)v120 + 6);
    *(_OWORD *)(v119 + 105) = *(_OWORD *)(v120 + 105);
    v123 = *((_OWORD *)v120 + 1);
    *(_OWORD *)v119 = *(_OWORD *)v120;
    *((_OWORD *)v119 + 1) = v123;
    v124 = *((_OWORD *)v120 + 3);
    *((_OWORD *)v119 + 2) = *((_OWORD *)v120 + 2);
    *((_OWORD *)v119 + 3) = v124;
  }
  else
  {
    *(_OWORD *)v119 = *(_OWORD *)v120;
    *((_QWORD *)v119 + 2) = v121;
    *(_OWORD *)(v119 + 24) = *(_OWORD *)(v120 + 24);
    *((_QWORD *)v119 + 5) = *((_QWORD *)v120 + 5);
    v125 = *((_OWORD *)v120 + 4);
    *((_OWORD *)v119 + 3) = *((_OWORD *)v120 + 3);
    *((_OWORD *)v119 + 4) = v125;
    v119[80] = v120[80];
    *(_OWORD *)(v119 + 88) = *(_OWORD *)(v120 + 88);
    *(_OWORD *)(v119 + 104) = *(_OWORD *)(v120 + 104);
    v119[120] = v120[120];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v126 = v280[27];
  *(_QWORD *)((char *)v278 + v280[26]) = *(_QWORD *)&a2[v280[26]];
  v127 = (_DWORD *)((char *)v278 + v126);
  v128 = &a2[v126];
  v129 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
  v130 = *((_QWORD *)v129 - 1);
  v131 = *(unsigned int (**)(char *, uint64_t, int *))(v130 + 48);
  swift_bridgeObjectRetain();
  if (v131(v128, 1, v129))
  {
    v132 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v132 - 8) + 64));
  }
  else
  {
    *v127 = *(_DWORD *)v128;
    v133 = v129[5];
    v134 = (char *)v127 + v133;
    v135 = &v128[v133];
    if (v281(&v128[v133], 1, v279))
    {
      v136 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v134, v135, *(_QWORD *)(*(_QWORD *)(v136 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v134, v135, v279);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v134, 0, 1, v279);
    }
    v137 = v129[6];
    v138 = (_QWORD *)((char *)v127 + v137);
    v139 = &v128[v137];
    v140 = *((_QWORD *)v139 + 1);
    *v138 = *(_QWORD *)v139;
    v138[1] = v140;
    *(_OWORD *)((char *)v127 + v129[7]) = *(_OWORD *)&v128[v129[7]];
    v141 = v129[8];
    v142 = (_QWORD *)((char *)v127 + v141);
    v143 = &v128[v141];
    v144 = *((_QWORD *)v143 + 1);
    *v142 = *(_QWORD *)v143;
    v142[1] = v144;
    v145 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v130 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v145(v127, 0, 1, v129);
  }
  v146 = v280[29];
  *(_QWORD *)((char *)v278 + v280[28]) = *(_QWORD *)&a2[v280[28]];
  *(_QWORD *)((char *)v278 + v146) = *(_QWORD *)&a2[v146];
  v147 = v280[30];
  v148 = (char *)v278 + v147;
  v149 = &a2[v147];
  v150 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v274 = *((_QWORD *)v150 - 1);
  v151 = *(unsigned int (**)(char *, uint64_t, int *))(v274 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v151(v149, 1, v150))
  {
    v152 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v152 - 8) + 64));
  }
  else
  {
    if (v281(v149, 1, v279))
    {
      v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v148, v149, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v148, v149, v279);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v148, 0, 1, v279);
    }
    v154 = v150[5];
    v155 = &v148[v154];
    v156 = &v149[v154];
    if (v281(&v149[v154], 1, v279))
    {
      v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v155, v156, *(_QWORD *)(*(_QWORD *)(v157 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v155, v156, v279);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v155, 0, 1, v279);
    }
    v158 = v150[6];
    v159 = &v148[v158];
    v160 = &v149[v158];
    v161 = *((_QWORD *)v160 + 1);
    *(_QWORD *)v159 = *(_QWORD *)v160;
    *((_QWORD *)v159 + 1) = v161;
    v148[v150[7]] = v149[v150[7]];
    *(_QWORD *)&v148[v150[8]] = *(_QWORD *)&v149[v150[8]];
    v162 = v150[9];
    v163 = &v148[v162];
    v164 = &v149[v162];
    *v163 = *v164;
    v165 = *((_QWORD *)v164 + 2);
    *((_QWORD *)v163 + 1) = *((_QWORD *)v164 + 1);
    *((_QWORD *)v163 + 2) = v165;
    v166 = *(void (**)(char *, _QWORD, uint64_t, int *))(v274 + 56);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v166(v148, 0, 1, v150);
  }
  v167 = v280[31];
  v168 = (_DWORD *)((char *)v278 + v167);
  v169 = &a2[v167];
  v170 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
  v171 = *((_QWORD *)v170 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v171 + 48))(v169, 1, v170))
  {
    v172 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
    memcpy(v168, v169, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
  }
  else
  {
    *v168 = *(_DWORD *)v169;
    v173 = v170[5];
    v174 = (char *)v168 + v173;
    v175 = &v169[v173];
    if (v281(&v169[v173], 1, v279))
    {
      v176 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v174, v175, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v174, v175, v279);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v174, 0, 1, v279);
    }
    v177 = v170[6];
    v178 = (_QWORD *)((char *)v168 + v177);
    v179 = &v169[v177];
    v180 = *((_QWORD *)v179 + 1);
    *v178 = *(_QWORD *)v179;
    v178[1] = v180;
    *(_OWORD *)((char *)v168 + v170[7]) = *(_OWORD *)&v169[v170[7]];
    v181 = v170[8];
    v182 = (_QWORD *)((char *)v168 + v181);
    v183 = &v169[v181];
    v184 = *((_QWORD *)v183 + 1);
    *v182 = *(_QWORD *)v183;
    v182[1] = v184;
    v185 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v171 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v185(v168, 0, 1, v170);
    v76 = v280;
  }
  v186 = v76[32];
  v187 = (char *)v278 + v186;
  v188 = &a2[v186];
  v189 = type metadata accessor for LinkPresentation.Audio(0);
  v190 = *(_QWORD *)(v189 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v190 + 48))(v188, 1, v189))
  {
    v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
    memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v191 - 8) + 64));
  }
  else
  {
    if (v281(v188, 1, v279))
    {
      v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v187, v188, v279);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v187, 0, 1, v279);
    }
    v193 = *(int *)(v189 + 20);
    v194 = &v187[v193];
    v195 = &v188[v193];
    v196 = *((_QWORD *)v195 + 1);
    *(_QWORD *)v194 = *(_QWORD *)v195;
    *((_QWORD *)v194 + 1) = v196;
    v197 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v190 + 56);
    swift_bridgeObjectRetain();
    v197(v187, 0, 1, v189);
  }
  v198 = v76[33];
  v199 = (_DWORD *)((char *)v278 + v198);
  v200 = &a2[v198];
  v201 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
  v202 = *((_QWORD *)v201 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v202 + 48))(v200, 1, v201))
  {
    v203 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
    memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v203 - 8) + 64));
  }
  else
  {
    *v199 = *(_DWORD *)v200;
    v204 = v201[5];
    v205 = (char *)v199 + v204;
    v206 = &v200[v204];
    if (v281(&v200[v204], 1, v279))
    {
      v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v205, v206, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v277 + 16))(v205, v206, v279);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v277 + 56))(v205, 0, 1, v279);
    }
    v208 = v201[6];
    v209 = (_QWORD *)((char *)v199 + v208);
    v210 = &v200[v208];
    v211 = *((_QWORD *)v210 + 1);
    *v209 = *(_QWORD *)v210;
    v209[1] = v211;
    v212 = v201[7];
    v213 = (_QWORD *)((char *)v199 + v212);
    v214 = &v200[v212];
    v215 = *((_QWORD *)v214 + 1);
    *v213 = *(_QWORD *)v214;
    v213[1] = v215;
    v216 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v202 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v216(v199, 0, 1, v201);
    v76 = v280;
  }
  v217 = v76[35];
  *(_QWORD *)((char *)v278 + v76[34]) = *(_QWORD *)&a2[v76[34]];
  *(_QWORD *)((char *)v278 + v217) = *(_QWORD *)&a2[v217];
  v218 = v76[37];
  *(_QWORD *)((char *)v278 + v76[36]) = *(_QWORD *)&a2[v76[36]];
  *(_QWORD *)((char *)v278 + v218) = *(_QWORD *)&a2[v218];
  v219 = v76[39];
  *(_QWORD *)((char *)v278 + v76[38]) = *(_QWORD *)&a2[v76[38]];
  *(_QWORD *)((char *)v278 + v219) = *(_QWORD *)&a2[v219];
  v220 = v76[41];
  *(_QWORD *)((char *)v278 + v76[40]) = *(_QWORD *)&a2[v76[40]];
  __dst = (char *)v278 + v220;
  v221 = &a2[v220];
  v222 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
  v275 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v222 - 8) + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v275(v221, 1, v222))
  {
    v225 = (char *)&loc_1AD077E40 + 4 * (unsigned __int16)a2rs[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v223 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
  memcpy(__dst, v221, *(_QWORD *)(*(_QWORD *)(v223 - 8) + 64));
  v224 = v278;
  v226 = v280[42];
  v227 = (char *)v278 + v226;
  v228 = &a2[v226];
  v229 = *(_QWORD *)&a2[v226 + 8];
  if (v229 == 1)
  {
    v230 = *((_OWORD *)v228 + 9);
    *((_OWORD *)v227 + 8) = *((_OWORD *)v228 + 8);
    *((_OWORD *)v227 + 9) = v230;
    *((_OWORD *)v227 + 10) = *((_OWORD *)v228 + 10);
    *((_QWORD *)v227 + 22) = *((_QWORD *)v228 + 22);
    v231 = *((_OWORD *)v228 + 5);
    *((_OWORD *)v227 + 4) = *((_OWORD *)v228 + 4);
    *((_OWORD *)v227 + 5) = v231;
    v232 = *((_OWORD *)v228 + 7);
    *((_OWORD *)v227 + 6) = *((_OWORD *)v228 + 6);
    *((_OWORD *)v227 + 7) = v232;
    v233 = *((_OWORD *)v228 + 1);
    *(_OWORD *)v227 = *(_OWORD *)v228;
    *((_OWORD *)v227 + 1) = v233;
    v234 = *((_OWORD *)v228 + 3);
    *((_OWORD *)v227 + 2) = *((_OWORD *)v228 + 2);
    *((_OWORD *)v227 + 3) = v234;
  }
  else
  {
    *(_QWORD *)v227 = *(_QWORD *)v228;
    *((_QWORD *)v227 + 1) = v229;
    v235 = *((_QWORD *)v228 + 4);
    swift_bridgeObjectRetain();
    if (v235 == 1)
    {
      v236 = *((_OWORD *)v228 + 6);
      *((_OWORD *)v227 + 5) = *((_OWORD *)v228 + 5);
      *((_OWORD *)v227 + 6) = v236;
      *((_OWORD *)v227 + 7) = *((_OWORD *)v228 + 7);
      *(_OWORD *)(v227 + 121) = *(_OWORD *)(v228 + 121);
      v237 = *((_OWORD *)v228 + 2);
      *((_OWORD *)v227 + 1) = *((_OWORD *)v228 + 1);
      *((_OWORD *)v227 + 2) = v237;
      v238 = *((_OWORD *)v228 + 4);
      *((_OWORD *)v227 + 3) = *((_OWORD *)v228 + 3);
      *((_OWORD *)v227 + 4) = v238;
    }
    else
    {
      *((_OWORD *)v227 + 1) = *((_OWORD *)v228 + 1);
      *((_QWORD *)v227 + 4) = v235;
      *(_OWORD *)(v227 + 40) = *(_OWORD *)(v228 + 40);
      *((_QWORD *)v227 + 7) = *((_QWORD *)v228 + 7);
      v239 = *((_OWORD *)v228 + 5);
      *((_OWORD *)v227 + 4) = *((_OWORD *)v228 + 4);
      *((_OWORD *)v227 + 5) = v239;
      v227[96] = v228[96];
      *(_OWORD *)(v227 + 104) = *(_OWORD *)(v228 + 104);
      *(_OWORD *)(v227 + 120) = *(_OWORD *)(v228 + 120);
      v227[136] = v228[136];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v240 = *((_QWORD *)v228 + 19);
    *((_QWORD *)v227 + 18) = *((_QWORD *)v228 + 18);
    *((_QWORD *)v227 + 19) = v240;
    v241 = *((_QWORD *)v228 + 21);
    *((_QWORD *)v227 + 20) = *((_QWORD *)v228 + 20);
    *((_QWORD *)v227 + 21) = v241;
    *((_QWORD *)v227 + 22) = *((_QWORD *)v228 + 22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v242 = v280[43];
  v243 = (_QWORD *)((char *)v278 + v242);
  v244 = &a2[v242];
  v245 = (int *)type metadata accessor for CollaborationMetadata();
  v246 = *((_QWORD *)v245 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v246 + 48))(v244, 1, v245))
  {
    v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
    memcpy(v243, v244, *(_QWORD *)(*(_QWORD *)(v247 - 8) + 64));
  }
  else
  {
    v282 = v246;
    v248 = *((_QWORD *)v244 + 1);
    *v243 = *(_QWORD *)v244;
    v243[1] = v248;
    v249 = *((_QWORD *)v244 + 3);
    v243[2] = *((_QWORD *)v244 + 2);
    v243[3] = v249;
    v250 = v245[6];
    v251 = (char *)v243 + v250;
    v252 = &v244[v250];
    v253 = sub_1AD63B03C();
    v254 = *(_QWORD *)(v253 - 8);
    v255 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v254 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v255(v252, 1, v253))
    {
      v256 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v251, v252, *(_QWORD *)(*(_QWORD *)(v256 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v254 + 16))(v251, v252, v253);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v254 + 56))(v251, 0, 1, v253);
    }
    v257 = v245[7];
    v258 = (_QWORD *)((char *)v243 + v257);
    v259 = &v244[v257];
    v260 = *((_QWORD *)v259 + 1);
    *v258 = *(_QWORD *)v259;
    v258[1] = v260;
    *(_QWORD *)((char *)v243 + v245[8]) = *(_QWORD *)&v244[v245[8]];
    *(_QWORD *)((char *)v243 + v245[9]) = *(_QWORD *)&v244[v245[9]];
    v261 = v245[10];
    v262 = (char *)v243 + v261;
    v263 = &v244[v261];
    v264 = *(_QWORD *)&v244[v261 + 112];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v264)
    {
      *v262 = *v263;
      *(_OWORD *)(v262 + 8) = *(_OWORD *)(v263 + 8);
      v265 = *((_QWORD *)v263 + 4);
      *((_QWORD *)v262 + 3) = *((_QWORD *)v263 + 3);
      *((_QWORD *)v262 + 4) = v265;
      v266 = *((_QWORD *)v263 + 6);
      *((_QWORD *)v262 + 5) = *((_QWORD *)v263 + 5);
      *((_QWORD *)v262 + 6) = v266;
      v267 = *((_QWORD *)v263 + 8);
      *((_QWORD *)v262 + 7) = *((_QWORD *)v263 + 7);
      *((_QWORD *)v262 + 8) = v267;
      v268 = *((_QWORD *)v263 + 10);
      *((_QWORD *)v262 + 9) = *((_QWORD *)v263 + 9);
      *((_QWORD *)v262 + 10) = v268;
      *((_QWORD *)v262 + 11) = *((_QWORD *)v263 + 11);
      v262[96] = v263[96];
      *((_QWORD *)v262 + 13) = *((_QWORD *)v263 + 13);
      *((_QWORD *)v262 + 14) = v264;
      *((_QWORD *)v262 + 15) = *((_QWORD *)v263 + 15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      v269 = *((_OWORD *)v263 + 5);
      *((_OWORD *)v262 + 4) = *((_OWORD *)v263 + 4);
      *((_OWORD *)v262 + 5) = v269;
      v270 = *((_OWORD *)v263 + 7);
      *((_OWORD *)v262 + 6) = *((_OWORD *)v263 + 6);
      *((_OWORD *)v262 + 7) = v270;
      v271 = *((_OWORD *)v263 + 1);
      *(_OWORD *)v262 = *(_OWORD *)v263;
      *((_OWORD *)v262 + 1) = v271;
      v272 = *((_OWORD *)v263 + 3);
      *((_OWORD *)v262 + 2) = *((_OWORD *)v263 + 2);
      *((_OWORD *)v262 + 3) = v272;
    }
    v224 = v278;
    (*(void (**)(_QWORD *, _QWORD, uint64_t, int *))(v282 + 56))(v243, 0, 1, v245);
  }
  return v224;
}

char *sub_1AD07B250(char *a1, char *a2, int *a3)
{
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  unsigned int (*v10)(char *, uint64_t, uint64_t);
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unsigned int v38;
  unsigned int v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  char *v54;
  char *v55;
  char v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t (*v94)(_DWORD *, uint64_t, uint64_t);
  int v95;
  int v96;
  uint64_t v97;
  char *v98;
  unsigned int (*v99)(char *, uint64_t, void *);
  char *v100;
  uint64_t v101;
  uint64_t v102;
  int *v103;
  uint64_t v104;
  char *v105;
  uint64_t (*v106)(char *, uint64_t, void *);
  char *v107;
  int v108;
  int v109;
  uint64_t v110;
  char *v111;
  char *v112;
  void (*v113)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v114;
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  uint64_t v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  char *v128;
  char *v129;
  int *v130;
  uint64_t v131;
  uint64_t (*v132)(_DWORD *, uint64_t, int *);
  int v133;
  int v134;
  uint64_t v135;
  char *v136;
  unsigned int (*v137)(char *, uint64_t, void *);
  char *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  uint64_t (*v143)(char *, uint64_t, void *);
  char *v144;
  int v145;
  int v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  char *v151;
  char *v152;
  void (*v153)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v154;
  uint64_t v155;
  char *v156;
  char *v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  uint64_t v186;
  char *v187;
  char *v188;
  int *v189;
  uint64_t v190;
  uint64_t (*v191)(_DWORD *, uint64_t, int *);
  int v192;
  int v193;
  uint64_t v194;
  char *v195;
  unsigned int (*v196)(char *, uint64_t, void *);
  char *v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  char *v201;
  uint64_t (*v202)(char *, uint64_t, void *);
  char *v203;
  int v204;
  int v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  char *v210;
  char *v211;
  void (*v212)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v213;
  uint64_t v214;
  char *v215;
  char *v216;
  uint64_t v217;
  char *v218;
  char *v219;
  uint64_t v220;
  char *v221;
  char *v222;
  uint64_t v223;
  char *v224;
  char *v225;
  int *v226;
  uint64_t (*v227)(char *, uint64_t, int *);
  int v228;
  int v229;
  uint64_t v230;
  uint64_t v231;
  unsigned int v232;
  unsigned int v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  char *v237;
  char *v238;
  uint64_t v239;
  uint64_t v240;
  char *v241;
  char *v242;
  uint64_t v243;
  char *v244;
  char *v245;
  void (*v246)(char *, _QWORD, uint64_t, int *);
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  unsigned int v251;
  unsigned int v252;
  uint64_t v253;
  uint64_t v254;
  char *v255;
  char *v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  char *v261;
  char *v262;
  int *v263;
  uint64_t v264;
  uint64_t (*v265)(_DWORD *, uint64_t, int *);
  int v266;
  int v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  char *v274;
  char *v275;
  unsigned int v276;
  unsigned int v277;
  uint64_t v278;
  char *v279;
  char *v280;
  uint64_t v281;
  char *v282;
  char *v283;
  void (*v284)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  char *v290;
  char *v291;
  uint64_t v292;
  char *v293;
  char *v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t (*v300)(char *, uint64_t, uint64_t);
  int v301;
  int v302;
  uint64_t v303;
  uint64_t v304;
  unsigned int v305;
  unsigned int v306;
  int *v307;
  uint64_t v308;
  char *v309;
  char *v310;
  void (*v311)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v312;
  char *v313;
  char *v314;
  int *v315;
  uint64_t v316;
  uint64_t (*v317)(_DWORD *, uint64_t, int *);
  int v318;
  int v319;
  uint64_t v320;
  char *v321;
  char *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  char *v326;
  char *v327;
  unsigned int v328;
  unsigned int v329;
  int *v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  char *v335;
  char *v336;
  void (*v337)(_DWORD *, _QWORD, uint64_t, int *);
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  uint64_t (*v342)(char *, uint64_t, uint64_t);
  int v343;
  int v344;
  char *v345;
  uint64_t v346;
  char *v347;
  uint64_t v348;
  uint64_t v349;
  char *v350;
  char *v351;
  uint64_t v352;
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  char *v357;
  char *v358;
  uint64_t v359;
  uint64_t v360;
  char *v361;
  uint64_t v362;
  uint64_t v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  uint64_t v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  _OWORD *v389;
  __int128 *v390;
  uint64_t v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  uint64_t v416;
  char *v417;
  char *v418;
  int *v419;
  uint64_t v420;
  uint64_t (*v421)(_QWORD *, uint64_t, int *);
  int v422;
  int v423;
  uint64_t v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  unsigned int (*v428)(char *, uint64_t, uint64_t);
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  char *v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t (*v436)(char *, uint64_t, uint64_t);
  int v437;
  int v438;
  char *v439;
  uint64_t v440;
  char *v441;
  char *v442;
  uint64_t v443;
  char *v444;
  char *v445;
  uint64_t v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  uint64_t v454;
  uint64_t v455;
  char *v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  char *v460;
  uint64_t v461;
  uint64_t v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  __int128 v470;
  __int128 v471;
  __int128 v472;
  __int128 v473;
  __int128 v474;
  _QWORD *v475;
  unsigned int (*v476)(char *, uint64_t, uint64_t);
  char *v477;
  int *v478;
  uint64_t v479;
  void *__dst;
  char *__dsta;

  v5 = a1;
  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1AD63AF28();
  v479 = *(_QWORD *)(v9 - 8);
  v10 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v479 + 48);
  v11 = v10(v7, 1, v9);
  v12 = v10(v8, 1, v9);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v479 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v479 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v479 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v479 + 24))(v7, v8, v9);
LABEL_7:
  v14 = a3[6];
  v15 = &v5[v14];
  v16 = &a2[v14];
  v17 = v10(&v5[v14], 1, v9);
  v18 = v10(v16, 1, v9);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v479 + 16))(v15, v16, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v479 + 56))(v15, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v479 + 8))(v15, v9);
LABEL_12:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v479 + 24))(v15, v16, v9);
LABEL_13:
  v20 = a3[7];
  v21 = &v5[v20];
  v22 = &a2[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  *((_QWORD *)v21 + 1) = *((_QWORD *)v22 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v23 = a3[8];
  v24 = &v5[v23];
  v25 = &a2[v23];
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *((_QWORD *)v24 + 1) = *((_QWORD *)v25 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[9];
  v27 = &v5[v26];
  v28 = &a2[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *((_QWORD *)v27 + 1) = *((_QWORD *)v28 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[10];
  v30 = &v5[v29];
  v31 = &a2[v29];
  *(_QWORD *)v30 = *(_QWORD *)v31;
  *((_QWORD *)v30 + 1) = *((_QWORD *)v31 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[11];
  v33 = &v5[v32];
  v34 = &a2[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *((_QWORD *)v33 + 1) = *((_QWORD *)v34 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = a3[12];
  v36 = &v5[v35];
  v37 = &a2[v35];
  v38 = v10(&v5[v35], 1, v9);
  v39 = v10(v37, 1, v9);
  if (v38)
  {
    if (!v39)
    {
      (*(void (**)(char *, char *, uint64_t))(v479 + 16))(v36, v37, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v479 + 56))(v36, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v39)
  {
    (*(void (**)(char *, uint64_t))(v479 + 8))(v36, v9);
LABEL_18:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v479 + 24))(v36, v37, v9);
LABEL_19:
  v41 = a3[13];
  v42 = &v5[v41];
  v43 = &a2[v41];
  *(_QWORD *)v42 = *(_QWORD *)v43;
  *((_QWORD *)v42 + 1) = *((_QWORD *)v43 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v44 = a3[14];
  v45 = &v5[v44];
  v46 = &a2[v44];
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *((_QWORD *)v45 + 1) = *((_QWORD *)v46 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v47 = a3[15];
  v48 = &v5[v47];
  v49 = &a2[v47];
  *(_QWORD *)v48 = *(_QWORD *)v49;
  *((_QWORD *)v48 + 1) = *((_QWORD *)v49 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v50 = a3[16];
  v51 = &v5[v50];
  v52 = &a2[v50];
  *(_QWORD *)v51 = *(_QWORD *)v52;
  *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5[a3[17]] = a2[a3[17]];
  v53 = a3[18];
  v54 = &v5[v53];
  v55 = &a2[v53];
  v56 = v55[32];
  v57 = *((_OWORD *)v55 + 1);
  *(_OWORD *)v54 = *(_OWORD *)v55;
  *((_OWORD *)v54 + 1) = v57;
  v54[32] = v56;
  v58 = a3[19];
  v59 = &v5[v58];
  v60 = &a2[v58];
  *(_QWORD *)v59 = *(_QWORD *)v60;
  *((_QWORD *)v59 + 1) = *((_QWORD *)v60 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61 = a3[20];
  v62 = &v5[v61];
  v63 = &a2[v61];
  *(_QWORD *)v62 = *(_QWORD *)v63;
  *((_QWORD *)v62 + 1) = *((_QWORD *)v63 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64 = a3[21];
  v65 = (uint64_t)&v5[v64];
  v66 = &a2[v64];
  v67 = *(_QWORD *)&v5[v64 + 16];
  v68 = *(_QWORD *)&a2[v64 + 16];
  __dst = (void *)v9;
  if (v67 == 1)
  {
    if (v68 == 1)
    {
      v69 = *(_OWORD *)v66;
      v70 = *((_OWORD *)v66 + 1);
      v71 = *((_OWORD *)v66 + 3);
      *(_OWORD *)(v65 + 32) = *((_OWORD *)v66 + 2);
      *(_OWORD *)(v65 + 48) = v71;
      *(_OWORD *)v65 = v69;
      *(_OWORD *)(v65 + 16) = v70;
      v72 = *((_OWORD *)v66 + 4);
      v73 = *((_OWORD *)v66 + 5);
      v74 = *((_OWORD *)v66 + 6);
      *(_OWORD *)(v65 + 105) = *(_OWORD *)(v66 + 105);
      *(_OWORD *)(v65 + 80) = v73;
      *(_OWORD *)(v65 + 96) = v74;
      *(_OWORD *)(v65 + 64) = v72;
    }
    else
    {
      *(_QWORD *)v65 = *(_QWORD *)v66;
      *(_QWORD *)(v65 + 8) = *((_QWORD *)v66 + 1);
      *(_QWORD *)(v65 + 16) = *((_QWORD *)v66 + 2);
      *(_QWORD *)(v65 + 24) = *((_QWORD *)v66 + 3);
      *(_QWORD *)(v65 + 32) = *((_QWORD *)v66 + 4);
      *(_QWORD *)(v65 + 40) = *((_QWORD *)v66 + 5);
      v81 = *((_OWORD *)v66 + 3);
      v82 = *((_OWORD *)v66 + 4);
      *(_BYTE *)(v65 + 80) = v66[80];
      *(_OWORD *)(v65 + 48) = v81;
      *(_OWORD *)(v65 + 64) = v82;
      v83 = *(_OWORD *)(v66 + 88);
      v84 = *(_OWORD *)(v66 + 104);
      *(_BYTE *)(v65 + 120) = v66[120];
      *(_OWORD *)(v65 + 104) = v84;
      *(_OWORD *)(v65 + 88) = v83;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v68 == 1)
  {
    sub_1AD0661D0(v65);
    v75 = *((_OWORD *)v66 + 3);
    v77 = *(_OWORD *)v66;
    v76 = *((_OWORD *)v66 + 1);
    *(_OWORD *)(v65 + 32) = *((_OWORD *)v66 + 2);
    *(_OWORD *)(v65 + 48) = v75;
    *(_OWORD *)v65 = v77;
    *(_OWORD *)(v65 + 16) = v76;
    v79 = *((_OWORD *)v66 + 5);
    v78 = *((_OWORD *)v66 + 6);
    v80 = *((_OWORD *)v66 + 4);
    *(_OWORD *)(v65 + 105) = *(_OWORD *)(v66 + 105);
    *(_OWORD *)(v65 + 80) = v79;
    *(_OWORD *)(v65 + 96) = v78;
    *(_OWORD *)(v65 + 64) = v80;
  }
  else
  {
    *(_QWORD *)v65 = *(_QWORD *)v66;
    *(_QWORD *)(v65 + 8) = *((_QWORD *)v66 + 1);
    *(_QWORD *)(v65 + 16) = *((_QWORD *)v66 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v65 + 24) = *((_QWORD *)v66 + 3);
    *(_QWORD *)(v65 + 32) = *((_QWORD *)v66 + 4);
    *(_QWORD *)(v65 + 40) = *((_QWORD *)v66 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v85 = *((_OWORD *)v66 + 3);
    v86 = *((_OWORD *)v66 + 4);
    *(_BYTE *)(v65 + 80) = v66[80];
    *(_OWORD *)(v65 + 48) = v85;
    *(_OWORD *)(v65 + 64) = v86;
    v87 = *(_OWORD *)(v66 + 88);
    v88 = *(_OWORD *)(v66 + 104);
    *(_BYTE *)(v65 + 120) = v66[120];
    *(_OWORD *)(v65 + 104) = v88;
    *(_OWORD *)(v65 + 88) = v87;
  }
  v478 = a3;
  v89 = a3[22];
  v90 = &v5[v89];
  v91 = &a2[v89];
  v92 = type metadata accessor for LinkPresentation.IconMetadata(0);
  v93 = *(_QWORD *)(v92 - 8);
  v94 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v93 + 48);
  v95 = v94(v90, 1, v92);
  v96 = v94(v91, 1, v92);
  v476 = v10;
  v477 = v5;
  if (v95)
  {
    if (!v96)
    {
      *(_DWORD *)v90 = *(_DWORD *)v91;
      v97 = *(int *)(v92 + 20);
      v98 = &v90[v97];
      v99 = (unsigned int (*)(char *, uint64_t, void *))v10;
      v100 = &v91[v97];
      if (v99(&v91[v97], 1, __dst))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v98, v100, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v479 + 16))(v98, v100, __dst);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v98, 0, 1, __dst);
      }
      v110 = *(int *)(v92 + 24);
      v111 = &v90[v110];
      v112 = &v91[v110];
      *v111 = *(_QWORD *)v112;
      v111[1] = *((_QWORD *)v112 + 1);
      v113 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v93 + 56);
      swift_bridgeObjectRetain();
      v113(v90, 0, 1, v92);
      v103 = v478;
      goto LABEL_45;
    }
LABEL_32:
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
    memcpy(v90, v91, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
    v103 = v478;
    goto LABEL_46;
  }
  if (v96)
  {
    sub_1AD066230((uint64_t)v90, type metadata accessor for LinkPresentation.IconMetadata);
    goto LABEL_32;
  }
  *(_DWORD *)v90 = *(_DWORD *)v91;
  v104 = *(int *)(v92 + 20);
  v105 = &v90[v104];
  v106 = (uint64_t (*)(char *, uint64_t, void *))v10;
  v107 = &v91[v104];
  v108 = v106(&v90[v104], 1, __dst);
  v109 = v106(v107, 1, __dst);
  v103 = v478;
  if (!v108)
  {
    if (!v109)
    {
      (*(void (**)(char *, char *, void *))(v479 + 24))(v105, v107, __dst);
      goto LABEL_44;
    }
    (*(void (**)(char *, void *))(v479 + 8))(v105, __dst);
    goto LABEL_43;
  }
  if (v109)
  {
LABEL_43:
    v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v105, v107, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    goto LABEL_44;
  }
  (*(void (**)(char *, char *, void *))(v479 + 16))(v105, v107, __dst);
  (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v105, 0, 1, __dst);
LABEL_44:
  v5 = v477;
  v115 = *(int *)(v92 + 24);
  v116 = &v90[v115];
  v117 = &v91[v115];
  *v116 = *(_QWORD *)v117;
  v116[1] = *((_QWORD *)v117 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_45:
  v10 = v476;
LABEL_46:
  v118 = v103[23];
  v119 = (uint64_t)&v5[v118];
  v120 = &a2[v118];
  v121 = *(_QWORD *)&v5[v118 + 16];
  v122 = *(_QWORD *)&a2[v118 + 16];
  if (v121 == 1)
  {
    if (v122 == 1)
    {
      v123 = *(_OWORD *)v120;
      v124 = *((_OWORD *)v120 + 1);
      *(_QWORD *)(v119 + 32) = *((_QWORD *)v120 + 4);
      *(_OWORD *)v119 = v123;
      *(_OWORD *)(v119 + 16) = v124;
    }
    else
    {
      *(_QWORD *)v119 = *(_QWORD *)v120;
      *(_QWORD *)(v119 + 8) = *((_QWORD *)v120 + 1);
      *(_QWORD *)(v119 + 16) = *((_QWORD *)v120 + 2);
      *(_QWORD *)(v119 + 24) = *((_QWORD *)v120 + 3);
      *(_QWORD *)(v119 + 32) = *((_QWORD *)v120 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v122 == 1)
  {
    sub_1AD066200(v119);
    v125 = *((_QWORD *)v120 + 4);
    v126 = *((_OWORD *)v120 + 1);
    *(_OWORD *)v119 = *(_OWORD *)v120;
    *(_OWORD *)(v119 + 16) = v126;
    *(_QWORD *)(v119 + 32) = v125;
  }
  else
  {
    *(_QWORD *)v119 = *(_QWORD *)v120;
    *(_QWORD *)(v119 + 8) = *((_QWORD *)v120 + 1);
    *(_QWORD *)(v119 + 16) = *((_QWORD *)v120 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v119 + 24) = *((_QWORD *)v120 + 3);
    *(_QWORD *)(v119 + 32) = *((_QWORD *)v120 + 4);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v127 = v103[24];
  v128 = &v5[v127];
  v129 = &a2[v127];
  v130 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
  v131 = *((_QWORD *)v130 - 1);
  v132 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v131 + 48);
  v133 = v132(v128, 1, v130);
  v134 = v132(v129, 1, v130);
  if (v133)
  {
    if (!v134)
    {
      *(_DWORD *)v128 = *(_DWORD *)v129;
      v135 = v130[5];
      v136 = &v128[v135];
      v137 = (unsigned int (*)(char *, uint64_t, void *))v10;
      v138 = &v129[v135];
      if (v137(&v129[v135], 1, __dst))
      {
        v139 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v136, v138, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v479 + 16))(v136, v138, __dst);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v136, 0, 1, __dst);
      }
      v147 = v130[6];
      v148 = &v128[v147];
      v149 = &v129[v147];
      *v148 = *(_QWORD *)v149;
      v148[1] = *((_QWORD *)v149 + 1);
      v150 = v130[7];
      v151 = &v128[v150];
      v152 = &v129[v150];
      *v151 = *(_QWORD *)v152;
      v151[1] = *((_QWORD *)v152 + 1);
      v153 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v131 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v153(v128, 0, 1, v130);
      goto LABEL_69;
    }
LABEL_59:
    v140 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
    memcpy(v128, v129, *(_QWORD *)(*(_QWORD *)(v140 - 8) + 64));
    goto LABEL_70;
  }
  if (v134)
  {
    sub_1AD066230((uint64_t)v128, type metadata accessor for LinkPresentation.ARAssetMetadata);
    goto LABEL_59;
  }
  *(_DWORD *)v128 = *(_DWORD *)v129;
  v141 = v130[5];
  v142 = &v128[v141];
  v143 = (uint64_t (*)(char *, uint64_t, void *))v10;
  v144 = &v129[v141];
  v145 = v143(&v128[v141], 1, __dst);
  v146 = v143(v144, 1, __dst);
  if (!v145)
  {
    if (!v146)
    {
      (*(void (**)(char *, char *, void *))(v479 + 24))(v142, v144, __dst);
      goto LABEL_68;
    }
    (*(void (**)(char *, void *))(v479 + 8))(v142, __dst);
    goto LABEL_67;
  }
  if (v146)
  {
LABEL_67:
    v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v142, v144, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
    goto LABEL_68;
  }
  (*(void (**)(char *, char *, void *))(v479 + 16))(v142, v144, __dst);
  (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v142, 0, 1, __dst);
LABEL_68:
  v5 = v477;
  v155 = v130[6];
  v156 = &v128[v155];
  v157 = &v129[v155];
  *v156 = *(_QWORD *)v157;
  v156[1] = *((_QWORD *)v157 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v158 = v130[7];
  v159 = &v128[v158];
  v160 = &v129[v158];
  *v159 = *(_QWORD *)v160;
  v159[1] = *((_QWORD *)v160 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_69:
  v10 = v476;
LABEL_70:
  v161 = v103[25];
  v162 = (uint64_t)&v5[v161];
  v163 = &a2[v161];
  v164 = *(_QWORD *)&v5[v161 + 16];
  v165 = *(_QWORD *)&a2[v161 + 16];
  if (v164 == 1)
  {
    if (v165 == 1)
    {
      v166 = *(_OWORD *)v163;
      v167 = *((_OWORD *)v163 + 1);
      v168 = *((_OWORD *)v163 + 3);
      *(_OWORD *)(v162 + 32) = *((_OWORD *)v163 + 2);
      *(_OWORD *)(v162 + 48) = v168;
      *(_OWORD *)v162 = v166;
      *(_OWORD *)(v162 + 16) = v167;
      v169 = *((_OWORD *)v163 + 4);
      v170 = *((_OWORD *)v163 + 5);
      v171 = *((_OWORD *)v163 + 6);
      *(_OWORD *)(v162 + 105) = *(_OWORD *)(v163 + 105);
      *(_OWORD *)(v162 + 80) = v170;
      *(_OWORD *)(v162 + 96) = v171;
      *(_OWORD *)(v162 + 64) = v169;
    }
    else
    {
      *(_QWORD *)v162 = *(_QWORD *)v163;
      *(_QWORD *)(v162 + 8) = *((_QWORD *)v163 + 1);
      *(_QWORD *)(v162 + 16) = *((_QWORD *)v163 + 2);
      *(_QWORD *)(v162 + 24) = *((_QWORD *)v163 + 3);
      *(_QWORD *)(v162 + 32) = *((_QWORD *)v163 + 4);
      *(_QWORD *)(v162 + 40) = *((_QWORD *)v163 + 5);
      v178 = *((_OWORD *)v163 + 3);
      v179 = *((_OWORD *)v163 + 4);
      *(_BYTE *)(v162 + 80) = v163[80];
      *(_OWORD *)(v162 + 48) = v178;
      *(_OWORD *)(v162 + 64) = v179;
      v180 = *(_OWORD *)(v163 + 88);
      v181 = *(_OWORD *)(v163 + 104);
      *(_BYTE *)(v162 + 120) = v163[120];
      *(_OWORD *)(v162 + 104) = v181;
      *(_OWORD *)(v162 + 88) = v180;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v165 == 1)
  {
    sub_1AD0661D0(v162);
    v172 = *((_OWORD *)v163 + 3);
    v174 = *(_OWORD *)v163;
    v173 = *((_OWORD *)v163 + 1);
    *(_OWORD *)(v162 + 32) = *((_OWORD *)v163 + 2);
    *(_OWORD *)(v162 + 48) = v172;
    *(_OWORD *)v162 = v174;
    *(_OWORD *)(v162 + 16) = v173;
    v176 = *((_OWORD *)v163 + 5);
    v175 = *((_OWORD *)v163 + 6);
    v177 = *((_OWORD *)v163 + 4);
    *(_OWORD *)(v162 + 105) = *(_OWORD *)(v163 + 105);
    *(_OWORD *)(v162 + 80) = v176;
    *(_OWORD *)(v162 + 96) = v175;
    *(_OWORD *)(v162 + 64) = v177;
  }
  else
  {
    *(_QWORD *)v162 = *(_QWORD *)v163;
    *(_QWORD *)(v162 + 8) = *((_QWORD *)v163 + 1);
    *(_QWORD *)(v162 + 16) = *((_QWORD *)v163 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v162 + 24) = *((_QWORD *)v163 + 3);
    *(_QWORD *)(v162 + 32) = *((_QWORD *)v163 + 4);
    *(_QWORD *)(v162 + 40) = *((_QWORD *)v163 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v182 = *((_OWORD *)v163 + 3);
    v183 = *((_OWORD *)v163 + 4);
    *(_BYTE *)(v162 + 80) = v163[80];
    *(_OWORD *)(v162 + 48) = v182;
    *(_OWORD *)(v162 + 64) = v183;
    v184 = *(_OWORD *)(v163 + 88);
    v185 = *(_OWORD *)(v163 + 104);
    *(_BYTE *)(v162 + 120) = v163[120];
    *(_OWORD *)(v162 + 104) = v185;
    *(_OWORD *)(v162 + 88) = v184;
  }
  *(_QWORD *)&v5[v103[26]] = *(_QWORD *)&a2[v103[26]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v186 = v103[27];
  v187 = &v5[v186];
  v188 = &a2[v186];
  v189 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
  v190 = *((_QWORD *)v189 - 1);
  v191 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v190 + 48);
  v192 = v191(v187, 1, v189);
  v193 = v191(v188, 1, v189);
  if (v192)
  {
    if (!v193)
    {
      *(_DWORD *)v187 = *(_DWORD *)v188;
      v194 = v189[5];
      v195 = &v187[v194];
      v196 = (unsigned int (*)(char *, uint64_t, void *))v10;
      v197 = &v188[v194];
      if (v196(&v188[v194], 1, __dst))
      {
        v198 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v195, v197, *(_QWORD *)(*(_QWORD *)(v198 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v479 + 16))(v195, v197, __dst);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v195, 0, 1, __dst);
      }
      v206 = v189[6];
      v207 = &v187[v206];
      v208 = &v188[v206];
      *v207 = *(_QWORD *)v208;
      v207[1] = *((_QWORD *)v208 + 1);
      *(_OWORD *)&v187[v189[7]] = *(_OWORD *)&v188[v189[7]];
      v209 = v189[8];
      v210 = &v187[v209];
      v211 = &v188[v209];
      *v210 = *(_QWORD *)v211;
      v210[1] = *((_QWORD *)v211 + 1);
      v212 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v190 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v212(v187, 0, 1, v189);
      goto LABEL_93;
    }
LABEL_83:
    v199 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
    memcpy(v187, v188, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
    goto LABEL_94;
  }
  if (v193)
  {
    sub_1AD066230((uint64_t)v187, type metadata accessor for LinkPresentation.ImageMetadata);
    goto LABEL_83;
  }
  *(_DWORD *)v187 = *(_DWORD *)v188;
  v200 = v189[5];
  v201 = &v187[v200];
  v202 = (uint64_t (*)(char *, uint64_t, void *))v10;
  v203 = &v188[v200];
  v204 = v202(&v187[v200], 1, __dst);
  v205 = v202(v203, 1, __dst);
  if (!v204)
  {
    if (!v205)
    {
      (*(void (**)(char *, char *, void *))(v479 + 24))(v201, v203, __dst);
      goto LABEL_92;
    }
    (*(void (**)(char *, void *))(v479 + 8))(v201, __dst);
    goto LABEL_91;
  }
  if (v205)
  {
LABEL_91:
    v213 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v201, v203, *(_QWORD *)(*(_QWORD *)(v213 - 8) + 64));
    goto LABEL_92;
  }
  (*(void (**)(char *, char *, void *))(v479 + 16))(v201, v203, __dst);
  (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v201, 0, 1, __dst);
LABEL_92:
  v5 = v477;
  v214 = v189[6];
  v215 = &v187[v214];
  v216 = &v188[v214];
  *v215 = *(_QWORD *)v216;
  v215[1] = *((_QWORD *)v216 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v217 = v189[7];
  v218 = &v187[v217];
  v219 = &v188[v217];
  *v218 = *(_QWORD *)v219;
  v218[1] = *((_QWORD *)v219 + 1);
  v220 = v189[8];
  v221 = &v187[v220];
  v222 = &v188[v220];
  *v221 = *(_QWORD *)v222;
  v221[1] = *((_QWORD *)v222 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_93:
  v10 = v476;
LABEL_94:
  *(_QWORD *)&v5[v103[28]] = *(_QWORD *)&a2[v103[28]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[v103[29]] = *(_QWORD *)&a2[v103[29]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v223 = v103[30];
  v224 = &v5[v223];
  v225 = &a2[v223];
  v226 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v475 = (_QWORD *)*((_QWORD *)v226 - 1);
  v227 = (uint64_t (*)(char *, uint64_t, int *))v475[6];
  v228 = v227(v224, 1, v226);
  v229 = v227(v225, 1, v226);
  if (!v228)
  {
    if (v229)
    {
      sub_1AD066230((uint64_t)v224, type metadata accessor for LinkPresentation.Video);
      goto LABEL_100;
    }
    v232 = v10(v224, 1, (uint64_t)__dst);
    v233 = v10(v225, 1, (uint64_t)__dst);
    if (v232)
    {
      if (v233)
      {
        v234 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v234 - 8) + 64));
        v235 = (uint64_t)__dst;
      }
      else
      {
        v235 = (uint64_t)__dst;
        (*(void (**)(char *, char *, void *))(v479 + 16))(v224, v225, __dst);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v224, 0, 1, __dst);
      }
    }
    else
    {
      v235 = (uint64_t)__dst;
      if (v233)
      {
        (*(void (**)(char *, void *))(v479 + 8))(v224, __dst);
        v247 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v247 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v479 + 24))(v224, v225, __dst);
      }
    }
    v248 = v226[5];
    v249 = &v224[v248];
    v250 = &v225[v248];
    v251 = v10(&v224[v248], 1, v235);
    v252 = v10(v250, 1, v235);
    if (v251)
    {
      if (!v252)
      {
        (*(void (**)(char *, char *, void *))(v479 + 16))(v249, v250, __dst);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v249, 0, 1, __dst);
LABEL_122:
        v5 = v477;
        v254 = v226[6];
        v255 = &v224[v254];
        v256 = &v225[v254];
        *(_QWORD *)v255 = *(_QWORD *)v256;
        *((_QWORD *)v255 + 1) = *((_QWORD *)v256 + 1);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        v224[v226[7]] = v225[v226[7]];
        *(_QWORD *)&v224[v226[8]] = *(_QWORD *)&v225[v226[8]];
        swift_retain();
        swift_release();
        v257 = v226[9];
        v258 = &v224[v257];
        v259 = &v225[v257];
        *v258 = *v259;
        *((_QWORD *)v258 + 1) = *((_QWORD *)v259 + 1);
        *((_QWORD *)v258 + 2) = *((_QWORD *)v259 + 2);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_123;
      }
    }
    else
    {
      if (!v252)
      {
        (*(void (**)(char *, char *, void *))(v479 + 24))(v249, v250, __dst);
        goto LABEL_122;
      }
      (*(void (**)(char *, void *))(v479 + 8))(v249, __dst);
    }
    v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v249, v250, *(_QWORD *)(*(_QWORD *)(v253 - 8) + 64));
    goto LABEL_122;
  }
  if (v229)
  {
LABEL_100:
    v231 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v231 - 8) + 64));
    goto LABEL_123;
  }
  if (v10(v225, 1, (uint64_t)__dst))
  {
    v230 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v224, v225, *(_QWORD *)(*(_QWORD *)(v230 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, void *))(v479 + 16))(v224, v225, __dst);
    (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v224, 0, 1, __dst);
  }
  v236 = v226[5];
  v237 = &v224[v236];
  v238 = &v225[v236];
  if (v10(&v225[v236], 1, (uint64_t)__dst))
  {
    v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v237, v238, *(_QWORD *)(*(_QWORD *)(v239 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, void *))(v479 + 16))(v237, v238, __dst);
    v10 = v476;
    (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v237, 0, 1, __dst);
  }
  v240 = v226[6];
  v241 = &v224[v240];
  v242 = &v225[v240];
  *(_QWORD *)v241 = *(_QWORD *)v242;
  *((_QWORD *)v241 + 1) = *((_QWORD *)v242 + 1);
  v224[v226[7]] = v225[v226[7]];
  *(_QWORD *)&v224[v226[8]] = *(_QWORD *)&v225[v226[8]];
  v243 = v226[9];
  v244 = &v224[v243];
  v245 = &v225[v243];
  *v244 = *v245;
  *((_QWORD *)v244 + 1) = *((_QWORD *)v245 + 1);
  *((_QWORD *)v244 + 2) = *((_QWORD *)v245 + 2);
  v246 = (void (*)(char *, _QWORD, uint64_t, int *))v475[7];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  v246(v224, 0, 1, v226);
LABEL_123:
  v260 = v103[31];
  v261 = &v5[v260];
  v262 = &a2[v260];
  v263 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
  v264 = *((_QWORD *)v263 - 1);
  v265 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v264 + 48);
  v266 = v265(v261, 1, v263);
  v267 = v265(v262, 1, v263);
  if (v266)
  {
    if (!v267)
    {
      *(_DWORD *)v261 = *(_DWORD *)v262;
      v268 = v263[5];
      v269 = &v261[v268];
      v270 = &v262[v268];
      if (v10(&v262[v268], 1, (uint64_t)__dst))
      {
        v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v271 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v479 + 16))(v269, v270, __dst);
        v10 = v476;
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v269, 0, 1, __dst);
      }
      v278 = v263[6];
      v279 = &v261[v278];
      v280 = &v262[v278];
      *v279 = *(_QWORD *)v280;
      v279[1] = *((_QWORD *)v280 + 1);
      *(_OWORD *)&v261[v263[7]] = *(_OWORD *)&v262[v263[7]];
      v281 = v263[8];
      v282 = &v261[v281];
      v283 = &v262[v281];
      *v282 = *(_QWORD *)v283;
      v282[1] = *((_QWORD *)v283 + 1);
      v284 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v264 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v284(v261, 0, 1, v263);
      goto LABEL_139;
    }
LABEL_129:
    v272 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
    memcpy(v261, v262, *(_QWORD *)(*(_QWORD *)(v272 - 8) + 64));
    goto LABEL_140;
  }
  if (v267)
  {
    sub_1AD066230((uint64_t)v261, type metadata accessor for LinkPresentation.VideoMetadata);
    goto LABEL_129;
  }
  *(_DWORD *)v261 = *(_DWORD *)v262;
  v273 = v263[5];
  v274 = &v261[v273];
  v275 = &v262[v273];
  v276 = v10(&v261[v273], 1, (uint64_t)__dst);
  v277 = v10(v275, 1, (uint64_t)__dst);
  if (!v276)
  {
    if (!v277)
    {
      (*(void (**)(char *, char *, void *))(v479 + 24))(v274, v275, __dst);
      goto LABEL_138;
    }
    (*(void (**)(char *, void *))(v479 + 8))(v274, __dst);
    goto LABEL_137;
  }
  if (v277)
  {
LABEL_137:
    v285 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v274, v275, *(_QWORD *)(*(_QWORD *)(v285 - 8) + 64));
    goto LABEL_138;
  }
  (*(void (**)(char *, char *, void *))(v479 + 16))(v274, v275, __dst);
  (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v274, 0, 1, __dst);
LABEL_138:
  v286 = v263[6];
  v287 = &v261[v286];
  v288 = &v262[v286];
  *v287 = *(_QWORD *)v288;
  v287[1] = *((_QWORD *)v288 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v289 = v263[7];
  v290 = &v261[v289];
  v291 = &v262[v289];
  *v290 = *(_QWORD *)v291;
  v290[1] = *((_QWORD *)v291 + 1);
  v292 = v263[8];
  v293 = &v261[v292];
  v294 = &v262[v292];
  *v293 = *(_QWORD *)v294;
  v293[1] = *((_QWORD *)v294 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_139:
  v5 = v477;
LABEL_140:
  v295 = v103[32];
  v296 = &v5[v295];
  v297 = &a2[v295];
  v298 = type metadata accessor for LinkPresentation.Audio(0);
  v299 = *(_QWORD *)(v298 - 8);
  v300 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v299 + 48);
  v301 = v300(v296, 1, v298);
  v302 = v300(v297, 1, v298);
  if (v301)
  {
    if (!v302)
    {
      if (v10(v297, 1, (uint64_t)__dst))
      {
        v303 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v296, v297, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v479 + 16))(v296, v297, __dst);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v296, 0, 1, __dst);
      }
      v308 = *(int *)(v298 + 20);
      v309 = &v296[v308];
      v310 = &v297[v308];
      *(_QWORD *)v309 = *(_QWORD *)v310;
      *((_QWORD *)v309 + 1) = *((_QWORD *)v310 + 1);
      v311 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v299 + 56);
      swift_bridgeObjectRetain();
      v311(v296, 0, 1, v298);
      goto LABEL_152;
    }
LABEL_146:
    v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
    memcpy(v296, v297, *(_QWORD *)(*(_QWORD *)(v304 - 8) + 64));
LABEL_152:
    v307 = v478;
    goto LABEL_153;
  }
  if (v302)
  {
    sub_1AD066230((uint64_t)v296, type metadata accessor for LinkPresentation.Audio);
    goto LABEL_146;
  }
  v305 = v10(v296, 1, (uint64_t)__dst);
  v306 = v10(v297, 1, (uint64_t)__dst);
  v307 = v478;
  if (!v305)
  {
    if (!v306)
    {
      (*(void (**)(char *, char *, void *))(v479 + 24))(v296, v297, __dst);
      goto LABEL_177;
    }
    (*(void (**)(char *, void *))(v479 + 8))(v296, __dst);
    goto LABEL_176;
  }
  if (v306)
  {
LABEL_176:
    v348 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v296, v297, *(_QWORD *)(*(_QWORD *)(v348 - 8) + 64));
    goto LABEL_177;
  }
  (*(void (**)(char *, char *, void *))(v479 + 16))(v296, v297, __dst);
  (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v296, 0, 1, __dst);
LABEL_177:
  v349 = *(int *)(v298 + 20);
  v350 = &v296[v349];
  v351 = &v297[v349];
  *(_QWORD *)v350 = *(_QWORD *)v351;
  *((_QWORD *)v350 + 1) = *((_QWORD *)v351 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_153:
  v312 = v307[33];
  v313 = &v5[v312];
  v314 = &a2[v312];
  v315 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
  v316 = *((_QWORD *)v315 - 1);
  v317 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v316 + 48);
  v318 = v317(v313, 1, v315);
  v319 = v317(v314, 1, v315);
  if (v318)
  {
    if (!v319)
    {
      *(_DWORD *)v313 = *(_DWORD *)v314;
      v320 = v315[5];
      v321 = &v313[v320];
      v322 = &v314[v320];
      if (v10(&v314[v320], 1, (uint64_t)__dst))
      {
        v323 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v321, v322, *(_QWORD *)(*(_QWORD *)(v323 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, void *))(v479 + 16))(v321, v322, __dst);
        (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v321, 0, 1, __dst);
      }
      v331 = v315[6];
      v332 = &v313[v331];
      v333 = &v314[v331];
      *v332 = *(_QWORD *)v333;
      v332[1] = *((_QWORD *)v333 + 1);
      v334 = v315[7];
      v335 = &v313[v334];
      v336 = &v314[v334];
      *v335 = *(_QWORD *)v336;
      v335[1] = *((_QWORD *)v336 + 1);
      v337 = *(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v316 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v337(v313, 0, 1, v315);
      v5 = v477;
      goto LABEL_165;
    }
LABEL_159:
    v324 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
    memcpy(v313, v314, *(_QWORD *)(*(_QWORD *)(v324 - 8) + 64));
LABEL_165:
    v330 = v478;
    goto LABEL_166;
  }
  if (v319)
  {
    sub_1AD066230((uint64_t)v313, type metadata accessor for LinkPresentation.AudioMetadata);
    goto LABEL_159;
  }
  *(_DWORD *)v313 = *(_DWORD *)v314;
  v325 = v315[5];
  v326 = &v313[v325];
  v327 = &v314[v325];
  v328 = v10(&v313[v325], 1, (uint64_t)__dst);
  v329 = v10(v327, 1, (uint64_t)__dst);
  v330 = v478;
  if (!v328)
  {
    if (!v329)
    {
      (*(void (**)(char *, char *, void *))(v479 + 24))(v326, v327, __dst);
      goto LABEL_181;
    }
    (*(void (**)(char *, void *))(v479 + 8))(v326, __dst);
    goto LABEL_180;
  }
  if (v329)
  {
LABEL_180:
    v352 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v326, v327, *(_QWORD *)(*(_QWORD *)(v352 - 8) + 64));
    goto LABEL_181;
  }
  (*(void (**)(char *, char *, void *))(v479 + 16))(v326, v327, __dst);
  (*(void (**)(char *, _QWORD, uint64_t, void *))(v479 + 56))(v326, 0, 1, __dst);
LABEL_181:
  v353 = v315[6];
  v354 = &v313[v353];
  v355 = &v314[v353];
  *v354 = *(_QWORD *)v355;
  v354[1] = *((_QWORD *)v355 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v356 = v315[7];
  v357 = &v313[v356];
  v358 = &v314[v356];
  *v357 = *(_QWORD *)v358;
  v357[1] = *((_QWORD *)v358 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = v477;
LABEL_166:
  *(_QWORD *)&v5[v330[34]] = *(_QWORD *)&a2[v330[34]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[v330[35]] = *(_QWORD *)&a2[v330[35]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[v330[36]] = *(_QWORD *)&a2[v330[36]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[v330[37]] = *(_QWORD *)&a2[v330[37]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[v330[38]] = *(_QWORD *)&a2[v330[38]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[v330[39]] = *(_QWORD *)&a2[v330[39]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v5[v330[40]] = *(_QWORD *)&a2[v330[40]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v338 = v330[41];
  v339 = &v5[v338];
  v340 = &a2[v338];
  v341 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
  v342 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v341 - 8) + 48);
  v343 = v342(v339, 1, v341);
  v344 = v342(v340, 1, v341);
  if (v343)
  {
    if (!v344)
    {
      v345 = (char *)&loc_1AD07CE50 + 4 * word_1AD64A580[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    goto LABEL_171;
  }
  if (v344)
  {
    sub_1AD066230((uint64_t)v339, type metadata accessor for LinkPresentation.SpecializationMetadata);
LABEL_171:
    v346 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
    memcpy(v339, v340, *(_QWORD *)(*(_QWORD *)(v346 - 8) + 64));
    goto LABEL_186;
  }
  if (v5 != a2)
  {
    sub_1AD066230((uint64_t)v339, type metadata accessor for LinkPresentation.SpecializationMetadata);
    v347 = (char *)&loc_1AD07CEE0 + 4 * word_1AD64A5C8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
LABEL_186:
  v359 = v330[42];
  v360 = (uint64_t)&v5[v359];
  v361 = &a2[v359];
  v362 = *(_QWORD *)&v5[v359 + 8];
  v363 = *(_QWORD *)&a2[v359 + 8];
  if (v362 == 1)
  {
    if (v363 == 1)
    {
      v364 = *(_OWORD *)v361;
      v365 = *((_OWORD *)v361 + 1);
      v366 = *((_OWORD *)v361 + 3);
      *(_OWORD *)(v360 + 32) = *((_OWORD *)v361 + 2);
      *(_OWORD *)(v360 + 48) = v366;
      *(_OWORD *)v360 = v364;
      *(_OWORD *)(v360 + 16) = v365;
      v367 = *((_OWORD *)v361 + 4);
      v368 = *((_OWORD *)v361 + 5);
      v369 = *((_OWORD *)v361 + 7);
      *(_OWORD *)(v360 + 96) = *((_OWORD *)v361 + 6);
      *(_OWORD *)(v360 + 112) = v369;
      *(_OWORD *)(v360 + 64) = v367;
      *(_OWORD *)(v360 + 80) = v368;
      v370 = *((_OWORD *)v361 + 8);
      v371 = *((_OWORD *)v361 + 9);
      v372 = *((_OWORD *)v361 + 10);
      *(_QWORD *)(v360 + 176) = *((_QWORD *)v361 + 22);
      *(_OWORD *)(v360 + 144) = v371;
      *(_OWORD *)(v360 + 160) = v372;
      *(_OWORD *)(v360 + 128) = v370;
    }
    else
    {
      *(_QWORD *)v360 = *(_QWORD *)v361;
      *(_QWORD *)(v360 + 8) = *((_QWORD *)v361 + 1);
      v382 = *((_QWORD *)v361 + 4);
      swift_bridgeObjectRetain();
      if (v382 == 1)
      {
        v383 = *((_OWORD *)v361 + 1);
        v384 = *((_OWORD *)v361 + 2);
        v385 = *((_OWORD *)v361 + 4);
        *(_OWORD *)(v360 + 48) = *((_OWORD *)v361 + 3);
        *(_OWORD *)(v360 + 64) = v385;
        *(_OWORD *)(v360 + 16) = v383;
        *(_OWORD *)(v360 + 32) = v384;
        v386 = *((_OWORD *)v361 + 5);
        v387 = *((_OWORD *)v361 + 6);
        v388 = *((_OWORD *)v361 + 7);
        *(_OWORD *)(v360 + 121) = *(_OWORD *)(v361 + 121);
        *(_OWORD *)(v360 + 96) = v387;
        *(_OWORD *)(v360 + 112) = v388;
        *(_OWORD *)(v360 + 80) = v386;
      }
      else
      {
        *(_QWORD *)(v360 + 16) = *((_QWORD *)v361 + 2);
        *(_QWORD *)(v360 + 24) = *((_QWORD *)v361 + 3);
        *(_QWORD *)(v360 + 32) = *((_QWORD *)v361 + 4);
        *(_QWORD *)(v360 + 40) = *((_QWORD *)v361 + 5);
        *(_QWORD *)(v360 + 48) = *((_QWORD *)v361 + 6);
        *(_QWORD *)(v360 + 56) = *((_QWORD *)v361 + 7);
        v398 = *((_OWORD *)v361 + 4);
        v399 = *((_OWORD *)v361 + 5);
        *(_BYTE *)(v360 + 96) = v361[96];
        *(_OWORD *)(v360 + 64) = v398;
        *(_OWORD *)(v360 + 80) = v399;
        v400 = *(_OWORD *)(v361 + 104);
        v401 = *(_OWORD *)(v361 + 120);
        *(_BYTE *)(v360 + 136) = v361[136];
        *(_OWORD *)(v360 + 120) = v401;
        *(_OWORD *)(v360 + 104) = v400;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(_QWORD *)(v360 + 144) = *((_QWORD *)v361 + 18);
      *(_QWORD *)(v360 + 152) = *((_QWORD *)v361 + 19);
      *(_QWORD *)(v360 + 160) = *((_QWORD *)v361 + 20);
      *(_QWORD *)(v360 + 168) = *((_QWORD *)v361 + 21);
      *(_QWORD *)(v360 + 176) = *((_QWORD *)v361 + 22);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v363 == 1)
  {
    sub_1AD06626C(v360);
    v373 = *((_OWORD *)v361 + 3);
    v375 = *(_OWORD *)v361;
    v374 = *((_OWORD *)v361 + 1);
    *(_OWORD *)(v360 + 32) = *((_OWORD *)v361 + 2);
    *(_OWORD *)(v360 + 48) = v373;
    *(_OWORD *)v360 = v375;
    *(_OWORD *)(v360 + 16) = v374;
    v376 = *((_OWORD *)v361 + 7);
    v378 = *((_OWORD *)v361 + 4);
    v377 = *((_OWORD *)v361 + 5);
    *(_OWORD *)(v360 + 96) = *((_OWORD *)v361 + 6);
    *(_OWORD *)(v360 + 112) = v376;
    *(_OWORD *)(v360 + 64) = v378;
    *(_OWORD *)(v360 + 80) = v377;
    v380 = *((_OWORD *)v361 + 9);
    v379 = *((_OWORD *)v361 + 10);
    v381 = *((_OWORD *)v361 + 8);
    *(_QWORD *)(v360 + 176) = *((_QWORD *)v361 + 22);
    *(_OWORD *)(v360 + 144) = v380;
    *(_OWORD *)(v360 + 160) = v379;
    *(_OWORD *)(v360 + 128) = v381;
  }
  else
  {
    *(_QWORD *)v360 = *(_QWORD *)v361;
    *(_QWORD *)(v360 + 8) = *((_QWORD *)v361 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v389 = (_OWORD *)(v360 + 16);
    v390 = (__int128 *)(v361 + 16);
    v391 = *((_QWORD *)v361 + 4);
    if (*(_QWORD *)(v360 + 32) == 1)
    {
      if (v391 == 1)
      {
        v392 = *v390;
        v393 = *((_OWORD *)v361 + 2);
        v394 = *((_OWORD *)v361 + 4);
        *(_OWORD *)(v360 + 48) = *((_OWORD *)v361 + 3);
        *(_OWORD *)(v360 + 64) = v394;
        *v389 = v392;
        *(_OWORD *)(v360 + 32) = v393;
        v395 = *((_OWORD *)v361 + 5);
        v396 = *((_OWORD *)v361 + 6);
        v397 = *((_OWORD *)v361 + 7);
        *(_OWORD *)(v360 + 121) = *(_OWORD *)(v361 + 121);
        *(_OWORD *)(v360 + 96) = v396;
        *(_OWORD *)(v360 + 112) = v397;
        *(_OWORD *)(v360 + 80) = v395;
      }
      else
      {
        *(_QWORD *)(v360 + 16) = *((_QWORD *)v361 + 2);
        *(_QWORD *)(v360 + 24) = *((_QWORD *)v361 + 3);
        *(_QWORD *)(v360 + 32) = *((_QWORD *)v361 + 4);
        *(_QWORD *)(v360 + 40) = *((_QWORD *)v361 + 5);
        *(_QWORD *)(v360 + 48) = *((_QWORD *)v361 + 6);
        *(_QWORD *)(v360 + 56) = *((_QWORD *)v361 + 7);
        v408 = *((_OWORD *)v361 + 4);
        v409 = *((_OWORD *)v361 + 5);
        *(_BYTE *)(v360 + 96) = v361[96];
        *(_OWORD *)(v360 + 64) = v408;
        *(_OWORD *)(v360 + 80) = v409;
        v410 = *(_OWORD *)(v361 + 104);
        v411 = *(_OWORD *)(v361 + 120);
        *(_BYTE *)(v360 + 136) = v361[136];
        *(_OWORD *)(v360 + 120) = v411;
        *(_OWORD *)(v360 + 104) = v410;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    else if (v391 == 1)
    {
      sub_1AD0661D0(v360 + 16);
      v402 = *((_OWORD *)v361 + 4);
      v404 = *v390;
      v403 = *((_OWORD *)v361 + 2);
      *(_OWORD *)(v360 + 48) = *((_OWORD *)v361 + 3);
      *(_OWORD *)(v360 + 64) = v402;
      *v389 = v404;
      *(_OWORD *)(v360 + 32) = v403;
      v406 = *((_OWORD *)v361 + 6);
      v405 = *((_OWORD *)v361 + 7);
      v407 = *((_OWORD *)v361 + 5);
      *(_OWORD *)(v360 + 121) = *(_OWORD *)(v361 + 121);
      *(_OWORD *)(v360 + 96) = v406;
      *(_OWORD *)(v360 + 112) = v405;
      *(_OWORD *)(v360 + 80) = v407;
    }
    else
    {
      *(_QWORD *)(v360 + 16) = *((_QWORD *)v361 + 2);
      *(_QWORD *)(v360 + 24) = *((_QWORD *)v361 + 3);
      *(_QWORD *)(v360 + 32) = *((_QWORD *)v361 + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v360 + 40) = *((_QWORD *)v361 + 5);
      *(_QWORD *)(v360 + 48) = *((_QWORD *)v361 + 6);
      *(_QWORD *)(v360 + 56) = *((_QWORD *)v361 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v412 = *((_OWORD *)v361 + 4);
      v413 = *((_OWORD *)v361 + 5);
      *(_BYTE *)(v360 + 96) = v361[96];
      *(_OWORD *)(v360 + 64) = v412;
      *(_OWORD *)(v360 + 80) = v413;
      v414 = *(_OWORD *)(v361 + 104);
      v415 = *(_OWORD *)(v361 + 120);
      *(_BYTE *)(v360 + 136) = v361[136];
      *(_OWORD *)(v360 + 120) = v415;
      *(_OWORD *)(v360 + 104) = v414;
    }
    *(_QWORD *)(v360 + 144) = *((_QWORD *)v361 + 18);
    *(_QWORD *)(v360 + 152) = *((_QWORD *)v361 + 19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v360 + 160) = *((_QWORD *)v361 + 20);
    *(_QWORD *)(v360 + 168) = *((_QWORD *)v361 + 21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v360 + 176) = *((_QWORD *)v361 + 22);
  }
  v416 = v330[43];
  v417 = &v5[v416];
  v418 = &a2[v416];
  v419 = (int *)type metadata accessor for CollaborationMetadata();
  v420 = *((_QWORD *)v419 - 1);
  v421 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v420 + 48);
  v422 = v421(v417, 1, v419);
  v423 = v421(v418, 1, v419);
  if (v422)
  {
    if (!v423)
    {
      *(_QWORD *)v417 = *(_QWORD *)v418;
      *((_QWORD *)v417 + 1) = *((_QWORD *)v418 + 1);
      *((_QWORD *)v417 + 2) = *((_QWORD *)v418 + 2);
      *((_QWORD *)v417 + 3) = *((_QWORD *)v418 + 3);
      v424 = v419[6];
      __dsta = &v417[v424];
      v425 = &v418[v424];
      v426 = sub_1AD63B03C();
      v427 = *(_QWORD *)(v426 - 8);
      v428 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v427 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v428(v425, 1, v426))
      {
        v429 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(__dsta, v425, *(_QWORD *)(*(_QWORD *)(v429 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v427 + 16))(__dsta, v425, v426);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v427 + 56))(__dsta, 0, 1, v426);
      }
      v440 = v419[7];
      v441 = &v417[v440];
      v442 = &v418[v440];
      *v441 = *v442;
      v441[1] = v442[1];
      *(_QWORD *)&v417[v419[8]] = *(_QWORD *)&v418[v419[8]];
      *(_QWORD *)&v417[v419[9]] = *(_QWORD *)&v418[v419[9]];
      v443 = v419[10];
      v444 = &v417[v443];
      v445 = &v418[v443];
      v446 = *(_QWORD *)&v418[v443 + 112];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v446)
      {
        *v444 = *v445;
        *((_QWORD *)v444 + 1) = *((_QWORD *)v445 + 1);
        *((_QWORD *)v444 + 2) = *((_QWORD *)v445 + 2);
        *((_QWORD *)v444 + 3) = *((_QWORD *)v445 + 3);
        *((_QWORD *)v444 + 4) = *((_QWORD *)v445 + 4);
        *((_QWORD *)v444 + 5) = *((_QWORD *)v445 + 5);
        *((_QWORD *)v444 + 6) = *((_QWORD *)v445 + 6);
        *((_QWORD *)v444 + 7) = *((_QWORD *)v445 + 7);
        *((_QWORD *)v444 + 8) = *((_QWORD *)v445 + 8);
        *((_QWORD *)v444 + 9) = *((_QWORD *)v445 + 9);
        *((_QWORD *)v444 + 10) = *((_QWORD *)v445 + 10);
        *((_QWORD *)v444 + 11) = *((_QWORD *)v445 + 11);
        v444[96] = v445[96];
        *((_QWORD *)v444 + 13) = *((_QWORD *)v445 + 13);
        *((_QWORD *)v444 + 14) = *((_QWORD *)v445 + 14);
        *((_QWORD *)v444 + 15) = *((_QWORD *)v445 + 15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        v447 = *(_OWORD *)v445;
        v448 = *((_OWORD *)v445 + 1);
        v449 = *((_OWORD *)v445 + 3);
        *((_OWORD *)v444 + 2) = *((_OWORD *)v445 + 2);
        *((_OWORD *)v444 + 3) = v449;
        *(_OWORD *)v444 = v447;
        *((_OWORD *)v444 + 1) = v448;
        v450 = *((_OWORD *)v445 + 4);
        v451 = *((_OWORD *)v445 + 5);
        v452 = *((_OWORD *)v445 + 7);
        *((_OWORD *)v444 + 6) = *((_OWORD *)v445 + 6);
        *((_OWORD *)v444 + 7) = v452;
        *((_OWORD *)v444 + 4) = v450;
        *((_OWORD *)v444 + 5) = v451;
      }
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v420 + 56))(v417, 0, 1, v419);
      return v477;
    }
LABEL_209:
    v430 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
    memcpy(v417, v418, *(_QWORD *)(*(_QWORD *)(v430 - 8) + 64));
    return v477;
  }
  if (v423)
  {
    sub_1AD066230((uint64_t)v417, (uint64_t (*)(_QWORD))type metadata accessor for CollaborationMetadata);
    goto LABEL_209;
  }
  *(_QWORD *)v417 = *(_QWORD *)v418;
  *((_QWORD *)v417 + 1) = *((_QWORD *)v418 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v417 + 2) = *((_QWORD *)v418 + 2);
  *((_QWORD *)v417 + 3) = *((_QWORD *)v418 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v431 = v419[6];
  v432 = &v417[v431];
  v433 = &v418[v431];
  v434 = sub_1AD63B03C();
  v435 = *(_QWORD *)(v434 - 8);
  v436 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v435 + 48);
  v437 = v436(v432, 1, v434);
  v438 = v436(v433, 1, v434);
  v439 = v477;
  if (v437)
  {
    if (!v438)
    {
      (*(void (**)(char *, char *, uint64_t))(v435 + 16))(v432, v433, v434);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v435 + 56))(v432, 0, 1, v434);
      goto LABEL_223;
    }
    goto LABEL_222;
  }
  if (v438)
  {
    (*(void (**)(char *, uint64_t))(v435 + 8))(v432, v434);
LABEL_222:
    v454 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v432, v433, *(_QWORD *)(*(_QWORD *)(v454 - 8) + 64));
    goto LABEL_223;
  }
  (*(void (**)(char *, char *, uint64_t))(v435 + 24))(v432, v433, v434);
LABEL_223:
  v455 = v419[7];
  v456 = &v417[v455];
  v457 = &v418[v455];
  *v456 = *v457;
  v456[1] = v457[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v417[v419[8]] = *(_QWORD *)&v418[v419[8]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)&v417[v419[9]] = *(_QWORD *)&v418[v419[9]];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v458 = v419[10];
  v459 = (uint64_t)&v417[v458];
  v460 = &v418[v458];
  v461 = *(_QWORD *)&v417[v458 + 112];
  v462 = *(_QWORD *)&v418[v458 + 112];
  if (v461)
  {
    if (v462)
    {
      *(_BYTE *)v459 = *v460;
      *(_QWORD *)(v459 + 8) = *((_QWORD *)v460 + 1);
      *(_QWORD *)(v459 + 16) = *((_QWORD *)v460 + 2);
      *(_QWORD *)(v459 + 24) = *((_QWORD *)v460 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v459 + 32) = *((_QWORD *)v460 + 4);
      *(_QWORD *)(v459 + 40) = *((_QWORD *)v460 + 5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v459 + 48) = *((_QWORD *)v460 + 6);
      *(_QWORD *)(v459 + 56) = *((_QWORD *)v460 + 7);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v459 + 64) = *((_QWORD *)v460 + 8);
      *(_QWORD *)(v459 + 72) = *((_QWORD *)v460 + 9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v459 + 80) = *((_QWORD *)v460 + 10);
      *(_QWORD *)(v459 + 88) = *((_QWORD *)v460 + 11);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_BYTE *)(v459 + 96) = v460[96];
      *(_QWORD *)(v459 + 104) = *((_QWORD *)v460 + 13);
      *(_QWORD *)(v459 + 112) = *((_QWORD *)v460 + 14);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v459 + 120) = *((_QWORD *)v460 + 15);
    }
    else
    {
      sub_1AD066298(v459);
      v463 = *((_OWORD *)v460 + 3);
      v465 = *(_OWORD *)v460;
      v464 = *((_OWORD *)v460 + 1);
      *(_OWORD *)(v459 + 32) = *((_OWORD *)v460 + 2);
      *(_OWORD *)(v459 + 48) = v463;
      *(_OWORD *)v459 = v465;
      *(_OWORD *)(v459 + 16) = v464;
      v466 = *((_OWORD *)v460 + 7);
      v468 = *((_OWORD *)v460 + 4);
      v467 = *((_OWORD *)v460 + 5);
      *(_OWORD *)(v459 + 96) = *((_OWORD *)v460 + 6);
      *(_OWORD *)(v459 + 112) = v466;
      *(_OWORD *)(v459 + 64) = v468;
      *(_OWORD *)(v459 + 80) = v467;
    }
  }
  else if (v462)
  {
    *(_BYTE *)v459 = *v460;
    *(_QWORD *)(v459 + 8) = *((_QWORD *)v460 + 1);
    *(_QWORD *)(v459 + 16) = *((_QWORD *)v460 + 2);
    *(_QWORD *)(v459 + 24) = *((_QWORD *)v460 + 3);
    *(_QWORD *)(v459 + 32) = *((_QWORD *)v460 + 4);
    *(_QWORD *)(v459 + 40) = *((_QWORD *)v460 + 5);
    *(_QWORD *)(v459 + 48) = *((_QWORD *)v460 + 6);
    *(_QWORD *)(v459 + 56) = *((_QWORD *)v460 + 7);
    *(_QWORD *)(v459 + 64) = *((_QWORD *)v460 + 8);
    *(_QWORD *)(v459 + 72) = *((_QWORD *)v460 + 9);
    *(_QWORD *)(v459 + 80) = *((_QWORD *)v460 + 10);
    *(_QWORD *)(v459 + 88) = *((_QWORD *)v460 + 11);
    *(_BYTE *)(v459 + 96) = v460[96];
    *(_QWORD *)(v459 + 104) = *((_QWORD *)v460 + 13);
    *(_QWORD *)(v459 + 112) = *((_QWORD *)v460 + 14);
    *(_QWORD *)(v459 + 120) = *((_QWORD *)v460 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v469 = *(_OWORD *)v460;
    v470 = *((_OWORD *)v460 + 1);
    v471 = *((_OWORD *)v460 + 3);
    *(_OWORD *)(v459 + 32) = *((_OWORD *)v460 + 2);
    *(_OWORD *)(v459 + 48) = v471;
    *(_OWORD *)v459 = v469;
    *(_OWORD *)(v459 + 16) = v470;
    v472 = *((_OWORD *)v460 + 4);
    v473 = *((_OWORD *)v460 + 5);
    v474 = *((_OWORD *)v460 + 7);
    *(_OWORD *)(v459 + 96) = *((_OWORD *)v460 + 6);
    *(_OWORD *)(v459 + 112) = v474;
    *(_OWORD *)(v459 + 64) = v472;
    *(_OWORD *)(v459 + 80) = v473;
  }
  return (char *)v439;
}

_DWORD *sub_1AD085170(_DWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  char *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  _DWORD *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  __int128 v50;
  _DWORD *v51;
  char *v52;
  int *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  char *v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  _DWORD *v71;
  char *v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  char *v83;
  int *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  _DWORD *v95;
  char *v96;
  int *v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _DWORD *v113;
  char *v114;
  int *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _OWORD *v126;
  char *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  uint64_t v138;
  _DWORD *v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  int *v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  uint64_t v150;
  _DWORD *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  uint64_t v161;
  _DWORD *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  uint64_t v171;
  __int128 v172;
  __int128 v173;
  int *v174;
  uint64_t v175;
  char *v176;
  char *v177;
  uint64_t v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  uint64_t v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  int *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  uint64_t v202;
  _DWORD *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  uint64_t v214;
  _DWORD *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  __int128 v220;
  __int128 v221;
  uint64_t v222;
  char *v223;
  char *v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  uint64_t v233;
  _DWORD *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  uint64_t v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  uint64_t v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  uint64_t v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  uint64_t v263;
  _DWORD *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  uint64_t v274;
  __int128 v275;
  uint64_t v276;
  char *v277;
  char *v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  __int128 v282;
  uint64_t v283;
  char *v284;
  char *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  uint64_t v292;
  unsigned int (*v293)(char *, uint64_t, uint64_t);
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  _OWORD *v304;
  char *v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  _OWORD *v321;
  char *v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  uint64_t v326;
  _DWORD *v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  char *v343;
  char *v344;
  uint64_t v345;
  uint64_t v346;
  char *v347;
  char *v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  _OWORD *v360;
  char *v361;
  __int128 v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  uint64_t v369;
  _OWORD *v370;
  char *v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  uint64_t v375;
  char *v376;
  char *v377;
  uint64_t v378;
  _OWORD *v379;
  char *v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  uint64_t v384;
  uint64_t v385;
  char *v386;
  char *v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  _OWORD *v393;
  char *v394;
  int *v395;
  uint64_t v396;
  uint64_t v397;
  __int128 v398;
  uint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  _OWORD *v406;
  char *v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  char *__src;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  int *v419;
  _DWORD *v420;
  char *v421;
  char *v422;
  char *v423;
  char *v424;
  char *v425;
  char *v426;
  unsigned int (*v427)(char *, uint64_t, int *);
  uint64_t v428;
  char *v429;
  char *v430;
  char *v431;
  char *v432;
  char *v433;
  char *v434;
  char *v435;
  char *v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  int *v442;
  uint64_t v443;
  int *v444;
  char *v445;
  char *v446;
  char *v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  char *__dstb;

  *a1 = *(_DWORD *)a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = &a2[v6];
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  __dst = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  if (__dst(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = &a2[v12];
  if (__dst(&a2[v12], 1, v9))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  v16 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)&a2[a3[7]];
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)&a2[v16];
  v17 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)&a2[a3[9]];
  *(_OWORD *)((char *)a1 + v17) = *(_OWORD *)&a2[v17];
  v18 = a3[12];
  *(_OWORD *)((char *)a1 + a3[11]) = *(_OWORD *)&a2[a3[11]];
  v19 = (char *)a1 + v18;
  v20 = &a2[v18];
  v450 = v10;
  if (__dst(&a2[v18], 1, v9))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v19, v20, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v19, 0, 1, v9);
  }
  v22 = a3[14];
  *(_OWORD *)((char *)a1 + a3[13]) = *(_OWORD *)&a2[a3[13]];
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)&a2[v22];
  v23 = a3[16];
  *(_OWORD *)((char *)a1 + a3[15]) = *(_OWORD *)&a2[a3[15]];
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)&a2[v23];
  v24 = a3[18];
  *((_BYTE *)a1 + a3[17]) = a2[a3[17]];
  v25 = (char *)a1 + v24;
  v26 = &a2[v24];
  v27 = *((_OWORD *)v26 + 1);
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *((_OWORD *)v25 + 1) = v27;
  v25[32] = v26[32];
  v28 = a3[20];
  *(_OWORD *)((char *)a1 + a3[19]) = *(_OWORD *)&a2[a3[19]];
  *(_OWORD *)((char *)a1 + v28) = *(_OWORD *)&a2[v28];
  v29 = a3[21];
  v30 = a3[22];
  v31 = (_OWORD *)((char *)a1 + v29);
  v32 = &a2[v29];
  *(_OWORD *)((char *)v31 + 105) = *(_OWORD *)(v32 + 105);
  v33 = *((_OWORD *)v32 + 6);
  v34 = *((_OWORD *)v32 + 4);
  v31[5] = *((_OWORD *)v32 + 5);
  v31[6] = v33;
  v35 = *((_OWORD *)v32 + 2);
  v31[3] = *((_OWORD *)v32 + 3);
  v31[4] = v34;
  v36 = *((_OWORD *)v32 + 1);
  *v31 = *(_OWORD *)v32;
  v31[1] = v36;
  v31[2] = v35;
  v37 = (_DWORD *)((char *)a1 + v30);
  v38 = &a2[v30];
  v39 = type metadata accessor for LinkPresentation.IconMetadata(0);
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
    memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    *v37 = *(_DWORD *)v38;
    v42 = *(int *)(v39 + 20);
    v43 = (char *)v37 + v42;
    v44 = &v38[v42];
    if (__dst(&v38[v42], 1, v9))
    {
      v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v43, v44, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v43, 0, 1, v9);
    }
    *(_OWORD *)((char *)v37 + *(int *)(v39 + 24)) = *(_OWORD *)&v38[*(int *)(v39 + 24)];
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
  }
  v46 = a3[23];
  v47 = a3[24];
  v48 = (char *)a1 + v46;
  v49 = &a2[v46];
  v50 = *((_OWORD *)v49 + 1);
  *(_OWORD *)v48 = *(_OWORD *)v49;
  *((_OWORD *)v48 + 1) = v50;
  *((_QWORD *)v48 + 4) = *((_QWORD *)v49 + 4);
  v51 = (_DWORD *)((char *)a1 + v47);
  v52 = &a2[v47];
  v53 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
  v54 = *((_QWORD *)v53 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v54 + 48))(v52, 1, v53))
  {
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
  }
  else
  {
    *v51 = *(_DWORD *)v52;
    v56 = v53[5];
    v57 = (char *)v51 + v56;
    v58 = &v52[v56];
    if (__dst(&v52[v56], 1, v9))
    {
      v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v57, v58, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v57, 0, 1, v9);
    }
    *(_OWORD *)((char *)v51 + v53[6]) = *(_OWORD *)&v52[v53[6]];
    *(_OWORD *)((char *)v51 + v53[7]) = *(_OWORD *)&v52[v53[7]];
    (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v54 + 56))(v51, 0, 1, v53);
  }
  v60 = a3[25];
  v61 = a3[26];
  v62 = (_OWORD *)((char *)a1 + v60);
  v63 = &a2[v60];
  *(_OWORD *)((char *)v62 + 105) = *(_OWORD *)(v63 + 105);
  v64 = *((_OWORD *)v63 + 6);
  v65 = *((_OWORD *)v63 + 4);
  v62[5] = *((_OWORD *)v63 + 5);
  v62[6] = v64;
  v66 = *((_OWORD *)v63 + 1);
  *v62 = *(_OWORD *)v63;
  v62[1] = v66;
  v67 = *((_OWORD *)v63 + 2);
  v68 = *((_OWORD *)v63 + 3);
  v69 = *(_QWORD *)&a2[v61];
  v62[2] = v67;
  v62[3] = v68;
  v62[4] = v65;
  *(_QWORD *)((char *)a1 + v61) = v69;
  v70 = a3[27];
  v71 = (_DWORD *)((char *)a1 + v70);
  v72 = &a2[v70];
  v73 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
  v74 = *((_QWORD *)v73 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v74 + 48))(v72, 1, v73))
  {
    v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v75 - 8) + 64));
  }
  else
  {
    *v71 = *(_DWORD *)v72;
    v76 = v73[5];
    v77 = (char *)v71 + v76;
    v78 = &v72[v76];
    if (__dst(&v72[v76], 1, v9))
    {
      v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v77, v78, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v77, 0, 1, v9);
    }
    *(_OWORD *)((char *)v71 + v73[6]) = *(_OWORD *)&v72[v73[6]];
    *(_OWORD *)((char *)v71 + v73[7]) = *(_OWORD *)&v72[v73[7]];
    *(_OWORD *)((char *)v71 + v73[8]) = *(_OWORD *)&v72[v73[8]];
    (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v74 + 56))(v71, 0, 1, v73);
  }
  v80 = a3[29];
  *(_QWORD *)((char *)a1 + a3[28]) = *(_QWORD *)&a2[a3[28]];
  *(_QWORD *)((char *)a1 + v80) = *(_QWORD *)&a2[v80];
  v81 = a3[30];
  v82 = (char *)a1 + v81;
  v83 = &a2[v81];
  v84 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v437 = *((_QWORD *)v84 - 1);
  v448 = v9;
  v427 = *(unsigned int (**)(char *, uint64_t, int *))(v437 + 48);
  if (v427(v83, 1, v84))
  {
    v85 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v85 - 8) + 64));
  }
  else
  {
    if (__dst(v83, 1, v9))
    {
      v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v82, v83, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v82, 0, 1, v9);
    }
    v87 = v84[5];
    v88 = &v82[v87];
    v89 = &v83[v87];
    if (__dst(&v83[v87], 1, v9))
    {
      v90 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v88, v89, *(_QWORD *)(*(_QWORD *)(v90 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v88, v89, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v88, 0, 1, v9);
    }
    *(_OWORD *)&v82[v84[6]] = *(_OWORD *)&v83[v84[6]];
    v82[v84[7]] = v83[v84[7]];
    *(_QWORD *)&v82[v84[8]] = *(_QWORD *)&v83[v84[8]];
    v91 = v84[9];
    v92 = &v82[v91];
    v93 = &v83[v91];
    *(_OWORD *)v92 = *(_OWORD *)v93;
    *((_QWORD *)v92 + 2) = *((_QWORD *)v93 + 2);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v437 + 56))(v82, 0, 1, v84);
  }
  v94 = a3[31];
  v95 = (_DWORD *)((char *)a1 + v94);
  v96 = &a2[v94];
  v97 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
  v98 = *((_QWORD *)v97 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v98 + 48))(v96, 1, v97))
  {
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    v100 = v9;
  }
  else
  {
    v419 = v84;
    *v95 = *(_DWORD *)v96;
    v101 = v97[5];
    v102 = (char *)v95 + v101;
    v103 = &v96[v101];
    v100 = v448;
    if (__dst(&v96[v101], 1, v448))
    {
      v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v102, v103, v448);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v102, 0, 1, v448);
    }
    *(_OWORD *)((char *)v95 + v97[6]) = *(_OWORD *)&v96[v97[6]];
    *(_OWORD *)((char *)v95 + v97[7]) = *(_OWORD *)&v96[v97[7]];
    *(_OWORD *)((char *)v95 + v97[8]) = *(_OWORD *)&v96[v97[8]];
    (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v98 + 56))(v95, 0, 1, v97);
    v84 = v419;
  }
  v105 = a3[32];
  v106 = (char *)a1 + v105;
  v107 = &a2[v105];
  v108 = type metadata accessor for LinkPresentation.Audio(0);
  v109 = *(_QWORD *)(v108 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
  {
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
    memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
  }
  else
  {
    if (__dst(v107, 1, v100))
    {
      v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v106, v107, v100);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v106, 0, 1, v100);
    }
    *(_OWORD *)&v106[*(int *)(v108 + 20)] = *(_OWORD *)&v107[*(int *)(v108 + 20)];
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
  }
  v112 = a3[33];
  v113 = (_DWORD *)((char *)a1 + v112);
  v114 = &a2[v112];
  v115 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
  v116 = *((_QWORD *)v115 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v116 + 48))(v114, 1, v115))
  {
    v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
    memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v117 - 8) + 64));
  }
  else
  {
    *v113 = *(_DWORD *)v114;
    v118 = v115[5];
    v119 = (char *)v113 + v118;
    v120 = &v114[v118];
    if (__dst(&v114[v118], 1, v448))
    {
      v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v121 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v119, v120, v448);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v119, 0, 1, v448);
    }
    *(_OWORD *)((char *)v113 + v115[6]) = *(_OWORD *)&v114[v115[6]];
    *(_OWORD *)((char *)v113 + v115[7]) = *(_OWORD *)&v114[v115[7]];
    (*(void (**)(_DWORD *, _QWORD, uint64_t, int *))(v116 + 56))(v113, 0, 1, v115);
  }
  v122 = a3[35];
  *(_QWORD *)((char *)a1 + a3[34]) = *(_QWORD *)&a2[a3[34]];
  *(_QWORD *)((char *)a1 + v122) = *(_QWORD *)&a2[v122];
  v123 = a3[37];
  *(_QWORD *)((char *)a1 + a3[36]) = *(_QWORD *)&a2[a3[36]];
  *(_QWORD *)((char *)a1 + v123) = *(_QWORD *)&a2[v123];
  v124 = a3[39];
  *(_QWORD *)((char *)a1 + a3[38]) = *(_QWORD *)&a2[a3[38]];
  *(_QWORD *)((char *)a1 + v124) = *(_QWORD *)&a2[v124];
  v125 = a3[41];
  *(_QWORD *)((char *)a1 + a3[40]) = *(_QWORD *)&a2[a3[40]];
  v126 = (_OWORD *)((char *)a1 + v125);
  v127 = &a2[v125];
  v128 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
  v129 = *(_QWORD *)(v128 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v129 + 48))(v127, 1, v128))
  {
    v130 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
    memcpy(v126, v127, *(_QWORD *)(*(_QWORD *)(v130 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v414 = v129;
        v131 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v131;
        v132 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v132;
        v133 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v133;
        v134 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v134;
        v135 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v135;
        *(_OWORD *)((char *)v126 + 201) = *(_OWORD *)(v127 + 201);
        v136 = *((_OWORD *)v127 + 12);
        v137 = *((_OWORD *)v127 + 10);
        v126[11] = *((_OWORD *)v127 + 11);
        v126[12] = v136;
        v126[10] = v137;
        v438 = type metadata accessor for LinkPresentation.SongMetadata(0);
        v138 = *(int *)(v438 + 44);
        v139 = (_DWORD *)((char *)v126 + v138);
        v140 = &v127[v138];
        v141 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v142 = *(_QWORD *)(v141 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v142 + 48))(v140, 1, v141))
        {
          v143 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v139, v140, *(_QWORD *)(*(_QWORD *)(v143 - 8) + 64));
          v144 = (int *)v438;
        }
        else
        {
          v420 = v139;
          v428 = v142;
          *v139 = *(_DWORD *)v140;
          v295 = *(int *)(v141 + 20);
          v296 = (char *)v139 + v295;
          v297 = &v140[v295];
          if (__dst(&v140[v295], 1, v448))
          {
            v298 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v296, v297, *(_QWORD *)(*(_QWORD *)(v298 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v296, v297, v448);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v296, 0, 1, v448);
          }
          v144 = (int *)v438;
          *(_QWORD *)((char *)v420 + *(int *)(v141 + 24)) = *(_QWORD *)&v140[*(int *)(v141 + 24)];
          (*(void (**)(void))(v428 + 56))();
        }
        v355 = v144[12];
        v356 = (char *)v126 + v355;
        v357 = &v127[v355];
        if (__dst(&v127[v355], 1, v448))
        {
          v358 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v356, v357, *(_QWORD *)(*(_QWORD *)(v358 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v356, v357, v448);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v356, 0, 1, v448);
        }
        *(_QWORD *)((char *)v126 + v144[13]) = *(_QWORD *)&v127[v144[13]];
        v359 = v144[14];
        v360 = (_OWORD *)((char *)v126 + v359);
        v361 = &v127[v359];
        v362 = *((_OWORD *)v361 + 1);
        *v360 = *(_OWORD *)v361;
        v360[1] = v362;
        v360[2] = *((_OWORD *)v361 + 2);
        *(_OWORD *)((char *)v360 + 41) = *(_OWORD *)(v361 + 41);
        goto LABEL_188;
      case 1u:
        v414 = v129;
        v145 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v145;
        v146 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v146;
        v147 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v147;
        v126[10] = *((_OWORD *)v127 + 10);
        *(_OWORD *)((char *)v126 + 169) = *(_OWORD *)(v127 + 169);
        v148 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v148;
        v149 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v149;
        v439 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
        v150 = *(int *)(v439 + 36);
        v151 = (_DWORD *)((char *)v126 + v150);
        v152 = &v127[v150];
        v153 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v154 = *(_QWORD *)(v153 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v154 + 48))(v152, 1, v153))
        {
          v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v151, v152, *(_QWORD *)(*(_QWORD *)(v155 - 8) + 64));
        }
        else
        {
          *v151 = *(_DWORD *)v152;
          v299 = *(int *)(v153 + 20);
          v421 = &v152[v299];
          v429 = (char *)v151 + v299;
          if (((unsigned int (*)(void))__dst)())
          {
            v300 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v429, v421, *(_QWORD *)(*(_QWORD *)(v300 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v429, v421, v448);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v429, 0, 1, v448);
          }
          *(_QWORD *)((char *)v151 + *(int *)(v153 + 24)) = *(_QWORD *)&v152[*(int *)(v153 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v154 + 56))(v151, 0, 1, v153);
        }
        *(_QWORD *)((char *)v126 + *(int *)(v439 + 40)) = *(_QWORD *)&v127[*(int *)(v439 + 40)];
        goto LABEL_188;
      case 2u:
        v156 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v156;
        v157 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v157;
        v158 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v158;
        v126[10] = *((_OWORD *)v127 + 10);
        *(_OWORD *)((char *)v126 + 169) = *(_OWORD *)(v127 + 169);
        v159 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v159;
        v160 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v160;
        v161 = *(int *)(type metadata accessor for LinkPresentation.MusicVideoMetadata(0) + 36);
        v162 = (_DWORD *)((char *)v126 + v161);
        v163 = &v127[v161];
        v164 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v165 = *(_QWORD *)(v164 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
          goto LABEL_107;
        *v162 = *(_DWORD *)v163;
        v301 = *(int *)(v164 + 20);
        v430 = &v163[v301];
        v445 = (char *)v162 + v301;
        if (((unsigned int (*)(void))__dst)())
          goto LABEL_126;
        goto LABEL_173;
      case 3u:
        v166 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v166;
        v167 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v167;
        v168 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v168;
        v126[10] = *((_OWORD *)v127 + 10);
        *(_OWORD *)((char *)v126 + 169) = *(_OWORD *)(v127 + 169);
        v169 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v169;
        v170 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v170;
        v171 = *(int *)(type metadata accessor for LinkPresentation.ArtistMetadata(0) + 36);
        v162 = (_DWORD *)((char *)v126 + v171);
        v163 = &v127[v171];
        v164 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v165 = *(_QWORD *)(v164 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
          goto LABEL_107;
        *v162 = *(_DWORD *)v163;
        v302 = *(int *)(v164 + 20);
        v430 = &v163[v302];
        v445 = (char *)v162 + v302;
        if (((unsigned int (*)(void))__dst)())
          goto LABEL_126;
        goto LABEL_173;
      case 4u:
        v415 = v129;
        v172 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v172;
        v173 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v173;
        v174 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
        v175 = v174[8];
        v176 = (char *)v126 + v175;
        v177 = &v127[v175];
        if (__dst(&v127[v175], 1, v448))
        {
          v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v176, v177, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v176, v177, v448);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v176, 0, 1, v448);
        }
        *(_OWORD *)((char *)v126 + v174[9]) = *(_OWORD *)&v127[v174[9]];
        v303 = v174[10];
        v304 = (_OWORD *)((char *)v126 + v303);
        v305 = &v127[v303];
        v306 = *((_OWORD *)v305 + 3);
        v304[2] = *((_OWORD *)v305 + 2);
        v304[3] = v306;
        v307 = *((_OWORD *)v305 + 1);
        *v304 = *(_OWORD *)v305;
        v304[1] = v307;
        *(_OWORD *)((char *)v304 + 105) = *(_OWORD *)(v305 + 105);
        v308 = *((_OWORD *)v305 + 6);
        v309 = *((_OWORD *)v305 + 4);
        v304[5] = *((_OWORD *)v305 + 5);
        v304[6] = v308;
        v304[4] = v309;
        v310 = v174[11];
        v162 = (_DWORD *)((char *)v126 + v310);
        v163 = &v127[v310];
        v311 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v312 = *(_QWORD *)(v311 - 8);
        v129 = v415;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v312 + 48))(v163, 1, v311))
          goto LABEL_107;
        *v162 = *(_DWORD *)v163;
        v349 = *(int *)(v311 + 20);
        v435 = &v163[v349];
        v446 = (char *)v162 + v349;
        if (((unsigned int (*)(void))__dst)())
        {
          v350 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v446, v435, *(_QWORD *)(*(_QWORD *)(v350 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v446, v435, v448);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v446, 0, 1, v448);
        }
        *(_QWORD *)((char *)v162 + *(int *)(v311 + 24)) = *(_QWORD *)&v163[*(int *)(v311 + 24)];
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v312 + 56))(v162, 0, 1, v311);
        v129 = v415;
        goto LABEL_181;
      case 5u:
        v179 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v179;
        v180 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v180;
        v181 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v181;
        v126[10] = *((_OWORD *)v127 + 10);
        *(_OWORD *)((char *)v126 + 169) = *(_OWORD *)(v127 + 169);
        v182 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v182;
        v183 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v183;
        v184 = *(int *)(type metadata accessor for LinkPresentation.RadioMetadata(0) + 36);
        v162 = (_DWORD *)((char *)v126 + v184);
        v163 = &v127[v184];
        v164 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v165 = *(_QWORD *)(v164 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
          goto LABEL_107;
        *v162 = *(_DWORD *)v163;
        v314 = *(int *)(v164 + 20);
        v430 = &v163[v314];
        v445 = (char *)v162 + v314;
        if (((unsigned int (*)(void))__dst)())
          goto LABEL_126;
        goto LABEL_173;
      case 6u:
        v414 = v129;
        v185 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v185;
        v186 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v186;
        v187 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v187;
        v188 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v188;
        v189 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v189;
        *(_OWORD *)((char *)v126 + 201) = *(_OWORD *)(v127 + 201);
        v190 = *((_OWORD *)v127 + 12);
        v191 = *((_OWORD *)v127 + 10);
        v126[11] = *((_OWORD *)v127 + 11);
        v126[12] = v190;
        v126[10] = v191;
        *((_QWORD *)v126 + 28) = *((_QWORD *)v127 + 28);
        v192 = (int *)type metadata accessor for LinkPresentation.SoftwareMetadata(0);
        v193 = v192[12];
        v194 = (char *)v126 + v193;
        v195 = &v127[v193];
        if (v427(&v127[v193], 1, v84))
        {
          v196 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v196 - 8) + 64));
        }
        else
        {
          if (__dst(v195, 1, v448))
          {
            v315 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v315 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v194, v195, v448);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v194, 0, 1, v448);
          }
          v363 = v84[5];
          v447 = &v194[v363];
          __src = &v195[v363];
          if (((unsigned int (*)(void))__dst)())
          {
            v364 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v447, __src, *(_QWORD *)(*(_QWORD *)(v364 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v447, __src, v448);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v447, 0, 1, v448);
          }
          *(_OWORD *)&v194[v84[6]] = *(_OWORD *)&v195[v84[6]];
          v194[v84[7]] = v195[v84[7]];
          *(_QWORD *)&v194[v84[8]] = *(_QWORD *)&v195[v84[8]];
          v375 = v84[9];
          v376 = &v194[v375];
          v377 = &v195[v375];
          *(_OWORD *)v376 = *(_OWORD *)v377;
          *((_QWORD *)v376 + 2) = *((_QWORD *)v377 + 2);
          (*(void (**)(char *, _QWORD, uint64_t, int *))(v437 + 56))(v194, 0, 1, v84);
        }
        *((_BYTE *)v126 + v192[13]) = v127[v192[13]];
        v378 = v192[14];
        v379 = (_OWORD *)((char *)v126 + v378);
        v380 = &v127[v378];
        v381 = *((_OWORD *)v380 + 5);
        v379[4] = *((_OWORD *)v380 + 4);
        v379[5] = v381;
        v379[6] = *((_OWORD *)v380 + 6);
        *(_OWORD *)((char *)v379 + 105) = *(_OWORD *)(v380 + 105);
        v382 = *((_OWORD *)v380 + 1);
        *v379 = *(_OWORD *)v380;
        v379[1] = v382;
        v383 = *((_OWORD *)v380 + 3);
        v379[2] = *((_OWORD *)v380 + 2);
        v379[3] = v383;
        goto LABEL_188;
      case 7u:
        v414 = v129;
        v197 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v197;
        v198 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v198;
        v199 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v199;
        v126[10] = *((_OWORD *)v127 + 10);
        *(_OWORD *)((char *)v126 + 169) = *(_OWORD *)(v127 + 169);
        v200 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v200;
        v201 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v201;
        v440 = type metadata accessor for LinkPresentation.BookMetadata(0);
        v202 = *(int *)(v440 + 36);
        v203 = (_DWORD *)((char *)v126 + v202);
        v204 = &v127[v202];
        v205 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v206 = *(_QWORD *)(v205 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v206 + 48))(v204, 1, v205))
        {
          v207 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v203, v204, *(_QWORD *)(*(_QWORD *)(v207 - 8) + 64));
        }
        else
        {
          *v203 = *(_DWORD *)v204;
          v316 = *(int *)(v205 + 20);
          v422 = &v204[v316];
          v431 = (char *)v203 + v316;
          if (((unsigned int (*)(void))__dst)())
          {
            v317 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v431, v422, *(_QWORD *)(*(_QWORD *)(v317 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v431, v422, v448);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v431, 0, 1, v448);
          }
          *(_QWORD *)((char *)v203 + *(int *)(v205 + 24)) = *(_QWORD *)&v204[*(int *)(v205 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v206 + 56))(v203, 0, 1, v205);
        }
        *((_BYTE *)v126 + *(int *)(v440 + 40)) = v127[*(int *)(v440 + 40)];
        goto LABEL_188;
      case 8u:
        v416 = v129;
        v208 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v208;
        v209 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v209;
        v210 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v210;
        v211 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v211;
        *(_OWORD *)((char *)v126 + 185) = *(_OWORD *)(v127 + 185);
        v212 = *((_OWORD *)v127 + 11);
        v126[10] = *((_OWORD *)v127 + 10);
        v126[11] = v212;
        v213 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v213;
        v441 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
        v214 = *(int *)(v441 + 40);
        v215 = (_DWORD *)((char *)v126 + v214);
        v216 = &v127[v214];
        v217 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v218 = *(_QWORD *)(v217 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48))(v216, 1, v217))
        {
          v219 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v215, v216, *(_QWORD *)(*(_QWORD *)(v219 - 8) + 64));
        }
        else
        {
          *v215 = *(_DWORD *)v216;
          v318 = *(int *)(v217 + 20);
          v423 = &v216[v318];
          v432 = (char *)v215 + v318;
          if (((unsigned int (*)(void))__dst)())
          {
            v319 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v432, v423, *(_QWORD *)(*(_QWORD *)(v319 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v432, v423, v448);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v432, 0, 1, v448);
          }
          *(_QWORD *)((char *)v215 + *(int *)(v217 + 24)) = *(_QWORD *)&v216[*(int *)(v217 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v218 + 56))(v215, 0, 1, v217);
        }
        v365 = *(int *)(v441 + 44);
        v366 = (char *)v126 + v365;
        v367 = &v127[v365];
        v129 = v416;
        if (__dst(v367, 1, v448))
        {
          v368 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v366, v367, *(_QWORD *)(*(_QWORD *)(v368 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v366, v367, v448);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v366, 0, 1, v448);
        }
        goto LABEL_181;
      case 9u:
        v414 = v129;
        v220 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v220;
        v221 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v221;
        v126[4] = *((_OWORD *)v127 + 4);
        v442 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
        v222 = v442[9];
        v223 = (char *)v126 + v222;
        v224 = &v127[v222];
        v225 = sub_1AD63B03C();
        v226 = *(_QWORD *)(v225 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v226 + 48))(v224, 1, v225))
        {
          v227 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v223, v224, *(_QWORD *)(*(_QWORD *)(v227 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v226 + 32))(v223, v224, v225);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v226 + 56))(v223, 0, 1, v225);
        }
        v320 = v442[10];
        v321 = (_OWORD *)((char *)v126 + v320);
        v322 = &v127[v320];
        v323 = *((_OWORD *)v322 + 5);
        v321[4] = *((_OWORD *)v322 + 4);
        v321[5] = v323;
        v321[6] = *((_OWORD *)v322 + 6);
        *(_OWORD *)((char *)v321 + 105) = *(_OWORD *)(v322 + 105);
        v324 = *((_OWORD *)v322 + 1);
        *v321 = *(_OWORD *)v322;
        v321[1] = v324;
        v325 = *((_OWORD *)v322 + 3);
        v321[2] = *((_OWORD *)v322 + 2);
        v321[3] = v325;
        v326 = v442[11];
        v327 = (_DWORD *)((char *)v126 + v326);
        v328 = &v127[v326];
        v329 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v330 = *(_QWORD *)(v329 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v330 + 48))(v328, 1, v329))
        {
          v331 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v327, v328, *(_QWORD *)(*(_QWORD *)(v331 - 8) + 64));
        }
        else
        {
          *v327 = *(_DWORD *)v328;
          v351 = *(int *)(v329 + 20);
          v426 = &v328[v351];
          v436 = (char *)v327 + v351;
          if (((unsigned int (*)(void))__dst)())
          {
            v352 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v436, v426, *(_QWORD *)(*(_QWORD *)(v352 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v436, v426, v448);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v436, 0, 1, v448);
          }
          *(_QWORD *)((char *)v327 + *(int *)(v329 + 24)) = *(_QWORD *)&v328[*(int *)(v329 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v330 + 56))(v327, 0, 1, v329);
        }
        *(_QWORD *)((char *)v126 + v442[12]) = *(_QWORD *)&v127[v442[12]];
        goto LABEL_188;
      case 0xAu:
        v414 = v129;
        v228 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v228;
        v229 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v229;
        v230 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v230;
        v126[10] = *((_OWORD *)v127 + 10);
        *(_OWORD *)((char *)v126 + 169) = *(_OWORD *)(v127 + 169);
        v231 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v231;
        v232 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v232;
        v443 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
        v233 = *(int *)(v443 + 36);
        v234 = (_DWORD *)((char *)v126 + v233);
        v235 = &v127[v233];
        v236 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v237 = *(_QWORD *)(v236 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v237 + 48))(v235, 1, v236))
        {
          v238 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v234, v235, *(_QWORD *)(*(_QWORD *)(v238 - 8) + 64));
        }
        else
        {
          *v234 = *(_DWORD *)v235;
          v332 = *(int *)(v236 + 20);
          v424 = &v235[v332];
          v433 = (char *)v234 + v332;
          if (((unsigned int (*)(void))__dst)())
          {
            v333 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v433, v424, *(_QWORD *)(*(_QWORD *)(v333 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v433, v424, v448);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v433, 0, 1, v448);
          }
          *(_QWORD *)((char *)v234 + *(int *)(v236 + 24)) = *(_QWORD *)&v235[*(int *)(v236 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v237 + 56))(v234, 0, 1, v236);
        }
        *(_QWORD *)((char *)v126 + *(int *)(v443 + 40)) = *(_QWORD *)&v127[*(int *)(v443 + 40)];
        goto LABEL_188;
      case 0xBu:
        v239 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v239;
        v240 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v240;
        v241 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v241;
        v242 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v242;
        *(_OWORD *)((char *)v126 + 185) = *(_OWORD *)(v127 + 185);
        v243 = *((_OWORD *)v127 + 11);
        v126[10] = *((_OWORD *)v127 + 10);
        v126[11] = v243;
        v244 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v244;
        v245 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
        v162 = (_DWORD *)((char *)v126 + v245);
        v163 = &v127[v245];
        v164 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v165 = *(_QWORD *)(v164 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
          goto LABEL_107;
        *v162 = *(_DWORD *)v163;
        v334 = *(int *)(v164 + 20);
        v430 = &v163[v334];
        v445 = (char *)v162 + v334;
        if (((unsigned int (*)(void))__dst)())
          goto LABEL_126;
        goto LABEL_173;
      case 0xCu:
        v246 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v246;
        v247 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v247;
        v248 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v248;
        v126[10] = *((_OWORD *)v127 + 10);
        *(_OWORD *)((char *)v126 + 169) = *(_OWORD *)(v127 + 169);
        v249 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v249;
        v250 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v250;
        v251 = *(int *)(type metadata accessor for LinkPresentation.TVSeasonMetadata(0) + 36);
        v162 = (_DWORD *)((char *)v126 + v251);
        v163 = &v127[v251];
        v164 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v165 = *(_QWORD *)(v164 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
          goto LABEL_107;
        *v162 = *(_DWORD *)v163;
        v335 = *(int *)(v164 + 20);
        v430 = &v163[v335];
        v445 = (char *)v162 + v335;
        if (((unsigned int (*)(void))__dst)())
          goto LABEL_126;
        goto LABEL_173;
      case 0xDu:
        v252 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v252;
        v253 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v253;
        *(_OWORD *)((char *)v126 + 153) = *(_OWORD *)(v127 + 153);
        v254 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v254;
        v255 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v255;
        v256 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v256;
        v257 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
        v162 = (_DWORD *)((char *)v126 + v257);
        v163 = &v127[v257];
        v164 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v165 = *(_QWORD *)(v164 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
          goto LABEL_107;
        *v162 = *(_DWORD *)v163;
        v336 = *(int *)(v164 + 20);
        v430 = &v163[v336];
        v445 = (char *)v162 + v336;
        if (((unsigned int (*)(void))__dst)())
          goto LABEL_126;
        goto LABEL_173;
      case 0xEu:
        v414 = v129;
        v258 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v258;
        v259 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v259;
        v260 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v260;
        v126[10] = *((_OWORD *)v127 + 10);
        *(_OWORD *)((char *)v126 + 169) = *(_OWORD *)(v127 + 169);
        v261 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v261;
        v262 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v262;
        v444 = (int *)type metadata accessor for LinkPresentation.MovieMetadata(0);
        v263 = v444[9];
        v264 = (_DWORD *)((char *)v126 + v263);
        v265 = &v127[v263];
        v266 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v267 = *(_QWORD *)(v266 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v267 + 48))(v265, 1, v266))
        {
          v268 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v264, v265, *(_QWORD *)(*(_QWORD *)(v268 - 8) + 64));
        }
        else
        {
          *v264 = *(_DWORD *)v265;
          v338 = *(int *)(v266 + 20);
          v425 = &v265[v338];
          v434 = (char *)v264 + v338;
          if (((unsigned int (*)(void))__dst)())
          {
            v339 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v434, v425, *(_QWORD *)(*(_QWORD *)(v339 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v434, v425, v448);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v434, 0, 1, v448);
          }
          *(_QWORD *)((char *)v264 + *(int *)(v266 + 24)) = *(_QWORD *)&v265[*(int *)(v266 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v267 + 56))(v264, 0, 1, v266);
        }
        v369 = v444[10];
        v370 = (_OWORD *)((char *)v126 + v369);
        v371 = &v127[v369];
        v372 = *((_OWORD *)v371 + 5);
        v370[4] = *((_OWORD *)v371 + 4);
        v370[5] = v372;
        v370[6] = *((_OWORD *)v371 + 6);
        *(_OWORD *)((char *)v370 + 105) = *(_OWORD *)(v371 + 105);
        v373 = *((_OWORD *)v371 + 1);
        *v370 = *(_OWORD *)v371;
        v370[1] = v373;
        v374 = *((_OWORD *)v371 + 3);
        v370[2] = *((_OWORD *)v371 + 2);
        v370[3] = v374;
        *(_OWORD *)((char *)v126 + v444[11]) = *(_OWORD *)&v127[v444[11]];
LABEL_188:
        swift_storeEnumTagMultiPayload();
        v129 = v414;
        break;
      case 0xFu:
        v269 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v269;
        v270 = *((_OWORD *)v127 + 3);
        v126[2] = *((_OWORD *)v127 + 2);
        v126[3] = v270;
        v271 = *((_OWORD *)v127 + 9);
        v126[8] = *((_OWORD *)v127 + 8);
        v126[9] = v271;
        v126[10] = *((_OWORD *)v127 + 10);
        *(_OWORD *)((char *)v126 + 169) = *(_OWORD *)(v127 + 169);
        v272 = *((_OWORD *)v127 + 5);
        v126[4] = *((_OWORD *)v127 + 4);
        v126[5] = v272;
        v273 = *((_OWORD *)v127 + 7);
        v126[6] = *((_OWORD *)v127 + 6);
        v126[7] = v273;
        v274 = *(int *)(type metadata accessor for LinkPresentation.MovieBundleMetadata(0) + 36);
        v162 = (_DWORD *)((char *)v126 + v274);
        v163 = &v127[v274];
        v164 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v165 = *(_QWORD *)(v164 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v165 + 48))(v163, 1, v164))
        {
LABEL_107:
          v313 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v162, v163, *(_QWORD *)(*(_QWORD *)(v313 - 8) + 64));
        }
        else
        {
          *v162 = *(_DWORD *)v163;
          v340 = *(int *)(v164 + 20);
          v430 = &v163[v340];
          v445 = (char *)v162 + v340;
          if (((unsigned int (*)(void))__dst)())
          {
LABEL_126:
            v337 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v445, v430, *(_QWORD *)(*(_QWORD *)(v337 - 8) + 64));
          }
          else
          {
LABEL_173:
            (*(void (**)(char *, char *, uint64_t))(v450 + 32))(v445, v430, v448);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v450 + 56))(v445, 0, 1, v448);
          }
          *(_QWORD *)((char *)v162 + *(int *)(v164 + 24)) = *(_QWORD *)&v163[*(int *)(v164 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v165 + 56))(v162, 0, 1, v164);
        }
        goto LABEL_181;
      case 0x16u:
        v275 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v275;
        *((_QWORD *)v126 + 4) = *((_QWORD *)v127 + 4);
        *(_OWORD *)((char *)v126 + 104) = *(_OWORD *)(v127 + 104);
        *(_OWORD *)((char *)v126 + 120) = *(_OWORD *)(v127 + 120);
        *(_OWORD *)((char *)v126 + 136) = *(_OWORD *)(v127 + 136);
        *(_OWORD *)((char *)v126 + 145) = *(_OWORD *)(v127 + 145);
        *(_OWORD *)((char *)v126 + 40) = *(_OWORD *)(v127 + 40);
        *(_OWORD *)((char *)v126 + 56) = *(_OWORD *)(v127 + 56);
        *(_OWORD *)((char *)v126 + 72) = *(_OWORD *)(v127 + 72);
        *(_OWORD *)((char *)v126 + 88) = *(_OWORD *)(v127 + 88);
        *(_OWORD *)((char *)v126 + 273) = *(_OWORD *)(v127 + 273);
        *(_OWORD *)((char *)v126 + 264) = *(_OWORD *)(v127 + 264);
        *(_OWORD *)((char *)v126 + 248) = *(_OWORD *)(v127 + 248);
        *(_OWORD *)((char *)v126 + 232) = *(_OWORD *)(v127 + 232);
        *(_OWORD *)((char *)v126 + 216) = *(_OWORD *)(v127 + 216);
        *(_OWORD *)((char *)v126 + 200) = *(_OWORD *)(v127 + 200);
        *(_OWORD *)((char *)v126 + 184) = *(_OWORD *)(v127 + 184);
        *(_OWORD *)((char *)v126 + 168) = *(_OWORD *)(v127 + 168);
        v276 = *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
        v277 = (char *)v126 + v276;
        v278 = &v127[v276];
        v279 = sub_1AD63B03C();
        v280 = *(_QWORD *)(v279 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v280 + 48))(v278, 1, v279))
        {
          v281 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v277, v278, *(_QWORD *)(*(_QWORD *)(v281 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v280 + 32))(v277, v278, v279);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v280 + 56))(v277, 0, 1, v279);
        }
        goto LABEL_181;
      case 0x1Au:
        v417 = v129;
        v282 = *((_OWORD *)v127 + 1);
        *v126 = *(_OWORD *)v127;
        v126[1] = v282;
        *((_QWORD *)v126 + 4) = *((_QWORD *)v127 + 4);
        *(_OWORD *)((char *)v126 + 104) = *(_OWORD *)(v127 + 104);
        *(_OWORD *)((char *)v126 + 120) = *(_OWORD *)(v127 + 120);
        *(_OWORD *)((char *)v126 + 136) = *(_OWORD *)(v127 + 136);
        *(_OWORD *)((char *)v126 + 145) = *(_OWORD *)(v127 + 145);
        *(_OWORD *)((char *)v126 + 40) = *(_OWORD *)(v127 + 40);
        *(_OWORD *)((char *)v126 + 56) = *(_OWORD *)(v127 + 56);
        *(_OWORD *)((char *)v126 + 72) = *(_OWORD *)(v127 + 72);
        *(_OWORD *)((char *)v126 + 88) = *(_OWORD *)(v127 + 88);
        v451 = type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
        v283 = *(int *)(v451 + 36);
        v284 = (char *)v126 + v283;
        v285 = &v127[v283];
        v286 = sub_1AD63B03C();
        v287 = *(_QWORD *)(v286 - 8);
        __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v287 + 48);
        v449 = v287;
        if (__dsta(v285, 1, v286))
        {
          v288 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v284, v285, *(_QWORD *)(*(_QWORD *)(v288 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v287 + 32))(v284, v285, v286);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v287 + 56))(v284, 0, 1, v286);
        }
        v341 = v451;
        v342 = *(int *)(v451 + 40);
        v343 = (char *)v126 + v342;
        v344 = &v127[v342];
        if (__dsta(&v127[v342], 1, v286))
        {
          v345 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v343, v344, *(_QWORD *)(*(_QWORD *)(v345 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v449 + 32))(v343, v344, v286);
          v341 = v451;
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v449 + 56))(v343, 0, 1, v286);
        }
        v353 = *(int *)(v341 + 44);
        v347 = (char *)v126 + v353;
        v348 = &v127[v353];
        v129 = v417;
        if (__dsta(v348, 1, v286))
          goto LABEL_144;
        goto LABEL_145;
      case 0x1Eu:
        v418 = v129;
        *v126 = *(_OWORD *)v127;
        v289 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
        v290 = *(int *)(v289 + 20);
        v452 = v289;
        __dstb = (char *)v126 + v290;
        v291 = &v127[v290];
        v286 = sub_1AD63B03C();
        v292 = *(_QWORD *)(v286 - 8);
        v293 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v292 + 48);
        v449 = v292;
        if (v293(v291, 1, v286))
        {
          v294 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(__dstb, v291, *(_QWORD *)(*(_QWORD *)(v294 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v292 + 32))(__dstb, v291, v286);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v292 + 56))(__dstb, 0, 1, v286);
        }
        v346 = *(int *)(v452 + 24);
        v347 = (char *)v126 + v346;
        v348 = &v127[v346];
        v129 = v418;
        if (v293(v348, 1, v286))
        {
LABEL_144:
          v354 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v347, v348, *(_QWORD *)(*(_QWORD *)(v354 - 8) + 64));
        }
        else
        {
LABEL_145:
          (*(void (**)(char *, char *, uint64_t))(v449 + 32))(v347, v348, v286);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v449 + 56))(v347, 0, 1, v286);
        }
LABEL_181:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v126, v127, *(_QWORD *)(v129 + 64));
        break;
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v129 + 56))(v126, 0, 1, v128);
  }
  v384 = a3[42];
  v385 = a3[43];
  v386 = (char *)a1 + v384;
  v387 = &a2[v384];
  v388 = *((_OWORD *)v387 + 9);
  *((_OWORD *)v386 + 8) = *((_OWORD *)v387 + 8);
  *((_OWORD *)v386 + 9) = v388;
  *((_OWORD *)v386 + 10) = *((_OWORD *)v387 + 10);
  *((_QWORD *)v386 + 22) = *((_QWORD *)v387 + 22);
  v389 = *((_OWORD *)v387 + 5);
  *((_OWORD *)v386 + 4) = *((_OWORD *)v387 + 4);
  *((_OWORD *)v386 + 5) = v389;
  v390 = *((_OWORD *)v387 + 7);
  *((_OWORD *)v386 + 6) = *((_OWORD *)v387 + 6);
  *((_OWORD *)v386 + 7) = v390;
  v391 = *((_OWORD *)v387 + 1);
  *(_OWORD *)v386 = *(_OWORD *)v387;
  *((_OWORD *)v386 + 1) = v391;
  v392 = *((_OWORD *)v387 + 3);
  v393 = (_OWORD *)((char *)a1 + v385);
  v394 = &a2[v385];
  *((_OWORD *)v386 + 2) = *((_OWORD *)v387 + 2);
  *((_OWORD *)v386 + 3) = v392;
  v395 = (int *)type metadata accessor for CollaborationMetadata();
  v396 = *((_QWORD *)v395 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v396 + 48))(v394, 1, v395))
  {
    v397 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
    memcpy(v393, v394, *(_QWORD *)(*(_QWORD *)(v397 - 8) + 64));
  }
  else
  {
    v398 = *((_OWORD *)v394 + 1);
    *v393 = *(_OWORD *)v394;
    v393[1] = v398;
    v399 = v395[6];
    v400 = (char *)v393 + v399;
    v401 = &v394[v399];
    v402 = sub_1AD63B03C();
    v403 = *(_QWORD *)(v402 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v403 + 48))(v401, 1, v402))
    {
      v404 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v400, v401, *(_QWORD *)(*(_QWORD *)(v404 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v403 + 32))(v400, v401, v402);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v403 + 56))(v400, 0, 1, v402);
    }
    *(_OWORD *)((char *)v393 + v395[7]) = *(_OWORD *)&v394[v395[7]];
    *(_QWORD *)((char *)v393 + v395[8]) = *(_QWORD *)&v394[v395[8]];
    *(_QWORD *)((char *)v393 + v395[9]) = *(_QWORD *)&v394[v395[9]];
    v405 = v395[10];
    v406 = (_OWORD *)((char *)v393 + v405);
    v407 = &v394[v405];
    v408 = *((_OWORD *)v407 + 5);
    v406[4] = *((_OWORD *)v407 + 4);
    v406[5] = v408;
    v409 = *((_OWORD *)v407 + 7);
    v406[6] = *((_OWORD *)v407 + 6);
    v406[7] = v409;
    v410 = *((_OWORD *)v407 + 1);
    *v406 = *(_OWORD *)v407;
    v406[1] = v410;
    v411 = *((_OWORD *)v407 + 3);
    v406[2] = *((_OWORD *)v407 + 2);
    v406[3] = v411;
    (*(void (**)(_OWORD *, _QWORD, uint64_t, int *))(v396 + 56))(v393, 0, 1, v395);
  }
  return a1;
}

char *sub_1AD087CD8(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t (*v10)(char *, uint64_t, uint64_t);
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  __int128 v74;
  uint64_t v75;
  char *v76;
  uint64_t *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t (*v98)(char *, uint64_t, uint64_t);
  int v99;
  int v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  unsigned int v109;
  uint64_t v110;
  unsigned int v111;
  int v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  char *v116;
  uint64_t *v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  int *v129;
  uint64_t v130;
  uint64_t (*v131)(char *, uint64_t, int *);
  int v132;
  int v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  unsigned int v142;
  uint64_t v143;
  unsigned int v144;
  int v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  uint64_t *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  uint64_t v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  uint64_t v166;
  char *v167;
  char *v168;
  int *v169;
  uint64_t v170;
  uint64_t (*v171)(char *, uint64_t, int *);
  int v172;
  int v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  unsigned int v182;
  uint64_t v183;
  unsigned int v184;
  int v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  uint64_t *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  char *v199;
  char *v200;
  int *v201;
  unsigned int (*v202)(char *, uint64_t, int *);
  unsigned int v203;
  unsigned int v204;
  uint64_t v205;
  uint64_t v206;
  unsigned int v207;
  unsigned int v208;
  uint64_t v209;
  char *v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;
  char *v214;
  char *v215;
  uint64_t v216;
  uint64_t v217;
  char *v218;
  char *v219;
  unsigned int v220;
  uint64_t v221;
  unsigned int v222;
  uint64_t v223;
  int v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  char *v233;
  char *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  int *v240;
  uint64_t v241;
  uint64_t (*v242)(char *, uint64_t, int *);
  int v243;
  int v244;
  uint64_t v245;
  char *v246;
  uint64_t v247;
  char *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  uint64_t v253;
  char *v254;
  unsigned int v255;
  unsigned int v256;
  uint64_t v257;
  uint64_t v258;
  const void *v259;
  char *v260;
  char *v261;
  uint64_t v262;
  char *v263;
  uint64_t *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  char *v268;
  uint64_t *v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  char *v273;
  char *v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t (*v277)(char *, uint64_t, uint64_t);
  int v278;
  int v279;
  uint64_t v280;
  uint64_t v281;
  unsigned int v282;
  unsigned int v283;
  uint64_t v284;
  uint64_t v285;
  char *v286;
  char *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  char *v291;
  char *v292;
  int *v293;
  uint64_t v294;
  uint64_t (*v295)(char *, uint64_t, int *);
  int v296;
  int v297;
  uint64_t v298;
  char *v299;
  uint64_t v300;
  char *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  char *v305;
  uint64_t v306;
  char *v307;
  unsigned int v308;
  unsigned int v309;
  uint64_t v310;
  uint64_t v311;
  const void *v312;
  char *v313;
  char *v314;
  uint64_t v315;
  char *v316;
  uint64_t *v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  char *v321;
  uint64_t *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t (*v330)(uint64_t, uint64_t, uint64_t);
  int v331;
  int v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  uint64_t v340;
  _DWORD *v341;
  char *v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  int *v346;
  size_t v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  uint64_t v355;
  _DWORD *v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  int *v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  uint64_t v367;
  _DWORD *v368;
  char *v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  __int128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  uint64_t v378;
  _DWORD *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  uint64_t v388;
  __int128 v389;
  __int128 v390;
  int *v391;
  uint64_t v392;
  void *v393;
  uint64_t v394;
  char *v395;
  uint64_t v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  uint64_t v402;
  uint64_t v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  int *v411;
  uint64_t v412;
  char *v413;
  char *v414;
  uint64_t v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  uint64_t v421;
  _DWORD *v422;
  char *v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  __int128 v432;
  uint64_t v433;
  _DWORD *v434;
  char *v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  __int128 v439;
  __int128 v440;
  uint64_t v441;
  void *v442;
  char *v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  uint64_t v452;
  _DWORD *v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  uint64_t v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  uint64_t v470;
  __int128 v471;
  __int128 v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  uint64_t v476;
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  uint64_t v482;
  _DWORD *v483;
  char *v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  uint64_t v493;
  uint64_t v494;
  __int128 v495;
  uint64_t v496;
  void *v497;
  char *v498;
  uint64_t v499;
  uint64_t v500;
  uint64_t v501;
  __int128 v502;
  uint64_t v503;
  void *v504;
  char *v505;
  uint64_t v506;
  uint64_t v507;
  uint64_t v508;
  uint64_t v509;
  uint64_t v510;
  char *v511;
  uint64_t v512;
  uint64_t v513;
  unsigned int (*v514)(char *, uint64_t, uint64_t);
  uint64_t v515;
  uint64_t v516;
  char *v517;
  char *v518;
  uint64_t v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  uint64_t v525;
  _DWORD *v526;
  char *v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  uint64_t v536;
  _DWORD *v537;
  char *v538;
  uint64_t v539;
  uint64_t v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  uint64_t v546;
  __int128 v547;
  __int128 v548;
  int *v549;
  uint64_t v550;
  void *v551;
  uint64_t v552;
  char *v553;
  uint64_t v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  uint64_t v560;
  uint64_t v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  int *v569;
  uint64_t v570;
  char *v571;
  char *v572;
  uint64_t v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  __int128 v578;
  uint64_t v579;
  _DWORD *v580;
  char *v581;
  uint64_t v582;
  uint64_t v583;
  uint64_t v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  uint64_t v591;
  _DWORD *v592;
  char *v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  __int128 v597;
  __int128 v598;
  uint64_t v599;
  void *v600;
  char *v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  __int128 v605;
  __int128 v606;
  __int128 v607;
  __int128 v608;
  __int128 v609;
  uint64_t v610;
  __int128 v611;
  __int128 v612;
  __int128 v613;
  __int128 v614;
  __int128 v615;
  __int128 v616;
  uint64_t v617;
  __int128 v618;
  __int128 v619;
  __int128 v620;
  __int128 v621;
  __int128 v622;
  uint64_t v623;
  __int128 v624;
  __int128 v625;
  __int128 v626;
  __int128 v627;
  __int128 v628;
  uint64_t v629;
  __int128 v630;
  __int128 v631;
  __int128 v632;
  __int128 v633;
  __int128 v634;
  uint64_t v635;
  _DWORD *v636;
  char *v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  __int128 v641;
  __int128 v642;
  __int128 v643;
  __int128 v644;
  __int128 v645;
  uint64_t v646;
  __int128 v647;
  uint64_t v648;
  void *v649;
  char *v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  __int128 v654;
  uint64_t v655;
  void *v656;
  char *v657;
  uint64_t v658;
  uint64_t v659;
  uint64_t v660;
  uint64_t v661;
  uint64_t v662;
  char *v663;
  uint64_t v664;
  unsigned int (*v665)(char *, uint64_t, uint64_t);
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  char *v671;
  uint64_t v672;
  uint64_t v673;
  uint64_t v674;
  uint64_t v675;
  _OWORD *v676;
  char *v677;
  __int128 v678;
  __int128 v679;
  __int128 v680;
  __int128 v681;
  uint64_t v682;
  uint64_t v683;
  uint64_t v684;
  uint64_t v685;
  uint64_t v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  _OWORD *v692;
  char *v693;
  __int128 v694;
  __int128 v695;
  __int128 v696;
  uint64_t v697;
  _DWORD *v698;
  char *v699;
  uint64_t v700;
  uint64_t v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  uint64_t v709;
  uint64_t v710;
  uint64_t v711;
  uint64_t v712;
  uint64_t v713;
  uint64_t v714;
  uint64_t v715;
  void *v716;
  char *v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  void *v722;
  char *v723;
  uint64_t v724;
  uint64_t v725;
  uint64_t v726;
  uint64_t v727;
  uint64_t v728;
  uint64_t v729;
  char *v730;
  uint64_t v731;
  void *v732;
  char *v733;
  uint64_t v734;
  uint64_t v735;
  char *v736;
  char *v737;
  uint64_t v738;
  uint64_t v739;
  void *v740;
  char *v741;
  uint64_t v742;
  uint64_t v743;
  _OWORD *v744;
  char *v745;
  __int128 v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  uint64_t v750;
  char *v751;
  uint64_t v752;
  uint64_t v753;
  uint64_t v754;
  uint64_t v755;
  _OWORD *v756;
  char *v757;
  __int128 v758;
  __int128 v759;
  __int128 v760;
  __int128 v761;
  uint64_t v762;
  uint64_t v763;
  uint64_t v764;
  uint64_t v765;
  uint64_t v766;
  uint64_t v767;
  uint64_t v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  _OWORD *v772;
  char *v773;
  __int128 v774;
  __int128 v775;
  __int128 v776;
  uint64_t v777;
  _DWORD *v778;
  char *v779;
  uint64_t v780;
  uint64_t v781;
  uint64_t v782;
  uint64_t v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  uint64_t v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  void *v796;
  char *v797;
  uint64_t v798;
  uint64_t v799;
  uint64_t v800;
  void *v801;
  char *v802;
  uint64_t v803;
  uint64_t v804;
  uint64_t v805;
  void *v806;
  char *v807;
  uint64_t v808;
  uint64_t v809;
  _OWORD *v810;
  char *v811;
  __int128 v812;
  __int128 v813;
  __int128 v814;
  uint64_t v815;
  uint64_t v816;
  uint64_t v817;
  uint64_t v818;
  char *v819;
  uint64_t v820;
  uint64_t v821;
  uint64_t v822;
  char *v823;
  char *v824;
  uint64_t v825;
  _OWORD *v826;
  char *v827;
  __int128 v828;
  __int128 v829;
  __int128 v830;
  uint64_t v831;
  uint64_t v832;
  char *v833;
  uint64_t v834;
  __int128 v835;
  __int128 v836;
  __int128 v837;
  __int128 v838;
  __int128 v839;
  uint64_t v840;
  __int128 v841;
  __int128 v842;
  __int128 v843;
  __int128 v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  char *v848;
  char *v849;
  int *v850;
  uint64_t v851;
  uint64_t (*v852)(char *, uint64_t, int *);
  int v853;
  int v854;
  __int128 v855;
  uint64_t v856;
  char *v857;
  char *v858;
  uint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  uint64_t v865;
  char *v866;
  char *v867;
  uint64_t v868;
  uint64_t v869;
  uint64_t (*v870)(char *, uint64_t, uint64_t);
  int v871;
  int v872;
  uint64_t v873;
  char *v874;
  char *v875;
  __int128 v876;
  __int128 v877;
  __int128 v878;
  __int128 v879;
  uint64_t v880;
  uint64_t v881;
  char *v882;
  uint64_t *v883;
  uint64_t v884;
  uint64_t v885;
  uint64_t v886;
  uint64_t v887;
  char *v888;
  uint64_t v889;
  uint64_t v890;
  uint64_t v891;
  uint64_t v892;
  uint64_t v893;
  __int128 v894;
  __int128 v895;
  __int128 v896;
  __int128 v897;
  uint64_t v899;
  void *v900;
  char *v901;
  uint64_t v902;
  uint64_t v903;
  _OWORD *v904;
  char *v905;
  __int128 v906;
  uint64_t v907;
  uint64_t v908;
  uint64_t v909;
  void *v910;
  char *v911;
  uint64_t v912;
  uint64_t v913;
  _OWORD *v914;
  char *v915;
  __int128 v916;
  __int128 v917;
  __int128 v918;
  uint64_t v919;
  char *v920;
  char *v921;
  uint64_t v922;
  _OWORD *v923;
  char *v924;
  __int128 v925;
  __int128 v926;
  __int128 v927;
  uint64_t v928;
  unsigned int (*v929)(char *, uint64_t, int *);
  uint64_t v930;
  char *v931;
  char *v932;
  char *v933;
  char *v934;
  char *v935;
  char *v936;
  uint64_t v937;
  char *v938;
  char *v939;
  char *v940;
  char *v941;
  char *v942;
  uint64_t v943;
  _DWORD *v944;
  char *v945;
  char *v946;
  char *v947;
  char *v948;
  char *v949;
  char *v950;
  _DWORD *v951;
  char *v952;
  char *v953;
  char *v954;
  char *v955;
  char *v956;
  int *v957;
  int *v958;
  int *v959;
  int *v960;
  int *v961;
  int *v962;
  int *v963;
  int *v964;
  int *v965;
  int *v966;
  int *v967;
  int *v968;
  int *v969;
  int *v970;
  char *v971;
  char *v972;
  char *v973;
  char *v974;
  uint64_t v975;
  uint64_t v976;
  uint64_t v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  uint64_t v984;
  uint64_t v985;
  uint64_t v986;
  uint64_t v987;
  uint64_t v988;
  uint64_t v989;
  uint64_t v990;
  int *v991;
  uint64_t v992;
  uint64_t v993;
  char *v994;
  char *v995;
  uint64_t v996;
  int *v997;
  uint64_t v998;
  uint64_t v999;
  unsigned int (*__dst)(char *, uint64_t, uint64_t);
  unsigned int (*__dsta)(char *, uint64_t, uint64_t);
  void *__dstb;
  unsigned int (*__dstc)(char *, uint64_t, uint64_t);
  void *__dstd;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1AD63AF28();
  v996 = *(_QWORD *)(v9 - 8);
  v10 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v996 + 48);
  v11 = v10(v7, 1, v9);
  __dst = (unsigned int (*)(char *, uint64_t, uint64_t))v10;
  v12 = v10(v8, 1, v9);
  if (v11)
  {
    if (!v12)
    {
      (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v12)
  {
    (*(void (**)(char *, uint64_t))(v996 + 8))(v7, v9);
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v7, v8, v9);
LABEL_7:
  v14 = a3[6];
  v15 = &a1[v14];
  v16 = &a2[v14];
  v17 = v10(&a1[v14], 1, v9);
  v18 = v10(v16, 1, v9);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v15, v16, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v15, 0, 1, v9);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v996 + 8))(v15, v9);
LABEL_12:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v15, v16, v9);
LABEL_13:
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = (uint64_t *)&a2[v20];
  v24 = *v22;
  v23 = v22[1];
  *(_QWORD *)v21 = v24;
  *((_QWORD *)v21 + 1) = v23;
  swift_bridgeObjectRelease();
  v25 = a3[8];
  v26 = &a1[v25];
  v27 = (uint64_t *)&a2[v25];
  v29 = *v27;
  v28 = v27[1];
  *(_QWORD *)v26 = v29;
  *((_QWORD *)v26 + 1) = v28;
  swift_bridgeObjectRelease();
  v30 = a3[9];
  v31 = &a1[v30];
  v32 = (uint64_t *)&a2[v30];
  v34 = *v32;
  v33 = v32[1];
  *(_QWORD *)v31 = v34;
  *((_QWORD *)v31 + 1) = v33;
  swift_bridgeObjectRelease();
  v35 = a3[10];
  v36 = &a1[v35];
  v37 = (uint64_t *)&a2[v35];
  v39 = *v37;
  v38 = v37[1];
  *(_QWORD *)v36 = v39;
  *((_QWORD *)v36 + 1) = v38;
  swift_bridgeObjectRelease();
  v40 = a3[11];
  v41 = &a1[v40];
  v42 = (uint64_t *)&a2[v40];
  v44 = *v42;
  v43 = v42[1];
  *(_QWORD *)v41 = v44;
  *((_QWORD *)v41 + 1) = v43;
  swift_bridgeObjectRelease();
  v45 = a3[12];
  v46 = &a1[v45];
  v47 = &a2[v45];
  v48 = v10(&a1[v45], 1, v9);
  v49 = v10(v47, 1, v9);
  if (v48)
  {
    if (!v49)
    {
      (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v46, v47, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v46, 0, 1, v9);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v49)
  {
    (*(void (**)(char *, uint64_t))(v996 + 8))(v46, v9);
LABEL_18:
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v46, v47, v9);
LABEL_19:
  v51 = a3[13];
  v52 = &a1[v51];
  v53 = (uint64_t *)&a2[v51];
  v55 = *v53;
  v54 = v53[1];
  *(_QWORD *)v52 = v55;
  *((_QWORD *)v52 + 1) = v54;
  swift_bridgeObjectRelease();
  v56 = a3[14];
  v57 = &a1[v56];
  v58 = (uint64_t *)&a2[v56];
  v60 = *v58;
  v59 = v58[1];
  *(_QWORD *)v57 = v60;
  *((_QWORD *)v57 + 1) = v59;
  swift_bridgeObjectRelease();
  v61 = a3[15];
  v62 = &a1[v61];
  v63 = (uint64_t *)&a2[v61];
  v65 = *v63;
  v64 = v63[1];
  *(_QWORD *)v62 = v65;
  *((_QWORD *)v62 + 1) = v64;
  swift_bridgeObjectRelease();
  v66 = a3[16];
  v67 = &a1[v66];
  v68 = (uint64_t *)&a2[v66];
  v70 = *v68;
  v69 = v68[1];
  *(_QWORD *)v67 = v70;
  *((_QWORD *)v67 + 1) = v69;
  swift_bridgeObjectRelease();
  v71 = a3[18];
  a1[a3[17]] = a2[a3[17]];
  v72 = &a1[v71];
  v73 = &a2[v71];
  v74 = *((_OWORD *)v73 + 1);
  *(_OWORD *)v72 = *(_OWORD *)v73;
  *((_OWORD *)v72 + 1) = v74;
  v72[32] = v73[32];
  v75 = a3[19];
  v76 = &a1[v75];
  v77 = (uint64_t *)&a2[v75];
  v79 = *v77;
  v78 = v77[1];
  *(_QWORD *)v76 = v79;
  *((_QWORD *)v76 + 1) = v78;
  swift_bridgeObjectRelease();
  v80 = a3[20];
  v81 = &a1[v80];
  v82 = (uint64_t *)&a2[v80];
  v84 = *v82;
  v83 = v82[1];
  *(_QWORD *)v81 = v84;
  *((_QWORD *)v81 + 1) = v83;
  swift_bridgeObjectRelease();
  v85 = a3[21];
  v86 = (uint64_t)&a1[v85];
  v87 = &a2[v85];
  if (*(_QWORD *)&a1[v85 + 16] == 1)
  {
LABEL_22:
    v89 = *((_OWORD *)v87 + 5);
    *(_OWORD *)(v86 + 64) = *((_OWORD *)v87 + 4);
    *(_OWORD *)(v86 + 80) = v89;
    *(_OWORD *)(v86 + 96) = *((_OWORD *)v87 + 6);
    *(_OWORD *)(v86 + 105) = *(_OWORD *)(v87 + 105);
    v90 = *((_OWORD *)v87 + 1);
    *(_OWORD *)v86 = *(_OWORD *)v87;
    *(_OWORD *)(v86 + 16) = v90;
    v91 = *((_OWORD *)v87 + 3);
    *(_OWORD *)(v86 + 32) = *((_OWORD *)v87 + 2);
    *(_OWORD *)(v86 + 48) = v91;
    goto LABEL_24;
  }
  v88 = *((_QWORD *)v87 + 2);
  if (v88 == 1)
  {
    sub_1AD0661D0(v86);
    goto LABEL_22;
  }
  *(_OWORD *)v86 = *(_OWORD *)v87;
  *(_QWORD *)(v86 + 16) = v88;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v86 + 24) = *(_OWORD *)(v87 + 24);
  *(_QWORD *)(v86 + 40) = *((_QWORD *)v87 + 5);
  swift_bridgeObjectRelease();
  v92 = *((_OWORD *)v87 + 4);
  *(_OWORD *)(v86 + 48) = *((_OWORD *)v87 + 3);
  *(_OWORD *)(v86 + 64) = v92;
  *(_BYTE *)(v86 + 80) = v87[80];
  *(_OWORD *)(v86 + 88) = *(_OWORD *)(v87 + 88);
  *(_OWORD *)(v86 + 104) = *(_OWORD *)(v87 + 104);
  *(_BYTE *)(v86 + 120) = v87[120];
LABEL_24:
  v93 = a3[22];
  v94 = &a1[v93];
  v95 = &a2[v93];
  v96 = type metadata accessor for LinkPresentation.IconMetadata(0);
  v97 = *(_QWORD *)(v96 - 8);
  v98 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v97 + 48);
  v99 = v98(v94, 1, v96);
  v100 = v98(v95, 1, v96);
  if (v99)
  {
    if (!v100)
    {
      *(_DWORD *)v94 = *(_DWORD *)v95;
      v101 = *(int *)(v96 + 20);
      v102 = &v94[v101];
      v103 = &v95[v101];
      if (__dst(&v95[v101], 1, v9))
      {
        v104 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v104 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v102, v103, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v102, 0, 1, v9);
      }
      *(_OWORD *)&v94[*(int *)(v96 + 24)] = *(_OWORD *)&v95[*(int *)(v96 + 24)];
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v94, 0, 1, v96);
      goto LABEL_44;
    }
LABEL_30:
    v105 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
    memcpy(v94, v95, *(_QWORD *)(*(_QWORD *)(v105 - 8) + 64));
    goto LABEL_44;
  }
  if (v100)
  {
    sub_1AD066230((uint64_t)v94, type metadata accessor for LinkPresentation.IconMetadata);
    goto LABEL_30;
  }
  *(_DWORD *)v94 = *(_DWORD *)v95;
  v106 = *(int *)(v96 + 20);
  v107 = &v94[v106];
  v108 = &v95[v106];
  v109 = __dst(&v94[v106], 1, v9);
  v110 = v9;
  v111 = v109;
  v975 = v110;
  v112 = ((uint64_t (*)(char *, uint64_t))__dst)(v108, 1);
  if (v111)
  {
    if (v112)
    {
      v113 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v113 - 8) + 64));
      v9 = v975;
    }
    else
    {
      v9 = v975;
      (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v107, v108, v975);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v107, 0, 1, v975);
    }
  }
  else
  {
    v9 = v975;
    if (v112)
    {
      (*(void (**)(char *, uint64_t))(v996 + 8))(v107, v975);
      v114 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v114 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v107, v108, v975);
    }
  }
  v115 = *(int *)(v96 + 24);
  v116 = &v94[v115];
  v117 = (uint64_t *)&v95[v115];
  v119 = *v117;
  v118 = v117[1];
  *(_QWORD *)v116 = v119;
  *((_QWORD *)v116 + 1) = v118;
  swift_bridgeObjectRelease();
LABEL_44:
  v120 = a3[23];
  v121 = (uint64_t)&a1[v120];
  v122 = &a2[v120];
  if (*(_QWORD *)&a1[v120 + 16] == 1)
  {
LABEL_47:
    v124 = *((_OWORD *)v122 + 1);
    *(_OWORD *)v121 = *(_OWORD *)v122;
    *(_OWORD *)(v121 + 16) = v124;
    *(_QWORD *)(v121 + 32) = *((_QWORD *)v122 + 4);
    goto LABEL_49;
  }
  v123 = *((_QWORD *)v122 + 2);
  if (v123 == 1)
  {
    sub_1AD066200(v121);
    goto LABEL_47;
  }
  *(_OWORD *)v121 = *(_OWORD *)v122;
  *(_QWORD *)(v121 + 16) = v123;
  swift_bridgeObjectRelease();
  v125 = *((_QWORD *)v122 + 4);
  *(_QWORD *)(v121 + 24) = *((_QWORD *)v122 + 3);
  *(_QWORD *)(v121 + 32) = v125;
  swift_bridgeObjectRelease();
LABEL_49:
  v126 = a3[24];
  v127 = &a1[v126];
  v128 = &a2[v126];
  v129 = (int *)type metadata accessor for LinkPresentation.ARAssetMetadata(0);
  v130 = *((_QWORD *)v129 - 1);
  v131 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v130 + 48);
  v132 = v131(v127, 1, v129);
  v133 = v131(v128, 1, v129);
  if (v132)
  {
    if (!v133)
    {
      *(_DWORD *)v127 = *(_DWORD *)v128;
      v134 = v129[5];
      v135 = &v127[v134];
      v136 = &v128[v134];
      if (__dst(&v128[v134], 1, v9))
      {
        v137 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v135, v136, *(_QWORD *)(*(_QWORD *)(v137 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v135, v136, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v135, 0, 1, v9);
      }
      *(_OWORD *)&v127[v129[6]] = *(_OWORD *)&v128[v129[6]];
      *(_OWORD *)&v127[v129[7]] = *(_OWORD *)&v128[v129[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v130 + 56))(v127, 0, 1, v129);
      goto LABEL_66;
    }
LABEL_55:
    v138 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
    memcpy(v127, v128, *(_QWORD *)(*(_QWORD *)(v138 - 8) + 64));
    goto LABEL_66;
  }
  if (v133)
  {
    sub_1AD066230((uint64_t)v127, type metadata accessor for LinkPresentation.ARAssetMetadata);
    goto LABEL_55;
  }
  *(_DWORD *)v127 = *(_DWORD *)v128;
  v139 = v129[5];
  v140 = &v127[v139];
  v141 = &v128[v139];
  v142 = __dst(&v127[v139], 1, v9);
  v143 = v9;
  v144 = v142;
  v976 = v143;
  v145 = ((uint64_t (*)(char *, uint64_t))__dst)(v141, 1);
  if (v144)
  {
    if (v145)
    {
      v146 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v146 - 8) + 64));
      v9 = v976;
    }
    else
    {
      v9 = v976;
      (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v140, v141, v976);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v140, 0, 1, v976);
    }
  }
  else
  {
    v9 = v976;
    if (v145)
    {
      (*(void (**)(char *, uint64_t))(v996 + 8))(v140, v976);
      v147 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v140, v141, *(_QWORD *)(*(_QWORD *)(v147 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v140, v141, v976);
    }
  }
  v148 = v129[6];
  v149 = &v127[v148];
  v150 = (uint64_t *)&v128[v148];
  v152 = *v150;
  v151 = v150[1];
  *(_QWORD *)v149 = v152;
  *((_QWORD *)v149 + 1) = v151;
  swift_bridgeObjectRelease();
  v153 = v129[7];
  v154 = &v127[v153];
  v155 = (uint64_t *)&v128[v153];
  v157 = *v155;
  v156 = v155[1];
  *(_QWORD *)v154 = v157;
  *((_QWORD *)v154 + 1) = v156;
  swift_bridgeObjectRelease();
LABEL_66:
  v158 = a3[25];
  v159 = (uint64_t)&a1[v158];
  v160 = &a2[v158];
  if (*(_QWORD *)&a1[v158 + 16] == 1)
  {
LABEL_69:
    v162 = *((_OWORD *)v160 + 5);
    *(_OWORD *)(v159 + 64) = *((_OWORD *)v160 + 4);
    *(_OWORD *)(v159 + 80) = v162;
    *(_OWORD *)(v159 + 96) = *((_OWORD *)v160 + 6);
    *(_OWORD *)(v159 + 105) = *(_OWORD *)(v160 + 105);
    v163 = *((_OWORD *)v160 + 1);
    *(_OWORD *)v159 = *(_OWORD *)v160;
    *(_OWORD *)(v159 + 16) = v163;
    v164 = *((_OWORD *)v160 + 3);
    *(_OWORD *)(v159 + 32) = *((_OWORD *)v160 + 2);
    *(_OWORD *)(v159 + 48) = v164;
    goto LABEL_71;
  }
  v161 = *((_QWORD *)v160 + 2);
  if (v161 == 1)
  {
    sub_1AD0661D0(v159);
    goto LABEL_69;
  }
  *(_OWORD *)v159 = *(_OWORD *)v160;
  *(_QWORD *)(v159 + 16) = v161;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v159 + 24) = *(_OWORD *)(v160 + 24);
  *(_QWORD *)(v159 + 40) = *((_QWORD *)v160 + 5);
  swift_bridgeObjectRelease();
  v165 = *((_OWORD *)v160 + 4);
  *(_OWORD *)(v159 + 48) = *((_OWORD *)v160 + 3);
  *(_OWORD *)(v159 + 64) = v165;
  *(_BYTE *)(v159 + 80) = v160[80];
  *(_OWORD *)(v159 + 88) = *(_OWORD *)(v160 + 88);
  *(_OWORD *)(v159 + 104) = *(_OWORD *)(v160 + 104);
  *(_BYTE *)(v159 + 120) = v160[120];
LABEL_71:
  *(_QWORD *)&a1[a3[26]] = *(_QWORD *)&a2[a3[26]];
  swift_bridgeObjectRelease();
  v166 = a3[27];
  v167 = &a1[v166];
  v168 = &a2[v166];
  v169 = (int *)type metadata accessor for LinkPresentation.ImageMetadata(0);
  v170 = *((_QWORD *)v169 - 1);
  v171 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v170 + 48);
  v172 = v171(v167, 1, v169);
  v173 = v171(v168, 1, v169);
  if (v172)
  {
    if (!v173)
    {
      *(_DWORD *)v167 = *(_DWORD *)v168;
      v174 = v169[5];
      v175 = &v167[v174];
      v176 = &v168[v174];
      if (__dst(&v168[v174], 1, v9))
      {
        v177 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v175, v176, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v175, v176, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v175, 0, 1, v9);
      }
      *(_OWORD *)&v167[v169[6]] = *(_OWORD *)&v168[v169[6]];
      *(_OWORD *)&v167[v169[7]] = *(_OWORD *)&v168[v169[7]];
      *(_OWORD *)&v167[v169[8]] = *(_OWORD *)&v168[v169[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v170 + 56))(v167, 0, 1, v169);
      goto LABEL_88;
    }
LABEL_77:
    v178 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
    memcpy(v167, v168, *(_QWORD *)(*(_QWORD *)(v178 - 8) + 64));
    goto LABEL_88;
  }
  if (v173)
  {
    sub_1AD066230((uint64_t)v167, type metadata accessor for LinkPresentation.ImageMetadata);
    goto LABEL_77;
  }
  *(_DWORD *)v167 = *(_DWORD *)v168;
  v179 = v169[5];
  v180 = &v167[v179];
  v181 = &v168[v179];
  v182 = __dst(&v167[v179], 1, v9);
  v183 = v9;
  v184 = v182;
  v977 = v183;
  v185 = ((uint64_t (*)(char *, uint64_t))__dst)(v181, 1);
  if (v184)
  {
    if (v185)
    {
      v186 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v186 - 8) + 64));
      v9 = v977;
    }
    else
    {
      v9 = v977;
      (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v180, v181, v977);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v180, 0, 1, v977);
    }
  }
  else
  {
    v9 = v977;
    if (v185)
    {
      (*(void (**)(char *, uint64_t))(v996 + 8))(v180, v977);
      v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v180, v181, v977);
    }
  }
  v188 = v169[6];
  v189 = &v167[v188];
  v190 = (uint64_t *)&v168[v188];
  v192 = *v190;
  v191 = v190[1];
  *(_QWORD *)v189 = v192;
  *((_QWORD *)v189 + 1) = v191;
  swift_bridgeObjectRelease();
  *(_OWORD *)&v167[v169[7]] = *(_OWORD *)&v168[v169[7]];
  v193 = v169[8];
  v194 = &v167[v193];
  v195 = (uint64_t *)&v168[v193];
  v197 = *v195;
  v196 = v195[1];
  *(_QWORD *)v194 = v197;
  *((_QWORD *)v194 + 1) = v196;
  swift_bridgeObjectRelease();
LABEL_88:
  *(_QWORD *)&a1[a3[28]] = *(_QWORD *)&a2[a3[28]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[29]] = *(_QWORD *)&a2[a3[29]];
  swift_bridgeObjectRelease();
  v198 = a3[30];
  v199 = &a1[v198];
  v200 = &a2[v198];
  v201 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v943 = *((_QWORD *)v201 - 1);
  v202 = *(unsigned int (**)(char *, uint64_t, int *))(v943 + 48);
  v203 = v202(v199, 1, v201);
  v204 = v202(v200, 1, v201);
  v957 = v201;
  v929 = v202;
  if (v203)
  {
    if (!v204)
    {
      if (__dst(v200, 1, v9))
      {
        v205 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v205 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v199, v200, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v199, 0, 1, v9);
      }
      v209 = v201[5];
      v210 = &v199[v209];
      v211 = &v200[v209];
      if (__dst(&v200[v209], 1, v9))
      {
        v212 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v210, v211, *(_QWORD *)(*(_QWORD *)(v212 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v210, v211, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v210, 0, 1, v9);
      }
      *(_OWORD *)&v199[v201[6]] = *(_OWORD *)&v200[v201[6]];
      v199[v201[7]] = v200[v201[7]];
      *(_QWORD *)&v199[v201[8]] = *(_QWORD *)&v200[v201[8]];
      v213 = v201[9];
      v214 = &v199[v213];
      v215 = &v200[v213];
      *(_OWORD *)v214 = *(_OWORD *)v215;
      *((_QWORD *)v214 + 2) = *((_QWORD *)v215 + 2);
      (*(void (**)(char *, _QWORD, uint64_t))(v943 + 56))(v199, 0, 1);
      goto LABEL_115;
    }
LABEL_94:
    v206 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v206 - 8) + 64));
    goto LABEL_115;
  }
  if (v204)
  {
    sub_1AD066230((uint64_t)v199, type metadata accessor for LinkPresentation.Video);
    goto LABEL_94;
  }
  v207 = __dst(v199, 1, v9);
  v208 = __dst(v200, 1, v9);
  if (!v207)
  {
    if (!v208)
    {
      (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v199, v200, v9);
      goto LABEL_106;
    }
    (*(void (**)(char *, uint64_t))(v996 + 8))(v199, v9);
    goto LABEL_105;
  }
  if (v208)
  {
LABEL_105:
    v216 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v216 - 8) + 64));
    goto LABEL_106;
  }
  (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v199, v200, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v199, 0, 1, v9);
LABEL_106:
  v217 = v201[5];
  v218 = &v199[v217];
  v219 = &v200[v217];
  v220 = __dst(&v199[v217], 1, v9);
  v221 = v9;
  v222 = v220;
  v223 = v221;
  v224 = ((uint64_t (*)(char *, uint64_t))__dst)(v219, 1);
  if (v222)
  {
    if (v224)
    {
      v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
      v9 = v223;
    }
    else
    {
      v9 = v223;
      (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v218, v219, v223);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v218, 0, 1, v223);
    }
  }
  else
  {
    v9 = v223;
    if (v224)
    {
      (*(void (**)(char *, uint64_t))(v996 + 8))(v218, v223);
      v226 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v226 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v218, v219, v223);
    }
  }
  v227 = v201[6];
  v228 = &v199[v227];
  v229 = &v200[v227];
  v231 = *(_QWORD *)v229;
  v230 = *((_QWORD *)v229 + 1);
  *(_QWORD *)v228 = v231;
  *((_QWORD *)v228 + 1) = v230;
  swift_bridgeObjectRelease();
  v199[v201[7]] = v200[v201[7]];
  *(_QWORD *)&v199[v201[8]] = *(_QWORD *)&v200[v201[8]];
  swift_release();
  v232 = v201[9];
  v233 = &v199[v232];
  v234 = &v200[v232];
  *v233 = *v234;
  v236 = *((_QWORD *)v234 + 1);
  v235 = *((_QWORD *)v234 + 2);
  *((_QWORD *)v233 + 1) = v236;
  *((_QWORD *)v233 + 2) = v235;
  swift_bridgeObjectRelease();
LABEL_115:
  v237 = a3[31];
  v238 = &a1[v237];
  v239 = &a2[v237];
  v240 = (int *)type metadata accessor for LinkPresentation.VideoMetadata(0);
  v241 = *((_QWORD *)v240 - 1);
  v242 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v241 + 48);
  v243 = v242(v238, 1, v240);
  v244 = v242(v239, 1, v240);
  if (v243)
  {
    if (!v244)
    {
      *(_DWORD *)v238 = *(_DWORD *)v239;
      v245 = v240[5];
      v246 = &v238[v245];
      v247 = v9;
      v248 = &v239[v245];
      if (__dst(&v239[v245], 1, v247))
      {
        v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v246, v248, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v246, v248, v247);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v246, 0, 1, v247);
      }
      v9 = v247;
      *(_OWORD *)&v238[v240[6]] = *(_OWORD *)&v239[v240[6]];
      *(_OWORD *)&v238[v240[7]] = *(_OWORD *)&v239[v240[7]];
      *(_OWORD *)&v238[v240[8]] = *(_OWORD *)&v239[v240[8]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v241 + 56))(v238, 0, 1, v240);
      goto LABEL_132;
    }
LABEL_121:
    v250 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
    memcpy(v238, v239, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
    goto LABEL_132;
  }
  if (v244)
  {
    sub_1AD066230((uint64_t)v238, type metadata accessor for LinkPresentation.VideoMetadata);
    goto LABEL_121;
  }
  *(_DWORD *)v238 = *(_DWORD *)v239;
  v251 = v240[5];
  v252 = &v238[v251];
  v253 = v9;
  v254 = &v239[v251];
  v255 = __dst(&v238[v251], 1, v253);
  v256 = __dst(v254, 1, v253);
  if (v255)
  {
    if (v256)
    {
      v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v252, v254, *(_QWORD *)(*(_QWORD *)(v257 - 8) + 64));
      v9 = v253;
    }
    else
    {
      v260 = v254;
      v9 = v253;
      (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v252, v260, v253);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v252, 0, 1, v253);
    }
  }
  else if (v256)
  {
    (*(void (**)(char *, uint64_t))(v996 + 8))(v252, v253);
    v258 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    v259 = v254;
    v9 = v253;
    memcpy(v252, v259, *(_QWORD *)(*(_QWORD *)(v258 - 8) + 64));
  }
  else
  {
    v261 = v254;
    v9 = v253;
    (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v252, v261, v253);
  }
  v262 = v240[6];
  v263 = &v238[v262];
  v264 = (uint64_t *)&v239[v262];
  v266 = *v264;
  v265 = v264[1];
  *(_QWORD *)v263 = v266;
  *((_QWORD *)v263 + 1) = v265;
  swift_bridgeObjectRelease();
  *(_OWORD *)&v238[v240[7]] = *(_OWORD *)&v239[v240[7]];
  v267 = v240[8];
  v268 = &v238[v267];
  v269 = (uint64_t *)&v239[v267];
  v271 = *v269;
  v270 = v269[1];
  *(_QWORD *)v268 = v271;
  *((_QWORD *)v268 + 1) = v270;
  swift_bridgeObjectRelease();
LABEL_132:
  v272 = a3[32];
  v273 = &a1[v272];
  v274 = &a2[v272];
  v275 = type metadata accessor for LinkPresentation.Audio(0);
  v276 = *(_QWORD *)(v275 - 8);
  v277 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v276 + 48);
  v278 = v277(v273, 1, v275);
  v279 = v277(v274, 1, v275);
  if (!v278)
  {
    if (v279)
    {
      sub_1AD066230((uint64_t)v273, type metadata accessor for LinkPresentation.Audio);
      goto LABEL_138;
    }
    v282 = __dst(v273, 1, v9);
    v283 = __dst(v274, 1, v9);
    if (v282)
    {
      if (!v283)
      {
        (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v273, v274, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v273, 0, 1, v9);
LABEL_147:
        v285 = *(int *)(v275 + 20);
        v286 = &v273[v285];
        v287 = &v274[v285];
        v289 = *(_QWORD *)v287;
        v288 = *((_QWORD *)v287 + 1);
        *(_QWORD *)v286 = v289;
        *((_QWORD *)v286 + 1) = v288;
        swift_bridgeObjectRelease();
        goto LABEL_148;
      }
    }
    else
    {
      if (!v283)
      {
        (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v273, v274, v9);
        goto LABEL_147;
      }
      (*(void (**)(char *, uint64_t))(v996 + 8))(v273, v9);
    }
    v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
    goto LABEL_147;
  }
  if (v279)
  {
LABEL_138:
    v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
    memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v281 - 8) + 64));
    goto LABEL_148;
  }
  if (__dst(v274, 1, v9))
  {
    v280 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v273, v274, *(_QWORD *)(*(_QWORD *)(v280 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v273, v274, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v273, 0, 1, v9);
  }
  *(_OWORD *)&v273[*(int *)(v275 + 20)] = *(_OWORD *)&v274[*(int *)(v275 + 20)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v276 + 56))(v273, 0, 1, v275);
LABEL_148:
  v290 = a3[33];
  v291 = &a1[v290];
  v292 = &a2[v290];
  v293 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
  v294 = *((_QWORD *)v293 - 1);
  v295 = *(uint64_t (**)(_DWORD *, uint64_t, int *))(v294 + 48);
  v296 = v295(v291, 1, v293);
  v297 = v295(v292, 1, v293);
  if (v296)
  {
    if (!v297)
    {
      *(_DWORD *)v291 = *(_DWORD *)v292;
      v298 = v293[5];
      v299 = &v291[v298];
      v300 = v9;
      v301 = &v292[v298];
      if (__dst(&v292[v298], 1, v300))
      {
        v302 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v299, v301, *(_QWORD *)(*(_QWORD *)(v302 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v299, v301, v300);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v299, 0, 1, v300);
      }
      v9 = v300;
      *(_OWORD *)&v291[v293[6]] = *(_OWORD *)&v292[v293[6]];
      *(_OWORD *)&v291[v293[7]] = *(_OWORD *)&v292[v293[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v294 + 56))(v291, 0, 1, v293);
      goto LABEL_166;
    }
LABEL_154:
    v303 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
    memcpy(v291, v292, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
    goto LABEL_166;
  }
  if (v297)
  {
    sub_1AD066230((uint64_t)v291, type metadata accessor for LinkPresentation.AudioMetadata);
    goto LABEL_154;
  }
  *(_DWORD *)v291 = *(_DWORD *)v292;
  v304 = v293[5];
  v305 = &v291[v304];
  v306 = v9;
  v307 = &v292[v304];
  v308 = __dst(&v291[v304], 1, v306);
  v309 = __dst(v307, 1, v306);
  if (v308)
  {
    if (v309)
    {
      v310 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v305, v307, *(_QWORD *)(*(_QWORD *)(v310 - 8) + 64));
      v9 = v306;
    }
    else
    {
      v313 = v307;
      v9 = v306;
      (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v305, v313, v306);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v305, 0, 1, v306);
    }
  }
  else if (v309)
  {
    (*(void (**)(char *, uint64_t))(v996 + 8))(v305, v306);
    v311 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    v312 = v307;
    v9 = v306;
    memcpy(v305, v312, *(_QWORD *)(*(_QWORD *)(v311 - 8) + 64));
  }
  else
  {
    v314 = v307;
    v9 = v306;
    (*(void (**)(char *, char *, uint64_t))(v996 + 40))(v305, v314, v306);
  }
  v315 = v293[6];
  v316 = &v291[v315];
  v317 = (uint64_t *)&v292[v315];
  v319 = *v317;
  v318 = v317[1];
  *(_QWORD *)v316 = v319;
  *((_QWORD *)v316 + 1) = v318;
  swift_bridgeObjectRelease();
  v320 = v293[7];
  v321 = &v291[v320];
  v322 = (uint64_t *)&v292[v320];
  v324 = *v322;
  v323 = v322[1];
  *(_QWORD *)v321 = v324;
  *((_QWORD *)v321 + 1) = v323;
  swift_bridgeObjectRelease();
LABEL_166:
  *(_QWORD *)&a1[a3[34]] = *(_QWORD *)&a2[a3[34]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[35]] = *(_QWORD *)&a2[a3[35]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[36]] = *(_QWORD *)&a2[a3[36]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[37]] = *(_QWORD *)&a2[a3[37]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[38]] = *(_QWORD *)&a2[a3[38]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[39]] = *(_QWORD *)&a2[a3[39]];
  swift_bridgeObjectRelease();
  *(_QWORD *)&a1[a3[40]] = *(_QWORD *)&a2[a3[40]];
  swift_bridgeObjectRelease();
  v325 = a3[41];
  v326 = (uint64_t)&a1[v325];
  v327 = &a2[v325];
  v328 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
  v329 = *(_QWORD *)(v328 - 8);
  v330 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v329 + 48);
  v331 = v330(v326, 1, v328);
  v332 = v330((uint64_t)v327, 1, v328);
  if (v331)
  {
    if (!v332)
    {
      v928 = v329;
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          v978 = v9;
          v333 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v333;
          v334 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v334;
          v335 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v335;
          v336 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v336;
          v337 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v337;
          *(_OWORD *)(v326 + 201) = *(_OWORD *)(v327 + 201);
          v338 = *((_OWORD *)v327 + 12);
          v339 = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 176) = *((_OWORD *)v327 + 11);
          *(_OWORD *)(v326 + 192) = v338;
          *(_OWORD *)(v326 + 160) = v339;
          v958 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
          v340 = v958[11];
          v341 = (_DWORD *)(v326 + v340);
          v342 = &v327[v340];
          v343 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v344 = *(_QWORD *)(v343 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v344 + 48))(v342, 1, v343))
          {
            v345 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v341, v342, *(_QWORD *)(*(_QWORD *)(v345 - 8) + 64));
            v346 = v958;
          }
          else
          {
            v930 = v344;
            v944 = v341;
            *v341 = *(_DWORD *)v342;
            v516 = *(int *)(v343 + 20);
            v517 = (char *)v341 + v516;
            v518 = &v342[v516];
            if (__dst(&v342[v516], 1, v978))
            {
              v519 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v517, v518, *(_QWORD *)(*(_QWORD *)(v519 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v517, v518, v978);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v517, 0, 1, v978);
            }
            v346 = v958;
            *(_QWORD *)((char *)v944 + *(int *)(v343 + 24)) = *(_QWORD *)&v342[*(int *)(v343 + 24)];
            (*(void (**)(void))(v930 + 56))();
          }
          v739 = v346[12];
          v740 = (void *)(v326 + v739);
          v741 = &v327[v739];
          if (__dst(&v327[v739], 1, v978))
          {
            v742 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v740, v741, *(_QWORD *)(*(_QWORD *)(v742 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v996 + 32))(v740, v741, v978);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v740, 0, 1, v978);
          }
          *(_QWORD *)(v326 + v346[13]) = *(_QWORD *)&v327[v346[13]];
          v743 = v346[14];
          v744 = (_OWORD *)(v326 + v743);
          v745 = &v327[v743];
          v746 = *((_OWORD *)v745 + 1);
          *v744 = *(_OWORD *)v745;
          v744[1] = v746;
          v744[2] = *((_OWORD *)v745 + 2);
          *(_OWORD *)((char *)v744 + 41) = *(_OWORD *)(v745 + 41);
          goto LABEL_395;
        case 1u:
          v980 = v9;
          v362 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v362;
          v363 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v363;
          v364 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v364;
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
          v365 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v365;
          v366 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v366;
          v960 = (int *)type metadata accessor for LinkPresentation.AlbumMetadata(0);
          v367 = v960[9];
          v368 = (_DWORD *)(v326 + v367);
          v369 = &v327[v367];
          v370 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v371 = *(_QWORD *)(v370 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v371 + 48))(v369, 1, v370))
          {
            v372 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v368, v369, *(_QWORD *)(*(_QWORD *)(v372 - 8) + 64));
          }
          else
          {
            *v368 = *(_DWORD *)v369;
            v667 = *(int *)(v370 + 20);
            v931 = &v369[v667];
            v945 = (char *)v368 + v667;
            if (((unsigned int (*)(void))__dst)())
            {
              v668 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v945, v931, *(_QWORD *)(*(_QWORD *)(v668 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v945, v931, v980);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v945, 0, 1, v980);
            }
            *(_QWORD *)((char *)v368 + *(int *)(v370 + 24)) = *(_QWORD *)&v369[*(int *)(v370 + 24)];
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v371 + 56))(v368, 0, 1, v370);
          }
          *(_QWORD *)(v326 + v960[10]) = *(_QWORD *)&v327[v960[10]];
          goto LABEL_395;
        case 2u:
          v373 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v373;
          v374 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v374;
          v375 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v375;
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
          v376 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v376;
          v377 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v377;
          v378 = *(int *)(type metadata accessor for LinkPresentation.MusicVideoMetadata(0) + 36);
          v379 = (_DWORD *)(v326 + v378);
          v380 = &v327[v378];
          v381 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v382 = *(_QWORD *)(v381 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
            goto LABEL_263;
          *v379 = *(_DWORD *)v380;
          v669 = *(int *)(v381 + 20);
          v971 = (char *)v379 + v669;
          v670 = v9;
          v671 = &v380[v669];
          v992 = v670;
          if (((unsigned int (*)(char *, uint64_t))__dst)(&v380[v669], 1))
            goto LABEL_296;
          goto LABEL_379;
        case 3u:
          v383 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v383;
          v384 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v384;
          v385 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v385;
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
          v386 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v386;
          v387 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v387;
          v388 = *(int *)(type metadata accessor for LinkPresentation.ArtistMetadata(0) + 36);
          v379 = (_DWORD *)(v326 + v388);
          v380 = &v327[v388];
          v381 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v382 = *(_QWORD *)(v381 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
            goto LABEL_263;
          *v379 = *(_DWORD *)v380;
          v672 = *(int *)(v381 + 20);
          v971 = (char *)v379 + v672;
          v673 = v9;
          v671 = &v380[v672];
          v992 = v673;
          if (((unsigned int (*)(char *, uint64_t))__dst)(&v380[v672], 1))
            goto LABEL_296;
          goto LABEL_379;
        case 4u:
          v389 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v389;
          v390 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v390;
          v391 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
          v392 = v391[8];
          v393 = (void *)(v326 + v392);
          v394 = v9;
          v395 = &v327[v392];
          if (__dst(&v327[v392], 1, v394))
          {
            v396 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v393, v395, *(_QWORD *)(*(_QWORD *)(v396 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v996 + 32))(v393, v395, v394);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v393, 0, 1, v394);
          }
          v674 = v394;
          *(_OWORD *)(v326 + v391[9]) = *(_OWORD *)&v327[v391[9]];
          v675 = v391[10];
          v676 = (_OWORD *)(v326 + v675);
          v677 = &v327[v675];
          v678 = *((_OWORD *)v677 + 3);
          v676[2] = *((_OWORD *)v677 + 2);
          v676[3] = v678;
          v679 = *((_OWORD *)v677 + 1);
          *v676 = *(_OWORD *)v677;
          v676[1] = v679;
          *(_OWORD *)((char *)v676 + 105) = *(_OWORD *)(v677 + 105);
          v680 = *((_OWORD *)v677 + 6);
          v681 = *((_OWORD *)v677 + 4);
          v676[5] = *((_OWORD *)v677 + 5);
          v676[6] = v680;
          v676[4] = v681;
          v682 = v391[11];
          v379 = (_DWORD *)(v326 + v682);
          v380 = &v327[v682];
          v381 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v382 = *(_QWORD *)(v381 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
            goto LABEL_263;
          *v379 = *(_DWORD *)v380;
          v725 = *(int *)(v381 + 20);
          v971 = (char *)v379 + v725;
          v726 = v674;
          v671 = &v380[v725];
          v992 = v726;
          if (((unsigned int (*)(char *, uint64_t))__dst)(&v380[v725], 1))
            goto LABEL_296;
          goto LABEL_379;
        case 5u:
          v397 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v397;
          v398 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v398;
          v399 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v399;
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
          v400 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v400;
          v401 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v401;
          v402 = *(int *)(type metadata accessor for LinkPresentation.RadioMetadata(0) + 36);
          v379 = (_DWORD *)(v326 + v402);
          v380 = &v327[v402];
          v381 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v382 = *(_QWORD *)(v381 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
            goto LABEL_263;
          *v379 = *(_DWORD *)v380;
          v684 = *(int *)(v381 + 20);
          v971 = (char *)v379 + v684;
          v685 = v9;
          v671 = &v380[v684];
          v992 = v685;
          if (((unsigned int (*)(char *, uint64_t))__dst)(&v380[v684], 1))
            goto LABEL_296;
          goto LABEL_379;
        case 6u:
          v403 = v9;
          v404 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v404;
          v405 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v405;
          v406 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v406;
          v407 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v407;
          v408 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v408;
          *(_OWORD *)(v326 + 201) = *(_OWORD *)(v327 + 201);
          v409 = *((_OWORD *)v327 + 12);
          v410 = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 176) = *((_OWORD *)v327 + 11);
          *(_OWORD *)(v326 + 192) = v409;
          *(_OWORD *)(v326 + 160) = v410;
          *(_QWORD *)(v326 + 224) = *((_QWORD *)v327 + 28);
          v411 = (int *)type metadata accessor for LinkPresentation.SoftwareMetadata(0);
          v412 = v411[12];
          v413 = (char *)(v326 + v412);
          v414 = &v327[v412];
          if (v929(&v327[v412], 1, v957))
          {
            v415 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
            memcpy(v413, v414, *(_QWORD *)(*(_QWORD *)(v415 - 8) + 64));
          }
          else
          {
            if (__dst(v414, 1, v403))
            {
              v686 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v413, v414, *(_QWORD *)(*(_QWORD *)(v686 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v413, v414, v403);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v413, 0, 1, v403);
            }
            v803 = v957[5];
            v973 = &v414[v803];
            v994 = &v413[v803];
            if (((unsigned int (*)(void))__dst)())
            {
              v804 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v994, v973, *(_QWORD *)(*(_QWORD *)(v804 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v994, v973, v403);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v994, 0, 1, v403);
            }
            *(_OWORD *)&v413[v957[6]] = *(_OWORD *)&v414[v957[6]];
            v413[v957[7]] = v414[v957[7]];
            *(_QWORD *)&v413[v957[8]] = *(_QWORD *)&v414[v957[8]];
            v822 = v957[9];
            v823 = &v413[v822];
            v824 = &v414[v822];
            *(_OWORD *)v823 = *(_OWORD *)v824;
            *((_QWORD *)v823 + 2) = *((_QWORD *)v824 + 2);
            (*(void (**)(char *, _QWORD, uint64_t))(v943 + 56))(v413, 0, 1);
          }
          *(_BYTE *)(v326 + v411[13]) = v327[v411[13]];
          v825 = v411[14];
          v826 = (_OWORD *)(v326 + v825);
          v827 = &v327[v825];
          v828 = *((_OWORD *)v827 + 5);
          v826[4] = *((_OWORD *)v827 + 4);
          v826[5] = v828;
          v826[6] = *((_OWORD *)v827 + 6);
          *(_OWORD *)((char *)v826 + 105) = *(_OWORD *)(v827 + 105);
          v829 = *((_OWORD *)v827 + 1);
          *v826 = *(_OWORD *)v827;
          v826[1] = v829;
          v830 = *((_OWORD *)v827 + 3);
          v826[2] = *((_OWORD *)v827 + 2);
          v826[3] = v830;
          goto LABEL_395;
        case 7u:
          v981 = v9;
          v416 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v416;
          v417 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v417;
          v418 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v418;
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
          v419 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v419;
          v420 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v420;
          v961 = (int *)type metadata accessor for LinkPresentation.BookMetadata(0);
          v421 = v961[9];
          v422 = (_DWORD *)(v326 + v421);
          v423 = &v327[v421];
          v424 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v425 = *(_QWORD *)(v424 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v425 + 48))(v423, 1, v424))
          {
            v426 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v422, v423, *(_QWORD *)(*(_QWORD *)(v426 - 8) + 64));
          }
          else
          {
            *v422 = *(_DWORD *)v423;
            v687 = *(int *)(v424 + 20);
            v932 = &v423[v687];
            v946 = (char *)v422 + v687;
            if (((unsigned int (*)(void))__dst)())
            {
              v688 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v946, v932, *(_QWORD *)(*(_QWORD *)(v688 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v946, v932, v981);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v946, 0, 1, v981);
            }
            *(_QWORD *)((char *)v422 + *(int *)(v424 + 24)) = *(_QWORD *)&v423[*(int *)(v424 + 24)];
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v425 + 56))(v422, 0, 1, v424);
          }
          *(_BYTE *)(v326 + v961[10]) = v327[v961[10]];
          goto LABEL_395;
        case 8u:
          v982 = v9;
          v427 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v427;
          v428 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v428;
          v429 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v429;
          v430 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v430;
          *(_OWORD *)(v326 + 185) = *(_OWORD *)(v327 + 185);
          v431 = *((_OWORD *)v327 + 11);
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 176) = v431;
          v432 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v432;
          v962 = (int *)type metadata accessor for LinkPresentation.AudioBookMetadata(0);
          v433 = v962[10];
          v434 = (_DWORD *)(v326 + v433);
          v435 = &v327[v433];
          v436 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v437 = *(_QWORD *)(v436 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v437 + 48))(v435, 1, v436))
          {
            v438 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v434, v435, *(_QWORD *)(*(_QWORD *)(v438 - 8) + 64));
          }
          else
          {
            *v434 = *(_DWORD *)v435;
            v689 = *(int *)(v436 + 20);
            v933 = &v435[v689];
            v947 = (char *)v434 + v689;
            if (((unsigned int (*)(void))__dst)())
            {
              v690 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v947, v933, *(_QWORD *)(*(_QWORD *)(v690 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v947, v933, v982);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v947, 0, 1, v982);
            }
            *(_QWORD *)((char *)v434 + *(int *)(v436 + 24)) = *(_QWORD *)&v435[*(int *)(v436 + 24)];
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v437 + 56))(v434, 0, 1, v436);
          }
          v805 = v962[11];
          v806 = (void *)(v326 + v805);
          v807 = &v327[v805];
          v329 = v928;
          if (__dst(v807, 1, v982))
          {
            v808 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v806, v807, *(_QWORD *)(*(_QWORD *)(v808 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v996 + 32))(v806, v807, v982);
            v329 = v928;
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v806, 0, 1, v982);
          }
          goto LABEL_305;
        case 9u:
          v983 = v9;
          v439 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v439;
          v440 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v440;
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          v963 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
          v441 = v963[9];
          v442 = (void *)(v326 + v441);
          v443 = &v327[v441];
          v444 = sub_1AD63B03C();
          v445 = *(_QWORD *)(v444 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v445 + 48))(v443, 1, v444))
          {
            v446 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v442, v443, *(_QWORD *)(*(_QWORD *)(v446 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v445 + 32))(v442, v443, v444);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v445 + 56))(v442, 0, 1, v444);
          }
          v691 = v963[10];
          v692 = (_OWORD *)(v326 + v691);
          v693 = &v327[v691];
          v694 = *((_OWORD *)v693 + 5);
          v692[4] = *((_OWORD *)v693 + 4);
          v692[5] = v694;
          v692[6] = *((_OWORD *)v693 + 6);
          *(_OWORD *)((char *)v692 + 105) = *(_OWORD *)(v693 + 105);
          v695 = *((_OWORD *)v693 + 1);
          *v692 = *(_OWORD *)v693;
          v692[1] = v695;
          v696 = *((_OWORD *)v693 + 3);
          v692[2] = *((_OWORD *)v693 + 2);
          v692[3] = v696;
          v697 = v963[11];
          v698 = (_DWORD *)(v326 + v697);
          v699 = &v327[v697];
          v700 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v701 = *(_QWORD *)(v700 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v701 + 48))(v699, 1, v700))
          {
            v702 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v698, v699, *(_QWORD *)(*(_QWORD *)(v702 - 8) + 64));
          }
          else
          {
            *v698 = *(_DWORD *)v699;
            v728 = *(int *)(v700 + 20);
            v936 = &v699[v728];
            v950 = (char *)v698 + v728;
            if (((unsigned int (*)(void))__dst)())
            {
              v729 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v950, v936, *(_QWORD *)(*(_QWORD *)(v729 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v950, v936, v983);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v950, 0, 1, v983);
            }
            *(_QWORD *)((char *)v698 + *(int *)(v700 + 24)) = *(_QWORD *)&v699[*(int *)(v700 + 24)];
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v701 + 56))(v698, 0, 1, v700);
          }
          *(_QWORD *)(v326 + v963[12]) = *(_QWORD *)&v327[v963[12]];
          goto LABEL_395;
        case 0xAu:
          v984 = v9;
          v447 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v447;
          v448 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v448;
          v449 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v449;
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
          v450 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v450;
          v451 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v451;
          v964 = (int *)type metadata accessor for LinkPresentation.PodcastMetadata(0);
          v452 = v964[9];
          v453 = (_DWORD *)(v326 + v452);
          v454 = &v327[v452];
          v455 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v456 = *(_QWORD *)(v455 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v456 + 48))(v454, 1, v455))
          {
            v457 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v453, v454, *(_QWORD *)(*(_QWORD *)(v457 - 8) + 64));
          }
          else
          {
            *v453 = *(_DWORD *)v454;
            v703 = *(int *)(v455 + 20);
            v934 = &v454[v703];
            v948 = (char *)v453 + v703;
            if (((unsigned int (*)(void))__dst)())
            {
              v704 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v948, v934, *(_QWORD *)(*(_QWORD *)(v704 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v948, v934, v984);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v948, 0, 1, v984);
            }
            *(_QWORD *)((char *)v453 + *(int *)(v455 + 24)) = *(_QWORD *)&v454[*(int *)(v455 + 24)];
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v456 + 56))(v453, 0, 1, v455);
          }
          *(_QWORD *)(v326 + v964[10]) = *(_QWORD *)&v327[v964[10]];
          goto LABEL_395;
        case 0xBu:
          v458 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v458;
          v459 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v459;
          v460 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v460;
          v461 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v461;
          *(_OWORD *)(v326 + 185) = *(_OWORD *)(v327 + 185);
          v462 = *((_OWORD *)v327 + 11);
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 176) = v462;
          v463 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v463;
          v464 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
          v379 = (_DWORD *)(v326 + v464);
          v380 = &v327[v464];
          v381 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v382 = *(_QWORD *)(v381 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
            goto LABEL_263;
          *v379 = *(_DWORD *)v380;
          v705 = *(int *)(v381 + 20);
          v971 = (char *)v379 + v705;
          v706 = v9;
          v671 = &v380[v705];
          v992 = v706;
          if (((unsigned int (*)(char *, uint64_t))__dst)(&v380[v705], 1))
            goto LABEL_296;
          goto LABEL_379;
        case 0xCu:
          v465 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v465;
          v466 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v466;
          v467 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v467;
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
          v468 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v468;
          v469 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v469;
          v470 = *(int *)(type metadata accessor for LinkPresentation.TVSeasonMetadata(0) + 36);
          v379 = (_DWORD *)(v326 + v470);
          v380 = &v327[v470];
          v381 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v382 = *(_QWORD *)(v381 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
            goto LABEL_263;
          *v379 = *(_DWORD *)v380;
          v707 = *(int *)(v381 + 20);
          v971 = (char *)v379 + v707;
          v708 = v9;
          v671 = &v380[v707];
          v992 = v708;
          if (((unsigned int (*)(char *, uint64_t))__dst)(&v380[v707], 1))
            goto LABEL_296;
          goto LABEL_379;
        case 0xDu:
          v471 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v471;
          v472 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v472;
          *(_OWORD *)(v326 + 153) = *(_OWORD *)(v327 + 153);
          v473 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v473;
          v474 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v474;
          v475 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v475;
          v476 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
          v379 = (_DWORD *)(v326 + v476);
          v380 = &v327[v476];
          v381 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v382 = *(_QWORD *)(v381 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
            goto LABEL_263;
          *v379 = *(_DWORD *)v380;
          v709 = *(int *)(v381 + 20);
          v971 = (char *)v379 + v709;
          v710 = v9;
          v671 = &v380[v709];
          v992 = v710;
          if (((unsigned int (*)(char *, uint64_t))__dst)(&v380[v709], 1))
            goto LABEL_296;
          goto LABEL_379;
        case 0xEu:
          v985 = v9;
          v477 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v477;
          v478 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v478;
          v479 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v479;
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
          v480 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v480;
          v481 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v481;
          v965 = (int *)type metadata accessor for LinkPresentation.MovieMetadata(0);
          v482 = v965[9];
          v483 = (_DWORD *)(v326 + v482);
          v484 = &v327[v482];
          v485 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v486 = *(_QWORD *)(v485 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v486 + 48))(v484, 1, v485))
          {
            v487 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v483, v484, *(_QWORD *)(*(_QWORD *)(v487 - 8) + 64));
          }
          else
          {
            *v483 = *(_DWORD *)v484;
            v711 = *(int *)(v485 + 20);
            v935 = &v484[v711];
            v949 = (char *)v483 + v711;
            if (((unsigned int (*)(void))__dst)())
            {
              v712 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v949, v935, *(_QWORD *)(*(_QWORD *)(v712 - 8) + 64));
            }
            else
            {
              (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v949, v935, v985);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v949, 0, 1, v985);
            }
            *(_QWORD *)((char *)v483 + *(int *)(v485 + 24)) = *(_QWORD *)&v484[*(int *)(v485 + 24)];
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v486 + 56))(v483, 0, 1, v485);
          }
          v809 = v965[10];
          v810 = (_OWORD *)(v326 + v809);
          v811 = &v327[v809];
          v812 = *((_OWORD *)v811 + 5);
          v810[4] = *((_OWORD *)v811 + 4);
          v810[5] = v812;
          v810[6] = *((_OWORD *)v811 + 6);
          *(_OWORD *)((char *)v810 + 105) = *(_OWORD *)(v811 + 105);
          v813 = *((_OWORD *)v811 + 1);
          *v810 = *(_OWORD *)v811;
          v810[1] = v813;
          v814 = *((_OWORD *)v811 + 3);
          v810[2] = *((_OWORD *)v811 + 2);
          v810[3] = v814;
          *(_OWORD *)(v326 + v965[11]) = *(_OWORD *)&v327[v965[11]];
          goto LABEL_395;
        case 0xFu:
          v488 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v488;
          v489 = *((_OWORD *)v327 + 3);
          *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
          *(_OWORD *)(v326 + 48) = v489;
          v490 = *((_OWORD *)v327 + 9);
          *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
          *(_OWORD *)(v326 + 144) = v490;
          *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
          *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
          v491 = *((_OWORD *)v327 + 5);
          *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
          *(_OWORD *)(v326 + 80) = v491;
          v492 = *((_OWORD *)v327 + 7);
          *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
          *(_OWORD *)(v326 + 112) = v492;
          v493 = *(int *)(type metadata accessor for LinkPresentation.MovieBundleMetadata(0) + 36);
          v379 = (_DWORD *)(v326 + v493);
          v380 = &v327[v493];
          v381 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
          v382 = *(_QWORD *)(v381 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v382 + 48))(v380, 1, v381))
          {
LABEL_263:
            v683 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
            memcpy(v379, v380, *(_QWORD *)(*(_QWORD *)(v683 - 8) + 64));
          }
          else
          {
            *v379 = *(_DWORD *)v380;
            v713 = *(int *)(v381 + 20);
            v971 = (char *)v379 + v713;
            v714 = v9;
            v671 = &v380[v713];
            v992 = v714;
            if (((unsigned int (*)(char *, uint64_t))__dst)(&v380[v713], 1))
            {
LABEL_296:
              v727 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
              memcpy(v971, v671, *(_QWORD *)(*(_QWORD *)(v727 - 8) + 64));
            }
            else
            {
LABEL_379:
              (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v971, v671, v992);
              (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v971, 0, 1, v992);
            }
            *(_QWORD *)((char *)v379 + *(int *)(v381 + 24)) = *(_QWORD *)&v380[*(int *)(v381 + 24)];
            (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v382 + 56))(v379, 0, 1, v381);
          }
LABEL_395:
          swift_storeEnumTagMultiPayload();
          v329 = v928;
LABEL_396:
          (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v329 + 56))(v326, 0, 1, v328);
          break;
        case 0x16u:
          v494 = v329;
          v495 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v495;
          *(_QWORD *)(v326 + 32) = *((_QWORD *)v327 + 4);
          *(_OWORD *)(v326 + 104) = *(_OWORD *)(v327 + 104);
          *(_OWORD *)(v326 + 120) = *(_OWORD *)(v327 + 120);
          *(_OWORD *)(v326 + 136) = *(_OWORD *)(v327 + 136);
          *(_OWORD *)(v326 + 145) = *(_OWORD *)(v327 + 145);
          *(_OWORD *)(v326 + 40) = *(_OWORD *)(v327 + 40);
          *(_OWORD *)(v326 + 56) = *(_OWORD *)(v327 + 56);
          *(_OWORD *)(v326 + 72) = *(_OWORD *)(v327 + 72);
          *(_OWORD *)(v326 + 88) = *(_OWORD *)(v327 + 88);
          *(_OWORD *)(v326 + 273) = *(_OWORD *)(v327 + 273);
          *(_OWORD *)(v326 + 264) = *(_OWORD *)(v327 + 264);
          *(_OWORD *)(v326 + 248) = *(_OWORD *)(v327 + 248);
          *(_OWORD *)(v326 + 232) = *(_OWORD *)(v327 + 232);
          *(_OWORD *)(v326 + 216) = *(_OWORD *)(v327 + 216);
          *(_OWORD *)(v326 + 200) = *(_OWORD *)(v327 + 200);
          *(_OWORD *)(v326 + 184) = *(_OWORD *)(v327 + 184);
          *(_OWORD *)(v326 + 168) = *(_OWORD *)(v327 + 168);
          v496 = *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
          v497 = (void *)(v326 + v496);
          v498 = &v327[v496];
          v499 = sub_1AD63B03C();
          v500 = *(_QWORD *)(v499 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v500 + 48))(v498, 1, v499))
          {
            v501 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v497, v498, *(_QWORD *)(*(_QWORD *)(v501 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v500 + 32))(v497, v498, v499);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v500 + 56))(v497, 0, 1, v499);
          }
          swift_storeEnumTagMultiPayload();
          v329 = v494;
          goto LABEL_396;
        case 0x1Au:
          v502 = *((_OWORD *)v327 + 1);
          *(_OWORD *)v326 = *(_OWORD *)v327;
          *(_OWORD *)(v326 + 16) = v502;
          *(_QWORD *)(v326 + 32) = *((_QWORD *)v327 + 4);
          *(_OWORD *)(v326 + 104) = *(_OWORD *)(v327 + 104);
          *(_OWORD *)(v326 + 120) = *(_OWORD *)(v327 + 120);
          *(_OWORD *)(v326 + 136) = *(_OWORD *)(v327 + 136);
          *(_OWORD *)(v326 + 145) = *(_OWORD *)(v327 + 145);
          *(_OWORD *)(v326 + 40) = *(_OWORD *)(v327 + 40);
          *(_OWORD *)(v326 + 56) = *(_OWORD *)(v327 + 56);
          *(_OWORD *)(v326 + 72) = *(_OWORD *)(v327 + 72);
          *(_OWORD *)(v326 + 88) = *(_OWORD *)(v327 + 88);
          v997 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
          v503 = v997[9];
          v504 = (void *)(v326 + v503);
          v505 = &v327[v503];
          v506 = sub_1AD63B03C();
          v507 = *(_QWORD *)(v506 - 8);
          __dsta = *(unsigned int (**)(char *, uint64_t, uint64_t))(v507 + 48);
          if (__dsta(v505, 1, v506))
          {
            v508 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v504, v505, *(_QWORD *)(*(_QWORD *)(v508 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v507 + 32))(v504, v505, v506);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v507 + 56))(v504, 0, 1, v506);
          }
          v715 = v997[10];
          v716 = (void *)(v326 + v715);
          v717 = &v327[v715];
          if (__dsta(&v327[v715], 1, v506))
          {
            v718 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v716, v717, *(_QWORD *)(*(_QWORD *)(v718 - 8) + 64));
            v719 = v507;
          }
          else
          {
            v730 = v717;
            v719 = v507;
            (*(void (**)(void *, char *, uint64_t))(v507 + 32))(v716, v730, v506);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v507 + 56))(v716, 0, 1, v506);
          }
          v731 = v997[11];
          v732 = (void *)(v326 + v731);
          v733 = &v327[v731];
          v329 = v928;
          if (__dsta(v733, 1, v506))
          {
            v734 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v732, v733, *(_QWORD *)(*(_QWORD *)(v734 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v719 + 32))(v732, v733, v506);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v719 + 56))(v732, 0, 1, v506);
          }
LABEL_305:
          swift_storeEnumTagMultiPayload();
          goto LABEL_396;
        case 0x1Eu:
          *(_OWORD *)v326 = *(_OWORD *)v327;
          v509 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
          v510 = *(int *)(v509 + 20);
          v998 = v509;
          __dstb = (void *)(v326 + v510);
          v511 = &v327[v510];
          v512 = sub_1AD63B03C();
          v513 = *(_QWORD *)(v512 - 8);
          v514 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v513 + 48);
          if (v514(v511, 1, v512))
          {
            v515 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(__dstb, v511, *(_QWORD *)(*(_QWORD *)(v515 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v513 + 32))(__dstb, v511, v512);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v513 + 56))(__dstb, 0, 1, v512);
          }
          v720 = v513;
          v721 = *(int *)(v998 + 24);
          v722 = (void *)(v326 + v721);
          v723 = &v327[v721];
          if (v514(v723, 1, v512))
          {
            v724 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
            memcpy(v722, v723, *(_QWORD *)(*(_QWORD *)(v724 - 8) + 64));
          }
          else
          {
            (*(void (**)(void *, char *, uint64_t))(v720 + 32))(v722, v723, v512);
            (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v720 + 56))(v722, 0, 1, v512);
          }
          v329 = v928;
          swift_storeEnumTagMultiPayload();
          goto LABEL_396;
        default:
          memcpy((void *)v326, v327, *(_QWORD *)(v329 + 64));
          goto LABEL_396;
      }
      goto LABEL_397;
    }
    goto LABEL_173;
  }
  if (v332)
  {
    sub_1AD066230(v326, type metadata accessor for LinkPresentation.SpecializationMetadata);
LABEL_173:
    v347 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0) - 8) + 64);
LABEL_174:
    memcpy((void *)v326, v327, v347);
    goto LABEL_397;
  }
  if (a1 != a2)
  {
    sub_1AD066230(v326, type metadata accessor for LinkPresentation.SpecializationMetadata);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v979 = v9;
        v348 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v348;
        v349 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v349;
        v350 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v350;
        v351 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v351;
        v352 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v352;
        *(_OWORD *)(v326 + 201) = *(_OWORD *)(v327 + 201);
        v353 = *((_OWORD *)v327 + 12);
        v354 = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 176) = *((_OWORD *)v327 + 11);
        *(_OWORD *)(v326 + 192) = v353;
        *(_OWORD *)(v326 + 160) = v354;
        v959 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
        v355 = v959[11];
        v356 = (_DWORD *)(v326 + v355);
        v357 = &v327[v355];
        v358 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v359 = *(_QWORD *)(v358 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v359 + 48))(v357, 1, v358))
        {
          v360 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v356, v357, *(_QWORD *)(*(_QWORD *)(v360 - 8) + 64));
          v361 = v959;
        }
        else
        {
          v937 = v359;
          v951 = v356;
          *v356 = *(_DWORD *)v357;
          v735 = *(int *)(v358 + 20);
          v736 = (char *)v356 + v735;
          v737 = &v357[v735];
          if (__dst(&v357[v735], 1, v979))
          {
            v738 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v736, v737, *(_QWORD *)(*(_QWORD *)(v738 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v736, v737, v979);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v736, 0, 1, v979);
          }
          v361 = v959;
          *(_QWORD *)((char *)v951 + *(int *)(v358 + 24)) = *(_QWORD *)&v357[*(int *)(v358 + 24)];
          (*(void (**)(void))(v937 + 56))();
        }
        v899 = v361[12];
        v900 = (void *)(v326 + v899);
        v901 = &v327[v899];
        if (__dst(&v327[v899], 1, v979))
        {
          v902 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v900, v901, *(_QWORD *)(*(_QWORD *)(v902 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v996 + 32))(v900, v901, v979);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v900, 0, 1, v979);
        }
        *(_QWORD *)(v326 + v361[13]) = *(_QWORD *)&v327[v361[13]];
        v903 = v361[14];
        v904 = (_OWORD *)(v326 + v903);
        v905 = &v327[v903];
        v906 = *((_OWORD *)v905 + 1);
        *v904 = *(_OWORD *)v905;
        v904[1] = v906;
        v904[2] = *((_OWORD *)v905 + 2);
        *(_OWORD *)((char *)v904 + 41) = *(_OWORD *)(v905 + 41);
        swift_storeEnumTagMultiPayload();
        goto LABEL_397;
      case 1u:
        v986 = v9;
        v520 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v520;
        v521 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v521;
        v522 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v522;
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
        v523 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v523;
        v524 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v524;
        v966 = (int *)type metadata accessor for LinkPresentation.AlbumMetadata(0);
        v525 = v966[9];
        v526 = (_DWORD *)(v326 + v525);
        v527 = &v327[v525];
        v528 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v529 = *(_QWORD *)(v528 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v529 + 48))(v527, 1, v528))
          goto LABEL_219;
        *v526 = *(_DWORD *)v527;
        v747 = *(int *)(v528 + 20);
        v938 = &v527[v747];
        v952 = (char *)v526 + v747;
        if (((unsigned int (*)(void))__dst)())
          goto LABEL_315;
        goto LABEL_436;
      case 2u:
        v531 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v531;
        v532 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v532;
        v533 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v533;
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
        v534 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v534;
        v535 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v535;
        v536 = *(int *)(type metadata accessor for LinkPresentation.MusicVideoMetadata(0) + 36);
        v537 = (_DWORD *)(v326 + v536);
        v538 = &v327[v536];
        v539 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v540 = *(_QWORD *)(v539 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v540 + 48))(v538, 1, v539))
          goto LABEL_322;
        *v537 = *(_DWORD *)v538;
        v749 = *(int *)(v539 + 20);
        v972 = (char *)v537 + v749;
        v750 = v9;
        v751 = &v538[v749];
        v993 = v750;
        if (((unsigned int (*)(char *, uint64_t))__dst)(&v538[v749], 1))
          goto LABEL_341;
        goto LABEL_460;
      case 3u:
        v541 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v541;
        v542 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v542;
        v543 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v543;
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
        v544 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v544;
        v545 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v545;
        v546 = *(int *)(type metadata accessor for LinkPresentation.ArtistMetadata(0) + 36);
        v537 = (_DWORD *)(v326 + v546);
        v538 = &v327[v546];
        v539 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v540 = *(_QWORD *)(v539 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v540 + 48))(v538, 1, v539))
          goto LABEL_322;
        *v537 = *(_DWORD *)v538;
        v752 = *(int *)(v539 + 20);
        v972 = (char *)v537 + v752;
        v753 = v9;
        v751 = &v538[v752];
        v993 = v753;
        if (((unsigned int (*)(char *, uint64_t))__dst)(&v538[v752], 1))
          goto LABEL_341;
        goto LABEL_460;
      case 4u:
        v547 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v547;
        v548 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v548;
        v549 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
        v550 = v549[8];
        v551 = (void *)(v326 + v550);
        v552 = v9;
        v553 = &v327[v550];
        if (__dst(&v327[v550], 1, v552))
        {
          v554 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v551, v553, *(_QWORD *)(*(_QWORD *)(v554 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v996 + 32))(v551, v553, v552);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v551, 0, 1, v552);
        }
        v754 = v552;
        *(_OWORD *)(v326 + v549[9]) = *(_OWORD *)&v327[v549[9]];
        v755 = v549[10];
        v756 = (_OWORD *)(v326 + v755);
        v757 = &v327[v755];
        v758 = *((_OWORD *)v757 + 3);
        v756[2] = *((_OWORD *)v757 + 2);
        v756[3] = v758;
        v759 = *((_OWORD *)v757 + 1);
        *v756 = *(_OWORD *)v757;
        v756[1] = v759;
        *(_OWORD *)((char *)v756 + 105) = *(_OWORD *)(v757 + 105);
        v760 = *((_OWORD *)v757 + 6);
        v761 = *((_OWORD *)v757 + 4);
        v756[5] = *((_OWORD *)v757 + 5);
        v756[6] = v760;
        v756[4] = v761;
        v762 = v549[11];
        v537 = (_DWORD *)(v326 + v762);
        v538 = &v327[v762];
        v539 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v540 = *(_QWORD *)(v539 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v540 + 48))(v538, 1, v539))
          goto LABEL_322;
        *v537 = *(_DWORD *)v538;
        v815 = *(int *)(v539 + 20);
        v972 = (char *)v537 + v815;
        v816 = v754;
        v751 = &v538[v815];
        v993 = v816;
        if (((unsigned int (*)(char *, uint64_t))__dst)(&v538[v815], 1))
          goto LABEL_341;
        goto LABEL_460;
      case 5u:
        v555 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v555;
        v556 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v556;
        v557 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v557;
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
        v558 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v558;
        v559 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v559;
        v560 = *(int *)(type metadata accessor for LinkPresentation.RadioMetadata(0) + 36);
        v537 = (_DWORD *)(v326 + v560);
        v538 = &v327[v560];
        v539 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v540 = *(_QWORD *)(v539 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v540 + 48))(v538, 1, v539))
          goto LABEL_322;
        *v537 = *(_DWORD *)v538;
        v764 = *(int *)(v539 + 20);
        v972 = (char *)v537 + v764;
        v765 = v9;
        v751 = &v538[v764];
        v993 = v765;
        if (((unsigned int (*)(char *, uint64_t))__dst)(&v538[v764], 1))
          goto LABEL_341;
        goto LABEL_460;
      case 6u:
        v561 = v9;
        v562 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v562;
        v563 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v563;
        v564 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v564;
        v565 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v565;
        v566 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v566;
        *(_OWORD *)(v326 + 201) = *(_OWORD *)(v327 + 201);
        v567 = *((_OWORD *)v327 + 12);
        v568 = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 176) = *((_OWORD *)v327 + 11);
        *(_OWORD *)(v326 + 192) = v567;
        *(_OWORD *)(v326 + 160) = v568;
        *(_QWORD *)(v326 + 224) = *((_QWORD *)v327 + 28);
        v569 = (int *)type metadata accessor for LinkPresentation.SoftwareMetadata(0);
        v570 = v569[12];
        v571 = (char *)(v326 + v570);
        v572 = &v327[v570];
        if (v929(&v327[v570], 1, v957))
        {
          v573 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
          memcpy(v571, v572, *(_QWORD *)(*(_QWORD *)(v573 - 8) + 64));
        }
        else
        {
          if (__dst(v572, 1, v561))
          {
            v766 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v571, v572, *(_QWORD *)(*(_QWORD *)(v766 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v571, v572, v561);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v571, 0, 1, v561);
          }
          v907 = v957[5];
          v974 = &v572[v907];
          v995 = &v571[v907];
          if (((unsigned int (*)(void))__dst)())
          {
            v908 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v995, v974, *(_QWORD *)(*(_QWORD *)(v908 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v995, v974, v561);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v995, 0, 1, v561);
          }
          *(_OWORD *)&v571[v957[6]] = *(_OWORD *)&v572[v957[6]];
          v571[v957[7]] = v572[v957[7]];
          *(_QWORD *)&v571[v957[8]] = *(_QWORD *)&v572[v957[8]];
          v919 = v957[9];
          v920 = &v571[v919];
          v921 = &v572[v919];
          *(_OWORD *)v920 = *(_OWORD *)v921;
          *((_QWORD *)v920 + 2) = *((_QWORD *)v921 + 2);
          (*(void (**)(char *, _QWORD, uint64_t))(v943 + 56))(v571, 0, 1);
        }
        *(_BYTE *)(v326 + v569[13]) = v327[v569[13]];
        v922 = v569[14];
        v923 = (_OWORD *)(v326 + v922);
        v924 = &v327[v922];
        v925 = *((_OWORD *)v924 + 5);
        v923[4] = *((_OWORD *)v924 + 4);
        v923[5] = v925;
        v923[6] = *((_OWORD *)v924 + 6);
        *(_OWORD *)((char *)v923 + 105) = *(_OWORD *)(v924 + 105);
        v926 = *((_OWORD *)v924 + 1);
        *v923 = *(_OWORD *)v924;
        v923[1] = v926;
        v927 = *((_OWORD *)v924 + 3);
        v923[2] = *((_OWORD *)v924 + 2);
        v923[3] = v927;
        swift_storeEnumTagMultiPayload();
        goto LABEL_397;
      case 7u:
        v987 = v9;
        v574 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v574;
        v575 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v575;
        v576 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v576;
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
        v577 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v577;
        v578 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v578;
        v967 = (int *)type metadata accessor for LinkPresentation.BookMetadata(0);
        v579 = v967[9];
        v580 = (_DWORD *)(v326 + v579);
        v581 = &v327[v579];
        v582 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v583 = *(_QWORD *)(v582 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v583 + 48))(v581, 1, v582))
        {
          v584 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v580, v581, *(_QWORD *)(*(_QWORD *)(v584 - 8) + 64));
        }
        else
        {
          *v580 = *(_DWORD *)v581;
          v767 = *(int *)(v582 + 20);
          v939 = &v581[v767];
          v953 = (char *)v580 + v767;
          if (((unsigned int (*)(void))__dst)())
          {
            v768 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v953, v939, *(_QWORD *)(*(_QWORD *)(v768 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v953, v939, v987);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v953, 0, 1, v987);
          }
          *(_QWORD *)((char *)v580 + *(int *)(v582 + 24)) = *(_QWORD *)&v581[*(int *)(v582 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v583 + 56))(v580, 0, 1, v582);
        }
        *(_BYTE *)(v326 + v967[10]) = v327[v967[10]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_397;
      case 8u:
        v988 = v9;
        v585 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v585;
        v586 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v586;
        v587 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v587;
        v588 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v588;
        *(_OWORD *)(v326 + 185) = *(_OWORD *)(v327 + 185);
        v589 = *((_OWORD *)v327 + 11);
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 176) = v589;
        v590 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v590;
        v968 = (int *)type metadata accessor for LinkPresentation.AudioBookMetadata(0);
        v591 = v968[10];
        v592 = (_DWORD *)(v326 + v591);
        v593 = &v327[v591];
        v594 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v595 = *(_QWORD *)(v594 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v595 + 48))(v593, 1, v594))
        {
          v596 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v592, v593, *(_QWORD *)(*(_QWORD *)(v596 - 8) + 64));
        }
        else
        {
          *v592 = *(_DWORD *)v593;
          v769 = *(int *)(v594 + 20);
          v940 = &v593[v769];
          v954 = (char *)v592 + v769;
          if (((unsigned int (*)(void))__dst)())
          {
            v770 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v954, v940, *(_QWORD *)(*(_QWORD *)(v770 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v954, v940, v988);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v954, 0, 1, v988);
          }
          *(_QWORD *)((char *)v592 + *(int *)(v594 + 24)) = *(_QWORD *)&v593[*(int *)(v594 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v595 + 56))(v592, 0, 1, v594);
        }
        v909 = v968[11];
        v910 = (void *)(v326 + v909);
        v911 = &v327[v909];
        if (__dst(v911, 1, v988))
        {
          v912 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v910, v911, *(_QWORD *)(*(_QWORD *)(v912 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v996 + 32))(v910, v911, v988);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v910, 0, 1, v988);
        }
        break;
      case 9u:
        v989 = v9;
        v597 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v597;
        v598 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v598;
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        v969 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
        v599 = v969[9];
        v600 = (void *)(v326 + v599);
        v601 = &v327[v599];
        v602 = sub_1AD63B03C();
        v603 = *(_QWORD *)(v602 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v603 + 48))(v601, 1, v602))
        {
          v604 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v600, v601, *(_QWORD *)(*(_QWORD *)(v604 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v603 + 32))(v600, v601, v602);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v603 + 56))(v600, 0, 1, v602);
        }
        v771 = v969[10];
        v772 = (_OWORD *)(v326 + v771);
        v773 = &v327[v771];
        v774 = *((_OWORD *)v773 + 5);
        v772[4] = *((_OWORD *)v773 + 4);
        v772[5] = v774;
        v772[6] = *((_OWORD *)v773 + 6);
        *(_OWORD *)((char *)v772 + 105) = *(_OWORD *)(v773 + 105);
        v775 = *((_OWORD *)v773 + 1);
        *v772 = *(_OWORD *)v773;
        v772[1] = v775;
        v776 = *((_OWORD *)v773 + 3);
        v772[2] = *((_OWORD *)v773 + 2);
        v772[3] = v776;
        v777 = v969[11];
        v778 = (_DWORD *)(v326 + v777);
        v779 = &v327[v777];
        v780 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v781 = *(_QWORD *)(v780 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v781 + 48))(v779, 1, v780))
        {
          v782 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v778, v779, *(_QWORD *)(*(_QWORD *)(v782 - 8) + 64));
        }
        else
        {
          *v778 = *(_DWORD *)v779;
          v817 = *(int *)(v780 + 20);
          v942 = &v779[v817];
          v956 = (char *)v778 + v817;
          if (((unsigned int (*)(void))__dst)())
          {
            v818 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v956, v942, *(_QWORD *)(*(_QWORD *)(v818 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v956, v942, v989);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v956, 0, 1, v989);
          }
          *(_QWORD *)((char *)v778 + *(int *)(v780 + 24)) = *(_QWORD *)&v779[*(int *)(v780 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v781 + 56))(v778, 0, 1, v780);
        }
        *(_QWORD *)(v326 + v969[12]) = *(_QWORD *)&v327[v969[12]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_397;
      case 0xAu:
        v986 = v9;
        v605 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v605;
        v606 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v606;
        v607 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v607;
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
        v608 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v608;
        v609 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v609;
        v966 = (int *)type metadata accessor for LinkPresentation.PodcastMetadata(0);
        v610 = v966[9];
        v526 = (_DWORD *)(v326 + v610);
        v527 = &v327[v610];
        v528 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v529 = *(_QWORD *)(v528 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v529 + 48))(v527, 1, v528))
        {
LABEL_219:
          v530 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v526, v527, *(_QWORD *)(*(_QWORD *)(v530 - 8) + 64));
        }
        else
        {
          *v526 = *(_DWORD *)v527;
          v783 = *(int *)(v528 + 20);
          v938 = &v527[v783];
          v952 = (char *)v526 + v783;
          if (((unsigned int (*)(void))__dst)())
          {
LABEL_315:
            v748 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v952, v938, *(_QWORD *)(*(_QWORD *)(v748 - 8) + 64));
          }
          else
          {
LABEL_436:
            (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v952, v938, v986);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v952, 0, 1, v986);
          }
          *(_QWORD *)((char *)v526 + *(int *)(v528 + 24)) = *(_QWORD *)&v527[*(int *)(v528 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v529 + 56))(v526, 0, 1, v528);
        }
        *(_QWORD *)(v326 + v966[10]) = *(_QWORD *)&v327[v966[10]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_397;
      case 0xBu:
        v611 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v611;
        v612 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v612;
        v613 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v613;
        v614 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v614;
        *(_OWORD *)(v326 + 185) = *(_OWORD *)(v327 + 185);
        v615 = *((_OWORD *)v327 + 11);
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 176) = v615;
        v616 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v616;
        v617 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
        v537 = (_DWORD *)(v326 + v617);
        v538 = &v327[v617];
        v539 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v540 = *(_QWORD *)(v539 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v540 + 48))(v538, 1, v539))
          goto LABEL_322;
        *v537 = *(_DWORD *)v538;
        v784 = *(int *)(v539 + 20);
        v972 = (char *)v537 + v784;
        v785 = v9;
        v751 = &v538[v784];
        v993 = v785;
        if (((unsigned int (*)(char *, uint64_t))__dst)(&v538[v784], 1))
          goto LABEL_341;
        goto LABEL_460;
      case 0xCu:
        v618 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v618;
        v619 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v619;
        v620 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v620;
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
        v621 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v621;
        v622 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v622;
        v623 = *(int *)(type metadata accessor for LinkPresentation.TVSeasonMetadata(0) + 36);
        v537 = (_DWORD *)(v326 + v623);
        v538 = &v327[v623];
        v539 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v540 = *(_QWORD *)(v539 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v540 + 48))(v538, 1, v539))
          goto LABEL_322;
        *v537 = *(_DWORD *)v538;
        v786 = *(int *)(v539 + 20);
        v972 = (char *)v537 + v786;
        v787 = v9;
        v751 = &v538[v786];
        v993 = v787;
        if (((unsigned int (*)(char *, uint64_t))__dst)(&v538[v786], 1))
          goto LABEL_341;
        goto LABEL_460;
      case 0xDu:
        v624 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v624;
        v625 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v625;
        *(_OWORD *)(v326 + 153) = *(_OWORD *)(v327 + 153);
        v626 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v626;
        v627 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v627;
        v628 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v628;
        v629 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
        v537 = (_DWORD *)(v326 + v629);
        v538 = &v327[v629];
        v539 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v540 = *(_QWORD *)(v539 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v540 + 48))(v538, 1, v539))
          goto LABEL_322;
        *v537 = *(_DWORD *)v538;
        v788 = *(int *)(v539 + 20);
        v972 = (char *)v537 + v788;
        v789 = v9;
        v751 = &v538[v788];
        v993 = v789;
        if (((unsigned int (*)(char *, uint64_t))__dst)(&v538[v788], 1))
          goto LABEL_341;
        goto LABEL_460;
      case 0xEu:
        v990 = v9;
        v630 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v630;
        v631 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v631;
        v632 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v632;
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
        v633 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v633;
        v634 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v634;
        v970 = (int *)type metadata accessor for LinkPresentation.MovieMetadata(0);
        v635 = v970[9];
        v636 = (_DWORD *)(v326 + v635);
        v637 = &v327[v635];
        v638 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v639 = *(_QWORD *)(v638 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v639 + 48))(v637, 1, v638))
        {
          v640 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v636, v637, *(_QWORD *)(*(_QWORD *)(v640 - 8) + 64));
        }
        else
        {
          *v636 = *(_DWORD *)v637;
          v791 = *(int *)(v638 + 20);
          v941 = &v637[v791];
          v955 = (char *)v636 + v791;
          if (((unsigned int (*)(void))__dst)())
          {
            v792 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v955, v941, *(_QWORD *)(*(_QWORD *)(v792 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v955, v941, v990);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v955, 0, 1, v990);
          }
          *(_QWORD *)((char *)v636 + *(int *)(v638 + 24)) = *(_QWORD *)&v637[*(int *)(v638 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v639 + 56))(v636, 0, 1, v638);
        }
        v913 = v970[10];
        v914 = (_OWORD *)(v326 + v913);
        v915 = &v327[v913];
        v916 = *((_OWORD *)v915 + 5);
        v914[4] = *((_OWORD *)v915 + 4);
        v914[5] = v916;
        v914[6] = *((_OWORD *)v915 + 6);
        *(_OWORD *)((char *)v914 + 105) = *(_OWORD *)(v915 + 105);
        v917 = *((_OWORD *)v915 + 1);
        *v914 = *(_OWORD *)v915;
        v914[1] = v917;
        v918 = *((_OWORD *)v915 + 3);
        v914[2] = *((_OWORD *)v915 + 2);
        v914[3] = v918;
        *(_OWORD *)(v326 + v970[11]) = *(_OWORD *)&v327[v970[11]];
        swift_storeEnumTagMultiPayload();
        goto LABEL_397;
      case 0xFu:
        v641 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v641;
        v642 = *((_OWORD *)v327 + 3);
        *(_OWORD *)(v326 + 32) = *((_OWORD *)v327 + 2);
        *(_OWORD *)(v326 + 48) = v642;
        v643 = *((_OWORD *)v327 + 9);
        *(_OWORD *)(v326 + 128) = *((_OWORD *)v327 + 8);
        *(_OWORD *)(v326 + 144) = v643;
        *(_OWORD *)(v326 + 160) = *((_OWORD *)v327 + 10);
        *(_OWORD *)(v326 + 169) = *(_OWORD *)(v327 + 169);
        v644 = *((_OWORD *)v327 + 5);
        *(_OWORD *)(v326 + 64) = *((_OWORD *)v327 + 4);
        *(_OWORD *)(v326 + 80) = v644;
        v645 = *((_OWORD *)v327 + 7);
        *(_OWORD *)(v326 + 96) = *((_OWORD *)v327 + 6);
        *(_OWORD *)(v326 + 112) = v645;
        v646 = *(int *)(type metadata accessor for LinkPresentation.MovieBundleMetadata(0) + 36);
        v537 = (_DWORD *)(v326 + v646);
        v538 = &v327[v646];
        v539 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v540 = *(_QWORD *)(v539 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v540 + 48))(v538, 1, v539))
        {
LABEL_322:
          v763 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v537, v538, *(_QWORD *)(*(_QWORD *)(v763 - 8) + 64));
        }
        else
        {
          *v537 = *(_DWORD *)v538;
          v793 = *(int *)(v539 + 20);
          v972 = (char *)v537 + v793;
          v794 = v9;
          v751 = &v538[v793];
          v993 = v794;
          if (((unsigned int (*)(char *, uint64_t))__dst)(&v538[v793], 1))
          {
LABEL_341:
            v790 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v972, v751, *(_QWORD *)(*(_QWORD *)(v790 - 8) + 64));
          }
          else
          {
LABEL_460:
            (*(void (**)(char *, char *, uint64_t))(v996 + 32))(v972, v751, v993);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v996 + 56))(v972, 0, 1, v993);
          }
          *(_QWORD *)((char *)v537 + *(int *)(v539 + 24)) = *(_QWORD *)&v538[*(int *)(v539 + 24)];
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v540 + 56))(v537, 0, 1, v539);
        }
        break;
      case 0x16u:
        v647 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v647;
        *(_QWORD *)(v326 + 32) = *((_QWORD *)v327 + 4);
        *(_OWORD *)(v326 + 104) = *(_OWORD *)(v327 + 104);
        *(_OWORD *)(v326 + 120) = *(_OWORD *)(v327 + 120);
        *(_OWORD *)(v326 + 136) = *(_OWORD *)(v327 + 136);
        *(_OWORD *)(v326 + 145) = *(_OWORD *)(v327 + 145);
        *(_OWORD *)(v326 + 40) = *(_OWORD *)(v327 + 40);
        *(_OWORD *)(v326 + 56) = *(_OWORD *)(v327 + 56);
        *(_OWORD *)(v326 + 72) = *(_OWORD *)(v327 + 72);
        *(_OWORD *)(v326 + 88) = *(_OWORD *)(v327 + 88);
        *(_OWORD *)(v326 + 273) = *(_OWORD *)(v327 + 273);
        *(_OWORD *)(v326 + 264) = *(_OWORD *)(v327 + 264);
        *(_OWORD *)(v326 + 248) = *(_OWORD *)(v327 + 248);
        *(_OWORD *)(v326 + 232) = *(_OWORD *)(v327 + 232);
        *(_OWORD *)(v326 + 216) = *(_OWORD *)(v327 + 216);
        *(_OWORD *)(v326 + 200) = *(_OWORD *)(v327 + 200);
        *(_OWORD *)(v326 + 184) = *(_OWORD *)(v327 + 184);
        *(_OWORD *)(v326 + 168) = *(_OWORD *)(v327 + 168);
        v648 = *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
        v649 = (void *)(v326 + v648);
        v650 = &v327[v648];
        v651 = sub_1AD63B03C();
        v652 = *(_QWORD *)(v651 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v652 + 48))(v650, 1, v651))
        {
          v653 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v649, v650, *(_QWORD *)(*(_QWORD *)(v653 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v652 + 32))(v649, v650, v651);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v652 + 56))(v649, 0, 1, v651);
        }
        break;
      case 0x1Au:
        v654 = *((_OWORD *)v327 + 1);
        *(_OWORD *)v326 = *(_OWORD *)v327;
        *(_OWORD *)(v326 + 16) = v654;
        *(_QWORD *)(v326 + 32) = *((_QWORD *)v327 + 4);
        *(_OWORD *)(v326 + 104) = *(_OWORD *)(v327 + 104);
        *(_OWORD *)(v326 + 120) = *(_OWORD *)(v327 + 120);
        *(_OWORD *)(v326 + 136) = *(_OWORD *)(v327 + 136);
        *(_OWORD *)(v326 + 145) = *(_OWORD *)(v327 + 145);
        *(_OWORD *)(v326 + 40) = *(_OWORD *)(v327 + 40);
        *(_OWORD *)(v326 + 56) = *(_OWORD *)(v327 + 56);
        *(_OWORD *)(v326 + 72) = *(_OWORD *)(v327 + 72);
        *(_OWORD *)(v326 + 88) = *(_OWORD *)(v327 + 88);
        v991 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
        v655 = v991[9];
        v656 = (void *)(v326 + v655);
        v657 = &v327[v655];
        v658 = sub_1AD63B03C();
        v659 = *(_QWORD *)(v658 - 8);
        __dstc = *(unsigned int (**)(char *, uint64_t, uint64_t))(v659 + 48);
        if (__dstc(v657, 1, v658))
        {
          v660 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v656, v657, *(_QWORD *)(*(_QWORD *)(v660 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v659 + 32))(v656, v657, v658);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v659 + 56))(v656, 0, 1, v658);
        }
        v795 = v991[10];
        v796 = (void *)(v326 + v795);
        v797 = &v327[v795];
        if (__dstc(&v327[v795], 1, v658))
        {
          v798 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v796, v797, *(_QWORD *)(*(_QWORD *)(v798 - 8) + 64));
          v799 = v659;
        }
        else
        {
          v819 = v797;
          v799 = v659;
          (*(void (**)(void *, char *, uint64_t))(v659 + 32))(v796, v819, v658);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v659 + 56))(v796, 0, 1, v658);
        }
        v820 = v991[11];
        v801 = (void *)(v326 + v820);
        v802 = &v327[v820];
        if (__dstc(v802, 1, v658))
          goto LABEL_390;
        goto LABEL_429;
      case 0x1Eu:
        *(_OWORD *)v326 = *(_OWORD *)v327;
        v661 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
        v662 = *(int *)(v661 + 20);
        v999 = v661;
        __dstd = (void *)(v326 + v662);
        v663 = &v327[v662];
        v658 = sub_1AD63B03C();
        v664 = *(_QWORD *)(v658 - 8);
        v665 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v664 + 48);
        if (v665(v663, 1, v658))
        {
          v666 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(__dstd, v663, *(_QWORD *)(*(_QWORD *)(v666 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v664 + 32))(__dstd, v663, v658);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v664 + 56))(__dstd, 0, 1, v658);
        }
        v799 = v664;
        v800 = *(int *)(v999 + 24);
        v801 = (void *)(v326 + v800);
        v802 = &v327[v800];
        if (v665(v802, 1, v658))
        {
LABEL_390:
          v821 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v801, v802, *(_QWORD *)(*(_QWORD *)(v821 - 8) + 64));
        }
        else
        {
LABEL_429:
          (*(void (**)(void *, char *, uint64_t))(v799 + 32))(v801, v802, v658);
          (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v799 + 56))(v801, 0, 1, v658);
        }
        break;
      default:
        v347 = *(_QWORD *)(v329 + 64);
        goto LABEL_174;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_397:
  v831 = a3[42];
  v832 = (uint64_t)&a1[v831];
  v833 = &a2[v831];
  if (*(_QWORD *)&a1[v831 + 8] == 1)
  {
LABEL_400:
    v835 = *((_OWORD *)v833 + 9);
    *(_OWORD *)(v832 + 128) = *((_OWORD *)v833 + 8);
    *(_OWORD *)(v832 + 144) = v835;
    *(_OWORD *)(v832 + 160) = *((_OWORD *)v833 + 10);
    *(_QWORD *)(v832 + 176) = *((_QWORD *)v833 + 22);
    v836 = *((_OWORD *)v833 + 5);
    *(_OWORD *)(v832 + 64) = *((_OWORD *)v833 + 4);
    *(_OWORD *)(v832 + 80) = v836;
    v837 = *((_OWORD *)v833 + 7);
    *(_OWORD *)(v832 + 96) = *((_OWORD *)v833 + 6);
    *(_OWORD *)(v832 + 112) = v837;
    v838 = *((_OWORD *)v833 + 1);
    *(_OWORD *)v832 = *(_OWORD *)v833;
    *(_OWORD *)(v832 + 16) = v838;
    v839 = *((_OWORD *)v833 + 3);
    *(_OWORD *)(v832 + 32) = *((_OWORD *)v833 + 2);
    *(_OWORD *)(v832 + 48) = v839;
    goto LABEL_407;
  }
  v834 = *((_QWORD *)v833 + 1);
  if (v834 == 1)
  {
    sub_1AD06626C(v832);
    goto LABEL_400;
  }
  *(_QWORD *)v832 = *(_QWORD *)v833;
  *(_QWORD *)(v832 + 8) = v834;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v832 + 32) != 1)
  {
    v840 = *((_QWORD *)v833 + 4);
    if (v840 != 1)
    {
      *(_OWORD *)(v832 + 16) = *((_OWORD *)v833 + 1);
      *(_QWORD *)(v832 + 32) = v840;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v832 + 40) = *(_OWORD *)(v833 + 40);
      *(_QWORD *)(v832 + 56) = *((_QWORD *)v833 + 7);
      swift_bridgeObjectRelease();
      v844 = *((_OWORD *)v833 + 5);
      *(_OWORD *)(v832 + 64) = *((_OWORD *)v833 + 4);
      *(_OWORD *)(v832 + 80) = v844;
      *(_BYTE *)(v832 + 96) = v833[96];
      *(_OWORD *)(v832 + 104) = *(_OWORD *)(v833 + 104);
      *(_OWORD *)(v832 + 120) = *(_OWORD *)(v833 + 120);
      *(_BYTE *)(v832 + 136) = v833[136];
      goto LABEL_406;
    }
    sub_1AD0661D0(v832 + 16);
  }
  v841 = *((_OWORD *)v833 + 6);
  *(_OWORD *)(v832 + 80) = *((_OWORD *)v833 + 5);
  *(_OWORD *)(v832 + 96) = v841;
  *(_OWORD *)(v832 + 112) = *((_OWORD *)v833 + 7);
  *(_OWORD *)(v832 + 121) = *(_OWORD *)(v833 + 121);
  v842 = *((_OWORD *)v833 + 2);
  *(_OWORD *)(v832 + 16) = *((_OWORD *)v833 + 1);
  *(_OWORD *)(v832 + 32) = v842;
  v843 = *((_OWORD *)v833 + 4);
  *(_OWORD *)(v832 + 48) = *((_OWORD *)v833 + 3);
  *(_OWORD *)(v832 + 64) = v843;
LABEL_406:
  v845 = *((_QWORD *)v833 + 19);
  *(_QWORD *)(v832 + 144) = *((_QWORD *)v833 + 18);
  *(_QWORD *)(v832 + 152) = v845;
  swift_bridgeObjectRelease();
  v846 = *((_QWORD *)v833 + 21);
  *(_QWORD *)(v832 + 160) = *((_QWORD *)v833 + 20);
  *(_QWORD *)(v832 + 168) = v846;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v832 + 176) = *((_QWORD *)v833 + 22);
LABEL_407:
  v847 = a3[43];
  v848 = &a1[v847];
  v849 = &a2[v847];
  v850 = (int *)type metadata accessor for CollaborationMetadata();
  v851 = *((_QWORD *)v850 - 1);
  v852 = *(uint64_t (**)(_QWORD *, uint64_t, int *))(v851 + 48);
  v853 = v852(v848, 1, v850);
  v854 = v852(v849, 1, v850);
  if (!v853)
  {
    if (v854)
    {
      sub_1AD066230((uint64_t)v848, (uint64_t (*)(_QWORD))type metadata accessor for CollaborationMetadata);
      goto LABEL_413;
    }
    v863 = *((_QWORD *)v849 + 1);
    *(_QWORD *)v848 = *(_QWORD *)v849;
    *((_QWORD *)v848 + 1) = v863;
    swift_bridgeObjectRelease();
    v864 = *((_QWORD *)v849 + 3);
    *((_QWORD *)v848 + 2) = *((_QWORD *)v849 + 2);
    *((_QWORD *)v848 + 3) = v864;
    swift_bridgeObjectRelease();
    v865 = v850[6];
    v866 = &v848[v865];
    v867 = &v849[v865];
    v868 = sub_1AD63B03C();
    v869 = *(_QWORD *)(v868 - 8);
    v870 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v869 + 48);
    v871 = v870(v866, 1, v868);
    v872 = v870(v867, 1, v868);
    if (v871)
    {
      if (!v872)
      {
        (*(void (**)(char *, char *, uint64_t))(v869 + 32))(v866, v867, v868);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v869 + 56))(v866, 0, 1, v868);
        goto LABEL_422;
      }
    }
    else
    {
      if (!v872)
      {
        (*(void (**)(char *, char *, uint64_t))(v869 + 40))(v866, v867, v868);
LABEL_422:
        v881 = v850[7];
        v882 = &v848[v881];
        v883 = (uint64_t *)&v849[v881];
        v885 = *v883;
        v884 = v883[1];
        *(_QWORD *)v882 = v885;
        *((_QWORD *)v882 + 1) = v884;
        swift_bridgeObjectRelease();
        *(_QWORD *)&v848[v850[8]] = *(_QWORD *)&v849[v850[8]];
        swift_bridgeObjectRelease();
        *(_QWORD *)&v848[v850[9]] = *(_QWORD *)&v849[v850[9]];
        swift_bridgeObjectRelease();
        v886 = v850[10];
        v887 = (uint64_t)&v848[v886];
        v888 = &v849[v886];
        if (*(_QWORD *)(v887 + 112))
        {
          if (*((_QWORD *)v888 + 14))
          {
            *(_BYTE *)v887 = *v888;
            *(_OWORD *)(v887 + 8) = *(_OWORD *)(v888 + 8);
            *(_QWORD *)(v887 + 24) = *((_QWORD *)v888 + 3);
            swift_bridgeObjectRelease();
            v889 = *((_QWORD *)v888 + 5);
            *(_QWORD *)(v887 + 32) = *((_QWORD *)v888 + 4);
            *(_QWORD *)(v887 + 40) = v889;
            swift_bridgeObjectRelease();
            v890 = *((_QWORD *)v888 + 7);
            *(_QWORD *)(v887 + 48) = *((_QWORD *)v888 + 6);
            *(_QWORD *)(v887 + 56) = v890;
            swift_bridgeObjectRelease();
            v891 = *((_QWORD *)v888 + 9);
            *(_QWORD *)(v887 + 64) = *((_QWORD *)v888 + 8);
            *(_QWORD *)(v887 + 72) = v891;
            swift_bridgeObjectRelease();
            v892 = *((_QWORD *)v888 + 11);
            *(_QWORD *)(v887 + 80) = *((_QWORD *)v888 + 10);
            *(_QWORD *)(v887 + 88) = v892;
            swift_bridgeObjectRelease();
            *(_BYTE *)(v887 + 96) = v888[96];
            v893 = *((_QWORD *)v888 + 14);
            *(_QWORD *)(v887 + 104) = *((_QWORD *)v888 + 13);
            *(_QWORD *)(v887 + 112) = v893;
            swift_bridgeObjectRelease();
            *(_QWORD *)(v887 + 120) = *((_QWORD *)v888 + 15);
            return a1;
          }
          sub_1AD066298(v887);
        }
        v894 = *((_OWORD *)v888 + 5);
        *(_OWORD *)(v887 + 64) = *((_OWORD *)v888 + 4);
        *(_OWORD *)(v887 + 80) = v894;
        v895 = *((_OWORD *)v888 + 7);
        *(_OWORD *)(v887 + 96) = *((_OWORD *)v888 + 6);
        *(_OWORD *)(v887 + 112) = v895;
        v896 = *((_OWORD *)v888 + 1);
        *(_OWORD *)v887 = *(_OWORD *)v888;
        *(_OWORD *)(v887 + 16) = v896;
        v897 = *((_OWORD *)v888 + 3);
        *(_OWORD *)(v887 + 32) = *((_OWORD *)v888 + 2);
        *(_OWORD *)(v887 + 48) = v897;
        return a1;
      }
      (*(void (**)(char *, uint64_t))(v869 + 8))(v866, v868);
    }
    v880 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v866, v867, *(_QWORD *)(*(_QWORD *)(v880 - 8) + 64));
    goto LABEL_422;
  }
  if (v854)
  {
LABEL_413:
    v862 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
    memcpy(v848, v849, *(_QWORD *)(*(_QWORD *)(v862 - 8) + 64));
    return a1;
  }
  v855 = *((_OWORD *)v849 + 1);
  *(_OWORD *)v848 = *(_OWORD *)v849;
  *((_OWORD *)v848 + 1) = v855;
  v856 = v850[6];
  v857 = &v848[v856];
  v858 = &v849[v856];
  v859 = sub_1AD63B03C();
  v860 = *(_QWORD *)(v859 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v860 + 48))(v858, 1, v859))
  {
    v861 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v857, v858, *(_QWORD *)(*(_QWORD *)(v861 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v860 + 32))(v857, v858, v859);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v860 + 56))(v857, 0, 1, v859);
  }
  *(_OWORD *)&v848[v850[7]] = *(_OWORD *)&v849[v850[7]];
  *(_QWORD *)&v848[v850[8]] = *(_QWORD *)&v849[v850[8]];
  *(_QWORD *)&v848[v850[9]] = *(_QWORD *)&v849[v850[9]];
  v873 = v850[10];
  v874 = &v848[v873];
  v875 = &v849[v873];
  v876 = *((_OWORD *)v875 + 5);
  *((_OWORD *)v874 + 4) = *((_OWORD *)v875 + 4);
  *((_OWORD *)v874 + 5) = v876;
  v877 = *((_OWORD *)v875 + 7);
  *((_OWORD *)v874 + 6) = *((_OWORD *)v875 + 6);
  *((_OWORD *)v874 + 7) = v877;
  v878 = *((_OWORD *)v875 + 1);
  *(_OWORD *)v874 = *(_OWORD *)v875;
  *((_OWORD *)v874 + 1) = v878;
  v879 = *((_OWORD *)v875 + 3);
  *((_OWORD *)v874 + 2) = *((_OWORD *)v875 + 2);
  *((_OWORD *)v874 + 3) = v879;
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v851 + 56))(v848, 0, 1, v850);
  return a1;
}

uint64_t sub_1AD08D950()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD08D95C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = a3[5];
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  if ((_DWORD)a2 != 2147483646)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
    v7 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v9 = a3[22];
    }
    else
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
      v7 = *(_QWORD *)(v14 - 8);
      if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
      {
        v8 = v14;
        v9 = a3[24];
      }
      else
      {
        v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
        v7 = *(_QWORD *)(v15 - 8);
        if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
        {
          v8 = v15;
          v9 = a3[27];
        }
        else
        {
          v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
          v7 = *(_QWORD *)(v16 - 8);
          if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
          {
            v8 = v16;
            v9 = a3[30];
          }
          else
          {
            v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
            v7 = *(_QWORD *)(v17 - 8);
            if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
            {
              v8 = v17;
              v9 = a3[31];
            }
            else
            {
              v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
              v7 = *(_QWORD *)(v18 - 8);
              if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
              {
                v8 = v18;
                v9 = a3[32];
              }
              else
              {
                v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
                v7 = *(_QWORD *)(v19 - 8);
                if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
                {
                  v8 = v19;
                  v9 = a3[33];
                }
                else
                {
                  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
                  v7 = *(_QWORD *)(v20 - 8);
                  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
                  {
                    v8 = v20;
                    v9 = a3[41];
                  }
                  else
                  {
                    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
                    v7 = *(_QWORD *)(v8 - 8);
                    v9 = a3[43];
                  }
                }
              }
            }
          }
        }
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + v9, a2, v8);
  }
  v10 = *(_QWORD *)(a1 + a3[7] + 8);
  if (v10 >= 0xFFFFFFFF)
    LODWORD(v10) = -1;
  v11 = v10 - 1;
  if (v11 < 0)
    v11 = -1;
  return (v11 + 1);
}

uint64_t sub_1AD08DB58()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD08DB64(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = a4[5];
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + a4[7] + 8) = a2;
      return result;
    }
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
    v9 = *(_QWORD *)(v12 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v12;
      v11 = a4[22];
    }
    else
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
      v9 = *(_QWORD *)(v13 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v13;
        v11 = a4[24];
      }
      else
      {
        v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
        v9 = *(_QWORD *)(v14 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v14;
          v11 = a4[27];
        }
        else
        {
          v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
          v9 = *(_QWORD *)(v15 - 8);
          if (*(_DWORD *)(v9 + 84) == a3)
          {
            v10 = v15;
            v11 = a4[30];
          }
          else
          {
            v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
            v9 = *(_QWORD *)(v16 - 8);
            if (*(_DWORD *)(v9 + 84) == a3)
            {
              v10 = v16;
              v11 = a4[31];
            }
            else
            {
              v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
              v9 = *(_QWORD *)(v17 - 8);
              if (*(_DWORD *)(v9 + 84) == a3)
              {
                v10 = v17;
                v11 = a4[32];
              }
              else
              {
                v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
                v9 = *(_QWORD *)(v18 - 8);
                if (*(_DWORD *)(v9 + 84) == a3)
                {
                  v10 = v18;
                  v11 = a4[33];
                }
                else
                {
                  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
                  v9 = *(_QWORD *)(v19 - 8);
                  if (*(_DWORD *)(v9 + 84) == a3)
                  {
                    v10 = v19;
                    v11 = a4[41];
                  }
                  else
                  {
                    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
                    v9 = *(_QWORD *)(v10 - 8);
                    v11 = a4[43];
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + v11, a2, a2, v10);
}

void sub_1AD08DD50()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, &qword_1ED2E1D08, (void (*)(uint64_t))type metadata accessor for LinkPresentation.IconMetadata);
    if (v1 <= 0x3F)
    {
      sub_1ACFFECF8(319, &qword_1ED2E1D10, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ARAssetMetadata);
      if (v2 <= 0x3F)
      {
        sub_1ACFFECF8(319, &qword_1ED2E1D18, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ImageMetadata);
        if (v3 <= 0x3F)
        {
          sub_1ACFFECF8(319, &qword_1ED2E1D20, (void (*)(uint64_t))type metadata accessor for LinkPresentation.Video);
          if (v4 <= 0x3F)
          {
            sub_1ACFFECF8(319, &qword_1ED2E1D28, (void (*)(uint64_t))type metadata accessor for LinkPresentation.VideoMetadata);
            if (v5 <= 0x3F)
            {
              sub_1ACFFECF8(319, &qword_1ED2E1D30, (void (*)(uint64_t))type metadata accessor for LinkPresentation.Audio);
              if (v6 <= 0x3F)
              {
                sub_1ACFFECF8(319, &qword_1ED2E1D38, (void (*)(uint64_t))type metadata accessor for LinkPresentation.AudioMetadata);
                if (v7 <= 0x3F)
                {
                  sub_1ACFFECF8(319, &qword_1ED2E1D40, (void (*)(uint64_t))type metadata accessor for LinkPresentation.SpecializationMetadata);
                  if (v8 <= 0x3F)
                  {
                    sub_1ACFFECF8(319, &qword_1ED2E2678, (void (*)(uint64_t))type metadata accessor for CollaborationMetadata);
                    if (v9 <= 0x3F)
                      swift_initStructMetadata();
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t sub_1AD08DFF0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD08E000()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *sub_1AD08E014(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1AD63AF28();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = *(int *)(a3 + 24);
    v15 = (uint64_t *)((char *)v4 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1AD08E124(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_DWORD *sub_1AD08E1A0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)((char *)a1 + v12);
  v14 = (_QWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_1AD08E284(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_DWORD *sub_1AD08E3C8(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_OWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_OWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_DWORD *sub_1AD08E4A0(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = *(int *)(a3 + 24);
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD08E5D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD08E5E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AD08E5F4()
{
  sub_1AD08ED04();
}

uint64_t sub_1AD08E618()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD08E628()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t *sub_1AD08E63C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1AD63AF28();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1AD08E744(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_DWORD *sub_1AD08E7BC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_1AD08E898(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_DWORD *sub_1AD08E9CC(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  return a1;
}

_DWORD *sub_1AD08EAA4(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 24)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD08EBD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD08EBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1AD08EC6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD08EC78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = a2;
  return result;
}

void sub_1AD08ECF8()
{
  sub_1AD08ED04();
}

void sub_1AD08ED04()
{
  unint64_t v0;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_1AD08ED90(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1AD63AF28();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (uint64_t *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    *(_OWORD *)((char *)v4 + v15) = *(_OWORD *)((char *)a2 + v15);
    v19 = a3[8];
    v20 = (uint64_t *)((char *)v4 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1AD08EEC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_DWORD *sub_1AD08EF50(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  *(_OWORD *)((char *)a1 + v13) = *(_OWORD *)((char *)a2 + v13);
  v17 = a3[8];
  v18 = (_QWORD *)((char *)a1 + v17);
  v19 = (_QWORD *)((char *)a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_1AD08F058(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  v21 = a3[8];
  v22 = (_QWORD *)((char *)a1 + v21);
  v23 = (_QWORD *)((char *)a2 + v21);
  *v22 = *v23;
  v22[1] = v23[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_DWORD *sub_1AD08F1E4(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  return a1;
}

_DWORD *sub_1AD08F2D0(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD08F428()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD08F438()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_1AD08F448()
{
  unint64_t v0;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t *sub_1AD08F4E4(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1AD63AF28();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[6];
    v15 = a3[7];
    v16 = (uint64_t *)((char *)v4 + v14);
    v17 = (uint64_t *)((char *)a2 + v14);
    v18 = v17[1];
    *v16 = *v17;
    v16[1] = v18;
    v19 = (uint64_t *)((char *)v4 + v15);
    v20 = (uint64_t *)((char *)a2 + v15);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1AD08F60C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_DWORD *sub_1AD08F698(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = (_QWORD *)((char *)a1 + v12);
  v15 = (_QWORD *)((char *)a2 + v12);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = (_QWORD *)((char *)a1 + v13);
  v18 = (_QWORD *)((char *)a2 + v13);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_DWORD *sub_1AD08F794(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[7];
  v19 = (_QWORD *)((char *)a1 + v18);
  v20 = (_QWORD *)((char *)a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_DWORD *sub_1AD08F904(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v12) = *(_OWORD *)((char *)a2 + v12);
  return a1;
}

_DWORD *sub_1AD08F9E4(_DWORD *a1, _DWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[6];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (uint64_t *)((char *)a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[7];
  v21 = (_QWORD *)((char *)a1 + v20);
  v22 = (uint64_t *)((char *)a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD08FB34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1AD08FBD8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_4Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

void sub_1AD08FC6C()
{
  unint64_t v0;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t initializeWithCopy for LinkPresentation.LyricExcerptMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LinkPresentation.LyricExcerptMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  v5 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v5;
  return a1;
}

uint64_t assignWithTake for LinkPresentation.LyricExcerptMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkPresentation.LyricExcerptMetadata(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 57))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LinkPresentation.LyricExcerptMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 57) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkPresentation.LyricExcerptMetadata()
{
  return &type metadata for LinkPresentation.LyricExcerptMetadata;
}

uint64_t sub_1AD08FF20(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1AD08FF80 + 4 * word_1AD64A6CA[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_1AD093944(_QWORD *a1)
{
  uint64_t result;
  int *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  int *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(char *, uint64_t);
  int *v66;
  char *v67;
  uint64_t v68;
  unsigned int (*v69)(char *, uint64_t, uint64_t);
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[14] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v3 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
      v4 = (char *)a1 + v3[11];
      v5 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
      {
        v6 = &v4[*(int *)(v5 + 20)];
        v7 = sub_1AD63AF28();
        v8 = *(_QWORD *)(v7 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
          (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
        swift_bridgeObjectRelease();
      }
      v9 = (char *)a1 + v3[12];
      v10 = sub_1AD63AF28();
      v11 = *(_QWORD *)(v10 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
        (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v10);
      swift_bridgeObjectRelease();
      result = *(_QWORD *)((char *)a1 + v3[14] + 8);
      if (result != 1)
        goto LABEL_141;
      return result;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[10] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v12 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
      goto LABEL_64;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[10] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v13 = type metadata accessor for LinkPresentation.MusicVideoMetadata(0);
      goto LABEL_90;
    case 3:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[10] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v13 = type metadata accessor for LinkPresentation.ArtistMetadata(0);
      goto LABEL_90;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
      v15 = (char *)a1 + v14[8];
      v16 = sub_1AD63AF28();
      v17 = *(_QWORD *)(v16 - 8);
      v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
      if (!v18(v15, 1, v16))
        (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
      swift_bridgeObjectRelease();
      if (*(_QWORD *)((char *)a1 + v14[10] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v19 = (char *)a1 + v14[11];
      v20 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 48))(v19, 1, v20);
      if ((_DWORD)result)
        return result;
      v21 = &v19[*(int *)(v20 + 20)];
      if (!v18(v21, 1, v16))
        (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
      goto LABEL_95;
    case 5:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[10] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v13 = type metadata accessor for LinkPresentation.RadioMetadata(0);
      goto LABEL_90;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[14] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v22 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
      v23 = (char *)a1 + *(int *)(v22 + 48);
      v24 = type metadata accessor for LinkPresentation.Video(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 48))(v23, 1, v24))
      {
        v25 = sub_1AD63AF28();
        v26 = *(_QWORD *)(v25 - 8);
        v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
        if (!v27(v23, 1, v25))
          (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
        v28 = &v23[*(int *)(v24 + 20)];
        if (!v27(v28, 1, v25))
          (*(void (**)(char *, uint64_t))(v26 + 8))(v28, v25);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      result = *(_QWORD *)((char *)a1 + *(int *)(v22 + 56) + 16);
      if (result != 1)
        goto LABEL_141;
      return result;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[10] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v13 = type metadata accessor for LinkPresentation.BookMetadata(0);
      goto LABEL_90;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[12] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v29 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
      v30 = (char *)a1 + *(int *)(v29 + 40);
      v31 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 48))(v30, 1, v31))
      {
        v32 = &v30[*(int *)(v31 + 20)];
        v33 = sub_1AD63AF28();
        v34 = *(_QWORD *)(v33 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
          (*(void (**)(char *, uint64_t))(v34 + 8))(v32, v33);
        swift_bridgeObjectRelease();
      }
      v35 = (char *)a1 + *(int *)(v29 + 44);
      v36 = sub_1AD63AF28();
      goto LABEL_136;
    case 9:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
      v38 = (char *)a1 + v37[9];
      v39 = sub_1AD63B03C();
      v40 = *(_QWORD *)(v39 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
      if (*(_QWORD *)((char *)a1 + v37[10] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v41 = (char *)a1 + v37[11];
      v42 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42))
      {
        v43 = &v41[*(int *)(v42 + 20)];
        v44 = sub_1AD63AF28();
        v45 = *(_QWORD *)(v44 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v45 + 48))(v43, 1, v44))
          (*(void (**)(char *, uint64_t))(v45 + 8))(v43, v44);
        swift_bridgeObjectRelease();
      }
      goto LABEL_95;
    case 10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[10] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v12 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
LABEL_64:
      v46 = (char *)a1 + *(int *)(v12 + 36);
      v47 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48))(v46, 1, v47))
      {
        v48 = &v46[*(int *)(v47 + 20)];
        v49 = sub_1AD63AF28();
        v50 = *(_QWORD *)(v49 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
          (*(void (**)(char *, uint64_t))(v50 + 8))(v48, v49);
        swift_bridgeObjectRelease();
      }
      goto LABEL_95;
    case 11:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[12] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v51 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
      goto LABEL_91;
    case 12:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[10] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v13 = type metadata accessor for LinkPresentation.TVSeasonMetadata(0);
      goto LABEL_90;
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[8] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v51 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
      goto LABEL_91;
    case 14:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[10] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v52 = type metadata accessor for LinkPresentation.MovieMetadata(0);
      v53 = (char *)a1 + *(int *)(v52 + 36);
      v54 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v53, 1, v54))
      {
        v55 = &v53[*(int *)(v54 + 20)];
        v56 = sub_1AD63AF28();
        v57 = *(_QWORD *)(v56 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v57 + 48))(v55, 1, v56))
          (*(void (**)(char *, uint64_t))(v57 + 8))(v55, v56);
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)((char *)a1 + *(int *)(v52 + 40) + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_95;
    case 15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[10] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v13 = type metadata accessor for LinkPresentation.MovieBundleMetadata(0);
LABEL_90:
      v51 = *(int *)(v13 + 36);
LABEL_91:
      v58 = (char *)a1 + v51;
      v59 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59);
      if ((_DWORD)result)
        return result;
      v60 = &v58[*(int *)(v59 + 20)];
      v61 = sub_1AD63AF28();
      v62 = *(_QWORD *)(v61 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v62 + 48))(v60, 1, v61))
        (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v61);
      goto LABEL_95;
    case 16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[8] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[24] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_95;
    case 17:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = a1[8];
      if (result != 1)
        goto LABEL_141;
      return result;
    case 18:
      swift_bridgeObjectRelease();
      if (a1[4] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      result = a1[20];
      if (result != 1)
        goto LABEL_141;
      return result;
    case 19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[5] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (a1[24] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[47] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[67] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (a1[88] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[104] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      result = a1[120];
      if (result != 1)
        goto LABEL_141;
      return result;
    case 20:
      swift_bridgeObjectRelease();
      if (a1[5] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[21] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[37] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = a1[56];
      if (result != 1)
        goto LABEL_141;
      return result;
    case 21:
      swift_bridgeObjectRelease();
      result = a1[4];
      if (result != 1)
        goto LABEL_141;
      return result;
    case 22:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (a1[7] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (a1[23] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v35 = (char *)a1 + *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
      v36 = sub_1AD63B03C();
LABEL_136:
      v63 = v36;
      v64 = *(_QWORD *)(v36 - 8);
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48))(v35, 1, v36);
      if ((_DWORD)result)
        return result;
      v65 = *(uint64_t (**)(char *, uint64_t))(v64 + 8);
      goto LABEL_154;
    case 23:
    case 27:
    case 29:
    case 31:
    case 32:
    case 33:
      goto LABEL_95;
    case 24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = a1[10];
      if (result != 1)
        goto LABEL_141;
      return result;
    case 25:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = a1[6];
      if (result != 1)
        goto LABEL_141;
      return result;
    case 26:
      swift_bridgeObjectRelease();
      if (a1[7] != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v66 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
      v67 = (char *)a1 + v66[9];
      v63 = sub_1AD63B03C();
      v68 = *(_QWORD *)(v63 - 8);
      v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
      if (!v69(v67, 1, v63))
        (*(void (**)(char *, uint64_t))(v68 + 8))(v67, v63);
      v70 = (char *)a1 + v66[10];
      if (!v69(v70, 1, v63))
        (*(void (**)(char *, uint64_t))(v68 + 8))(v70, v63);
      v71 = v66[11];
      goto LABEL_152;
    case 28:
    case 34:
LABEL_141:
      swift_bridgeObjectRelease();
LABEL_95:
      result = swift_bridgeObjectRelease();
      break;
    case 30:
      swift_bridgeObjectRelease();
      v72 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
      v73 = (char *)a1 + *(int *)(v72 + 20);
      v63 = sub_1AD63B03C();
      v68 = *(_QWORD *)(v63 - 8);
      v69 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48);
      if (!v69(v73, 1, v63))
        (*(void (**)(char *, uint64_t))(v68 + 8))(v73, v63);
      v71 = *(int *)(v72 + 24);
LABEL_152:
      v35 = (char *)a1 + v71;
      result = ((uint64_t (*)(char *, uint64_t, uint64_t))v69)(v35, 1, v63);
      if (!(_DWORD)result)
      {
        v65 = *(uint64_t (**)(char *, uint64_t))(v68 + 8);
LABEL_154:
        result = v65(v35, v63);
      }
      break;
    case 35:
      result = swift_release();
      break;
    default:
      return result;
  }
  return result;
}

void sub_1AD0948CC()
{
  char *v0;

  v0 = (char *)sub_1AD094920 + 4 * word_1AD64A75A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1AD094920(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12, void *__dst, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  int *v39;
  uint64_t v40;
  _DWORD *v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v52;
  void *v53;
  const void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  __int128 v62;
  uint64_t v63;
  char *v65;

  v28 = *(_QWORD *)(v27 + 8);
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_QWORD *)(v26 + 8) = v28;
  v29 = *(_QWORD *)(v27 + 24);
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  *(_QWORD *)(v26 + 24) = v29;
  v30 = *(_QWORD *)(v27 + 40);
  *(_QWORD *)(v26 + 32) = *(_QWORD *)(v27 + 32);
  *(_QWORD *)(v26 + 40) = v30;
  v31 = *(_QWORD *)(v27 + 56);
  *(_QWORD *)(v26 + 48) = *(_QWORD *)(v27 + 48);
  *(_QWORD *)(v26 + 56) = v31;
  v32 = *(_QWORD *)(v27 + 72);
  *(_QWORD *)(v26 + 64) = *(_QWORD *)(v27 + 64);
  *(_QWORD *)(v26 + 72) = v32;
  v33 = *(_QWORD *)(v27 + 88);
  *(_QWORD *)(v26 + 80) = *(_QWORD *)(v27 + 80);
  *(_QWORD *)(v26 + 88) = v33;
  v34 = *(_QWORD *)(v27 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v34 == 1)
  {
    v35 = *(_OWORD *)(v27 + 176);
    *(_OWORD *)(v26 + 160) = *(_OWORD *)(v27 + 160);
    *(_OWORD *)(v26 + 176) = v35;
    *(_OWORD *)(v26 + 192) = *(_OWORD *)(v27 + 192);
    *(_OWORD *)(v26 + 201) = *(_OWORD *)(v27 + 201);
    v36 = *(_OWORD *)(v27 + 112);
    *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
    *(_OWORD *)(v26 + 112) = v36;
    v37 = *(_OWORD *)(v27 + 144);
    *(_OWORD *)(v26 + 128) = *(_OWORD *)(v27 + 128);
    *(_OWORD *)(v26 + 144) = v37;
  }
  else
  {
    *(_OWORD *)(v26 + 96) = *(_OWORD *)(v27 + 96);
    *(_QWORD *)(v26 + 112) = v34;
    *(_OWORD *)(v26 + 120) = *(_OWORD *)(v27 + 120);
    *(_QWORD *)(v26 + 136) = *(_QWORD *)(v27 + 136);
    v38 = *(_OWORD *)(v27 + 160);
    *(_OWORD *)(v26 + 144) = *(_OWORD *)(v27 + 144);
    *(_OWORD *)(v26 + 160) = v38;
    *(_BYTE *)(v26 + 176) = *(_BYTE *)(v27 + 176);
    *(_OWORD *)(v26 + 184) = *(_OWORD *)(v27 + 184);
    *(_OWORD *)(v26 + 200) = *(_OWORD *)(v27 + 200);
    *(_BYTE *)(v26 + 216) = *(_BYTE *)(v27 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v39 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
  v40 = v39[11];
  v41 = (_DWORD *)(v26 + v40);
  v42 = (_DWORD *)(v27 + v40);
  v43 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    *v41 = *v42;
    v46 = *(int *)(v43 + 20);
    v65 = (char *)v41 + v46;
    v47 = (char *)v42 + v46;
    v48 = sub_1AD63AF28();
    v49 = *(_QWORD *)(v48 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48))(v47, 1, v48))
    {
      v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v65, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v65, v47, v48);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v49 + 56))(v65, 0, 1, v48);
    }
    *(_QWORD *)((char *)v41 + *(int *)(v43 + 24)) = *(_QWORD *)((char *)v42 + *(int *)(v43 + 24));
    v51 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56);
    swift_bridgeObjectRetain();
    v51(v41, 0, 1, v43);
  }
  v52 = v39[12];
  v53 = (void *)(v26 + v52);
  v54 = (const void *)(v27 + v52);
  v55 = sub_1AD63AF28();
  v56 = *(_QWORD *)(v55 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
  {
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v56 + 16))(v53, v54, v55);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
  }
  *(_QWORD *)(v26 + v39[13]) = *(_QWORD *)(v27 + v39[13]);
  v58 = v39[14];
  v59 = v26 + v58;
  v60 = v27 + v58;
  v61 = *(_QWORD *)(v27 + v58 + 8);
  swift_bridgeObjectRetain();
  if (v61 == 1)
  {
    v62 = *(_OWORD *)(v60 + 16);
    *(_OWORD *)v59 = *(_OWORD *)v60;
    *(_OWORD *)(v59 + 16) = v62;
    *(_OWORD *)(v59 + 32) = *(_OWORD *)(v60 + 32);
    *(_OWORD *)(v59 + 41) = *(_OWORD *)(v60 + 41);
  }
  else
  {
    *(_QWORD *)v59 = *(_QWORD *)v60;
    *(_QWORD *)(v59 + 8) = v61;
    v63 = *(_QWORD *)(v60 + 24);
    *(_QWORD *)(v59 + 16) = *(_QWORD *)(v60 + 16);
    *(_QWORD *)(v59 + 24) = v63;
    *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
    *(_BYTE *)(v59 + 40) = *(_BYTE *)(v60 + 40);
    *(_QWORD *)(v59 + 48) = *(_QWORD *)(v60 + 48);
    *(_BYTE *)(v59 + 56) = *(_BYTE *)(v60 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return v26;
}

uint64_t sub_1AD0982D0(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1AD066230(result, type metadata accessor for LinkPresentation.SpecializationMetadata);
    v2 = (char *)&loc_1AD09833C + 4 * word_1AD64A7A2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_OWORD *sub_1AD09C344(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  int *v12;
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  _DWORD *v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  int *v49;
  uint64_t v50;
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unsigned int (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  int *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  int *v74;
  unsigned int (**v75)(const void *, uint64_t, int *);
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  _DWORD *v84;
  _DWORD *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  uint64_t v95;
  uint64_t v96;
  _DWORD *v97;
  _DWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  __int128 v103;
  int *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  uint64_t v116;
  uint64_t v117;
  _DWORD *v118;
  _DWORD *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  uint64_t v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  uint64_t v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  int *v147;
  uint64_t v148;
  _DWORD *v149;
  _DWORD *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  uint64_t v159;
  uint64_t v160;
  __int128 v161;
  uint64_t v162;
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  int *v169;
  uint64_t v170;
  char *v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  unsigned int (*v175)(char *, uint64_t, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  unsigned int (*v181)(char *, uint64_t, uint64_t);
  uint64_t v182;
  uint64_t v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _OWORD *v200;
  _OWORD *v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  uint64_t v206;
  _DWORD *v207;
  _DWORD *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _OWORD *v227;
  _OWORD *v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  uint64_t v232;
  _DWORD *v233;
  _DWORD *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  char *v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  char *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _OWORD *v278;
  _OWORD *v279;
  __int128 v280;
  uint64_t v281;
  char *v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  _OWORD *v286;
  _OWORD *v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  uint64_t v291;
  char *v292;
  char *v293;
  uint64_t v294;
  _OWORD *v295;
  _OWORD *v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v303;
  unsigned int (*v304)(char *, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  unsigned int (**__dstb)(const void *, uint64_t, int *);
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dstg;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v5 = a2[1];
      *a1 = *a2;
      a1[1] = v5;
      v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      v7 = a2[5];
      a1[4] = a2[4];
      a1[5] = v7;
      v8 = a2[9];
      a1[8] = a2[8];
      a1[9] = v8;
      v9 = a2[7];
      a1[6] = a2[6];
      a1[7] = v9;
      *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)a2 + 201);
      v10 = a2[12];
      v11 = a2[10];
      a1[11] = a2[11];
      a1[12] = v10;
      a1[10] = v11;
      v12 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
      v13 = v12[11];
      v14 = (_DWORD *)((char *)a1 + v13);
      v15 = (_DWORD *)((char *)a2 + v13);
      v16 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v17 = *(_QWORD *)(v16 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        *v14 = *v15;
        v183 = *(int *)(v16 + 20);
        __dst = (char *)v14 + v183;
        v184 = (char *)v15 + v183;
        v185 = sub_1AD63AF28();
        v186 = *(_QWORD *)(v185 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v186 + 48))(v184, 1, v185))
        {
          v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(__dst, v184, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v186 + 32))(__dst, v184, v185);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v186 + 56))(__dst, 0, 1, v185);
        }
        *(_QWORD *)((char *)v14 + *(int *)(v16 + 24)) = *(_QWORD *)((char *)v15 + *(int *)(v16 + 24));
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
      }
      v271 = v12[12];
      v272 = (char *)a1 + v271;
      v273 = (char *)a2 + v271;
      v274 = sub_1AD63AF28();
      v275 = *(_QWORD *)(v274 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v275 + 48))(v273, 1, v274))
      {
        v276 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v276 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v275 + 32))(v272, v273, v274);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v275 + 56))(v272, 0, 1, v274);
      }
      *(_QWORD *)((char *)a1 + v12[13]) = *(_QWORD *)((char *)a2 + v12[13]);
      v277 = v12[14];
      v278 = (_OWORD *)((char *)a1 + v277);
      v279 = (_OWORD *)((char *)a2 + v277);
      v280 = v279[1];
      *v278 = *v279;
      v278[1] = v280;
      v278[2] = v279[2];
      *(_OWORD *)((char *)v278 + 41) = *(_OWORD *)((char *)v279 + 41);
      goto LABEL_133;
    case 1u:
      v19 = a2[1];
      *a1 = *a2;
      a1[1] = v19;
      v20 = a2[3];
      a1[2] = a2[2];
      a1[3] = v20;
      v21 = a2[9];
      a1[8] = a2[8];
      a1[9] = v21;
      a1[10] = a2[10];
      *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v22 = a2[5];
      a1[4] = a2[4];
      a1[5] = v22;
      v23 = a2[7];
      a1[6] = a2[6];
      a1[7] = v23;
      v24 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
      v25 = *(int *)(v24 + 36);
      v26 = (_DWORD *)((char *)a1 + v25);
      v27 = (_DWORD *)((char *)a2 + v25);
      v28 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v29 = *(_QWORD *)(v28 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
      {
        v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
      }
      else
      {
        *v26 = *v27;
        v188 = *(int *)(v28 + 20);
        __dsta = (char *)v26 + v188;
        v189 = (char *)v27 + v188;
        v190 = sub_1AD63AF28();
        v191 = *(_QWORD *)(v190 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
        {
          v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(__dsta, v189, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v191 + 32))(__dsta, v189, v190);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v191 + 56))(__dsta, 0, 1, v190);
        }
        *(_QWORD *)((char *)v26 + *(int *)(v28 + 24)) = *(_QWORD *)((char *)v27 + *(int *)(v28 + 24));
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v24 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v24 + 40));
      goto LABEL_133;
    case 2u:
      v31 = a2[1];
      *a1 = *a2;
      a1[1] = v31;
      v32 = a2[3];
      a1[2] = a2[2];
      a1[3] = v32;
      v33 = a2[9];
      a1[8] = a2[8];
      a1[9] = v33;
      a1[10] = a2[10];
      *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v34 = a2[5];
      a1[4] = a2[4];
      a1[5] = v34;
      v35 = a2[7];
      a1[6] = a2[6];
      a1[7] = v35;
      v36 = *(int *)(type metadata accessor for LinkPresentation.MusicVideoMetadata(0) + 36);
      v37 = (_DWORD *)((char *)a1 + v36);
      v38 = (_DWORD *)((char *)a2 + v36);
      v39 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        goto LABEL_33;
      *v37 = *v38;
      v193 = *(int *)(v39 + 20);
      v194 = (char *)v37 + v193;
      v195 = (char *)v38 + v193;
      v196 = sub_1AD63AF28();
      v197 = *(_QWORD *)(v196 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        goto LABEL_74;
      goto LABEL_118;
    case 3u:
      v41 = a2[1];
      *a1 = *a2;
      a1[1] = v41;
      v42 = a2[3];
      a1[2] = a2[2];
      a1[3] = v42;
      v43 = a2[9];
      a1[8] = a2[8];
      a1[9] = v43;
      a1[10] = a2[10];
      *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v44 = a2[5];
      a1[4] = a2[4];
      a1[5] = v44;
      v45 = a2[7];
      a1[6] = a2[6];
      a1[7] = v45;
      v46 = *(int *)(type metadata accessor for LinkPresentation.ArtistMetadata(0) + 36);
      v37 = (_DWORD *)((char *)a1 + v46);
      v38 = (_DWORD *)((char *)a2 + v46);
      v39 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        goto LABEL_33;
      *v37 = *v38;
      v198 = *(int *)(v39 + 20);
      v194 = (char *)v37 + v198;
      v195 = (char *)v38 + v198;
      v196 = sub_1AD63AF28();
      v197 = *(_QWORD *)(v196 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        goto LABEL_74;
      goto LABEL_118;
    case 4u:
      v47 = a2[1];
      *a1 = *a2;
      a1[1] = v47;
      v48 = a2[3];
      a1[2] = a2[2];
      a1[3] = v48;
      v49 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
      v50 = v49[8];
      v51 = (char *)a1 + v50;
      v52 = (char *)a2 + v50;
      v53 = sub_1AD63AF28();
      v54 = *(_QWORD *)(v53 - 8);
      v55 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48);
      if (v55(v52, 1, v53))
      {
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v51, v52, v53);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
      }
      *(_OWORD *)((char *)a1 + v49[9]) = *(_OWORD *)((char *)a2 + v49[9]);
      v199 = v49[10];
      v200 = (_OWORD *)((char *)a1 + v199);
      v201 = (_OWORD *)((char *)a2 + v199);
      v202 = v201[3];
      v200[2] = v201[2];
      v200[3] = v202;
      v203 = v201[1];
      *v200 = *v201;
      v200[1] = v203;
      *(_OWORD *)((char *)v200 + 105) = *(_OWORD *)((char *)v201 + 105);
      v204 = v201[6];
      v205 = v201[4];
      v200[5] = v201[5];
      v200[6] = v204;
      v200[4] = v205;
      v206 = v49[11];
      v207 = (_DWORD *)((char *)a1 + v206);
      v208 = (_DWORD *)((char *)a2 + v206);
      v209 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v210 = *(_QWORD *)(v209 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v210 + 48))(v208, 1, v209))
      {
        v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
        memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
      }
      else
      {
        *v207 = *v208;
        v261 = *(int *)(v209 + 20);
        v262 = (char *)v207 + v261;
        v263 = (char *)v208 + v261;
        if (v55((char *)v208 + v261, 1, v53))
        {
          v264 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v262, v263, *(_QWORD *)(*(_QWORD *)(v264 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v262, v263, v53);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v54 + 56))(v262, 0, 1, v53);
        }
        *(_QWORD *)((char *)v207 + *(int *)(v209 + 24)) = *(_QWORD *)((char *)v208 + *(int *)(v209 + 24));
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v210 + 56))(v207, 0, 1, v209);
      }
      goto LABEL_133;
    case 5u:
      v57 = a2[1];
      *a1 = *a2;
      a1[1] = v57;
      v58 = a2[3];
      a1[2] = a2[2];
      a1[3] = v58;
      v59 = a2[9];
      a1[8] = a2[8];
      a1[9] = v59;
      a1[10] = a2[10];
      *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v60 = a2[5];
      a1[4] = a2[4];
      a1[5] = v60;
      v61 = a2[7];
      a1[6] = a2[6];
      a1[7] = v61;
      v62 = *(int *)(type metadata accessor for LinkPresentation.RadioMetadata(0) + 36);
      v37 = (_DWORD *)((char *)a1 + v62);
      v38 = (_DWORD *)((char *)a2 + v62);
      v39 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        goto LABEL_33;
      *v37 = *v38;
      v212 = *(int *)(v39 + 20);
      v194 = (char *)v37 + v212;
      v195 = (char *)v38 + v212;
      v196 = sub_1AD63AF28();
      v197 = *(_QWORD *)(v196 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        goto LABEL_74;
      goto LABEL_118;
    case 6u:
      v63 = a2[1];
      *a1 = *a2;
      a1[1] = v63;
      v64 = a2[3];
      a1[2] = a2[2];
      a1[3] = v64;
      v65 = a2[5];
      a1[4] = a2[4];
      a1[5] = v65;
      v66 = a2[9];
      a1[8] = a2[8];
      a1[9] = v66;
      v67 = a2[7];
      a1[6] = a2[6];
      a1[7] = v67;
      *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)a2 + 201);
      v68 = a2[12];
      v69 = a2[10];
      a1[11] = a2[11];
      a1[12] = v68;
      a1[10] = v69;
      *((_QWORD *)a1 + 28) = *((_QWORD *)a2 + 28);
      v70 = (int *)type metadata accessor for LinkPresentation.SoftwareMetadata(0);
      v71 = v70[12];
      v72 = (char *)a1 + v71;
      v73 = (char *)a2 + v71;
      v74 = (int *)type metadata accessor for LinkPresentation.Video(0);
      v75 = (unsigned int (**)(const void *, uint64_t, int *))*((_QWORD *)v74 - 1);
      if (v75[6](v73, 1, v74))
      {
        v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
        memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
      }
      else
      {
        __dstb = v75;
        v213 = sub_1AD63AF28();
        v214 = *(_QWORD *)(v213 - 8);
        v304 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48);
        v303 = v214;
        if (v304(v73, 1, v213))
        {
          v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v72, v73, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v72, v73, v213);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v72, 0, 1, v213);
        }
        v281 = v74[5];
        v282 = &v72[v281];
        v283 = &v73[v281];
        if (v304(&v73[v281], 1, v213))
        {
          v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v282, v283, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v303 + 32))(v282, v283, v213);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v303 + 56))(v282, 0, 1, v213);
        }
        *(_OWORD *)&v72[v74[6]] = *(_OWORD *)&v73[v74[6]];
        v72[v74[7]] = v73[v74[7]];
        *(_QWORD *)&v72[v74[8]] = *(_QWORD *)&v73[v74[8]];
        v291 = v74[9];
        v292 = &v72[v291];
        v293 = &v73[v291];
        *(_OWORD *)v292 = *(_OWORD *)v293;
        *((_QWORD *)v292 + 2) = *((_QWORD *)v293 + 2);
        ((void (*)(char *, _QWORD, uint64_t, int *))__dstb[7])(v72, 0, 1, v74);
      }
      *((_BYTE *)a1 + v70[13]) = *((_BYTE *)a2 + v70[13]);
      v294 = v70[14];
      v295 = (_OWORD *)((char *)a1 + v294);
      v296 = (_OWORD *)((char *)a2 + v294);
      v297 = v296[5];
      v295[4] = v296[4];
      v295[5] = v297;
      v295[6] = v296[6];
      *(_OWORD *)((char *)v295 + 105) = *(_OWORD *)((char *)v296 + 105);
      v298 = v296[1];
      *v295 = *v296;
      v295[1] = v298;
      v299 = v296[3];
      v295[2] = v296[2];
      v295[3] = v299;
      goto LABEL_133;
    case 7u:
      v77 = a2[1];
      *a1 = *a2;
      a1[1] = v77;
      v78 = a2[3];
      a1[2] = a2[2];
      a1[3] = v78;
      v79 = a2[9];
      a1[8] = a2[8];
      a1[9] = v79;
      a1[10] = a2[10];
      *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v80 = a2[5];
      a1[4] = a2[4];
      a1[5] = v80;
      v81 = a2[7];
      a1[6] = a2[6];
      a1[7] = v81;
      v82 = type metadata accessor for LinkPresentation.BookMetadata(0);
      v83 = *(int *)(v82 + 36);
      v84 = (_DWORD *)((char *)a1 + v83);
      v85 = (_DWORD *)((char *)a2 + v83);
      v86 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v87 = *(_QWORD *)(v86 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v87 + 48))(v85, 1, v86))
      {
        v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
        memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
      }
      else
      {
        *v84 = *v85;
        v216 = *(int *)(v86 + 20);
        __dstc = (char *)v84 + v216;
        v217 = (char *)v85 + v216;
        v218 = sub_1AD63AF28();
        v219 = *(_QWORD *)(v218 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v219 + 48))(v217, 1, v218))
        {
          v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(__dstc, v217, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v219 + 32))(__dstc, v217, v218);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v219 + 56))(__dstc, 0, 1, v218);
        }
        *(_QWORD *)((char *)v84 + *(int *)(v86 + 24)) = *(_QWORD *)((char *)v85 + *(int *)(v86 + 24));
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      }
      *((_BYTE *)a1 + *(int *)(v82 + 40)) = *((_BYTE *)a2 + *(int *)(v82 + 40));
      goto LABEL_133;
    case 8u:
      v89 = a2[1];
      *a1 = *a2;
      a1[1] = v89;
      v90 = a2[3];
      a1[2] = a2[2];
      a1[3] = v90;
      v91 = a2[7];
      a1[6] = a2[6];
      a1[7] = v91;
      v92 = a2[5];
      a1[4] = a2[4];
      a1[5] = v92;
      *(_OWORD *)((char *)a1 + 185) = *(_OWORD *)((char *)a2 + 185);
      v93 = a2[11];
      a1[10] = a2[10];
      a1[11] = v93;
      v94 = a2[9];
      a1[8] = a2[8];
      a1[9] = v94;
      v95 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
      v96 = *(int *)(v95 + 40);
      v97 = (_DWORD *)((char *)a1 + v96);
      v98 = (_DWORD *)((char *)a2 + v96);
      v99 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v100 = *(_QWORD *)(v99 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v100 + 48))(v98, 1, v99))
      {
        v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
        memcpy(v97, v98, *(_QWORD *)(*(_QWORD *)(v101 - 8) + 64));
      }
      else
      {
        *v97 = *v98;
        v221 = *(int *)(v99 + 20);
        __dstd = (char *)v97 + v221;
        v222 = (char *)v98 + v221;
        v223 = sub_1AD63AF28();
        v224 = *(_QWORD *)(v223 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48))(v222, 1, v223))
        {
          v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(__dstd, v222, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v224 + 32))(__dstd, v222, v223);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v224 + 56))(__dstd, 0, 1, v223);
        }
        *(_QWORD *)((char *)v97 + *(int *)(v99 + 24)) = *(_QWORD *)((char *)v98 + *(int *)(v99 + 24));
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v100 + 56))(v97, 0, 1, v99);
      }
      v300 = *(int *)(v95 + 44);
      v163 = (char *)a1 + v300;
      v164 = (char *)a2 + v300;
      v165 = sub_1AD63AF28();
      v166 = *(_QWORD *)(v165 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(v164, 1, v165))
        goto LABEL_132;
      v301 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v301 - 8) + 64));
      goto LABEL_133;
    case 9u:
      v102 = a2[1];
      *a1 = *a2;
      a1[1] = v102;
      v103 = a2[3];
      a1[2] = a2[2];
      a1[3] = v103;
      a1[4] = a2[4];
      v104 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
      v105 = v104[9];
      v106 = (char *)a1 + v105;
      v107 = (char *)a2 + v105;
      v108 = sub_1AD63B03C();
      v109 = *(_QWORD *)(v108 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v109 + 48))(v107, 1, v108))
      {
        v110 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v106, v107, *(_QWORD *)(*(_QWORD *)(v110 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v106, v107, v108);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v109 + 56))(v106, 0, 1, v108);
      }
      v226 = v104[10];
      v227 = (_OWORD *)((char *)a1 + v226);
      v228 = (_OWORD *)((char *)a2 + v226);
      v229 = v228[5];
      v227[4] = v228[4];
      v227[5] = v229;
      v227[6] = v228[6];
      *(_OWORD *)((char *)v227 + 105) = *(_OWORD *)((char *)v228 + 105);
      v230 = v228[1];
      *v227 = *v228;
      v227[1] = v230;
      v231 = v228[3];
      v227[2] = v228[2];
      v227[3] = v231;
      v232 = v104[11];
      v233 = (_DWORD *)((char *)a1 + v232);
      v234 = (_DWORD *)((char *)a2 + v232);
      v235 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v236 = *(_QWORD *)(v235 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v236 + 48))(v234, 1, v235))
      {
        v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
        memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
      }
      else
      {
        *v233 = *v234;
        v265 = *(int *)(v235 + 20);
        __dstg = (char *)v233 + v265;
        v266 = (char *)v234 + v265;
        v267 = sub_1AD63AF28();
        v268 = *(_QWORD *)(v267 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v268 + 48))(v266, 1, v267))
        {
          v269 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(__dstg, v266, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v268 + 32))(__dstg, v266, v267);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v268 + 56))(__dstg, 0, 1, v267);
        }
        *(_QWORD *)((char *)v233 + *(int *)(v235 + 24)) = *(_QWORD *)((char *)v234 + *(int *)(v235 + 24));
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v236 + 56))(v233, 0, 1, v235);
      }
      *(_QWORD *)((char *)a1 + v104[12]) = *(_QWORD *)((char *)a2 + v104[12]);
      goto LABEL_133;
    case 0xAu:
      v111 = a2[1];
      *a1 = *a2;
      a1[1] = v111;
      v112 = a2[3];
      a1[2] = a2[2];
      a1[3] = v112;
      v113 = a2[9];
      a1[8] = a2[8];
      a1[9] = v113;
      a1[10] = a2[10];
      *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v114 = a2[5];
      a1[4] = a2[4];
      a1[5] = v114;
      v115 = a2[7];
      a1[6] = a2[6];
      a1[7] = v115;
      v116 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
      v117 = *(int *)(v116 + 36);
      v118 = (_DWORD *)((char *)a1 + v117);
      v119 = (_DWORD *)((char *)a2 + v117);
      v120 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v121 = *(_QWORD *)(v120 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v121 + 48))(v119, 1, v120))
      {
        v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
        memcpy(v118, v119, *(_QWORD *)(*(_QWORD *)(v122 - 8) + 64));
      }
      else
      {
        *v118 = *v119;
        v238 = *(int *)(v120 + 20);
        __dste = (char *)v118 + v238;
        v239 = (char *)v119 + v238;
        v240 = sub_1AD63AF28();
        v241 = *(_QWORD *)(v240 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v241 + 48))(v239, 1, v240))
        {
          v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(__dste, v239, *(_QWORD *)(*(_QWORD *)(v242 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v241 + 32))(__dste, v239, v240);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v241 + 56))(__dste, 0, 1, v240);
        }
        *(_QWORD *)((char *)v118 + *(int *)(v120 + 24)) = *(_QWORD *)((char *)v119 + *(int *)(v120 + 24));
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v121 + 56))(v118, 0, 1, v120);
      }
      *(_QWORD *)((char *)a1 + *(int *)(v116 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v116 + 40));
      goto LABEL_133;
    case 0xBu:
      v123 = a2[1];
      *a1 = *a2;
      a1[1] = v123;
      v124 = a2[3];
      a1[2] = a2[2];
      a1[3] = v124;
      v125 = a2[7];
      a1[6] = a2[6];
      a1[7] = v125;
      v126 = a2[5];
      a1[4] = a2[4];
      a1[5] = v126;
      *(_OWORD *)((char *)a1 + 185) = *(_OWORD *)((char *)a2 + 185);
      v127 = a2[11];
      a1[10] = a2[10];
      a1[11] = v127;
      v128 = a2[9];
      a1[8] = a2[8];
      a1[9] = v128;
      v129 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
      v37 = (_DWORD *)((char *)a1 + v129);
      v38 = (_DWORD *)((char *)a2 + v129);
      v39 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        goto LABEL_33;
      *v37 = *v38;
      v243 = *(int *)(v39 + 20);
      v194 = (char *)v37 + v243;
      v195 = (char *)v38 + v243;
      v196 = sub_1AD63AF28();
      v197 = *(_QWORD *)(v196 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        goto LABEL_74;
      goto LABEL_118;
    case 0xCu:
      v130 = a2[1];
      *a1 = *a2;
      a1[1] = v130;
      v131 = a2[3];
      a1[2] = a2[2];
      a1[3] = v131;
      v132 = a2[9];
      a1[8] = a2[8];
      a1[9] = v132;
      a1[10] = a2[10];
      *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v133 = a2[5];
      a1[4] = a2[4];
      a1[5] = v133;
      v134 = a2[7];
      a1[6] = a2[6];
      a1[7] = v134;
      v135 = *(int *)(type metadata accessor for LinkPresentation.TVSeasonMetadata(0) + 36);
      v37 = (_DWORD *)((char *)a1 + v135);
      v38 = (_DWORD *)((char *)a2 + v135);
      v39 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        goto LABEL_33;
      *v37 = *v38;
      v244 = *(int *)(v39 + 20);
      v194 = (char *)v37 + v244;
      v195 = (char *)v38 + v244;
      v196 = sub_1AD63AF28();
      v197 = *(_QWORD *)(v196 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        goto LABEL_74;
      goto LABEL_118;
    case 0xDu:
      v136 = a2[1];
      *a1 = *a2;
      a1[1] = v136;
      v137 = a2[9];
      a1[8] = a2[8];
      a1[9] = v137;
      *(_OWORD *)((char *)a1 + 153) = *(_OWORD *)((char *)a2 + 153);
      v138 = a2[3];
      a1[2] = a2[2];
      a1[3] = v138;
      v139 = a2[5];
      a1[4] = a2[4];
      a1[5] = v139;
      v140 = a2[7];
      a1[6] = a2[6];
      a1[7] = v140;
      v141 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
      v37 = (_DWORD *)((char *)a1 + v141);
      v38 = (_DWORD *)((char *)a2 + v141);
      v39 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        goto LABEL_33;
      *v37 = *v38;
      v245 = *(int *)(v39 + 20);
      v194 = (char *)v37 + v245;
      v195 = (char *)v38 + v245;
      v196 = sub_1AD63AF28();
      v197 = *(_QWORD *)(v196 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        goto LABEL_74;
      goto LABEL_118;
    case 0xEu:
      v142 = a2[1];
      *a1 = *a2;
      a1[1] = v142;
      v143 = a2[3];
      a1[2] = a2[2];
      a1[3] = v143;
      v144 = a2[9];
      a1[8] = a2[8];
      a1[9] = v144;
      a1[10] = a2[10];
      *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v145 = a2[5];
      a1[4] = a2[4];
      a1[5] = v145;
      v146 = a2[7];
      a1[6] = a2[6];
      a1[7] = v146;
      v147 = (int *)type metadata accessor for LinkPresentation.MovieMetadata(0);
      v148 = v147[9];
      v149 = (_DWORD *)((char *)a1 + v148);
      v150 = (_DWORD *)((char *)a2 + v148);
      v151 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v152 = *(_QWORD *)(v151 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v152 + 48))(v150, 1, v151))
      {
        v153 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
        memcpy(v149, v150, *(_QWORD *)(*(_QWORD *)(v153 - 8) + 64));
      }
      else
      {
        *v149 = *v150;
        v246 = *(int *)(v151 + 20);
        __dstf = (char *)v149 + v246;
        v247 = (char *)v150 + v246;
        v248 = sub_1AD63AF28();
        v249 = *(_QWORD *)(v248 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v249 + 48))(v247, 1, v248))
        {
          v250 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(__dstf, v247, *(_QWORD *)(*(_QWORD *)(v250 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v249 + 32))(__dstf, v247, v248);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v249 + 56))(__dstf, 0, 1, v248);
        }
        *(_QWORD *)((char *)v149 + *(int *)(v151 + 24)) = *(_QWORD *)((char *)v150 + *(int *)(v151 + 24));
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v152 + 56))(v149, 0, 1, v151);
      }
      v285 = v147[10];
      v286 = (_OWORD *)((char *)a1 + v285);
      v287 = (_OWORD *)((char *)a2 + v285);
      v288 = v287[5];
      v286[4] = v287[4];
      v286[5] = v288;
      v286[6] = v287[6];
      *(_OWORD *)((char *)v286 + 105) = *(_OWORD *)((char *)v287 + 105);
      v289 = v287[1];
      *v286 = *v287;
      v286[1] = v289;
      v290 = v287[3];
      v286[2] = v287[2];
      v286[3] = v290;
      *(_OWORD *)((char *)a1 + v147[11]) = *(_OWORD *)((char *)a2 + v147[11]);
      goto LABEL_133;
    case 0xFu:
      v154 = a2[1];
      *a1 = *a2;
      a1[1] = v154;
      v155 = a2[3];
      a1[2] = a2[2];
      a1[3] = v155;
      v156 = a2[9];
      a1[8] = a2[8];
      a1[9] = v156;
      a1[10] = a2[10];
      *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v157 = a2[5];
      a1[4] = a2[4];
      a1[5] = v157;
      v158 = a2[7];
      a1[6] = a2[6];
      a1[7] = v158;
      v159 = *(int *)(type metadata accessor for LinkPresentation.MovieBundleMetadata(0) + 36);
      v37 = (_DWORD *)((char *)a1 + v159);
      v38 = (_DWORD *)((char *)a2 + v159);
      v39 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
      v40 = *(_QWORD *)(v39 - 8);
      if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
      {
LABEL_33:
        v160 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
        memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v160 - 8) + 64));
      }
      else
      {
        *v37 = *v38;
        v251 = *(int *)(v39 + 20);
        v194 = (char *)v37 + v251;
        v195 = (char *)v38 + v251;
        v196 = sub_1AD63AF28();
        v197 = *(_QWORD *)(v196 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
        {
LABEL_74:
          v252 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v252 - 8) + 64));
        }
        else
        {
LABEL_118:
          (*(void (**)(char *, char *, uint64_t))(v197 + 32))(v194, v195, v196);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
        }
        *(_QWORD *)((char *)v37 + *(int *)(v39 + 24)) = *(_QWORD *)((char *)v38 + *(int *)(v39 + 24));
        (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
      }
      goto LABEL_133;
    case 0x16u:
      v161 = a2[1];
      *a1 = *a2;
      a1[1] = v161;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
      *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
      *(_OWORD *)((char *)a1 + 145) = *(_OWORD *)((char *)a2 + 145);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      *(_OWORD *)((char *)a1 + 273) = *(_OWORD *)((char *)a2 + 273);
      *(_OWORD *)((char *)a1 + 264) = *(_OWORD *)((char *)a2 + 264);
      *(_OWORD *)((char *)a1 + 248) = *(_OWORD *)((char *)a2 + 248);
      *(_OWORD *)((char *)a1 + 232) = *(_OWORD *)((char *)a2 + 232);
      *(_OWORD *)((char *)a1 + 216) = *(_OWORD *)((char *)a2 + 216);
      *(_OWORD *)((char *)a1 + 200) = *(_OWORD *)((char *)a2 + 200);
      *(_OWORD *)((char *)a1 + 184) = *(_OWORD *)((char *)a2 + 184);
      *(_OWORD *)((char *)a1 + 168) = *(_OWORD *)((char *)a2 + 168);
      v162 = *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
      v163 = (char *)a1 + v162;
      v164 = (char *)a2 + v162;
      v165 = sub_1AD63B03C();
      v166 = *(_QWORD *)(v165 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(v164, 1, v165))
      {
        v167 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v163, v164, *(_QWORD *)(*(_QWORD *)(v167 - 8) + 64));
      }
      else
      {
LABEL_132:
        (*(void (**)(char *, char *, uint64_t))(v166 + 32))(v163, v164, v165);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v166 + 56))(v163, 0, 1, v165);
      }
      goto LABEL_133;
    case 0x1Au:
      v168 = a2[1];
      *a1 = *a2;
      a1[1] = v168;
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
      *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
      *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
      *(_OWORD *)((char *)a1 + 145) = *(_OWORD *)((char *)a2 + 145);
      *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
      *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
      *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
      *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
      v169 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
      v170 = v169[9];
      v171 = (char *)a1 + v170;
      v172 = (char *)a2 + v170;
      v173 = sub_1AD63B03C();
      v174 = *(_QWORD *)(v173 - 8);
      v175 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48);
      if (v175(v172, 1, v173))
      {
        v176 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v171, v172, *(_QWORD *)(*(_QWORD *)(v176 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v171, v172, v173);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v171, 0, 1, v173);
      }
      v253 = v169[10];
      v254 = (char *)a1 + v253;
      v255 = (char *)a2 + v253;
      if (v175((char *)a2 + v253, 1, v173))
      {
        v256 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v254, v255, *(_QWORD *)(*(_QWORD *)(v256 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v254, v255, v173);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v254, 0, 1, v173);
      }
      v270 = v169[11];
      v258 = (char *)a1 + v270;
      v259 = (char *)a2 + v270;
      if (v175(v259, 1, v173))
        goto LABEL_81;
      goto LABEL_89;
    case 0x1Eu:
      *a1 = *a2;
      v177 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
      v178 = *(int *)(v177 + 20);
      v179 = (char *)a1 + v178;
      v180 = (char *)a2 + v178;
      v173 = sub_1AD63B03C();
      v174 = *(_QWORD *)(v173 - 8);
      v181 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v174 + 48);
      if (v181(v180, 1, v173))
      {
        v182 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v179, v180, *(_QWORD *)(*(_QWORD *)(v182 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v179, v180, v173);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v179, 0, 1, v173);
      }
      v257 = *(int *)(v177 + 24);
      v258 = (char *)a1 + v257;
      v259 = (char *)a2 + v257;
      if (v181(v259, 1, v173))
      {
LABEL_81:
        v260 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v258, v259, *(_QWORD *)(*(_QWORD *)(v260 - 8) + 64));
      }
      else
      {
LABEL_89:
        (*(void (**)(char *, char *, uint64_t))(v174 + 32))(v258, v259, v173);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v174 + 56))(v258, 0, 1, v173);
      }
LABEL_133:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1AD09E17C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  _DWORD *v27;
  _DWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _DWORD *v38;
  _DWORD *v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  int *v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  unsigned int (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  int *v71;
  uint64_t v72;
  char *v73;
  char *v74;
  int *v75;
  unsigned int (**v76)(const void *, uint64_t, int *);
  uint64_t v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  _DWORD *v85;
  _DWORD *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v96;
  uint64_t v97;
  _DWORD *v98;
  _DWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  __int128 v103;
  __int128 v104;
  int *v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  _DWORD *v119;
  _DWORD *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  uint64_t v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  uint64_t v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  int *v148;
  uint64_t v149;
  _DWORD *v150;
  _DWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  __int128 v169;
  int *v170;
  uint64_t v171;
  char *v172;
  char *v173;
  uint64_t v174;
  uint64_t v175;
  unsigned int (*v176)(char *, uint64_t, uint64_t);
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  char *v180;
  char *v181;
  unsigned int (*v182)(char *, uint64_t, uint64_t);
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  _OWORD *v200;
  _OWORD *v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  uint64_t v206;
  _DWORD *v207;
  _DWORD *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  _OWORD *v227;
  _OWORD *v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  uint64_t v232;
  _DWORD *v233;
  _DWORD *v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  char *v253;
  char *v254;
  uint64_t v255;
  uint64_t v256;
  char *v257;
  char *v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  _OWORD *v275;
  _OWORD *v276;
  __int128 v277;
  uint64_t v278;
  char *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  _OWORD *v285;
  _OWORD *v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  uint64_t v290;
  char *v291;
  char *v292;
  uint64_t v293;
  _OWORD *v294;
  _OWORD *v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  unsigned int (*v308)(char *, uint64_t, uint64_t);
  char *__dst;
  char *__dsta;
  unsigned int (**__dstb)(const void *, uint64_t, int *);
  char *__dstc;
  char *__dstd;
  char *__dste;
  char *__dstf;
  char *__dstg;
  char *__dsth;

  if (a1 != a2)
  {
    sub_1AD066230((uint64_t)a1, type metadata accessor for LinkPresentation.SpecializationMetadata);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        v7 = a2[3];
        a1[2] = a2[2];
        a1[3] = v7;
        v8 = a2[5];
        a1[4] = a2[4];
        a1[5] = v8;
        v9 = a2[9];
        a1[8] = a2[8];
        a1[9] = v9;
        v10 = a2[7];
        a1[6] = a2[6];
        a1[7] = v10;
        *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)a2 + 201);
        v11 = a2[12];
        v12 = a2[10];
        a1[11] = a2[11];
        a1[12] = v11;
        a1[10] = v12;
        v13 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
        v14 = v13[11];
        v15 = (_DWORD *)((char *)a1 + v14);
        v16 = (_DWORD *)((char *)a2 + v14);
        v17 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v18 = *(_QWORD *)(v17 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        }
        else
        {
          *v15 = *v16;
          v184 = *(int *)(v17 + 20);
          __dst = (char *)v15 + v184;
          v185 = (char *)v16 + v184;
          v186 = sub_1AD63AF28();
          v300 = *(_QWORD *)(v186 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v300 + 48))(v185, 1, v186))
          {
            v187 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(__dst, v185, *(_QWORD *)(*(_QWORD *)(v187 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v300 + 32))(__dst, v185, v186);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v300 + 56))(__dst, 0, 1, v186);
          }
          *(_QWORD *)((char *)v15 + *(int *)(v17 + 24)) = *(_QWORD *)((char *)v16 + *(int *)(v17 + 24));
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
        }
        v268 = v13[12];
        v269 = (char *)a1 + v268;
        v270 = (char *)a2 + v268;
        v271 = sub_1AD63AF28();
        v272 = *(_QWORD *)(v271 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v272 + 48))(v270, 1, v271))
        {
          v273 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v269, v270, *(_QWORD *)(*(_QWORD *)(v273 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v272 + 32))(v269, v270, v271);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v272 + 56))(v269, 0, 1, v271);
        }
        *(_QWORD *)((char *)a1 + v13[13]) = *(_QWORD *)((char *)a2 + v13[13]);
        v274 = v13[14];
        v275 = (_OWORD *)((char *)a1 + v274);
        v276 = (_OWORD *)((char *)a2 + v274);
        v277 = v276[1];
        *v275 = *v276;
        v275[1] = v277;
        v275[2] = v276[2];
        *(_OWORD *)((char *)v275 + 41) = *(_OWORD *)((char *)v276 + 41);
        goto LABEL_134;
      case 1u:
        v20 = a2[1];
        *a1 = *a2;
        a1[1] = v20;
        v21 = a2[3];
        a1[2] = a2[2];
        a1[3] = v21;
        v22 = a2[9];
        a1[8] = a2[8];
        a1[9] = v22;
        a1[10] = a2[10];
        *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
        v23 = a2[5];
        a1[4] = a2[4];
        a1[5] = v23;
        v24 = a2[7];
        a1[6] = a2[6];
        a1[7] = v24;
        v25 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
        v26 = *(int *)(v25 + 36);
        v27 = (_DWORD *)((char *)a1 + v26);
        v28 = (_DWORD *)((char *)a2 + v26);
        v29 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v30 = *(_QWORD *)(v29 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
        {
          v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
        }
        else
        {
          v301 = v25;
          *v27 = *v28;
          v188 = *(int *)(v29 + 20);
          __dsta = (char *)v27 + v188;
          v189 = (char *)v28 + v188;
          v190 = sub_1AD63AF28();
          v191 = *(_QWORD *)(v190 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v191 + 48))(v189, 1, v190))
          {
            v192 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(__dsta, v189, *(_QWORD *)(*(_QWORD *)(v192 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v191 + 32))(__dsta, v189, v190);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v191 + 56))(__dsta, 0, 1, v190);
          }
          *(_QWORD *)((char *)v27 + *(int *)(v29 + 24)) = *(_QWORD *)((char *)v28 + *(int *)(v29 + 24));
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
          v25 = v301;
        }
        *(_QWORD *)((char *)a1 + *(int *)(v25 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v25 + 40));
        goto LABEL_134;
      case 2u:
        v32 = a2[1];
        *a1 = *a2;
        a1[1] = v32;
        v33 = a2[3];
        a1[2] = a2[2];
        a1[3] = v33;
        v34 = a2[9];
        a1[8] = a2[8];
        a1[9] = v34;
        a1[10] = a2[10];
        *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
        v35 = a2[5];
        a1[4] = a2[4];
        a1[5] = v35;
        v36 = a2[7];
        a1[6] = a2[6];
        a1[7] = v36;
        v37 = *(int *)(type metadata accessor for LinkPresentation.MusicVideoMetadata(0) + 36);
        v38 = (_DWORD *)((char *)a1 + v37);
        v39 = (_DWORD *)((char *)a2 + v37);
        v40 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
          goto LABEL_34;
        *v38 = *v39;
        v193 = *(int *)(v40 + 20);
        v194 = (char *)v38 + v193;
        v195 = (char *)v39 + v193;
        v196 = sub_1AD63AF28();
        v197 = *(_QWORD *)(v196 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
          goto LABEL_75;
        goto LABEL_124;
      case 3u:
        v42 = a2[1];
        *a1 = *a2;
        a1[1] = v42;
        v43 = a2[3];
        a1[2] = a2[2];
        a1[3] = v43;
        v44 = a2[9];
        a1[8] = a2[8];
        a1[9] = v44;
        a1[10] = a2[10];
        *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
        v45 = a2[5];
        a1[4] = a2[4];
        a1[5] = v45;
        v46 = a2[7];
        a1[6] = a2[6];
        a1[7] = v46;
        v47 = *(int *)(type metadata accessor for LinkPresentation.ArtistMetadata(0) + 36);
        v38 = (_DWORD *)((char *)a1 + v47);
        v39 = (_DWORD *)((char *)a2 + v47);
        v40 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
          goto LABEL_34;
        *v38 = *v39;
        v198 = *(int *)(v40 + 20);
        v194 = (char *)v38 + v198;
        v195 = (char *)v39 + v198;
        v196 = sub_1AD63AF28();
        v197 = *(_QWORD *)(v196 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
          goto LABEL_75;
        goto LABEL_124;
      case 4u:
        v48 = a2[1];
        *a1 = *a2;
        a1[1] = v48;
        v49 = a2[3];
        a1[2] = a2[2];
        a1[3] = v49;
        v50 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
        v51 = v50[8];
        v52 = (char *)a1 + v51;
        v53 = (char *)a2 + v51;
        v54 = sub_1AD63AF28();
        v55 = *(_QWORD *)(v54 - 8);
        v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
        if (v56(v53, 1, v54))
        {
          v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
          memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v55 + 32))(v52, v53, v54);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(v52, 0, 1, v54);
        }
        *(_OWORD *)((char *)a1 + v50[9]) = *(_OWORD *)((char *)a2 + v50[9]);
        v199 = v50[10];
        v200 = (_OWORD *)((char *)a1 + v199);
        v201 = (_OWORD *)((char *)a2 + v199);
        v202 = v201[3];
        v200[2] = v201[2];
        v200[3] = v202;
        v203 = v201[1];
        *v200 = *v201;
        v200[1] = v203;
        *(_OWORD *)((char *)v200 + 105) = *(_OWORD *)((char *)v201 + 105);
        v204 = v201[6];
        v205 = v201[4];
        v200[5] = v201[5];
        v200[6] = v204;
        v200[4] = v205;
        v206 = v50[11];
        v207 = (_DWORD *)((char *)a1 + v206);
        v208 = (_DWORD *)((char *)a2 + v206);
        v209 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v210 = *(_QWORD *)(v209 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v210 + 48))(v208, 1, v209))
        {
          v211 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v207, v208, *(_QWORD *)(*(_QWORD *)(v211 - 8) + 64));
        }
        else
        {
          *v207 = *v208;
          v260 = *(int *)(v209 + 20);
          __dstg = (char *)v207 + v260;
          v261 = (char *)v208 + v260;
          if (v56((char *)v208 + v260, 1, v54))
          {
            v262 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(__dstg, v261, *(_QWORD *)(*(_QWORD *)(v262 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v55 + 32))(__dstg, v261, v54);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v55 + 56))(__dstg, 0, 1, v54);
          }
          *(_QWORD *)((char *)v207 + *(int *)(v209 + 24)) = *(_QWORD *)((char *)v208 + *(int *)(v209 + 24));
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v210 + 56))(v207, 0, 1, v209);
        }
        goto LABEL_134;
      case 5u:
        v58 = a2[1];
        *a1 = *a2;
        a1[1] = v58;
        v59 = a2[3];
        a1[2] = a2[2];
        a1[3] = v59;
        v60 = a2[9];
        a1[8] = a2[8];
        a1[9] = v60;
        a1[10] = a2[10];
        *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
        v61 = a2[5];
        a1[4] = a2[4];
        a1[5] = v61;
        v62 = a2[7];
        a1[6] = a2[6];
        a1[7] = v62;
        v63 = *(int *)(type metadata accessor for LinkPresentation.RadioMetadata(0) + 36);
        v38 = (_DWORD *)((char *)a1 + v63);
        v39 = (_DWORD *)((char *)a2 + v63);
        v40 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
          goto LABEL_34;
        *v38 = *v39;
        v212 = *(int *)(v40 + 20);
        v194 = (char *)v38 + v212;
        v195 = (char *)v39 + v212;
        v196 = sub_1AD63AF28();
        v197 = *(_QWORD *)(v196 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
          goto LABEL_75;
        goto LABEL_124;
      case 6u:
        v64 = a2[1];
        *a1 = *a2;
        a1[1] = v64;
        v65 = a2[3];
        a1[2] = a2[2];
        a1[3] = v65;
        v66 = a2[5];
        a1[4] = a2[4];
        a1[5] = v66;
        v67 = a2[9];
        a1[8] = a2[8];
        a1[9] = v67;
        v68 = a2[7];
        a1[6] = a2[6];
        a1[7] = v68;
        *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)a2 + 201);
        v69 = a2[12];
        v70 = a2[10];
        a1[11] = a2[11];
        a1[12] = v69;
        a1[10] = v70;
        *((_QWORD *)a1 + 28) = *((_QWORD *)a2 + 28);
        v71 = (int *)type metadata accessor for LinkPresentation.SoftwareMetadata(0);
        v72 = v71[12];
        v73 = (char *)a1 + v72;
        v74 = (char *)a2 + v72;
        v75 = (int *)type metadata accessor for LinkPresentation.Video(0);
        v76 = (unsigned int (**)(const void *, uint64_t, int *))*((_QWORD *)v75 - 1);
        if (v76[6](v74, 1, v75))
        {
          v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
          memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
        }
        else
        {
          __dstb = v76;
          v213 = sub_1AD63AF28();
          v214 = *(_QWORD *)(v213 - 8);
          v308 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v214 + 48);
          v302 = v214;
          if (v308(v74, 1, v213))
          {
            v215 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v215 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v214 + 32))(v73, v74, v213);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v214 + 56))(v73, 0, 1, v213);
          }
          v278 = v75[5];
          v279 = &v73[v278];
          v280 = &v74[v278];
          if (v308(&v74[v278], 1, v213))
          {
            v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v279, v280, *(_QWORD *)(*(_QWORD *)(v281 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v302 + 32))(v279, v280, v213);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v302 + 56))(v279, 0, 1, v213);
          }
          *(_OWORD *)&v73[v75[6]] = *(_OWORD *)&v74[v75[6]];
          v73[v75[7]] = v74[v75[7]];
          *(_QWORD *)&v73[v75[8]] = *(_QWORD *)&v74[v75[8]];
          v290 = v75[9];
          v291 = &v73[v290];
          v292 = &v74[v290];
          *(_OWORD *)v291 = *(_OWORD *)v292;
          *((_QWORD *)v291 + 2) = *((_QWORD *)v292 + 2);
          ((void (*)(char *, _QWORD, uint64_t, int *))__dstb[7])(v73, 0, 1, v75);
        }
        *((_BYTE *)a1 + v71[13]) = *((_BYTE *)a2 + v71[13]);
        v293 = v71[14];
        v294 = (_OWORD *)((char *)a1 + v293);
        v295 = (_OWORD *)((char *)a2 + v293);
        v296 = v295[5];
        v294[4] = v295[4];
        v294[5] = v296;
        v294[6] = v295[6];
        *(_OWORD *)((char *)v294 + 105) = *(_OWORD *)((char *)v295 + 105);
        v297 = v295[1];
        *v294 = *v295;
        v294[1] = v297;
        v298 = v295[3];
        v294[2] = v295[2];
        v294[3] = v298;
        goto LABEL_134;
      case 7u:
        v78 = a2[1];
        *a1 = *a2;
        a1[1] = v78;
        v79 = a2[3];
        a1[2] = a2[2];
        a1[3] = v79;
        v80 = a2[9];
        a1[8] = a2[8];
        a1[9] = v80;
        a1[10] = a2[10];
        *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
        v81 = a2[5];
        a1[4] = a2[4];
        a1[5] = v81;
        v82 = a2[7];
        a1[6] = a2[6];
        a1[7] = v82;
        v83 = type metadata accessor for LinkPresentation.BookMetadata(0);
        v84 = *(int *)(v83 + 36);
        v85 = (_DWORD *)((char *)a1 + v84);
        v86 = (_DWORD *)((char *)a2 + v84);
        v87 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v88 = *(_QWORD *)(v87 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v88 + 48))(v86, 1, v87))
        {
          v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
        }
        else
        {
          v303 = v83;
          *v85 = *v86;
          v216 = *(int *)(v87 + 20);
          __dstc = (char *)v85 + v216;
          v217 = (char *)v86 + v216;
          v218 = sub_1AD63AF28();
          v219 = *(_QWORD *)(v218 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v219 + 48))(v217, 1, v218))
          {
            v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(__dstc, v217, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v219 + 32))(__dstc, v217, v218);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v219 + 56))(__dstc, 0, 1, v218);
          }
          *(_QWORD *)((char *)v85 + *(int *)(v87 + 24)) = *(_QWORD *)((char *)v86 + *(int *)(v87 + 24));
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v88 + 56))(v85, 0, 1, v87);
          v83 = v303;
        }
        *((_BYTE *)a1 + *(int *)(v83 + 40)) = *((_BYTE *)a2 + *(int *)(v83 + 40));
        goto LABEL_134;
      case 8u:
        v90 = a2[1];
        *a1 = *a2;
        a1[1] = v90;
        v91 = a2[3];
        a1[2] = a2[2];
        a1[3] = v91;
        v92 = a2[7];
        a1[6] = a2[6];
        a1[7] = v92;
        v93 = a2[5];
        a1[4] = a2[4];
        a1[5] = v93;
        *(_OWORD *)((char *)a1 + 185) = *(_OWORD *)((char *)a2 + 185);
        v94 = a2[11];
        a1[10] = a2[10];
        a1[11] = v94;
        v95 = a2[9];
        a1[8] = a2[8];
        a1[9] = v95;
        v96 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
        v97 = *(int *)(v96 + 40);
        v98 = (_DWORD *)((char *)a1 + v97);
        v99 = (_DWORD *)((char *)a2 + v97);
        v100 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v101 = *(_QWORD *)(v100 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v101 + 48))(v99, 1, v100))
        {
          v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v98, v99, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
        }
        else
        {
          v304 = v96;
          *v98 = *v99;
          v221 = *(int *)(v100 + 20);
          __dstd = (char *)v98 + v221;
          v222 = (char *)v99 + v221;
          v223 = sub_1AD63AF28();
          v224 = *(_QWORD *)(v223 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v224 + 48))(v222, 1, v223))
          {
            v225 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(__dstd, v222, *(_QWORD *)(*(_QWORD *)(v225 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v224 + 32))(__dstd, v222, v223);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v224 + 56))(__dstd, 0, 1, v223);
          }
          *(_QWORD *)((char *)v98 + *(int *)(v100 + 24)) = *(_QWORD *)((char *)v99 + *(int *)(v100 + 24));
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v101 + 56))(v98, 0, 1, v100);
          v96 = v304;
        }
        v282 = *(int *)(v96 + 44);
        v164 = (char *)a1 + v282;
        v165 = (char *)a2 + v282;
        v166 = sub_1AD63AF28();
        v167 = *(_QWORD *)(v166 - 8);
        if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v165, 1, v166))
          goto LABEL_76;
        v283 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v283 - 8) + 64));
        goto LABEL_134;
      case 9u:
        v103 = a2[1];
        *a1 = *a2;
        a1[1] = v103;
        v104 = a2[3];
        a1[2] = a2[2];
        a1[3] = v104;
        a1[4] = a2[4];
        v105 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
        v106 = v105[9];
        v107 = (char *)a1 + v106;
        v108 = (char *)a2 + v106;
        v109 = sub_1AD63B03C();
        v110 = *(_QWORD *)(v109 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109))
        {
          v111 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v107, v108, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v107, v108, v109);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v110 + 56))(v107, 0, 1, v109);
        }
        v226 = v105[10];
        v227 = (_OWORD *)((char *)a1 + v226);
        v228 = (_OWORD *)((char *)a2 + v226);
        v229 = v228[5];
        v227[4] = v228[4];
        v227[5] = v229;
        v227[6] = v228[6];
        *(_OWORD *)((char *)v227 + 105) = *(_OWORD *)((char *)v228 + 105);
        v230 = v228[1];
        *v227 = *v228;
        v227[1] = v230;
        v231 = v228[3];
        v227[2] = v228[2];
        v227[3] = v231;
        v232 = v105[11];
        v233 = (_DWORD *)((char *)a1 + v232);
        v234 = (_DWORD *)((char *)a2 + v232);
        v235 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v236 = *(_QWORD *)(v235 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v236 + 48))(v234, 1, v235))
        {
          v237 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v233, v234, *(_QWORD *)(*(_QWORD *)(v237 - 8) + 64));
        }
        else
        {
          *v233 = *v234;
          v263 = *(int *)(v235 + 20);
          __dsth = (char *)v233 + v263;
          v264 = (char *)v234 + v263;
          v265 = sub_1AD63AF28();
          v307 = *(_QWORD *)(v265 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v307 + 48))(v264, 1, v265))
          {
            v266 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(__dsth, v264, *(_QWORD *)(*(_QWORD *)(v266 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v307 + 32))(__dsth, v264, v265);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v307 + 56))(__dsth, 0, 1, v265);
          }
          *(_QWORD *)((char *)v233 + *(int *)(v235 + 24)) = *(_QWORD *)((char *)v234 + *(int *)(v235 + 24));
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v236 + 56))(v233, 0, 1, v235);
        }
        *(_QWORD *)((char *)a1 + v105[12]) = *(_QWORD *)((char *)a2 + v105[12]);
        goto LABEL_134;
      case 0xAu:
        v112 = a2[1];
        *a1 = *a2;
        a1[1] = v112;
        v113 = a2[3];
        a1[2] = a2[2];
        a1[3] = v113;
        v114 = a2[9];
        a1[8] = a2[8];
        a1[9] = v114;
        a1[10] = a2[10];
        *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
        v115 = a2[5];
        a1[4] = a2[4];
        a1[5] = v115;
        v116 = a2[7];
        a1[6] = a2[6];
        a1[7] = v116;
        v117 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
        v118 = *(int *)(v117 + 36);
        v119 = (_DWORD *)((char *)a1 + v118);
        v120 = (_DWORD *)((char *)a2 + v118);
        v121 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v122 = *(_QWORD *)(v121 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v122 + 48))(v120, 1, v121))
        {
          v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v119, v120, *(_QWORD *)(*(_QWORD *)(v123 - 8) + 64));
        }
        else
        {
          v305 = v117;
          *v119 = *v120;
          v238 = *(int *)(v121 + 20);
          __dste = (char *)v119 + v238;
          v239 = (char *)v120 + v238;
          v240 = sub_1AD63AF28();
          v241 = *(_QWORD *)(v240 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v241 + 48))(v239, 1, v240))
          {
            v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(__dste, v239, *(_QWORD *)(*(_QWORD *)(v242 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v241 + 32))(__dste, v239, v240);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v241 + 56))(__dste, 0, 1, v240);
          }
          *(_QWORD *)((char *)v119 + *(int *)(v121 + 24)) = *(_QWORD *)((char *)v120 + *(int *)(v121 + 24));
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v122 + 56))(v119, 0, 1, v121);
          v117 = v305;
        }
        *(_QWORD *)((char *)a1 + *(int *)(v117 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(v117 + 40));
        goto LABEL_134;
      case 0xBu:
        v124 = a2[1];
        *a1 = *a2;
        a1[1] = v124;
        v125 = a2[3];
        a1[2] = a2[2];
        a1[3] = v125;
        v126 = a2[7];
        a1[6] = a2[6];
        a1[7] = v126;
        v127 = a2[5];
        a1[4] = a2[4];
        a1[5] = v127;
        *(_OWORD *)((char *)a1 + 185) = *(_OWORD *)((char *)a2 + 185);
        v128 = a2[11];
        a1[10] = a2[10];
        a1[11] = v128;
        v129 = a2[9];
        a1[8] = a2[8];
        a1[9] = v129;
        v130 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
        v38 = (_DWORD *)((char *)a1 + v130);
        v39 = (_DWORD *)((char *)a2 + v130);
        v40 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
          goto LABEL_34;
        *v38 = *v39;
        v243 = *(int *)(v40 + 20);
        v194 = (char *)v38 + v243;
        v195 = (char *)v39 + v243;
        v196 = sub_1AD63AF28();
        v197 = *(_QWORD *)(v196 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
          goto LABEL_75;
        goto LABEL_124;
      case 0xCu:
        v131 = a2[1];
        *a1 = *a2;
        a1[1] = v131;
        v132 = a2[3];
        a1[2] = a2[2];
        a1[3] = v132;
        v133 = a2[9];
        a1[8] = a2[8];
        a1[9] = v133;
        a1[10] = a2[10];
        *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
        v134 = a2[5];
        a1[4] = a2[4];
        a1[5] = v134;
        v135 = a2[7];
        a1[6] = a2[6];
        a1[7] = v135;
        v136 = *(int *)(type metadata accessor for LinkPresentation.TVSeasonMetadata(0) + 36);
        v38 = (_DWORD *)((char *)a1 + v136);
        v39 = (_DWORD *)((char *)a2 + v136);
        v40 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
          goto LABEL_34;
        *v38 = *v39;
        v244 = *(int *)(v40 + 20);
        v194 = (char *)v38 + v244;
        v195 = (char *)v39 + v244;
        v196 = sub_1AD63AF28();
        v197 = *(_QWORD *)(v196 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
          goto LABEL_75;
        goto LABEL_124;
      case 0xDu:
        v137 = a2[1];
        *a1 = *a2;
        a1[1] = v137;
        v138 = a2[9];
        a1[8] = a2[8];
        a1[9] = v138;
        *(_OWORD *)((char *)a1 + 153) = *(_OWORD *)((char *)a2 + 153);
        v139 = a2[3];
        a1[2] = a2[2];
        a1[3] = v139;
        v140 = a2[5];
        a1[4] = a2[4];
        a1[5] = v140;
        v141 = a2[7];
        a1[6] = a2[6];
        a1[7] = v141;
        v142 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
        v38 = (_DWORD *)((char *)a1 + v142);
        v39 = (_DWORD *)((char *)a2 + v142);
        v40 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
          goto LABEL_34;
        *v38 = *v39;
        v245 = *(int *)(v40 + 20);
        v194 = (char *)v38 + v245;
        v195 = (char *)v39 + v245;
        v196 = sub_1AD63AF28();
        v197 = *(_QWORD *)(v196 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
          goto LABEL_75;
        goto LABEL_124;
      case 0xEu:
        v143 = a2[1];
        *a1 = *a2;
        a1[1] = v143;
        v144 = a2[3];
        a1[2] = a2[2];
        a1[3] = v144;
        v145 = a2[9];
        a1[8] = a2[8];
        a1[9] = v145;
        a1[10] = a2[10];
        *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
        v146 = a2[5];
        a1[4] = a2[4];
        a1[5] = v146;
        v147 = a2[7];
        a1[6] = a2[6];
        a1[7] = v147;
        v148 = (int *)type metadata accessor for LinkPresentation.MovieMetadata(0);
        v149 = v148[9];
        v150 = (_DWORD *)((char *)a1 + v149);
        v151 = (_DWORD *)((char *)a2 + v149);
        v152 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v153 = *(_QWORD *)(v152 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v153 + 48))(v151, 1, v152))
        {
          v154 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v150, v151, *(_QWORD *)(*(_QWORD *)(v154 - 8) + 64));
        }
        else
        {
          *v150 = *v151;
          v246 = *(int *)(v152 + 20);
          __dstf = (char *)v150 + v246;
          v247 = (char *)v151 + v246;
          v248 = sub_1AD63AF28();
          v306 = *(_QWORD *)(v248 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v306 + 48))(v247, 1, v248))
          {
            v249 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(__dstf, v247, *(_QWORD *)(*(_QWORD *)(v249 - 8) + 64));
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v306 + 32))(__dstf, v247, v248);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v306 + 56))(__dstf, 0, 1, v248);
          }
          *(_QWORD *)((char *)v150 + *(int *)(v152 + 24)) = *(_QWORD *)((char *)v151 + *(int *)(v152 + 24));
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v153 + 56))(v150, 0, 1, v152);
        }
        v284 = v148[10];
        v285 = (_OWORD *)((char *)a1 + v284);
        v286 = (_OWORD *)((char *)a2 + v284);
        v287 = v286[5];
        v285[4] = v286[4];
        v285[5] = v287;
        v285[6] = v286[6];
        *(_OWORD *)((char *)v285 + 105) = *(_OWORD *)((char *)v286 + 105);
        v288 = v286[1];
        *v285 = *v286;
        v285[1] = v288;
        v289 = v286[3];
        v285[2] = v286[2];
        v285[3] = v289;
        *(_OWORD *)((char *)a1 + v148[11]) = *(_OWORD *)((char *)a2 + v148[11]);
        goto LABEL_134;
      case 0xFu:
        v155 = a2[1];
        *a1 = *a2;
        a1[1] = v155;
        v156 = a2[3];
        a1[2] = a2[2];
        a1[3] = v156;
        v157 = a2[9];
        a1[8] = a2[8];
        a1[9] = v157;
        a1[10] = a2[10];
        *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
        v158 = a2[5];
        a1[4] = a2[4];
        a1[5] = v158;
        v159 = a2[7];
        a1[6] = a2[6];
        a1[7] = v159;
        v160 = *(int *)(type metadata accessor for LinkPresentation.MovieBundleMetadata(0) + 36);
        v38 = (_DWORD *)((char *)a1 + v160);
        v39 = (_DWORD *)((char *)a2 + v160);
        v40 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
        {
LABEL_34:
          v161 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v161 - 8) + 64));
        }
        else
        {
          *v38 = *v39;
          v250 = *(int *)(v40 + 20);
          v194 = (char *)v38 + v250;
          v195 = (char *)v39 + v250;
          v196 = sub_1AD63AF28();
          v197 = *(_QWORD *)(v196 - 8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v197 + 48))(v195, 1, v196))
          {
LABEL_75:
            v251 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
            memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v251 - 8) + 64));
          }
          else
          {
LABEL_124:
            (*(void (**)(char *, char *, uint64_t))(v197 + 32))(v194, v195, v196);
            (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
          }
          *(_QWORD *)((char *)v38 + *(int *)(v40 + 24)) = *(_QWORD *)((char *)v39 + *(int *)(v40 + 24));
          (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        goto LABEL_134;
      case 0x16u:
        v162 = a2[1];
        *a1 = *a2;
        a1[1] = v162;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
        *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
        *(_OWORD *)((char *)a1 + 145) = *(_OWORD *)((char *)a2 + 145);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        *(_OWORD *)((char *)a1 + 273) = *(_OWORD *)((char *)a2 + 273);
        *(_OWORD *)((char *)a1 + 264) = *(_OWORD *)((char *)a2 + 264);
        *(_OWORD *)((char *)a1 + 248) = *(_OWORD *)((char *)a2 + 248);
        *(_OWORD *)((char *)a1 + 232) = *(_OWORD *)((char *)a2 + 232);
        *(_OWORD *)((char *)a1 + 216) = *(_OWORD *)((char *)a2 + 216);
        *(_OWORD *)((char *)a1 + 200) = *(_OWORD *)((char *)a2 + 200);
        *(_OWORD *)((char *)a1 + 184) = *(_OWORD *)((char *)a2 + 184);
        *(_OWORD *)((char *)a1 + 168) = *(_OWORD *)((char *)a2 + 168);
        v163 = *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
        v164 = (char *)a1 + v163;
        v165 = (char *)a2 + v163;
        v166 = sub_1AD63B03C();
        v167 = *(_QWORD *)(v166 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v167 + 48))(v165, 1, v166))
        {
          v168 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v164, v165, *(_QWORD *)(*(_QWORD *)(v168 - 8) + 64));
        }
        else
        {
LABEL_76:
          (*(void (**)(char *, char *, uint64_t))(v167 + 32))(v164, v165, v166);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v167 + 56))(v164, 0, 1, v166);
        }
        goto LABEL_134;
      case 0x1Au:
        v169 = a2[1];
        *a1 = *a2;
        a1[1] = v169;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *(_OWORD *)((char *)a1 + 104) = *(_OWORD *)((char *)a2 + 104);
        *(_OWORD *)((char *)a1 + 120) = *(_OWORD *)((char *)a2 + 120);
        *(_OWORD *)((char *)a1 + 136) = *(_OWORD *)((char *)a2 + 136);
        *(_OWORD *)((char *)a1 + 145) = *(_OWORD *)((char *)a2 + 145);
        *(_OWORD *)((char *)a1 + 40) = *(_OWORD *)((char *)a2 + 40);
        *(_OWORD *)((char *)a1 + 56) = *(_OWORD *)((char *)a2 + 56);
        *(_OWORD *)((char *)a1 + 72) = *(_OWORD *)((char *)a2 + 72);
        *(_OWORD *)((char *)a1 + 88) = *(_OWORD *)((char *)a2 + 88);
        v170 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
        v171 = v170[9];
        v172 = (char *)a1 + v171;
        v173 = (char *)a2 + v171;
        v174 = sub_1AD63B03C();
        v175 = *(_QWORD *)(v174 - 8);
        v176 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48);
        if (v176(v173, 1, v174))
        {
          v177 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v172, v173, *(_QWORD *)(*(_QWORD *)(v177 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v172, v173, v174);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v172, 0, 1, v174);
        }
        v252 = v170[10];
        v253 = (char *)a1 + v252;
        v254 = (char *)a2 + v252;
        if (v176((char *)a2 + v252, 1, v174))
        {
          v255 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v253, v254, *(_QWORD *)(*(_QWORD *)(v255 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v253, v254, v174);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v253, 0, 1, v174);
        }
        v267 = v170[11];
        v257 = (char *)a1 + v267;
        v258 = (char *)a2 + v267;
        if (v176(v258, 1, v174))
          goto LABEL_82;
        goto LABEL_90;
      case 0x1Eu:
        *a1 = *a2;
        v178 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
        v179 = *(int *)(v178 + 20);
        v180 = (char *)a1 + v179;
        v181 = (char *)a2 + v179;
        v174 = sub_1AD63B03C();
        v175 = *(_QWORD *)(v174 - 8);
        v182 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v175 + 48);
        if (v182(v181, 1, v174))
        {
          v183 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v180, v181, *(_QWORD *)(*(_QWORD *)(v183 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v180, v181, v174);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v180, 0, 1, v174);
        }
        v256 = *(int *)(v178 + 24);
        v257 = (char *)a1 + v256;
        v258 = (char *)a2 + v256;
        if (v182(v258, 1, v174))
        {
LABEL_82:
          v259 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v257, v258, *(_QWORD *)(*(_QWORD *)(v259 - 8) + 64));
        }
        else
        {
LABEL_90:
          (*(void (**)(char *, char *, uint64_t))(v175 + 32))(v257, v258, v174);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v175 + 56))(v257, 0, 1, v174);
        }
LABEL_134:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1AD09FFF4()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;

  result = type metadata accessor for LinkPresentation.SongMetadata(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for LinkPresentation.AlbumMetadata(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for LinkPresentation.MusicVideoMetadata(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for LinkPresentation.ArtistMetadata(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for LinkPresentation.PlaylistMetadata(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for LinkPresentation.RadioMetadata(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for LinkPresentation.SoftwareMetadata(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for LinkPresentation.BookMetadata(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for LinkPresentation.AudioBookMetadata(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for LinkPresentation.PodcastMetadata(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for LinkPresentation.TVEpisodeMetadata(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for LinkPresentation.TVSeasonMetadata(319);
                          if (v13 <= 0x3F)
                          {
                            result = type metadata accessor for LinkPresentation.TVShowMetadata(319);
                            if (v14 <= 0x3F)
                            {
                              result = type metadata accessor for LinkPresentation.MovieMetadata(319);
                              if (v15 <= 0x3F)
                              {
                                result = type metadata accessor for LinkPresentation.MovieBundleMetadata(319);
                                if (v16 <= 0x3F)
                                {
                                  result = type metadata accessor for LinkPresentation.FileMetadata(319);
                                  if (v17 <= 0x3F)
                                  {
                                    result = type metadata accessor for LinkPresentation.PhotosMomentMetadata(319);
                                    if (v18 <= 0x3F)
                                    {
                                      result = type metadata accessor for LinkPresentation.WalletPassMetadata(319);
                                      if (v19 <= 0x3F)
                                      {
                                        swift_initEnumMetadataMultiPayload();
                                        return 0;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AD0A02CC(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _DWORD *v20;
  _DWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v31;
  void *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  uint64_t v42;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v11;
    v12 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v12;
    v13 = a2[14];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13 == 1)
    {
      v14 = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 176) = v14;
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 201) = *(_OWORD *)((char *)a2 + 201);
      v15 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v15;
      v16 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v16;
    }
    else
    {
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_QWORD *)(a1 + 112) = v13;
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
      *(_QWORD *)(a1 + 136) = a2[17];
      v18 = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v18;
      *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 23);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
      *(_BYTE *)(a1 + 216) = *((_BYTE *)a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v19 = a3[11];
    v20 = (_DWORD *)(a1 + v19);
    v21 = (_DWORD *)((char *)a2 + v19);
    v22 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
    v23 = *(_QWORD *)(v22 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
    {
      v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    }
    else
    {
      *v20 = *v21;
      v25 = *(int *)(v22 + 20);
      __dst = (char *)v20 + v25;
      v26 = (char *)v21 + v25;
      v27 = sub_1AD63AF28();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(__dst, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
      }
      *(_QWORD *)((char *)v20 + *(int *)(v22 + 24)) = *(_QWORD *)((char *)v21 + *(int *)(v22 + 24));
      v30 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v23 + 56);
      swift_bridgeObjectRetain();
      v30(v20, 0, 1, v22);
    }
    v31 = a3[12];
    v32 = (void *)(a1 + v31);
    v33 = (char *)a2 + v31;
    v34 = sub_1AD63AF28();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    v37 = a3[14];
    *(_QWORD *)(a1 + a3[13]) = *(uint64_t *)((char *)a2 + a3[13]);
    v38 = a1 + v37;
    v39 = (uint64_t)a2 + v37;
    v40 = *(uint64_t *)((char *)a2 + v37 + 8);
    swift_bridgeObjectRetain();
    if (v40 == 1)
    {
      v41 = *(_OWORD *)(v39 + 16);
      *(_OWORD *)v38 = *(_OWORD *)v39;
      *(_OWORD *)(v38 + 16) = v41;
      *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
      *(_OWORD *)(v38 + 41) = *(_OWORD *)(v39 + 41);
    }
    else
    {
      *(_QWORD *)v38 = *(_QWORD *)v39;
      *(_QWORD *)(v38 + 8) = v40;
      v42 = *(_QWORD *)(v39 + 24);
      *(_QWORD *)(v38 + 16) = *(_QWORD *)(v39 + 16);
      *(_QWORD *)(v38 + 24) = v42;
      *(_QWORD *)(v38 + 32) = *(_QWORD *)(v39 + 32);
      *(_BYTE *)(v38 + 40) = *(_BYTE *)(v39 + 40);
      *(_QWORD *)(v38 + 48) = *(_QWORD *)(v39 + 48);
      *(_BYTE *)(v38 + 56) = *(_BYTE *)(v39 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_1AD0A064C(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + a2[11];
  v5 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_1AD63AF28();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  v9 = a1 + a2[12];
  v10 = sub_1AD63AF28();
  v11 = *(_QWORD *)(v10 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + a2[14] + 8);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD0A07C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  v12 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 == 1)
  {
    v13 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v13;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
    v14 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v14;
    v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
  }
  else
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    v16 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v16;
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v17 = a3[11];
  v18 = (_DWORD *)(a1 + v17);
  v19 = (_DWORD *)(a2 + v17);
  v20 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v21 = *(_QWORD *)(v20 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    v23 = *(int *)(v20 + 20);
    __dst = (char *)v18 + v23;
    v24 = (char *)v19 + v23;
    v25 = sub_1AD63AF28();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
    }
    *(_QWORD *)((char *)v18 + *(int *)(v20 + 24)) = *(_QWORD *)((char *)v19 + *(int *)(v20 + 24));
    v28 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56);
    swift_bridgeObjectRetain();
    v28(v18, 0, 1, v20);
  }
  v29 = a3[12];
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  v32 = sub_1AD63AF28();
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  v35 = a3[14];
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  v36 = a1 + v35;
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a2 + v35 + 8);
  swift_bridgeObjectRetain();
  if (v38 == 1)
  {
    v39 = *(_OWORD *)(v37 + 16);
    *(_OWORD *)v36 = *(_OWORD *)v37;
    *(_OWORD *)(v36 + 16) = v39;
    *(_OWORD *)(v36 + 32) = *(_OWORD *)(v37 + 32);
    *(_OWORD *)(v36 + 41) = *(_OWORD *)(v37 + 41);
  }
  else
  {
    *(_QWORD *)v36 = *(_QWORD *)v37;
    *(_QWORD *)(v36 + 8) = v38;
    v40 = *(_QWORD *)(v37 + 24);
    *(_QWORD *)(v36 + 16) = *(_QWORD *)(v37 + 16);
    *(_QWORD *)(v36 + 24) = v40;
    *(_QWORD *)(v36 + 32) = *(_QWORD *)(v37 + 32);
    *(_BYTE *)(v36 + 40) = *(_BYTE *)(v37 + 40);
    *(_QWORD *)(v36 + 48) = *(_QWORD *)(v37 + 48);
    *(_BYTE *)(v36 + 56) = *(_BYTE *)(v37 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD0A0B1C(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_DWORD *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t (*v47)(char *, uint64_t, uint64_t);
  int v48;
  size_t v49;
  void *v50;
  void (*v51)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v52;
  void *v53;
  void *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(void *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 *v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  char *__dst;
  void *__dsta;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 96);
  v7 = (__int128 *)(a2 + 96);
  v8 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 112);
      v11 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 112) = v10;
      v12 = *(_OWORD *)(a2 + 160);
      v13 = *(_OWORD *)(a2 + 176);
      v14 = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
      *(_OWORD *)(a1 + 176) = v13;
      *(_OWORD *)(a1 + 192) = v14;
      *(_OWORD *)(a1 + 160) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      v21 = *(_OWORD *)(a2 + 144);
      v22 = *(_OWORD *)(a2 + 160);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_OWORD *)(a1 + 144) = v21;
      *(_OWORD *)(a1 + 160) = v22;
      v23 = *(_OWORD *)(a2 + 184);
      v24 = *(_OWORD *)(a2 + 200);
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *(_OWORD *)(a1 + 200) = v24;
      *(_OWORD *)(a1 + 184) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1AD0661D0(a1 + 96);
    v15 = *(_OWORD *)(a2 + 144);
    v17 = *v7;
    v16 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *v6 = v17;
    *(_OWORD *)(a1 + 112) = v16;
    v19 = *(_OWORD *)(a2 + 176);
    v18 = *(_OWORD *)(a2 + 192);
    v20 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
    *(_OWORD *)(a1 + 176) = v19;
    *(_OWORD *)(a1 + 192) = v18;
    *(_OWORD *)(a1 + 160) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)(a2 + 144);
    v26 = *(_OWORD *)(a2 + 160);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_OWORD *)(a1 + 144) = v25;
    *(_OWORD *)(a1 + 160) = v26;
    v27 = *(_OWORD *)(a2 + 184);
    v28 = *(_OWORD *)(a2 + 200);
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = v28;
    *(_OWORD *)(a1 + 184) = v27;
  }
  v29 = a3[11];
  v30 = (_DWORD *)(a1 + v29);
  v31 = (_DWORD *)(a2 + v29);
  v32 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (v36)
    {
      sub_1AD066230((uint64_t)v30, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_14;
    }
    *v30 = *v31;
    v43 = *(int *)(v32 + 20);
    v44 = (char *)v30 + v43;
    v45 = (char *)v31 + v43;
    v46 = sub_1AD63AF28();
    v77 = *(_QWORD *)(v46 - 8);
    v47 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v77 + 48);
    __dsta = v44;
    LODWORD(v44) = v47(v44, 1, v46);
    v48 = v47(v45, 1, v46);
    if ((_DWORD)v44)
    {
      if (!v48)
      {
        (*(void (**)(void *, char *, uint64_t))(v77 + 16))(__dsta, v45, v46);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(__dsta, 0, 1, v46);
        goto LABEL_25;
      }
      v49 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v50 = __dsta;
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(void *, char *, uint64_t))(v77 + 24))(__dsta, v45, v46);
        goto LABEL_25;
      }
      (*(void (**)(void *, uint64_t))(v77 + 8))(__dsta, v46);
      v49 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v50 = __dsta;
    }
    memcpy(v50, v45, v49);
LABEL_25:
    *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_26;
  }
  if (v36)
  {
LABEL_14:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_26;
  }
  *v30 = *v31;
  v37 = *(int *)(v32 + 20);
  __dst = (char *)v30 + v37;
  v38 = (char *)v31 + v37;
  v39 = sub_1AD63AF28();
  v40 = *(_QWORD *)(v39 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
  {
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(__dst, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v40 + 16))(__dst, v38, v39);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(__dst, 0, 1, v39);
  }
  *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
  v51 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
  swift_bridgeObjectRetain();
  v51(v30, 0, 1, v32);
LABEL_26:
  v52 = a3[12];
  v53 = (void *)(a1 + v52);
  v54 = (void *)(a2 + v52);
  v55 = sub_1AD63AF28();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(void *, void *, uint64_t))(v56 + 16))(v53, v54, v55);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  if (v59)
  {
    (*(void (**)(void *, uint64_t))(v56 + 8))(v53, v55);
LABEL_31:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(void *, void *, uint64_t))(v56 + 24))(v53, v54, v55);
LABEL_32:
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v61 = a3[14];
  v62 = a1 + v61;
  v63 = (__int128 *)(a2 + v61);
  v64 = *(_QWORD *)(a1 + v61 + 8);
  v65 = *((_QWORD *)v63 + 1);
  if (v64 == 1)
  {
    if (v65 == 1)
    {
      v66 = *v63;
      v67 = v63[1];
      v68 = v63[2];
      *(_OWORD *)(v62 + 41) = *(__int128 *)((char *)v63 + 41);
      *(_OWORD *)(v62 + 16) = v67;
      *(_OWORD *)(v62 + 32) = v68;
      *(_OWORD *)v62 = v66;
    }
    else
    {
      *(_QWORD *)v62 = *(_QWORD *)v63;
      *(_QWORD *)(v62 + 8) = *((_QWORD *)v63 + 1);
      *(_QWORD *)(v62 + 16) = *((_QWORD *)v63 + 2);
      *(_QWORD *)(v62 + 24) = *((_QWORD *)v63 + 3);
      v72 = *((_QWORD *)v63 + 4);
      *(_BYTE *)(v62 + 40) = *((_BYTE *)v63 + 40);
      *(_QWORD *)(v62 + 32) = v72;
      v73 = *((_QWORD *)v63 + 6);
      *(_BYTE *)(v62 + 56) = *((_BYTE *)v63 + 56);
      *(_QWORD *)(v62 + 48) = v73;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v65 == 1)
  {
    sub_1AD0A11EC(v62);
    v70 = v63[1];
    v69 = v63[2];
    v71 = *v63;
    *(_OWORD *)(v62 + 41) = *(__int128 *)((char *)v63 + 41);
    *(_OWORD *)(v62 + 16) = v70;
    *(_OWORD *)(v62 + 32) = v69;
    *(_OWORD *)v62 = v71;
  }
  else
  {
    *(_QWORD *)v62 = *(_QWORD *)v63;
    *(_QWORD *)(v62 + 8) = *((_QWORD *)v63 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v62 + 16) = *((_QWORD *)v63 + 2);
    *(_QWORD *)(v62 + 24) = *((_QWORD *)v63 + 3);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v74 = *((_QWORD *)v63 + 4);
    *(_BYTE *)(v62 + 40) = *((_BYTE *)v63 + 40);
    *(_QWORD *)(v62 + 32) = v74;
    v75 = *((_QWORD *)v63 + 6);
    *(_BYTE *)(v62 + 56) = *((_BYTE *)v63 + 56);
    *(_QWORD *)(v62 + 48) = v75;
  }
  return a1;
}

uint64_t sub_1AD0A11EC(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AD0A121C(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  v9 = a2[9];
  a1[8] = a2[8];
  a1[9] = v9;
  v10 = a2[7];
  a1[6] = a2[6];
  a1[7] = v10;
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)a2 + 201);
  v11 = a2[12];
  v12 = a2[10];
  v13 = a3[11];
  v14 = (_DWORD *)((char *)a1 + v13);
  v15 = (_DWORD *)((char *)a2 + v13);
  a1[11] = a2[11];
  a1[12] = v11;
  a1[10] = v12;
  v16 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    *v14 = *v15;
    v19 = *(int *)(v16 + 20);
    __dst = (char *)v14 + v19;
    v20 = (char *)v15 + v19;
    v21 = sub_1AD63AF28();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(__dst, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(__dst, 0, 1, v21);
    }
    *(_QWORD *)((char *)v14 + *(int *)(v16 + 24)) = *(_QWORD *)((char *)v15 + *(int *)(v16 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v24 = a3[12];
  v25 = (char *)a1 + v24;
  v26 = (char *)a2 + v24;
  v27 = sub_1AD63AF28();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  v30 = a3[14];
  *(_QWORD *)((char *)a1 + a3[13]) = *(_QWORD *)((char *)a2 + a3[13]);
  v31 = (_OWORD *)((char *)a1 + v30);
  v32 = (_OWORD *)((char *)a2 + v30);
  v33 = v32[1];
  *v31 = *v32;
  v31[1] = v33;
  v31[2] = v32[2];
  *(_OWORD *)((char *)v31 + 41) = *(_OWORD *)((char *)v32 + 41);
  return a1;
}

uint64_t sub_1AD0A1468(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)(_DWORD *, uint64_t, uint64_t);
  int v23;
  int v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  size_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  void *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(void *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v55;
  char *__dst;
  void *__dsta;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112) == 1)
    goto LABEL_4;
  v12 = *(_QWORD *)(a2 + 112);
  if (v12 == 1)
  {
    sub_1AD0661D0(a1 + 96);
LABEL_4:
    v13 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v13;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
    v14 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v14;
    v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  v16 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v16;
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
LABEL_6:
  v17 = a3[11];
  v18 = (_DWORD *)(a1 + v17);
  v19 = (_DWORD *)(a2 + v17);
  v20 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (!v23)
  {
    if (v24)
    {
      sub_1AD066230((uint64_t)v18, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_12;
    }
    *v18 = *v19;
    v31 = *(int *)(v20 + 20);
    v32 = (char *)v18 + v31;
    v33 = (char *)v19 + v31;
    v34 = sub_1AD63AF28();
    v55 = *(_QWORD *)(v34 - 8);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v55 + 48);
    __dsta = v32;
    LODWORD(v32) = v35(v32, 1, v34);
    v36 = v35(v33, 1, v34);
    if ((_DWORD)v32)
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v55 + 32))(__dsta, v33, v34);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v55 + 56))(__dsta, 0, 1, v34);
        goto LABEL_23;
      }
      v37 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v38 = __dsta;
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v55 + 40))(__dsta, v33, v34);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v55 + 8))(__dsta, v34);
      v37 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v38 = __dsta;
    }
    memcpy(v38, v33, v37);
LABEL_23:
    *(_QWORD *)((char *)v18 + *(int *)(v20 + 24)) = *(_QWORD *)((char *)v19 + *(int *)(v20 + 24));
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if (v24)
  {
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_24;
  }
  *v18 = *v19;
  v25 = *(int *)(v20 + 20);
  __dst = (char *)v18 + v25;
  v26 = (char *)v19 + v25;
  v27 = sub_1AD63AF28();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(__dst, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(__dst, 0, 1, v27);
  }
  *(_QWORD *)((char *)v18 + *(int *)(v20 + 24)) = *(_QWORD *)((char *)v19 + *(int *)(v20 + 24));
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v18, 0, 1, v20);
LABEL_24:
  v39 = a3[12];
  v40 = (void *)(a1 + v39);
  v41 = (void *)(a2 + v39);
  v42 = sub_1AD63AF28();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v40, 1, v42);
  v46 = v44(v41, 1, v42);
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(void *, void *, uint64_t))(v43 + 32))(v40, v41, v42);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v40, 0, 1, v42);
      goto LABEL_30;
    }
    goto LABEL_29;
  }
  if (v46)
  {
    (*(void (**)(void *, uint64_t))(v43 + 8))(v40, v42);
LABEL_29:
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(void *, void *, uint64_t))(v43 + 40))(v40, v41, v42);
LABEL_30:
  *(_QWORD *)(a1 + a3[13]) = *(_QWORD *)(a2 + a3[13]);
  swift_bridgeObjectRelease();
  v48 = a3[14];
  v49 = a1 + v48;
  v50 = a2 + v48;
  if (*(_QWORD *)(a1 + v48 + 8) != 1)
  {
    v51 = *(_QWORD *)(v50 + 8);
    if (v51 != 1)
    {
      *(_QWORD *)v49 = *(_QWORD *)v50;
      *(_QWORD *)(v49 + 8) = v51;
      swift_bridgeObjectRelease();
      v53 = *(_QWORD *)(v50 + 24);
      *(_QWORD *)(v49 + 16) = *(_QWORD *)(v50 + 16);
      *(_QWORD *)(v49 + 24) = v53;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v49 + 32) = *(_QWORD *)(v50 + 32);
      *(_BYTE *)(v49 + 40) = *(_BYTE *)(v50 + 40);
      *(_QWORD *)(v49 + 48) = *(_QWORD *)(v50 + 48);
      *(_BYTE *)(v49 + 56) = *(_BYTE *)(v50 + 56);
      return a1;
    }
    sub_1AD0A11EC(v49);
  }
  v52 = *(_OWORD *)(v50 + 16);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *(_OWORD *)(v49 + 16) = v52;
  *(_OWORD *)(v49 + 32) = *(_OWORD *)(v50 + 32);
  *(_OWORD *)(v49 + 41) = *(_OWORD *)(v50 + 41);
  return a1;
}

uint64_t sub_1AD0A1970()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A197C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 44);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_1AD0A1A30()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A1A3C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 44);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 48);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1AD0A1AE0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1ACFFECF8(319, &qword_1ED2E1DC8, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ArtworkMetadata);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1AD0A1BD0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A1BDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, &qword_1EECD1CB8);
}

uint64_t sub_1AD0A1BE8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A1BF4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, &qword_1EECD1CB8);
}

void sub_1AD0A1C00()
{
  sub_1AD0A9C68();
}

uint64_t sub_1AD0A1C24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A1C30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, &qword_1EECD1CB8);
}

uint64_t sub_1AD0A1C3C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A1C48(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, &qword_1EECD1CB8);
}

void sub_1AD0A1C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1AD0B4B34(a1, a2, a3, (uint64_t)&unk_1AD64B580, (uint64_t)&unk_1AD64B580, &qword_1ED2E1DC8, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ArtworkMetadata);
}

uint64_t sub_1AD0A1C74(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_DWORD *, _QWORD, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 == 1)
    {
      v12 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v13 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v13;
      v14 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v14;
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_QWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
      *(_QWORD *)(a1 + 104) = a2[13];
      v16 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v16;
      *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
      *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v17 = *(int *)(a3 + 36);
    v18 = (_DWORD *)(a1 + v17);
    v19 = (_DWORD *)((char *)a2 + v17);
    v20 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *v18 = *v19;
      v23 = *(int *)(v20 + 20);
      v24 = (char *)v18 + v23;
      v25 = (char *)v19 + v23;
      v26 = sub_1AD63AF28();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v24, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
      }
      *(_QWORD *)((char *)v18 + *(int *)(v20 + 24)) = *(_QWORD *)((char *)v19 + *(int *)(v20 + 24));
      v29 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56);
      swift_bridgeObjectRetain();
      v29(v18, 0, 1, v20);
    }
  }
  return a1;
}

uint64_t sub_1AD0A1EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = v4 + *(int *)(v5 + 20);
    v8 = sub_1AD63AF28();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD0A1FB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_DWORD *, _QWORD, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v15 = *(int *)(a3 + 36);
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v21 = *(int *)(v18 + 20);
    v22 = (char *)v16 + v21;
    v23 = (char *)v17 + v21;
    v24 = sub_1AD63AF28();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v22, v23, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v22, 0, 1, v24);
    }
    *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
    v27 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    v27(v16, 0, 1, v18);
  }
  return a1;
}

_OWORD *sub_1AD0A21DC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[9];
  a1[8] = a2[8];
  a1[9] = v6;
  a1[10] = a2[10];
  *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  v9 = *(int *)(a3 + 36);
  v10 = (_DWORD *)((char *)a1 + v9);
  v11 = (_DWORD *)((char *)a2 + v9);
  a1[6] = a2[6];
  a1[7] = v8;
  v12 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v10 = *v11;
    v15 = *(int *)(v12 + 20);
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_1AD63AF28();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *(_QWORD *)((char *)v10 + *(int *)(v12 + 24)) = *(_QWORD *)((char *)v11 + *(int *)(v12 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_1AD0A235C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A2368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, &qword_1EECD1CB8);
}

uint64_t sub_1AD0A2374()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A2380(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, &qword_1EECD1CB8);
}

uint64_t *sub_1AD0A238C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int (*v14)(char *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(_DWORD *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v41)(char *, uint64_t, uint64_t);
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    v10 = a3[8];
    __dst = (char *)a1 + v10;
    v11 = (char *)a2 + v10;
    a1[6] = a2[6];
    a1[7] = v9;
    v12 = sub_1AD63AF28();
    v13 = *(_QWORD *)(v12 - 8);
    v14 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v41 = v14;
    if (v14(v11, 1, v12))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
    }
    v17 = a3[9];
    v18 = a3[10];
    v19 = (uint64_t *)((char *)v4 + v17);
    v20 = (uint64_t *)((char *)a2 + v17);
    v21 = v20[1];
    *v19 = *v20;
    v19[1] = v21;
    v22 = (char *)v4 + v18;
    v23 = (char *)a2 + v18;
    v24 = *(uint64_t *)((char *)a2 + v18 + 16);
    swift_bridgeObjectRetain();
    if (v24 == 1)
    {
      v25 = *((_OWORD *)v23 + 5);
      *((_OWORD *)v22 + 4) = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 5) = v25;
      *((_OWORD *)v22 + 6) = *((_OWORD *)v23 + 6);
      *(_OWORD *)(v22 + 105) = *(_OWORD *)(v23 + 105);
      v26 = *((_OWORD *)v23 + 1);
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_OWORD *)v22 + 1) = v26;
      v27 = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 2) = *((_OWORD *)v23 + 2);
      *((_OWORD *)v22 + 3) = v27;
    }
    else
    {
      *(_OWORD *)v22 = *(_OWORD *)v23;
      *((_QWORD *)v22 + 2) = v24;
      *(_OWORD *)(v22 + 24) = *(_OWORD *)(v23 + 24);
      *((_QWORD *)v22 + 5) = *((_QWORD *)v23 + 5);
      v28 = *((_OWORD *)v23 + 4);
      *((_OWORD *)v22 + 3) = *((_OWORD *)v23 + 3);
      *((_OWORD *)v22 + 4) = v28;
      v22[80] = v23[80];
      *(_OWORD *)(v22 + 88) = *(_OWORD *)(v23 + 88);
      *(_OWORD *)(v22 + 104) = *(_OWORD *)(v23 + 104);
      v22[120] = v23[120];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v29 = a3[11];
    v30 = (_DWORD *)((char *)v4 + v29);
    v31 = (_DWORD *)((char *)a2 + v29);
    v32 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
    v33 = *(_QWORD *)(v32 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
    {
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    }
    else
    {
      *v30 = *v31;
      v35 = *(int *)(v32 + 20);
      v36 = (char *)v30 + v35;
      v37 = (char *)v31 + v35;
      if (v41((char *)v31 + v35, 1, v12))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v36, v37, v12);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v36, 0, 1, v12);
      }
      *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
      v39 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
      swift_bridgeObjectRetain();
      v39(v30, 0, 1, v32);
    }
  }
  return v4;
}

uint64_t sub_1AD0A2684(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[8];
  v5 = sub_1AD63AF28();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + a2[10] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v8 = a1 + a2[11];
  v9 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(v8, 1, v9);
  if (!(_DWORD)result)
  {
    v11 = v8 + *(int *)(v9 + 20);
    if (!v7(v11, 1, v5))
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v11, v5);
    return swift_bridgeObjectRelease();
  }
  return result;
}

_QWORD *sub_1AD0A27BC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  _DWORD *v28;
  _DWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(_DWORD *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  char *__dst;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  v9 = a3[8];
  __dst = (char *)a1 + v9;
  v10 = (char *)a2 + v9;
  a1[6] = a2[6];
  a1[7] = v8;
  v11 = sub_1AD63AF28();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v39 = v13;
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(__dst, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
  }
  v15 = a3[9];
  v16 = a3[10];
  v17 = (_QWORD *)((char *)a1 + v15);
  v18 = (_QWORD *)((char *)a2 + v15);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  v20 = (char *)a1 + v16;
  v21 = (char *)a2 + v16;
  v22 = *(_QWORD *)((char *)a2 + v16 + 16);
  swift_bridgeObjectRetain();
  if (v22 == 1)
  {
    v23 = *((_OWORD *)v21 + 5);
    *((_OWORD *)v20 + 4) = *((_OWORD *)v21 + 4);
    *((_OWORD *)v20 + 5) = v23;
    *((_OWORD *)v20 + 6) = *((_OWORD *)v21 + 6);
    *(_OWORD *)(v20 + 105) = *(_OWORD *)(v21 + 105);
    v24 = *((_OWORD *)v21 + 1);
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_OWORD *)v20 + 1) = v24;
    v25 = *((_OWORD *)v21 + 3);
    *((_OWORD *)v20 + 2) = *((_OWORD *)v21 + 2);
    *((_OWORD *)v20 + 3) = v25;
  }
  else
  {
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *((_QWORD *)v20 + 2) = v22;
    *(_OWORD *)(v20 + 24) = *(_OWORD *)(v21 + 24);
    *((_QWORD *)v20 + 5) = *((_QWORD *)v21 + 5);
    v26 = *((_OWORD *)v21 + 4);
    *((_OWORD *)v20 + 3) = *((_OWORD *)v21 + 3);
    *((_OWORD *)v20 + 4) = v26;
    v20[80] = v21[80];
    *(_OWORD *)(v20 + 88) = *(_OWORD *)(v21 + 88);
    *(_OWORD *)(v20 + 104) = *(_OWORD *)(v21 + 104);
    v20[120] = v21[120];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v27 = a3[11];
  v28 = (_DWORD *)((char *)a1 + v27);
  v29 = (_DWORD *)((char *)a2 + v27);
  v30 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v31 = *(_QWORD *)(v30 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
  {
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
  }
  else
  {
    *v28 = *v29;
    v33 = *(int *)(v30 + 20);
    v34 = (char *)v28 + v33;
    v35 = (char *)v29 + v33;
    if (v39((char *)v29 + v33, 1, v11))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v34, v35, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v34, 0, 1, v11);
    }
    *(_QWORD *)((char *)v28 + *(int *)(v30 + 24)) = *(_QWORD *)((char *)v29 + *(int *)(v30 + 24));
    v37 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v31 + 56);
    swift_bridgeObjectRetain();
    v37(v28, 0, 1, v30);
  }
  return a1;
}

_QWORD *sub_1AD0A2A88(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t (*v48)(char *, uint64_t, uint64_t);
  int v49;
  int v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  int v59;
  int v60;
  void (*v61)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v62;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[8];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[9];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[10];
  v19 = (uint64_t)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = *(_QWORD *)((char *)a1 + v18 + 16);
  v22 = *(_QWORD *)((char *)a2 + v18 + 16);
  if (v21 == 1)
  {
    if (v22 == 1)
    {
      v23 = *(_OWORD *)v20;
      v24 = *((_OWORD *)v20 + 1);
      v25 = *((_OWORD *)v20 + 3);
      *(_OWORD *)(v19 + 32) = *((_OWORD *)v20 + 2);
      *(_OWORD *)(v19 + 48) = v25;
      *(_OWORD *)v19 = v23;
      *(_OWORD *)(v19 + 16) = v24;
      v26 = *((_OWORD *)v20 + 4);
      v27 = *((_OWORD *)v20 + 5);
      v28 = *((_OWORD *)v20 + 6);
      *(_OWORD *)(v19 + 105) = *(_OWORD *)(v20 + 105);
      *(_OWORD *)(v19 + 80) = v27;
      *(_OWORD *)(v19 + 96) = v28;
      *(_OWORD *)(v19 + 64) = v26;
    }
    else
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
      *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
      *(_QWORD *)(v19 + 24) = *((_QWORD *)v20 + 3);
      *(_QWORD *)(v19 + 32) = *((_QWORD *)v20 + 4);
      *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
      v35 = *((_OWORD *)v20 + 3);
      v36 = *((_OWORD *)v20 + 4);
      *(_BYTE *)(v19 + 80) = v20[80];
      *(_OWORD *)(v19 + 48) = v35;
      *(_OWORD *)(v19 + 64) = v36;
      v37 = *(_OWORD *)(v20 + 88);
      v38 = *(_OWORD *)(v20 + 104);
      *(_BYTE *)(v19 + 120) = v20[120];
      *(_OWORD *)(v19 + 104) = v38;
      *(_OWORD *)(v19 + 88) = v37;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v22 == 1)
  {
    sub_1AD0661D0(v19);
    v29 = *((_OWORD *)v20 + 3);
    v31 = *(_OWORD *)v20;
    v30 = *((_OWORD *)v20 + 1);
    *(_OWORD *)(v19 + 32) = *((_OWORD *)v20 + 2);
    *(_OWORD *)(v19 + 48) = v29;
    *(_OWORD *)v19 = v31;
    *(_OWORD *)(v19 + 16) = v30;
    v33 = *((_OWORD *)v20 + 5);
    v32 = *((_OWORD *)v20 + 6);
    v34 = *((_OWORD *)v20 + 4);
    *(_OWORD *)(v19 + 105) = *(_OWORD *)(v20 + 105);
    *(_OWORD *)(v19 + 80) = v33;
    *(_OWORD *)(v19 + 96) = v32;
    *(_OWORD *)(v19 + 64) = v34;
  }
  else
  {
    *(_QWORD *)v19 = *(_QWORD *)v20;
    *(_QWORD *)(v19 + 8) = *((_QWORD *)v20 + 1);
    *(_QWORD *)(v19 + 16) = *((_QWORD *)v20 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v19 + 24) = *((_QWORD *)v20 + 3);
    *(_QWORD *)(v19 + 32) = *((_QWORD *)v20 + 4);
    *(_QWORD *)(v19 + 40) = *((_QWORD *)v20 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v39 = *((_OWORD *)v20 + 3);
    v40 = *((_OWORD *)v20 + 4);
    *(_BYTE *)(v19 + 80) = v20[80];
    *(_OWORD *)(v19 + 48) = v39;
    *(_OWORD *)(v19 + 64) = v40;
    v41 = *(_OWORD *)(v20 + 88);
    v42 = *(_OWORD *)(v20 + 104);
    *(_BYTE *)(v19 + 120) = v20[120];
    *(_OWORD *)(v19 + 104) = v42;
    *(_OWORD *)(v19 + 88) = v41;
  }
  v43 = a3[11];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v47 + 48);
  v49 = v48(v44, 1, v46);
  v50 = v48(v45, 1, v46);
  if (!v49)
  {
    if (v50)
    {
      sub_1AD066230((uint64_t)v44, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_20;
    }
    *(_DWORD *)v44 = *(_DWORD *)v45;
    v56 = *(int *)(v46 + 20);
    v57 = &v44[v56];
    v58 = &v45[v56];
    v59 = v11(&v44[v56], 1, v9);
    v60 = v11(v58, 1, v9);
    if (v59)
    {
      if (!v60)
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v57, v58, v9);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v57, 0, 1, v9);
LABEL_30:
        *(_QWORD *)&v44[*(int *)(v46 + 24)] = *(_QWORD *)&v45[*(int *)(v46 + 24)];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v60)
      {
        (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v57, v58, v9);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v10 + 8))(v57, v9);
    }
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    goto LABEL_30;
  }
  if (v50)
  {
LABEL_20:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    return a1;
  }
  *(_DWORD *)v44 = *(_DWORD *)v45;
  v51 = *(int *)(v46 + 20);
  v52 = &v44[v51];
  v53 = &v45[v51];
  if (v11(&v45[v51], 1, v9))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v52, v53, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v52, 0, 1, v9);
  }
  *(_QWORD *)&v44[*(int *)(v46 + 24)] = *(_QWORD *)&v45[*(int *)(v46 + 24)];
  v61 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v47 + 56);
  swift_bridgeObjectRetain();
  v61(v44, 0, 1, v46);
  return a1;
}

_OWORD *sub_1AD0A2FAC(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _DWORD *v23;
  _DWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a3[8];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1AD63AF28();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  if (v13(v10, 1, v11))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v15 = a3[10];
  *(_OWORD *)((char *)a1 + a3[9]) = *(_OWORD *)((char *)a2 + a3[9]);
  v16 = (_OWORD *)((char *)a1 + v15);
  v17 = (_OWORD *)((char *)a2 + v15);
  v18 = v17[5];
  v16[4] = v17[4];
  v16[5] = v18;
  v16[6] = v17[6];
  *(_OWORD *)((char *)v16 + 105) = *(_OWORD *)((char *)v17 + 105);
  v19 = v17[1];
  *v16 = *v17;
  v16[1] = v19;
  v20 = v17[2];
  v21 = v17[3];
  v22 = a3[11];
  v23 = (_DWORD *)((char *)a1 + v22);
  v24 = (_DWORD *)((char *)a2 + v22);
  v16[2] = v20;
  v16[3] = v21;
  v25 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v28 = *(int *)(v25 + 20);
    v29 = (char *)v23 + v28;
    v30 = (char *)v24 + v28;
    if (v13((char *)v24 + v28, 1, v11))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v29, v30, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v29, 0, 1, v11);
    }
    *(_QWORD *)((char *)v23 + *(int *)(v25 + 24)) = *(_QWORD *)((char *)v24 + *(int *)(v25 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  return a1;
}

_QWORD *sub_1AD0A31B8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(char *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(char *, uint64_t, uint64_t);
  int v38;
  int v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  int v48;
  int v49;
  uint64_t v50;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = sub_1AD63AF28();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (v16)
  {
    if (!v17)
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v17)
  {
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v13);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v11, v12, v13);
LABEL_7:
  v19 = a3[9];
  v20 = (_QWORD *)((char *)a1 + v19);
  v21 = (_QWORD *)((char *)a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[10];
  v25 = (uint64_t)a1 + v24;
  v26 = (char *)a2 + v24;
  if (*(_QWORD *)((char *)a1 + v24 + 16) == 1)
  {
LABEL_10:
    v28 = *((_OWORD *)v26 + 5);
    *(_OWORD *)(v25 + 64) = *((_OWORD *)v26 + 4);
    *(_OWORD *)(v25 + 80) = v28;
    *(_OWORD *)(v25 + 96) = *((_OWORD *)v26 + 6);
    *(_OWORD *)(v25 + 105) = *(_OWORD *)(v26 + 105);
    v29 = *((_OWORD *)v26 + 1);
    *(_OWORD *)v25 = *(_OWORD *)v26;
    *(_OWORD *)(v25 + 16) = v29;
    v30 = *((_OWORD *)v26 + 3);
    *(_OWORD *)(v25 + 32) = *((_OWORD *)v26 + 2);
    *(_OWORD *)(v25 + 48) = v30;
    goto LABEL_12;
  }
  v27 = *((_QWORD *)v26 + 2);
  if (v27 == 1)
  {
    sub_1AD0661D0(v25);
    goto LABEL_10;
  }
  *(_OWORD *)v25 = *(_OWORD *)v26;
  *(_QWORD *)(v25 + 16) = v27;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v25 + 24) = *(_OWORD *)(v26 + 24);
  *(_QWORD *)(v25 + 40) = *((_QWORD *)v26 + 5);
  swift_bridgeObjectRelease();
  v31 = *((_OWORD *)v26 + 4);
  *(_OWORD *)(v25 + 48) = *((_OWORD *)v26 + 3);
  *(_OWORD *)(v25 + 64) = v31;
  *(_BYTE *)(v25 + 80) = v26[80];
  *(_OWORD *)(v25 + 88) = *(_OWORD *)(v26 + 88);
  *(_OWORD *)(v25 + 104) = *(_OWORD *)(v26 + 104);
  *(_BYTE *)(v25 + 120) = v26[120];
LABEL_12:
  v32 = a3[11];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v36 = *(_QWORD *)(v35 - 8);
  v37 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v36 + 48);
  v38 = v37(v33, 1, v35);
  v39 = v37(v34, 1, v35);
  if (!v38)
  {
    if (v39)
    {
      sub_1AD066230((uint64_t)v33, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_18;
    }
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v45 = *(int *)(v35 + 20);
    v46 = &v33[v45];
    v47 = &v34[v45];
    v48 = v15(&v33[v45], 1, v13);
    v49 = v15(v47, 1, v13);
    if (v48)
    {
      if (!v49)
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v46, v47, v13);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v46, 0, 1, v13);
LABEL_28:
        *(_QWORD *)&v33[*(int *)(v35 + 24)] = *(_QWORD *)&v34[*(int *)(v35 + 24)];
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v49)
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 40))(v46, v47, v13);
        goto LABEL_28;
      }
      (*(void (**)(char *, uint64_t))(v14 + 8))(v46, v13);
    }
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
    goto LABEL_28;
  }
  if (v39)
  {
LABEL_18:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    return a1;
  }
  *(_DWORD *)v33 = *(_DWORD *)v34;
  v40 = *(int *)(v35 + 20);
  v41 = &v33[v40];
  v42 = &v34[v40];
  if (v15(&v34[v40], 1, v13))
  {
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v41, v42, v13);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v41, 0, 1, v13);
  }
  *(_QWORD *)&v33[*(int *)(v35 + 24)] = *(_QWORD *)&v34[*(int *)(v35 + 24)];
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v33, 0, 1, v35);
  return a1;
}

uint64_t sub_1AD0A35C0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A35CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 32);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_1AD0A3680()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A368C(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 32);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1AD0A3730()
{
  unint64_t v0;
  unint64_t v1;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, &qword_1ED2E1DC8, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ArtworkMetadata);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1AD0A37F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A37FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, &qword_1EECD1CB8);
}

uint64_t sub_1AD0A3808()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A3814(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, &qword_1EECD1CB8);
}

uint64_t sub_1AD0A3820(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  char *v20;
  char *v21;
  int *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, int *);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  void (*v41)(char *, _QWORD, uint64_t, int *);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v11;
    v12 = a2[11];
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = v12;
    v13 = a2[14];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13 == 1)
    {
      v14 = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 176) = v14;
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 201) = *(_OWORD *)((char *)a2 + 201);
      v15 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v15;
      v16 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v16;
    }
    else
    {
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_QWORD *)(a1 + 112) = v13;
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
      *(_QWORD *)(a1 + 136) = a2[17];
      v18 = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v18;
      *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 23);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
      *(_BYTE *)(a1 + 216) = *((_BYTE *)a2 + 216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(a1 + 224) = a2[28];
    v19 = a3[12];
    v20 = (char *)(a1 + v19);
    v21 = (char *)a2 + v19;
    v22 = (int *)type metadata accessor for LinkPresentation.Video(0);
    v23 = *((_QWORD *)v22 - 1);
    v24 = *(unsigned int (**)(char *, uint64_t, int *))(v23 + 48);
    swift_bridgeObjectRetain();
    if (v24(v21, 1, v22))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = sub_1AD63AF28();
      v27 = *(_QWORD *)(v26 - 8);
      v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48);
      v51 = v27;
      if (v52(v21, 1, v26))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(v20, v21, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v20, 0, 1, v26);
      }
      v29 = v22[5];
      v30 = &v20[v29];
      v31 = &v21[v29];
      if (v52(&v21[v29], 1, v26))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v30, v31, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v30, 0, 1, v26);
      }
      v33 = v22[6];
      v34 = &v20[v33];
      v35 = &v21[v33];
      v36 = *((_QWORD *)v35 + 1);
      *(_QWORD *)v34 = *(_QWORD *)v35;
      *((_QWORD *)v34 + 1) = v36;
      v20[v22[7]] = v21[v22[7]];
      *(_QWORD *)&v20[v22[8]] = *(_QWORD *)&v21[v22[8]];
      v37 = v22[9];
      v38 = &v20[v37];
      v39 = &v21[v37];
      *v38 = *v39;
      v40 = *((_QWORD *)v39 + 2);
      *((_QWORD *)v38 + 1) = *((_QWORD *)v39 + 1);
      *((_QWORD *)v38 + 2) = v40;
      v41 = *(void (**)(char *, _QWORD, uint64_t, int *))(v23 + 56);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v41(v20, 0, 1, v22);
    }
    v42 = a3[14];
    *(_BYTE *)(a1 + a3[13]) = *((_BYTE *)a2 + a3[13]);
    v43 = a1 + v42;
    v44 = (uint64_t)a2 + v42;
    v45 = *(_QWORD *)(v44 + 16);
    if (v45 == 1)
    {
      v46 = *(_OWORD *)(v44 + 80);
      *(_OWORD *)(v43 + 64) = *(_OWORD *)(v44 + 64);
      *(_OWORD *)(v43 + 80) = v46;
      *(_OWORD *)(v43 + 96) = *(_OWORD *)(v44 + 96);
      *(_OWORD *)(v43 + 105) = *(_OWORD *)(v44 + 105);
      v47 = *(_OWORD *)(v44 + 16);
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *(_OWORD *)(v43 + 16) = v47;
      v48 = *(_OWORD *)(v44 + 48);
      *(_OWORD *)(v43 + 32) = *(_OWORD *)(v44 + 32);
      *(_OWORD *)(v43 + 48) = v48;
    }
    else
    {
      *(_OWORD *)v43 = *(_OWORD *)v44;
      *(_QWORD *)(v43 + 16) = v45;
      *(_OWORD *)(v43 + 24) = *(_OWORD *)(v44 + 24);
      *(_QWORD *)(v43 + 40) = *(_QWORD *)(v44 + 40);
      v49 = *(_OWORD *)(v44 + 64);
      *(_OWORD *)(v43 + 48) = *(_OWORD *)(v44 + 48);
      *(_OWORD *)(v43 + 64) = v49;
      *(_BYTE *)(v43 + 80) = *(_BYTE *)(v44 + 80);
      *(_OWORD *)(v43 + 88) = *(_OWORD *)(v44 + 88);
      *(_OWORD *)(v43 + 104) = *(_OWORD *)(v44 + 104);
      *(_BYTE *)(v43 + 120) = *(_BYTE *)(v44 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_1AD0A3C00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 48);
  v5 = type metadata accessor for LinkPresentation.Video(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = sub_1AD63AF28();
    v7 = *(_QWORD *)(v6 - 8);
    v8 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    if (!v8(v4, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, v6);
    v9 = v4 + *(int *)(v5 + 20);
    if (!v8(v9, 1, v6))
      (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + *(int *)(a2 + 56) + 16);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD0A3D7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  unsigned int (*v22)(char *, uint64_t, int *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, _QWORD, uint64_t, int *);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v50;
  uint64_t v51;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  v12 = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12 == 1)
  {
    v13 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v13;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
    v14 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v14;
    v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
  }
  else
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 112) = v12;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    v16 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v16;
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v51 = a3;
  v17 = *(int *)(a3 + 48);
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(unsigned int (**)(char *, uint64_t, int *))(v21 + 48);
  swift_bridgeObjectRetain();
  if (v22(v19, 1, v20))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = sub_1AD63AF28();
    v25 = *(_QWORD *)(v24 - 8);
    v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48);
    v50 = v25;
    if (v26(v19, 1, v24))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v18, v19, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v25 + 56))(v18, 0, 1, v24);
    }
    v28 = v20[5];
    v29 = &v18[v28];
    v30 = &v19[v28];
    if (v26(&v19[v28], 1, v24))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v29, v30, v24);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v29, 0, 1, v24);
    }
    v32 = v20[6];
    v33 = &v18[v32];
    v34 = &v19[v32];
    v35 = *((_QWORD *)v34 + 1);
    *(_QWORD *)v33 = *(_QWORD *)v34;
    *((_QWORD *)v33 + 1) = v35;
    v18[v20[7]] = v19[v20[7]];
    *(_QWORD *)&v18[v20[8]] = *(_QWORD *)&v19[v20[8]];
    v36 = v20[9];
    v37 = &v18[v36];
    v38 = &v19[v36];
    *v37 = *v38;
    v39 = *((_QWORD *)v38 + 2);
    *((_QWORD *)v37 + 1) = *((_QWORD *)v38 + 1);
    *((_QWORD *)v37 + 2) = v39;
    v40 = *(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56);
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    v40(v18, 0, 1, v20);
  }
  v41 = *(int *)(v51 + 56);
  *(_BYTE *)(a1 + *(int *)(v51 + 52)) = *(_BYTE *)(a2 + *(int *)(v51 + 52));
  v42 = a1 + v41;
  v43 = a2 + v41;
  v44 = *(_QWORD *)(v43 + 16);
  if (v44 == 1)
  {
    v45 = *(_OWORD *)(v43 + 80);
    *(_OWORD *)(v42 + 64) = *(_OWORD *)(v43 + 64);
    *(_OWORD *)(v42 + 80) = v45;
    *(_OWORD *)(v42 + 96) = *(_OWORD *)(v43 + 96);
    *(_OWORD *)(v42 + 105) = *(_OWORD *)(v43 + 105);
    v46 = *(_OWORD *)(v43 + 16);
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *(_OWORD *)(v42 + 16) = v46;
    v47 = *(_OWORD *)(v43 + 48);
    *(_OWORD *)(v42 + 32) = *(_OWORD *)(v43 + 32);
    *(_OWORD *)(v42 + 48) = v47;
  }
  else
  {
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *(_QWORD *)(v42 + 16) = v44;
    *(_OWORD *)(v42 + 24) = *(_OWORD *)(v43 + 24);
    *(_QWORD *)(v42 + 40) = *(_QWORD *)(v43 + 40);
    v48 = *(_OWORD *)(v43 + 64);
    *(_OWORD *)(v42 + 48) = *(_OWORD *)(v43 + 48);
    *(_OWORD *)(v42 + 64) = v48;
    *(_BYTE *)(v42 + 80) = *(_BYTE *)(v43 + 80);
    *(_OWORD *)(v42 + 88) = *(_OWORD *)(v43 + 88);
    *(_OWORD *)(v42 + 104) = *(_OWORD *)(v43 + 104);
    *(_BYTE *)(v42 + 120) = *(_BYTE *)(v43 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD0A412C(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  char *v30;
  char *v31;
  int *v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, int *);
  int v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(char *, uint64_t, uint64_t);
  int v45;
  int v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  char *v55;
  char *v56;
  void (*v57)(char *, _QWORD, uint64_t, int *);
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  int v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  __int128 *v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  uint64_t v97;
  void (**__src)(void *, const void *, uint64_t);
  int *v99;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 96);
  v7 = (__int128 *)(a2 + 96);
  v8 = *(_QWORD *)(a2 + 112);
  if (*(_QWORD *)(a1 + 112) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 112);
      v11 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 112) = v10;
      v12 = *(_OWORD *)(a2 + 160);
      v13 = *(_OWORD *)(a2 + 176);
      v14 = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
      *(_OWORD *)(a1 + 176) = v13;
      *(_OWORD *)(a1 + 192) = v14;
      *(_OWORD *)(a1 + 160) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      v21 = *(_OWORD *)(a2 + 144);
      v22 = *(_OWORD *)(a2 + 160);
      *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
      *(_OWORD *)(a1 + 144) = v21;
      *(_OWORD *)(a1 + 160) = v22;
      v23 = *(_OWORD *)(a2 + 184);
      v24 = *(_OWORD *)(a2 + 200);
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      *(_OWORD *)(a1 + 200) = v24;
      *(_OWORD *)(a1 + 184) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1AD0661D0(a1 + 96);
    v15 = *(_OWORD *)(a2 + 144);
    v17 = *v7;
    v16 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *v6 = v17;
    *(_OWORD *)(a1 + 112) = v16;
    v19 = *(_OWORD *)(a2 + 176);
    v18 = *(_OWORD *)(a2 + 192);
    v20 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
    *(_OWORD *)(a1 + 176) = v19;
    *(_OWORD *)(a1 + 192) = v18;
    *(_OWORD *)(a1 + 160) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)(a2 + 144);
    v26 = *(_OWORD *)(a2 + 160);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    *(_OWORD *)(a1 + 144) = v25;
    *(_OWORD *)(a1 + 160) = v26;
    v27 = *(_OWORD *)(a2 + 184);
    v28 = *(_OWORD *)(a2 + 200);
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    *(_OWORD *)(a1 + 200) = v28;
    *(_OWORD *)(a1 + 184) = v27;
  }
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[12];
  v30 = (char *)(a1 + v29);
  v31 = (char *)(a2 + v29);
  v32 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v33 = *((_QWORD *)v32 - 1);
  v34 = *(uint64_t (**)(char *, uint64_t, int *))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      v37 = sub_1AD63AF28();
      v38 = *(_QWORD *)(v37 - 8);
      v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48);
      __src = (void (**)(void *, const void *, uint64_t))v38;
      v99 = a3;
      if (v39(v31, 1, v37))
      {
        v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v30, v31, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v30, 0, 1, v37);
      }
      v47 = v32[5];
      v48 = &v30[v47];
      v49 = &v31[v47];
      if (v39(&v31[v47], 1, v37))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        __src[2](v48, v49, v37);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v48, 0, 1, v37);
      }
      v51 = v32[6];
      v52 = &v30[v51];
      v53 = &v31[v51];
      *(_QWORD *)v52 = *(_QWORD *)v53;
      *((_QWORD *)v52 + 1) = *((_QWORD *)v53 + 1);
      v30[v32[7]] = v31[v32[7]];
      *(_QWORD *)&v30[v32[8]] = *(_QWORD *)&v31[v32[8]];
      v54 = v32[9];
      v55 = &v30[v54];
      v56 = &v31[v54];
      *v55 = *v56;
      *((_QWORD *)v55 + 1) = *((_QWORD *)v56 + 1);
      *((_QWORD *)v55 + 2) = *((_QWORD *)v56 + 2);
      v57 = *(void (**)(char *, _QWORD, uint64_t, int *))(v33 + 56);
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      v57(v30, 0, 1, v32);
      goto LABEL_33;
    }
LABEL_14:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_34;
  }
  if (v36)
  {
    sub_1AD066230((uint64_t)v30, type metadata accessor for LinkPresentation.Video);
    goto LABEL_14;
  }
  v99 = a3;
  v42 = sub_1AD63AF28();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v43 + 48);
  v45 = v44(v30, 1, v42);
  v46 = v44(v31, 1, v42);
  v97 = v43;
  if (v45)
  {
    if (!v46)
    {
      (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v30, v31, v42);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v43 + 56))(v30, 0, 1, v42);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v46)
  {
    (*(void (**)(char *, uint64_t))(v43 + 8))(v30, v42);
LABEL_25:
    v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    goto LABEL_26;
  }
  (*(void (**)(char *, char *, uint64_t))(v43 + 24))(v30, v31, v42);
LABEL_26:
  v59 = v32[5];
  v60 = &v30[v59];
  v61 = &v31[v59];
  v62 = v44(&v30[v59], 1, v42);
  v63 = v44(v61, 1, v42);
  if (!v62)
  {
    if (!v63)
    {
      (*(void (**)(char *, char *, uint64_t))(v97 + 24))(v60, v61, v42);
      goto LABEL_32;
    }
    (*(void (**)(char *, uint64_t))(v97 + 8))(v60, v42);
    goto LABEL_31;
  }
  if (v63)
  {
LABEL_31:
    v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v60, v61, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
    goto LABEL_32;
  }
  (*(void (**)(char *, char *, uint64_t))(v97 + 16))(v60, v61, v42);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v97 + 56))(v60, 0, 1, v42);
LABEL_32:
  v65 = v32[6];
  v66 = &v30[v65];
  v67 = &v31[v65];
  *(_QWORD *)v66 = *(_QWORD *)v67;
  *((_QWORD *)v66 + 1) = *((_QWORD *)v67 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v30[v32[7]] = v31[v32[7]];
  *(_QWORD *)&v30[v32[8]] = *(_QWORD *)&v31[v32[8]];
  swift_retain();
  swift_release();
  v68 = v32[9];
  v69 = &v30[v68];
  v70 = &v31[v68];
  *v69 = *v70;
  *((_QWORD *)v69 + 1) = *((_QWORD *)v70 + 1);
  *((_QWORD *)v69 + 2) = *((_QWORD *)v70 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_33:
  a3 = v99;
LABEL_34:
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v71 = a3[14];
  v72 = a1 + v71;
  v73 = (__int128 *)(a2 + v71);
  v74 = *(_QWORD *)(a1 + v71 + 16);
  v75 = *((_QWORD *)v73 + 2);
  if (v74 == 1)
  {
    if (v75 == 1)
    {
      v76 = *v73;
      v77 = v73[1];
      v78 = v73[3];
      *(_OWORD *)(v72 + 32) = v73[2];
      *(_OWORD *)(v72 + 48) = v78;
      *(_OWORD *)v72 = v76;
      *(_OWORD *)(v72 + 16) = v77;
      v79 = v73[4];
      v80 = v73[5];
      v81 = v73[6];
      *(_OWORD *)(v72 + 105) = *(__int128 *)((char *)v73 + 105);
      *(_OWORD *)(v72 + 80) = v80;
      *(_OWORD *)(v72 + 96) = v81;
      *(_OWORD *)(v72 + 64) = v79;
    }
    else
    {
      *(_QWORD *)v72 = *(_QWORD *)v73;
      *(_QWORD *)(v72 + 8) = *((_QWORD *)v73 + 1);
      *(_QWORD *)(v72 + 16) = *((_QWORD *)v73 + 2);
      *(_QWORD *)(v72 + 24) = *((_QWORD *)v73 + 3);
      *(_QWORD *)(v72 + 32) = *((_QWORD *)v73 + 4);
      *(_QWORD *)(v72 + 40) = *((_QWORD *)v73 + 5);
      v88 = v73[3];
      v89 = v73[4];
      *(_BYTE *)(v72 + 80) = *((_BYTE *)v73 + 80);
      *(_OWORD *)(v72 + 48) = v88;
      *(_OWORD *)(v72 + 64) = v89;
      v90 = *(__int128 *)((char *)v73 + 88);
      v91 = *(__int128 *)((char *)v73 + 104);
      *(_BYTE *)(v72 + 120) = *((_BYTE *)v73 + 120);
      *(_OWORD *)(v72 + 104) = v91;
      *(_OWORD *)(v72 + 88) = v90;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v75 == 1)
  {
    sub_1AD0661D0(v72);
    v82 = v73[3];
    v84 = *v73;
    v83 = v73[1];
    *(_OWORD *)(v72 + 32) = v73[2];
    *(_OWORD *)(v72 + 48) = v82;
    *(_OWORD *)v72 = v84;
    *(_OWORD *)(v72 + 16) = v83;
    v86 = v73[5];
    v85 = v73[6];
    v87 = v73[4];
    *(_OWORD *)(v72 + 105) = *(__int128 *)((char *)v73 + 105);
    *(_OWORD *)(v72 + 80) = v86;
    *(_OWORD *)(v72 + 96) = v85;
    *(_OWORD *)(v72 + 64) = v87;
  }
  else
  {
    *(_QWORD *)v72 = *(_QWORD *)v73;
    *(_QWORD *)(v72 + 8) = *((_QWORD *)v73 + 1);
    *(_QWORD *)(v72 + 16) = *((_QWORD *)v73 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v72 + 24) = *((_QWORD *)v73 + 3);
    *(_QWORD *)(v72 + 32) = *((_QWORD *)v73 + 4);
    *(_QWORD *)(v72 + 40) = *((_QWORD *)v73 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v92 = v73[3];
    v93 = v73[4];
    *(_BYTE *)(v72 + 80) = *((_BYTE *)v73 + 80);
    *(_OWORD *)(v72 + 48) = v92;
    *(_OWORD *)(v72 + 64) = v93;
    v94 = *(__int128 *)((char *)v73 + 88);
    v95 = *(__int128 *)((char *)v73 + 104);
    *(_BYTE *)(v72 + 120) = *((_BYTE *)v73 + 120);
    *(_OWORD *)(v72 + 104) = v95;
    *(_OWORD *)(v72 + 88) = v94;
  }
  return a1;
}

uint64_t sub_1AD0A4934(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  char *v16;
  int *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _OWORD *v31;
  _OWORD *v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v7;
  v8 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v8;
  v9 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v9;
  v10 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
  v11 = *(_OWORD *)(a2 + 192);
  v13 = *(_OWORD *)(a2 + 160);
  v12 = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  v14 = a3[12];
  v15 = (char *)(a1 + v14);
  v16 = (char *)(a2 + v14);
  *(_OWORD *)(a1 + 176) = v12;
  *(_OWORD *)(a1 + 192) = v11;
  *(_OWORD *)(a1 + 160) = v13;
  v17 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v18 = *((_QWORD *)v17 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = sub_1AD63AF28();
    v21 = *(_QWORD *)(v20 - 8);
    v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48);
    v37 = v21;
    if (v38(v16, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v15, v16, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(v15, 0, 1, v20);
    }
    v23 = v17[5];
    v24 = &v15[v23];
    v25 = &v16[v23];
    if (v38(&v16[v23], 1, v20))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v24, v25, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v24, 0, 1, v20);
    }
    *(_OWORD *)&v15[v17[6]] = *(_OWORD *)&v16[v17[6]];
    v15[v17[7]] = v16[v17[7]];
    *(_QWORD *)&v15[v17[8]] = *(_QWORD *)&v16[v17[8]];
    v27 = v17[9];
    v28 = &v15[v27];
    v29 = &v16[v27];
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *((_QWORD *)v28 + 2) = *((_QWORD *)v29 + 2);
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v18 + 56))(v15, 0, 1, v17);
  }
  v30 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v31 = (_OWORD *)(a1 + v30);
  v32 = (_OWORD *)(a2 + v30);
  v33 = v32[5];
  v31[4] = v32[4];
  v31[5] = v33;
  v31[6] = v32[6];
  *(_OWORD *)((char *)v31 + 105) = *(_OWORD *)((char *)v32 + 105);
  v34 = v32[1];
  *v31 = *v32;
  v31[1] = v34;
  v35 = v32[3];
  v31[2] = v32[2];
  v31[3] = v35;
  return a1;
}

uint64_t sub_1AD0A4BB4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t (*v22)(char *, uint64_t, int *);
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, uint64_t);
  int v33;
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  int v46;
  int v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v68;
  void (**__src)(void *, const void *, uint64_t);
  int *v70;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v11;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 112) == 1)
    goto LABEL_4;
  v12 = *(_QWORD *)(a2 + 112);
  if (v12 == 1)
  {
    sub_1AD0661D0(a1 + 96);
LABEL_4:
    v13 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v13;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
    v14 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v14;
    v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 112) = v12;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRelease();
  v16 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v16;
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
LABEL_6:
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRelease();
  v17 = a3[12];
  v18 = (char *)(a1 + v17);
  v19 = (char *)(a2 + v17);
  v20 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v21 = *((_QWORD *)v20 - 1);
  v22 = *(uint64_t (**)(char *, uint64_t, int *))(v21 + 48);
  v23 = v22(v18, 1, v20);
  v24 = v22(v19, 1, v20);
  if (v23)
  {
    if (!v24)
    {
      v25 = sub_1AD63AF28();
      v26 = *(_QWORD *)(v25 - 8);
      v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      __src = (void (**)(void *, const void *, uint64_t))v26;
      v70 = a3;
      if (v27(v19, 1, v25))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v18, v19, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v18, 0, 1, v25);
      }
      v35 = v20[5];
      v36 = &v18[v35];
      v37 = &v19[v35];
      if (v27(&v19[v35], 1, v25))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        __src[4](v36, v37, v25);
        ((void (*)(char *, _QWORD, uint64_t, uint64_t))__src[7])(v36, 0, 1, v25);
      }
      *(_OWORD *)&v18[v20[6]] = *(_OWORD *)&v19[v20[6]];
      v18[v20[7]] = v19[v20[7]];
      *(_QWORD *)&v18[v20[8]] = *(_QWORD *)&v19[v20[8]];
      v39 = v20[9];
      v40 = &v18[v39];
      v41 = &v19[v39];
      *(_OWORD *)v40 = *(_OWORD *)v41;
      *((_QWORD *)v40 + 2) = *((_QWORD *)v41 + 2);
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v21 + 56))(v18, 0, 1, v20);
      goto LABEL_31;
    }
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    goto LABEL_32;
  }
  if (v24)
  {
    sub_1AD066230((uint64_t)v18, type metadata accessor for LinkPresentation.Video);
    goto LABEL_12;
  }
  v70 = a3;
  v30 = sub_1AD63AF28();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v31 + 48);
  v33 = v32(v18, 1, v30);
  v34 = v32(v19, 1, v30);
  v68 = v31;
  if (v33)
  {
    if (!v34)
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v18, v19, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v18, 0, 1, v30);
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v34)
  {
    (*(void (**)(char *, uint64_t))(v31 + 8))(v18, v30);
LABEL_23:
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 40))(v18, v19, v30);
LABEL_24:
  v43 = v20[5];
  v44 = &v18[v43];
  v45 = &v19[v43];
  v46 = v32(&v18[v43], 1, v30);
  v47 = v32(v45, 1, v30);
  if (!v46)
  {
    if (!v47)
    {
      (*(void (**)(char *, char *, uint64_t))(v68 + 40))(v44, v45, v30);
      goto LABEL_30;
    }
    (*(void (**)(char *, uint64_t))(v68 + 8))(v44, v30);
    goto LABEL_29;
  }
  if (v47)
  {
LABEL_29:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    goto LABEL_30;
  }
  (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v44, v45, v30);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v44, 0, 1, v30);
LABEL_30:
  v49 = v20[6];
  v50 = &v18[v49];
  v51 = &v19[v49];
  v53 = *(_QWORD *)v51;
  v52 = *((_QWORD *)v51 + 1);
  *(_QWORD *)v50 = v53;
  *((_QWORD *)v50 + 1) = v52;
  swift_bridgeObjectRelease();
  v18[v20[7]] = v19[v20[7]];
  *(_QWORD *)&v18[v20[8]] = *(_QWORD *)&v19[v20[8]];
  swift_release();
  v54 = v20[9];
  v55 = &v18[v54];
  v56 = &v19[v54];
  *v55 = *v56;
  v58 = *((_QWORD *)v56 + 1);
  v57 = *((_QWORD *)v56 + 2);
  *((_QWORD *)v55 + 1) = v58;
  *((_QWORD *)v55 + 2) = v57;
  swift_bridgeObjectRelease();
LABEL_31:
  a3 = v70;
LABEL_32:
  v59 = a3[14];
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  v60 = a1 + v59;
  v61 = a2 + v59;
  if (*(_QWORD *)(a1 + v59 + 16) != 1)
  {
    v62 = *(_QWORD *)(v61 + 16);
    if (v62 != 1)
    {
      *(_OWORD *)v60 = *(_OWORD *)v61;
      *(_QWORD *)(v60 + 16) = v62;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v60 + 24) = *(_OWORD *)(v61 + 24);
      *(_QWORD *)(v60 + 40) = *(_QWORD *)(v61 + 40);
      swift_bridgeObjectRelease();
      v66 = *(_OWORD *)(v61 + 64);
      *(_OWORD *)(v60 + 48) = *(_OWORD *)(v61 + 48);
      *(_OWORD *)(v60 + 64) = v66;
      *(_BYTE *)(v60 + 80) = *(_BYTE *)(v61 + 80);
      *(_OWORD *)(v60 + 88) = *(_OWORD *)(v61 + 88);
      *(_OWORD *)(v60 + 104) = *(_OWORD *)(v61 + 104);
      *(_BYTE *)(v60 + 120) = *(_BYTE *)(v61 + 120);
      return a1;
    }
    sub_1AD0661D0(a1 + v59);
  }
  v63 = *(_OWORD *)(v61 + 80);
  *(_OWORD *)(v60 + 64) = *(_OWORD *)(v61 + 64);
  *(_OWORD *)(v60 + 80) = v63;
  *(_OWORD *)(v60 + 96) = *(_OWORD *)(v61 + 96);
  *(_OWORD *)(v60 + 105) = *(_OWORD *)(v61 + 105);
  v64 = *(_OWORD *)(v61 + 16);
  *(_OWORD *)v60 = *(_OWORD *)v61;
  *(_OWORD *)(v60 + 16) = v64;
  v65 = *(_OWORD *)(v61 + 48);
  *(_OWORD *)(v60 + 32) = *(_OWORD *)(v61 + 32);
  *(_OWORD *)(v60 + 48) = v65;
  return a1;
}

uint64_t sub_1AD0A517C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A5188(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 48), a2, v9);
  }
}

uint64_t sub_1AD0A5214()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A5220(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 48), a2, a2, v7);
  }
  return result;
}

void sub_1AD0A5298()
{
  unint64_t v0;

  sub_1ACFFECF8(319, &qword_1ED2E1D20, (void (*)(uint64_t))type metadata accessor for LinkPresentation.Video);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1AD0A5344(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_DWORD *, _QWORD, uint64_t, uint64_t);
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 == 1)
    {
      v12 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v13 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v13;
      v14 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v14;
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_QWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
      *(_QWORD *)(a1 + 104) = a2[13];
      v16 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v16;
      *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
      *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v17 = *(int *)(a3 + 36);
    v18 = (_DWORD *)(a1 + v17);
    v19 = (_DWORD *)((char *)a2 + v17);
    v20 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *v18 = *v19;
      v23 = *(int *)(v20 + 20);
      __dst = (char *)v18 + v23;
      v24 = (char *)v19 + v23;
      v25 = sub_1AD63AF28();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      *(_QWORD *)((char *)v18 + *(int *)(v20 + 24)) = *(_QWORD *)((char *)v19 + *(int *)(v20 + 24));
      v28 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56);
      swift_bridgeObjectRetain();
      v28(v18, 0, 1, v20);
    }
    *(_BYTE *)(a1 + *(int *)(a3 + 40)) = *((_BYTE *)a2 + *(int *)(a3 + 40));
  }
  return a1;
}

uint64_t sub_1AD0A55AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_DWORD *, _QWORD, uint64_t, uint64_t);
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v15 = *(int *)(a3 + 36);
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v21 = *(int *)(v18 + 20);
    __dst = (char *)v16 + v21;
    v22 = (char *)v17 + v21;
    v23 = sub_1AD63AF28();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
    v26 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    v26(v16, 0, 1, v18);
  }
  *(_BYTE *)(a1 + *(int *)(a3 + 40)) = *(_BYTE *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1AD0A57E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_DWORD *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  size_t v51;
  void *v52;
  void (*v53)(_DWORD *, _QWORD, uint64_t, uint64_t);
  void *v55;
  uint64_t v56;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 64);
  v7 = (__int128 *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 80);
      v11 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 80) = v10;
      v12 = *(_OWORD *)(a2 + 128);
      v13 = *(_OWORD *)(a2 + 144);
      v14 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
      *(_OWORD *)(a1 + 144) = v13;
      *(_OWORD *)(a1 + 160) = v14;
      *(_OWORD *)(a1 + 128) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      v21 = *(_OWORD *)(a2 + 112);
      v22 = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v21;
      *(_OWORD *)(a1 + 128) = v22;
      v23 = *(_OWORD *)(a2 + 152);
      v24 = *(_OWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      *(_OWORD *)(a1 + 168) = v24;
      *(_OWORD *)(a1 + 152) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1AD0661D0(a1 + 64);
    v15 = *(_OWORD *)(a2 + 112);
    v17 = *v7;
    v16 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    *v6 = v17;
    *(_OWORD *)(a1 + 80) = v16;
    v19 = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 160);
    v20 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    *(_OWORD *)(a1 + 144) = v19;
    *(_OWORD *)(a1 + 160) = v18;
    *(_OWORD *)(a1 + 128) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)(a2 + 112);
    v26 = *(_OWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v25;
    *(_OWORD *)(a1 + 128) = v26;
    v27 = *(_OWORD *)(a2 + 152);
    v28 = *(_OWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = v28;
    *(_OWORD *)(a1 + 152) = v27;
  }
  v29 = *(int *)(a3 + 36);
  v30 = (_DWORD *)(a1 + v29);
  v31 = (_DWORD *)(a2 + v29);
  v32 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (v36)
    {
      sub_1AD066230((uint64_t)v30, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_14;
    }
    v56 = a3;
    *v30 = *v31;
    v44 = *(int *)(v32 + 20);
    v45 = (char *)v30 + v44;
    v46 = (char *)v31 + v44;
    v47 = sub_1AD63AF28();
    v48 = *(_QWORD *)(v47 - 8);
    v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
    v55 = v45;
    LODWORD(v45) = v49(v45, 1, v47);
    v50 = v49(v46, 1, v47);
    if ((_DWORD)v45)
    {
      if (!v50)
      {
        (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v55, v46, v47);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v55, 0, 1, v47);
        goto LABEL_25;
      }
      v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v52 = v55;
    }
    else
    {
      if (!v50)
      {
        (*(void (**)(void *, char *, uint64_t))(v48 + 24))(v55, v46, v47);
        goto LABEL_25;
      }
      (*(void (**)(void *, uint64_t))(v48 + 8))(v55, v47);
      v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v52 = v55;
    }
    memcpy(v52, v46, v51);
LABEL_25:
    *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_26:
    a3 = v56;
    goto LABEL_27;
  }
  if (!v36)
  {
    v56 = a3;
    *v30 = *v31;
    v37 = *(int *)(v32 + 20);
    v38 = (char *)v30 + v37;
    v39 = (char *)v31 + v37;
    v40 = sub_1AD63AF28();
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
    v53 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
    swift_bridgeObjectRetain();
    v53(v30, 0, 1, v32);
    goto LABEL_26;
  }
LABEL_14:
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
  memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_27:
  *(_BYTE *)(a1 + *(int *)(a3 + 40)) = *(_BYTE *)(a2 + *(int *)(a3 + 40));
  return a1;
}

_OWORD *sub_1AD0A5C80(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  a1[10] = a2[10];
  *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  v10 = a2[7];
  v11 = *(int *)(a3 + 36);
  v12 = (_DWORD *)((char *)a1 + v11);
  v13 = (_DWORD *)((char *)a2 + v11);
  a1[6] = a2[6];
  a1[7] = v10;
  v14 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v17 = *(int *)(v14 + 20);
    __dst = (char *)v12 + v17;
    v18 = (char *)v13 + v17;
    v19 = sub_1AD63AF28();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    *(_QWORD *)((char *)v12 + *(int *)(v14 + 24)) = *(_QWORD *)((char *)v13 + *(int *)(v14 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *((_BYTE *)a1 + *(int *)(a3 + 40)) = *((_BYTE *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1AD0A5E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_DWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  size_t v37;
  void *v38;
  void *v40;
  uint64_t v41;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80) == 1)
    goto LABEL_4;
  v10 = *(_QWORD *)(a2 + 80);
  if (v10 == 1)
  {
    sub_1AD0661D0(a1 + 64);
LABEL_4:
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v14 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v14;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
LABEL_6:
  v15 = *(int *)(a3 + 36);
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_1AD066230((uint64_t)v16, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_12;
    }
    v41 = a3;
    *v16 = *v17;
    v30 = *(int *)(v18 + 20);
    v31 = (char *)v16 + v30;
    v32 = (char *)v17 + v30;
    v33 = sub_1AD63AF28();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v40 = v31;
    LODWORD(v31) = v35(v31, 1, v33);
    v36 = v35(v32, 1, v33);
    if ((_DWORD)v31)
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v34 + 32))(v40, v32, v33);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
        goto LABEL_23;
      }
      v37 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v38 = v40;
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v34 + 40))(v40, v32, v33);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v34 + 8))(v40, v33);
      v37 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v38 = v40;
    }
    memcpy(v38, v32, v37);
LABEL_23:
    *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
    swift_bridgeObjectRelease();
LABEL_24:
    a3 = v41;
    goto LABEL_25;
  }
  if (!v22)
  {
    v41 = a3;
    *v16 = *v17;
    v23 = *(int *)(v18 + 20);
    v24 = (char *)v16 + v23;
    v25 = (char *)v17 + v23;
    v26 = sub_1AD63AF28();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    goto LABEL_24;
  }
LABEL_12:
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
  memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_25:
  *(_BYTE *)(a1 + *(int *)(a3 + 40)) = *(_BYTE *)(a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1AD0A61AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A61B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, &qword_1EECD1CB8);
}

uint64_t sub_1AD0A61C4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A61D0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, &qword_1EECD1CB8);
}

void sub_1AD0A61DC()
{
  sub_1AD0A9C68();
}

uint64_t sub_1AD0A61E8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _DWORD *v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v30;
  void *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v11;
    v12 = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      v13 = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v13;
      *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 185) = *(_OWORD *)((char *)a2 + 185);
      v14 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v14;
      v15 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v15;
    }
    else
    {
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_QWORD *)(a1 + 96) = v12;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
      *(_QWORD *)(a1 + 120) = a2[15];
      v17 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v17;
      *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 23);
      *(_BYTE *)(a1 + 200) = *((_BYTE *)a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v18 = *(int *)(a3 + 40);
    v19 = (_DWORD *)(a1 + v18);
    v20 = (_DWORD *)((char *)a2 + v18);
    v21 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v19 = *v20;
      v24 = *(int *)(v21 + 20);
      __dst = (char *)v19 + v24;
      v25 = (char *)v20 + v24;
      v26 = sub_1AD63AF28();
      v27 = *(_QWORD *)(v26 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(__dst, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v27 + 16))(__dst, v25, v26);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(__dst, 0, 1, v26);
      }
      *(_QWORD *)((char *)v19 + *(int *)(v21 + 24)) = *(_QWORD *)((char *)v20 + *(int *)(v21 + 24));
      v29 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56);
      swift_bridgeObjectRetain();
      v29(v19, 0, 1, v21);
    }
    v30 = *(int *)(a3 + 44);
    v31 = (void *)(a1 + v30);
    v32 = (char *)a2 + v30;
    v33 = sub_1AD63AF28();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
  }
  return a1;
}

uint64_t sub_1AD0A64D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_1AD63AF28();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  v9 = a1 + *(int *)(a2 + 44);
  v10 = sub_1AD63AF28();
  v11 = *(_QWORD *)(v10 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
  return result;
}

uint64_t sub_1AD0A6620(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  void *v30;
  const void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 1)
  {
    v12 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v12;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
    v13 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v13;
    v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = v11;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v16 = *(int *)(a3 + 40);
  v17 = (_DWORD *)(a1 + v16);
  v18 = (_DWORD *)(a2 + v16);
  v19 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v36 = a3;
    *v17 = *v18;
    v22 = *(int *)(v19 + 20);
    v23 = (char *)v17 + v22;
    v24 = (char *)v18 + v22;
    v25 = sub_1AD63AF28();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    *(_QWORD *)((char *)v17 + *(int *)(v19 + 24)) = *(_QWORD *)((char *)v18 + *(int *)(v19 + 24));
    v28 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56);
    swift_bridgeObjectRetain();
    v28(v17, 0, 1, v19);
    a3 = v36;
  }
  v29 = *(int *)(a3 + 44);
  v30 = (void *)(a1 + v29);
  v31 = (const void *)(a2 + v29);
  v32 = sub_1AD63AF28();
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  return a1;
}

uint64_t sub_1AD0A68E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_DWORD *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  size_t v51;
  void *v52;
  void (*v53)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v54;
  void *v55;
  void *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t (*v59)(void *, uint64_t, uint64_t);
  int v60;
  int v61;
  uint64_t v62;
  void *v64;
  uint64_t v65;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 80);
  v7 = (__int128 *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 96);
      v11 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 96) = v10;
      v12 = *(_OWORD *)(a2 + 144);
      v13 = *(_OWORD *)(a2 + 160);
      v14 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
      *(_OWORD *)(a1 + 160) = v13;
      *(_OWORD *)(a1 + 176) = v14;
      *(_OWORD *)(a1 + 144) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      v21 = *(_OWORD *)(a2 + 128);
      v22 = *(_OWORD *)(a2 + 144);
      *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
      *(_OWORD *)(a1 + 128) = v21;
      *(_OWORD *)(a1 + 144) = v22;
      v23 = *(_OWORD *)(a2 + 168);
      v24 = *(_OWORD *)(a2 + 184);
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = v24;
      *(_OWORD *)(a1 + 168) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1AD0661D0(a1 + 80);
    v15 = *(_OWORD *)(a2 + 128);
    v17 = *v7;
    v16 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v15;
    *v6 = v17;
    *(_OWORD *)(a1 + 96) = v16;
    v19 = *(_OWORD *)(a2 + 160);
    v18 = *(_OWORD *)(a2 + 176);
    v20 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
    *(_OWORD *)(a1 + 160) = v19;
    *(_OWORD *)(a1 + 176) = v18;
    *(_OWORD *)(a1 + 144) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)(a2 + 128);
    v26 = *(_OWORD *)(a2 + 144);
    *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
    *(_OWORD *)(a1 + 128) = v25;
    *(_OWORD *)(a1 + 144) = v26;
    v27 = *(_OWORD *)(a2 + 168);
    v28 = *(_OWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = v28;
    *(_OWORD *)(a1 + 168) = v27;
  }
  v29 = *(int *)(a3 + 40);
  v30 = (_DWORD *)(a1 + v29);
  v31 = (_DWORD *)(a2 + v29);
  v32 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      v65 = a3;
      *v30 = *v31;
      v37 = *(int *)(v32 + 20);
      v38 = (char *)v30 + v37;
      v39 = (char *)v31 + v37;
      v40 = sub_1AD63AF28();
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
      v53 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
      swift_bridgeObjectRetain();
      v53(v30, 0, 1, v32);
      goto LABEL_26;
    }
LABEL_14:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_27;
  }
  if (v36)
  {
    sub_1AD066230((uint64_t)v30, type metadata accessor for LinkPresentation.ArtworkMetadata);
    goto LABEL_14;
  }
  v65 = a3;
  *v30 = *v31;
  v44 = *(int *)(v32 + 20);
  v45 = (char *)v30 + v44;
  v46 = (char *)v31 + v44;
  v47 = sub_1AD63AF28();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  v64 = v45;
  LODWORD(v45) = v49(v45, 1, v47);
  v50 = v49(v46, 1, v47);
  if ((_DWORD)v45)
  {
    if (!v50)
    {
      (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v64, v46, v47);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v64, 0, 1, v47);
      goto LABEL_25;
    }
    v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
    v52 = v64;
  }
  else
  {
    if (!v50)
    {
      (*(void (**)(void *, char *, uint64_t))(v48 + 24))(v64, v46, v47);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v64, v47);
    v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
    v52 = v64;
  }
  memcpy(v52, v46, v51);
LABEL_25:
  *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_26:
  a3 = v65;
LABEL_27:
  v54 = *(int *)(a3 + 44);
  v55 = (void *)(a1 + v54);
  v56 = (void *)(a2 + v54);
  v57 = sub_1AD63AF28();
  v58 = *(_QWORD *)(v57 - 8);
  v59 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v58 + 48);
  v60 = v59(v55, 1, v57);
  v61 = v59(v56, 1, v57);
  if (!v60)
  {
    if (!v61)
    {
      (*(void (**)(void *, void *, uint64_t))(v58 + 24))(v55, v56, v57);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v58 + 8))(v55, v57);
    goto LABEL_32;
  }
  if (v61)
  {
LABEL_32:
    v62 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v62 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v58 + 16))(v55, v56, v57);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v58 + 56))(v55, 0, 1, v57);
  return a1;
}

_OWORD *sub_1AD0A6E5C(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  *(_OWORD *)((char *)a1 + 185) = *(_OWORD *)((char *)a2 + 185);
  v10 = a2[11];
  a1[10] = a2[10];
  a1[11] = v10;
  v11 = a2[9];
  v12 = *(int *)(a3 + 40);
  v13 = (_DWORD *)((char *)a1 + v12);
  v14 = (_DWORD *)((char *)a2 + v12);
  a1[8] = a2[8];
  a1[9] = v11;
  v15 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v18 = *(int *)(v15 + 20);
    __dst = (char *)v13 + v18;
    v19 = (char *)v14 + v18;
    v20 = sub_1AD63AF28();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(__dst, v19, v20);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v21 + 56))(__dst, 0, 1, v20);
    }
    *(_QWORD *)((char *)v13 + *(int *)(v15 + 24)) = *(_QWORD *)((char *)v14 + *(int *)(v15 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v23 = *(int *)(a3 + 44);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_1AD63AF28();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  return a1;
}

uint64_t sub_1AD0A7074(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_DWORD *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  size_t v38;
  void *v39;
  uint64_t v40;
  void *v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(void *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  void *v50;
  uint64_t v51;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96) == 1)
    goto LABEL_4;
  v11 = *(_QWORD *)(a2 + 96);
  if (v11 == 1)
  {
    sub_1AD0661D0(a1 + 80);
LABEL_4:
    v12 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v12;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
    v13 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v13;
    v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
LABEL_6:
  v16 = *(int *)(a3 + 40);
  v17 = (_DWORD *)(a1 + v16);
  v18 = (_DWORD *)(a2 + v16);
  v19 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (v22)
  {
    if (!v23)
    {
      v51 = a3;
      *v17 = *v18;
      v24 = *(int *)(v19 + 20);
      v25 = (char *)v17 + v24;
      v26 = (char *)v18 + v24;
      v27 = sub_1AD63AF28();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      *(_QWORD *)((char *)v17 + *(int *)(v19 + 24)) = *(_QWORD *)((char *)v18 + *(int *)(v19 + 24));
      (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
      goto LABEL_24;
    }
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_25;
  }
  if (v23)
  {
    sub_1AD066230((uint64_t)v17, type metadata accessor for LinkPresentation.ArtworkMetadata);
    goto LABEL_12;
  }
  v51 = a3;
  *v17 = *v18;
  v31 = *(int *)(v19 + 20);
  v32 = (char *)v17 + v31;
  v33 = (char *)v18 + v31;
  v34 = sub_1AD63AF28();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  v50 = v32;
  LODWORD(v32) = v36(v32, 1, v34);
  v37 = v36(v33, 1, v34);
  if ((_DWORD)v32)
  {
    if (!v37)
    {
      (*(void (**)(void *, char *, uint64_t))(v35 + 32))(v50, v33, v34);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v50, 0, 1, v34);
      goto LABEL_23;
    }
    v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
    v39 = v50;
  }
  else
  {
    if (!v37)
    {
      (*(void (**)(void *, char *, uint64_t))(v35 + 40))(v50, v33, v34);
      goto LABEL_23;
    }
    (*(void (**)(void *, uint64_t))(v35 + 8))(v50, v34);
    v38 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
    v39 = v50;
  }
  memcpy(v39, v33, v38);
LABEL_23:
  *(_QWORD *)((char *)v17 + *(int *)(v19 + 24)) = *(_QWORD *)((char *)v18 + *(int *)(v19 + 24));
  swift_bridgeObjectRelease();
LABEL_24:
  a3 = v51;
LABEL_25:
  v40 = *(int *)(a3 + 44);
  v41 = (void *)(a1 + v40);
  v42 = (void *)(a2 + v40);
  v43 = sub_1AD63AF28();
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  if (!v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v44 + 40))(v41, v42, v43);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
    goto LABEL_30;
  }
  if (v47)
  {
LABEL_30:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v44 + 32))(v41, v42, v43);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  return a1;
}

uint64_t sub_1AD0A74CC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A74D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 40);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_1AD0A758C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A7598(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 40);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1AD0A763C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1ACFFECF8(319, &qword_1ED2E1DC8, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ArtworkMetadata);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E1D00, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_1AD0A76FC(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  _DWORD *v26;
  _DWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(_DWORD *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  char *__dst;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = a2[7];
    a1[6] = a2[6];
    a1[7] = v9;
    v10 = a2[9];
    v11 = a3[9];
    __dst = (char *)a1 + v11;
    v12 = (char *)a2 + v11;
    a1[8] = a2[8];
    a1[9] = v10;
    v13 = sub_1AD63B03C();
    v14 = *(_QWORD *)(v13 - 8);
    v39 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v39(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(__dst, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 16))(__dst, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(__dst, 0, 1, v13);
    }
    v17 = a3[10];
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_QWORD *)v19 + 2);
    if (v20 == 1)
    {
      v21 = *((_OWORD *)v19 + 5);
      *((_OWORD *)v18 + 4) = *((_OWORD *)v19 + 4);
      *((_OWORD *)v18 + 5) = v21;
      *((_OWORD *)v18 + 6) = *((_OWORD *)v19 + 6);
      *(_OWORD *)(v18 + 105) = *(_OWORD *)(v19 + 105);
      v22 = *((_OWORD *)v19 + 1);
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_OWORD *)v18 + 1) = v22;
      v23 = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 2) = *((_OWORD *)v19 + 2);
      *((_OWORD *)v18 + 3) = v23;
    }
    else
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
      *((_QWORD *)v18 + 2) = v20;
      *(_OWORD *)(v18 + 24) = *(_OWORD *)(v19 + 24);
      *((_QWORD *)v18 + 5) = *((_QWORD *)v19 + 5);
      v24 = *((_OWORD *)v19 + 4);
      *((_OWORD *)v18 + 3) = *((_OWORD *)v19 + 3);
      *((_OWORD *)v18 + 4) = v24;
      v18[80] = v19[80];
      *(_OWORD *)(v18 + 88) = *(_OWORD *)(v19 + 88);
      *(_OWORD *)(v18 + 104) = *(_OWORD *)(v19 + 104);
      v18[120] = v19[120];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v25 = a3[11];
    v26 = (_DWORD *)((char *)v4 + v25);
    v27 = (_DWORD *)((char *)a2 + v25);
    v28 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      *v26 = *v27;
      v31 = *(int *)(v28 + 20);
      v32 = (char *)v26 + v31;
      v33 = (char *)v27 + v31;
      v34 = sub_1AD63AF28();
      v35 = *(_QWORD *)(v34 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      }
      *(_QWORD *)((char *)v26 + *(int *)(v28 + 24)) = *(_QWORD *)((char *)v27 + *(int *)(v28 + 24));
      v37 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v29 + 56);
      swift_bridgeObjectRetain();
      v37(v26, 0, 1, v28);
    }
    *(uint64_t *)((char *)v4 + a3[12]) = *(uint64_t *)((char *)a2 + a3[12]);
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1AD0A7A10(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[9];
  v5 = sub_1AD63B03C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  if (*(_QWORD *)(a1 + a2[10] + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v7 = a1 + a2[11];
  v8 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(v7, 1, v8))
  {
    v9 = v7 + *(int *)(v8 + 20);
    v10 = sub_1AD63AF28();
    v11 = *(_QWORD *)(v10 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v9, v10);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_1AD0A7B54(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  _DWORD *v25;
  _DWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(_DWORD *, _QWORD, uint64_t, uint64_t);
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *__dst;

  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  a1[6] = a2[6];
  a1[7] = v8;
  v9 = a2[9];
  v10 = a3[9];
  __dst = (char *)a1 + v10;
  v11 = (char *)a2 + v10;
  a1[8] = a2[8];
  a1[9] = v9;
  v12 = sub_1AD63B03C();
  v13 = *(_QWORD *)(v12 - 8);
  v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(__dst, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 16))(__dst, v11, v12);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(__dst, 0, 1, v12);
  }
  v15 = a3;
  v16 = a3[10];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = *((_QWORD *)v18 + 2);
  if (v19 == 1)
  {
    v20 = *((_OWORD *)v18 + 5);
    *((_OWORD *)v17 + 4) = *((_OWORD *)v18 + 4);
    *((_OWORD *)v17 + 5) = v20;
    *((_OWORD *)v17 + 6) = *((_OWORD *)v18 + 6);
    *(_OWORD *)(v17 + 105) = *(_OWORD *)(v18 + 105);
    v21 = *((_OWORD *)v18 + 1);
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_OWORD *)v17 + 1) = v21;
    v22 = *((_OWORD *)v18 + 3);
    *((_OWORD *)v17 + 2) = *((_OWORD *)v18 + 2);
    *((_OWORD *)v17 + 3) = v22;
  }
  else
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
    *((_QWORD *)v17 + 2) = v19;
    *(_OWORD *)(v17 + 24) = *(_OWORD *)(v18 + 24);
    *((_QWORD *)v17 + 5) = *((_QWORD *)v18 + 5);
    v23 = *((_OWORD *)v18 + 4);
    *((_OWORD *)v17 + 3) = *((_OWORD *)v18 + 3);
    *((_OWORD *)v17 + 4) = v23;
    v17[80] = v18[80];
    *(_OWORD *)(v17 + 88) = *(_OWORD *)(v18 + 88);
    *(_OWORD *)(v17 + 104) = *(_OWORD *)(v18 + 104);
    v17[120] = v18[120];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v24 = a3[11];
  v25 = (_DWORD *)((char *)a1 + v24);
  v26 = (_DWORD *)((char *)a2 + v24);
  v27 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *v25 = *v26;
    v30 = *(int *)(v27 + 20);
    v31 = (char *)v25 + v30;
    v32 = (char *)v26 + v30;
    v33 = sub_1AD63AF28();
    v34 = *(_QWORD *)(v33 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v32, 1, v33))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
    }
    *(_QWORD *)((char *)v25 + *(int *)(v27 + 24)) = *(_QWORD *)((char *)v26 + *(int *)(v27 + 24));
    v36 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v28 + 56);
    swift_bridgeObjectRetain();
    v36(v25, 0, 1, v27);
    v15 = a3;
  }
  *(_QWORD *)((char *)a1 + v15[12]) = *(_QWORD *)((char *)a2 + v15[12]);
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *sub_1AD0A7E3C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  uint64_t v40;
  _DWORD *v41;
  _DWORD *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(_DWORD *, uint64_t, uint64_t);
  int v46;
  int v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t (*v58)(char *, uint64_t, uint64_t);
  int v59;
  size_t v60;
  void *v61;
  void (*v62)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v64;
  char *__dst;
  void *__dsta;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a3[9];
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63B03C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[10];
  v16 = (uint64_t)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = *(_QWORD *)((char *)a1 + v15 + 16);
  v19 = *(_QWORD *)((char *)a2 + v15 + 16);
  if (v18 == 1)
  {
    if (v19 == 1)
    {
      v20 = *(_OWORD *)v17;
      v21 = *((_OWORD *)v17 + 1);
      v22 = *((_OWORD *)v17 + 3);
      *(_OWORD *)(v16 + 32) = *((_OWORD *)v17 + 2);
      *(_OWORD *)(v16 + 48) = v22;
      *(_OWORD *)v16 = v20;
      *(_OWORD *)(v16 + 16) = v21;
      v23 = *((_OWORD *)v17 + 4);
      v24 = *((_OWORD *)v17 + 5);
      v25 = *((_OWORD *)v17 + 6);
      *(_OWORD *)(v16 + 105) = *(_OWORD *)(v17 + 105);
      *(_OWORD *)(v16 + 80) = v24;
      *(_OWORD *)(v16 + 96) = v25;
      *(_OWORD *)(v16 + 64) = v23;
    }
    else
    {
      *(_QWORD *)v16 = *(_QWORD *)v17;
      *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
      *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
      *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
      *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
      *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
      v32 = *((_OWORD *)v17 + 3);
      v33 = *((_OWORD *)v17 + 4);
      *(_BYTE *)(v16 + 80) = v17[80];
      *(_OWORD *)(v16 + 48) = v32;
      *(_OWORD *)(v16 + 64) = v33;
      v34 = *(_OWORD *)(v17 + 88);
      v35 = *(_OWORD *)(v17 + 104);
      *(_BYTE *)(v16 + 120) = v17[120];
      *(_OWORD *)(v16 + 104) = v35;
      *(_OWORD *)(v16 + 88) = v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v19 == 1)
  {
    sub_1AD0661D0(v16);
    v26 = *((_OWORD *)v17 + 3);
    v28 = *(_OWORD *)v17;
    v27 = *((_OWORD *)v17 + 1);
    *(_OWORD *)(v16 + 32) = *((_OWORD *)v17 + 2);
    *(_OWORD *)(v16 + 48) = v26;
    *(_OWORD *)v16 = v28;
    *(_OWORD *)(v16 + 16) = v27;
    v30 = *((_OWORD *)v17 + 5);
    v29 = *((_OWORD *)v17 + 6);
    v31 = *((_OWORD *)v17 + 4);
    *(_OWORD *)(v16 + 105) = *(_OWORD *)(v17 + 105);
    *(_OWORD *)(v16 + 80) = v30;
    *(_OWORD *)(v16 + 96) = v29;
    *(_OWORD *)(v16 + 64) = v31;
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    *(_QWORD *)(v16 + 8) = *((_QWORD *)v17 + 1);
    *(_QWORD *)(v16 + 16) = *((_QWORD *)v17 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v16 + 24) = *((_QWORD *)v17 + 3);
    *(_QWORD *)(v16 + 32) = *((_QWORD *)v17 + 4);
    *(_QWORD *)(v16 + 40) = *((_QWORD *)v17 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v36 = *((_OWORD *)v17 + 3);
    v37 = *((_OWORD *)v17 + 4);
    *(_BYTE *)(v16 + 80) = v17[80];
    *(_OWORD *)(v16 + 48) = v36;
    *(_OWORD *)(v16 + 64) = v37;
    v38 = *(_OWORD *)(v17 + 88);
    v39 = *(_OWORD *)(v17 + 104);
    *(_BYTE *)(v16 + 120) = v17[120];
    *(_OWORD *)(v16 + 104) = v39;
    *(_OWORD *)(v16 + 88) = v38;
  }
  v40 = a3[11];
  v41 = (_DWORD *)((char *)a1 + v40);
  v42 = (_DWORD *)((char *)a2 + v40);
  v43 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v44 = *(_QWORD *)(v43 - 8);
  v45 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v44 + 48);
  v46 = v45(v41, 1, v43);
  v47 = v45(v42, 1, v43);
  if (!v46)
  {
    if (v47)
    {
      sub_1AD066230((uint64_t)v41, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_20;
    }
    *v41 = *v42;
    v54 = *(int *)(v43 + 20);
    v55 = (char *)v41 + v54;
    v56 = (char *)v42 + v54;
    v57 = sub_1AD63AF28();
    v64 = *(_QWORD *)(v57 - 8);
    v58 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
    __dsta = v55;
    LODWORD(v55) = v58(v55, 1, v57);
    v59 = v58(v56, 1, v57);
    if ((_DWORD)v55)
    {
      if (!v59)
      {
        (*(void (**)(void *, char *, uint64_t))(v64 + 16))(__dsta, v56, v57);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v64 + 56))(__dsta, 0, 1, v57);
        goto LABEL_32;
      }
      v60 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v61 = __dsta;
    }
    else
    {
      if (!v59)
      {
        (*(void (**)(void *, char *, uint64_t))(v64 + 24))(__dsta, v56, v57);
        goto LABEL_32;
      }
      (*(void (**)(void *, uint64_t))(v64 + 8))(__dsta, v57);
      v60 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v61 = __dsta;
    }
    memcpy(v61, v56, v60);
LABEL_32:
    *(_QWORD *)((char *)v41 + *(int *)(v43 + 24)) = *(_QWORD *)((char *)v42 + *(int *)(v43 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    goto LABEL_33;
  }
  if (v47)
  {
LABEL_20:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_33;
  }
  *v41 = *v42;
  v48 = *(int *)(v43 + 20);
  __dst = (char *)v41 + v48;
  v49 = (char *)v42 + v48;
  v50 = sub_1AD63AF28();
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(__dst, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(__dst, v49, v50);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(__dst, 0, 1, v50);
  }
  *(_QWORD *)((char *)v41 + *(int *)(v43 + 24)) = *(_QWORD *)((char *)v42 + *(int *)(v43 + 24));
  v62 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v44 + 56);
  swift_bridgeObjectRetain();
  v62(v41, 0, 1, v43);
LABEL_33:
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AD0A83D8(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  _OWORD *v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  _DWORD *v21;
  _DWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  a1[4] = a2[4];
  v8 = a3[9];
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_1AD63B03C();
  v12 = *(_QWORD *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
  }
  v14 = a3[10];
  v15 = a3[11];
  v16 = (_OWORD *)((char *)a1 + v14);
  v17 = (_OWORD *)((char *)a2 + v14);
  v18 = v17[5];
  v16[4] = v17[4];
  v16[5] = v18;
  v16[6] = v17[6];
  *(_OWORD *)((char *)v16 + 105) = *(_OWORD *)((char *)v17 + 105);
  v19 = v17[1];
  *v16 = *v17;
  v16[1] = v19;
  v20 = v17[3];
  v16[2] = v17[2];
  v16[3] = v20;
  v21 = (_DWORD *)((char *)a1 + v15);
  v22 = (_DWORD *)((char *)a2 + v15);
  v23 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    v26 = *(int *)(v23 + 20);
    __dst = (char *)v21 + v26;
    v27 = (char *)v22 + v26;
    v28 = sub_1AD63AF28();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v29 + 32))(__dst, v27, v28);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(__dst, 0, 1, v28);
    }
    *(_QWORD *)((char *)v21 + *(int *)(v23 + 24)) = *(_QWORD *)((char *)v22 + *(int *)(v23 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  return a1;
}

_QWORD *sub_1AD0A860C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  _DWORD *v29;
  _DWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_DWORD *, uint64_t, uint64_t);
  int v34;
  int v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t (*v46)(char *, uint64_t, uint64_t);
  int v47;
  size_t v48;
  void *v49;
  uint64_t v51;
  char *__dst;
  void *__dsta;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[5];
  a1[4] = a2[4];
  a1[5] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[7];
  a1[6] = a2[6];
  a1[7] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[9];
  a1[8] = a2[8];
  a1[9] = v10;
  swift_bridgeObjectRelease();
  v11 = a3[9];
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_1AD63B03C();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = a3[10];
  v21 = (uint64_t)a1 + v20;
  v22 = (char *)a2 + v20;
  if (*(_QWORD *)((char *)a1 + v20 + 16) == 1)
  {
LABEL_10:
    v24 = *((_OWORD *)v22 + 5);
    *(_OWORD *)(v21 + 64) = *((_OWORD *)v22 + 4);
    *(_OWORD *)(v21 + 80) = v24;
    *(_OWORD *)(v21 + 96) = *((_OWORD *)v22 + 6);
    *(_OWORD *)(v21 + 105) = *(_OWORD *)(v22 + 105);
    v25 = *((_OWORD *)v22 + 1);
    *(_OWORD *)v21 = *(_OWORD *)v22;
    *(_OWORD *)(v21 + 16) = v25;
    v26 = *((_OWORD *)v22 + 3);
    *(_OWORD *)(v21 + 32) = *((_OWORD *)v22 + 2);
    *(_OWORD *)(v21 + 48) = v26;
    goto LABEL_12;
  }
  v23 = *((_QWORD *)v22 + 2);
  if (v23 == 1)
  {
    sub_1AD0661D0(v21);
    goto LABEL_10;
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_QWORD *)(v21 + 16) = v23;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v21 + 24) = *(_OWORD *)(v22 + 24);
  *(_QWORD *)(v21 + 40) = *((_QWORD *)v22 + 5);
  swift_bridgeObjectRelease();
  v27 = *((_OWORD *)v22 + 4);
  *(_OWORD *)(v21 + 48) = *((_OWORD *)v22 + 3);
  *(_OWORD *)(v21 + 64) = v27;
  *(_BYTE *)(v21 + 80) = v22[80];
  *(_OWORD *)(v21 + 88) = *(_OWORD *)(v22 + 88);
  *(_OWORD *)(v21 + 104) = *(_OWORD *)(v22 + 104);
  *(_BYTE *)(v21 + 120) = v22[120];
LABEL_12:
  v28 = a3[11];
  v29 = (_DWORD *)((char *)a1 + v28);
  v30 = (_DWORD *)((char *)a2 + v28);
  v31 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v32 = *(_QWORD *)(v31 - 8);
  v33 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v32 + 48);
  v34 = v33(v29, 1, v31);
  v35 = v33(v30, 1, v31);
  if (!v34)
  {
    if (v35)
    {
      sub_1AD066230((uint64_t)v29, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_18;
    }
    *v29 = *v30;
    v42 = *(int *)(v31 + 20);
    v43 = (char *)v29 + v42;
    v44 = (char *)v30 + v42;
    v45 = sub_1AD63AF28();
    v51 = *(_QWORD *)(v45 - 8);
    v46 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
    __dsta = v43;
    LODWORD(v43) = v46(v43, 1, v45);
    v47 = v46(v44, 1, v45);
    if ((_DWORD)v43)
    {
      if (!v47)
      {
        (*(void (**)(void *, char *, uint64_t))(v51 + 32))(__dsta, v44, v45);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(__dsta, 0, 1, v45);
        goto LABEL_30;
      }
      v48 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v49 = __dsta;
    }
    else
    {
      if (!v47)
      {
        (*(void (**)(void *, char *, uint64_t))(v51 + 40))(__dsta, v44, v45);
        goto LABEL_30;
      }
      (*(void (**)(void *, uint64_t))(v51 + 8))(__dsta, v45);
      v48 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v49 = __dsta;
    }
    memcpy(v49, v44, v48);
LABEL_30:
    *(_QWORD *)((char *)v29 + *(int *)(v31 + 24)) = *(_QWORD *)((char *)v30 + *(int *)(v31 + 24));
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  if (v35)
  {
LABEL_18:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    goto LABEL_31;
  }
  *v29 = *v30;
  v36 = *(int *)(v31 + 20);
  __dst = (char *)v29 + v36;
  v37 = (char *)v30 + v36;
  v38 = sub_1AD63AF28();
  v39 = *(_QWORD *)(v38 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v37, 1, v38))
  {
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(__dst, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(__dst, v37, v38);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v39 + 56))(__dst, 0, 1, v38);
  }
  *(_QWORD *)((char *)v29 + *(int *)(v31 + 24)) = *(_QWORD *)((char *)v30 + *(int *)(v31 + 24));
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
LABEL_31:
  *(_QWORD *)((char *)a1 + a3[12]) = *(_QWORD *)((char *)a2 + a3[12]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD0A8A84()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A8A90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    v10 = *(_QWORD *)(v9 - 8);
    if (*(_DWORD *)(v10 + 84) == (_DWORD)a2)
    {
      v11 = v9;
      v12 = *(int *)(a3 + 36);
    }
    else
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      v10 = *(_QWORD *)(v11 - 8);
      v12 = *(int *)(a3 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1 + v12, a2, v11);
  }
}

uint64_t sub_1AD0A8B44()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A8B50(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 44);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1AD0A8BF4()
{
  unint64_t v0;
  unint64_t v1;

  sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E5320, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
  if (v0 <= 0x3F)
  {
    sub_1ACFFECF8(319, &qword_1ED2E1DC8, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ArtworkMetadata);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t sub_1AD0A8CBC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_DWORD *, _QWORD, uint64_t, uint64_t);
  char *__dst;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 == 1)
    {
      v12 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v13 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v13;
      v14 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v14;
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_QWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
      *(_QWORD *)(a1 + 104) = a2[13];
      v16 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v16;
      *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
      *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v17 = *(int *)(a3 + 36);
    v18 = (_DWORD *)(a1 + v17);
    v19 = (_DWORD *)((char *)a2 + v17);
    v20 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *v18 = *v19;
      v23 = *(int *)(v20 + 20);
      __dst = (char *)v18 + v23;
      v24 = (char *)v19 + v23;
      v25 = sub_1AD63AF28();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      *(_QWORD *)((char *)v18 + *(int *)(v20 + 24)) = *(_QWORD *)((char *)v19 + *(int *)(v20 + 24));
      v28 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56);
      swift_bridgeObjectRetain();
      v28(v18, 0, 1, v20);
    }
    *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 40));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD0A8F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_1AD63AF28();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD0A901C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_DWORD *, _QWORD, uint64_t, uint64_t);
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v15 = *(int *)(a3 + 36);
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v21 = *(int *)(v18 + 20);
    __dst = (char *)v16 + v21;
    v22 = (char *)v17 + v21;
    v23 = sub_1AD63AF28();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
    v26 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    v26(v16, 0, 1, v18);
  }
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD0A925C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_DWORD *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  size_t v51;
  void *v52;
  void (*v53)(_DWORD *, _QWORD, uint64_t, uint64_t);
  void *v55;
  uint64_t v56;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 64);
  v7 = (__int128 *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 80);
      v11 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 80) = v10;
      v12 = *(_OWORD *)(a2 + 128);
      v13 = *(_OWORD *)(a2 + 144);
      v14 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
      *(_OWORD *)(a1 + 144) = v13;
      *(_OWORD *)(a1 + 160) = v14;
      *(_OWORD *)(a1 + 128) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      v21 = *(_OWORD *)(a2 + 112);
      v22 = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v21;
      *(_OWORD *)(a1 + 128) = v22;
      v23 = *(_OWORD *)(a2 + 152);
      v24 = *(_OWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      *(_OWORD *)(a1 + 168) = v24;
      *(_OWORD *)(a1 + 152) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1AD0661D0(a1 + 64);
    v15 = *(_OWORD *)(a2 + 112);
    v17 = *v7;
    v16 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    *v6 = v17;
    *(_OWORD *)(a1 + 80) = v16;
    v19 = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 160);
    v20 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    *(_OWORD *)(a1 + 144) = v19;
    *(_OWORD *)(a1 + 160) = v18;
    *(_OWORD *)(a1 + 128) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)(a2 + 112);
    v26 = *(_OWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v25;
    *(_OWORD *)(a1 + 128) = v26;
    v27 = *(_OWORD *)(a2 + 152);
    v28 = *(_OWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = v28;
    *(_OWORD *)(a1 + 152) = v27;
  }
  v29 = *(int *)(a3 + 36);
  v30 = (_DWORD *)(a1 + v29);
  v31 = (_DWORD *)(a2 + v29);
  v32 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (v36)
    {
      sub_1AD066230((uint64_t)v30, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_14;
    }
    v56 = a3;
    *v30 = *v31;
    v44 = *(int *)(v32 + 20);
    v45 = (char *)v30 + v44;
    v46 = (char *)v31 + v44;
    v47 = sub_1AD63AF28();
    v48 = *(_QWORD *)(v47 - 8);
    v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
    v55 = v45;
    LODWORD(v45) = v49(v45, 1, v47);
    v50 = v49(v46, 1, v47);
    if ((_DWORD)v45)
    {
      if (!v50)
      {
        (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v55, v46, v47);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v55, 0, 1, v47);
        goto LABEL_25;
      }
      v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v52 = v55;
    }
    else
    {
      if (!v50)
      {
        (*(void (**)(void *, char *, uint64_t))(v48 + 24))(v55, v46, v47);
        goto LABEL_25;
      }
      (*(void (**)(void *, uint64_t))(v48 + 8))(v55, v47);
      v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v52 = v55;
    }
    memcpy(v52, v46, v51);
LABEL_25:
    *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
LABEL_26:
    a3 = v56;
    goto LABEL_27;
  }
  if (!v36)
  {
    v56 = a3;
    *v30 = *v31;
    v37 = *(int *)(v32 + 20);
    v38 = (char *)v30 + v37;
    v39 = (char *)v31 + v37;
    v40 = sub_1AD63AF28();
    v41 = *(_QWORD *)(v40 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
    {
      v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
    }
    *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
    v53 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
    swift_bridgeObjectRetain();
    v53(v30, 0, 1, v32);
    goto LABEL_26;
  }
LABEL_14:
  v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
  memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
LABEL_27:
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AD0A9704(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  a1[10] = a2[10];
  *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  v10 = a2[7];
  v11 = *(int *)(a3 + 36);
  v12 = (_DWORD *)((char *)a1 + v11);
  v13 = (_DWORD *)((char *)a2 + v11);
  a1[6] = a2[6];
  a1[7] = v10;
  v14 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v17 = *(int *)(v14 + 20);
    __dst = (char *)v12 + v17;
    v18 = (char *)v13 + v17;
    v19 = sub_1AD63AF28();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    *(_QWORD *)((char *)v12 + *(int *)(v14 + 24)) = *(_QWORD *)((char *)v13 + *(int *)(v14 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  *(_QWORD *)((char *)a1 + *(int *)(a3 + 40)) = *(_QWORD *)((char *)a2 + *(int *)(a3 + 40));
  return a1;
}

uint64_t sub_1AD0A98A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_DWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  size_t v37;
  void *v38;
  void *v40;
  uint64_t v41;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80) == 1)
    goto LABEL_4;
  v10 = *(_QWORD *)(a2 + 80);
  if (v10 == 1)
  {
    sub_1AD0661D0(a1 + 64);
LABEL_4:
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v14 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v14;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
LABEL_6:
  v15 = *(int *)(a3 + 36);
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_1AD066230((uint64_t)v16, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_12;
    }
    v41 = a3;
    *v16 = *v17;
    v30 = *(int *)(v18 + 20);
    v31 = (char *)v16 + v30;
    v32 = (char *)v17 + v30;
    v33 = sub_1AD63AF28();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v40 = v31;
    LODWORD(v31) = v35(v31, 1, v33);
    v36 = v35(v32, 1, v33);
    if ((_DWORD)v31)
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v34 + 32))(v40, v32, v33);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v40, 0, 1, v33);
        goto LABEL_23;
      }
      v37 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v38 = v40;
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(void *, char *, uint64_t))(v34 + 40))(v40, v32, v33);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v34 + 8))(v40, v33);
      v37 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v38 = v40;
    }
    memcpy(v38, v32, v37);
LABEL_23:
    *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
    swift_bridgeObjectRelease();
LABEL_24:
    a3 = v41;
    goto LABEL_25;
  }
  if (!v22)
  {
    v41 = a3;
    *v16 = *v17;
    v23 = *(int *)(v18 + 20);
    v24 = (char *)v16 + v23;
    v25 = (char *)v17 + v23;
    v26 = sub_1AD63AF28();
    v27 = *(_QWORD *)(v26 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
    }
    *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    goto LABEL_24;
  }
LABEL_12:
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
  memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
LABEL_25:
  *(_QWORD *)(a1 + *(int *)(a3 + 40)) = *(_QWORD *)(a2 + *(int *)(a3 + 40));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD0A9C38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A9C44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, &qword_1EECD1CB8);
}

uint64_t sub_1AD0A9C50()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0A9C5C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, &qword_1EECD1CB8);
}

void sub_1AD0A9C68()
{
  unint64_t v0;

  sub_1ACFFECF8(319, &qword_1ED2E1DC8, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ArtworkMetadata);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1AD0A9D00(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  _DWORD *v19;
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(_DWORD *, _QWORD, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v16 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v11;
    v12 = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 == 1)
    {
      v13 = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 160) = v13;
      *(_OWORD *)(a1 + 176) = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 185) = *(_OWORD *)((char *)a2 + 185);
      v14 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v14;
      v15 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v15;
    }
    else
    {
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_QWORD *)(a1 + 96) = v12;
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 13);
      *(_QWORD *)(a1 + 120) = a2[15];
      v17 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v17;
      *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 23);
      *(_BYTE *)(a1 + 200) = *((_BYTE *)a2 + 200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v18 = *(int *)(a3 + 40);
    v19 = (_DWORD *)(a1 + v18);
    v20 = (_DWORD *)((char *)a2 + v18);
    v21 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      *v19 = *v20;
      v24 = *(int *)(v21 + 20);
      v25 = (char *)v19 + v24;
      v26 = (char *)v20 + v24;
      v27 = sub_1AD63AF28();
      v28 = *(_QWORD *)(v27 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v28 + 16))(v25, v26, v27);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
      }
      *(_QWORD *)((char *)v19 + *(int *)(v21 + 24)) = *(_QWORD *)((char *)v20 + *(int *)(v21 + 24));
      v30 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v22 + 56);
      swift_bridgeObjectRetain();
      v30(v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t sub_1AD0A9F60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 40);
  v5 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = v4 + *(int *)(v5 + 20);
    v8 = sub_1AD63AF28();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD0AA05C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_DWORD *, _QWORD, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  v11 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v11 == 1)
  {
    v12 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v12;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
    v13 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v13;
    v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 96) = v11;
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v15 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v15;
    *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v16 = *(int *)(a3 + 40);
  v17 = (_DWORD *)(a1 + v16);
  v18 = (_DWORD *)(a2 + v16);
  v19 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    *v17 = *v18;
    v22 = *(int *)(v19 + 20);
    v23 = (char *)v17 + v22;
    v24 = (char *)v18 + v22;
    v25 = sub_1AD63AF28();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
    }
    *(_QWORD *)((char *)v17 + *(int *)(v19 + 24)) = *(_QWORD *)((char *)v18 + *(int *)(v19 + 24));
    v28 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56);
    swift_bridgeObjectRetain();
    v28(v17, 0, 1, v19);
  }
  return a1;
}

uint64_t sub_1AD0AA290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_DWORD *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  void (*v52)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 80);
  v7 = (__int128 *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 96);
      v11 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 96) = v10;
      v12 = *(_OWORD *)(a2 + 144);
      v13 = *(_OWORD *)(a2 + 160);
      v14 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
      *(_OWORD *)(a1 + 160) = v13;
      *(_OWORD *)(a1 + 176) = v14;
      *(_OWORD *)(a1 + 144) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      v21 = *(_OWORD *)(a2 + 128);
      v22 = *(_OWORD *)(a2 + 144);
      *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
      *(_OWORD *)(a1 + 128) = v21;
      *(_OWORD *)(a1 + 144) = v22;
      v23 = *(_OWORD *)(a2 + 168);
      v24 = *(_OWORD *)(a2 + 184);
      *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = v24;
      *(_OWORD *)(a1 + 168) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1AD0661D0(a1 + 80);
    v15 = *(_OWORD *)(a2 + 128);
    v17 = *v7;
    v16 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v15;
    *v6 = v17;
    *(_OWORD *)(a1 + 96) = v16;
    v19 = *(_OWORD *)(a2 + 160);
    v18 = *(_OWORD *)(a2 + 176);
    v20 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
    *(_OWORD *)(a1 + 160) = v19;
    *(_OWORD *)(a1 + 176) = v18;
    *(_OWORD *)(a1 + 144) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)(a2 + 128);
    v26 = *(_OWORD *)(a2 + 144);
    *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
    *(_OWORD *)(a1 + 128) = v25;
    *(_OWORD *)(a1 + 144) = v26;
    v27 = *(_OWORD *)(a2 + 168);
    v28 = *(_OWORD *)(a2 + 184);
    *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = v28;
    *(_OWORD *)(a1 + 168) = v27;
  }
  v29 = *(int *)(a3 + 40);
  v30 = (_DWORD *)(a1 + v29);
  v31 = (_DWORD *)(a2 + v29);
  v32 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (v36)
    {
      sub_1AD066230((uint64_t)v30, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_14;
    }
    *v30 = *v31;
    v44 = *(int *)(v32 + 20);
    v45 = (char *)v30 + v44;
    v46 = (char *)v31 + v44;
    v47 = sub_1AD63AF28();
    v48 = *(_QWORD *)(v47 - 8);
    v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
    v50 = v49(v45, 1, v47);
    v51 = v49(v46, 1, v47);
    if (v50)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
LABEL_23:
        *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 24))(v45, v46, v47);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
    }
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_23;
  }
  if (v36)
  {
LABEL_14:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    return a1;
  }
  *v30 = *v31;
  v37 = *(int *)(v32 + 20);
  v38 = (char *)v30 + v37;
  v39 = (char *)v31 + v37;
  v40 = sub_1AD63AF28();
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
  v52 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
  swift_bridgeObjectRetain();
  v52(v30, 0, 1, v32);
  return a1;
}

_OWORD *sub_1AD0AA704(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  *(_OWORD *)((char *)a1 + 185) = *(_OWORD *)((char *)a2 + 185);
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[9];
  v10 = *(int *)(a3 + 40);
  v11 = (_DWORD *)((char *)a1 + v10);
  v12 = (_DWORD *)((char *)a2 + v10);
  a1[8] = a2[8];
  a1[9] = v9;
  v13 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v14 = *(_QWORD *)(v13 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    v16 = *(int *)(v13 + 20);
    v17 = (char *)v11 + v16;
    v18 = (char *)v12 + v16;
    v19 = sub_1AD63AF28();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    *(_QWORD *)((char *)v11 + *(int *)(v13 + 24)) = *(_QWORD *)((char *)v12 + *(int *)(v13 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  }
  return a1;
}

uint64_t sub_1AD0AA884(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_DWORD *, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(char *, uint64_t, uint64_t);
  int v37;
  int v38;
  uint64_t v39;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v10;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 96) == 1)
    goto LABEL_4;
  v11 = *(_QWORD *)(a2 + 96);
  if (v11 == 1)
  {
    sub_1AD0661D0(a1 + 80);
LABEL_4:
    v12 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v12;
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 185) = *(_OWORD *)(a2 + 185);
    v13 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v13;
    v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 200) = *(_BYTE *)(a2 + 200);
LABEL_6:
  v16 = *(int *)(a3 + 40);
  v17 = (_DWORD *)(a1 + v16);
  v18 = (_DWORD *)(a2 + v16);
  v19 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48);
  v22 = v21(v17, 1, v19);
  v23 = v21(v18, 1, v19);
  if (!v22)
  {
    if (v23)
    {
      sub_1AD066230((uint64_t)v17, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_12;
    }
    *v17 = *v18;
    v31 = *(int *)(v19 + 20);
    v32 = (char *)v17 + v31;
    v33 = (char *)v18 + v31;
    v34 = sub_1AD63AF28();
    v35 = *(_QWORD *)(v34 - 8);
    v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
    v37 = v36(v32, 1, v34);
    v38 = v36(v33, 1, v34);
    if (v37)
    {
      if (!v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
LABEL_21:
        *(_QWORD *)((char *)v17 + *(int *)(v19 + 24)) = *(_QWORD *)((char *)v18 + *(int *)(v19 + 24));
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v32, v33, v34);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
    }
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_21;
  }
  if (v23)
  {
LABEL_12:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    return a1;
  }
  *v17 = *v18;
  v24 = *(int *)(v19 + 20);
  v25 = (char *)v17 + v24;
  v26 = (char *)v18 + v24;
  v27 = sub_1AD63AF28();
  v28 = *(_QWORD *)(v27 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v28 + 48))(v26, 1, v27))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v25, v26, v27);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v28 + 56))(v25, 0, 1, v27);
  }
  *(_QWORD *)((char *)v17 + *(int *)(v19 + 24)) = *(_QWORD *)((char *)v18 + *(int *)(v19 + 24));
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  return a1;
}

uint64_t sub_1AD0AABDC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0AABE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v9);
  }
}

uint64_t sub_1AD0AAC74()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0AAC80(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 40), a2, a2, v7);
  }
  return result;
}

void sub_1AD0AACF8()
{
  unint64_t v0;

  sub_1ACFFECF8(319, &qword_1ED2E1DC8, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ArtworkMetadata);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1AD0AAD8C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0AAD98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, &qword_1EECD1CB8);
}

uint64_t sub_1AD0AADA4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0AADB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, &qword_1EECD1CB8);
}

uint64_t sub_1AD0AADBC(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;
  _DWORD *v17;
  _DWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_DWORD *, _QWORD, uint64_t, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v14 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[8];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v10 == 1)
    {
      v11 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v11;
      *(_OWORD *)(a1 + 144) = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 153) = *(_OWORD *)((char *)a2 + 153);
      v12 = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 64) = v12;
      v13 = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 96) = v13;
    }
    else
    {
      *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
      *(_QWORD *)(a1 + 64) = v10;
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 9);
      *(_QWORD *)(a1 + 88) = a2[11];
      v15 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v15;
      *(_BYTE *)(a1 + 128) = *((_BYTE *)a2 + 128);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 17);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      *(_BYTE *)(a1 + 168) = *((_BYTE *)a2 + 168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v16 = *(int *)(a3 + 32);
    v17 = (_DWORD *)(a1 + v16);
    v18 = (_DWORD *)((char *)a2 + v16);
    v19 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      *v17 = *v18;
      v22 = *(int *)(v19 + 20);
      v23 = (char *)v17 + v22;
      v24 = (char *)v18 + v22;
      v25 = sub_1AD63AF28();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      }
      *(_QWORD *)((char *)v17 + *(int *)(v19 + 24)) = *(_QWORD *)((char *)v18 + *(int *)(v19 + 24));
      v28 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v20 + 56);
      swift_bridgeObjectRetain();
      v28(v17, 0, 1, v19);
    }
  }
  return a1;
}

uint64_t sub_1AD0AAFFC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 32);
  v5 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    v7 = v4 + *(int *)(v5 + 20);
    v8 = sub_1AD63AF28();
    v9 = *(_QWORD *)(v8 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD0AB0E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_DWORD *, _QWORD, uint64_t, uint64_t);

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v9 == 1)
  {
    v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v11;
    v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = v9;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v14 = *(int *)(a3 + 32);
  v15 = (_DWORD *)(a1 + v14);
  v16 = (_DWORD *)(a2 + v14);
  v17 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v18 = *(_QWORD *)(v17 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v15 = *v16;
    v20 = *(int *)(v17 + 20);
    v21 = (char *)v15 + v20;
    v22 = (char *)v16 + v20;
    v23 = sub_1AD63AF28();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    *(_QWORD *)((char *)v15 + *(int *)(v17 + 24)) = *(_QWORD *)((char *)v16 + *(int *)(v17 + 24));
    v26 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56);
    swift_bridgeObjectRetain();
    v26(v15, 0, 1, v17);
  }
  return a1;
}

uint64_t sub_1AD0AB2FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_DWORD *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  void (*v52)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 48);
  v7 = (__int128 *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 64);
      v11 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 64) = v10;
      v12 = *(_OWORD *)(a2 + 112);
      v13 = *(_OWORD *)(a2 + 128);
      v14 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
      *(_OWORD *)(a1 + 128) = v13;
      *(_OWORD *)(a1 + 144) = v14;
      *(_OWORD *)(a1 + 112) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v21 = *(_OWORD *)(a2 + 96);
      v22 = *(_OWORD *)(a2 + 112);
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v21;
      *(_OWORD *)(a1 + 112) = v22;
      v23 = *(_OWORD *)(a2 + 136);
      v24 = *(_OWORD *)(a2 + 152);
      *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = v24;
      *(_OWORD *)(a1 + 136) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1AD0661D0(a1 + 48);
    v15 = *(_OWORD *)(a2 + 96);
    v17 = *v7;
    v16 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v15;
    *v6 = v17;
    *(_OWORD *)(a1 + 64) = v16;
    v19 = *(_OWORD *)(a2 + 128);
    v18 = *(_OWORD *)(a2 + 144);
    v20 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    *(_OWORD *)(a1 + 128) = v19;
    *(_OWORD *)(a1 + 144) = v18;
    *(_OWORD *)(a1 + 112) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)(a2 + 96);
    v26 = *(_OWORD *)(a2 + 112);
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v25;
    *(_OWORD *)(a1 + 112) = v26;
    v27 = *(_OWORD *)(a2 + 136);
    v28 = *(_OWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = v28;
    *(_OWORD *)(a1 + 136) = v27;
  }
  v29 = *(int *)(a3 + 32);
  v30 = (_DWORD *)(a1 + v29);
  v31 = (_DWORD *)(a2 + v29);
  v32 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (v36)
    {
      sub_1AD066230((uint64_t)v30, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_14;
    }
    *v30 = *v31;
    v44 = *(int *)(v32 + 20);
    v45 = (char *)v30 + v44;
    v46 = (char *)v31 + v44;
    v47 = sub_1AD63AF28();
    v48 = *(_QWORD *)(v47 - 8);
    v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
    v50 = v49(v45, 1, v47);
    v51 = v49(v46, 1, v47);
    if (v50)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
LABEL_23:
        *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 24))(v45, v46, v47);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
    }
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_23;
  }
  if (v36)
  {
LABEL_14:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    return a1;
  }
  *v30 = *v31;
  v37 = *(int *)(v32 + 20);
  v38 = (char *)v30 + v37;
  v39 = (char *)v31 + v37;
  v40 = sub_1AD63AF28();
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
  v52 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
  swift_bridgeObjectRetain();
  v52(v30, 0, 1, v32);
  return a1;
}

_OWORD *sub_1AD0AB730(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  uint64_t v9;
  _DWORD *v10;
  _DWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[9];
  a1[8] = a2[8];
  a1[9] = v5;
  *(_OWORD *)((char *)a1 + 153) = *(_OWORD *)((char *)a2 + 153);
  v6 = a2[3];
  a1[2] = a2[2];
  a1[3] = v6;
  v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  v8 = a2[7];
  v9 = *(int *)(a3 + 32);
  v10 = (_DWORD *)((char *)a1 + v9);
  v11 = (_DWORD *)((char *)a2 + v9);
  a1[6] = a2[6];
  a1[7] = v8;
  v12 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v10 = *v11;
    v15 = *(int *)(v12 + 20);
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_1AD63AF28();
    v19 = *(_QWORD *)(v18 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    {
      v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v16, v17, v18);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
    }
    *(_QWORD *)((char *)v10 + *(int *)(v12 + 24)) = *(_QWORD *)((char *)v11 + *(int *)(v12 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  return a1;
}

uint64_t sub_1AD0AB8A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  _DWORD *v15;
  _DWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_DWORD *, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(char *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64) == 1)
    goto LABEL_4;
  v9 = *(_QWORD *)(a2 + 64);
  if (v9 == 1)
  {
    sub_1AD0661D0(a1 + 48);
LABEL_4:
    v10 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v10;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    v11 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v11;
    v12 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v12;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v13 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v13;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
LABEL_6:
  v14 = *(int *)(a3 + 32);
  v15 = (_DWORD *)(a1 + v14);
  v16 = (_DWORD *)(a2 + v14);
  v17 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v18 + 48);
  v20 = v19(v15, 1, v17);
  v21 = v19(v16, 1, v17);
  if (!v20)
  {
    if (v21)
    {
      sub_1AD066230((uint64_t)v15, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_12;
    }
    *v15 = *v16;
    v29 = *(int *)(v17 + 20);
    v30 = (char *)v15 + v29;
    v31 = (char *)v16 + v29;
    v32 = sub_1AD63AF28();
    v33 = *(_QWORD *)(v32 - 8);
    v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v33 + 48);
    v35 = v34(v30, 1, v32);
    v36 = v34(v31, 1, v32);
    if (v35)
    {
      if (!v36)
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v30, v31, v32);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
LABEL_21:
        *(_QWORD *)((char *)v15 + *(int *)(v17 + 24)) = *(_QWORD *)((char *)v16 + *(int *)(v17 + 24));
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v36)
      {
        (*(void (**)(char *, char *, uint64_t))(v33 + 40))(v30, v31, v32);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v33 + 8))(v30, v32);
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_21;
  }
  if (v21)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    return a1;
  }
  *v15 = *v16;
  v22 = *(int *)(v17 + 20);
  v23 = (char *)v15 + v22;
  v24 = (char *)v16 + v22;
  v25 = sub_1AD63AF28();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v23, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
  }
  *(_QWORD *)((char *)v15 + *(int *)(v17 + 24)) = *(_QWORD *)((char *)v16 + *(int *)(v17 + 24));
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
  return a1;
}

uint64_t sub_1AD0ABBE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0ABBEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 32), a2, v9);
  }
}

uint64_t sub_1AD0ABC78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0ABC84(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 8) = a2;
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 32), a2, a2, v7);
  }
  return result;
}

void sub_1AD0ABCFC()
{
  unint64_t v0;

  sub_1ACFFECF8(319, &qword_1ED2E1DC8, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ArtworkMetadata);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1AD0ABD8C(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;
  _DWORD *v18;
  _DWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v15 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v8;
    v9 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v9;
    v10 = a2[7];
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = v10;
    v11 = a2[10];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 == 1)
    {
      v12 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 169) = *(_OWORD *)((char *)a2 + 169);
      v13 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v13;
      v14 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v14;
    }
    else
    {
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_QWORD *)(a1 + 80) = v11;
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
      *(_QWORD *)(a1 + 104) = a2[13];
      v16 = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 128) = v16;
      *(_BYTE *)(a1 + 144) = *((_BYTE *)a2 + 144);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
      *(_BYTE *)(a1 + 184) = *((_BYTE *)a2 + 184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v17 = a3[9];
    v18 = (_DWORD *)(a1 + v17);
    v19 = (_DWORD *)((char *)a2 + v17);
    v20 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *v18 = *v19;
      v23 = *(int *)(v20 + 20);
      __dst = (char *)v18 + v23;
      v24 = (char *)v19 + v23;
      v25 = sub_1AD63AF28();
      v26 = *(_QWORD *)(v25 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
      {
        v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dst, v24, v25);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
      }
      *(_QWORD *)((char *)v18 + *(int *)(v20 + 24)) = *(_QWORD *)((char *)v19 + *(int *)(v20 + 24));
      v28 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v21 + 56);
      swift_bridgeObjectRetain();
      v28(v18, 0, 1, v20);
    }
    v29 = a3[10];
    v30 = a1 + v29;
    v31 = (uint64_t)a2 + v29;
    v32 = *(_QWORD *)(v31 + 16);
    if (v32 == 1)
    {
      v33 = *(_OWORD *)(v31 + 80);
      *(_OWORD *)(v30 + 64) = *(_OWORD *)(v31 + 64);
      *(_OWORD *)(v30 + 80) = v33;
      *(_OWORD *)(v30 + 96) = *(_OWORD *)(v31 + 96);
      *(_OWORD *)(v30 + 105) = *(_OWORD *)(v31 + 105);
      v34 = *(_OWORD *)(v31 + 16);
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *(_OWORD *)(v30 + 16) = v34;
      v35 = *(_OWORD *)(v31 + 48);
      *(_OWORD *)(v30 + 32) = *(_OWORD *)(v31 + 32);
      *(_OWORD *)(v30 + 48) = v35;
    }
    else
    {
      *(_OWORD *)v30 = *(_OWORD *)v31;
      *(_QWORD *)(v30 + 16) = v32;
      *(_OWORD *)(v30 + 24) = *(_OWORD *)(v31 + 24);
      *(_QWORD *)(v30 + 40) = *(_QWORD *)(v31 + 40);
      v36 = *(_OWORD *)(v31 + 64);
      *(_OWORD *)(v30 + 48) = *(_OWORD *)(v31 + 48);
      *(_OWORD *)(v30 + 64) = v36;
      *(_BYTE *)(v30 + 80) = *(_BYTE *)(v31 + 80);
      *(_OWORD *)(v30 + 88) = *(_OWORD *)(v31 + 88);
      *(_OWORD *)(v30 + 104) = *(_OWORD *)(v31 + 104);
      *(_BYTE *)(v30 + 120) = *(_BYTE *)(v31 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    v37 = a3[11];
    v38 = (_QWORD *)(a1 + v37);
    v39 = (uint64_t *)((char *)a2 + v37);
    v40 = v39[1];
    *v38 = *v39;
    v38[1] = v40;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD0AC094(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v4 = a1 + *(int *)(a2 + 36);
  v5 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5))
  {
    v6 = v4 + *(int *)(v5 + 20);
    v7 = sub_1AD63AF28();
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + *(int *)(a2 + 40) + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD0AC1AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  char *__dst;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  v10 = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 80) = v10;
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v15 = a3[9];
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v16 = *v17;
    v21 = *(int *)(v18 + 20);
    __dst = (char *)v16 + v21;
    v22 = (char *)v17 + v21;
    v23 = sub_1AD63AF28();
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 16))(__dst, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(__dst, 0, 1, v23);
    }
    *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
    v26 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56);
    swift_bridgeObjectRetain();
    v26(v16, 0, 1, v18);
  }
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_QWORD *)(v29 + 16);
  if (v30 == 1)
  {
    v31 = *(_OWORD *)(v29 + 80);
    *(_OWORD *)(v28 + 64) = *(_OWORD *)(v29 + 64);
    *(_OWORD *)(v28 + 80) = v31;
    *(_OWORD *)(v28 + 96) = *(_OWORD *)(v29 + 96);
    *(_OWORD *)(v28 + 105) = *(_OWORD *)(v29 + 105);
    v32 = *(_OWORD *)(v29 + 16);
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_OWORD *)(v28 + 16) = v32;
    v33 = *(_OWORD *)(v29 + 48);
    *(_OWORD *)(v28 + 32) = *(_OWORD *)(v29 + 32);
    *(_OWORD *)(v28 + 48) = v33;
  }
  else
  {
    *(_OWORD *)v28 = *(_OWORD *)v29;
    *(_QWORD *)(v28 + 16) = v30;
    *(_OWORD *)(v28 + 24) = *(_OWORD *)(v29 + 24);
    *(_QWORD *)(v28 + 40) = *(_QWORD *)(v29 + 40);
    v34 = *(_OWORD *)(v29 + 64);
    *(_OWORD *)(v28 + 48) = *(_OWORD *)(v29 + 48);
    *(_OWORD *)(v28 + 64) = v34;
    *(_BYTE *)(v28 + 80) = *(_BYTE *)(v29 + 80);
    *(_OWORD *)(v28 + 88) = *(_OWORD *)(v29 + 88);
    *(_OWORD *)(v28 + 104) = *(_OWORD *)(v29 + 104);
    *(_BYTE *)(v28 + 120) = *(_BYTE *)(v29 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v35 = a3[11];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (_QWORD *)(a2 + v35);
  v38 = v37[1];
  *v36 = *v37;
  v36[1] = v38;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD0AC488(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_DWORD *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  size_t v51;
  void *v52;
  void (*v53)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v54;
  uint64_t v55;
  __int128 *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  uint64_t v79;
  _QWORD *v80;
  _QWORD *v81;
  void *v83;
  int *v84;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 64);
  v7 = (__int128 *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 80);
      v11 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 80) = v10;
      v12 = *(_OWORD *)(a2 + 128);
      v13 = *(_OWORD *)(a2 + 144);
      v14 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
      *(_OWORD *)(a1 + 144) = v13;
      *(_OWORD *)(a1 + 160) = v14;
      *(_OWORD *)(a1 + 128) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      v21 = *(_OWORD *)(a2 + 112);
      v22 = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v21;
      *(_OWORD *)(a1 + 128) = v22;
      v23 = *(_OWORD *)(a2 + 152);
      v24 = *(_OWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      *(_OWORD *)(a1 + 168) = v24;
      *(_OWORD *)(a1 + 152) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1AD0661D0(a1 + 64);
    v15 = *(_OWORD *)(a2 + 112);
    v17 = *v7;
    v16 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    *v6 = v17;
    *(_OWORD *)(a1 + 80) = v16;
    v19 = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 160);
    v20 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    *(_OWORD *)(a1 + 144) = v19;
    *(_OWORD *)(a1 + 160) = v18;
    *(_OWORD *)(a1 + 128) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)(a2 + 112);
    v26 = *(_OWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v25;
    *(_OWORD *)(a1 + 128) = v26;
    v27 = *(_OWORD *)(a2 + 152);
    v28 = *(_OWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = v28;
    *(_OWORD *)(a1 + 152) = v27;
  }
  v29 = a3[9];
  v30 = (_DWORD *)(a1 + v29);
  v31 = (_DWORD *)(a2 + v29);
  v32 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (v35)
  {
    if (!v36)
    {
      v84 = a3;
      *v30 = *v31;
      v37 = *(int *)(v32 + 20);
      v38 = (char *)v30 + v37;
      v39 = (char *)v31 + v37;
      v40 = sub_1AD63AF28();
      v41 = *(_QWORD *)(v40 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
      }
      *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
      v53 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
      swift_bridgeObjectRetain();
      v53(v30, 0, 1, v32);
      goto LABEL_26;
    }
LABEL_14:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    goto LABEL_27;
  }
  if (v36)
  {
    sub_1AD066230((uint64_t)v30, type metadata accessor for LinkPresentation.ArtworkMetadata);
    goto LABEL_14;
  }
  v84 = a3;
  *v30 = *v31;
  v44 = *(int *)(v32 + 20);
  v45 = (char *)v30 + v44;
  v46 = (char *)v31 + v44;
  v47 = sub_1AD63AF28();
  v48 = *(_QWORD *)(v47 - 8);
  v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
  v83 = v45;
  LODWORD(v45) = v49(v45, 1, v47);
  v50 = v49(v46, 1, v47);
  if ((_DWORD)v45)
  {
    if (!v50)
    {
      (*(void (**)(void *, char *, uint64_t))(v48 + 16))(v83, v46, v47);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v83, 0, 1, v47);
      goto LABEL_25;
    }
    v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
    v52 = v83;
  }
  else
  {
    if (!v50)
    {
      (*(void (**)(void *, char *, uint64_t))(v48 + 24))(v83, v46, v47);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v48 + 8))(v83, v47);
    v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
    v52 = v83;
  }
  memcpy(v52, v46, v51);
LABEL_25:
  *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_26:
  a3 = v84;
LABEL_27:
  v54 = a3[10];
  v55 = a1 + v54;
  v56 = (__int128 *)(a2 + v54);
  v57 = *(_QWORD *)(a1 + v54 + 16);
  v58 = *(_QWORD *)(a2 + v54 + 16);
  if (v57 == 1)
  {
    if (v58 == 1)
    {
      v59 = *v56;
      v60 = v56[1];
      v61 = v56[3];
      *(_OWORD *)(v55 + 32) = v56[2];
      *(_OWORD *)(v55 + 48) = v61;
      *(_OWORD *)v55 = v59;
      *(_OWORD *)(v55 + 16) = v60;
      v62 = v56[4];
      v63 = v56[5];
      v64 = v56[6];
      *(_OWORD *)(v55 + 105) = *(__int128 *)((char *)v56 + 105);
      *(_OWORD *)(v55 + 80) = v63;
      *(_OWORD *)(v55 + 96) = v64;
      *(_OWORD *)(v55 + 64) = v62;
    }
    else
    {
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *(_QWORD *)(v55 + 8) = *((_QWORD *)v56 + 1);
      *(_QWORD *)(v55 + 16) = *((_QWORD *)v56 + 2);
      *(_QWORD *)(v55 + 24) = *((_QWORD *)v56 + 3);
      *(_QWORD *)(v55 + 32) = *((_QWORD *)v56 + 4);
      *(_QWORD *)(v55 + 40) = *((_QWORD *)v56 + 5);
      v71 = v56[3];
      v72 = v56[4];
      *(_BYTE *)(v55 + 80) = *((_BYTE *)v56 + 80);
      *(_OWORD *)(v55 + 48) = v71;
      *(_OWORD *)(v55 + 64) = v72;
      v73 = *(__int128 *)((char *)v56 + 88);
      v74 = *(__int128 *)((char *)v56 + 104);
      *(_BYTE *)(v55 + 120) = *((_BYTE *)v56 + 120);
      *(_OWORD *)(v55 + 104) = v74;
      *(_OWORD *)(v55 + 88) = v73;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v58 == 1)
  {
    sub_1AD0661D0(v55);
    v65 = v56[3];
    v67 = *v56;
    v66 = v56[1];
    *(_OWORD *)(v55 + 32) = v56[2];
    *(_OWORD *)(v55 + 48) = v65;
    *(_OWORD *)v55 = v67;
    *(_OWORD *)(v55 + 16) = v66;
    v69 = v56[5];
    v68 = v56[6];
    v70 = v56[4];
    *(_OWORD *)(v55 + 105) = *(__int128 *)((char *)v56 + 105);
    *(_OWORD *)(v55 + 80) = v69;
    *(_OWORD *)(v55 + 96) = v68;
    *(_OWORD *)(v55 + 64) = v70;
  }
  else
  {
    *(_QWORD *)v55 = *(_QWORD *)v56;
    *(_QWORD *)(v55 + 8) = *((_QWORD *)v56 + 1);
    *(_QWORD *)(v55 + 16) = *((_QWORD *)v56 + 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v55 + 24) = *((_QWORD *)v56 + 3);
    *(_QWORD *)(v55 + 32) = *((_QWORD *)v56 + 4);
    *(_QWORD *)(v55 + 40) = *((_QWORD *)v56 + 5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v75 = v56[3];
    v76 = v56[4];
    *(_BYTE *)(v55 + 80) = *((_BYTE *)v56 + 80);
    *(_OWORD *)(v55 + 48) = v75;
    *(_OWORD *)(v55 + 64) = v76;
    v77 = *(__int128 *)((char *)v56 + 88);
    v78 = *(__int128 *)((char *)v56 + 104);
    *(_BYTE *)(v55 + 120) = *((_BYTE *)v56 + 120);
    *(_OWORD *)(v55 + 104) = v78;
    *(_OWORD *)(v55 + 88) = v77;
  }
  v79 = a3[11];
  v80 = (_QWORD *)(a1 + v79);
  v81 = (_QWORD *)(a2 + v79);
  *v80 = *v81;
  v80[1] = v81[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1AD0ACAA8(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  char *__dst;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  a1[10] = a2[10];
  *(_OWORD *)((char *)a1 + 169) = *(_OWORD *)((char *)a2 + 169);
  v9 = a2[5];
  a1[4] = a2[4];
  a1[5] = v9;
  v10 = a2[7];
  v11 = a3[9];
  v12 = (_DWORD *)((char *)a1 + v11);
  v13 = (_DWORD *)((char *)a2 + v11);
  a1[6] = a2[6];
  a1[7] = v10;
  v14 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(_DWORD *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    v17 = *(int *)(v14 + 20);
    __dst = (char *)v12 + v17;
    v18 = (char *)v13 + v17;
    v19 = sub_1AD63AF28();
    v20 = *(_QWORD *)(v19 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(__dst, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(__dst, 0, 1, v19);
    }
    *(_QWORD *)((char *)v12 + *(int *)(v14 + 24)) = *(_QWORD *)((char *)v13 + *(int *)(v14 + 24));
    (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v22 = a3[10];
  v23 = a3[11];
  v24 = (_OWORD *)((char *)a1 + v22);
  v25 = (_OWORD *)((char *)a2 + v22);
  *(_OWORD *)((char *)v24 + 105) = *(_OWORD *)((char *)v25 + 105);
  v26 = v25[6];
  v27 = v25[4];
  v24[5] = v25[5];
  v24[6] = v26;
  v28 = v25[1];
  *v24 = *v25;
  v24[1] = v28;
  v29 = v25[3];
  v24[2] = v25[2];
  v24[3] = v29;
  v24[4] = v27;
  *(_OWORD *)((char *)a1 + v23) = *(_OWORD *)((char *)a2 + v23);
  return a1;
}

uint64_t sub_1AD0ACC78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_DWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, uint64_t);
  int v34;
  size_t v35;
  void *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v51;
  char *__dst;
  void *__dsta;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80) == 1)
    goto LABEL_4;
  v10 = *(_QWORD *)(a2 + 80);
  if (v10 == 1)
  {
    sub_1AD0661D0(a1 + 64);
LABEL_4:
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v14 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v14;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
LABEL_6:
  v15 = a3[9];
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_1AD066230((uint64_t)v16, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_12;
    }
    *v16 = *v17;
    v29 = *(int *)(v18 + 20);
    v30 = (char *)v16 + v29;
    v31 = (char *)v17 + v29;
    v32 = sub_1AD63AF28();
    v51 = *(_QWORD *)(v32 - 8);
    v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
    __dsta = v30;
    LODWORD(v30) = v33(v30, 1, v32);
    v34 = v33(v31, 1, v32);
    if ((_DWORD)v30)
    {
      if (!v34)
      {
        (*(void (**)(void *, char *, uint64_t))(v51 + 32))(__dsta, v31, v32);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v51 + 56))(__dsta, 0, 1, v32);
        goto LABEL_23;
      }
      v35 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v36 = __dsta;
    }
    else
    {
      if (!v34)
      {
        (*(void (**)(void *, char *, uint64_t))(v51 + 40))(__dsta, v31, v32);
        goto LABEL_23;
      }
      (*(void (**)(void *, uint64_t))(v51 + 8))(__dsta, v32);
      v35 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40) - 8) + 64);
      v36 = __dsta;
    }
    memcpy(v36, v31, v35);
LABEL_23:
    *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  if (v22)
  {
LABEL_12:
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    goto LABEL_24;
  }
  *v16 = *v17;
  v23 = *(int *)(v18 + 20);
  __dst = (char *)v16 + v23;
  v24 = (char *)v17 + v23;
  v25 = sub_1AD63AF28();
  v26 = *(_QWORD *)(v25 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v24, 1, v25))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v26 + 32))(__dst, v24, v25);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v26 + 56))(__dst, 0, 1, v25);
  }
  *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_24:
  v37 = a3[10];
  v38 = a1 + v37;
  v39 = a2 + v37;
  if (*(_QWORD *)(a1 + v37 + 16) != 1)
  {
    v40 = *(_QWORD *)(v39 + 16);
    if (v40 != 1)
    {
      *(_OWORD *)v38 = *(_OWORD *)v39;
      *(_QWORD *)(v38 + 16) = v40;
      swift_bridgeObjectRelease();
      *(_OWORD *)(v38 + 24) = *(_OWORD *)(v39 + 24);
      *(_QWORD *)(v38 + 40) = *(_QWORD *)(v39 + 40);
      swift_bridgeObjectRelease();
      v44 = *(_OWORD *)(v39 + 64);
      *(_OWORD *)(v38 + 48) = *(_OWORD *)(v39 + 48);
      *(_OWORD *)(v38 + 64) = v44;
      *(_BYTE *)(v38 + 80) = *(_BYTE *)(v39 + 80);
      *(_OWORD *)(v38 + 88) = *(_OWORD *)(v39 + 88);
      *(_OWORD *)(v38 + 104) = *(_OWORD *)(v39 + 104);
      *(_BYTE *)(v38 + 120) = *(_BYTE *)(v39 + 120);
      goto LABEL_29;
    }
    sub_1AD0661D0(v38);
  }
  v41 = *(_OWORD *)(v39 + 80);
  *(_OWORD *)(v38 + 64) = *(_OWORD *)(v39 + 64);
  *(_OWORD *)(v38 + 80) = v41;
  *(_OWORD *)(v38 + 96) = *(_OWORD *)(v39 + 96);
  *(_OWORD *)(v38 + 105) = *(_OWORD *)(v39 + 105);
  v42 = *(_OWORD *)(v39 + 16);
  *(_OWORD *)v38 = *(_OWORD *)v39;
  *(_OWORD *)(v38 + 16) = v42;
  v43 = *(_OWORD *)(v39 + 48);
  *(_OWORD *)(v38 + 32) = *(_OWORD *)(v39 + 32);
  *(_OWORD *)(v38 + 48) = v43;
LABEL_29:
  v45 = a3[11];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)(a2 + v45);
  v49 = *v47;
  v48 = v47[1];
  *v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD0AD0C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0AD0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, &qword_1EECD1CB8);
}

uint64_t sub_1AD0AD0DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0AD0E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, &qword_1EECD1CB8);
}

void sub_1AD0AD0F4()
{
  unint64_t v0;

  sub_1ACFFECF8(319, &qword_1ED2E1DC8, (void (*)(uint64_t))type metadata accessor for LinkPresentation.ArtworkMetadata);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1AD0AD194(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  _DWORD *v30;
  _DWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_DWORD *, uint64_t, uint64_t);
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  void (*v52)(_DWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v53;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 64);
  v7 = (__int128 *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 80) == 1)
  {
    if (v8 == 1)
    {
      v9 = *v7;
      v10 = *(_OWORD *)(a2 + 80);
      v11 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v11;
      *v6 = v9;
      *(_OWORD *)(a1 + 80) = v10;
      v12 = *(_OWORD *)(a2 + 128);
      v13 = *(_OWORD *)(a2 + 144);
      v14 = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
      *(_OWORD *)(a1 + 144) = v13;
      *(_OWORD *)(a1 + 160) = v14;
      *(_OWORD *)(a1 + 128) = v12;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      v21 = *(_OWORD *)(a2 + 112);
      v22 = *(_OWORD *)(a2 + 128);
      *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
      *(_OWORD *)(a1 + 112) = v21;
      *(_OWORD *)(a1 + 128) = v22;
      v23 = *(_OWORD *)(a2 + 152);
      v24 = *(_OWORD *)(a2 + 168);
      *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
      *(_OWORD *)(a1 + 168) = v24;
      *(_OWORD *)(a1 + 152) = v23;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v8 == 1)
  {
    sub_1AD0661D0(a1 + 64);
    v15 = *(_OWORD *)(a2 + 112);
    v17 = *v7;
    v16 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
    *v6 = v17;
    *(_OWORD *)(a1 + 80) = v16;
    v19 = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 160);
    v20 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    *(_OWORD *)(a1 + 144) = v19;
    *(_OWORD *)(a1 + 160) = v18;
    *(_OWORD *)(a1 + 128) = v20;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v25 = *(_OWORD *)(a2 + 112);
    v26 = *(_OWORD *)(a2 + 128);
    *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
    *(_OWORD *)(a1 + 112) = v25;
    *(_OWORD *)(a1 + 128) = v26;
    v27 = *(_OWORD *)(a2 + 152);
    v28 = *(_OWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = v28;
    *(_OWORD *)(a1 + 152) = v27;
  }
  v29 = *(int *)(a3 + 36);
  v30 = (_DWORD *)(a1 + v29);
  v31 = (_DWORD *)(a2 + v29);
  v32 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v33 + 48);
  v35 = v34(v30, 1, v32);
  v36 = v34(v31, 1, v32);
  if (!v35)
  {
    if (v36)
    {
      sub_1AD066230((uint64_t)v30, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_14;
    }
    *v30 = *v31;
    v44 = *(int *)(v32 + 20);
    v45 = (char *)v30 + v44;
    v46 = (char *)v31 + v44;
    v47 = sub_1AD63AF28();
    v48 = *(_QWORD *)(v47 - 8);
    v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
    v50 = v49(v45, 1, v47);
    v51 = v49(v46, 1, v47);
    if (v50)
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 16))(v45, v46, v47);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
LABEL_23:
        *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v51)
      {
        (*(void (**)(char *, char *, uint64_t))(v48 + 24))(v45, v46, v47);
        goto LABEL_23;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
    }
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    goto LABEL_23;
  }
  if (v36)
  {
LABEL_14:
    v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
    return a1;
  }
  *v30 = *v31;
  v37 = *(int *)(v32 + 20);
  v38 = (char *)v30 + v37;
  v39 = (char *)v31 + v37;
  v40 = sub_1AD63AF28();
  v41 = *(_QWORD *)(v40 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
  {
    v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
  }
  *(_QWORD *)((char *)v30 + *(int *)(v32 + 24)) = *(_QWORD *)((char *)v31 + *(int *)(v32 + 24));
  v52 = *(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v33 + 56);
  swift_bridgeObjectRetain();
  v52(v30, 0, 1, v32);
  return a1;
}

uint64_t sub_1AD0AD5E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  _DWORD *v16;
  _DWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_DWORD *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(char *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 80) == 1)
    goto LABEL_4;
  v10 = *(_QWORD *)(a2 + 80);
  if (v10 == 1)
  {
    sub_1AD0661D0(a1 + 64);
LABEL_4:
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 169) = *(_OWORD *)(a2 + 169);
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    v13 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v13;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  v14 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v14;
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 184) = *(_BYTE *)(a2 + 184);
LABEL_6:
  v15 = *(int *)(a3 + 36);
  v16 = (_DWORD *)(a1 + v15);
  v17 = (_DWORD *)(a2 + v15);
  v18 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(_DWORD *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (v22)
    {
      sub_1AD066230((uint64_t)v16, type metadata accessor for LinkPresentation.ArtworkMetadata);
      goto LABEL_12;
    }
    *v16 = *v17;
    v30 = *(int *)(v18 + 20);
    v31 = (char *)v16 + v30;
    v32 = (char *)v17 + v30;
    v33 = sub_1AD63AF28();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v34 + 48);
    v36 = v35(v31, 1, v33);
    v37 = v35(v32, 1, v33);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
LABEL_21:
        *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
        swift_bridgeObjectRelease();
        return a1;
      }
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v31, v32, v33);
        goto LABEL_21;
      }
      (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v33);
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    goto LABEL_21;
  }
  if (v22)
  {
LABEL_12:
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    return a1;
  }
  *v16 = *v17;
  v23 = *(int *)(v18 + 20);
  v24 = (char *)v16 + v23;
  v25 = (char *)v17 + v23;
  v26 = sub_1AD63AF28();
  v27 = *(_QWORD *)(v26 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  *(_QWORD *)((char *)v16 + *(int *)(v18 + 24)) = *(_QWORD *)((char *)v17 + *(int *)(v18 + 24));
  (*(void (**)(_DWORD *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
  return a1;
}

uint64_t sub_1AD0AD930()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0AD93C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_17Tm(a1, a2, a3, &qword_1EECD1CB8);
}

uint64_t sub_1AD0AD948()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0AD954(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_18Tm(a1, a2, a3, a4, &qword_1EECD1CB8);
}

uint64_t *sub_1AD0AD960(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  _OWORD *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  _OWORD *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  unint64_t v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  _OWORD *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  _OWORD *v59;
  uint64_t v60;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
    return a1;
  }
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_DWORD *)v7 = *(_DWORD *)((char *)a2 + v6);
  *((_QWORD *)v7 + 1) = *(uint64_t *)((char *)a2 + v6 + 8);
  v9 = *(uint64_t *)((char *)a2 + v6 + 32);
  *((_OWORD *)v7 + 1) = *(_OWORD *)((char *)a2 + v6 + 16);
  *((_QWORD *)v7 + 4) = v9;
  v10 = (uint64_t *)((char *)a2 + v6 + 40);
  v11 = *(uint64_t *)((char *)a2 + v6 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v11 >> 60 == 11 || v11 >> 60 == 15)
  {
    *(_OWORD *)(v7 + 40) = *(_OWORD *)v10;
    v12 = *((_QWORD *)v8 + 9);
    if (v12)
      goto LABEL_5;
LABEL_10:
    v20 = *(_OWORD *)(v8 + 72);
    *(_OWORD *)(v7 + 56) = *(_OWORD *)(v8 + 56);
    *(_OWORD *)(v7 + 72) = v20;
    *(_OWORD *)(v7 + 88) = *(_OWORD *)(v8 + 88);
    goto LABEL_11;
  }
  v19 = *v10;
  sub_1AD0040A0(*v10, v11);
  *((_QWORD *)v7 + 5) = v19;
  *((_QWORD *)v7 + 6) = v11;
  v12 = *((_QWORD *)v8 + 9);
  if (!v12)
    goto LABEL_10;
LABEL_5:
  v13 = *((_DWORD *)v8 + 15);
  *((_DWORD *)v7 + 14) = *((_DWORD *)v8 + 14);
  *((_DWORD *)v7 + 15) = v13;
  v7[64] = v8[64];
  v14 = *((_QWORD *)v8 + 10);
  *((_QWORD *)v7 + 9) = v12;
  *((_QWORD *)v7 + 10) = v14;
  v15 = v8 + 88;
  v16 = *((_QWORD *)v8 + 12);
  swift_retain();
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)(v7 + 88) = *v15;
  }
  else
  {
    v18 = *(_QWORD *)v15;
    sub_1AD0040A0(v18, v16);
    *((_QWORD *)v7 + 11) = v18;
    *((_QWORD *)v7 + 12) = v16;
  }
LABEL_11:
  v21 = *((_QWORD *)v8 + 14);
  *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
  *((_QWORD *)v7 + 14) = v21;
  v22 = v8 + 120;
  v23 = *((_QWORD *)v8 + 16);
  swift_retain();
  if (v23 >> 60 == 15)
  {
    *(_OWORD *)(v7 + 120) = *v22;
  }
  else
  {
    v24 = *(_QWORD *)v22;
    sub_1AD0040A0(v24, v23);
    *((_QWORD *)v7 + 15) = v24;
    *((_QWORD *)v7 + 16) = v23;
  }
  v25 = *((_QWORD *)v8 + 18);
  *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
  *((_QWORD *)v7 + 18) = v25;
  v26 = (uint64_t *)(v8 + 152);
  v27 = *((_QWORD *)v8 + 20);
  swift_retain();
  if (v27 >> 60 == 11 || v27 >> 60 == 15)
  {
    *(_OWORD *)(v7 + 152) = *(_OWORD *)v26;
  }
  else
  {
    v28 = *v26;
    sub_1AD0040A0(*v26, v27);
    *((_QWORD *)v7 + 19) = v28;
    *((_QWORD *)v7 + 20) = v27;
  }
  v29 = *((_QWORD *)v8 + 21);
  if (v29)
  {
    v30 = *((_QWORD *)v8 + 22);
    *((_QWORD *)v7 + 21) = v29;
    *((_QWORD *)v7 + 22) = v30;
    v31 = v8 + 184;
    v32 = *((_QWORD *)v8 + 24);
    swift_retain();
    if (v32 >> 60 == 15)
    {
      *(_OWORD *)(v7 + 184) = *v31;
    }
    else
    {
      v35 = *(_QWORD *)v31;
      sub_1AD0040A0(v35, v32);
      *((_QWORD *)v7 + 23) = v35;
      *((_QWORD *)v7 + 24) = v32;
    }
    *((_DWORD *)v7 + 50) = *((_DWORD *)v8 + 50);
    v36 = *((_QWORD *)v8 + 27);
    *((_QWORD *)v7 + 26) = *((_QWORD *)v8 + 26);
    *((_QWORD *)v7 + 27) = v36;
    v37 = v8 + 224;
    v38 = *((_QWORD *)v8 + 29);
    swift_retain();
    if (v38 >> 60 == 15)
    {
      *((_OWORD *)v7 + 14) = *v37;
    }
    else
    {
      v39 = *(_QWORD *)v37;
      sub_1AD0040A0(v39, v38);
      *((_QWORD *)v7 + 28) = v39;
      *((_QWORD *)v7 + 29) = v38;
    }
  }
  else
  {
    v33 = *(_OWORD *)(v8 + 216);
    *(_OWORD *)(v7 + 200) = *(_OWORD *)(v8 + 200);
    *(_OWORD *)(v7 + 216) = v33;
    *((_QWORD *)v7 + 29) = *((_QWORD *)v8 + 29);
    v34 = *(_OWORD *)(v8 + 184);
    *(_OWORD *)(v7 + 168) = *(_OWORD *)(v8 + 168);
    *(_OWORD *)(v7 + 184) = v34;
  }
  v40 = *((_QWORD *)v8 + 32);
  *((_OWORD *)v7 + 15) = *((_OWORD *)v8 + 15);
  *((_QWORD *)v7 + 32) = v40;
  v41 = (uint64_t *)(v8 + 264);
  v42 = *((_QWORD *)v8 + 34);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v42 >> 60 == 11 || v42 >> 60 == 15)
  {
    *(_OWORD *)(v7 + 264) = *(_OWORD *)v41;
  }
  else
  {
    v43 = *v41;
    sub_1AD0040A0(*v41, v42);
    *((_QWORD *)v7 + 33) = v43;
    *((_QWORD *)v7 + 34) = v42;
  }
  v44 = type metadata accessor for CloudKitSharingToken();
  v45 = *(int *)(v44 + 24);
  v46 = &v7[v45];
  v47 = &v8[v45];
  v48 = *(_QWORD *)&v8[v45 + 8];
  *(_QWORD *)v46 = *(_QWORD *)&v8[v45];
  *((_QWORD *)v46 + 1) = v48;
  swift_retain();
  v49 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v50 = &v46[v49];
  v51 = &v47[v49];
  v52 = sub_1AD63AF28();
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  v55 = *(int *)(v44 + 28);
  v56 = &v7[v55];
  v57 = &v8[v55];
  v58 = *((_QWORD *)v57 + 1);
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *((_QWORD *)v56 + 1) = v58;
  v59 = v57 + 16;
  v60 = *((_QWORD *)v57 + 3);
  swift_retain();
  if (v60 == 1)
  {
    *((_OWORD *)v56 + 1) = *v59;
  }
  else
  {
    *((_QWORD *)v56 + 2) = *(_QWORD *)v59;
    *((_QWORD *)v56 + 3) = v60;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD0ADD88(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t result;

  swift_bridgeObjectRelease();
  v4 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  v5 = v4[6];
  if (v5 >> 60 != 15 && (v5 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(v4[5], v5);
  if (v4[9])
  {
    swift_release();
    v7 = v4[12];
    if (v7 >> 60 != 15)
      sub_1AD00412C(v4[11], v7);
  }
  swift_release();
  v8 = v4[16];
  if (v8 >> 60 != 15)
    sub_1AD00412C(v4[15], v8);
  swift_release();
  v9 = v4[20];
  if (v9 >> 60 != 15 && (v9 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(v4[19], v9);
  if (v4[21])
  {
    swift_release();
    v11 = v4[24];
    if (v11 >> 60 != 15)
      sub_1AD00412C(v4[23], v11);
    swift_release();
    v12 = v4[29];
    if (v12 >> 60 != 15)
      sub_1AD00412C(v4[28], v12);
  }
  swift_bridgeObjectRelease();
  swift_release();
  v13 = v4[34];
  if (v13 >> 60 != 15 && (v13 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(v4[33], v13);
  v15 = type metadata accessor for CloudKitSharingToken();
  v16 = (char *)v4 + *(int *)(v15 + 24);
  swift_release();
  v17 = &v16[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28)];
  v18 = sub_1AD63AF28();
  v19 = *(_QWORD *)(v18 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18))
    (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
  v20 = (char *)v4 + *(int *)(v15 + 28);
  swift_release();
  result = *((_QWORD *)v20 + 3);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

_QWORD *sub_1AD0ADF8C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  _OWORD *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  unint64_t v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  _OWORD *v57;
  uint64_t v58;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  *(_DWORD *)v6 = *(_DWORD *)((char *)a2 + v5);
  *((_QWORD *)v6 + 1) = *(_QWORD *)((char *)a2 + v5 + 8);
  v8 = *(_QWORD *)((char *)a2 + v5 + 32);
  *((_OWORD *)v6 + 1) = *(_OWORD *)((char *)a2 + v5 + 16);
  *((_QWORD *)v6 + 4) = v8;
  v9 = (_QWORD *)((char *)a2 + v5 + 40);
  v10 = *(_QWORD *)((char *)a2 + v5 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v10 >> 60 == 11 || v10 >> 60 == 15)
  {
    *(_OWORD *)(v6 + 40) = *(_OWORD *)v9;
    v11 = *((_QWORD *)v7 + 9);
    if (v11)
      goto LABEL_4;
  }
  else
  {
    v17 = *v9;
    sub_1AD0040A0(*v9, v10);
    *((_QWORD *)v6 + 5) = v17;
    *((_QWORD *)v6 + 6) = v10;
    v11 = *((_QWORD *)v7 + 9);
    if (v11)
    {
LABEL_4:
      v12 = *((_DWORD *)v7 + 15);
      *((_DWORD *)v6 + 14) = *((_DWORD *)v7 + 14);
      *((_DWORD *)v6 + 15) = v12;
      v6[64] = v7[64];
      v13 = *((_QWORD *)v7 + 10);
      *((_QWORD *)v6 + 9) = v11;
      *((_QWORD *)v6 + 10) = v13;
      v14 = v7 + 88;
      v15 = *((_QWORD *)v7 + 12);
      swift_retain();
      if (v15 >> 60 == 15)
      {
        *(_OWORD *)(v6 + 88) = *v14;
      }
      else
      {
        v16 = *(_QWORD *)v14;
        sub_1AD0040A0(v16, v15);
        *((_QWORD *)v6 + 11) = v16;
        *((_QWORD *)v6 + 12) = v15;
      }
      goto LABEL_9;
    }
  }
  v18 = *(_OWORD *)(v7 + 72);
  *(_OWORD *)(v6 + 56) = *(_OWORD *)(v7 + 56);
  *(_OWORD *)(v6 + 72) = v18;
  *(_OWORD *)(v6 + 88) = *(_OWORD *)(v7 + 88);
LABEL_9:
  v19 = *((_QWORD *)v7 + 14);
  *((_QWORD *)v6 + 13) = *((_QWORD *)v7 + 13);
  *((_QWORD *)v6 + 14) = v19;
  v20 = v7 + 120;
  v21 = *((_QWORD *)v7 + 16);
  swift_retain();
  if (v21 >> 60 == 15)
  {
    *(_OWORD *)(v6 + 120) = *v20;
  }
  else
  {
    v22 = *(_QWORD *)v20;
    sub_1AD0040A0(v22, v21);
    *((_QWORD *)v6 + 15) = v22;
    *((_QWORD *)v6 + 16) = v21;
  }
  v23 = *((_QWORD *)v7 + 18);
  *((_QWORD *)v6 + 17) = *((_QWORD *)v7 + 17);
  *((_QWORD *)v6 + 18) = v23;
  v24 = (uint64_t *)(v7 + 152);
  v25 = *((_QWORD *)v7 + 20);
  swift_retain();
  if (v25 >> 60 == 11 || v25 >> 60 == 15)
  {
    *(_OWORD *)(v6 + 152) = *(_OWORD *)v24;
  }
  else
  {
    v26 = *v24;
    sub_1AD0040A0(*v24, v25);
    *((_QWORD *)v6 + 19) = v26;
    *((_QWORD *)v6 + 20) = v25;
  }
  v27 = *((_QWORD *)v7 + 21);
  if (v27)
  {
    v28 = *((_QWORD *)v7 + 22);
    *((_QWORD *)v6 + 21) = v27;
    *((_QWORD *)v6 + 22) = v28;
    v29 = v7 + 184;
    v30 = *((_QWORD *)v7 + 24);
    swift_retain();
    if (v30 >> 60 == 15)
    {
      *(_OWORD *)(v6 + 184) = *v29;
    }
    else
    {
      v33 = *(_QWORD *)v29;
      sub_1AD0040A0(v33, v30);
      *((_QWORD *)v6 + 23) = v33;
      *((_QWORD *)v6 + 24) = v30;
    }
    *((_DWORD *)v6 + 50) = *((_DWORD *)v7 + 50);
    v34 = *((_QWORD *)v7 + 27);
    *((_QWORD *)v6 + 26) = *((_QWORD *)v7 + 26);
    *((_QWORD *)v6 + 27) = v34;
    v35 = v7 + 224;
    v36 = *((_QWORD *)v7 + 29);
    swift_retain();
    if (v36 >> 60 == 15)
    {
      *((_OWORD *)v6 + 14) = *v35;
    }
    else
    {
      v37 = *(_QWORD *)v35;
      sub_1AD0040A0(v37, v36);
      *((_QWORD *)v6 + 28) = v37;
      *((_QWORD *)v6 + 29) = v36;
    }
  }
  else
  {
    v31 = *(_OWORD *)(v7 + 216);
    *(_OWORD *)(v6 + 200) = *(_OWORD *)(v7 + 200);
    *(_OWORD *)(v6 + 216) = v31;
    *((_QWORD *)v6 + 29) = *((_QWORD *)v7 + 29);
    v32 = *(_OWORD *)(v7 + 184);
    *(_OWORD *)(v6 + 168) = *(_OWORD *)(v7 + 168);
    *(_OWORD *)(v6 + 184) = v32;
  }
  v38 = *((_QWORD *)v7 + 32);
  *((_OWORD *)v6 + 15) = *((_OWORD *)v7 + 15);
  *((_QWORD *)v6 + 32) = v38;
  v39 = (uint64_t *)(v7 + 264);
  v40 = *((_QWORD *)v7 + 34);
  swift_bridgeObjectRetain();
  swift_retain();
  if (v40 >> 60 == 11 || v40 >> 60 == 15)
  {
    *(_OWORD *)(v6 + 264) = *(_OWORD *)v39;
  }
  else
  {
    v41 = *v39;
    sub_1AD0040A0(*v39, v40);
    *((_QWORD *)v6 + 33) = v41;
    *((_QWORD *)v6 + 34) = v40;
  }
  v42 = type metadata accessor for CloudKitSharingToken();
  v43 = *(int *)(v42 + 24);
  v44 = &v6[v43];
  v45 = &v7[v43];
  v46 = *(_QWORD *)&v7[v43 + 8];
  *(_QWORD *)v44 = *(_QWORD *)&v7[v43];
  *((_QWORD *)v44 + 1) = v46;
  swift_retain();
  v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v48 = &v44[v47];
  v49 = &v45[v47];
  v50 = sub_1AD63AF28();
  v51 = *(_QWORD *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v51 + 48))(v49, 1, v50))
  {
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v48, v49, v50);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
  }
  v53 = *(int *)(v42 + 28);
  v54 = &v6[v53];
  v55 = &v7[v53];
  v56 = *((_QWORD *)v55 + 1);
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *((_QWORD *)v54 + 1) = v56;
  v57 = v55 + 16;
  v58 = *((_QWORD *)v55 + 3);
  swift_retain();
  if (v58 == 1)
  {
    *((_OWORD *)v54 + 1) = *v57;
  }
  else
  {
    *((_QWORD *)v54 + 2) = *(_QWORD *)v57;
    *((_QWORD *)v54 + 3) = v58;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *sub_1AD0AE388(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  __int128 *v14;
  __int128 *v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  _OWORD *v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  uint64_t v45;
  _OWORD *v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  _OWORD *v52;
  unint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  unint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t (*v88)(char *, uint64_t, uint64_t);
  int v89;
  int v90;
  uint64_t v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v98;
  uint64_t v99;
  unint64_t v100;
  uint64_t v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *(_DWORD *)v7 = *(_DWORD *)((char *)a2 + v6);
  *((_QWORD *)v7 + 1) = *(_QWORD *)((char *)a2 + v6 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *((_QWORD *)v7 + 2) = *((_QWORD *)v8 + 2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = *((_QWORD *)v8 + 4);
  *((_QWORD *)v7 + 3) = *((_QWORD *)v8 + 3);
  *((_QWORD *)v7 + 4) = v9;
  swift_retain();
  swift_release();
  v10 = (uint64_t *)(v8 + 40);
  v11 = *((_QWORD *)v8 + 6);
  v12 = v11 & 0xF000000000000000;
  if (*((_QWORD *)v7 + 6) >> 60 == 11)
  {
    if (v12 == 0xB000000000000000 || v11 >> 60 == 15)
      goto LABEL_12;
LABEL_9:
    v13 = *v10;
    sub_1AD0040A0(*v10, *((_QWORD *)v8 + 6));
    *((_QWORD *)v7 + 5) = v13;
    *((_QWORD *)v7 + 6) = v11;
    goto LABEL_13;
  }
  if (v12 == 0xB000000000000000)
  {
    sub_1AD009758((uint64_t)(v7 + 40), &qword_1ED2E3250);
    goto LABEL_12;
  }
  if (*((_QWORD *)v7 + 6) >> 60 == 15)
  {
    if (v11 >> 60 != 15)
      goto LABEL_9;
LABEL_12:
    *(_OWORD *)(v7 + 40) = *(_OWORD *)v10;
    goto LABEL_13;
  }
  if (v11 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v7 + 40));
    goto LABEL_12;
  }
  v98 = *v10;
  sub_1AD0040A0(*v10, *((_QWORD *)v8 + 6));
  v99 = *((_QWORD *)v7 + 5);
  v100 = *((_QWORD *)v7 + 6);
  *((_QWORD *)v7 + 5) = v98;
  *((_QWORD *)v7 + 6) = v11;
  sub_1AD00412C(v99, v100);
LABEL_13:
  v14 = (__int128 *)(v7 + 56);
  v15 = (__int128 *)(v8 + 56);
  v16 = *((_QWORD *)v8 + 9);
  if (!*((_QWORD *)v7 + 9))
  {
    if (!v16)
    {
      v27 = *v15;
      v28 = *(_OWORD *)(v8 + 88);
      *(_OWORD *)(v7 + 72) = *(_OWORD *)(v8 + 72);
      *(_OWORD *)(v7 + 88) = v28;
      *v14 = v27;
      goto LABEL_29;
    }
    *((_DWORD *)v7 + 14) = *((_DWORD *)v8 + 14);
    v22 = *((_DWORD *)v8 + 15);
    v7[64] = v8[64];
    *((_DWORD *)v7 + 15) = v22;
    v23 = *((_QWORD *)v8 + 10);
    *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
    *((_QWORD *)v7 + 10) = v23;
    v24 = v8 + 88;
    v20 = *((_QWORD *)v8 + 12);
    swift_retain();
    if (v20 >> 60 == 15)
    {
      *(_OWORD *)(v7 + 88) = *v24;
      goto LABEL_29;
    }
    v21 = *(_QWORD *)v24;
    goto LABEL_27;
  }
  if (!v16)
  {
    sub_1AD0AEC58((uint64_t)(v7 + 56));
    v26 = *(_OWORD *)(v8 + 72);
    v25 = *(_OWORD *)(v8 + 88);
    *v14 = *v15;
    *(_OWORD *)(v7 + 72) = v26;
    *(_OWORD *)(v7 + 88) = v25;
    goto LABEL_29;
  }
  *((_DWORD *)v7 + 14) = *((_DWORD *)v8 + 14);
  v17 = *((_DWORD *)v8 + 15);
  v7[64] = v8[64];
  *((_DWORD *)v7 + 15) = v17;
  v18 = *((_QWORD *)v8 + 10);
  *((_QWORD *)v7 + 9) = *((_QWORD *)v8 + 9);
  *((_QWORD *)v7 + 10) = v18;
  swift_retain();
  swift_release();
  v19 = (uint64_t *)(v8 + 88);
  v20 = *((_QWORD *)v8 + 12);
  if (*((_QWORD *)v7 + 12) >> 60 == 15)
  {
    if (v20 >> 60 != 15)
    {
      v21 = *v19;
LABEL_27:
      sub_1AD0040A0(v21, v20);
      *((_QWORD *)v7 + 11) = v21;
      *((_QWORD *)v7 + 12) = v20;
      goto LABEL_29;
    }
LABEL_24:
    *(_OWORD *)(v7 + 88) = *(_OWORD *)v19;
    goto LABEL_29;
  }
  if (v20 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v7 + 88));
    goto LABEL_24;
  }
  v29 = *v19;
  sub_1AD0040A0(*v19, *((_QWORD *)v8 + 12));
  v30 = *((_QWORD *)v7 + 11);
  v31 = *((_QWORD *)v7 + 12);
  *((_QWORD *)v7 + 11) = v29;
  *((_QWORD *)v7 + 12) = v20;
  sub_1AD00412C(v30, v31);
LABEL_29:
  v32 = *((_QWORD *)v8 + 14);
  *((_QWORD *)v7 + 13) = *((_QWORD *)v8 + 13);
  *((_QWORD *)v7 + 14) = v32;
  swift_retain();
  swift_release();
  v33 = (uint64_t *)(v8 + 120);
  v34 = *((_QWORD *)v8 + 16);
  if (*((_QWORD *)v7 + 16) >> 60 == 15)
  {
    if (v34 >> 60 != 15)
    {
      v35 = *v33;
      sub_1AD0040A0(*v33, *((_QWORD *)v8 + 16));
      *((_QWORD *)v7 + 15) = v35;
      *((_QWORD *)v7 + 16) = v34;
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  if (v34 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v7 + 120));
LABEL_34:
    *(_OWORD *)(v7 + 120) = *(_OWORD *)v33;
    goto LABEL_36;
  }
  v36 = *v33;
  sub_1AD0040A0(*v33, *((_QWORD *)v8 + 16));
  v37 = *((_QWORD *)v7 + 15);
  v38 = *((_QWORD *)v7 + 16);
  *((_QWORD *)v7 + 15) = v36;
  *((_QWORD *)v7 + 16) = v34;
  sub_1AD00412C(v37, v38);
LABEL_36:
  v39 = *((_QWORD *)v8 + 18);
  *((_QWORD *)v7 + 17) = *((_QWORD *)v8 + 17);
  *((_QWORD *)v7 + 18) = v39;
  swift_retain();
  swift_release();
  v40 = (uint64_t *)(v8 + 152);
  v41 = *((_QWORD *)v8 + 20);
  v42 = v41 & 0xF000000000000000;
  if (*((_QWORD *)v7 + 20) >> 60 == 11)
  {
    if (v42 == 0xB000000000000000 || v41 >> 60 == 15)
      goto LABEL_47;
LABEL_44:
    v43 = *v40;
    sub_1AD0040A0(*v40, *((_QWORD *)v8 + 20));
    *((_QWORD *)v7 + 19) = v43;
    *((_QWORD *)v7 + 20) = v41;
    goto LABEL_48;
  }
  if (v42 == 0xB000000000000000)
  {
    sub_1AD009758((uint64_t)(v7 + 152), &qword_1ED2E3250);
    goto LABEL_47;
  }
  if (*((_QWORD *)v7 + 20) >> 60 == 15)
  {
    if (v41 >> 60 != 15)
      goto LABEL_44;
LABEL_47:
    *(_OWORD *)(v7 + 152) = *(_OWORD *)v40;
    goto LABEL_48;
  }
  if (v41 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v7 + 152));
    goto LABEL_47;
  }
  v101 = *v40;
  sub_1AD0040A0(*v40, *((_QWORD *)v8 + 20));
  v102 = *((_QWORD *)v7 + 19);
  v103 = *((_QWORD *)v7 + 20);
  *((_QWORD *)v7 + 19) = v101;
  *((_QWORD *)v7 + 20) = v41;
  sub_1AD00412C(v102, v103);
LABEL_48:
  v44 = v7 + 168;
  v46 = v8 + 168;
  v45 = *((_QWORD *)v8 + 21);
  if (!*((_QWORD *)v7 + 21))
  {
    if (!v45)
    {
      *v44 = *v46;
      v57 = *(_OWORD *)(v8 + 184);
      v58 = *(_OWORD *)(v8 + 200);
      v59 = *(_OWORD *)(v8 + 216);
      *((_QWORD *)v7 + 29) = *((_QWORD *)v8 + 29);
      *(_OWORD *)(v7 + 200) = v58;
      *(_OWORD *)(v7 + 216) = v59;
      *(_OWORD *)(v7 + 184) = v57;
      goto LABEL_74;
    }
    v51 = *((_QWORD *)v8 + 22);
    *((_QWORD *)v7 + 21) = v45;
    *((_QWORD *)v7 + 22) = v51;
    v52 = v8 + 184;
    v53 = *((_QWORD *)v8 + 24);
    swift_retain();
    if (v53 >> 60 == 15)
    {
      *(_OWORD *)(v7 + 184) = *v52;
    }
    else
    {
      v60 = *(_QWORD *)v52;
      sub_1AD0040A0(v60, v53);
      *((_QWORD *)v7 + 23) = v60;
      *((_QWORD *)v7 + 24) = v53;
    }
    *((_DWORD *)v7 + 50) = *((_DWORD *)v8 + 50);
    v61 = *((_QWORD *)v8 + 27);
    *((_QWORD *)v7 + 26) = *((_QWORD *)v8 + 26);
    *((_QWORD *)v7 + 27) = v61;
    v62 = v8 + 224;
    v63 = *((_QWORD *)v8 + 29);
    swift_retain();
    if (v63 >> 60 == 15)
    {
      *((_OWORD *)v7 + 14) = *v62;
      goto LABEL_74;
    }
    v64 = *(_QWORD *)v62;
    goto LABEL_69;
  }
  if (!v45)
  {
    sub_1AD0AEC8C((uint64_t *)v7 + 21);
    *v44 = *v46;
    v55 = *(_OWORD *)(v8 + 200);
    v54 = *(_OWORD *)(v8 + 216);
    v56 = *(_OWORD *)(v8 + 184);
    *((_QWORD *)v7 + 29) = *((_QWORD *)v8 + 29);
    *(_OWORD *)(v7 + 200) = v55;
    *(_OWORD *)(v7 + 216) = v54;
    *(_OWORD *)(v7 + 184) = v56;
    goto LABEL_74;
  }
  v47 = *((_QWORD *)v8 + 22);
  *((_QWORD *)v7 + 21) = v45;
  *((_QWORD *)v7 + 22) = v47;
  swift_retain();
  swift_release();
  v48 = (uint64_t *)(v8 + 184);
  v49 = *((_QWORD *)v8 + 24);
  if (*((_QWORD *)v7 + 24) >> 60 == 15)
  {
    if (v49 >> 60 != 15)
    {
      v50 = *v48;
      sub_1AD0040A0(*v48, *((_QWORD *)v8 + 24));
      *((_QWORD *)v7 + 23) = v50;
      *((_QWORD *)v7 + 24) = v49;
      goto LABEL_66;
    }
    goto LABEL_59;
  }
  if (v49 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v7 + 184));
LABEL_59:
    *(_OWORD *)(v7 + 184) = *(_OWORD *)v48;
    goto LABEL_66;
  }
  v65 = *v48;
  sub_1AD0040A0(*v48, *((_QWORD *)v8 + 24));
  v66 = *((_QWORD *)v7 + 23);
  v67 = *((_QWORD *)v7 + 24);
  *((_QWORD *)v7 + 23) = v65;
  *((_QWORD *)v7 + 24) = v49;
  sub_1AD00412C(v66, v67);
LABEL_66:
  *((_DWORD *)v7 + 50) = *((_DWORD *)v8 + 50);
  v68 = *((_QWORD *)v8 + 27);
  *((_QWORD *)v7 + 26) = *((_QWORD *)v8 + 26);
  *((_QWORD *)v7 + 27) = v68;
  swift_retain();
  swift_release();
  v69 = (uint64_t *)(v8 + 224);
  v63 = *((_QWORD *)v8 + 29);
  if (*((_QWORD *)v7 + 29) >> 60 == 15)
  {
    if (v63 >> 60 != 15)
    {
      v64 = *v69;
LABEL_69:
      sub_1AD0040A0(v64, v63);
      *((_QWORD *)v7 + 28) = v64;
      *((_QWORD *)v7 + 29) = v63;
      goto LABEL_74;
    }
    goto LABEL_72;
  }
  if (v63 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v7 + 224));
LABEL_72:
    *((_OWORD *)v7 + 14) = *(_OWORD *)v69;
    goto LABEL_74;
  }
  v70 = *v69;
  sub_1AD0040A0(*v69, *((_QWORD *)v8 + 29));
  v71 = *((_QWORD *)v7 + 28);
  v72 = *((_QWORD *)v7 + 29);
  *((_QWORD *)v7 + 28) = v70;
  *((_QWORD *)v7 + 29) = v63;
  sub_1AD00412C(v71, v72);
LABEL_74:
  *((_QWORD *)v7 + 30) = *((_QWORD *)v8 + 30);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v73 = *((_QWORD *)v8 + 32);
  *((_QWORD *)v7 + 31) = *((_QWORD *)v8 + 31);
  *((_QWORD *)v7 + 32) = v73;
  swift_retain();
  swift_release();
  v74 = (uint64_t *)(v8 + 264);
  v75 = *((_QWORD *)v8 + 34);
  v76 = v75 & 0xF000000000000000;
  if (*((_QWORD *)v7 + 34) >> 60 == 11)
  {
    if (v76 == 0xB000000000000000)
      goto LABEL_84;
LABEL_80:
    if (v75 >> 60 != 15)
    {
      v77 = *v74;
      sub_1AD0040A0(*v74, *((_QWORD *)v8 + 34));
      *((_QWORD *)v7 + 33) = v77;
      *((_QWORD *)v7 + 34) = v75;
      goto LABEL_85;
    }
    goto LABEL_84;
  }
  if (v76 == 0xB000000000000000)
  {
    sub_1AD009758((uint64_t)(v7 + 264), &qword_1ED2E3250);
LABEL_84:
    *(_OWORD *)(v7 + 264) = *(_OWORD *)v74;
    goto LABEL_85;
  }
  if (*((_QWORD *)v7 + 34) >> 60 == 15)
    goto LABEL_80;
  if (v75 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v7 + 264));
    goto LABEL_84;
  }
  v104 = *v74;
  sub_1AD0040A0(*v74, *((_QWORD *)v8 + 34));
  v105 = *((_QWORD *)v7 + 33);
  v106 = *((_QWORD *)v7 + 34);
  *((_QWORD *)v7 + 33) = v104;
  *((_QWORD *)v7 + 34) = v75;
  sub_1AD00412C(v105, v106);
LABEL_85:
  v78 = type metadata accessor for CloudKitSharingToken();
  v79 = *(int *)(v78 + 24);
  v80 = &v7[v79];
  v81 = &v8[v79];
  v82 = *(_QWORD *)&v8[v79 + 8];
  *(_QWORD *)v80 = *(_QWORD *)&v8[v79];
  *((_QWORD *)v80 + 1) = v82;
  swift_retain();
  swift_release();
  v83 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v84 = &v80[v83];
  v85 = &v81[v83];
  v86 = sub_1AD63AF28();
  v87 = *(_QWORD *)(v86 - 8);
  v88 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v87 + 48);
  v89 = v88(v84, 1, v86);
  v90 = v88(v85, 1, v86);
  if (v89)
  {
    if (!v90)
    {
      (*(void (**)(char *, char *, uint64_t))(v87 + 16))(v84, v85, v86);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v87 + 56))(v84, 0, 1, v86);
      goto LABEL_91;
    }
    goto LABEL_90;
  }
  if (v90)
  {
    (*(void (**)(char *, uint64_t))(v87 + 8))(v84, v86);
LABEL_90:
    v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v84, v85, *(_QWORD *)(*(_QWORD *)(v91 - 8) + 64));
    goto LABEL_91;
  }
  (*(void (**)(char *, char *, uint64_t))(v87 + 24))(v84, v85, v86);
LABEL_91:
  v92 = *(int *)(v78 + 28);
  v93 = &v7[v92];
  v94 = &v8[v92];
  v95 = *(_QWORD *)&v8[v92 + 8];
  *(_QWORD *)v93 = *(_QWORD *)&v8[v92];
  *((_QWORD *)v93 + 1) = v95;
  swift_retain();
  swift_release();
  v96 = *((_QWORD *)v94 + 3);
  if (*((_QWORD *)v93 + 3) != 1)
  {
    if (v96 != 1)
    {
      *((_QWORD *)v93 + 2) = *((_QWORD *)v94 + 2);
      *((_QWORD *)v93 + 3) = *((_QWORD *)v94 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758((uint64_t)(v93 + 16), &qword_1ED2E3198);
    goto LABEL_96;
  }
  if (v96 == 1)
  {
LABEL_96:
    *((_OWORD *)v93 + 1) = *((_OWORD *)v94 + 1);
    return a1;
  }
  *((_QWORD *)v93 + 2) = *((_QWORD *)v94 + 2);
  *((_QWORD *)v93 + 3) = *((_QWORD *)v94 + 3);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD0AEC58(uint64_t a1)
{
  destroy for CloudStorageSPKey(a1);
  return a1;
}

uint64_t *sub_1AD0AEC8C(uint64_t *a1)
{
  destroy for CloudStorageSignature(a1);
  return a1;
}

_OWORD *sub_1AD0AECC0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  __int128 v28;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *((_QWORD *)v5 + 30) = *(_QWORD *)((char *)a2 + v4 + 240);
  v7 = *(_OWORD *)((char *)a2 + v4 + 224);
  v8 = *(_OWORD *)((char *)a2 + v4 + 192);
  *((_OWORD *)v5 + 13) = *(_OWORD *)((char *)a2 + v4 + 208);
  *((_OWORD *)v5 + 14) = v7;
  v9 = *(_OWORD *)((char *)a2 + v4 + 160);
  *((_OWORD *)v5 + 11) = *(_OWORD *)((char *)a2 + v4 + 176);
  *((_OWORD *)v5 + 12) = v8;
  v10 = *(_OWORD *)((char *)a2 + v4 + 128);
  *((_OWORD *)v5 + 9) = *(_OWORD *)((char *)a2 + v4 + 144);
  *((_OWORD *)v5 + 10) = v9;
  v11 = *(_OWORD *)((char *)a2 + v4 + 96);
  *((_OWORD *)v5 + 7) = *(_OWORD *)((char *)a2 + v4 + 112);
  *((_OWORD *)v5 + 8) = v10;
  v12 = *(_OWORD *)((char *)a2 + v4 + 64);
  *((_OWORD *)v5 + 5) = *(_OWORD *)((char *)a2 + v4 + 80);
  *((_OWORD *)v5 + 6) = v11;
  v13 = *(_OWORD *)((char *)a2 + v4 + 32);
  *((_OWORD *)v5 + 3) = *(_OWORD *)((char *)a2 + v4 + 48);
  *((_OWORD *)v5 + 4) = v12;
  v14 = *(_OWORD *)((char *)a2 + v4 + 16);
  *(_OWORD *)v5 = *(_OWORD *)((char *)a2 + v4);
  *((_OWORD *)v5 + 1) = v14;
  *((_OWORD *)v5 + 2) = v13;
  *(_OWORD *)(v5 + 248) = *(_OWORD *)((char *)a2 + v4 + 248);
  *(_OWORD *)((char *)a1 + v4 + 264) = *(_OWORD *)((char *)a2 + v4 + 264);
  v15 = type metadata accessor for CloudKitSharingToken();
  v16 = *(int *)(v15 + 24);
  v17 = &v5[v16];
  v18 = &v6[v16];
  *(_OWORD *)&v5[v16] = *(_OWORD *)&v6[v16];
  v19 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v20 = &v17[v19];
  v21 = &v18[v19];
  v22 = sub_1AD63AF28();
  v23 = *(_QWORD *)(v22 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v21, 1, v22))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v20, v21, v22);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v20, 0, 1, v22);
  }
  v25 = *(int *)(v15 + 28);
  v26 = &v5[v25];
  v27 = &v6[v25];
  v28 = *((_OWORD *)v27 + 1);
  *(_OWORD *)v26 = *(_OWORD *)v27;
  *((_OWORD *)v26 + 1) = v28;
  return a1;
}

_QWORD *sub_1AD0AEE30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  _OWORD *v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  __int128 v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  unint64_t v30;
  unint64_t v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  uint64_t v35;
  _OWORD *v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(char *, uint64_t, uint64_t);
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *(_DWORD *)v8 = *(_DWORD *)((char *)a2 + v7);
  *((_QWORD *)v8 + 1) = *(_QWORD *)((char *)a2 + v7 + 8);
  swift_bridgeObjectRelease();
  *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
  swift_release();
  v10 = v9 + 40;
  v11 = *((_QWORD *)v8 + 6);
  if (v11 >> 60 == 11)
    goto LABEL_7;
  v12 = *((_QWORD *)v9 + 6);
  if (v12 >> 60 == 11)
  {
    sub_1AD009758((uint64_t)(v8 + 40), &qword_1ED2E3250);
LABEL_7:
    *(_OWORD *)(v8 + 40) = *v10;
    goto LABEL_8;
  }
  if (v11 >> 60 == 15)
    goto LABEL_7;
  if (v12 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v8 + 40));
    goto LABEL_7;
  }
  v62 = *((_QWORD *)v8 + 5);
  *((_QWORD *)v8 + 5) = *(_QWORD *)v10;
  *((_QWORD *)v8 + 6) = v12;
  sub_1AD00412C(v62, v11);
LABEL_8:
  if (!*((_QWORD *)v8 + 9))
  {
LABEL_15:
    v19 = *(_OWORD *)(v9 + 72);
    *(_OWORD *)(v8 + 56) = *(_OWORD *)(v9 + 56);
    *(_OWORD *)(v8 + 72) = v19;
    *(_OWORD *)(v8 + 88) = *(_OWORD *)(v9 + 88);
    goto LABEL_16;
  }
  v13 = *((_QWORD *)v9 + 9);
  if (!v13)
  {
    sub_1AD0AEC58((uint64_t)(v8 + 56));
    goto LABEL_15;
  }
  v14 = *((_DWORD *)v9 + 15);
  *((_DWORD *)v8 + 14) = *((_DWORD *)v9 + 14);
  *((_DWORD *)v8 + 15) = v14;
  v8[64] = v9[64];
  v15 = *((_QWORD *)v9 + 10);
  *((_QWORD *)v8 + 9) = v13;
  *((_QWORD *)v8 + 10) = v15;
  swift_release();
  v16 = v9 + 88;
  v17 = *((_QWORD *)v8 + 12);
  if (v17 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(v8 + 88) = *v16;
    goto LABEL_16;
  }
  v18 = *((_QWORD *)v9 + 12);
  if (v18 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v8 + 88));
    goto LABEL_13;
  }
  v34 = *((_QWORD *)v8 + 11);
  *((_QWORD *)v8 + 11) = *(_QWORD *)v16;
  *((_QWORD *)v8 + 12) = v18;
  sub_1AD00412C(v34, v17);
LABEL_16:
  *(_OWORD *)(v8 + 104) = *(_OWORD *)(v9 + 104);
  swift_release();
  v20 = v9 + 120;
  v21 = *((_QWORD *)v8 + 16);
  if (v21 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)(v8 + 120) = *v20;
    goto LABEL_21;
  }
  v22 = *((_QWORD *)v9 + 16);
  if (v22 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v8 + 120));
    goto LABEL_19;
  }
  v23 = *((_QWORD *)v8 + 15);
  *((_QWORD *)v8 + 15) = *(_QWORD *)v20;
  *((_QWORD *)v8 + 16) = v22;
  sub_1AD00412C(v23, v21);
LABEL_21:
  *(_OWORD *)(v8 + 136) = *(_OWORD *)(v9 + 136);
  swift_release();
  v24 = v9 + 152;
  v25 = *((_QWORD *)v8 + 20);
  if (v25 >> 60 == 11)
  {
LABEL_27:
    *(_OWORD *)(v8 + 152) = *v24;
    goto LABEL_28;
  }
  v26 = *((_QWORD *)v9 + 20);
  if (v26 >> 60 == 11)
  {
    sub_1AD009758((uint64_t)(v8 + 152), &qword_1ED2E3250);
    goto LABEL_27;
  }
  if (v25 >> 60 == 15)
    goto LABEL_27;
  if (v26 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v8 + 152));
    goto LABEL_27;
  }
  v63 = *((_QWORD *)v8 + 19);
  *((_QWORD *)v8 + 19) = *(_QWORD *)v24;
  *((_QWORD *)v8 + 20) = v26;
  sub_1AD00412C(v63, v25);
LABEL_28:
  v27 = *((_QWORD *)v9 + 21);
  if (!*((_QWORD *)v8 + 21))
  {
LABEL_35:
    v32 = *(_OWORD *)(v9 + 216);
    *(_OWORD *)(v8 + 200) = *(_OWORD *)(v9 + 200);
    *(_OWORD *)(v8 + 216) = v32;
    *((_QWORD *)v8 + 29) = *((_QWORD *)v9 + 29);
    v33 = *(_OWORD *)(v9 + 184);
    *(_OWORD *)(v8 + 168) = *(_OWORD *)(v9 + 168);
    *(_OWORD *)(v8 + 184) = v33;
    goto LABEL_43;
  }
  if (!v27)
  {
    sub_1AD0AEC8C((uint64_t *)v8 + 21);
    goto LABEL_35;
  }
  v28 = *((_QWORD *)v9 + 22);
  *((_QWORD *)v8 + 21) = v27;
  *((_QWORD *)v8 + 22) = v28;
  swift_release();
  v29 = v9 + 184;
  v30 = *((_QWORD *)v8 + 24);
  if (v30 >> 60 == 15)
  {
LABEL_33:
    *(_OWORD *)(v8 + 184) = *v29;
    goto LABEL_38;
  }
  v31 = *((_QWORD *)v9 + 24);
  if (v31 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v8 + 184));
    goto LABEL_33;
  }
  v35 = *((_QWORD *)v8 + 23);
  *((_QWORD *)v8 + 23) = *(_QWORD *)v29;
  *((_QWORD *)v8 + 24) = v31;
  sub_1AD00412C(v35, v30);
LABEL_38:
  *((_DWORD *)v8 + 50) = *((_DWORD *)v9 + 50);
  *((_OWORD *)v8 + 13) = *((_OWORD *)v9 + 13);
  swift_release();
  v36 = v9 + 224;
  v37 = *((_QWORD *)v8 + 29);
  if (v37 >> 60 == 15)
  {
LABEL_41:
    *((_OWORD *)v8 + 14) = *v36;
    goto LABEL_43;
  }
  v38 = *((_QWORD *)v9 + 29);
  if (v38 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v8 + 224));
    goto LABEL_41;
  }
  v39 = *((_QWORD *)v8 + 28);
  *((_QWORD *)v8 + 28) = *(_QWORD *)v36;
  *((_QWORD *)v8 + 29) = v38;
  sub_1AD00412C(v39, v37);
LABEL_43:
  *((_QWORD *)v8 + 30) = *((_QWORD *)v9 + 30);
  swift_bridgeObjectRelease();
  *(_OWORD *)(v8 + 248) = *(_OWORD *)(v9 + 248);
  swift_release();
  v40 = v9 + 264;
  v41 = *((_QWORD *)v8 + 34);
  if (v41 >> 60 == 11)
  {
LABEL_49:
    *(_OWORD *)(v8 + 264) = *v40;
    goto LABEL_50;
  }
  v42 = *((_QWORD *)v9 + 34);
  if (v42 >> 60 == 11)
  {
    sub_1AD009758((uint64_t)(v8 + 264), &qword_1ED2E3250);
    goto LABEL_49;
  }
  if (v41 >> 60 == 15)
    goto LABEL_49;
  if (v42 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)(v8 + 264));
    goto LABEL_49;
  }
  v64 = *((_QWORD *)v8 + 33);
  *((_QWORD *)v8 + 33) = *(_QWORD *)v40;
  *((_QWORD *)v8 + 34) = v42;
  sub_1AD00412C(v64, v41);
LABEL_50:
  v43 = type metadata accessor for CloudKitSharingToken();
  v44 = *(int *)(v43 + 24);
  v45 = &v8[v44];
  v46 = &v9[v44];
  *(_OWORD *)&v8[v44] = *(_OWORD *)&v9[v44];
  swift_release();
  v47 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v48 = &v45[v47];
  v49 = &v46[v47];
  v50 = sub_1AD63AF28();
  v51 = *(_QWORD *)(v50 - 8);
  v52 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v51 + 48);
  v53 = v52(v48, 1, v50);
  v54 = v52(v49, 1, v50);
  if (v53)
  {
    if (!v54)
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v48, v49, v50);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v51 + 56))(v48, 0, 1, v50);
      goto LABEL_56;
    }
    goto LABEL_55;
  }
  if (v54)
  {
    (*(void (**)(char *, uint64_t))(v51 + 8))(v48, v50);
LABEL_55:
    v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
    goto LABEL_56;
  }
  (*(void (**)(char *, char *, uint64_t))(v51 + 40))(v48, v49, v50);
LABEL_56:
  v56 = *(int *)(v43 + 28);
  v57 = &v8[v56];
  v58 = &v9[v56];
  *(_OWORD *)&v8[v56] = *(_OWORD *)&v9[v56];
  swift_release();
  v59 = v58 + 16;
  if (*((_QWORD *)v57 + 3) != 1)
  {
    v60 = *((_QWORD *)v58 + 3);
    if (v60 != 1)
    {
      *((_QWORD *)v57 + 2) = *v59;
      *((_QWORD *)v57 + 3) = v60;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758((uint64_t)(v57 + 16), &qword_1ED2E3198);
  }
  *((_OWORD *)v57 + 1) = *(_OWORD *)v59;
  return a1;
}

uint64_t sub_1AD0AF3A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0AF3B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for CloudKitSharingToken();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_1AD0AF42C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD0AF438(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for CloudKitSharingToken();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AD0AF4AC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CloudKitSharingToken();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for LinkPresentation.CloudSharingMetadata(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(_QWORD *)(a1 + 192) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for LinkPresentation.CloudSharingMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    v10 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = v7;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v12 = *(_QWORD *)(a2 + 192);
  if (v12 == 1)
  {
    v13 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v13;
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
    v14 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v14;
    v15 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v15;
  }
  else
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = v12;
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    v16 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v16;
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for LinkPresentation.CloudSharingMetadata(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD *v27;
  __int128 *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 48);
  v5 = (__int128 *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 64);
      v9 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v9;
      *v4 = v7;
      *(_OWORD *)(a1 + 64) = v8;
      v10 = *(_OWORD *)(a2 + 112);
      v11 = *(_OWORD *)(a2 + 128);
      v12 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
      *(_OWORD *)(a1 + 128) = v11;
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 112) = v10;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v19 = *(_OWORD *)(a2 + 96);
      v20 = *(_OWORD *)(a2 + 112);
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v19;
      *(_OWORD *)(a1 + 112) = v20;
      v21 = *(_OWORD *)(a2 + 136);
      v22 = *(_OWORD *)(a2 + 152);
      *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = v22;
      *(_OWORD *)(a1 + 136) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1AD0661D0(a1 + 48);
    v13 = *(_OWORD *)(a2 + 96);
    v15 = *v5;
    v14 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v13;
    *v4 = v15;
    *(_OWORD *)(a1 + 64) = v14;
    v17 = *(_OWORD *)(a2 + 128);
    v16 = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 144) = v16;
    *(_OWORD *)(a1 + 112) = v18;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v23 = *(_OWORD *)(a2 + 96);
    v24 = *(_OWORD *)(a2 + 112);
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v23;
    *(_OWORD *)(a1 + 112) = v24;
    v25 = *(_OWORD *)(a2 + 136);
    v26 = *(_OWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = v26;
    *(_OWORD *)(a1 + 136) = v25;
  }
  v27 = (_OWORD *)(a1 + 176);
  v28 = (__int128 *)(a2 + 176);
  v29 = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 192) == 1)
  {
    if (v29 == 1)
    {
      v30 = *v28;
      v31 = *(_OWORD *)(a2 + 192);
      v32 = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 224) = v32;
      *v27 = v30;
      *(_OWORD *)(a1 + 192) = v31;
      v33 = *(_OWORD *)(a2 + 240);
      v34 = *(_OWORD *)(a2 + 256);
      v35 = *(_OWORD *)(a2 + 272);
      *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
      *(_OWORD *)(a1 + 256) = v34;
      *(_OWORD *)(a1 + 272) = v35;
      *(_OWORD *)(a1 + 240) = v33;
    }
    else
    {
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      v42 = *(_OWORD *)(a2 + 224);
      v43 = *(_OWORD *)(a2 + 240);
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      *(_OWORD *)(a1 + 224) = v42;
      *(_OWORD *)(a1 + 240) = v43;
      v44 = *(_OWORD *)(a2 + 264);
      v45 = *(_OWORD *)(a2 + 280);
      *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
      *(_OWORD *)(a1 + 280) = v45;
      *(_OWORD *)(a1 + 264) = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v29 == 1)
  {
    sub_1AD0661D0(a1 + 176);
    v36 = *(_OWORD *)(a2 + 224);
    v38 = *v28;
    v37 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v36;
    *v27 = v38;
    *(_OWORD *)(a1 + 192) = v37;
    v40 = *(_OWORD *)(a2 + 256);
    v39 = *(_OWORD *)(a2 + 272);
    v41 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
    *(_OWORD *)(a1 + 256) = v40;
    *(_OWORD *)(a1 + 272) = v39;
    *(_OWORD *)(a1 + 240) = v41;
  }
  else
  {
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v46 = *(_OWORD *)(a2 + 224);
    v47 = *(_OWORD *)(a2 + 240);
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    *(_OWORD *)(a1 + 224) = v46;
    *(_OWORD *)(a1 + 240) = v47;
    v48 = *(_OWORD *)(a2 + 264);
    v49 = *(_OWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = v49;
    *(_OWORD *)(a1 + 264) = v48;
  }
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for LinkPresentation.CloudSharingMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64) == 1)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 64);
  if (v7 == 1)
  {
    sub_1AD0661D0(a1 + 48);
LABEL_4:
    v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    v10 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v10;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  v11 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v11;
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
LABEL_6:
  if (*(_QWORD *)(a1 + 192) != 1)
  {
    v12 = *(_QWORD *)(a2 + 192);
    if (v12 != 1)
    {
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 192) = v12;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      swift_bridgeObjectRelease();
      v16 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v16;
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
      *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
      *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
      goto LABEL_11;
    }
    sub_1AD0661D0(a1 + 176);
  }
  v13 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v13;
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
  v14 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v14;
  v15 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v15;
LABEL_11:
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkPresentation.CloudSharingMetadata(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 312))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 304);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LinkPresentation.CloudSharingMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 312) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 304) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 312) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkPresentation.CloudSharingMetadata()
{
  return &type metadata for LinkPresentation.CloudSharingMetadata;
}

uint64_t destroy for LinkPresentation.CloudFamilyInvitationMetadata(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + 64);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LinkPresentation.CloudFamilyInvitationMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7 == 1)
  {
    v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    v9 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v9;
    v10 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v10;
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = v7;
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for LinkPresentation.CloudFamilyInvitationMetadata(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 48);
  v5 = (__int128 *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 64);
      v9 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v9;
      *v4 = v7;
      *(_OWORD *)(a1 + 64) = v8;
      v10 = *(_OWORD *)(a2 + 112);
      v11 = *(_OWORD *)(a2 + 128);
      v12 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
      *(_OWORD *)(a1 + 128) = v11;
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 112) = v10;
    }
    else
    {
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      v19 = *(_OWORD *)(a2 + 96);
      v20 = *(_OWORD *)(a2 + 112);
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_OWORD *)(a1 + 96) = v19;
      *(_OWORD *)(a1 + 112) = v20;
      v21 = *(_OWORD *)(a2 + 136);
      v22 = *(_OWORD *)(a2 + 152);
      *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = v22;
      *(_OWORD *)(a1 + 136) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1AD0661D0(a1 + 48);
    v13 = *(_OWORD *)(a2 + 96);
    v15 = *v5;
    v14 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v13;
    *v4 = v15;
    *(_OWORD *)(a1 + 64) = v14;
    v17 = *(_OWORD *)(a2 + 128);
    v16 = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
    *(_OWORD *)(a1 + 128) = v17;
    *(_OWORD *)(a1 + 144) = v16;
    *(_OWORD *)(a1 + 112) = v18;
  }
  else
  {
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v23 = *(_OWORD *)(a2 + 96);
    v24 = *(_OWORD *)(a2 + 112);
    *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
    *(_OWORD *)(a1 + 96) = v23;
    *(_OWORD *)(a1 + 112) = v24;
    v25 = *(_OWORD *)(a2 + 136);
    v26 = *(_OWORD *)(a2 + 152);
    *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = v26;
    *(_OWORD *)(a1 + 136) = v25;
  }
  return a1;
}

__n128 __swift_memcpy169_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __n128 result;
  __int128 v8;
  __int128 v9;

  v2 = *a2;
  v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  v4 = a2[3];
  v5 = a2[4];
  v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  result = (__n128)a2[7];
  v8 = a2[8];
  v9 = a2[9];
  *(_OWORD *)(a1 + 153) = *(__int128 *)((char *)a2 + 153);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for LinkPresentation.CloudFamilyInvitationMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 64) != 1)
  {
    v7 = *(_QWORD *)(a2 + 64);
    if (v7 != 1)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      swift_bridgeObjectRelease();
      v11 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v11;
      *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
      return a1;
    }
    sub_1AD0661D0(a1 + 48);
  }
  v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 153) = *(_OWORD *)(a2 + 153);
  v9 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v9;
  v10 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v10;
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkPresentation.CloudFamilyInvitationMetadata(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 169))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LinkPresentation.CloudFamilyInvitationMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 168) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 169) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 169) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkPresentation.CloudFamilyInvitationMetadata()
{
  return &type metadata for LinkPresentation.CloudFamilyInvitationMetadata;
}

uint64_t destroy for LinkPresentation.GameCenterInvitationMetadata(uint64_t a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = *(_QWORD *)(a1 + 160);
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LinkPresentation.GameCenterInvitationMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    v6 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v6;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 32) = v5;
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    v9 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v9;
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v10 = *(_QWORD *)(a2 + 160);
  if (v10 == 1)
  {
    v11 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v11;
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 249) = *(_OWORD *)(a2 + 249);
    v12 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v12;
    v13 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v13;
  }
  else
  {
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 160) = v10;
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    v14 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v14;
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
    *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  return a1;
}

uint64_t assignWithCopy for LinkPresentation.GameCenterInvitationMetadata(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  _OWORD *v27;
  __int128 *v28;
  uint64_t v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 16);
  v5 = (__int128 *)(a2 + 16);
  v6 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 32);
      v9 = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 64) = v9;
      *v4 = v7;
      *(_OWORD *)(a1 + 32) = v8;
      v10 = *(_OWORD *)(a2 + 80);
      v11 = *(_OWORD *)(a2 + 96);
      v12 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
      *(_OWORD *)(a1 + 96) = v11;
      *(_OWORD *)(a1 + 112) = v12;
      *(_OWORD *)(a1 + 80) = v10;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      v19 = *(_OWORD *)(a2 + 64);
      v20 = *(_OWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
      *(_OWORD *)(a1 + 64) = v19;
      *(_OWORD *)(a1 + 80) = v20;
      v21 = *(_OWORD *)(a2 + 104);
      v22 = *(_OWORD *)(a2 + 120);
      *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = v22;
      *(_OWORD *)(a1 + 104) = v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1AD0661D0(a1 + 16);
    v13 = *(_OWORD *)(a2 + 64);
    v15 = *v5;
    v14 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v13;
    *v4 = v15;
    *(_OWORD *)(a1 + 32) = v14;
    v17 = *(_OWORD *)(a2 + 96);
    v16 = *(_OWORD *)(a2 + 112);
    v18 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v16;
    *(_OWORD *)(a1 + 80) = v18;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v23 = *(_OWORD *)(a2 + 64);
    v24 = *(_OWORD *)(a2 + 80);
    *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v23;
    *(_OWORD *)(a1 + 80) = v24;
    v25 = *(_OWORD *)(a2 + 104);
    v26 = *(_OWORD *)(a2 + 120);
    *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = v26;
    *(_OWORD *)(a1 + 104) = v25;
  }
  v27 = (_OWORD *)(a1 + 144);
  v28 = (__int128 *)(a2 + 144);
  v29 = *(_QWORD *)(a2 + 160);
  if (*(_QWORD *)(a1 + 160) == 1)
  {
    if (v29 == 1)
    {
      v30 = *v28;
      v31 = *(_OWORD *)(a2 + 160);
      v32 = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 192) = v32;
      *v27 = v30;
      *(_OWORD *)(a1 + 160) = v31;
      v33 = *(_OWORD *)(a2 + 208);
      v34 = *(_OWORD *)(a2 + 224);
      v35 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 249) = *(_OWORD *)(a2 + 249);
      *(_OWORD *)(a1 + 224) = v34;
      *(_OWORD *)(a1 + 240) = v35;
      *(_OWORD *)(a1 + 208) = v33;
    }
    else
    {
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      v42 = *(_OWORD *)(a2 + 192);
      v43 = *(_OWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
      *(_OWORD *)(a1 + 192) = v42;
      *(_OWORD *)(a1 + 208) = v43;
      v44 = *(_OWORD *)(a2 + 232);
      v45 = *(_OWORD *)(a2 + 248);
      *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
      *(_OWORD *)(a1 + 248) = v45;
      *(_OWORD *)(a1 + 232) = v44;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v29 == 1)
  {
    sub_1AD0661D0(a1 + 144);
    v36 = *(_OWORD *)(a2 + 192);
    v38 = *v28;
    v37 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v36;
    *v27 = v38;
    *(_OWORD *)(a1 + 160) = v37;
    v40 = *(_OWORD *)(a2 + 224);
    v39 = *(_OWORD *)(a2 + 240);
    v41 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 249) = *(_OWORD *)(a2 + 249);
    *(_OWORD *)(a1 + 224) = v40;
    *(_OWORD *)(a1 + 240) = v39;
    *(_OWORD *)(a1 + 208) = v41;
  }
  else
  {
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v46 = *(_OWORD *)(a2 + 192);
    v47 = *(_OWORD *)(a2 + 208);
    *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
    *(_OWORD *)(a1 + 192) = v46;
    *(_OWORD *)(a1 + 208) = v47;
    v48 = *(_OWORD *)(a2 + 232);
    v49 = *(_OWORD *)(a2 + 248);
    *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
    *(_OWORD *)(a1 + 248) = v49;
    *(_OWORD *)(a1 + 232) = v48;
  }
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_DWORD *)(a1 + 272) = *(_DWORD *)(a2 + 272);
  *(_DWORD *)(a1 + 276) = *(_DWORD *)(a2 + 276);
  return a1;
}

uint64_t assignWithTake for LinkPresentation.GameCenterInvitationMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 32) == 1)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 32);
  if (v5 == 1)
  {
    sub_1AD0661D0(a1 + 16);
LABEL_4:
    v6 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v6;
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
    v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
    v8 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v8;
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v9;
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
LABEL_6:
  if (*(_QWORD *)(a1 + 160) != 1)
  {
    v10 = *(_QWORD *)(a2 + 160);
    if (v10 != 1)
    {
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 160) = v10;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      swift_bridgeObjectRelease();
      v14 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v14;
      *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
      *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
      goto LABEL_11;
    }
    sub_1AD0661D0(a1 + 144);
  }
  v11 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v11;
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 249) = *(_OWORD *)(a2 + 249);
  v12 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v12;
  v13 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v13;
LABEL_11:
  *(_DWORD *)(a1 + 268) = *(_DWORD *)(a2 + 268);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkPresentation.GameCenterInvitationMetadata(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 280))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LinkPresentation.GameCenterInvitationMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 280) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 280) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkPresentation.GameCenterInvitationMetadata()
{
  return &type metadata for LinkPresentation.GameCenterInvitationMetadata;
}

uint64_t destroy for LinkPresentation.PostalAddress()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for LinkPresentation.PostalAddress(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  v9 = a2[13];
  a1[12] = a2[12];
  a1[13] = v9;
  v10 = a2[15];
  a1[14] = a2[14];
  a1[15] = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for LinkPresentation.PostalAddress(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  a1[13] = a2[13];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[14] = a2[14];
  a1[15] = a2[15];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for LinkPresentation.PostalAddress(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  v10 = a2[13];
  a1[12] = a2[12];
  a1[13] = v10;
  swift_bridgeObjectRelease();
  v11 = a2[15];
  a1[14] = a2[14];
  a1[15] = v11;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LinkPresentation.PostalAddress(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 128))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LinkPresentation.PostalAddress(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 128) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LinkPresentation.PostalAddress()
{
  return &type metadata for LinkPresentation.PostalAddress;
}

uint64_t destroy for LinkPresentation.MapMetadata(_QWORD *a1)
{
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[5] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[24] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[47] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[67] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[88] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[104] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  result = a1[120];
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for LinkPresentation.MapMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 == 1)
  {
    v7 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v7;
    v8 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v8;
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    v11 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v11;
    v12 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v12;
    v13 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v13;
    v14 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v14;
    v15 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v15;
    v16 = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = v16;
    v17 = *(_QWORD *)(a2 + 152);
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v18 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v18;
  v19 = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  if (v19 == 1)
  {
    v20 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v20;
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
    v21 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v21;
    v22 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v22;
  }
  else
  {
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 192) = v19;
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    v23 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v23;
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v24 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v24;
  v25 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v25;
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  v26 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v26;
  v27 = *(_QWORD *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v27 == 1)
  {
    v28 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 448) = v28;
    v29 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v29;
    v30 = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = v30;
    v31 = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 416) = v31;
  }
  else
  {
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 376) = v27;
    v32 = *(_QWORD *)(a2 + 392);
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = v32;
    v33 = *(_QWORD *)(a2 + 408);
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = v33;
    v34 = *(_QWORD *)(a2 + 424);
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 424) = v34;
    v35 = *(_QWORD *)(a2 + 440);
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a1 + 440) = v35;
    v36 = *(_QWORD *)(a2 + 456);
    *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
    *(_QWORD *)(a1 + 456) = v36;
    v37 = *(_QWORD *)(a2 + 472);
    *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 472) = v37;
    v38 = *(_QWORD *)(a2 + 488);
    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
    *(_QWORD *)(a1 + 488) = v38;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v39 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v39;
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  v40 = *(_QWORD *)(a2 + 536);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v40 == 1)
  {
    v41 = *(_OWORD *)(a2 + 608);
    *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
    *(_OWORD *)(a1 + 608) = v41;
    v42 = *(_OWORD *)(a2 + 640);
    *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
    *(_OWORD *)(a1 + 640) = v42;
    v43 = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 544) = v43;
    v44 = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 576) = v44;
  }
  else
  {
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    *(_QWORD *)(a1 + 536) = v40;
    *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
    *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
    *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
    *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
    *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
    *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
    *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
    *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
    *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
    *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
    *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
    *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
    *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  v45 = *(_QWORD *)(a2 + 704);
  swift_bridgeObjectRetain();
  if (v45 == 1)
  {
    v46 = *(_OWORD *)(a2 + 768);
    *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
    *(_OWORD *)(a1 + 768) = v46;
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 793) = *(_OWORD *)(a2 + 793);
    v47 = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = v47;
    v48 = *(_OWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    *(_OWORD *)(a1 + 736) = v48;
  }
  else
  {
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
    *(_QWORD *)(a1 + 704) = v45;
    *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
    *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
    *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
    v49 = *(_OWORD *)(a2 + 752);
    *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 752) = v49;
    *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
    v50 = *(_OWORD *)(a2 + 776);
    v51 = *(_OWORD *)(a2 + 792);
    *(_BYTE *)(a1 + 808) = *(_BYTE *)(a2 + 808);
    *(_OWORD *)(a1 + 792) = v51;
    *(_OWORD *)(a1 + 776) = v50;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v52 = *(_QWORD *)(a2 + 832);
  if (v52 == 1)
  {
    v53 = *(_OWORD *)(a2 + 896);
    *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
    *(_OWORD *)(a1 + 896) = v53;
    *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
    *(_OWORD *)(a1 + 921) = *(_OWORD *)(a2 + 921);
    v54 = *(_OWORD *)(a2 + 832);
    *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
    *(_OWORD *)(a1 + 832) = v54;
    v55 = *(_OWORD *)(a2 + 864);
    *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
    *(_OWORD *)(a1 + 864) = v55;
  }
  else
  {
    *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
    *(_QWORD *)(a1 + 832) = v52;
    *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
    *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
    *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
    v56 = *(_OWORD *)(a2 + 880);
    *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
    *(_OWORD *)(a1 + 880) = v56;
    *(_BYTE *)(a1 + 896) = *(_BYTE *)(a2 + 896);
    v57 = *(_OWORD *)(a2 + 904);
    v58 = *(_OWORD *)(a2 + 920);
    *(_BYTE *)(a1 + 936) = *(_BYTE *)(a2 + 936);
    *(_OWORD *)(a1 + 920) = v58;
    *(_OWORD *)(a1 + 904) = v57;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v59 = *(_QWORD *)(a2 + 960);
  if (v59 == 1)
  {
    v60 = *(_OWORD *)(a2 + 1024);
    *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
    *(_OWORD *)(a1 + 1024) = v60;
    *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
    *(_OWORD *)(a1 + 1049) = *(_OWORD *)(a2 + 1049);
    v61 = *(_OWORD *)(a2 + 960);
    *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
    *(_OWORD *)(a1 + 960) = v61;
    v62 = *(_OWORD *)(a2 + 992);
    *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
    *(_OWORD *)(a1 + 992) = v62;
  }
  else
  {
    *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
    *(_QWORD *)(a1 + 960) = v59;
    *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
    *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
    *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
    v63 = *(_OWORD *)(a2 + 1008);
    *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
    *(_OWORD *)(a1 + 1008) = v63;
    *(_BYTE *)(a1 + 1024) = *(_BYTE *)(a2 + 1024);
    v64 = *(_OWORD *)(a2 + 1032);
    v65 = *(_OWORD *)(a2 + 1048);
    *(_BYTE *)(a1 + 1064) = *(_BYTE *)(a2 + 1064);
    *(_OWORD *)(a1 + 1048) = v65;
    *(_OWORD *)(a1 + 1032) = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_BYTE *)(a1 + 1065) = *(_BYTE *)(a2 + 1065);
  return a1;
}

uint64_t assignWithCopy for LinkPresentation.MapMetadata(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  __int128 *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD *v19;
  __int128 *v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  _OWORD *v43;
  __int128 *v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  _OWORD *v58;
  __int128 *v59;
  uint64_t v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  _OWORD *v74;
  __int128 *v75;
  uint64_t v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  _OWORD *v97;
  __int128 *v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  _OWORD *v120;
  __int128 *v121;
  uint64_t v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (_OWORD *)(a1 + 32);
  v5 = (__int128 *)(a2 + 32);
  v6 = *(_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 40) == 1)
  {
    if (v6 == 1)
    {
      v7 = *v5;
      v8 = *(_OWORD *)(a2 + 48);
      v9 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v9;
      *v4 = v7;
      *(_OWORD *)(a1 + 48) = v8;
      v10 = *(_OWORD *)(a2 + 96);
      v11 = *(_OWORD *)(a2 + 112);
      v12 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v12;
      *(_OWORD *)(a1 + 96) = v10;
      *(_OWORD *)(a1 + 112) = v11;
    }
    else
    {
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v6 == 1)
  {
    sub_1AD0B2364(a1 + 32);
    v13 = *(_OWORD *)(a2 + 80);
    v15 = *v5;
    v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    *v4 = v15;
    *(_OWORD *)(a1 + 48) = v14;
    v16 = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 96);
    v17 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v16;
    *(_OWORD *)(a1 + 96) = v18;
    *(_OWORD *)(a1 + 112) = v17;
  }
  else
  {
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = (_OWORD *)(a1 + 176);
  v20 = (__int128 *)(a2 + 176);
  v21 = *(_QWORD *)(a2 + 192);
  if (*(_QWORD *)(a1 + 192) == 1)
  {
    if (v21 == 1)
    {
      v22 = *v20;
      v23 = *(_OWORD *)(a2 + 192);
      v24 = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 224) = v24;
      *v19 = v22;
      *(_OWORD *)(a1 + 192) = v23;
      v25 = *(_OWORD *)(a2 + 240);
      v26 = *(_OWORD *)(a2 + 256);
      v27 = *(_OWORD *)(a2 + 272);
      *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
      *(_OWORD *)(a1 + 256) = v26;
      *(_OWORD *)(a1 + 272) = v27;
      *(_OWORD *)(a1 + 240) = v25;
    }
    else
    {
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
      *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
      v34 = *(_OWORD *)(a2 + 224);
      v35 = *(_OWORD *)(a2 + 240);
      *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
      *(_OWORD *)(a1 + 224) = v34;
      *(_OWORD *)(a1 + 240) = v35;
      v36 = *(_OWORD *)(a2 + 264);
      v37 = *(_OWORD *)(a2 + 280);
      *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
      *(_OWORD *)(a1 + 280) = v37;
      *(_OWORD *)(a1 + 264) = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v21 == 1)
  {
    sub_1AD0661D0(a1 + 176);
    v28 = *(_OWORD *)(a2 + 224);
    v30 = *v20;
    v29 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v28;
    *v19 = v30;
    *(_OWORD *)(a1 + 192) = v29;
    v32 = *(_OWORD *)(a2 + 256);
    v31 = *(_OWORD *)(a2 + 272);
    v33 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
    *(_OWORD *)(a1 + 256) = v32;
    *(_OWORD *)(a1 + 272) = v31;
    *(_OWORD *)(a1 + 240) = v33;
  }
  else
  {
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
    *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v38 = *(_OWORD *)(a2 + 224);
    v39 = *(_OWORD *)(a2 + 240);
    *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
    *(_OWORD *)(a1 + 224) = v38;
    *(_OWORD *)(a1 + 240) = v39;
    v40 = *(_OWORD *)(a2 + 264);
    v41 = *(_OWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
    *(_OWORD *)(a1 + 280) = v41;
    *(_OWORD *)(a1 + 264) = v40;
  }
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v42 = *(_QWORD *)(a2 + 336);
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  *(_QWORD *)(a1 + 336) = v42;
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = *(_QWORD *)(a2 + 360);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v43 = (_OWORD *)(a1 + 368);
  v44 = (__int128 *)(a2 + 368);
  v45 = *(_QWORD *)(a2 + 376);
  if (*(_QWORD *)(a1 + 376) == 1)
  {
    if (v45 == 1)
    {
      v46 = *v44;
      v47 = *(_OWORD *)(a2 + 384);
      v48 = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 416) = v48;
      *v43 = v46;
      *(_OWORD *)(a1 + 384) = v47;
      v49 = *(_OWORD *)(a2 + 432);
      v50 = *(_OWORD *)(a2 + 448);
      v51 = *(_OWORD *)(a2 + 480);
      *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
      *(_OWORD *)(a1 + 480) = v51;
      *(_OWORD *)(a1 + 432) = v49;
      *(_OWORD *)(a1 + 448) = v50;
    }
    else
    {
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
      *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
      *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
      *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
      *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
      *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
      *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
      *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
      *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v45 == 1)
  {
    sub_1AD0B2364(a1 + 368);
    v52 = *(_OWORD *)(a2 + 416);
    v54 = *v44;
    v53 = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 416) = v52;
    *v43 = v54;
    *(_OWORD *)(a1 + 384) = v53;
    v55 = *(_OWORD *)(a2 + 480);
    v57 = *(_OWORD *)(a2 + 432);
    v56 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v55;
    *(_OWORD *)(a1 + 432) = v57;
    *(_OWORD *)(a1 + 448) = v56;
  }
  else
  {
    *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
    *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
    *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
    *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v58 = (_OWORD *)(a1 + 528);
  v59 = (__int128 *)(a2 + 528);
  v60 = *(_QWORD *)(a2 + 536);
  if (*(_QWORD *)(a1 + 536) == 1)
  {
    if (v60 == 1)
    {
      v61 = *v59;
      v62 = *(_OWORD *)(a2 + 544);
      v63 = *(_OWORD *)(a2 + 576);
      *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
      *(_OWORD *)(a1 + 576) = v63;
      *v58 = v61;
      *(_OWORD *)(a1 + 544) = v62;
      v64 = *(_OWORD *)(a2 + 592);
      v65 = *(_OWORD *)(a2 + 608);
      v66 = *(_OWORD *)(a2 + 640);
      *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
      *(_OWORD *)(a1 + 640) = v66;
      *(_OWORD *)(a1 + 592) = v64;
      *(_OWORD *)(a1 + 608) = v65;
    }
    else
    {
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
      *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
      *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
      *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
      *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
      *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
      *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
      *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
      *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
      *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
      *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
      *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v60 == 1)
  {
    sub_1AD0B2364(a1 + 528);
    v67 = *(_OWORD *)(a2 + 576);
    v69 = *v59;
    v68 = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 576) = v67;
    *v58 = v69;
    *(_OWORD *)(a1 + 544) = v68;
    v70 = *(_OWORD *)(a2 + 640);
    v72 = *(_OWORD *)(a2 + 592);
    v71 = *(_OWORD *)(a2 + 608);
    *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
    *(_OWORD *)(a1 + 640) = v70;
    *(_OWORD *)(a1 + 592) = v72;
    *(_OWORD *)(a1 + 608) = v71;
  }
  else
  {
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
    *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
    *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
    *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
    *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
    *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
    *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v73 = *(_QWORD *)(a2 + 672);
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  *(_QWORD *)(a1 + 672) = v73;
  v74 = (_OWORD *)(a1 + 688);
  v75 = (__int128 *)(a2 + 688);
  v76 = *(_QWORD *)(a2 + 704);
  if (*(_QWORD *)(a1 + 704) == 1)
  {
    if (v76 == 1)
    {
      v77 = *v75;
      v78 = *(_OWORD *)(a2 + 704);
      v79 = *(_OWORD *)(a2 + 736);
      *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
      *(_OWORD *)(a1 + 736) = v79;
      *v74 = v77;
      *(_OWORD *)(a1 + 704) = v78;
      v80 = *(_OWORD *)(a2 + 752);
      v81 = *(_OWORD *)(a2 + 768);
      v82 = *(_OWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 793) = *(_OWORD *)(a2 + 793);
      *(_OWORD *)(a1 + 768) = v81;
      *(_OWORD *)(a1 + 784) = v82;
      *(_OWORD *)(a1 + 752) = v80;
    }
    else
    {
      *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
      *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
      *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
      *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
      *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
      *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
      v89 = *(_OWORD *)(a2 + 736);
      v90 = *(_OWORD *)(a2 + 752);
      *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
      *(_OWORD *)(a1 + 736) = v89;
      *(_OWORD *)(a1 + 752) = v90;
      v91 = *(_OWORD *)(a2 + 776);
      v92 = *(_OWORD *)(a2 + 792);
      *(_BYTE *)(a1 + 808) = *(_BYTE *)(a2 + 808);
      *(_OWORD *)(a1 + 792) = v92;
      *(_OWORD *)(a1 + 776) = v91;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v76 == 1)
  {
    sub_1AD0661D0(a1 + 688);
    v83 = *(_OWORD *)(a2 + 736);
    v85 = *v75;
    v84 = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    *(_OWORD *)(a1 + 736) = v83;
    *v74 = v85;
    *(_OWORD *)(a1 + 704) = v84;
    v87 = *(_OWORD *)(a2 + 768);
    v86 = *(_OWORD *)(a2 + 784);
    v88 = *(_OWORD *)(a2 + 752);
    *(_OWORD *)(a1 + 793) = *(_OWORD *)(a2 + 793);
    *(_OWORD *)(a1 + 768) = v87;
    *(_OWORD *)(a1 + 784) = v86;
    *(_OWORD *)(a1 + 752) = v88;
  }
  else
  {
    *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
    *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
    *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
    *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
    *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v93 = *(_OWORD *)(a2 + 736);
    v94 = *(_OWORD *)(a2 + 752);
    *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
    *(_OWORD *)(a1 + 736) = v93;
    *(_OWORD *)(a1 + 752) = v94;
    v95 = *(_OWORD *)(a2 + 776);
    v96 = *(_OWORD *)(a2 + 792);
    *(_BYTE *)(a1 + 808) = *(_BYTE *)(a2 + 808);
    *(_OWORD *)(a1 + 792) = v96;
    *(_OWORD *)(a1 + 776) = v95;
  }
  v97 = (_OWORD *)(a1 + 816);
  v98 = (__int128 *)(a2 + 816);
  v99 = *(_QWORD *)(a2 + 832);
  if (*(_QWORD *)(a1 + 832) == 1)
  {
    if (v99 == 1)
    {
      v100 = *v98;
      v101 = *(_OWORD *)(a2 + 832);
      v102 = *(_OWORD *)(a2 + 864);
      *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
      *(_OWORD *)(a1 + 864) = v102;
      *v97 = v100;
      *(_OWORD *)(a1 + 832) = v101;
      v103 = *(_OWORD *)(a2 + 880);
      v104 = *(_OWORD *)(a2 + 896);
      v105 = *(_OWORD *)(a2 + 912);
      *(_OWORD *)(a1 + 921) = *(_OWORD *)(a2 + 921);
      *(_OWORD *)(a1 + 896) = v104;
      *(_OWORD *)(a1 + 912) = v105;
      *(_OWORD *)(a1 + 880) = v103;
    }
    else
    {
      *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
      *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
      *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
      *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
      *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
      *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
      v112 = *(_OWORD *)(a2 + 864);
      v113 = *(_OWORD *)(a2 + 880);
      *(_BYTE *)(a1 + 896) = *(_BYTE *)(a2 + 896);
      *(_OWORD *)(a1 + 864) = v112;
      *(_OWORD *)(a1 + 880) = v113;
      v114 = *(_OWORD *)(a2 + 904);
      v115 = *(_OWORD *)(a2 + 920);
      *(_BYTE *)(a1 + 936) = *(_BYTE *)(a2 + 936);
      *(_OWORD *)(a1 + 920) = v115;
      *(_OWORD *)(a1 + 904) = v114;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v99 == 1)
  {
    sub_1AD0661D0(a1 + 816);
    v106 = *(_OWORD *)(a2 + 864);
    v108 = *v98;
    v107 = *(_OWORD *)(a2 + 832);
    *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
    *(_OWORD *)(a1 + 864) = v106;
    *v97 = v108;
    *(_OWORD *)(a1 + 832) = v107;
    v110 = *(_OWORD *)(a2 + 896);
    v109 = *(_OWORD *)(a2 + 912);
    v111 = *(_OWORD *)(a2 + 880);
    *(_OWORD *)(a1 + 921) = *(_OWORD *)(a2 + 921);
    *(_OWORD *)(a1 + 896) = v110;
    *(_OWORD *)(a1 + 912) = v109;
    *(_OWORD *)(a1 + 880) = v111;
  }
  else
  {
    *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
    *(_QWORD *)(a1 + 824) = *(_QWORD *)(a2 + 824);
    *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 840) = *(_QWORD *)(a2 + 840);
    *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
    *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v116 = *(_OWORD *)(a2 + 864);
    v117 = *(_OWORD *)(a2 + 880);
    *(_BYTE *)(a1 + 896) = *(_BYTE *)(a2 + 896);
    *(_OWORD *)(a1 + 864) = v116;
    *(_OWORD *)(a1 + 880) = v117;
    v118 = *(_OWORD *)(a2 + 904);
    v119 = *(_OWORD *)(a2 + 920);
    *(_BYTE *)(a1 + 936) = *(_BYTE *)(a2 + 936);
    *(_OWORD *)(a1 + 920) = v119;
    *(_OWORD *)(a1 + 904) = v118;
  }
  v120 = (_OWORD *)(a1 + 944);
  v121 = (__int128 *)(a2 + 944);
  v122 = *(_QWORD *)(a2 + 960);
  if (*(_QWORD *)(a1 + 960) == 1)
  {
    if (v122 == 1)
    {
      v123 = *v121;
      v124 = *(_OWORD *)(a2 + 960);
      v125 = *(_OWORD *)(a2 + 992);
      *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
      *(_OWORD *)(a1 + 992) = v125;
      *v120 = v123;
      *(_OWORD *)(a1 + 960) = v124;
      v126 = *(_OWORD *)(a2 + 1008);
      v127 = *(_OWORD *)(a2 + 1024);
      v128 = *(_OWORD *)(a2 + 1040);
      *(_OWORD *)(a1 + 1049) = *(_OWORD *)(a2 + 1049);
      *(_OWORD *)(a1 + 1024) = v127;
      *(_OWORD *)(a1 + 1040) = v128;
      *(_OWORD *)(a1 + 1008) = v126;
    }
    else
    {
      *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
      *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
      *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
      *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
      *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
      *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
      v135 = *(_OWORD *)(a2 + 992);
      v136 = *(_OWORD *)(a2 + 1008);
      *(_BYTE *)(a1 + 1024) = *(_BYTE *)(a2 + 1024);
      *(_OWORD *)(a1 + 992) = v135;
      *(_OWORD *)(a1 + 1008) = v136;
      v137 = *(_OWORD *)(a2 + 1032);
      v138 = *(_OWORD *)(a2 + 1048);
      *(_BYTE *)(a1 + 1064) = *(_BYTE *)(a2 + 1064);
      *(_OWORD *)(a1 + 1048) = v138;
      *(_OWORD *)(a1 + 1032) = v137;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v122 == 1)
  {
    sub_1AD0661D0(a1 + 944);
    v129 = *(_OWORD *)(a2 + 992);
    v131 = *v121;
    v130 = *(_OWORD *)(a2 + 960);
    *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
    *(_OWORD *)(a1 + 992) = v129;
    *v120 = v131;
    *(_OWORD *)(a1 + 960) = v130;
    v133 = *(_OWORD *)(a2 + 1024);
    v132 = *(_OWORD *)(a2 + 1040);
    v134 = *(_OWORD *)(a2 + 1008);
    *(_OWORD *)(a1 + 1049) = *(_OWORD *)(a2 + 1049);
    *(_OWORD *)(a1 + 1024) = v133;
    *(_OWORD *)(a1 + 1040) = v132;
    *(_OWORD *)(a1 + 1008) = v134;
  }
  else
  {
    *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
    *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
    *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
    *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
    *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v139 = *(_OWORD *)(a2 + 992);
    v140 = *(_OWORD *)(a2 + 1008);
    *(_BYTE *)(a1 + 1024) = *(_BYTE *)(a2 + 1024);
    *(_OWORD *)(a1 + 992) = v139;
    *(_OWORD *)(a1 + 1008) = v140;
    v141 = *(_OWORD *)(a2 + 1032);
    v142 = *(_OWORD *)(a2 + 1048);
    *(_BYTE *)(a1 + 1064) = *(_BYTE *)(a2 + 1064);
    *(_OWORD *)(a1 + 1048) = v142;
    *(_OWORD *)(a1 + 1032) = v141;
  }
  *(_BYTE *)(a1 + 1065) = *(_BYTE *)(a2 + 1065);
  return a1;
}

uint64_t sub_1AD0B2364(uint64_t a1)
{
  destroy for LinkPresentation.PostalAddress();
  return a1;
}

void *__swift_memcpy1066_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x42AuLL);
}

uint64_t assignWithTake for LinkPresentation.MapMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 40) == 1)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 40);
  if (v6 == 1)
  {
    sub_1AD0B2364(a1 + 32);
LABEL_4:
    v7 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v7;
    v8 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v8;
    v9 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v9;
    v10 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v10;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  v11 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v11;
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v12;
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v13;
  swift_bridgeObjectRelease();
  v14 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v14;
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v15;
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v16;
  swift_bridgeObjectRelease();
  v17 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v17;
  swift_bridgeObjectRelease();
LABEL_6:
  v18 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v18;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 192) == 1)
  {
LABEL_9:
    v20 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v20;
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 281) = *(_OWORD *)(a2 + 281);
    v21 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v21;
    v22 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v22;
    goto LABEL_11;
  }
  v19 = *(_QWORD *)(a2 + 192);
  if (v19 == 1)
  {
    sub_1AD0661D0(a1 + 176);
    goto LABEL_9;
  }
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = v19;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  swift_bridgeObjectRelease();
  v23 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v23;
  *(_BYTE *)(a1 + 256) = *(_BYTE *)(a2 + 256);
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 296) = *(_BYTE *)(a2 + 296);
LABEL_11:
  v24 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v24;
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v25;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
  *(_BYTE *)(a1 + 344) = *(_BYTE *)(a2 + 344);
  v26 = *(_QWORD *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_QWORD *)(a1 + 360) = v26;
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 376) == 1)
  {
LABEL_14:
    v28 = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 448) = v28;
    v29 = *(_OWORD *)(a2 + 480);
    *(_OWORD *)(a1 + 464) = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 480) = v29;
    v30 = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = v30;
    v31 = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 416) = v31;
    goto LABEL_16;
  }
  v27 = *(_QWORD *)(a2 + 376);
  if (v27 == 1)
  {
    sub_1AD0B2364(a1 + 368);
    goto LABEL_14;
  }
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = v27;
  swift_bridgeObjectRelease();
  v32 = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = v32;
  swift_bridgeObjectRelease();
  v33 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v33;
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v34;
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = v35;
  swift_bridgeObjectRelease();
  v36 = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v36;
  swift_bridgeObjectRelease();
  v37 = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = v37;
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = v38;
  swift_bridgeObjectRelease();
LABEL_16:
  v39 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v39;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 536) == 1)
  {
LABEL_19:
    v41 = *(_OWORD *)(a2 + 608);
    *(_OWORD *)(a1 + 592) = *(_OWORD *)(a2 + 592);
    *(_OWORD *)(a1 + 608) = v41;
    v42 = *(_OWORD *)(a2 + 640);
    *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
    *(_OWORD *)(a1 + 640) = v42;
    v43 = *(_OWORD *)(a2 + 544);
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    *(_OWORD *)(a1 + 544) = v43;
    v44 = *(_OWORD *)(a2 + 576);
    *(_OWORD *)(a1 + 560) = *(_OWORD *)(a2 + 560);
    *(_OWORD *)(a1 + 576) = v44;
    goto LABEL_21;
  }
  v40 = *(_QWORD *)(a2 + 536);
  if (v40 == 1)
  {
    sub_1AD0B2364(a1 + 528);
    goto LABEL_19;
  }
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = v40;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_QWORD *)(a1 + 552) = *(_QWORD *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
  *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_QWORD *)(a1 + 648) = *(_QWORD *)(a2 + 648);
  swift_bridgeObjectRelease();
LABEL_21:
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_QWORD *)(a1 + 664) = *(_QWORD *)(a2 + 664);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  if (*(_QWORD *)(a1 + 704) == 1)
  {
LABEL_24:
    v46 = *(_OWORD *)(a2 + 768);
    *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
    *(_OWORD *)(a1 + 768) = v46;
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 793) = *(_OWORD *)(a2 + 793);
    v47 = *(_OWORD *)(a2 + 704);
    *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
    *(_OWORD *)(a1 + 704) = v47;
    v48 = *(_OWORD *)(a2 + 736);
    *(_OWORD *)(a1 + 720) = *(_OWORD *)(a2 + 720);
    *(_OWORD *)(a1 + 736) = v48;
    goto LABEL_26;
  }
  v45 = *(_QWORD *)(a2 + 704);
  if (v45 == 1)
  {
    sub_1AD0661D0(a1 + 688);
    goto LABEL_24;
  }
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 704) = v45;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 712) = *(_OWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
  swift_bridgeObjectRelease();
  v49 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v49;
  *(_BYTE *)(a1 + 768) = *(_BYTE *)(a2 + 768);
  *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
  *(_OWORD *)(a1 + 792) = *(_OWORD *)(a2 + 792);
  *(_BYTE *)(a1 + 808) = *(_BYTE *)(a2 + 808);
LABEL_26:
  if (*(_QWORD *)(a1 + 832) == 1)
  {
LABEL_29:
    v51 = *(_OWORD *)(a2 + 896);
    *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
    *(_OWORD *)(a1 + 896) = v51;
    *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
    *(_OWORD *)(a1 + 921) = *(_OWORD *)(a2 + 921);
    v52 = *(_OWORD *)(a2 + 832);
    *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
    *(_OWORD *)(a1 + 832) = v52;
    v53 = *(_OWORD *)(a2 + 864);
    *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
    *(_OWORD *)(a1 + 864) = v53;
    goto LABEL_31;
  }
  v50 = *(_QWORD *)(a2 + 832);
  if (v50 == 1)
  {
    sub_1AD0661D0(a1 + 816);
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
  *(_QWORD *)(a1 + 832) = v50;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  swift_bridgeObjectRelease();
  v54 = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 880) = v54;
  *(_BYTE *)(a1 + 896) = *(_BYTE *)(a2 + 896);
  *(_OWORD *)(a1 + 904) = *(_OWORD *)(a2 + 904);
  *(_OWORD *)(a1 + 920) = *(_OWORD *)(a2 + 920);
  *(_BYTE *)(a1 + 936) = *(_BYTE *)(a2 + 936);
LABEL_31:
  if (*(_QWORD *)(a1 + 960) != 1)
  {
    v55 = *(_QWORD *)(a2 + 960);
    if (v55 != 1)
    {
      *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
      *(_QWORD *)(a1 + 960) = v55;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
      *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
      swift_bridgeObjectRelease();
      v59 = *(_OWORD *)(a2 + 1008);
      *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
      *(_OWORD *)(a1 + 1008) = v59;
      *(_BYTE *)(a1 + 1024) = *(_BYTE *)(a2 + 1024);
      *(_OWORD *)(a1 + 1032) = *(_OWORD *)(a2 + 1032);
      *(_OWORD *)(a1 + 1048) = *(_OWORD *)(a2 + 1048);
      *(_BYTE *)(a1 + 1064) = *(_BYTE *)(a2 + 1064);
      goto LABEL_36;
    }
    sub_1AD0661D0(a1 + 944);
  }
  v56 = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 1024) = v56;
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(_OWORD *)(a1 + 1049) = *(_OWORD *)(a2 + 1049);
  v57 = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 960) = v57;
  v58 = *(_OWORD *)(a2 + 992);
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 992) = v58;
LABEL_36:
  *(_BYTE *)(a1 + 1065) = *(_BYTE *)(a2 + 1065);
  return a1;
}

