id sub_1AD35CEC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  void *v52;
  id v53;
  unsigned int v54;
  void *v55;
  uint64_t v56;
  int *v57;
  void *v58;
  void *v59;
  void *v60;
  void *v61;
  void *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  void *v67;
  void *v68;
  uint64_t v69;
  void *v70;
  uint64_t v71;
  void *v72;
  id v73;
  uint64_t v74;
  uint64_t v75;
  id v76;
  uint64_t v77;
  __int128 *v78;
  uint64_t v79;
  id v80;
  id v81;
  id v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  id v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  id v97;
  uint64_t v98;
  id v99;
  uint64_t v100;
  uint64_t v101;
  id v102;
  id v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void *v110;
  id v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  void *v115;
  void *v116;
  void *v117;
  uint64_t v118;
  int *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  void *v125;
  id v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  void *v130;
  int *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void *v137;
  id v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *v142;
  void *v143;
  void *v144;
  uint64_t v145;
  int *v146;
  uint64_t v147;
  int *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t (*v153)(uint64_t);
  _UNKNOWN **v154;
  void *v155;
  id v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  uint64_t v160;
  uint64_t (*v161)(uint64_t);
  _UNKNOWN **v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  void *v166;
  _QWORD *v167;
  int *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t (*v172)(uint64_t);
  _UNKNOWN **v173;
  uint64_t v174;
  void *v175;
  id v176;
  int *v177;
  uint64_t v178;
  uint64_t v179;
  void *v180;
  uint64_t v181;
  _UNKNOWN **v182;
  uint64_t (*v183)(uint64_t);
  uint64_t v184;
  uint64_t v185;
  void *v186;
  uint64_t v187;
  int *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  void *v195;
  id v196;
  uint64_t v197;
  uint64_t v198;
  void *v199;
  void *v200;
  uint64_t v201;
  uint64_t v202;
  void *v203;
  void *v204;
  uint64_t v205;
  id v206;
  double v207;
  double v208;
  double v209;
  double v210;
  id v211;
  uint64_t v212;
  id v213;
  char *v215;
  char *v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  id v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  char *v235;
  char *v236;
  char *v237;
  char *v238;
  int *v239;
  int *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  int *v246;
  uint64_t v247;
  uint64_t v248;
  unsigned int (*v249)(char *, uint64_t, uint64_t);
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  uint64_t v261;
  _QWORD v262[23];
  __int128 v263;
  _OWORD v264[2];
  __int128 v265;
  __int128 v266;
  __int128 v267;
  _OWORD v268[5];
  uint64_t v269;
  _BYTE v270[128];
  _OWORD v271[6];
  _OWORD v272[2];
  _BYTE v273[128];
  _OWORD v274[6];
  _OWORD v275[3];

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC8);
  MEMORY[0x1E0C80A78](v1);
  v227 = (char *)&v215 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
  MEMORY[0x1E0C80A78](v3);
  v220 = (uint64_t)&v215 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = (int *)type metadata accessor for LinkPresentation.AudioMetadata(0);
  v224 = *((_QWORD *)v5 - 1);
  MEMORY[0x1E0C80A78](v5);
  v241 = (char *)&v215 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v243 = type metadata accessor for LinkPresentation.VideoMetadata(0);
  v225 = *(_QWORD *)(v243 - 8);
  v7 = MEMORY[0x1E0C80A78](v243);
  v245 = (uint64_t)&v215 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v238 = (char *)&v215 - v9;
  v226 = type metadata accessor for LinkPresentation.ImageMetadata(0);
  v223 = *(_QWORD *)(v226 - 8);
  MEMORY[0x1E0C80A78](v226);
  v237 = (char *)&v215 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = type metadata accessor for LinkPresentation.IconMetadata(0);
  v222 = *(_QWORD *)(v242 - 8);
  MEMORY[0x1E0C80A78](v242);
  v236 = (char *)&v215 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for LinkPresentation.ARAssetMetadata(0);
  v221 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v235 = (char *)&v215 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB0);
  MEMORY[0x1E0C80A78](v14);
  v216 = (char *)&v215 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA8);
  MEMORY[0x1E0C80A78](v16);
  v239 = (int *)((char *)&v215 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CA0);
  MEMORY[0x1E0C80A78](v18);
  v219 = (uint64_t)&v215 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
  MEMORY[0x1E0C80A78](v20);
  v218 = (uint64_t)&v215 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C90);
  MEMORY[0x1E0C80A78](v22);
  v215 = (char *)&v215 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C88);
  MEMORY[0x1E0C80A78](v24);
  v240 = (int *)((char *)&v215 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C80);
  MEMORY[0x1E0C80A78](v26);
  v217 = (uint64_t)&v215 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v29 = MEMORY[0x1E0C80A78](v28);
  v234 = (uint64_t)&v215 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v233 = (uint64_t)&v215 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v232 = (uint64_t)&v215 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v231 = (uint64_t)&v215 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v230 = (uint64_t)&v215 - v38;
  v39 = MEMORY[0x1E0C80A78](v37);
  v229 = (uint64_t)&v215 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v43 = (char *)&v215 - v42;
  v44 = MEMORY[0x1E0C80A78](v41);
  v46 = (char *)&v215 - v45;
  MEMORY[0x1E0C80A78](v44);
  v48 = (char *)&v215 - v47;
  v228 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPLinkMetadata), sel_init);
  v49 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
  v50 = v49[5];
  v244 = v0;
  sub_1ACFF64C0(v0 + v50, (uint64_t)v48, &qword_1ED2E1A40);
  v51 = sub_1AD63AF28();
  v247 = *(_QWORD *)(v51 - 8);
  v249 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v247 + 48);
  v52 = 0;
  if (v249(v48, 1, v51) != 1)
  {
    v52 = (void *)sub_1AD63AE98();
    (*(void (**)(char *, uint64_t))(v247 + 8))(v48, v51);
  }
  v53 = v228;
  objc_msgSend(v228, sel_setOriginalURL_, v52);

  sub_1ACFF64C0(v244 + v49[6], (uint64_t)v46, &qword_1ED2E1A40);
  v54 = v249(v46, 1, v51);
  v248 = v51;
  if (v54 == 1)
  {
    v55 = 0;
  }
  else
  {
    v55 = (void *)sub_1AD63AE98();
    (*(void (**)(char *, uint64_t))(v247 + 8))(v46, v51);
  }
  v56 = (uint64_t)v238;
  v57 = (int *)v226;
  objc_msgSend(v53, sel_setURL_, v55);

  if (*(_QWORD *)(v244 + v49[7] + 8))
    v58 = (void *)sub_1AD63B744();
  else
    v58 = 0;
  objc_msgSend(v53, sel_setTitle_, v58);

  if (*(_QWORD *)(v244 + v49[8] + 8))
    v59 = (void *)sub_1AD63B744();
  else
    v59 = 0;
  objc_msgSend(v53, sel_setSummary_, v59);

  if (*(_QWORD *)(v244 + v49[9] + 8))
    v60 = (void *)sub_1AD63B744();
  else
    v60 = 0;
  objc_msgSend(v53, sel_setSelectedText_, v60);

  if (*(_QWORD *)(v244 + v49[10] + 8))
    v61 = (void *)sub_1AD63B744();
  else
    v61 = 0;
  objc_msgSend(v53, sel_setSiteName_, v61);

  if (*(_QWORD *)(v244 + v49[11] + 8))
    v62 = (void *)sub_1AD63B744();
  else
    v62 = 0;
  objc_msgSend(v53, sel_setItemType_, v62);

  sub_1ACFF64C0(v244 + v49[12], (uint64_t)v43, &qword_1ED2E1A40);
  v63 = v248;
  if (v249(v43, 1, v248) == 1)
  {
    v64 = 0;
  }
  else
  {
    v64 = (void *)sub_1AD63AE98();
    (*(void (**)(char *, uint64_t))(v247 + 8))(v43, v63);
  }
  objc_msgSend(v53, sel_setRelatedURL_, v64);

  if (*(_QWORD *)(v244 + v49[13] + 8))
    v65 = (void *)sub_1AD63B744();
  else
    v65 = 0;
  objc_msgSend(v53, sel_setCreator_, v65);

  if (*(_QWORD *)(v244 + v49[14] + 8))
    v66 = (void *)sub_1AD63B744();
  else
    v66 = 0;
  objc_msgSend(v53, sel_setCreatorFacebookProfile_, v66);

  if (*(_QWORD *)(v244 + v49[15] + 8))
    v67 = (void *)sub_1AD63B744();
  else
    v67 = 0;
  objc_msgSend(v53, sel_setCreatorTwitterUsername_, v67);

  if (*(_QWORD *)(v244 + v49[16] + 8))
    v68 = (void *)sub_1AD63B744();
  else
    v68 = 0;
  objc_msgSend(v53, sel_setTwitterCard_, v68);

  v69 = v244;
  objc_msgSend(v53, sel_setUsesActivityPub_, *(_BYTE *)(v244 + v49[17]) & 1);
  if (*(_QWORD *)(v69 + v49[19] + 8))
    v70 = (void *)sub_1AD63B744();
  else
    v70 = 0;
  objc_msgSend(v53, sel_setAppleContentID_, v70);

  v71 = *(_QWORD *)(v244 + v49[20] + 8);
  v246 = (int *)v12;
  if (v71)
    v72 = (void *)sub_1AD63B744();
  else
    v72 = 0;
  objc_msgSend(v53, sel_setAppleSummary_, v72);

  sub_1AD00FF28(v244 + v49[21], (uint64_t)v273, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v273, (uint64_t)v274, &qword_1EECD1D20);
  if (sub_1AD36EAF8((uint64_t)v274) == 1)
  {
    v73 = 0;
  }
  else
  {
    v266 = v274[4];
    v267 = v274[5];
    v268[0] = v275[0];
    *(_OWORD *)((char *)v268 + 9) = *(_OWORD *)((char *)v275 + 9);
    v263 = v274[0];
    v264[0] = v274[1];
    v264[1] = v274[2];
    v265 = v274[3];
    v73 = sub_1AD366AC8();
  }
  v74 = (uint64_t)v240;
  objc_msgSend(v53, sel_setIcon_, v73);

  v75 = v217;
  sub_1ACFF64C0(v244 + v49[22], v217, &qword_1EECD1C80);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v222 + 48))(v75, 1, v242) == 1)
  {
    sub_1AD009758(v75, &qword_1EECD1C80);
    v76 = 0;
  }
  else
  {
    v77 = v75;
    v76 = sub_1AD366D4C();
    sub_1AD066230(v77, type metadata accessor for LinkPresentation.IconMetadata);
  }
  objc_msgSend(v53, sel_setIconMetadata_, v76);

  v78 = (__int128 *)(v244 + v49[23]);
  v79 = *((_QWORD *)v78 + 2);
  if (v79 == 1)
  {
    v80 = 0;
  }
  else
  {
    v263 = *v78;
    *(_QWORD *)&v264[0] = v79;
    *(_OWORD *)((char *)v264 + 8) = *(__int128 *)((char *)v78 + 24);
    v80 = sub_1AD366E9C();
  }
  objc_msgSend(v53, sel_setArAsset_, v80);

  sub_1ACFF64C0(v244 + v49[24], v74, &qword_1EECD1C88);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v221 + 48))(v74, 1, v246) == 1)
  {
    sub_1AD009758(v74, &qword_1EECD1C88);
    v81 = 0;
  }
  else
  {
    v81 = sub_1AD36755C((Class *)off_1E5C9CA90, type metadata accessor for LinkPresentation.ARAssetMetadata);
    sub_1AD066230(v74, type metadata accessor for LinkPresentation.ARAssetMetadata);
  }
  objc_msgSend(v53, sel_setArAssetMetadata_, v81);

  sub_1AD00FF28(v244 + v49[25], (uint64_t)v270, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)v270, (uint64_t)v271, &qword_1EECD1D20);
  if (sub_1AD36EAF8((uint64_t)v271) == 1)
  {
    v82 = 0;
  }
  else
  {
    v266 = v271[4];
    v267 = v271[5];
    v268[0] = v272[0];
    *(_OWORD *)((char *)v268 + 9) = *(_OWORD *)((char *)v272 + 9);
    v263 = v271[0];
    v264[0] = v271[1];
    v264[1] = v271[2];
    v265 = v271[3];
    v82 = sub_1AD366AC8();
  }
  objc_msgSend(v53, sel_setImage_, v82);

  v83 = *(_QWORD **)(v244 + v49[26]);
  v240 = v49;
  if (v83)
  {
    v84 = v83[2];
    if (v84)
    {
      v262[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AD63BDE0();
      v85 = 4;
      do
      {
        v266 = *(_OWORD *)&v83[v85 + 8];
        v267 = *(_OWORD *)&v83[v85 + 10];
        v268[0] = *(_OWORD *)&v83[v85 + 12];
        *(_OWORD *)((char *)v268 + 9) = *(_OWORD *)((char *)&v83[v85 + 13] + 1);
        v263 = *(_OWORD *)&v83[v85];
        v264[0] = *(_OWORD *)&v83[v85 + 2];
        v264[1] = *(_OWORD *)&v83[v85 + 4];
        v265 = *(_OWORD *)&v83[v85 + 6];
        sub_1AD366AC8();
        sub_1AD63BDC8();
        sub_1AD63BDEC();
        sub_1AD63BDF8();
        sub_1AD63BDD4();
        v85 += 16;
        --v84;
      }
      while (v84);
      swift_bridgeObjectRelease();
      v53 = v228;
      v49 = v240;
      v57 = (int *)v226;
    }
    sub_1AD32F2CC(0, &qword_1EECDAF30);
    v83 = (_QWORD *)sub_1AD63B990();
    swift_bridgeObjectRelease();
  }
  v86 = (uint64_t)v215;
  objc_msgSend(v53, sel_setAlternateImages_, v83);

  sub_1ACFF64C0(v244 + v49[27], v86, &qword_1EECD1C90);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v223 + 48))(v86, 1, v57) == 1)
  {
    sub_1AD009758(v86, &qword_1EECD1C90);
    v87 = 0;
  }
  else
  {
    v87 = sub_1AD367270((Class *)off_1E5C9CB38, type metadata accessor for LinkPresentation.ImageMetadata);
    sub_1AD066230(v86, type metadata accessor for LinkPresentation.ImageMetadata);
  }
  objc_msgSend(v53, sel_setImageMetadata_, v87);

  v88 = *(_QWORD **)(v244 + v49[28]);
  if (v88)
  {
    v89 = v88[2];
    if (v89)
    {
      v262[0] = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AD63BDE0();
      v90 = 4;
      do
      {
        v266 = *(_OWORD *)&v88[v90 + 8];
        v267 = *(_OWORD *)&v88[v90 + 10];
        v268[0] = *(_OWORD *)&v88[v90 + 12];
        *(_OWORD *)((char *)v268 + 9) = *(_OWORD *)((char *)&v88[v90 + 13] + 1);
        v263 = *(_OWORD *)&v88[v90];
        v264[0] = *(_OWORD *)&v88[v90 + 2];
        v264[1] = *(_OWORD *)&v88[v90 + 4];
        v265 = *(_OWORD *)&v88[v90 + 6];
        sub_1AD366AC8();
        sub_1AD63BDC8();
        sub_1AD63BDEC();
        sub_1AD63BDF8();
        sub_1AD63BDD4();
        v90 += 16;
        --v89;
      }
      while (v89);
      swift_bridgeObjectRelease();
      v53 = v228;
      v49 = v240;
      v57 = (int *)v226;
    }
    sub_1AD32F2CC(0, &qword_1EECDAF30);
    v88 = (_QWORD *)sub_1AD63B990();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v53, sel_setContentImages_, v88);

  v91 = *(void **)(v244 + v49[29]);
  if (v91)
  {
    v92 = swift_bridgeObjectRetain();
    sub_1AD355B68(v92);
    v217 = 0;
    swift_bridgeObjectRelease();
    sub_1AD32F2CC(0, &qword_1EECDAF48);
    v91 = (void *)sub_1AD63B990();
    swift_bridgeObjectRelease();
  }
  else
  {
    v217 = 0;
  }
  v93 = v243;
  v94 = (uint64_t)v216;
  objc_msgSend(v53, sel_setContentImagesMetadata_, v91);

  v95 = v218;
  sub_1ACFF64C0(v244 + v49[30], v218, &qword_1EECD1C98);
  v96 = type metadata accessor for LinkPresentation.Video(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v95, 1, v96) == 1)
  {
    sub_1AD009758(v95, &qword_1EECD1C98);
    v97 = 0;
  }
  else
  {
    v97 = sub_1AD366FC0();
    sub_1AD066230(v95, type metadata accessor for LinkPresentation.Video);
  }
  objc_msgSend(v53, sel_setVideo_, v97);

  v98 = v219;
  sub_1ACFF64C0(v244 + v49[31], v219, &qword_1EECD1CA0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v225 + 48))(v98, 1, v93) == 1)
  {
    sub_1AD009758(v98, &qword_1EECD1CA0);
    v99 = 0;
  }
  else
  {
    v99 = sub_1AD367270((Class *)off_1E5C9CBC0, type metadata accessor for LinkPresentation.VideoMetadata);
    sub_1AD066230(v98, type metadata accessor for LinkPresentation.VideoMetadata);
  }
  v100 = (uint64_t)v239;
  objc_msgSend(v53, sel_setVideoMetadata_, v99);

  sub_1ACFF64C0(v244 + v49[32], v100, &qword_1EECD1CA8);
  v101 = type metadata accessor for LinkPresentation.Audio(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 48))(v100, 1, v101) == 1)
  {
    sub_1AD009758(v100, &qword_1EECD1CA8);
    v102 = 0;
  }
  else
  {
    v102 = sub_1AD36741C();
    sub_1AD066230(v100, type metadata accessor for LinkPresentation.Audio);
  }
  objc_msgSend(v53, sel_setAudio_, v102);

  sub_1ACFF64C0(v244 + v49[33], v94, &qword_1EECD1CB0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(v224 + 48))(v94, 1, v5) == 1)
  {
    sub_1AD009758(v94, &qword_1EECD1CB0);
    v103 = 0;
  }
  else
  {
    v103 = sub_1AD36755C((Class *)off_1E5C9CAF0, type metadata accessor for LinkPresentation.AudioMetadata);
    sub_1AD066230(v94, type metadata accessor for LinkPresentation.AudioMetadata);
  }
  objc_msgSend(v53, sel_setAudioMetadata_, v103);

  v104 = *(_QWORD *)(v244 + v49[34]);
  v239 = v5;
  if (v104)
  {
    v105 = *(_QWORD *)(v104 + 16);
    if (v105)
    {
      *(_QWORD *)&v263 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AD63BDE0();
      v106 = *(unsigned __int8 *)(v221 + 80);
      v219 = v104;
      v107 = v104 + ((v106 + 32) & ~v106);
      v108 = *(_QWORD *)(v221 + 72);
      v109 = (uint64_t)v235;
      do
      {
        sub_1AD0D3D2C(v107, v109, type metadata accessor for LinkPresentation.ARAssetMetadata);
        v111 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPARAssetMetadata), sel_init);
        v112 = v109 + v246[5];
        v113 = v229;
        sub_1ACFF64C0(v112, v229, &qword_1ED2E1A40);
        v114 = v248;
        if (v249((char *)v113, 1, v248) == 1)
        {
          v115 = 0;
        }
        else
        {
          v115 = (void *)sub_1AD63AE98();
          (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v113, v114);
        }
        objc_msgSend(v111, sel_setURL_, v115);

        v109 = (uint64_t)v235;
        if (*(_QWORD *)&v235[v246[6] + 8])
          v116 = (void *)sub_1AD63B744();
        else
          v116 = 0;
        objc_msgSend(v111, sel_setType_, v116);

        if (*(_QWORD *)(v109 + v246[7] + 8))
          v110 = (void *)sub_1AD63B744();
        else
          v110 = 0;
        objc_msgSend(v111, sel_setAccessibilityText_, v110);

        sub_1AD066230(v109, type metadata accessor for LinkPresentation.ARAssetMetadata);
        sub_1AD63BDC8();
        sub_1AD63BDEC();
        sub_1AD63BDF8();
        sub_1AD63BDD4();
        v107 += v108;
        --v105;
        v49 = v240;
      }
      while (v105);
      swift_bridgeObjectRelease();
      v53 = v228;
      v5 = v239;
      v57 = (int *)v226;
    }
    sub_1AD32F2CC(0, &qword_1EECDAF40);
    v117 = (void *)sub_1AD63B990();
    swift_bridgeObjectRelease();
  }
  else
  {
    v117 = 0;
  }
  v118 = (uint64_t)v227;
  objc_msgSend(v53, sel_setArAssets_, v117);

  v119 = *(int **)(v244 + v49[35]);
  if (v119)
  {
    v120 = *((_QWORD *)v119 + 2);
    if (v120)
    {
      *(_QWORD *)&v263 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AD63BDE0();
      v121 = *(unsigned __int8 *)(v222 + 80);
      v246 = v119;
      v122 = (uint64_t)v119 + ((v121 + 32) & ~v121);
      v123 = *(_QWORD *)(v222 + 72);
      v124 = (uint64_t)v236;
      do
      {
        sub_1AD0D3D2C(v122, v124, type metadata accessor for LinkPresentation.IconMetadata);
        v126 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPIconMetadata), sel_init);
        v127 = v124 + *(int *)(v242 + 20);
        v128 = v230;
        sub_1ACFF64C0(v127, v230, &qword_1ED2E1A40);
        v129 = v248;
        if (v249((char *)v128, 1, v248) == 1)
        {
          v130 = 0;
        }
        else
        {
          v130 = (void *)sub_1AD63AE98();
          (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v128, v129);
        }
        objc_msgSend(v126, sel_setURL_, v130);

        v124 = (uint64_t)v236;
        if (*(_QWORD *)&v236[*(int *)(v242 + 24) + 8])
          v125 = (void *)sub_1AD63B744();
        else
          v125 = 0;
        objc_msgSend(v126, sel_setAccessibilityText_, v125);

        sub_1AD066230(v124, type metadata accessor for LinkPresentation.IconMetadata);
        sub_1AD63BDC8();
        sub_1AD63BDEC();
        sub_1AD63BDF8();
        sub_1AD63BDD4();
        v122 += v123;
        --v120;
      }
      while (v120);
      swift_bridgeObjectRelease();
      v57 = (int *)v226;
      v118 = (uint64_t)v227;
      v5 = v239;
      v49 = v240;
      v56 = (uint64_t)v238;
    }
    sub_1AD32F2CC(0, &qword_1EECDAF50);
    v119 = (int *)sub_1AD63B990();
    swift_bridgeObjectRelease();
    v53 = v228;
  }
  objc_msgSend(v53, sel_setIcons_, v119);

  v131 = *(int **)(v244 + v49[36]);
  if (v131)
  {
    v132 = *((_QWORD *)v131 + 2);
    if (v132)
    {
      *(_QWORD *)&v263 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AD63BDE0();
      v133 = *(unsigned __int8 *)(v223 + 80);
      v246 = v131;
      v134 = (uint64_t)v131 + ((v133 + 32) & ~v133);
      v135 = *(_QWORD *)(v223 + 72);
      v136 = (uint64_t)v237;
      do
      {
        sub_1AD0D3D2C(v134, v136, type metadata accessor for LinkPresentation.ImageMetadata);
        v138 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPImageMetadata), sel_init);
        v139 = v136 + v57[5];
        v140 = v231;
        sub_1ACFF64C0(v139, v231, &qword_1ED2E1A40);
        v141 = v248;
        if (v249((char *)v140, 1, v248) == 1)
        {
          v142 = 0;
        }
        else
        {
          v142 = (void *)sub_1AD63AE98();
          (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v140, v141);
        }
        objc_msgSend(v138, sel_setURL_, v142);

        v136 = (uint64_t)v237;
        if (*(_QWORD *)&v237[v57[6] + 8])
          v143 = (void *)sub_1AD63B744();
        else
          v143 = 0;
        objc_msgSend(v138, sel_setType_, v143);

        objc_msgSend(v138, sel_setSize_, *(double *)(v136 + v57[7]), *(double *)(v136 + v57[7] + 8));
        if (*(_QWORD *)(v136 + v57[8] + 8))
          v137 = (void *)sub_1AD63B744();
        else
          v137 = 0;
        objc_msgSend(v138, sel_setAccessibilityText_, v137);

        sub_1AD066230(v136, type metadata accessor for LinkPresentation.ImageMetadata);
        sub_1AD63BDC8();
        sub_1AD63BDEC();
        sub_1AD63BDF8();
        sub_1AD63BDD4();
        v134 += v135;
        --v132;
      }
      while (v132);
      swift_bridgeObjectRelease();
      v118 = (uint64_t)v227;
      v53 = v228;
      v49 = v240;
      v56 = (uint64_t)v238;
    }
    sub_1AD32F2CC(0, &qword_1EECDAF48);
    v131 = (int *)sub_1AD63B990();
    swift_bridgeObjectRelease();
    v5 = v239;
  }
  objc_msgSend(v53, sel_setImages_, v131);

  v144 = *(void **)(v244 + v49[37]);
  if (v144)
  {
    v145 = swift_bridgeObjectRetain();
    sub_1AD355B68(v145);
    swift_bridgeObjectRelease();
    sub_1AD32F2CC(0, &qword_1EECDAF48);
    v144 = (void *)sub_1AD63B990();
    swift_bridgeObjectRelease();
  }
  v146 = (int *)v243;
  objc_msgSend(v53, sel_setAvailableContentImages_, v144);

  v147 = *(_QWORD *)(v244 + v49[38]);
  if (v147)
  {
    v148 = *(int **)(v147 + 16);
    if (v148)
    {
      *(_QWORD *)&v263 = MEMORY[0x1E0DEE9D8];
      v149 = v147;
      swift_bridgeObjectRetain();
      sub_1AD63BDE0();
      v150 = *(unsigned __int8 *)(v225 + 80);
      v242 = v149;
      v151 = v149 + ((v150 + 32) & ~v150);
      v152 = *(_QWORD *)(v225 + 72);
      v153 = type metadata accessor for LinkPresentation.VideoMetadata;
      v154 = &off_1E5C9C000;
      do
      {
        sub_1AD0D3D2C(v151, v56, v153);
        v156 = objc_msgSend(objc_allocWithZone((Class)v154[376]), sel_init);
        v157 = v232;
        sub_1ACFF64C0(v56 + v146[5], v232, &qword_1ED2E1A40);
        v158 = v248;
        if (v249((char *)v157, 1, v248) == 1)
        {
          v159 = 0;
        }
        else
        {
          v246 = v148;
          v160 = v152;
          v161 = v153;
          v162 = v154;
          v163 = v157;
          v159 = (void *)sub_1AD63AE98();
          v164 = v163;
          v154 = v162;
          v153 = v161;
          v152 = v160;
          v148 = v246;
          (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v164, v158);
        }
        objc_msgSend(v156, sel_setURL_, v159);

        v56 = (uint64_t)v238;
        if (*(_QWORD *)&v238[v146[6] + 8])
          v165 = (void *)sub_1AD63B744();
        else
          v165 = 0;
        objc_msgSend(v156, sel_setType_, v165);

        objc_msgSend(v156, sel_setSize_, *(double *)(v56 + v146[7]), *(double *)(v56 + v146[7] + 8));
        if (*(_QWORD *)(v56 + v146[8] + 8))
          v155 = (void *)sub_1AD63B744();
        else
          v155 = 0;
        objc_msgSend(v156, sel_setAccessibilityText_, v155);

        sub_1AD066230(v56, v153);
        sub_1AD63BDC8();
        sub_1AD63BDEC();
        sub_1AD63BDF8();
        sub_1AD63BDD4();
        v151 += v152;
        v148 = (int *)((char *)v148 - 1);
        v146 = (int *)v243;
      }
      while (v148);
      swift_bridgeObjectRelease();
      v118 = (uint64_t)v227;
      v53 = v228;
      v5 = v239;
      v49 = v240;
    }
    sub_1AD32F2CC(0, &qword_1EECDAF58);
    v166 = (void *)sub_1AD63B990();
    swift_bridgeObjectRelease();
  }
  else
  {
    v166 = 0;
  }
  objc_msgSend(v53, sel_setVideos_, v166);

  v167 = *(_QWORD **)(v244 + v49[39]);
  if (v167)
  {
    v168 = (int *)v167[2];
    if (v168)
    {
      *(_QWORD *)&v263 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AD63BDE0();
      v169 = *(unsigned __int8 *)(v225 + 80);
      v242 = (uint64_t)v167;
      v170 = (uint64_t)v167 + ((v169 + 32) & ~v169);
      v171 = *(_QWORD *)(v225 + 72);
      v172 = type metadata accessor for LinkPresentation.VideoMetadata;
      v173 = &off_1E5C9C000;
      v174 = v245;
      do
      {
        sub_1AD0D3D2C(v170, v174, v172);
        v176 = objc_msgSend(objc_allocWithZone((Class)v173[376]), sel_init);
        v177 = (int *)v243;
        v178 = v233;
        sub_1ACFF64C0(v174 + *(int *)(v243 + 20), v233, &qword_1ED2E1A40);
        v179 = v248;
        if (v249((char *)v178, 1, v248) == 1)
        {
          v180 = 0;
        }
        else
        {
          v246 = v168;
          v181 = v171;
          v182 = v173;
          v183 = v172;
          v184 = v178;
          v180 = (void *)sub_1AD63AE98();
          v185 = v184;
          v172 = v183;
          v173 = v182;
          v171 = v181;
          v168 = v246;
          (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v185, v179);
        }
        objc_msgSend(v176, sel_setURL_, v180);

        if (*(_QWORD *)(v245 + v177[6] + 8))
          v186 = (void *)sub_1AD63B744();
        else
          v186 = 0;
        objc_msgSend(v176, sel_setType_, v186);

        v187 = v245;
        objc_msgSend(v176, sel_setSize_, *(double *)(v245 + v177[7]), *(double *)(v245 + v177[7] + 8));
        if (*(_QWORD *)(v187 + v177[8] + 8))
          v175 = (void *)sub_1AD63B744();
        else
          v175 = 0;
        objc_msgSend(v176, sel_setAccessibilityText_, v175);

        v174 = v245;
        sub_1AD066230(v245, v172);
        sub_1AD63BDC8();
        sub_1AD63BDEC();
        sub_1AD63BDF8();
        sub_1AD63BDD4();
        v170 += v171;
        v168 = (int *)((char *)v168 - 1);
      }
      while (v168);
      swift_bridgeObjectRelease();
      v118 = (uint64_t)v227;
      v53 = v228;
      v5 = v239;
      v49 = v240;
    }
    sub_1AD32F2CC(0, &qword_1EECDAF58);
    v167 = (_QWORD *)sub_1AD63B990();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v53, sel_setStreamingVideos_, v167);

  v188 = *(int **)(v244 + v49[40]);
  if (v188)
  {
    v189 = *((_QWORD *)v188 + 2);
    if (v189)
    {
      *(_QWORD *)&v263 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRetain();
      sub_1AD63BDE0();
      v190 = *(unsigned __int8 *)(v224 + 80);
      v246 = v188;
      v191 = (uint64_t)v188 + ((v190 + 32) & ~v190);
      v192 = *(_QWORD *)(v224 + 72);
      v193 = (uint64_t)v241;
      v194 = v248;
      do
      {
        sub_1AD0D3D2C(v191, v193, type metadata accessor for LinkPresentation.AudioMetadata);
        v196 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPAudioMetadata), sel_init);
        v197 = v193 + v5[5];
        v198 = v234;
        sub_1ACFF64C0(v197, v234, &qword_1ED2E1A40);
        if (v249((char *)v198, 1, v194) == 1)
        {
          v199 = 0;
        }
        else
        {
          v199 = (void *)sub_1AD63AE98();
          (*(void (**)(uint64_t, uint64_t))(v247 + 8))(v198, v194);
        }
        objc_msgSend(v196, sel_setURL_, v199);

        if (*(_QWORD *)&v241[v5[6] + 8])
          v200 = (void *)sub_1AD63B744();
        else
          v200 = 0;
        objc_msgSend(v196, sel_setType_, v200);

        v193 = (uint64_t)v241;
        if (*(_QWORD *)&v241[v5[7] + 8])
          v195 = (void *)sub_1AD63B744();
        else
          v195 = 0;
        objc_msgSend(v196, sel_setAccessibilityText_, v195);

        sub_1AD066230(v193, type metadata accessor for LinkPresentation.AudioMetadata);
        sub_1AD63BDC8();
        sub_1AD63BDEC();
        sub_1AD63BDF8();
        sub_1AD63BDD4();
        v191 += v192;
        --v189;
        v5 = v239;
      }
      while (v189);
      swift_bridgeObjectRelease();
      v118 = (uint64_t)v227;
      v53 = v228;
      v49 = v240;
    }
    sub_1AD32F2CC(0, &qword_1EECDAF60);
    v188 = (int *)sub_1AD63B990();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v53, sel_setAudios_, v188);

  v201 = v220;
  sub_1ACFF64C0(v244 + v49[41], v220, &qword_1EECD1CC0);
  v202 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v202 - 8) + 48))(v201, 1, v202) == 1)
  {
    sub_1AD009758(v201, &qword_1EECD1CC0);
    v203 = 0;
  }
  else
  {
    sub_1AD3676EC();
    v203 = v204;
    sub_1AD066230(v201, type metadata accessor for LinkPresentation.SpecializationMetadata);
  }
  objc_msgSend(v53, sel_setSpecialization_, v203);

  v205 = v244 + v49[18];
  if ((*(_BYTE *)(v205 + 32) & 1) != 0)
  {
    v206 = 0;
  }
  else
  {
    v208 = *(double *)(v205 + 16);
    v207 = *(double *)(v205 + 24);
    v210 = *(double *)v205;
    v209 = *(double *)(v205 + 8);
    v206 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPPlatformColor), sel_init);
    objc_msgSend(v206, sel_setR_, v210);
    objc_msgSend(v206, sel_setG_, v209);
    objc_msgSend(v206, sel_setB_, v208);
    objc_msgSend(v206, sel_setA_, v207);
  }
  objc_msgSend(v53, sel_setThemeColor_, v206);

  sub_1AD00FF28(v244 + v49[42], (uint64_t)v262, &qword_1EECD20E0);
  sub_1AD00FF28((uint64_t)v262, (uint64_t)&v263, &qword_1EECD20E0);
  if (sub_1AD36EB50((uint64_t)&v263) == 1)
  {
    v211 = 0;
  }
  else
  {
    v259 = v268[3];
    v260 = v268[4];
    v254 = v266;
    v255 = v267;
    v256 = v268[0];
    v261 = v269;
    v257 = v268[1];
    v258 = v268[2];
    v250 = v263;
    v251 = v264[0];
    v252 = v264[1];
    v253 = v265;
    v211 = sub_1AD36DA28();
  }
  objc_msgSend(v53, sel_setAssociatedApplication_, v211);

  sub_1ACFF64C0(v244 + v49[43], v118, &qword_1EECD1CC8);
  v212 = type metadata accessor for CollaborationMetadata();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v212 - 8) + 48))(v118, 1, v212) == 1)
  {
    sub_1AD009758(v118, &qword_1EECD1CC8);
    v213 = 0;
  }
  else
  {
    v213 = sub_1AD4210D8();
    sub_1AD066230(v118, (uint64_t (*)(_QWORD))type metadata accessor for CollaborationMetadata);
  }
  objc_msgSend(v53, sel_setCollaborationMetadata_, v213);

  return v53;
}

uint64_t sub_1AD35F1B0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  id v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  id v11;
  uint64_t result;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  id v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[8];
  __int128 v32;
  __int128 v33;
  _BYTE v34[128];
  _BYTE v35[136];
  uint64_t v36;

  v5 = objc_msgSend(a1, sel_bundleIdentifier);
  if (v5)
  {
    v6 = v5;
    v7 = sub_1AD63B768();
    v9 = v8;

  }
  else
  {
    v7 = 0;
    v9 = 0;
  }
  v10 = objc_msgSend(a1, sel_icon);
  if (v10)
  {
    v11 = v10;
    sub_1AD35F3C0(v11, (uint64_t)v35);
    if (v2)
    {

      return swift_bridgeObjectRelease();
    }
    nullsub_1(v35);

  }
  else
  {
    sub_1AD36E9E4((uint64_t)&v30);
    sub_1AD00FF28((uint64_t)&v30, (uint64_t)v35, &qword_1EECD1D20);
  }
  sub_1AD00FF28((uint64_t)v35, (uint64_t)v34, &qword_1EECD1D20);
  v13 = objc_msgSend(a1, sel_caption);
  if (v13)
  {
    v14 = v13;
    v15 = v9;
    v16 = v7;
    v36 = sub_1AD63B768();
    v18 = v17;

  }
  else
  {
    v15 = v9;
    v16 = v7;
    v36 = 0;
    v18 = 0;
  }
  v19 = objc_msgSend(a1, sel_action);
  if (v19)
  {
    v20 = v19;
    v21 = sub_1AD63B768();
    v23 = v22;

  }
  else
  {
    v21 = 0;
    v23 = 0;
  }
  v24 = objc_msgSend(a1, sel_clipAction);

  *(_QWORD *)&v30 = v16;
  *((_QWORD *)&v30 + 1) = v15;
  result = sub_1AD00FF28((uint64_t)v34, (uint64_t)v31, &qword_1EECD1D20);
  *(_QWORD *)&v32 = v36;
  *((_QWORD *)&v32 + 1) = v18;
  *(_QWORD *)&v33 = v21;
  *((_QWORD *)&v33 + 1) = v23;
  *(_QWORD *)(a2 + 176) = v24;
  v25 = v31[4];
  *(_OWORD *)(a2 + 64) = v31[3];
  *(_OWORD *)(a2 + 80) = v25;
  v26 = v31[6];
  *(_OWORD *)(a2 + 96) = v31[5];
  *(_OWORD *)(a2 + 112) = v26;
  v27 = v31[0];
  *(_OWORD *)a2 = v30;
  *(_OWORD *)(a2 + 16) = v27;
  v28 = v31[2];
  *(_OWORD *)(a2 + 32) = v31[1];
  *(_OWORD *)(a2 + 48) = v28;
  v29 = v32;
  *(_OWORD *)(a2 + 128) = v31[7];
  *(_OWORD *)(a2 + 144) = v29;
  *(_OWORD *)(a2 + 160) = v33;
  return result;
}

void sub_1AD35F3C0(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  id v44;

  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;
    v38 = a1;
    v44 = objc_msgSend(v5, sel_index);
    v6 = objc_msgSend(v5, sel_MIMEType);
    if (v6)
    {
      v7 = v6;
      v8 = sub_1AD63B768();
      v42 = v9;
      v43 = v8;

    }
    else
    {
      v42 = 0;
      v43 = 0;
    }
    v13 = objc_msgSend(v5, sel_properties);
    v41 = objc_msgSend(v13, sel_type);

    v14 = objc_msgSend(v5, sel_properties);
    v15 = objc_msgSend(v14, sel_accessibilityText);

    if (v15)
    {
      v16 = sub_1AD63B768();
      v39 = v17;
      v40 = v16;

    }
    else
    {
      v39 = 0;
      v40 = 0;
    }
    v18 = objc_msgSend(v5, sel_properties);
    v19 = objc_msgSend(v18, sel_overlaidTextColor);

    if (v19)
    {
      objc_msgSend(v19, "r");
      v21 = v20;
      objc_msgSend(v19, "g");
      v23 = v22;
      objc_msgSend(v19, "b");
      v25 = v24;
      objc_msgSend(v19, "a");
      v27 = v26;

    }
    else
    {
      v21 = 0;
      v23 = 0;
      v25 = 0;
      v27 = 0;
    }
    v28 = objc_msgSend(v5, sel_properties);
    v29 = objc_msgSend(v28, sel_dominantColor);

    if (v29)
    {
      objc_msgSend(v29, (SEL)&selRef__needsWorkaroundForAppStoreTransformerCrash + 3);
      v31 = v30;
      objc_msgSend(v29, (SEL)&SandboxExtension.base_meths + 1);
      v33 = v32;
      objc_msgSend(v29, (SEL)&selRef_message + 4);
      v35 = v34;
      objc_msgSend(v29, (SEL)&selRef_hasSpineOnRight + 3);
      v37 = v36;

    }
    else
    {

      v31 = 0;
      v33 = 0;
      v35 = 0;
      v37 = 0;
    }
    *(_QWORD *)a2 = v44;
    *(_QWORD *)(a2 + 8) = v43;
    *(_QWORD *)(a2 + 16) = v42;
    *(_QWORD *)(a2 + 24) = v41;
    *(_QWORD *)(a2 + 32) = v40;
    *(_QWORD *)(a2 + 40) = v39;
    *(_QWORD *)(a2 + 48) = v21;
    *(_QWORD *)(a2 + 56) = v23;
    *(_QWORD *)(a2 + 64) = v25;
    *(_QWORD *)(a2 + 72) = v27;
    *(_BYTE *)(a2 + 80) = v19 == 0;
    *(_QWORD *)(a2 + 88) = v31;
    *(_QWORD *)(a2 + 96) = v33;
    *(_QWORD *)(a2 + 104) = v35;
    *(_QWORD *)(a2 + 112) = v37;
    *(_BYTE *)(a2 + 120) = v29 == 0;
  }
  else
  {
    v10 = sub_1AD63BD8C();
    swift_allocError();
    v12 = v11;
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v12, *MEMORY[0x1E0DEC458], v10);
    swift_willThrow();

  }
}

uint64_t sub_1AD35F764@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  id v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  _BYTE v26[12];
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v26[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for LinkPresentation.IconMetadata(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (unsigned int *)&v26[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = a2 + *(int *)(v8 + 20);
  v12 = sub_1AD63AF28();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v14 = 1;
  v28 = v11;
  v13(v11, 1, 1, v12);
  v15 = *(int *)(v7 + 24);
  v29 = a2;
  v16 = (_QWORD *)(a2 + v15);
  *v16 = 0;
  v16[1] = 0;
  v27 = objc_msgSend(a1, sel_version);
  v17 = objc_msgSend(a1, "URL");
  if (v17)
  {
    v18 = v17;
    sub_1AD63AED4();

    v14 = 0;
  }
  v13((uint64_t)v6, v14, 1, v12);
  v19 = objc_msgSend(a1, sel_accessibilityText);
  if (v19)
  {
    v20 = v19;
    v21 = sub_1AD63B768();
    v23 = v22;

  }
  else
  {

    v21 = 0;
    v23 = 0;
  }
  *v10 = v27;
  sub_1AD00FF28((uint64_t)v6, (uint64_t)v10 + *(int *)(v7 + 20), &qword_1ED2E1A40);
  v24 = (uint64_t *)((char *)v10 + *(int *)(v7 + 24));
  *v24 = v21;
  v24[1] = v23;
  sub_1AD009758(v28, &qword_1ED2E1A40);
  swift_bridgeObjectRelease();
  return sub_1AD2A5214((uint64_t)v10, v29, type metadata accessor for LinkPresentation.IconMetadata);
}

void sub_1AD35F960(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  objc_opt_self();
  v4 = swift_dynamicCastObjCClass();
  if (v4)
  {
    v5 = (void *)v4;
    v6 = a1;
    v7 = objc_msgSend(v5, sel_index);
    v8 = objc_msgSend(v5, sel_MIMEType);
    if (v8)
    {
      v9 = v8;
      v10 = sub_1AD63B768();
      v12 = v11;

    }
    else
    {
      v10 = 0;
      v12 = 0;
    }
    v16 = objc_msgSend(v5, sel_properties);
    v17 = objc_msgSend(v16, sel_accessibilityText);

    v18 = sub_1AD63B768();
    v20 = v19;

    *a2 = v7;
    a2[1] = v10;
    a2[2] = v12;
    a2[3] = v18;
    a2[4] = v20;
  }
  else
  {
    v13 = sub_1AD63BD8C();
    swift_allocError();
    v15 = v14;
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v13 - 8) + 104))(v15, *MEMORY[0x1E0DEC458], v13);
    swift_willThrow();

  }
}

uint64_t sub_1AD35FB00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  id v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  unsigned __int8 v25;
  id v26;
  unsigned __int8 v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int *v33;
  uint64_t result;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v38 - v8;
  objc_opt_self();
  v10 = swift_dynamicCastObjCClass();
  if (v10)
  {
    v11 = (void *)v10;
    v12 = swift_allocObject();
    *(_QWORD *)(v12 + 16) = objc_msgSend(v11, sel_index);
  }
  else
  {
    v12 = 0;
  }
  v13 = objc_msgSend(a1, sel_youTubeURL);
  if (v13)
  {
    v14 = v13;
    sub_1AD63AED4();

    v15 = sub_1AD63AF28();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v9, 0, 1, v15);
  }
  else
  {
    v16 = sub_1AD63AF28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(v9, 1, 1, v16);
  }
  v17 = objc_msgSend(a1, sel_streamingURL);
  if (v17)
  {
    v18 = v17;
    sub_1AD63AED4();

    v19 = sub_1AD63AF28();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v7, 0, 1, v19);
  }
  else
  {
    v20 = sub_1AD63AF28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v7, 1, 1, v20);
  }
  v21 = objc_msgSend(a1, sel_MIMEType);
  v41 = v7;
  if (v21)
  {
    v22 = v21;
    v23 = sub_1AD63B768();
    v39 = v24;
    v40 = v23;

  }
  else
  {
    v39 = 0;
    v40 = 0;
  }
  v25 = objc_msgSend(a1, sel_hasAudio);
  swift_retain();
  v26 = objc_msgSend(a1, sel_properties);
  v27 = objc_msgSend(v26, sel_hasAudio);

  v28 = objc_msgSend(a1, sel_properties);
  v29 = objc_msgSend(v28, sel_accessibilityText);

  v30 = sub_1AD63B768();
  v32 = v31;

  swift_release();
  sub_1AD00FF28((uint64_t)v9, a2, &qword_1ED2E1A40);
  v33 = (int *)type metadata accessor for LinkPresentation.Video(0);
  result = sub_1AD00FF28((uint64_t)v41, a2 + v33[5], &qword_1ED2E1A40);
  v35 = (uint64_t *)(a2 + v33[6]);
  v36 = v39;
  *v35 = v40;
  v35[1] = v36;
  *(_BYTE *)(a2 + v33[7]) = v25;
  *(_QWORD *)(a2 + v33[8]) = v12;
  v37 = a2 + v33[9];
  *(_BYTE *)v37 = v27;
  *(_QWORD *)(v37 + 8) = v30;
  *(_QWORD *)(v37 + 16) = v32;
  return result;
}

uint64_t sub_1AD35FE10@<X0>(void *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  _QWORD *v36;
  uint64_t *v37;
  uint64_t v39;
  unsigned int v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = a2;
  v9 = (int *)a2(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (unsigned int *)((char *)&v39 - v11);
  v13 = a3 + *(int *)(v10 + 20);
  v14 = sub_1AD63AF28();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v16 = 1;
  v42 = v13;
  v15(v13, 1, 1, v14);
  v17 = (_QWORD *)(a3 + v9[6]);
  *v17 = 0;
  v17[1] = 0;
  v18 = v9[8];
  v43 = a3;
  v19 = (_QWORD *)(a3 + v18);
  *v19 = 0;
  v19[1] = 0;
  v41 = v19;
  v40 = objc_msgSend(a1, sel_version);
  v20 = objc_msgSend(a1, "URL");
  if (v20)
  {
    v21 = v20;
    sub_1AD63AED4();

    v16 = 0;
  }
  v15((uint64_t)v8, v16, 1, v14);
  v22 = objc_msgSend(a1, sel_type);
  if (v22)
  {
    v23 = v22;
    v39 = sub_1AD63B768();
    v25 = v24;

  }
  else
  {
    v39 = 0;
    v25 = 0;
  }
  objc_msgSend(a1, sel_size, v39);
  v27 = v26;
  v29 = v28;
  v30 = objc_msgSend(a1, sel_accessibilityText);
  if (v30)
  {
    v31 = v30;
    v32 = sub_1AD63B768();
    v34 = v33;

  }
  else
  {

    v32 = 0;
    v34 = 0;
  }
  *v12 = v40;
  sub_1AD00FF28((uint64_t)v8, (uint64_t)v12 + v9[5], &qword_1ED2E1A40);
  v35 = (uint64_t *)((char *)v12 + v9[6]);
  *v35 = v39;
  v35[1] = v25;
  v36 = (_QWORD *)((char *)v12 + v9[7]);
  *v36 = v27;
  v36[1] = v29;
  v37 = (uint64_t *)((char *)v12 + v9[8]);
  *v37 = v32;
  v37[1] = v34;
  sub_1AD009758(v42, &qword_1ED2E1A40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1AD2A5214((uint64_t)v12, v43, v44);
}

uint64_t sub_1AD36009C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t *v17;
  uint64_t v18;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = objc_msgSend(a1, sel_streamingURL);
  if (v7)
  {
    v8 = v7;
    sub_1AD63AED4();

    v9 = sub_1AD63AF28();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v6, 0, 1, v9);
  }
  else
  {
    v10 = sub_1AD63AF28();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v6, 1, 1, v10);
  }
  v11 = objc_msgSend(a1, sel_MIMEType);
  if (v11)
  {
    v12 = v11;
    v13 = sub_1AD63B768();
    v15 = v14;

  }
  else
  {

    v13 = 0;
    v15 = 0;
  }
  sub_1AD00FF28((uint64_t)v6, a2, &qword_1ED2E1A40);
  result = type metadata accessor for LinkPresentation.Audio(0);
  v17 = (uint64_t *)(a2 + *(int *)(result + 20));
  *v17 = v13;
  v17[1] = v15;
  return result;
}

uint64_t sub_1AD3601F0@<X0>(void *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  id v20;
  void *v21;
  id v22;
  void *v23;
  uint64_t v24;
  uint64_t v25;
  id v26;
  void *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v34;
  unsigned int v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(_QWORD);

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = a2;
  v9 = (int *)a2(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (unsigned int *)((char *)&v34 - v11);
  v13 = a3 + *(int *)(v10 + 20);
  v14 = sub_1AD63AF28();
  v15 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56);
  v16 = 1;
  v37 = v13;
  v15(v13, 1, 1, v14);
  v17 = (_QWORD *)(a3 + v9[6]);
  *v17 = 0;
  v17[1] = 0;
  v18 = v9[7];
  v38 = a3;
  v19 = (_QWORD *)(a3 + v18);
  *v19 = 0;
  v19[1] = 0;
  v36 = v19;
  v35 = objc_msgSend(a1, sel_version);
  v20 = objc_msgSend(a1, "URL");
  if (v20)
  {
    v21 = v20;
    sub_1AD63AED4();

    v16 = 0;
  }
  v15((uint64_t)v8, v16, 1, v14);
  v22 = objc_msgSend(a1, sel_type);
  if (v22)
  {
    v23 = v22;
    v34 = sub_1AD63B768();
    v25 = v24;

  }
  else
  {
    v34 = 0;
    v25 = 0;
  }
  v26 = objc_msgSend(a1, sel_accessibilityText, v34);
  if (v26)
  {
    v27 = v26;
    v28 = sub_1AD63B768();
    v30 = v29;

  }
  else
  {

    v28 = 0;
    v30 = 0;
  }
  *v12 = v35;
  sub_1AD00FF28((uint64_t)v8, (uint64_t)v12 + v9[5], &qword_1ED2E1A40);
  v31 = (uint64_t *)((char *)v12 + v9[6]);
  *v31 = v34;
  v31[1] = v25;
  v32 = (uint64_t *)((char *)v12 + v9[7]);
  *v32 = v28;
  v32[1] = v30;
  sub_1AD009758(v37, &qword_1ED2E1A40);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1AD2A5214((uint64_t)v12, v38, v39);
}

void sub_1AD360450(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  _QWORD *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  _QWORD *v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  void *v151;
  _OWORD *v152;
  void *v153;
  id v154;
  void *v155;
  uint64_t v156;
  NSObject *v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  NSObject *v163;
  uint64_t v164;
  void *v165;
  _OWORD *v166;
  id v167;
  void *v168;
  _OWORD *v169;
  uint64_t v170;
  uint64_t v171;
  id v172;
  void *v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  id v177;
  void *v178;
  uint64_t v179;
  _OWORD *v180;
  id v181;
  void *v182;
  uint64_t v183;
  id v184;
  void *v185;
  uint64_t v186;
  uint64_t v187;
  id v188;
  void *v189;
  uint64_t v190;
  uint64_t v191;
  id v192;
  id v193;
  id v194;
  uint64_t v195;
  void *v196;
  _OWORD *v197;
  id v198;
  void *v199;
  uint64_t v200;
  _QWORD *v201;
  _QWORD *v202;
  id v203;
  void *v204;
  NSObject *v205;
  uint64_t v206;
  uint64_t v207;
  id v208;
  void *v209;
  _QWORD *v210;
  uint64_t v211;
  id v212;
  void *v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  id v217;
  void *v218;
  uint64_t v219;
  uint64_t v220;
  id v221;
  id v222;
  id v223;
  uint64_t v224;
  void *v225;
  _OWORD *v226;
  id v227;
  void *v228;
  NSObject *v229;
  _QWORD *v230;
  _QWORD *v231;
  id v232;
  void *v233;
  uint64_t v234;
  _OWORD *v235;
  _OWORD *v236;
  id v237;
  void *v238;
  uint64_t v239;
  uint64_t v240;
  id v241;
  void *v242;
  uint64_t v243;
  id v244;
  void *v245;
  NSObject *v246;
  id v247;
  id v248;
  uint64_t *v249;
  id v250;
  void *v251;
  uint64_t v252;
  uint64_t v253;
  _QWORD *v254;
  uint64_t v255;
  id v256;
  id v257;
  id v258;
  uint64_t v259;
  void *v260;
  _OWORD *v261;
  id v262;
  void *v263;
  uint64_t v264;
  uint64_t v265;
  id v266;
  void *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  id v271;
  uint64_t *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  id v276;
  void *v277;
  _OWORD *v278;
  id v279;
  void *v280;
  uint64_t v281;
  uint64_t v282;
  id v283;
  id v284;
  id v285;
  uint64_t v286;
  void *v287;
  _OWORD *v288;
  id v289;
  void *v290;
  NSObject *v291;
  _QWORD *v292;
  _QWORD *v293;
  id v294;
  void *v295;
  _OWORD *v296;
  _OWORD *v297;
  _QWORD *v298;
  id v299;
  void *v300;
  uint64_t v301;
  id v302;
  void *v303;
  uint64_t v304;
  id v305;
  void *v306;
  uint64_t v307;
  id v308;
  void *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  id v313;
  id v314;
  void *v315;
  id v316;
  uint64_t v317;
  uint64_t v318;
  void *v319;
  _OWORD *v320;
  id v321;
  void *v322;
  NSObject *v323;
  _QWORD *v324;
  _QWORD *v325;
  id v326;
  void *v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  id v331;
  void *v332;
  _OWORD *v333;
  id v334;
  void *v335;
  uint64_t v336;
  uint64_t v337;
  id v338;
  id v339;
  id v340;
  uint64_t v341;
  void *v342;
  _OWORD *v343;
  id v344;
  void *v345;
  _OWORD *v346;
  uint64_t v347;
  uint64_t v348;
  id v349;
  void *v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  id v354;
  void *v355;
  uint64_t v356;
  _OWORD *v357;
  _OWORD *v358;
  id v359;
  void *v360;
  uint64_t v361;
  uint64_t v362;
  id v363;
  void *v364;
  uint64_t v365;
  uint64_t v366;
  id v367;
  void *v368;
  uint64_t v369;
  uint64_t v370;
  id v371;
  id v372;
  uint64_t v373;
  id v374;
  void *v375;
  unint64_t v376;
  id v377;
  uint64_t v378;
  uint64_t v379;
  void *v380;
  _OWORD *v381;
  id v382;
  void *v383;
  NSObject *v384;
  _OWORD *v385;
  _OWORD *v386;
  id v387;
  void *v388;
  NSObject *v389;
  uint64_t v390;
  uint64_t v391;
  id v392;
  void *v393;
  uint64_t v394;
  uint64_t v395;
  id v396;
  void *v397;
  uint64_t v398;
  uint64_t v399;
  id v400;
  id v401;
  id v402;
  id v403;
  uint64_t v404;
  id v405;
  id v406;
  _QWORD *v407;
  id v408;
  id v409;
  uint64_t v410;
  void *v411;
  _OWORD *v412;
  id v413;
  void *v414;
  uint64_t v415;
  uint64_t v416;
  id v417;
  void *v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  char v422;
  id v423;
  id v424;
  void *v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  id v429;
  void *v430;
  uint64_t v431;
  uint64_t v432;
  id v433;
  void *v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  id v438;
  id v439;
  id v440;
  id v441;
  id v442;
  id v443;
  uint64_t v444;
  void *v445;
  id v446;
  id v447;
  void *v448;
  uint64_t v449;
  uint64_t v450;
  id v451;
  void *v452;
  _OWORD *v453;
  id v454;
  void *v455;
  uint64_t v456;
  id v457;
  void *v458;
  uint64_t v459;
  uint64_t v460;
  id v461;
  void *v462;
  uint64_t v463;
  uint64_t v464;
  id v465;
  void *v466;
  uint64_t v467;
  uint64_t v468;
  id v469;
  void *v470;
  uint64_t v471;
  uint64_t v472;
  uint64_t v473;
  id v474;
  id v475;
  id v476;
  id v477;
  uint64_t v478;
  void *v479;
  id v480;
  void *v481;
  _OWORD *v482;
  id v483;
  void *v484;
  uint64_t v485;
  uint64_t v486;
  uint64_t v487;
  id v488;
  id v489;
  void *v490;
  uint64_t v491;
  id v492;
  void *v493;
  uint64_t v494;
  uint64_t v495;
  id v496;
  void *v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  id v501;
  id v502;
  id v503;
  id v504;
  uint64_t v505;
  void *v506;
  id v507;
  void *v508;
  uint64_t v509;
  uint64_t v510;
  id v511;
  void *v512;
  uint64_t v513;
  uint64_t v514;
  id v515;
  id v516;
  void *v517;
  uint64_t v518;
  id v519;
  void *v520;
  uint64_t v521;
  uint64_t v522;
  id v523;
  void *v524;
  uint64_t v525;
  uint64_t v526;
  id v527;
  void *v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  id v532;
  id v533;
  id v534;
  id v535;
  uint64_t v536;
  void *v537;
  id v538;
  id v539;
  void *v540;
  uint64_t v541;
  uint64_t v542;
  id v543;
  void *v544;
  uint64_t v545;
  uint64_t v546;
  id v547;
  id v548;
  id v549;
  void *v550;
  uint64_t v551;
  uint64_t v552;
  id v553;
  void *v554;
  uint64_t v555;
  uint64_t v556;
  uint64_t v557;
  id v558;
  id v559;
  id v560;
  uint64_t v561;
  void *v562;
  id v563;
  void *v564;
  uint64_t v565;
  uint64_t v566;
  id v567;
  void *v568;
  uint64_t v569;
  uint64_t v570;
  uint64_t v571;
  id v572;
  id v573;
  void *v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  id v578;
  id v579;
  id v580;
  id v581;
  uint64_t v582;
  void *v583;
  id v584;
  void *v585;
  uint64_t v586;
  uint64_t v587;
  id v588;
  void *v589;
  uint64_t v590;
  uint64_t v591;
  id v592;
  id v593;
  void *v594;
  uint64_t v595;
  uint64_t v596;
  id v597;
  void *v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  id v602;
  id v603;
  id v604;
  id v605;
  void *v606;
  uint64_t v607;
  id v608;
  void *v609;
  uint64_t v610;
  uint64_t v611;
  id v612;
  void *v613;
  uint64_t v614;
  uint64_t v615;
  id v616;
  void *v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  id v621;
  id v622;
  id v623;
  uint64_t v624;
  void *v625;
  id v626;
  void *v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t *v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  unint64_t v635;
  unint64_t v636;
  unint64_t v637;
  uint64_t v638;
  _QWORD *v639;
  uint64_t v640;
  uint64_t v641;
  unint64_t v642;
  uint64_t v643;
  uint64_t v644;
  void *v645;
  NSObject *v646;
  id v647;
  uint64_t v648;
  unint64_t v649;
  unint64_t v650;
  void *v651;
  id v652;
  uint64_t v653;
  id v654;
  uint64_t v655;
  _QWORD *v656;
  uint64_t v657;
  uint64_t v658;
  id v659;
  void *v660;
  uint64_t v661;
  uint64_t v662;
  _QWORD *v663;
  uint64_t v664;
  void *v665;
  id v666;
  id v667;
  void *v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  id v672;
  void *v673;
  uint64_t v674;
  uint64_t v675;
  uint64_t v676;
  id v677;
  void *v678;
  uint64_t v679;
  uint64_t v680;
  uint64_t v681;
  id v682;
  id v683;
  _QWORD *v684;
  id v685;
  id v686;
  _QWORD *v687;
  id v688;
  void *v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  id v693;
  void *v694;
  uint64_t v695;
  uint64_t v696;
  uint64_t v697;
  id v698;
  id v699;
  id v700;
  __int128 v701;
  __int128 v702;
  __int128 v703;
  __int128 v704;
  __int128 v705;
  uint64_t v706;
  void *v707;
  id v708;
  id v709;
  void *v710;
  _OWORD *v711;
  _QWORD *v712;
  id v713;
  id v714;
  id v715;
  id v716;
  id v717;
  uint64_t v718;
  void *v719;
  id v720;
  id v721;
  void *v722;
  uint64_t v723;
  uint64_t v724;
  uint64_t v725;
  id v726;
  void *v727;
  uint64_t v728;
  uint64_t v729;
  int v730;
  unsigned int v731;
  unsigned int v732;
  id v733;
  id v734;
  id v735;
  id v736;
  void *v737;
  uint64_t v738;
  uint64_t v739;
  id v740;
  id v741;
  void *v742;
  uint64_t v743;
  uint64_t v744;
  id v745;
  void *v746;
  uint64_t v747;
  uint64_t v748;
  uint64_t v749;
  int v750;
  id v751;
  id v752;
  id v753;
  void *v754;
  uint64_t v755;
  id v756;
  id v757;
  id v758;
  void *v759;
  id v760;
  void *v761;
  _QWORD *v762;
  id v763;
  id v764;
  id v765;
  void *v766;
  _QWORD *v767;
  id v768;
  void *v769;
  uint64_t v770;
  id v771;
  id v772;
  void *v773;
  uint64_t v774;
  id v775;
  void *v776;
  uint64_t v777;
  uint64_t v778;
  id v779;
  id v780;
  id v781;
  uint64_t v782;
  void *v783;
  id v784;
  id v785;
  void *v786;
  uint64_t v787;
  uint64_t v788;
  uint64_t v789;
  id v790;
  id v791;
  id v792;
  id v793;
  id v794;
  id v795;
  int v796;
  id v797;
  __int128 v798;
  __int128 v799;
  __int128 v800;
  __int128 v801;
  id v802;
  id v803;
  void *v804;
  uint64_t v805;
  uint64_t v806;
  uint64_t v807;
  id v808;
  void *v809;
  unint64_t v810;
  id v811;
  uint64_t v812;
  char v813;
  id v814;
  id v815;
  id v816;
  id v817;
  id v818;
  id v819;
  uint64_t v820;
  void *v821;
  id v822;
  id v823;
  void *v824;
  _OWORD *v825;
  id v826;
  void *v827;
  uint64_t v828;
  uint64_t v829;
  id v830;
  void *v831;
  uint64_t v832;
  uint64_t v833;
  id v834;
  id v835;
  id v836;
  uint64_t v837;
  id v838;
  void *v839;
  uint64_t v840;
  uint64_t v841;
  uint64_t v842;
  id v843;
  void *v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  id v848;
  id v849;
  void *v850;
  uint64_t v851;
  uint64_t v852;
  uint64_t v853;
  id v854;
  void *v855;
  uint64_t v856;
  uint64_t v857;
  uint64_t v858;
  id v859;
  id v860;
  id v861;
  __int128 v862;
  __int128 v863;
  __int128 v864;
  __int128 v865;
  __int128 v866;
  uint64_t v867;
  void *v868;
  id v869;
  id v870;
  void *v871;
  uint64_t v872;
  uint64_t v873;
  id v874;
  void *v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  id v879;
  id v880;
  id v881;
  __int128 v882;
  __int128 v883;
  __int128 v884;
  __int128 v885;
  uint64_t v886;
  void *v887;
  id v888;
  id v889;
  void *v890;
  id v891;
  uint64_t v892;
  uint64_t v893;
  id v894;
  id v895;
  id v896;
  id v897;
  id v898;
  id v899;
  void *v900;
  uint64_t v901;
  uint64_t v902;
  uint64_t v903;
  void *v904;
  id v905;
  id v906;
  void *v907;
  uint64_t v908;
  uint64_t v909;
  uint64_t v910;
  id v911;
  uint64_t v912;
  id v913;
  void *v914;
  uint64_t v915;
  uint64_t v916;
  uint64_t v917;
  id v918;
  void *v919;
  uint64_t v920;
  uint64_t v921;
  uint64_t v922;
  id v923;
  void *v924;
  id v925;
  void *v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  id v930;
  void *v931;
  uint64_t v932;
  void *v933;
  void *v934;
  id v935;
  __int128 v936;
  uint64_t v937;
  void *v938;
  id v939;
  id v940;
  void *v941;
  uint64_t v942;
  uint64_t v943;
  uint64_t v944;
  id v945;
  void *v946;
  id v947;
  void *v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  id v952;
  void *v953;
  uint64_t v954;
  uint64_t v955;
  uint64_t v956;
  id v957;
  void *v958;
  uint64_t v959;
  uint64_t v960;
  uint64_t v961;
  id v962;
  id v963;
  id v964;
  void *v965;
  id v966;
  void *v967;
  uint64_t v968;
  uint64_t v969;
  uint64_t v970;
  uint64_t v971;
  void *v972;
  id v973;
  id v974;
  void *v975;
  uint64_t v976;
  uint64_t v977;
  uint64_t v978;
  id v979;
  uint64_t v980;
  void *v981;
  id v982;
  id v983;
  void *v984;
  uint64_t v985;
  uint64_t v986;
  id v987;
  void *v988;
  uint64_t v989;
  void *v990;
  void *v991;
  id v992;
  __int128 v993;
  int v994;
  NSObject *v995;
  uint64_t v996;
  uint64_t v997;
  uint64_t v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint8_t *v1003;
  uint64_t v1004;
  id v1005;
  id v1006;
  void *v1007;
  uint64_t v1008;
  uint64_t v1009;
  id v1010;
  void *v1011;
  uint64_t v1012;
  uint64_t v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  id v1017;
  id v1018;
  id v1019;
  id v1020;
  id v1021;
  __int128 v1022;
  __int128 v1023;
  __int128 v1024;
  __int128 v1025;
  __int128 v1026;
  __int128 v1027;
  __int128 v1028;
  __int128 v1029;
  uint64_t v1030;
  uint64_t v1031;
  _QWORD *v1032;
  _QWORD *v1033;
  _QWORD *v1034;
  uint64_t v1035;
  _OWORD *v1036;
  char *v1037;
  char *v1038;
  _QWORD *v1039;
  char *v1040;
  _OWORD *v1041;
  _OWORD *v1042;
  char *v1043;
  _OWORD *v1044;
  _OWORD *v1045;
  _OWORD *v1046;
  _QWORD *v1047;
  char *v1048;
  _OWORD *v1049;
  char *v1050;
  _QWORD *v1051;
  _OWORD *v1052;
  _QWORD *v1053;
  char *v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  uint64_t v1058;
  uint64_t v1059;
  uint64_t v1060;
  char *v1061;
  uint64_t v1062;
  uint64_t v1063;
  uint64_t v1064;
  _QWORD *v1065;
  uint64_t v1066;
  _QWORD *v1067;
  uint64_t v1068;
  _QWORD *v1069;
  uint64_t v1070;
  _QWORD *v1071;
  uint64_t v1072;
  uint64_t v1073;
  char *v1074;
  _QWORD *v1075;
  uint64_t v1076;
  char *v1077;
  _QWORD *v1078;
  uint64_t v1079;
  _QWORD *v1080;
  uint64_t v1081;
  _QWORD *v1082;
  uint64_t v1083;
  char *v1084;
  uint64_t v1085;
  uint64_t v1086;
  uint64_t v1087;
  uint64_t v1088;
  uint64_t v1089;
  char *v1090;
  uint64_t *v1091;
  uint64_t v1092;
  uint64_t v1093;
  uint64_t v1094;
  _QWORD *v1095;
  uint64_t v1096;
  uint64_t v1097;
  uint64_t v1098;
  _QWORD *v1099;
  _QWORD *v1100;
  uint64_t *v1101;
  uint64_t v1102;
  _BYTE *v1103;
  uint64_t v1104;
  NSObject *v1105;
  _OWORD *v1106;
  id v1107;
  _BYTE v1108[128];
  _BYTE v1109[128];
  _BYTE v1110[128];
  _BYTE v1111[128];
  uint64_t v1112[16];
  _BYTE v1113[128];
  _BYTE v1114[128];
  uint64_t v1115[16];
  _BYTE v1116[128];
  _BYTE v1117[136];
  _OWORD v1118[8];
  uint64_t v1119[16];
  _BYTE v1120[136];
  _OWORD v1121[8];
  _OWORD v1122[3];
  uint64_t v1123;
  char v1124;
  __int128 v1125[3];
  uint64_t v1126;
  char v1127;
  _OWORD v1128[8];
  __int128 v1129;
  _BYTE v1130[112];
  _OWORD v1131[68];
  _BYTE v1132[128];
  uint64_t v1133[16];
  _BYTE v1134[144];
  Swift::String_optional v1135;
  Swift::String_optional v1136;

  v1107 = v1;
  v1106 = (_OWORD *)MEMORY[0x1E0C80A78](a1);
  v1094 = v2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB0C0);
  MEMORY[0x1E0C80A78](v3);
  v1063 = (uint64_t)&v1032 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v1062 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
  v1060 = *(_QWORD *)(v1062 - 8);
  MEMORY[0x1E0C80A78](v1062);
  v1064 = (uint64_t)&v1032 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for LinkPresentation.EncodedToken(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v1073 = (uint64_t)&v1032 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v1071 = (_QWORD **)((char *)&v1032 - v9);
  v1097 = sub_1AD63AF28();
  v1096 = *(_QWORD *)(v1097 - 8);
  MEMORY[0x1E0C80A78](v1097);
  v1074 = (char *)&v1032 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for CloudKitSharingToken();
  v12 = MEMORY[0x1E0C80A78](v11);
  v1072 = (uint64_t)&v1032 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v1077 = (char *)&v1032 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v16 = MEMORY[0x1E0C80A78](v15);
  v1056 = (uint64_t)&v1032 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v1055 = (uint64_t)&v1032 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v1058 = (uint64_t)&v1032 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v1059 = (uint64_t)&v1032 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v1057 = (uint64_t)&v1032 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v1035 = (uint64_t)&v1032 - v27;
  MEMORY[0x1E0C80A78](v26);
  v1086 = (uint64_t)&v1032 - v28;
  v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
  MEMORY[0x1E0C80A78](v29);
  v1087 = (uint64_t)&v1032 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v32 = MEMORY[0x1E0C80A78](v31);
  v1084 = (char *)&v1032 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = MEMORY[0x1E0C80A78](v32);
  v1090 = (char *)&v1032 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v1089 = (uint64_t)&v1032 - v37;
  v38 = MEMORY[0x1E0C80A78](v36);
  v1105 = ((char *)&v1032 - v39);
  MEMORY[0x1E0C80A78](v38);
  v1099 = (_QWORD **)((char *)&v1032 - v40);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
  v42 = MEMORY[0x1E0C80A78](v41);
  v1066 = (uint64_t)&v1032 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x1E0C80A78](v42);
  v1068 = (uint64_t)&v1032 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v1070 = (uint64_t)&v1032 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v1076 = (uint64_t)&v1032 - v49;
  v50 = MEMORY[0x1E0C80A78](v48);
  v1079 = (uint64_t)&v1032 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v1081 = (uint64_t)&v1032 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v1083 = (uint64_t)&v1032 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v1085 = (uint64_t)&v1032 - v57;
  v58 = MEMORY[0x1E0C80A78](v56);
  v1104 = (uint64_t)&v1032 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  v1103 = (char *)&v1032 - v61;
  v62 = MEMORY[0x1E0C80A78](v60);
  v1088 = (uint64_t)&v1032 - v63;
  v64 = MEMORY[0x1E0C80A78](v62);
  v1102 = (uint64_t)&v1032 - v65;
  v66 = MEMORY[0x1E0C80A78](v64);
  v1101 = (uint64_t *)((char *)&v1032 - v67);
  v68 = MEMORY[0x1E0C80A78](v66);
  v1098 = (uint64_t)&v1032 - v69;
  MEMORY[0x1E0C80A78](v68);
  v1100 = (_QWORD **)((char *)&v1032 - v70);
  v71 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
  v1092 = *(_QWORD *)(v71 - 8);
  v1093 = v71;
  v72 = MEMORY[0x1E0C80A78](v71);
  v1052 = (_OWORD *)((char *)&v1032 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0));
  v74 = MEMORY[0x1E0C80A78](v72);
  v1049 = (_OWORD *)((char *)&v1032 - v75);
  v76 = MEMORY[0x1E0C80A78](v74);
  v1044 = (_OWORD *)((char *)&v1032 - v77);
  v78 = MEMORY[0x1E0C80A78](v76);
  v1046 = (_OWORD *)((char *)&v1032 - v79);
  v80 = MEMORY[0x1E0C80A78](v78);
  v1051 = (_QWORD **)((char *)&v1032 - v81);
  v82 = MEMORY[0x1E0C80A78](v80);
  v1042 = (_OWORD *)((char *)&v1032 - v83);
  v84 = MEMORY[0x1E0C80A78](v82);
  v1045 = (_OWORD *)((char *)&v1032 - v85);
  v86 = MEMORY[0x1E0C80A78](v84);
  v1041 = (_OWORD *)((char *)&v1032 - v87);
  v88 = MEMORY[0x1E0C80A78](v86);
  v1053 = (_QWORD **)((char *)&v1032 - v89);
  v90 = MEMORY[0x1E0C80A78](v88);
  v1043 = (char *)&v1032 - v91;
  v92 = MEMORY[0x1E0C80A78](v90);
  v1048 = (char *)&v1032 - v93;
  v94 = MEMORY[0x1E0C80A78](v92);
  v1036 = (_OWORD *)((char *)&v1032 - v95);
  v96 = MEMORY[0x1E0C80A78](v94);
  v1047 = (_QWORD **)((char *)&v1032 - v97);
  v98 = MEMORY[0x1E0C80A78](v96);
  v1040 = (char *)&v1032 - v99;
  v100 = MEMORY[0x1E0C80A78](v98);
  v1050 = (char *)&v1032 - v101;
  v102 = MEMORY[0x1E0C80A78](v100);
  v1061 = (char *)&v1032 - v103;
  v104 = MEMORY[0x1E0C80A78](v102);
  v1038 = (char *)&v1032 - v105;
  v106 = MEMORY[0x1E0C80A78](v104);
  v1037 = (char *)&v1032 - v107;
  v108 = MEMORY[0x1E0C80A78](v106);
  v1054 = (char *)&v1032 - v109;
  v110 = MEMORY[0x1E0C80A78](v108);
  v1039 = (_QWORD **)((char *)&v1032 - v111);
  v112 = MEMORY[0x1E0C80A78](v110);
  v1065 = (_QWORD **)((char *)&v1032 - v113);
  v114 = MEMORY[0x1E0C80A78](v112);
  v1067 = (_QWORD **)((char *)&v1032 - v115);
  v116 = MEMORY[0x1E0C80A78](v114);
  v1069 = (_QWORD **)((char *)&v1032 - v117);
  v118 = MEMORY[0x1E0C80A78](v116);
  v1075 = (_QWORD **)((char *)&v1032 - v119);
  v120 = MEMORY[0x1E0C80A78](v118);
  v1078 = (_QWORD **)((char *)&v1032 - v121);
  v122 = MEMORY[0x1E0C80A78](v120);
  v1080 = (_QWORD **)((char *)&v1032 - v123);
  v124 = MEMORY[0x1E0C80A78](v122);
  v1082 = (_QWORD **)((char *)&v1032 - v125);
  v126 = MEMORY[0x1E0C80A78](v124);
  v128 = (_QWORD **)((char *)&v1032 - v127);
  v129 = MEMORY[0x1E0C80A78](v126);
  v131 = (char *)&v1032 - v130;
  v132 = MEMORY[0x1E0C80A78](v129);
  v134 = (_QWORD **)((char *)&v1032 - v133);
  v135 = MEMORY[0x1E0C80A78](v132);
  v137 = (_QWORD **)((char *)&v1032 - v136);
  v138 = MEMORY[0x1E0C80A78](v135);
  v140 = (_QWORD **)((char *)&v1032 - v139);
  v141 = MEMORY[0x1E0C80A78](v138);
  v143 = (char *)&v1032 - v142;
  v144 = MEMORY[0x1E0C80A78](v141);
  v146 = (_QWORD **)((char *)&v1032 - v145);
  v147 = MEMORY[0x1E0C80A78](v144);
  v1095 = (_QWORD **)((char *)&v1032 - v148);
  MEMORY[0x1E0C80A78](v147);
  v1091 = (uint64_t *)((char *)&v1032 - v149);
  objc_opt_self();
  v150 = swift_dynamicCastObjCClass();
  if (v150)
  {
    v151 = (void *)v150;
    v152 = v1106;
    v153 = v151;
    v154 = objc_msgSend(v151, sel_storeFrontIdentifier);
    if (v154)
    {
      v155 = v154;
      v156 = sub_1AD63B768();
      v1105 = v157;

    }
    else
    {
      v156 = 0;
      v1105 = 0;
    }
    v1103 = (_BYTE *)v156;
    v172 = objc_msgSend(v151, sel_storeIdentifier);
    if (v172)
    {
      v173 = v172;
      v174 = sub_1AD63B768();
      v176 = v175;

    }
    else
    {
      v174 = 0;
      v176 = 0;
    }
    v177 = objc_msgSend(v151, sel_name);
    if (v177)
    {
      v178 = v177;
      v179 = sub_1AD63B768();
      v1106 = v180;

    }
    else
    {
      v179 = 0;
      v1106 = 0;
    }
    v181 = objc_msgSend(v153, sel_artist);
    if (v181)
    {
      v182 = v181;
      v1098 = sub_1AD63B768();
      v1104 = v183;

    }
    else
    {
      v1098 = 0;
      v1104 = 0;
    }
    v1101 = (uint64_t *)v179;
    v1102 = v174;
    v184 = objc_msgSend(v153, sel_album);
    if (v184)
    {
      v185 = v184;
      v1090 = (char *)sub_1AD63B768();
      v187 = v186;

    }
    else
    {
      v1090 = 0;
      v187 = 0;
    }
    v188 = objc_msgSend(v153, sel_lyrics);
    if (v188)
    {
      v189 = v188;
      v1089 = sub_1AD63B768();
      v191 = v190;

    }
    else
    {
      v1089 = 0;
      v191 = 0;
    }
    v192 = objc_msgSend(v153, sel_artwork);
    v193 = v1107;
    sub_1AD356208(v192, (uint64_t)v1131);
    if (v193)
    {
      v1107 = v193;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }

    sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
    sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
    v194 = objc_msgSend(v153, sel_artworkMetadata);
    sub_1AD356304(v194, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, (uint64_t)v1100);
    v1107 = 0;

    v208 = objc_msgSend(v153, sel_previewURL);
    if (v208)
    {
      v209 = v208;
      v210 = v1099;
      sub_1AD63AED4();

      v211 = 0;
    }
    else
    {
      v211 = 1;
      v210 = v1099;
    }
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(v1096 + 56))(v210, v211, 1, v1097);
    v237 = objc_msgSend(v153, sel_offers);
    if (v237)
    {
      v238 = v237;
      v239 = v176;
      v240 = sub_1AD63B9B4();

    }
    else
    {
      v239 = v176;
      v240 = 0;
    }
    v247 = objc_msgSend(v153, sel_lyricExcerpt);
    v248 = v1107;
    sub_1AD356394(v247, v1122);
    if (v248)
    {
      v1107 = v248;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AD009758((uint64_t)v1099, &qword_1ED2E1A40);
      sub_1AD009758((uint64_t)v1100, &qword_1EECD1CB8);
      sub_1AD00FF28((uint64_t)v1128, (uint64_t)v1125, &qword_1EECD1D20);
      v249 = (uint64_t *)v1125;
LABEL_92:
      sub_1AD29594C(v249);
      return;
    }

    v1125[0] = v1122[0];
    v1125[1] = v1122[1];
    v1125[2] = v1122[2];
    v1126 = v1123;
    v1127 = v1124;
    v1030 = v191;
    *((_QWORD *)&v1027 + 1) = v187;
    *(_QWORD *)&v1027 = v1090;
    v254 = v1095;
    sub_1AD22CF5C((uint64_t)v1103, (uint64_t)v1105, v1102, v239, (uint64_t)v1101, (uint64_t)v1106, v1098, v1104, (uint64_t)v1095, v1027, v1089, v1030, (uint64_t)v1128, (uint64_t)v1100, (uint64_t)v1099, v240, v1125);
    v1107 = 0;
    v255 = v1093;
    goto LABEL_78;
  }
  v158 = v143;
  v1100 = v146;
  v1099 = v140;
  v1033 = v128;
  v1034 = v134;
  v1095 = v137;
  v159 = (uint64_t)v1101;
  v160 = v1102;
  v161 = (uint64_t)v1103;
  v1032 = v131;
  v162 = v1104;
  v163 = v1105;
  objc_opt_self();
  v164 = swift_dynamicCastObjCClass();
  if (v164)
  {
    v165 = (void *)v164;
    v166 = v1106;
    v167 = objc_msgSend(v165, sel_storeFrontIdentifier);
    if (v167)
    {
      v168 = v167;
      v169 = (_OWORD *)sub_1AD63B768();
      v171 = v170;

    }
    else
    {
      v169 = 0;
      v171 = 0;
    }
    v1106 = v169;
    v203 = objc_msgSend(v165, sel_storeIdentifier);
    if (v203)
    {
      v204 = v203;
      v205 = sub_1AD63B768();
      v207 = v206;

    }
    else
    {
      v205 = 0;
      v207 = 0;
    }
    v212 = objc_msgSend(v165, sel_name);
    if (v212)
    {
      v213 = v212;
      v214 = sub_1AD63B768();
      v216 = v215;

    }
    else
    {
      v214 = 0;
      v216 = 0;
    }
    v1104 = v214;
    v1105 = v205;
    v217 = objc_msgSend(v165, sel_artist);
    if (v217)
    {
      v218 = v217;
      v1103 = (_BYTE *)sub_1AD63B768();
      v220 = v219;

    }
    else
    {
      v1103 = 0;
      v220 = 0;
    }
    v221 = objc_msgSend(v165, sel_artwork);
    v222 = v1107;
    sub_1AD356208(v221, (uint64_t)v1131);
    if (v222)
    {
      v1107 = v222;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_408:
      swift_bridgeObjectRelease();
      return;
    }

    sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
    sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
    v223 = objc_msgSend(v165, sel_artworkMetadata);
    sub_1AD356304(v223, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v1098);
    v1107 = 0;

    v241 = objc_msgSend(v165, sel_offers);
    if (v241)
    {
      v242 = v241;
      v243 = sub_1AD63B9B4();

    }
    else
    {

      v243 = 0;
    }
    v1031 = v243;
    v254 = v1100;
    v271 = v1107;
    sub_1AD22DF34((uint64_t)v1106, v171, (uint64_t)v1105, v207, v1104, v216, (uint64_t)v1103, v220, v1100, (uint64_t)v1128, v1098, v1031);
    v1107 = v271;
    if (!v271)
    {
      v255 = v1093;
LABEL_78:
      swift_storeEnumTagMultiPayload();
      v275 = (uint64_t)v254;
      goto LABEL_79;
    }
    return;
  }
  objc_opt_self();
  v195 = swift_dynamicCastObjCClass();
  if (v195)
  {
    v196 = (void *)v195;
    v197 = v1106;
    v198 = objc_msgSend(v196, sel_storeFrontIdentifier);
    if (v198)
    {
      v199 = v198;
      v200 = sub_1AD63B768();
      v202 = v201;

    }
    else
    {
      v200 = 0;
      v202 = 0;
    }
    v1104 = v200;
    v232 = objc_msgSend(v196, sel_storeIdentifier);
    if (v232)
    {
      v233 = v232;
      v234 = sub_1AD63B768();
      v236 = v235;

    }
    else
    {
      v234 = 0;
      v236 = 0;
    }
    v244 = objc_msgSend(v196, sel_name);
    if (v244)
    {
      v245 = v244;
      v1102 = sub_1AD63B768();
      v1105 = v246;

    }
    else
    {
      v1102 = 0;
      v1105 = 0;
    }
    v1103 = (_BYTE *)v234;
    v1106 = v236;
    v250 = objc_msgSend(v196, sel_genre);
    if (v250)
    {
      v251 = v250;
      v1100 = (_QWORD *)sub_1AD63B768();
      v253 = v252;

    }
    else
    {
      v1100 = 0;
      v253 = 0;
    }
    v256 = objc_msgSend(v196, sel_artwork);
    v257 = v1107;
    sub_1AD356208(v256, (uint64_t)v1131);
    if (!v257)
    {
      v1099 = v202;

      sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
      v258 = objc_msgSend(v196, sel_artworkMetadata);
      sub_1AD356304(v258, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v159);

      sub_1AD22E330(v1104, (uint64_t)v1099, (uint64_t)v1103, (uint64_t)v1106, v1102, (uint64_t)v1105, (uint64_t)v1100, v253, v158, (uint64_t)v1128, v159);
      v1107 = 0;
      v255 = v1093;
      swift_storeEnumTagMultiPayload();
      v275 = (uint64_t)v158;
LABEL_79:
      v272 = v1091;
      sub_1AD2A5214(v275, (uint64_t)v1091, type metadata accessor for LinkPresentation.SpecializationMetadata);
LABEL_80:
      v273 = (uint64_t)v272;
      v274 = v1094;
      sub_1AD2A5214(v273, v1094, type metadata accessor for LinkPresentation.SpecializationMetadata);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v1092 + 56))(v274, 0, 1, v255);
      return;
    }
    v1107 = v257;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_201;
  }
  objc_opt_self();
  v224 = swift_dynamicCastObjCClass();
  if (v224)
  {
    v225 = (void *)v224;
    v226 = v1106;
    v227 = objc_msgSend(v225, sel_storeFrontIdentifier);
    if (v227)
    {
      v228 = v227;
      v229 = sub_1AD63B768();
      v231 = v230;

    }
    else
    {
      v229 = 0;
      v231 = 0;
    }
    v266 = objc_msgSend(v225, sel_storeIdentifier);
    if (v266)
    {
      v267 = v266;
      v268 = sub_1AD63B768();
      v270 = v269;

    }
    else
    {
      v268 = 0;
      v270 = 0;
    }
    v276 = objc_msgSend(v225, sel_name);
    if (v276)
    {
      v277 = v276;
      v1103 = (_BYTE *)sub_1AD63B768();
      v1106 = v278;

    }
    else
    {
      v1103 = 0;
      v1106 = 0;
    }
    v1104 = v268;
    v1105 = v229;
    v279 = objc_msgSend(v225, sel_artist);
    if (v279)
    {
      v280 = v279;
      v1101 = (uint64_t *)sub_1AD63B768();
      v282 = v281;

    }
    else
    {
      v1101 = 0;
      v282 = 0;
    }
    v283 = objc_msgSend(v225, sel_artwork);
    v284 = v1107;
    sub_1AD356208(v283, (uint64_t)v1131);
    if (v284)
    {
      v1107 = v284;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_201;
    }
    v1100 = v231;

    sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
    sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
    v285 = objc_msgSend(v225, sel_artworkMetadata);
    sub_1AD356304(v285, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v160);

    v298 = v1099;
    sub_1AD22E144((uint64_t)v1105, (uint64_t)v1100, v1104, v270, (uint64_t)v1103, (uint64_t)v1106, (uint64_t)v1101, v282, v1099, (uint64_t)v1128, v160);
    v1107 = 0;
    v255 = v1093;
LABEL_138:
    swift_storeEnumTagMultiPayload();
    v275 = (uint64_t)v298;
    goto LABEL_79;
  }
  objc_opt_self();
  v259 = swift_dynamicCastObjCClass();
  if (v259)
  {
    v260 = (void *)v259;
    v261 = v1106;
    v262 = objc_msgSend(v260, sel_curatorProfileURL);
    if (v262)
    {
      v263 = v262;
      v264 = v1089;
      sub_1AD63AED4();

      v265 = 0;
    }
    else
    {
      v265 = 1;
      v264 = v1089;
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1096 + 56))(v264, v265, 1, v1097);
    sub_1AD00FF28(v264, (uint64_t)v163, &qword_1ED2E1A40);
    v294 = objc_msgSend(v260, sel_curatorHandle);
    if (v294)
    {
      v295 = v294;
      v1101 = (uint64_t *)sub_1AD63B768();
      v297 = v296;

    }
    else
    {
      v1101 = 0;
      v297 = 0;
    }
    v299 = objc_msgSend(v260, sel_storeFrontIdentifier);
    if (v299)
    {
      v300 = v299;
      v1100 = (_QWORD *)sub_1AD63B768();
      v1104 = v301;

    }
    else
    {
      v1100 = 0;
      v1104 = 0;
    }
    v302 = objc_msgSend(v260, sel_storeIdentifier);
    if (v302)
    {
      v303 = v302;
      v1099 = (_QWORD *)sub_1AD63B768();
      v1103 = (_BYTE *)v304;

    }
    else
    {
      v1099 = 0;
      v1103 = 0;
    }
    v305 = objc_msgSend(v260, sel_name);
    if (v305)
    {
      v306 = v305;
      v1098 = sub_1AD63B768();
      v1102 = v307;

    }
    else
    {
      v1098 = 0;
      v1102 = 0;
    }
    v1106 = v297;
    v308 = objc_msgSend(v260, sel_curator);
    if (v308)
    {
      v309 = v308;
      v1097 = sub_1AD63B768();
      v311 = v310;

    }
    else
    {
      v1097 = 0;
      v311 = 0;
    }
    v312 = (uint64_t)v1090;
    sub_1ACFF64C0((uint64_t)v163, (uint64_t)v1090, &qword_1ED2E1A40);
    v313 = objc_msgSend(v260, sel_artwork);
    v314 = v1107;
    sub_1AD356208(v313, (uint64_t)v1131);
    if (v314)
    {
      v1107 = v314;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AD009758(v312, &qword_1ED2E1A40);
      sub_1AD009758((uint64_t)v163, &qword_1ED2E1A40);
      return;
    }
    v315 = v261;

    sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
    sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
    v316 = objc_msgSend(v260, sel_artworkMetadata);
    v317 = v1088;
    sub_1AD356304(v316, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v1088);

    sub_1AD009758((uint64_t)v163, &qword_1ED2E1A40);
    v298 = v1095;
    sub_1AD22E5F4((uint64_t)v1100, v1104, (uint64_t)v1099, (uint64_t)v1103, v1098, v1102, v1097, v311, v1095, (uint64_t)v1090, (uint64_t)v1101, (uint64_t)v1106, (uint64_t)v1128, v317);
    v1107 = 0;
    v255 = v1093;
    goto LABEL_138;
  }
  objc_opt_self();
  v286 = swift_dynamicCastObjCClass();
  if (v286)
  {
    v287 = (void *)v286;
    v288 = v1106;
    v289 = objc_msgSend(v287, sel_storeFrontIdentifier);
    if (v289)
    {
      v290 = v289;
      v291 = sub_1AD63B768();
      v293 = v292;

    }
    else
    {
      v291 = 0;
      v293 = 0;
    }
    v326 = objc_msgSend(v287, sel_storeIdentifier);
    if (v326)
    {
      v327 = v326;
      v328 = sub_1AD63B768();
      v330 = v329;

    }
    else
    {
      v328 = 0;
      v330 = 0;
    }
    v331 = objc_msgSend(v287, sel_name);
    if (v331)
    {
      v332 = v331;
      v1102 = sub_1AD63B768();
      v1106 = v333;

    }
    else
    {
      v1102 = 0;
      v1106 = 0;
    }
    v1104 = v328;
    v1105 = v291;
    v334 = objc_msgSend(v287, sel_curator);
    if (v334)
    {
      v335 = v334;
      v1101 = (uint64_t *)sub_1AD63B768();
      v337 = v336;

    }
    else
    {
      v1101 = 0;
      v337 = 0;
    }
    v338 = objc_msgSend(v287, sel_artwork);
    v339 = v1107;
    sub_1AD356208(v338, (uint64_t)v1131);
    if (v339)
    {
      v1107 = v339;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return;
    }
    v1100 = v293;

    sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
    sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
    v340 = objc_msgSend(v287, sel_artworkMetadata);
    sub_1AD356304(v340, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v161);

    v298 = v1034;
    sub_1AD22F208((uint64_t)v1105, (uint64_t)v1100, v1104, v330, v1102, (uint64_t)v1106, (uint64_t)v1101, v337, v1034, (uint64_t)v1128, v161);
    v1107 = 0;
    v255 = v1093;
    goto LABEL_138;
  }
  objc_opt_self();
  v318 = swift_dynamicCastObjCClass();
  if (v318)
  {
    v319 = (void *)v318;
    v320 = v1106;
    v321 = objc_msgSend(v319, sel_storeFrontIdentifier);
    if (v321)
    {
      v322 = v321;
      v323 = sub_1AD63B768();
      v325 = v324;

    }
    else
    {
      v323 = 0;
      v325 = 0;
    }
    v349 = objc_msgSend(v319, sel_storeIdentifier);
    if (v349)
    {
      v350 = v349;
      v351 = sub_1AD63B768();
      v353 = v352;

    }
    else
    {
      v351 = 0;
      v353 = 0;
    }
    v1105 = v323;
    v354 = objc_msgSend(v319, sel_name);
    if (v354)
    {
      v355 = v354;
      v356 = sub_1AD63B768();
      v358 = v357;

    }
    else
    {
      v356 = 0;
      v358 = 0;
    }
    v1103 = (_BYTE *)v356;
    v359 = objc_msgSend(v319, sel_subtitle);
    if (v359)
    {
      v360 = v359;
      v1102 = sub_1AD63B768();
      v362 = v361;

    }
    else
    {
      v1102 = 0;
      v362 = 0;
    }
    v1106 = v358;
    v363 = objc_msgSend(v319, sel_genre);
    if (v363)
    {
      v364 = v363;
      v1101 = (uint64_t *)sub_1AD63B768();
      v366 = v365;

    }
    else
    {
      v1101 = 0;
      v366 = 0;
    }
    v1104 = v351;
    v367 = objc_msgSend(v319, sel_platform);
    if (v367)
    {
      v368 = v367;
      v1100 = (_QWORD *)sub_1AD63B768();
      v370 = v369;

    }
    else
    {
      v1100 = 0;
      v370 = 0;
    }
    v371 = objc_msgSend(v319, sel_icon);
    v372 = v1107;
    sub_1AD356208(v371, (uint64_t)v1131);
    v1107 = v372;
    if (v372)
    {

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_201;
    }
    v1099 = v325;
    v373 = v353;

    sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
    sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
    v374 = objc_msgSend(v319, sel_screenshots);
    if (v374)
    {
      v375 = v374;
      sub_1AD32F2CC(0, &qword_1EECDAF30);
      v376 = sub_1AD63B9B4();

      v377 = v1107;
      v378 = sub_1AD355DA8(v376);
      v1107 = v377;
      if (v377)
      {
        swift_bridgeObjectRelease();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
LABEL_257:
        swift_bridgeObjectRelease();
        goto LABEL_91;
      }
      v1098 = v378;
      swift_bridgeObjectRelease();
    }
    else
    {
      v1098 = 0;
    }
    v404 = v373;
    v405 = objc_msgSend(v319, sel_previewVideo);
    v406 = v1107;
    sub_1AD356304(v405, (uint64_t (*)(void *))sub_1AD35FB00, (uint64_t (*)(void))type metadata accessor for LinkPresentation.Video, v1087);
    v1107 = v406;
    v407 = v1099;
    if (!v406)
    {

      LODWORD(v1097) = objc_msgSend(v319, sel_isMessagesOnlyApp);
      v408 = objc_msgSend(v319, sel_messagesAppIcon);
      v409 = v1107;
      sub_1AD356208(v408, (uint64_t)v1125);
      v1107 = v409;
      if (v409)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AD009758(v1087, &qword_1EECD1C98);
        sub_1AD00FF28((uint64_t)v1128, (uint64_t)v1122, &qword_1EECD1D20);
        v249 = (uint64_t *)v1122;
        goto LABEL_92;
      }

      sub_1AD00FF28((uint64_t)v1125, (uint64_t)v1122, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)v1122, (uint64_t)v1121, &qword_1EECD1D20);
      *((_QWORD *)&v1028 + 1) = v366;
      *(_QWORD *)&v1028 = v1101;
      v442 = v1107;
      sub_1AD22F3F8((uint64_t)v1105, (uint64_t)v407, v1104, v404, (uint64_t)v1103, (uint64_t)v1106, v1102, v362, (uint64_t)v1032, v1028, (uint64_t)v1100, v370, (uint64_t)v1128, v1098, v1087, v1097, (uint64_t)v1121);
      v1107 = v442;
      if (!v442)
      {
        v254 = v1032;
        v255 = v1093;
        goto LABEL_78;
      }
      return;
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_91:
    swift_bridgeObjectRelease();
    v249 = (uint64_t *)&v1129;
    goto LABEL_92;
  }
  objc_opt_self();
  v341 = swift_dynamicCastObjCClass();
  if (!v341)
  {
    objc_opt_self();
    v379 = swift_dynamicCastObjCClass();
    if (v379)
    {
      v380 = (void *)v379;
      v381 = v1106;
      v382 = objc_msgSend(v380, sel_storeFrontIdentifier);
      if (v382)
      {
        v383 = v382;
        v384 = sub_1AD63B768();
        v386 = v385;

      }
      else
      {
        v384 = 0;
        v386 = 0;
      }
      v1106 = v386;
      v417 = objc_msgSend(v380, sel_storeIdentifier);
      if (v417)
      {
        v418 = v417;
        v419 = sub_1AD63B768();
        v421 = v420;

      }
      else
      {
        v419 = 0;
        v421 = 0;
      }
      v424 = objc_msgSend(v380, sel_name);
      if (v424)
      {
        v425 = v424;
        v426 = sub_1AD63B768();
        v428 = v427;

      }
      else
      {
        v426 = 0;
        v428 = 0;
      }
      v1105 = v384;
      v429 = objc_msgSend(v380, sel_author);
      if (v429)
      {
        v430 = v429;
        v1102 = sub_1AD63B768();
        v432 = v431;

      }
      else
      {
        v1102 = 0;
        v432 = 0;
      }
      v1103 = (_BYTE *)v426;
      v1104 = v419;
      v433 = objc_msgSend(v380, sel_narrator);
      if (v433)
      {
        v434 = v433;
        v435 = sub_1AD63B768();
        v437 = v436;

      }
      else
      {
        v435 = 0;
        v437 = 0;
      }
      v438 = objc_msgSend(v380, sel_artwork);
      v439 = v1107;
      sub_1AD356208(v438, (uint64_t)v1131);
      v1107 = v439;
      if (v439)
      {

LABEL_200:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_201;
      }

      sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
      v440 = objc_msgSend(v380, sel_artworkMetadata);
      v441 = v1107;
      sub_1AD356304(v440, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v1085);
      v1107 = v441;
      if (!v441)
      {

        v454 = objc_msgSend(v380, sel_previewURL);
        if (v454)
        {
          v455 = v454;
          sub_1AD63AED4();

          v456 = 0;
        }
        else
        {
          v456 = 1;
        }

        v487 = (uint64_t)v1084;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1096 + 56))(v1084, v456, 1, v1097);
        v488 = v1107;
        sub_1AD230D14((uint64_t)v1105, (uint64_t)v1106, v1104, v421, (uint64_t)v1103, v428, v1102, v432, v1082, v435, v437, (uint64_t)v1128, v1085, v487);
        v1107 = v488;
        if (!v488)
        {
          v254 = v1082;
          v255 = v1093;
          goto LABEL_78;
        }
        return;
      }

      goto LABEL_204;
    }
    objc_opt_self();
    v410 = swift_dynamicCastObjCClass();
    if (v410)
    {
      v411 = (void *)v410;
      v412 = v1106;
      v413 = objc_msgSend(v411, sel_storeFrontIdentifier);
      if (v413)
      {
        v414 = v413;
        v1105 = sub_1AD63B768();
        v416 = v415;

      }
      else
      {
        v1105 = 0;
        v416 = 0;
      }
      v451 = objc_msgSend(v411, sel_storeIdentifier);
      if (v451)
      {
        v452 = v451;
        v1104 = sub_1AD63B768();
        v1106 = v453;

      }
      else
      {
        v1104 = 0;
        v1106 = 0;
      }
      v457 = objc_msgSend(v411, sel_episodeName);
      if (v457)
      {
        v458 = v457;
        v1103 = (_BYTE *)sub_1AD63B768();
        v460 = v459;

      }
      else
      {
        v1103 = 0;
        v460 = 0;
      }
      v461 = objc_msgSend(v411, sel_podcastName);
      if (v461)
      {
        v462 = v461;
        v1102 = sub_1AD63B768();
        v464 = v463;

      }
      else
      {
        v1102 = 0;
        v464 = 0;
      }
      v465 = objc_msgSend(v411, sel_artist);
      if (v465)
      {
        v466 = v465;
        v1101 = (uint64_t *)sub_1AD63B768();
        v468 = v467;

      }
      else
      {
        v1101 = 0;
        v468 = 0;
      }
      v469 = objc_msgSend(v411, sel_releaseDate);
      if (v469)
      {
        v470 = v469;
        v471 = v1086;
        sub_1AD63B024();

        v472 = sub_1AD63B03C();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v472 - 8) + 56))(v471, 0, 1, v472);
      }
      else
      {
        v473 = sub_1AD63B03C();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v473 - 8) + 56))(v1086, 1, 1, v473);
      }
      v474 = objc_msgSend(v411, sel_artwork);
      v475 = v1107;
      sub_1AD356208(v474, (uint64_t)v1131);
      v1107 = v475;
      if (v475)
      {

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {

        sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
        sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
        v476 = objc_msgSend(v411, sel_artworkMetadata);
        v477 = v1107;
        sub_1AD356304(v476, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v1083);
        v1107 = v477;
        if (!v477)
        {

          v489 = objc_msgSend(v411, sel_offers);
          if (v489)
          {
            v490 = v489;
            v491 = sub_1AD63B9B4();

          }
          else
          {

            v491 = 0;
          }
          v515 = v1107;
          sub_1AD231914((uint64_t)v1105, v416, v1104, (uint64_t)v1106, (uint64_t)v1103, v460, v1102, v464, v1080, (uint64_t)v1101, v468, v1086, (uint64_t)v1128, v1083, v491);
          v1107 = v515;
          if (!v515)
          {
            v254 = v1080;
            v255 = v1093;
            goto LABEL_78;
          }
          return;
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AD29594C((uint64_t *)&v1129);
      }
      sub_1AD009758(v1086, (uint64_t *)&unk_1ED2E2D98);
      return;
    }
    objc_opt_self();
    v443 = v1106;
    v444 = swift_dynamicCastObjCClass();
    if (v444)
    {
      v445 = (void *)v444;
      v446 = v443;
      v447 = objc_msgSend(v445, sel_storeFrontIdentifier);
      if (v447)
      {
        v448 = v447;
        v1106 = (_OWORD *)sub_1AD63B768();
        v450 = v449;

      }
      else
      {
        v1106 = 0;
        v450 = 0;
      }
      v483 = objc_msgSend(v445, sel_storeIdentifier);
      if (v483)
      {
        v484 = v483;
        v1105 = sub_1AD63B768();
        v486 = v485;

      }
      else
      {
        v1105 = 0;
        v486 = 0;
      }
      v492 = objc_msgSend(v445, sel_name);
      if (v492)
      {
        v493 = v492;
        v1104 = sub_1AD63B768();
        v495 = v494;

      }
      else
      {
        v1104 = 0;
        v495 = 0;
      }
      v496 = objc_msgSend(v445, sel_artist);
      if (v496)
      {
        v497 = v496;
        v498 = sub_1AD63B768();
        v500 = v499;

      }
      else
      {
        v498 = 0;
        v500 = 0;
      }
      v501 = objc_msgSend(v445, sel_artwork);
      v502 = v1107;
      sub_1AD356208(v501, (uint64_t)v1131);
      v1107 = v502;
      if (v502)
      {
LABEL_252:

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_253;
      }

      sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
      v503 = objc_msgSend(v445, sel_artworkMetadata);
      v504 = v1107;
      sub_1AD356304(v503, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v1081);
      v1107 = v504;
      if (!v504)
      {

        v516 = objc_msgSend(v445, sel_offers);
        if (v516)
        {
          v517 = v516;
          v518 = sub_1AD63B9B4();

        }
        else
        {

          v518 = 0;
        }
        v547 = v1107;
        sub_1AD232630((uint64_t)v1106, v450, (uint64_t)v1105, v486, v1104, v495, v498, v500, v1078, (uint64_t)v1128, v1081, v518);
        v1107 = v547;
        if (!v547)
        {
          v254 = v1078;
          v255 = v1093;
          goto LABEL_78;
        }
        return;
      }

LABEL_256:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_257;
    }
    objc_opt_self();
    v478 = swift_dynamicCastObjCClass();
    if (v478)
    {
      v479 = (void *)v478;
      v381 = v443;
      v480 = objc_msgSend(v479, sel_storeFrontIdentifier);
      if (v480)
      {
        v481 = v480;
        v1105 = sub_1AD63B768();
        v1106 = v482;

      }
      else
      {
        v1105 = 0;
        v1106 = 0;
      }
      v511 = objc_msgSend(v479, sel_storeIdentifier);
      if (v511)
      {
        v512 = v511;
        v1104 = sub_1AD63B768();
        v514 = v513;

      }
      else
      {
        v1104 = 0;
        v514 = 0;
      }
      v519 = objc_msgSend(v479, sel_episodeName);
      if (v519)
      {
        v520 = v519;
        v1103 = (_BYTE *)sub_1AD63B768();
        v522 = v521;

      }
      else
      {
        v1103 = 0;
        v522 = 0;
      }
      v523 = objc_msgSend(v479, sel_seasonName);
      if (v523)
      {
        v524 = v523;
        v1102 = sub_1AD63B768();
        v526 = v525;

      }
      else
      {
        v1102 = 0;
        v526 = 0;
      }
      v527 = objc_msgSend(v479, sel_genre);
      if (v527)
      {
        v528 = v527;
        v529 = sub_1AD63B768();
        v531 = v530;

      }
      else
      {
        v529 = 0;
        v531 = 0;
      }
      v532 = objc_msgSend(v479, sel_artwork);
      v533 = v1107;
      sub_1AD356208(v532, (uint64_t)v1131);
      v1107 = v533;
      if (v533)
      {

        goto LABEL_200;
      }

      sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
      v534 = objc_msgSend(v479, sel_artworkMetadata);
      v535 = v1107;
      sub_1AD356304(v534, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v1079);
      v1107 = v535;
      if (!v535)
      {

        v548 = v1107;
        sub_1AD23309C((uint64_t)v1105, (uint64_t)v1106, v1104, v514, (uint64_t)v1103, v522, v1102, v526, v1075, v529, v531, (uint64_t)v1128, v1079);
        v1107 = v548;
        if (!v548)
        {
          v254 = v1075;
          v255 = v1093;
          goto LABEL_78;
        }
        return;
      }

LABEL_204:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_91;
    }
    objc_opt_self();
    v505 = swift_dynamicCastObjCClass();
    if (v505)
    {
      v506 = (void *)v505;
      v446 = v443;
      v507 = objc_msgSend(v506, sel_storeFrontIdentifier);
      if (v507)
      {
        v508 = v507;
        v1106 = (_OWORD *)sub_1AD63B768();
        v510 = v509;

      }
      else
      {
        v1106 = 0;
        v510 = 0;
      }
      v543 = objc_msgSend(v506, sel_storeIdentifier);
      if (v543)
      {
        v544 = v543;
        v1105 = sub_1AD63B768();
        v546 = v545;

      }
      else
      {
        v1105 = 0;
        v546 = 0;
      }
      v549 = objc_msgSend(v506, sel_name);
      if (v549)
      {
        v550 = v549;
        v1104 = sub_1AD63B768();
        v552 = v551;

      }
      else
      {
        v1104 = 0;
        v552 = 0;
      }
      v553 = objc_msgSend(v506, sel_genre);
      if (v553)
      {
        v554 = v553;
        v555 = sub_1AD63B768();
        v557 = v556;

      }
      else
      {
        v555 = 0;
        v557 = 0;
      }
      v501 = objc_msgSend(v506, sel_artwork);
      v558 = v1107;
      sub_1AD356208(v501, (uint64_t)v1131);
      v1107 = v558;
      if (v558)
        goto LABEL_252;

      sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
      v559 = objc_msgSend(v506, sel_artworkMetadata);
      v560 = v1107;
      sub_1AD356304(v559, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v1076);
      v1107 = v560;
      if (!v560)
      {

        v572 = v1107;
        sub_1AD233AD0((uint64_t)v1106, v510, (uint64_t)v1105, v546, v1104, v552, v555, v557, v1069, (uint64_t)v1128, v1076);
        v1107 = v572;
        if (!v572)
        {
          v254 = v1069;
          v255 = v1093;
          goto LABEL_78;
        }
        return;
      }
      goto LABEL_303;
    }
    objc_opt_self();
    v536 = swift_dynamicCastObjCClass();
    if (v536)
    {
      v537 = (void *)v536;
      v538 = v443;
      v539 = objc_msgSend(v537, sel_storeFrontIdentifier);
      if (v539)
      {
        v540 = v539;
        v1106 = (_OWORD *)sub_1AD63B768();
        v542 = v541;

      }
      else
      {
        v1106 = 0;
        v542 = 0;
      }
      v567 = objc_msgSend(v537, sel_storeIdentifier);
      if (v567)
      {
        v568 = v567;
        v569 = sub_1AD63B768();
        v571 = v570;

      }
      else
      {
        v569 = 0;
        v571 = 0;
      }
      v573 = objc_msgSend(v537, sel_name);
      if (v573)
      {
        v574 = v573;
        v575 = sub_1AD63B768();
        v577 = v576;

      }
      else
      {
        v575 = 0;
        v577 = 0;
      }
      v578 = objc_msgSend(v537, sel_artwork);
      v579 = v1107;
      sub_1AD356208(v578, (uint64_t)v1131);
      v1107 = v579;
      if (!v579)
      {

        sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
        sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
        v580 = objc_msgSend(v537, sel_artworkMetadata);
        v581 = v1107;
        sub_1AD356304(v580, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v1070);
        v1107 = v581;
        if (!v581)
        {

          v592 = v1107;
          sub_1AD233BE0((uint64_t)v1106, v542, v569, v571, v575, v577, (uint64_t)v1128, v1070, v1067);
          v1107 = v592;
          if (!v592)
          {
            v254 = v1067;
            v255 = v1093;
            goto LABEL_78;
          }
          return;
        }

        swift_bridgeObjectRelease();
        goto LABEL_257;
      }

      goto LABEL_318;
    }
    objc_opt_self();
    v561 = swift_dynamicCastObjCClass();
    if (v561)
    {
      v562 = (void *)v561;
      v446 = v443;
      v563 = objc_msgSend(v562, sel_storeFrontIdentifier);
      if (v563)
      {
        v564 = v563;
        v1106 = (_OWORD *)sub_1AD63B768();
        v566 = v565;

      }
      else
      {
        v1106 = 0;
        v566 = 0;
      }
      v588 = objc_msgSend(v562, sel_storeIdentifier);
      if (v588)
      {
        v589 = v588;
        v1105 = sub_1AD63B768();
        v591 = v590;

      }
      else
      {
        v1105 = 0;
        v591 = 0;
      }
      v593 = objc_msgSend(v562, sel_name);
      if (v593)
      {
        v594 = v593;
        v1104 = sub_1AD63B768();
        v596 = v595;

      }
      else
      {
        v1104 = 0;
        v596 = 0;
      }
      v597 = objc_msgSend(v562, sel_genre);
      if (v597)
      {
        v598 = v597;
        v599 = sub_1AD63B768();
        v601 = v600;

      }
      else
      {
        v599 = 0;
        v601 = 0;
      }
      v501 = objc_msgSend(v562, sel_artwork);
      v602 = v1107;
      sub_1AD356208(v501, (uint64_t)v1131);
      v1107 = v602;
      if (v602)
        goto LABEL_252;

      sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
      v559 = objc_msgSend(v562, sel_artworkMetadata);
      v603 = v1107;
      sub_1AD356304(v559, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v1068);
      v1107 = v603;
      if (!v603)
      {

        sub_1AD36E9E4((uint64_t)v1125);
        sub_1AD00FF28((uint64_t)v1125, (uint64_t)v1122, &qword_1EECD1D20);
        v604 = v1107;
        sub_1AD23446C((uint64_t)v1106, v566, (uint64_t)v1105, v591, v1104, v596, v599, v601, v1065, (uint64_t)v1128, v1068, (uint64_t)v1122, 0, 0);
        v1107 = v604;
        if (!v604)
        {
          v254 = v1065;
          v255 = v1093;
          goto LABEL_78;
        }
        return;
      }
      goto LABEL_303;
    }
    objc_opt_self();
    v582 = swift_dynamicCastObjCClass();
    if (v582)
    {
      v583 = (void *)v582;
      v446 = v443;
      v584 = objc_msgSend(v583, sel_storeFrontIdentifier);
      if (v584)
      {
        v585 = v584;
        v1106 = (_OWORD *)sub_1AD63B768();
        v587 = v586;

      }
      else
      {
        v1106 = 0;
        v587 = 0;
      }
      v608 = objc_msgSend(v583, sel_storeIdentifier);
      if (v608)
      {
        v609 = v608;
        v1105 = sub_1AD63B768();
        v611 = v610;

      }
      else
      {
        v1105 = 0;
        v611 = 0;
      }
      v612 = objc_msgSend(v583, sel_name);
      if (v612)
      {
        v613 = v612;
        v1104 = sub_1AD63B768();
        v615 = v614;

      }
      else
      {
        v1104 = 0;
        v615 = 0;
      }
      v616 = objc_msgSend(v583, sel_genre);
      if (v616)
      {
        v617 = v616;
        v618 = sub_1AD63B768();
        v620 = v619;

      }
      else
      {
        v618 = 0;
        v620 = 0;
      }
      v501 = objc_msgSend(v583, sel_artwork);
      v621 = v1107;
      sub_1AD356208(v501, (uint64_t)v1131);
      v1107 = v621;
      if (v621)
        goto LABEL_252;

      sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
      v559 = objc_msgSend(v583, sel_artworkMetadata);
      v622 = v1107;
      sub_1AD356304(v559, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v1066);
      v1107 = v622;
      if (!v622)
      {

        v623 = v1107;
        sub_1AD23504C((uint64_t)v1106, v587, (uint64_t)v1105, v611, v1104, v615, v618, v620, v1039, (uint64_t)v1128, v1066);
        v1107 = v623;
        if (!v623)
        {
          v254 = v1039;
          v255 = v1093;
          goto LABEL_78;
        }
        return;
      }
LABEL_303:

      goto LABEL_256;
    }
    objc_opt_self();
    v1105 = swift_dynamicCastObjCClass();
    if (v1105)
    {
      v1119[0] = MEMORY[0x1E0DEE9D8];
      v1100 = v443;
      v605 = -[NSObject encodedTokens](v1105, sel_encodedTokens);
      if (v605)
      {
        v606 = v605;
        sub_1AD32F2CC(0, &qword_1EECDB010);
        v607 = sub_1AD63B690();

      }
      else
      {
        v607 = sub_1AD4395C0(MEMORY[0x1E0DEE9D8]);
      }
      v630 = (uint64_t *)sub_1AD356808(v607);
      swift_bridgeObjectRelease();
      v631 = 0;
      v632 = v630[8];
      v1101 = v630 + 8;
      v1104 = (uint64_t)v630;
      v633 = 1 << *((_BYTE *)v630 + 32);
      v634 = -1;
      if (v633 < 64)
        v634 = ~(-1 << v633);
      v635 = v634 & v632;
      v1103 = v1130;
      v1106 = &v1131[1];
      v1102 = (unint64_t)(v633 + 63) >> 6;
      v1099 = (_QWORD *)(v1102 - 1);
      if ((v634 & v632) == 0)
        goto LABEL_366;
LABEL_364:
      v636 = __clz(__rbit64(v635));
      v635 &= v635 - 1;
      v637 = v636 | (v631 << 6);
LABEL_365:
      v638 = *(_QWORD *)(v1104 + 56);
      v639 = (_QWORD *)(*(_QWORD *)(v1104 + 48) + 16 * v637);
      v640 = v639[1];
      *(_QWORD *)&v1129 = *v639;
      *((_QWORD *)&v1129 + 1) = v640;
      sub_1AD3551A8(v638 + 32 * v637, (uint64_t)v1103);
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1131, &qword_1EECDB0D0);
        v643 = *((_QWORD *)&v1131[0] + 1);
        if (!*((_QWORD *)&v1131[0] + 1))
          break;
        v644 = *(_QWORD *)&v1131[0];
        v645 = (void *)sub_1AD63B744();
        v646 = v1105;
        v647 = -[NSObject tokenDataForHandle:](v1105, sel_tokenDataForHandle_, v645);

        v648 = sub_1AD63AFB8();
        v650 = v649;

        v651 = (void *)sub_1AD63B744();
        v652 = -[NSObject shareURLForHandle:](v646, sel_shareURLForHandle_, v651);

        v653 = (uint64_t)v1074;
        sub_1AD63AED4();

        v654 = v1107;
        sub_1AD4E1D58(v648, v650, v653, 0, 0, v1077);
        v1107 = v654;
        if (v654)
        {
          swift_release();
          swift_bridgeObjectRelease();
          v663 = v1100;

          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v1106);
          return;
        }
        v143 = v1077;
        v655 = v1072;
        sub_1AD0D3D2C((uint64_t)v1077, v1072, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
        v656 = v1071;
        sub_1AD048F28(v644, v643, v655, v1071);
        v657 = v1073;
        sub_1AD0D3D2C((uint64_t)v656, v1073, type metadata accessor for LinkPresentation.EncodedToken);
        v630 = v1119;
        sub_1AD356140(v657);
        sub_1AD066230((uint64_t)v656, type metadata accessor for LinkPresentation.EncodedToken);
        sub_1AD066230((uint64_t)v143, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v1106);
        if (v635)
          goto LABEL_364;
LABEL_366:
        v641 = v631 + 1;
        if (__OFADD__(v631, 1))
        {
          __break(1u);
LABEL_486:
          v747 = 0;
          v749 = 0;
          goto LABEL_487;
        }
        if (v641 < v1102)
        {
          v642 = v1101[v641];
          if (v642)
            goto LABEL_369;
          if (v631 + 2 >= v1102)
          {
            ++v631;
          }
          else
          {
            v631 += 2;
            v642 = v1101[v641 + 1];
            if (v642)
            {
              ++v641;
LABEL_369:
              v635 = (v642 - 1) & v642;
              v637 = __clz(__rbit64(v642)) + (v641 << 6);
              v631 = v641;
              goto LABEL_365;
            }
            if (v641 + 2 < v1102)
            {
              v642 = v1101[v641 + 2];
              if (v642)
              {
                v641 += 2;
                goto LABEL_369;
              }
              v658 = v641 + 3;
              if (v641 + 3 < v1102)
              {
                v642 = v1101[v658];
                if (v642)
                {
                  v641 += 3;
                  goto LABEL_369;
                }
                while (1)
                {
                  v641 = v658 + 1;
                  if (__OFADD__(v658, 1))
                    break;
                  if (v641 >= v1102)
                  {
                    v631 = (uint64_t)v1099;
                    goto LABEL_374;
                  }
                  v642 = v1101[v641];
                  ++v658;
                  if (v642)
                    goto LABEL_369;
                }
                __break(1u);
LABEL_551:
                v840 = 0;
                v842 = 0;
                goto LABEL_552;
              }
              v631 = v641 + 2;
            }
          }
        }
LABEL_374:
        v635 = 0;
        memset(v1130, 0, 32);
        v1129 = 0u;
      }
      swift_release();
      v659 = -[NSObject application](v1105, sel_application);
      if (v659)
      {
        v660 = v659;
        v1106 = (_OWORD *)sub_1AD63B768();
        v662 = v661;

      }
      else
      {
        v1106 = 0;
        v662 = 0;
      }
      v672 = -[NSObject kind](v1105, sel_kind);
      if (v672)
      {
        v673 = v672;
        v674 = sub_1AD63B768();
        v676 = v675;

      }
      else
      {
        v674 = 0;
        v676 = 0;
      }
      v677 = -[NSObject title](v1105, sel_title);
      if (v677)
      {
        v678 = v677;
        v679 = sub_1AD63B768();
        v681 = v680;

      }
      else
      {
        v679 = 0;
        v681 = 0;
      }
      v682 = -[NSObject icon](v1105, sel_icon);
      v683 = v1107;
      sub_1AD356208(v682, (uint64_t)&v1129);
      v1107 = v683;
      if (v683)
      {

        v684 = v1100;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_408;
      }

      sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)v1128, (uint64_t)v1125, &qword_1EECD1D20);
      v685 = -[NSObject thumbnail](v1105, sel_thumbnail);
      v686 = v1107;
      sub_1AD356208(v685, (uint64_t)v1122);
      v1107 = v686;
      if (v686)
      {

        v687 = v1100;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1AD29594C((uint64_t *)v1128);
        goto LABEL_408;
      }

      v712 = v1100;
      sub_1AD00FF28((uint64_t)v1122, (uint64_t)v1121, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)v1121, (uint64_t)v1120, &qword_1EECD1D20);
      v713 = v1107;
      sub_1AD235D58((uint64_t)v1106, v662, v674, v676, v679, v681, (uint64_t)v1125, (uint64_t)v1120, v1131, v1119[0]);
      v1107 = v713;
      if (!v713)
      {
        v254 = v1054;
        memcpy(v1054, v1131, 0x138uLL);
        v255 = v1093;
        goto LABEL_78;
      }
      return;
    }
    objc_opt_self();
    v624 = swift_dynamicCastObjCClass();
    if (v624)
    {
      v625 = (void *)v624;
      v538 = v443;
      v626 = objc_msgSend(v625, sel_title);
      if (v626)
      {
        v627 = v626;
        v1106 = (_OWORD *)sub_1AD63B768();
        v629 = v628;

      }
      else
      {
        v1106 = 0;
        v629 = 0;
      }
      v688 = objc_msgSend(v625, sel_subtitle);
      if (v688)
      {
        v689 = v688;
        v690 = sub_1AD63B768();
        v692 = v691;

      }
      else
      {
        v690 = 0;
        v692 = 0;
      }
      v693 = objc_msgSend(v625, sel_action);
      if (v693)
      {
        v694 = v693;
        v695 = sub_1AD63B768();
        v697 = v696;

      }
      else
      {
        v695 = 0;
        v697 = 0;
      }
      v698 = objc_msgSend(v625, sel_image);
      v699 = v1107;
      sub_1AD356208(v698, (uint64_t)&v1129);
      v1107 = v699;
      if (!v699)
      {

        sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
        sub_1AD00FF28((uint64_t)v1128, (uint64_t)v1125, &qword_1EECD1D20);
        v700 = v1107;
        sub_1AD2366CC((uint64_t)v1106, v629, v690, v692, v695, v697, (uint64_t)v1125, (uint64_t)v1131);
        v1107 = v700;
        if (!v700)
        {
          v701 = v1131[9];
          v254 = v1037;
          *((_OWORD *)v1037 + 8) = v1131[8];
          *((_OWORD *)v254 + 9) = v701;
          *(_OWORD *)((char *)v254 + 153) = *(_OWORD *)((char *)&v1131[9] + 9);
          v702 = v1131[5];
          *((_OWORD *)v254 + 4) = v1131[4];
          *((_OWORD *)v254 + 5) = v702;
          v703 = v1131[7];
          *((_OWORD *)v254 + 6) = v1131[6];
          *((_OWORD *)v254 + 7) = v703;
          v704 = v1131[1];
          *(_OWORD *)v254 = v1131[0];
          *((_OWORD *)v254 + 1) = v704;
          v705 = v1131[3];
          *((_OWORD *)v254 + 2) = v1131[2];
          *((_OWORD *)v254 + 3) = v705;
          v255 = v1093;
          goto LABEL_78;
        }
        return;
      }

LABEL_318:
      swift_bridgeObjectRelease();
      goto LABEL_253;
    }
    objc_opt_self();
    v664 = swift_dynamicCastObjCClass();
    if (v664)
    {
      v665 = (void *)v664;
      v666 = v443;
      v667 = objc_msgSend(v665, sel_game);
      if (v667)
      {
        v668 = v667;
        v669 = sub_1AD63B768();
        v671 = v670;

      }
      else
      {
        v669 = 0;
        v671 = 0;
      }
      v714 = objc_msgSend(v665, sel_image);
      v715 = v1107;
      sub_1AD356208(v714, (uint64_t)&v1129);
      v1107 = v715;
      if (v715)
      {

        swift_bridgeObjectRelease();
        return;
      }

      sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)v1128, (uint64_t)v1125, &qword_1EECD1D20);
      v716 = objc_msgSend(v665, sel_icon);
      v717 = v1107;
      sub_1AD356208(v716, (uint64_t)v1122);
      v1107 = v717;
      if (!v717)
      {

        sub_1AD00FF28((uint64_t)v1122, (uint64_t)v1121, &qword_1EECD1D20);
        sub_1AD00FF28((uint64_t)v1121, (uint64_t)v1120, &qword_1EECD1D20);
        v730 = objc_msgSend(v665, sel_numberOfPlayers);
        v731 = objc_msgSend(v665, sel_minimumNumberOfPlayers);
        v732 = objc_msgSend(v665, sel_maximumNumberOfPlayers);

        v733 = v1107;
        sub_1AD236EA0(v669, v671, (uint64_t)v1125, (uint64_t)v1120, v730, v731, v732, v1131);
        v1107 = v733;
        if (!v733)
        {
          v254 = v1038;
          memcpy(v1038, v1131, 0x118uLL);
          v255 = v1093;
          goto LABEL_78;
        }
        return;
      }

    }
    else
    {
      objc_opt_self();
      v706 = swift_dynamicCastObjCClass();
      if (v706)
      {
        v707 = (void *)v706;
        v708 = v443;
        v709 = objc_msgSend(v707, sel_name);
        if (v709)
        {
          v710 = v709;
          v1105 = sub_1AD63B768();
          v1106 = v711;

        }
        else
        {
          v1105 = 0;
          v1106 = 0;
        }
        v726 = objc_msgSend(v707, sel_address);
        if (v726)
        {
          v727 = v726;
          v1104 = sub_1AD63B768();
          v729 = v728;

        }
        else
        {
          v1104 = 0;
          v729 = 0;
        }
        v734 = objc_msgSend(v707, sel_addressComponents);
        v735 = v1107;
        sub_1AD3563E8(v734, v1128);

        sub_1AD00FF28((uint64_t)v1128, (uint64_t)&v1129, &qword_1EECD1D28);
        sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1125, &qword_1EECD1D28);
        v736 = objc_msgSend(v707, sel_category);
        if (v736)
        {
          v737 = v736;
          v1103 = (_BYTE *)sub_1AD63B768();
          v739 = v738;

        }
        else
        {
          v1103 = 0;
          v739 = 0;
        }
        v740 = objc_msgSend(v707, sel_categoryIcon);
        sub_1AD356208(v740, (uint64_t)v1134);
        v1107 = v735;
        if (v735)
        {

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        else
        {

          sub_1AD00FF28((uint64_t)v1134, (uint64_t)v1133, &qword_1EECD1D20);
          sub_1AD00FF28((uint64_t)v1133, (uint64_t)v1132, &qword_1EECD1D20);
          v741 = objc_msgSend(v707, sel_searchQuery);
          if (v741)
          {
            v742 = v741;
            v1096 = sub_1AD63B768();
            v1102 = v743;

          }
          else
          {
            v1096 = 0;
            v1102 = 0;
          }
          v753 = objc_msgSend(v707, sel_directionsType);
          if (v753)
          {
            v754 = v753;
            v1095 = (_QWORD *)sub_1AD63B768();
            v1101 = (uint64_t *)v755;

          }
          else
          {
            v1095 = 0;
            v1101 = 0;
          }
          v758 = objc_msgSend(v707, sel_transportType);
          v759 = v758;
          if (v758)
          {
            v1090 = (char *)objc_msgSend(v758, sel_unsignedIntegerValue);

          }
          else
          {
            v1090 = 0;
          }
          v760 = objc_msgSend(v707, sel_directionsSourceAddress);
          if (v760)
          {
            v761 = v760;
            v1089 = sub_1AD63B768();
            v1100 = v762;

          }
          else
          {
            v1089 = 0;
            v1100 = 0;
          }
          v763 = objc_msgSend(v707, sel_directionsSourceAddressComponents);
          v764 = v1107;
          sub_1AD3563E8(v763, v1121);

          sub_1AD00FF28((uint64_t)v1121, (uint64_t)v1122, &qword_1EECD1D28);
          sub_1AD00FF28((uint64_t)v1122, (uint64_t)v1120, &qword_1EECD1D28);
          v765 = objc_msgSend(v707, sel_directionsSourceLocationName);
          if (v765)
          {
            v766 = v765;
            v1088 = sub_1AD63B768();
            v1099 = v767;

          }
          else
          {
            v1088 = 0;
            v1099 = 0;
          }
          v768 = objc_msgSend(v707, sel_directionsDestinationAddress);
          if (v768)
          {
            v769 = v768;
            v1087 = sub_1AD63B768();
            v1098 = v770;

          }
          else
          {
            v1087 = 0;
            v1098 = 0;
          }
          v771 = objc_msgSend(v707, sel_directionsDestinationAddressComponents);
          sub_1AD3563E8(v771, v1118);

          sub_1AD00FF28((uint64_t)v1118, (uint64_t)v1119, &qword_1EECD1D28);
          sub_1AD00FF28((uint64_t)v1119, (uint64_t)v1117, &qword_1EECD1D28);
          v772 = objc_msgSend(v707, sel_directionsDestinationLocationName);
          if (v772)
          {
            v773 = v772;
            v1086 = sub_1AD63B768();
            v1097 = v774;

          }
          else
          {
            v1086 = 0;
            v1097 = 0;
          }
          v775 = objc_msgSend(v707, sel_distance);
          v776 = v775;
          if (v775)
          {
            objc_msgSend(v775, sel_doubleValue);
            v778 = v777;

            v1085 = v778;
          }
          else
          {
            v1085 = 0;
          }
          v779 = objc_msgSend(v707, sel_image);
          sub_1AD356208(v779, (uint64_t)v1116);
          v1107 = v764;
          if (v764)
          {

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {

            sub_1AD00FF28((uint64_t)v1116, (uint64_t)v1115, &qword_1EECD1D20);
            sub_1AD00FF28((uint64_t)v1115, (uint64_t)v1114, &qword_1EECD1D20);
            v780 = objc_msgSend(v707, sel_darkImage);
            v781 = v1107;
            sub_1AD356208(v780, (uint64_t)v1113);
            v1107 = v781;
            if (v781)
            {

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            else
            {

              sub_1AD00FF28((uint64_t)v1113, (uint64_t)v1112, &qword_1EECD1D20);
              sub_1AD00FF28((uint64_t)v1112, (uint64_t)v1111, &qword_1EECD1D20);
              v794 = objc_msgSend(v707, sel_storeFrontImage);
              v795 = v1107;
              sub_1AD356208(v794, (uint64_t)v1110);
              v1107 = v795;
              if (!v795)
              {

                sub_1AD00FF28((uint64_t)v1110, (uint64_t)v1109, &qword_1EECD1D20);
                sub_1AD00FF28((uint64_t)v1109, (uint64_t)v1108, &qword_1EECD1D20);
                v813 = objc_msgSend(v707, sel_isPointOfInterest);

                *((_QWORD *)&v1029 + 1) = v1097;
                *(_QWORD *)&v1029 = v1086;
                *((_QWORD *)&v1026 + 1) = v1098;
                *(_QWORD *)&v1026 = v1087;
                *((_QWORD *)&v1025 + 1) = v1099;
                *(_QWORD *)&v1025 = v1088;
                *((_QWORD *)&v1024 + 1) = v1100;
                *(_QWORD *)&v1024 = v1089;
                *((_QWORD *)&v1023 + 1) = v1101;
                *(_QWORD *)&v1023 = v1095;
                *((_QWORD *)&v1022 + 1) = v1102;
                *(_QWORD *)&v1022 = v1096;
                v814 = v1107;
                sub_1AD238094((uint64_t)v1105, (uint64_t)v1106, v1104, v729, (uint64_t)v1125, (uint64_t)v1103, v739, (uint64_t)v1132, v1131, v1022, v1023, (uint64_t)v1090, v759 == 0, v1024, (uint64_t)v1120, v1025, v1026, (uint64_t)v1117, v1029,
                  v1085,
                  v776 == 0,
                  (uint64_t)v1114,
                  (uint64_t)v1111,
                  (uint64_t)v1108,
                  v813);
                v1107 = v814;
                if (!v814)
                {
                  v254 = v1061;
                  memcpy(v1061, v1131, 0x42AuLL);
                  v255 = v1093;
                  goto LABEL_78;
                }
                return;
              }

              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1AD29594C(v1112);
            }
            sub_1AD29594C(v1115);
          }
          sub_1AD29739C(v1119);
          sub_1AD29739C((uint64_t *)v1122);
          sub_1AD29594C(v1133);
        }
        sub_1AD29739C((uint64_t *)&v1129);
        return;
      }
      objc_opt_self();
      v718 = swift_dynamicCastObjCClass();
      if (!v718)
      {
        objc_opt_self();
        v744 = swift_dynamicCastObjCClass();
        if (v744)
        {
          v143 = (char *)v744;
          v630 = (uint64_t *)v443;
          v745 = objc_msgSend(v143, sel_name);
          if (!v745)
            goto LABEL_486;
          v746 = v745;
          v747 = sub_1AD63B768();
          v749 = v748;

LABEL_487:
          v790 = objc_msgSend(v143, sel_icon);
          v791 = v1107;
          sub_1AD356208(v790, (uint64_t)&v1129);
          v1107 = v791;
          if (v791)
          {

            goto LABEL_408;
          }

          sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
          sub_1AD00FF28((uint64_t)v1128, (uint64_t)v1125, &qword_1EECD1D20);
          v796 = objc_msgSend(v143, sel_numberOfPublishedCollections);

          v797 = v1107;
          sub_1AD23A72C(v747, v749, (uint64_t)v1125, v796, v1131);
          v1107 = v797;
          if (!v797)
          {
            v798 = v1131[7];
            v254 = v1040;
            *((_OWORD *)v1040 + 6) = v1131[6];
            *((_OWORD *)v254 + 7) = v798;
            *((_OWORD *)v254 + 8) = v1131[8];
            v799 = v1131[3];
            *((_OWORD *)v254 + 2) = v1131[2];
            *((_OWORD *)v254 + 3) = v799;
            v800 = v1131[5];
            *((_OWORD *)v254 + 4) = v1131[4];
            *((_OWORD *)v254 + 5) = v800;
            v801 = v1131[1];
            *(_OWORD *)v254 = v1131[0];
            *((_OWORD *)v254 + 1) = v801;
            v255 = v1093;
            goto LABEL_78;
          }
          return;
        }
        objc_opt_self();
        v782 = swift_dynamicCastObjCClass();
        if (v782)
        {
          v783 = (void *)v782;
          v784 = v443;
          v785 = objc_msgSend(v783, sel_name);
          if (v785)
          {
            v786 = v785;
            v787 = sub_1AD63B768();
            v789 = v788;

          }
          else
          {
            v787 = 0;
            v789 = 0;
          }
          v803 = objc_msgSend(v783, sel_type);
          if (v803)
          {
            v804 = v803;
            v805 = sub_1AD63B768();
            v807 = v806;

          }
          else
          {
            v805 = 0;
            v807 = 0;
          }
          v815 = objc_msgSend(v783, sel_size);
          v816 = objc_msgSend(v783, sel_thumbnail);
          v817 = v1107;
          sub_1AD356208(v816, (uint64_t)v1131);
          v1107 = v817;
          if (v817)
          {

            goto LABEL_201;
          }

          sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
          sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
          v818 = objc_msgSend(v783, sel_icon);
          v819 = v1107;
          sub_1AD356208(v818, (uint64_t)v1125);
          v1107 = v819;
          if (!v819)
          {

            sub_1AD00FF28((uint64_t)v1125, (uint64_t)v1122, &qword_1EECD1D20);
            sub_1AD00FF28((uint64_t)v1122, (uint64_t)v1121, &qword_1EECD1D20);
            v830 = objc_msgSend(v783, sel_creationDate);
            if (v830)
            {
              v831 = v830;
              v832 = v1035;
              sub_1AD63B024();

              v833 = sub_1AD63B03C();
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v833 - 8) + 56))(v832, 0, 1, v833);
            }
            else
            {

              v847 = sub_1AD63B03C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v847 - 8) + 56))(v1035, 1, 1, v847);
            }
            v848 = v1107;
            sub_1AD23AD88(v787, v789, v805, v807, (uint64_t)v815, (uint64_t)v1128, (uint64_t)v1121, v1035, v1047);
            v1107 = v848;
            if (!v848)
            {
              v254 = v1047;
              v255 = v1093;
              goto LABEL_78;
            }
            return;
          }

          goto LABEL_257;
        }
        objc_opt_self();
        if (swift_dynamicCastObjCClass())
        {

          v802 = v1107;
          sub_1AD2F5D68(0, 0xE000000000000000, v1131);
          v1107 = v802;
          if (!v802)
          {
            v254 = v1036;
            *v1036 = v1131[0];
            v255 = v1093;
            goto LABEL_78;
          }
          return;
        }
        objc_opt_self();
        v820 = swift_dynamicCastObjCClass();
        if (v820)
        {
          v821 = (void *)v820;
          v822 = v443;
          v823 = objc_msgSend(v821, sel_combinedTitle);
          if (v823)
          {
            v824 = v823;
            v1105 = sub_1AD63B768();
            v1106 = v825;

          }
          else
          {
            v1105 = 0;
            v1106 = 0;
          }
          v843 = objc_msgSend(v821, sel_title);
          if (v843)
          {
            v844 = v843;
            v1104 = sub_1AD63B768();
            v846 = v845;

          }
          else
          {
            v1104 = 0;
            v846 = 0;
          }
          v849 = objc_msgSend(v821, sel_subtitle);
          if (v849)
          {
            v850 = v849;
            v851 = sub_1AD63B768();
            v853 = v852;

          }
          else
          {
            v851 = 0;
            v853 = 0;
          }
          v854 = objc_msgSend(v821, sel_footnote);
          if (v854)
          {
            v855 = v854;
            v856 = sub_1AD63B768();
            v858 = v857;

          }
          else
          {
            v856 = 0;
            v858 = 0;
          }
          v859 = objc_msgSend(v821, sel_icon);
          v860 = v1107;
          sub_1AD356208(v859, (uint64_t)&v1129);
          v1107 = v860;
          if (!v860)
          {

            sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
            sub_1AD00FF28((uint64_t)v1128, (uint64_t)v1125, &qword_1EECD1D20);
            v861 = v1107;
            sub_1AD23B798((uint64_t)v1105, (uint64_t)v1106, v1104, v846, v851, v853, v856, v858, v1131, (uint64_t)v1125);
            v1107 = v861;
            if (!v861)
            {
              v862 = v1131[9];
              v254 = v1048;
              *((_OWORD *)v1048 + 8) = v1131[8];
              *((_OWORD *)v254 + 9) = v862;
              *((_OWORD *)v254 + 10) = v1131[10];
              *(_OWORD *)((char *)v254 + 169) = *(_OWORD *)((char *)&v1131[10] + 9);
              v863 = v1131[5];
              *((_OWORD *)v254 + 4) = v1131[4];
              *((_OWORD *)v254 + 5) = v863;
              v864 = v1131[7];
              *((_OWORD *)v254 + 6) = v1131[6];
              *((_OWORD *)v254 + 7) = v864;
              v865 = v1131[1];
              *(_OWORD *)v254 = v1131[0];
              *((_OWORD *)v254 + 1) = v865;
              v866 = v1131[3];
              *((_OWORD *)v254 + 2) = v1131[2];
              *((_OWORD *)v254 + 3) = v866;
              v255 = v1093;
              goto LABEL_78;
            }
            return;
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_201:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return;
        }
        objc_opt_self();
        v837 = swift_dynamicCastObjCClass();
        if (!v837)
        {
          objc_opt_self();
          v867 = swift_dynamicCastObjCClass();
          if (v867)
          {
            v868 = (void *)v867;
            v869 = v443;
            v870 = objc_msgSend(v868, sel_title);
            if (v870)
            {
              v871 = v870;
              v1106 = (_OWORD *)sub_1AD63B768();
              v873 = v872;

            }
            else
            {
              v1106 = 0;
              v873 = 0;
            }
            v894 = objc_msgSend(v868, sel_photoCount);
            v895 = objc_msgSend(v868, sel_videoCount);
            v896 = objc_msgSend(v868, sel_otherItemCount);
            v897 = objc_msgSend(v868, sel_keyPhoto);
            v898 = v1107;
            sub_1AD356208(v897, (uint64_t)v1131);
            v1107 = v898;
            if (v898)
            {

              goto LABEL_408;
            }

            sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
            sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
            v899 = objc_msgSend(v868, sel_expirationDate);
            if (v899)
            {
              v900 = v899;
              v901 = v1057;
              sub_1AD63B024();

              v902 = sub_1AD63B03C();
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v902 - 8) + 56))(v901, 0, 1, v902);
            }
            else
            {
              v912 = sub_1AD63B03C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v912 - 8) + 56))(v1057, 1, 1, v912);
            }
            v913 = objc_msgSend(v868, sel_earliestAssetDate);
            if (v913)
            {
              v914 = v913;
              v915 = v1059;
              sub_1AD63B024();

              v916 = sub_1AD63B03C();
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v916 - 8) + 56))(v915, 0, 1, v916);
            }
            else
            {
              v917 = sub_1AD63B03C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v917 - 8) + 56))(v1059, 1, 1, v917);
            }
            v918 = objc_msgSend(v868, sel_latestAssetDate);
            if (v918)
            {
              v919 = v918;
              v920 = v1058;
              sub_1AD63B024();

              v921 = sub_1AD63B03C();
              (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v921 - 8) + 56))(v920, 0, 1, v921);
            }
            else
            {

              v922 = sub_1AD63B03C();
              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v922 - 8) + 56))(v1058, 1, 1, v922);
            }
            v923 = v1107;
            sub_1AD23C724((uint64_t)v1106, v873, (uint64_t)v894, (uint64_t)v895, (uint64_t)v896, (uint64_t)v1128, v1057, v1059, v1053, v1058);
            v1107 = v923;
            if (!v923)
            {
              v254 = v1053;
              v255 = v1093;
              goto LABEL_78;
            }
          }
          else
          {
            objc_opt_self();
            v886 = swift_dynamicCastObjCClass();
            if (v886)
            {
              v887 = (void *)v886;
              v888 = v443;
              v889 = objc_msgSend(v887, sel_status);
              v890 = v889;
              if (v889)
              {
                v891 = objc_msgSend(v889, sel_string);

                v890 = (void *)sub_1AD63B768();
                v893 = v892;

              }
              else
              {

                v893 = 0;
              }
              v911 = v1107;
              sub_1AD2F5D7C((uint64_t)v890, v893, v1131);
              v1107 = v911;
              if (!v911)
              {
                v254 = v1041;
                *v1041 = v1131[0];
                v255 = v1093;
                goto LABEL_78;
              }
            }
            else
            {
              objc_opt_self();
              v903 = swift_dynamicCastObjCClass();
              if (v903)
              {
                v904 = (void *)v903;
                v905 = v443;
                v906 = objc_msgSend(v904, sel_message);
                if (v906)
                {
                  v907 = v906;
                  v908 = sub_1AD63B768();
                  v910 = v909;

                }
                else
                {
                  v908 = 0;
                  v910 = 0;
                }
                v930 = objc_msgSend(v904, sel_originatorDisplayName);
                if (v930)
                {
                  v931 = v930;
                  v932 = sub_1AD63B768();
                  v934 = v933;

                }
                else
                {

                  v932 = 0;
                  v934 = 0;
                }
                v1135.value._countAndFlagsBits = v932;
                v1135.value._object = v934;
                v935 = v1107;
                sub_1AD2F5E44(v908, v910, v1135);
                v1107 = v935;
                if (!v935)
                {
                  v936 = v1131[1];
                  v254 = v1045;
                  *v1045 = v1131[0];
                  *((_OWORD *)v254 + 1) = v936;
                  v255 = v1093;
                  goto LABEL_78;
                }
              }
              else
              {
                objc_opt_self();
                v924 = (void *)swift_dynamicCastObjCClass();
                if (v924)
                {
                  v925 = objc_msgSend(v924, sel_subtitle);
                  if (v925)
                  {
                    v926 = v925;
                    v927 = sub_1AD63B768();
                    v929 = v928;

                  }
                  else
                  {

                    v927 = 0;
                    v929 = 0;
                  }
                  v945 = v1107;
                  sub_1AD2F5D90(v927, v929, v1131);
                  v1107 = v945;
                  if (!v945)
                  {
                    v254 = v1042;
                    *v1042 = v1131[0];
                    v255 = v1093;
                    goto LABEL_78;
                  }
                }
                else
                {
                  objc_opt_self();
                  v937 = swift_dynamicCastObjCClass();
                  if (v937)
                  {
                    v938 = (void *)v937;
                    v939 = v443;
                    v940 = objc_msgSend(v938, sel_name);
                    if (v940)
                    {
                      v941 = v940;
                      v942 = sub_1AD63B768();
                      v944 = v943;

                    }
                    else
                    {
                      v942 = 0;
                      v944 = 0;
                    }
                    v952 = objc_msgSend(v938, sel_eventDate);
                    if (v952)
                    {
                      v953 = v952;
                      v954 = v1055;
                      sub_1AD63B024();

                      v955 = sub_1AD63B03C();
                      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v955 - 8) + 56))(v954, 0, 1, v955);
                    }
                    else
                    {
                      v956 = sub_1AD63B03C();
                      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v956 - 8) + 56))(v1055, 1, 1, v956);
                    }
                    v957 = objc_msgSend(v938, sel_expirationDate);
                    if (v957)
                    {
                      v958 = v957;
                      v959 = v1056;
                      sub_1AD63B024();

                      v960 = sub_1AD63B03C();
                      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v960 - 8) + 56))(v959, 0, 1, v960);
                    }
                    else
                    {

                      v961 = sub_1AD63B03C();
                      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v961 - 8) + 56))(v1056, 1, 1, v961);
                    }
                    v962 = v1107;
                    sub_1AD23D518(v942, v944, v1055, v1056, v1051);
                    v1107 = v962;
                    if (!v962)
                    {
                      v254 = v1051;
                      v255 = v1093;
                      goto LABEL_78;
                    }
                  }
                  else
                  {
                    objc_opt_self();
                    v946 = (void *)swift_dynamicCastObjCClass();
                    if (v946)
                    {
                      v947 = objc_msgSend(v946, sel_subtitle);
                      if (v947)
                      {
                        v948 = v947;
                        v949 = sub_1AD63B768();
                        v951 = v950;

                      }
                      else
                      {

                        v949 = 0;
                        v951 = 0;
                      }
                      v964 = v1107;
                      sub_1AD2F5DA4(v949, v951, v1131);
                      v1107 = v964;
                      if (!v964)
                      {
                        v254 = v1046;
                        *v1046 = v1131[0];
                        v255 = v1093;
                        goto LABEL_78;
                      }
                    }
                    else
                    {
                      objc_opt_self();
                      if (swift_dynamicCastObjCClass())
                      {

                        v963 = v1107;
                        sub_1AD2F5DB8(0, 0xE000000000000000, v1131);
                        v1107 = v963;
                        if (!v963)
                        {
                          v254 = v1044;
                          *v1044 = v1131[0];
                          v255 = v1093;
                          goto LABEL_78;
                        }
                      }
                      else
                      {
                        objc_opt_self();
                        v965 = (void *)swift_dynamicCastObjCClass();
                        if (v965)
                        {
                          v966 = objc_msgSend(v965, sel_title);
                          if (v966)
                          {
                            v967 = v966;
                            v968 = sub_1AD63B768();
                            v970 = v969;

                          }
                          else
                          {

                            v968 = 0;
                            v970 = 0;
                          }
                          v979 = v1107;
                          sub_1AD2F5DCC(v968, v970, v1131);
                          v1107 = v979;
                          if (!v979)
                          {
                            v254 = v1049;
                            *v1049 = v1131[0];
                            v255 = v1093;
                            goto LABEL_78;
                          }
                        }
                        else
                        {
                          objc_opt_self();
                          v971 = swift_dynamicCastObjCClass();
                          if (v971)
                          {
                            v972 = (void *)v971;
                            v973 = v443;
                            v974 = objc_msgSend(v972, sel_groupName);
                            if (v974)
                            {
                              v975 = v974;
                              v976 = sub_1AD63B768();
                              v978 = v977;

                            }
                            else
                            {
                              v976 = 0;
                              v978 = 0;
                            }
                            v987 = objc_msgSend(v972, sel_urlParameters);
                            if (v987)
                            {
                              v988 = v987;
                              v989 = sub_1AD63B768();
                              v991 = v990;

                            }
                            else
                            {

                              v989 = 0;
                              v991 = 0;
                            }
                            v1136.value._countAndFlagsBits = v989;
                            v1136.value._object = v991;
                            v992 = v1107;
                            sub_1AD2F5E58(v976, v978, v1136);
                            v1107 = v992;
                            if (!v992)
                            {
                              v993 = v1131[1];
                              v254 = v1052;
                              *v1052 = v1131[0];
                              *((_OWORD *)v254 + 1) = v993;
                              v255 = v1093;
                              goto LABEL_78;
                            }
                          }
                          else
                          {
                            objc_opt_self();
                            v980 = swift_dynamicCastObjCClass();
                            if (v980)
                            {
                              v981 = (void *)v980;
                              v982 = v443;
                              v983 = objc_msgSend(v981, sel_title);
                              if (v983)
                              {
                                v984 = v983;
                                v1106 = (_OWORD *)sub_1AD63B768();
                                v986 = v985;

                              }
                              else
                              {
                                v1106 = 0;
                                v986 = 0;
                              }
                              v1006 = objc_msgSend(v981, sel_subtitle);
                              if (v1006)
                              {
                                v1007 = v1006;
                                v1105 = sub_1AD63B768();
                                v1009 = v1008;

                              }
                              else
                              {
                                v1105 = 0;
                                v1009 = 0;
                              }
                              v1010 = objc_msgSend(v981, sel_information);
                              if (v1010)
                              {
                                v1011 = v1010;
                                v1104 = sub_1AD63B768();
                                v1013 = v1012;

                              }
                              else
                              {
                                v1104 = 0;
                                v1013 = 0;
                              }
                              type metadata accessor for LinkPresentation.SharedObjectMetadata(0);
                              v1014 = swift_allocBox();
                              v1016 = v1015;
                              v1017 = objc_msgSend(v981, sel_icon);
                              v1018 = v1107;
                              sub_1AD356208(v1017, (uint64_t)v1131);
                              v1107 = v1018;
                              if (v1018)
                              {

                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                              }
                              else
                              {

                                sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
                                sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
                                LODWORD(v1103) = objc_msgSend(v981, sel_isCollaboration);
                                v1019 = objc_msgSend(v981, sel_specialization);
                                v1020 = v1107;
                                sub_1AD356278(v1019, v1063);
                                v1107 = v1020;
                                if (v1020)
                                {

                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  swift_bridgeObjectRelease();
                                  sub_1AD29594C((uint64_t *)&v1129);
                                }
                                else
                                {

                                  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1060 + 48))(v1063, 1, v1062) == 1)
                                  {
                                    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1092 + 56))(v1064, 1, 1, v1093);
                                    sub_1AD009758(v1063, &qword_1EECDB0C0);
                                  }
                                  else
                                  {
                                    sub_1AD00FF28(v1063, v1064, &qword_1EECD1CC0);
                                  }
                                  v1021 = v1107;
                                  sub_1AD23E82C((uint64_t)v1106, v986, (uint64_t)v1105, v1009, v1104, v1013, (uint64_t)v1128, (char)v1103, v1016, v1064);
                                  v1107 = v1021;
                                  if (!v1021)
                                  {
                                    v272 = v1091;
                                    *v1091 = v1014;
                                    v255 = v1093;
                                    swift_storeEnumTagMultiPayload();
                                    goto LABEL_80;
                                  }
                                }
                              }
                              swift_deallocBox();
                              return;
                            }
                            v994 = sub_1AD63BB64();
                            v995 = *sub_1AD010D88();
                            v996 = swift_allocObject();
                            *(_QWORD *)(v996 + 16) = v443;
                            v997 = swift_allocObject();
                            *(_BYTE *)(v997 + 16) = 32;
                            v998 = swift_allocObject();
                            *(_BYTE *)(v998 + 16) = 8;
                            v999 = swift_allocObject();
                            *(_QWORD *)(v999 + 16) = sub_1AD36EA48;
                            *(_QWORD *)(v999 + 24) = v996;
                            v1000 = swift_allocObject();
                            *(_QWORD *)(v1000 + 16) = sub_1AD36EA9C;
                            *(_QWORD *)(v1000 + 24) = v999;
                            v1001 = swift_allocObject();
                            *(_QWORD *)(v1001 + 16) = sub_1AD36EAC0;
                            *(_QWORD *)(v1001 + 24) = v1000;
                            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E3170);
                            v1002 = swift_allocObject();
                            *(_OWORD *)(v1002 + 16) = xmmword_1AD64CE50;
                            *(_QWORD *)(v1002 + 32) = sub_1AD36EA60;
                            *(_QWORD *)(v1002 + 40) = v997;
                            *(_QWORD *)(v1002 + 48) = sub_1AD36EBF0;
                            *(_QWORD *)(v1002 + 56) = v998;
                            *(_QWORD *)(v1002 + 64) = sub_1AD36EAC8;
                            *(_QWORD *)(v1002 + 72) = v1001;
                            v1106 = v443;
                            swift_retain();
                            swift_retain();
                            swift_retain();
                            swift_bridgeObjectRelease();
                            LODWORD(v1104) = v994;
                            v1105 = v995;
                            if (os_log_type_enabled(v995, (os_log_type_t)v994))
                            {
                              v1003 = (uint8_t *)sub_1AD43D0D8();
                              v1004 = swift_slowAlloc();
                              *(_QWORD *)&v1128[0] = 0;
                              *(_QWORD *)&v1125[0] = v1004;
                              *(_WORD *)v1003 = 258;
                              *(_QWORD *)&v1129 = v1003 + 2;
                              *(_QWORD *)&v1131[0] = sub_1AD36EA60;
                              *((_QWORD *)&v1131[0] + 1) = v997;
                              v1005 = v1107;
                              sub_1AD43D0EC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v1131, (uint64_t)&v1129, (uint64_t)v1128, (uint64_t)v1125);
                              if (!v1005)
                              {
                                swift_release();
                                *(_QWORD *)&v1131[0] = sub_1AD36EBF0;
                                *((_QWORD *)&v1131[0] + 1) = v998;
                                sub_1AD43D0EC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v1131, (uint64_t)&v1129, (uint64_t)v1128, (uint64_t)v1125);
                                swift_release();
                                *(_QWORD *)&v1131[0] = sub_1AD36EAC8;
                                *((_QWORD *)&v1131[0] + 1) = v1001;
                                sub_1AD43D0EC((uint64_t (**)(uint64_t, uint64_t, uint64_t))v1131, (uint64_t)&v1129, (uint64_t)v1128, (uint64_t)v1125);
                                v1107 = 0;
                                swift_release();
                                _os_log_impl(&dword_1ACFC8000, v1105, (os_log_type_t)v1104, "Unable to handle specialized metadata of type: %s", v1003, 0xCu);
                                swift_arrayDestroy();
                                MEMORY[0x1AF44BED4](v1004, -1, -1);
                                sub_1AD43D0E0();
                              }

                              __break(1u);
                              __break(1u);
                            }
                            else
                            {
                              swift_release();
                              swift_release();
                              swift_release();

                              (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1092 + 56))(v1094, 1, 1, v1093);
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
          return;
        }
        v635 = v837;
        v631 = (uint64_t)v443;
        v838 = objc_msgSend((id)v635, sel_title);
        if (!v838)
          goto LABEL_551;
        v839 = v838;
        v840 = sub_1AD63B768();
        v842 = v841;

LABEL_552:
        v874 = objc_msgSend((id)v635, sel_subtitle);
        if (v874)
        {
          v875 = v874;
          v876 = sub_1AD63B768();
          v878 = v877;

        }
        else
        {
          v876 = 0;
          v878 = 0;
        }
        v879 = objc_msgSend((id)v635, sel_artwork);
        v880 = v1107;
        sub_1AD356208(v879, (uint64_t)&v1129);
        v1107 = v880;
        if (!v880)
        {

          sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
          sub_1AD00FF28((uint64_t)v1128, (uint64_t)v1125, &qword_1EECD1D20);
          v881 = v1107;
          sub_1AD23C05C(v840, v842, v876, v878, (uint64_t)v1125, v1131);
          v1107 = v881;
          if (!v881)
          {
            v882 = v1131[7];
            v254 = v1043;
            *((_OWORD *)v1043 + 6) = v1131[6];
            *((_OWORD *)v254 + 7) = v882;
            *((_OWORD *)v254 + 8) = v1131[8];
            *(_OWORD *)((char *)v254 + 137) = *(_OWORD *)((char *)&v1131[8] + 9);
            v883 = v1131[3];
            *((_OWORD *)v254 + 2) = v1131[2];
            *((_OWORD *)v254 + 3) = v883;
            v884 = v1131[5];
            *((_OWORD *)v254 + 4) = v1131[4];
            *((_OWORD *)v254 + 5) = v884;
            v885 = v1131[1];
            *(_OWORD *)v254 = v1131[0];
            *((_OWORD *)v254 + 1) = v885;
            v255 = v1093;
            goto LABEL_78;
          }
          return;
        }

LABEL_253:
        swift_bridgeObjectRelease();
        goto LABEL_408;
      }
      v719 = (void *)v718;
      v720 = v443;
      v721 = objc_msgSend(v719, sel_name);
      if (v721)
      {
        v722 = v721;
        v723 = sub_1AD63B768();
        v725 = v724;

      }
      else
      {
        v723 = 0;
        v725 = 0;
      }
      v750 = objc_msgSend(v719, sel_numberOfItems);
      v751 = objc_msgSend(v719, sel_icon);
      v752 = v1107;
      sub_1AD356208(v751, (uint64_t)&v1129);
      v1107 = v752;
      if (v752)
      {

        goto LABEL_408;
      }

      sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
      sub_1AD00FF28((uint64_t)v1128, (uint64_t)v1125, &qword_1EECD1D20);
      v756 = objc_msgSend(v719, sel_image);
      v757 = v1107;
      sub_1AD356208(v756, (uint64_t)v1122);
      v1107 = v757;
      if (!v757)
      {

        sub_1AD00FF28((uint64_t)v1122, (uint64_t)v1121, &qword_1EECD1D20);
        sub_1AD00FF28((uint64_t)v1121, (uint64_t)v1120, &qword_1EECD1D20);
        v792 = objc_msgSend(v719, sel_darkImage);
        v793 = v1107;
        sub_1AD356208(v792, (uint64_t)v1119);
        v1107 = v793;
        if (v793)
        {

          swift_bridgeObjectRelease();
        }
        else
        {

          sub_1AD00FF28((uint64_t)v1119, (uint64_t)v1118, &qword_1EECD1D20);
          sub_1AD00FF28((uint64_t)v1118, (uint64_t)v1117, &qword_1EECD1D20);
          v808 = objc_msgSend(v719, sel_addresses);
          if (v808)
          {
            v809 = v808;
            sub_1AD32F2CC(0, &qword_1EECDB0C8);
            v810 = sub_1AD63B9B4();

            v811 = v1107;
            v812 = sub_1AD355F58(v810);
            v1107 = v811;
            swift_bridgeObjectRelease();
          }
          else
          {
            v812 = MEMORY[0x1E0DEE9D8];
          }
          v826 = objc_msgSend(v719, sel_publisherName);
          if (v826)
          {
            v827 = v826;
            v1106 = (_OWORD *)sub_1AD63B768();
            v829 = v828;

          }
          else
          {
            v1106 = 0;
            v829 = 0;
          }
          v834 = objc_msgSend(v719, sel_publisherIcon);
          v835 = v1107;
          sub_1AD356208(v834, (uint64_t)v1134);
          v1107 = v835;
          if (!v835)
          {

            sub_1AD00FF28((uint64_t)v1134, (uint64_t)v1133, &qword_1EECD1D20);
            sub_1AD00FF28((uint64_t)v1133, (uint64_t)v1132, &qword_1EECD1D20);
            v836 = v1107;
            sub_1AD239B38(v723, v725, v750, (uint64_t)v1125, (uint64_t)v1120, (uint64_t)v1117, v812, (uint64_t)v1106, v1131, v829, (uint64_t)v1132);
            v1107 = v836;
            if (!v836)
            {
              v254 = v1050;
              memcpy(v1050, v1131, 0x229uLL);
              v255 = v1093;
              goto LABEL_78;
            }
            return;
          }

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1AD29594C((uint64_t *)v1118);
        }
        sub_1AD29594C((uint64_t *)v1121);
LABEL_431:
        v249 = (uint64_t *)v1128;
        goto LABEL_92;
      }

    }
    swift_bridgeObjectRelease();
    goto LABEL_431;
  }
  v342 = (void *)v341;
  v343 = v1106;
  v344 = objc_msgSend(v342, sel_storeIdentifier);
  if (v344)
  {
    v345 = v344;
    v346 = (_OWORD *)sub_1AD63B768();
    v348 = v347;

  }
  else
  {
    v346 = 0;
    v348 = 0;
  }
  v387 = objc_msgSend(v342, sel_storeIdentifier);
  if (v387)
  {
    v388 = v387;
    v389 = sub_1AD63B768();
    v391 = v390;

  }
  else
  {
    v389 = 0;
    v391 = 0;
  }
  v1105 = v389;
  v392 = objc_msgSend(v342, sel_name);
  if (v392)
  {
    v393 = v392;
    v1103 = (_BYTE *)sub_1AD63B768();
    v395 = v394;

  }
  else
  {
    v1103 = 0;
    v395 = 0;
  }
  v1106 = v346;
  v396 = objc_msgSend(v342, sel_author);
  if (v396)
  {
    v397 = v396;
    v1102 = sub_1AD63B768();
    v399 = v398;

  }
  else
  {
    v1102 = 0;
    v399 = 0;
  }
  v400 = objc_msgSend(v342, sel_artwork);
  v401 = v1107;
  sub_1AD356208(v400, (uint64_t)v1131);
  v1107 = v401;
  if (v401)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_201;
  }
  v1101 = (uint64_t *)v391;

  sub_1AD00FF28((uint64_t)v1131, (uint64_t)&v1129, &qword_1EECD1D20);
  sub_1AD00FF28((uint64_t)&v1129, (uint64_t)v1128, &qword_1EECD1D20);
  v402 = objc_msgSend(v342, sel_artworkMetadata);
  v403 = v1107;
  sub_1AD356304(v402, (uint64_t (*)(void *))sub_1AD36DBD4, (uint64_t (*)(void))type metadata accessor for LinkPresentation.ArtworkMetadata, v162);
  v1107 = v403;
  if (v403)
  {

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_257;
  }

  v422 = objc_msgSend(v342, sel_hasSpineOnRight);
  v254 = v1033;
  v423 = v1107;
  sub_1AD2302A0((uint64_t)v1106, v348, (uint64_t)v1105, (uint64_t)v1101, (uint64_t)v1103, v395, v1102, v399, v1033, (uint64_t)v1128, v162, v422);
  v1107 = v423;
  if (!v423)
  {
    v255 = v1093;
    goto LABEL_78;
  }
}

id sub_1AD366AC8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  double v5;
  double v6;
  double v7;
  double v8;
  char v9;
  double v10;
  double v11;
  double v12;
  double v13;
  id v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  id v19;
  id v20;
  char v22;

  v1 = *v0;
  v3 = v0[2];
  v2 = v0[3];
  v4 = v0[5];
  v6 = *((double *)v0 + 6);
  v5 = *((double *)v0 + 7);
  v8 = *((double *)v0 + 8);
  v7 = *((double *)v0 + 9);
  v9 = *((_BYTE *)v0 + 80);
  v11 = *((double *)v0 + 11);
  v10 = *((double *)v0 + 12);
  v13 = *((double *)v0 + 13);
  v12 = *((double *)v0 + 14);
  v22 = *((_BYTE *)v0 + 120);
  v14 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPImageAttachmentSubstitute), sel_init);
  objc_msgSend(v14, sel_setIndex_, v1);
  v15 = v14;
  if (v3)
    v16 = (void *)sub_1AD63B744();
  else
    v16 = 0;
  objc_msgSend(v14, sel_setMIMEType_, v16);

  v17 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPImageProperties), (SEL)&selRef_setType_);
  objc_msgSend(v17, sel_setType_, v2);
  if (v4)
    v18 = (void *)sub_1AD63B744();
  else
    v18 = 0;
  objc_msgSend(v17, sel_setAccessibilityText_, v18);

  if ((v9 & 1) != 0)
  {
    v19 = 0;
  }
  else
  {
    v19 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPPlatformColor), (SEL)&selRef_setType_);
    objc_msgSend(v19, sel_setR_, v6);
    objc_msgSend(v19, sel_setG_, v5);
    objc_msgSend(v19, sel_setB_, v8);
    objc_msgSend(v19, sel_setA_, v7);
  }
  objc_msgSend(v17, sel_setOverlaidTextColor_, v19);

  if ((v22 & 1) != 0)
  {
    v20 = 0;
  }
  else
  {
    v20 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPPlatformColor), (SEL)&selRef_setType_);
    objc_msgSend(v20, sel_setR_, v11);
    objc_msgSend(v20, sel_setG_, v10);
    objc_msgSend(v20, sel_setB_, v13);
    objc_msgSend(v20, sel_setA_, v12);
  }
  objc_msgSend(v17, sel_setDominantColor_, v20);

  objc_msgSend(v14, sel_setProperties_, v17);
  return v14;
}

id sub_1AD366D4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPIconMetadata), sel_init);
  v6 = type metadata accessor for LinkPresentation.IconMetadata(0);
  sub_1ACFF64C0(v1 + *(int *)(v6 + 20), (uint64_t)v4, &qword_1ED2E1A40);
  v7 = sub_1AD63AF28();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
  {
    v9 = (void *)sub_1AD63AE98();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  objc_msgSend(v5, sel_setURL_, v9);

  if (*(_QWORD *)(v1 + *(int *)(v6 + 24) + 8))
    v10 = (void *)sub_1AD63B744();
  else
    v10 = 0;
  objc_msgSend(v5, sel_setAccessibilityText_, v10);

  return v5;
}

id sub_1AD366E9C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  void *v5;
  id v6;
  void *v7;

  v1 = *v0;
  v2 = v0[2];
  v3 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPARAssetAttachmentSubstitute), sel_init);
  objc_msgSend(v3, sel_setIndex_, v1);
  v4 = v3;
  if (v2)
    v5 = (void *)sub_1AD63B744();
  else
    v5 = 0;
  objc_msgSend(v3, sel_setMIMEType_, v5);

  v6 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPARAssetProperties), sel_init);
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_setAccessibilityText_, v7);

  objc_msgSend(v3, sel_setProperties_, v6);
  return v3;
}

id sub_1AD366FC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  void *v18;
  void *v19;
  uint64_t v21;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v21 - v6;
  v8 = (int *)type metadata accessor for LinkPresentation.Video(0);
  v9 = *(_QWORD *)(v1 + v8[8]);
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 16);
    v11 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPVideoAttachmentSubstitute), sel_init);
    objc_msgSend(v11, sel_setIndex_, v10);
  }
  else
  {
    v11 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPVideo), sel_init);
  }
  v12 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPVideoProperties), sel_init);
  objc_msgSend(v12, sel_setHasAudio_, *(unsigned __int8 *)(v1 + v8[9]));
  swift_bridgeObjectRetain();
  v13 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  objc_msgSend(v12, sel_setAccessibilityText_, v13);

  if (*(_QWORD *)(v1 + v8[6] + 8))
    v14 = (void *)sub_1AD63B744();
  else
    v14 = 0;
  objc_msgSend(v11, sel_setMIMEType_, v14);

  sub_1ACFF64C0(v1 + v8[5], (uint64_t)v7, &qword_1ED2E1A40);
  v15 = sub_1AD63AF28();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  v18 = 0;
  if (v17(v7, 1, v15) != 1)
  {
    v18 = (void *)sub_1AD63AE98();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v15);
  }
  objc_msgSend(v11, sel_setStreamingURL_, v18);

  sub_1ACFF64C0(v1, (uint64_t)v5, &qword_1ED2E1A40);
  if (v17(v5, 1, v15) == 1)
  {
    v19 = 0;
  }
  else
  {
    v19 = (void *)sub_1AD63AE98();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v5, v15);
  }
  objc_msgSend(v11, sel_setYouTubeURL_, v19);

  objc_msgSend(v11, sel_setProperties_, v12);
  return v11;
}

id sub_1AD367270(Class *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v17;

  v5 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone(*a1), sel_init);
  v10 = (int *)a2(0);
  sub_1ACFF64C0(v5 + v10[5], (uint64_t)v8, &qword_1ED2E1A40);
  v11 = sub_1AD63AF28();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) != 1)
  {
    v13 = (void *)sub_1AD63AE98();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
  }
  objc_msgSend(v9, sel_setURL_, v13);

  if (*(_QWORD *)(v5 + v10[6] + 8))
    v14 = (void *)sub_1AD63B744();
  else
    v14 = 0;
  objc_msgSend(v9, sel_setType_, v14);

  objc_msgSend(v9, sel_setSize_, *(double *)(v5 + v10[7]), *(double *)(v5 + v10[7] + 8));
  if (*(_QWORD *)(v5 + v10[8] + 8))
    v15 = (void *)sub_1AD63B744();
  else
    v15 = 0;
  objc_msgSend(v9, sel_setAccessibilityText_, v15);

  return v9;
}

id sub_1AD36741C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v11;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPAudio), sel_init);
  sub_1ACFF64C0(v1, (uint64_t)v4, &qword_1ED2E1A40);
  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    v8 = (void *)sub_1AD63AE98();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  objc_msgSend(v5, sel_setStreamingURL_, v8);

  if (*(_QWORD *)(v1 + *(int *)(type metadata accessor for LinkPresentation.Audio(0) + 20) + 8))
    v9 = (void *)sub_1AD63B744();
  else
    v9 = 0;
  objc_msgSend(v5, sel_setMIMEType_, v9);

  return v5;
}

id sub_1AD36755C(Class *a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  void *v15;
  uint64_t v17;

  v5 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = objc_msgSend(objc_allocWithZone(*a1), sel_init);
  v10 = (int *)a2(0);
  sub_1ACFF64C0(v5 + v10[5], (uint64_t)v8, &qword_1ED2E1A40);
  v11 = sub_1AD63AF28();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v8, 1, v11) != 1)
  {
    v13 = (void *)sub_1AD63AE98();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v11);
  }
  objc_msgSend(v9, sel_setURL_, v13);

  if (*(_QWORD *)(v5 + v10[6] + 8))
    v14 = (void *)sub_1AD63B744();
  else
    v14 = 0;
  objc_msgSend(v9, sel_setType_, v14);

  if (*(_QWORD *)(v5 + v10[7] + 8))
    v15 = (void *)sub_1AD63B744();
  else
    v15 = 0;
  objc_msgSend(v9, sel_setAccessibilityText_, v15);

  return v9;
}

void sub_1AD3676EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t (*v76)(_QWORD);
  char *v77;
  _QWORD v78[15];
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  char *v86;
  char *v87;
  char *v88;
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  char *v116;
  char *v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  char *v125;
  char *v126;
  uint64_t *v127;
  uint64_t v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;

  v128 = 0;
  v127 = &v136;
  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CC0);
  MEMORY[0x1E0C80A78](v0);
  v124 = (char *)v78 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = type metadata accessor for LinkPresentation.SharedObjectMetadata(0);
  MEMORY[0x1E0C80A78](v121);
  v126 = (char *)v78 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v109 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
  MEMORY[0x1E0C80A78](v109);
  v116 = (char *)v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v122 = type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
  MEMORY[0x1E0C80A78](v122);
  v125 = (char *)v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v120 = type metadata accessor for LinkPresentation.FileMetadata(0);
  MEMORY[0x1E0C80A78](v120);
  v123 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v131 = sub_1AD63AF28();
  v130 = *(_QWORD *)(v131 - 8);
  MEMORY[0x1E0C80A78](v131);
  v129 = (char *)v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDACF8);
  MEMORY[0x1E0C80A78](v7);
  v133 = (char *)v78 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v132 = type metadata accessor for LinkPresentation.EncodedToken(0);
  v78[1] = *(_QWORD *)(v132 - 8);
  MEMORY[0x1E0C80A78](v132);
  v135 = (char *)v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v111 = type metadata accessor for LinkPresentation.MovieBundleMetadata(0);
  MEMORY[0x1E0C80A78](v111);
  v119 = (char *)v78 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v107 = type metadata accessor for LinkPresentation.MovieMetadata(0);
  MEMORY[0x1E0C80A78](v107);
  v118 = (char *)v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v100 = type metadata accessor for LinkPresentation.TVShowMetadata(0);
  MEMORY[0x1E0C80A78](v100);
  v108 = (char *)v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = type metadata accessor for LinkPresentation.TVSeasonMetadata(0);
  MEMORY[0x1E0C80A78](v102);
  v112 = (char *)v78 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v104 = type metadata accessor for LinkPresentation.TVEpisodeMetadata(0);
  MEMORY[0x1E0C80A78](v104);
  v115 = (char *)v78 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
  MEMORY[0x1E0C80A78](v106);
  v113 = (char *)v78 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v17 = MEMORY[0x1E0C80A78](v16);
  v88 = (char *)v78 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v81 = (char *)v78 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v78[3] = (char *)v78 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v94 = (char *)v78 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v91 = (char *)v78 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v98 = (char *)v78 - v28;
  MEMORY[0x1E0C80A78](v27);
  v93 = (char *)v78 - v29;
  v110 = type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
  MEMORY[0x1E0C80A78](v110);
  v114 = (char *)v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
  MEMORY[0x1E0C80A78](v99);
  v103 = (char *)v78 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  v95 = type metadata accessor for LinkPresentation.BookMetadata(0);
  MEMORY[0x1E0C80A78](v95);
  v96 = (char *)v78 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1C98);
  MEMORY[0x1E0C80A78](v33);
  v101 = (char *)v78 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v105 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
  MEMORY[0x1E0C80A78](v105);
  v117 = (char *)v78 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = type metadata accessor for LinkPresentation.RadioMetadata(0);
  MEMORY[0x1E0C80A78](v83);
  v89 = (char *)v78 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v92 = type metadata accessor for LinkPresentation.PlaylistMetadata(0);
  MEMORY[0x1E0C80A78](v92);
  v97 = (char *)v78 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v80 = type metadata accessor for LinkPresentation.ArtistMetadata(0);
  MEMORY[0x1E0C80A78](v80);
  v85 = (char *)v78 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v79 = type metadata accessor for LinkPresentation.MusicVideoMetadata(0);
  MEMORY[0x1E0C80A78](v79);
  v84 = (char *)v78 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v82 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
  MEMORY[0x1E0C80A78](v82);
  v86 = (char *)v78 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v42 = MEMORY[0x1E0C80A78](v41);
  v87 = (char *)v78 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x1E0C80A78](v42);
  v78[8] = (char *)v78 - v45;
  MEMORY[0x1E0C80A78](v44);
  v90 = (char *)v78 - v46;
  v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD1CB8);
  v48 = MEMORY[0x1E0C80A78](v47);
  v78[13] = (char *)v78 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = MEMORY[0x1E0C80A78](v48);
  v78[12] = (char *)v78 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v78[7] = (char *)v78 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v78[10] = (char *)v78 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v78[14] = (char *)v78 - v57;
  v58 = MEMORY[0x1E0C80A78](v56);
  v78[9] = (char *)v78 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  v78[11] = (char *)v78 - v61;
  v62 = MEMORY[0x1E0C80A78](v60);
  v78[6] = (char *)v78 - v63;
  v64 = MEMORY[0x1E0C80A78](v62);
  v78[4] = (char *)v78 - v65;
  v66 = MEMORY[0x1E0C80A78](v64);
  v67 = MEMORY[0x1E0C80A78](v66);
  v78[2] = (char *)v78 - v68;
  v69 = MEMORY[0x1E0C80A78](v67);
  v70 = MEMORY[0x1E0C80A78](v69);
  v78[5] = (char *)v78 - v71;
  v72 = MEMORY[0x1E0C80A78](v70);
  MEMORY[0x1E0C80A78](v72);
  v73 = type metadata accessor for LinkPresentation.SongMetadata(0);
  MEMORY[0x1E0C80A78](v73);
  v74 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
  MEMORY[0x1E0C80A78](v74);
  sub_1AD0D3D2C(v134, (uint64_t)v78 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0), v76);
  v77 = (char *)sub_1AD3680F4 + 4 * word_1AD67B838[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

id sub_1AD3680F4()
{
  uint64_t v0;
  _QWORD *v1;
  int *v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  void *v10;
  void *v11;
  void *v12;
  void *v13;
  uint64_t v14;
  id v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  id v20;
  void *v21;
  void *v22;
  char *v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  int v28;
  uint64_t v29;

  sub_1AD2A5214(v4, (uint64_t)v1, type metadata accessor for LinkPresentation.SongMetadata);
  sub_1AD32F2CC(0, &qword_1EECDAF88);
  v5 = objc_msgSend(objc_allocWithZone((Class)swift_getObjCClassFromMetadata()), sel_init);
  if (v1[1])
  {
    swift_bridgeObjectRetain();
    v6 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = 0;
  }
  v7 = *(_QWORD *)(v0 + 544);
  objc_msgSend(v5, sel_setStoreFrontIdentifier_, v6);

  if (v1[3])
  {
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = *(_QWORD *)(v0 + 536);
  objc_msgSend(v5, sel_setStoreIdentifier_, v8);

  if (v1[5])
  {
    swift_bridgeObjectRetain();
    v10 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 0;
  }
  objc_msgSend(v5, sel_setName_, v10);

  if (v1[7])
  {
    swift_bridgeObjectRetain();
    v11 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 0;
  }
  objc_msgSend(v5, sel_setArtist_, v11);

  if (v1[9])
  {
    swift_bridgeObjectRetain();
    v12 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 0;
  }
  objc_msgSend(v5, sel_setAlbum_, v12);

  if (v1[11])
  {
    swift_bridgeObjectRetain();
    v13 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
  }
  else
  {
    v13 = 0;
  }
  v14 = *(_QWORD *)(v0 + 208);
  objc_msgSend(v5, sel_setLyrics_, v13);

  sub_1AD00FF28((uint64_t)(v1 + 12), v0 + 1232, &qword_1EECD1D20);
  sub_1AD00FF28(v0 + 1232, v0 + 1360, &qword_1EECD1D20);
  if (sub_1AD36EAF8(v0 + 1360) == 1)
  {
    v15 = 0;
  }
  else
  {
    v16 = *(_OWORD *)(v0 + 1440);
    *(_OWORD *)(v0 + 1168) = *(_OWORD *)(v0 + 1424);
    *(_OWORD *)(v0 + 1184) = v16;
    *(_OWORD *)(v0 + 1200) = *(_OWORD *)(v0 + 1456);
    *(_OWORD *)(v0 + 1209) = *(_OWORD *)(v0 + 1465);
    v17 = *(_OWORD *)(v0 + 1376);
    *(_OWORD *)(v0 + 1104) = *(_OWORD *)(v0 + 1360);
    *(_OWORD *)(v0 + 1120) = v17;
    v18 = *(_OWORD *)(v0 + 1408);
    *(_OWORD *)(v0 + 1136) = *(_OWORD *)(v0 + 1392);
    *(_OWORD *)(v0 + 1152) = v18;
    v15 = sub_1AD366AC8();
  }
  objc_msgSend(v5, sel_setArtwork_, v15);

  sub_1ACFF64C0((uint64_t)v1 + v2[11], v3, &qword_1EECD1CB8);
  v19 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 48))(v3, 1, v19) == 1)
  {
    sub_1AD009758(v3, &qword_1EECD1CB8);
    v20 = 0;
  }
  else
  {
    v20 = sub_1AD36DDD8();
    sub_1AD066230(v3, type metadata accessor for LinkPresentation.ArtworkMetadata);
  }
  objc_msgSend(v5, sel_setArtworkMetadata_, v20);

  sub_1ACFF64C0((uint64_t)v1 + v2[12], v14, &qword_1ED2E1A40);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v14, 1, v7) == 1)
  {
    v21 = 0;
  }
  else
  {
    v21 = (void *)sub_1AD63AE98();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v14, v7);
  }
  objc_msgSend(v5, sel_setPreviewURL_, v21);

  if (*(_QWORD *)((char *)v1 + v2[13]))
  {
    swift_bridgeObjectRetain();
    v22 = (void *)sub_1AD63B990();
    swift_bridgeObjectRelease();
  }
  else
  {
    v22 = 0;
  }
  objc_msgSend(v5, sel_setOffers_, v22);

  v23 = (char *)v1 + v2[14];
  v24 = *((_QWORD *)v23 + 1);
  if (v24 == 1)
  {
    v25 = 0;
  }
  else
  {
    v26 = v23[56];
    v27 = *((_QWORD *)v23 + 6);
    v28 = *((_DWORD *)v23 + 10);
    v29 = *((_QWORD *)v23 + 4);
    *(_QWORD *)(v0 + 1104) = *(_QWORD *)v23;
    *(_QWORD *)(v0 + 1112) = v24;
    *(_OWORD *)(v0 + 1120) = *((_OWORD *)v23 + 1);
    *(_QWORD *)(v0 + 1136) = v29;
    *(_BYTE *)(v0 + 1144) = v28 & 1;
    *(_QWORD *)(v0 + 1152) = v27;
    *(_BYTE *)(v0 + 1160) = v26 & 1;
    v25 = sub_1AD36E09C();
  }
  objc_msgSend(v5, sel_setLyricExcerpt_, v25);

  sub_1AD066230((uint64_t)v1, type metadata accessor for LinkPresentation.SongMetadata);
  return v5;
}

id sub_1AD36DA28()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  void *v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  _BYTE v17[32];
  _OWORD v18[6];
  _OWORD v19[2];
  _BYTE v20[128];

  v1 = v0[1];
  sub_1AD00FF28((uint64_t)(v0 + 2), (uint64_t)v20, &qword_1EECD1D20);
  v2 = v0[19];
  v3 = v0[21];
  v4 = v0[22];
  v5 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPAssociatedApplicationMetadata), sel_init);
  if (v1)
    v6 = (void *)sub_1AD63B744();
  else
    v6 = 0;
  objc_msgSend(v5, sel_setBundleIdentifier_, v6);

  sub_1AD00FF28((uint64_t)v20, (uint64_t)v18, &qword_1EECD1D20);
  if (sub_1AD36EAF8((uint64_t)v18) == 1)
  {
    v7 = 0;
  }
  else
  {
    v15 = v18[4];
    v16 = v18[5];
    *(_OWORD *)v17 = v19[0];
    *(_OWORD *)&v17[9] = *(_OWORD *)((char *)v19 + 9);
    v11 = v18[0];
    v12 = v18[1];
    v13 = v18[2];
    v14 = v18[3];
    v7 = sub_1AD366AC8();
  }
  objc_msgSend(v5, sel_setIcon_, v7, v11, v12, v13, v14, v15, v16, *(_OWORD *)v17, *(_QWORD *)&v17[16], *(_QWORD *)&v17[24]);

  if (v2)
    v8 = (void *)sub_1AD63B744();
  else
    v8 = 0;
  objc_msgSend(v5, sel_setCaption_, v8);

  if (v3)
    v9 = (void *)sub_1AD63B744();
  else
    v9 = 0;
  objc_msgSend(v5, sel_setAction_, v9);

  objc_msgSend(v5, sel_setClipAction_, v4);
  return v5;
}

uint64_t sub_1AD36DBD4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  id v15;
  void *v16;
  id v17;
  void *v18;
  uint64_t v19;
  _BYTE v21[12];
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v21[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (unsigned int *)&v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = a2 + *(int *)(v8 + 20);
  v12 = sub_1AD63AF28();
  v13 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56);
  v14 = 1;
  v24 = v11;
  v13(v11, 1, 1, v12);
  v23 = *(int *)(v7 + 24);
  *(_QWORD *)(a2 + v23) = 0;
  v22 = objc_msgSend(a1, sel_version);
  v15 = objc_msgSend(a1, "URL");
  if (v15)
  {
    v16 = v15;
    sub_1AD63AED4();

    v14 = 0;
  }
  v13((uint64_t)v6, v14, 1, v12);
  v17 = objc_msgSend(a1, sel_colors);
  if (v17)
  {
    v18 = v17;
    v19 = sub_1AD63B690();

  }
  else
  {

    v19 = 0;
  }
  *v10 = v22;
  sub_1AD00FF28((uint64_t)v6, (uint64_t)v10 + *(int *)(v7 + 20), &qword_1ED2E1A40);
  *(_QWORD *)((char *)v10 + *(int *)(v7 + 24)) = v19;
  sub_1AD009758(v24, &qword_1ED2E1A40);
  swift_bridgeObjectRelease();
  return sub_1AD2A5214((uint64_t)v10, a2, type metadata accessor for LinkPresentation.ArtworkMetadata);
}

id sub_1AD36DDD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void *v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPArtworkMetadata), sel_init);
  v6 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
  sub_1ACFF64C0(v1 + *(int *)(v6 + 20), (uint64_t)v4, &qword_1ED2E1A40);
  v7 = sub_1AD63AF28();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) != 1)
  {
    v9 = (void *)sub_1AD63AE98();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v4, v7);
  }
  objc_msgSend(v5, sel_setURL_, v9);

  if (*(_QWORD *)(v1 + *(int *)(v6 + 24)))
    v10 = (void *)sub_1AD63B678();
  else
    v10 = 0;
  objc_msgSend(v5, sel_setColors_, v10);

  return v5;
}

void sub_1AD36DF34(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  id v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  void *v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;

  v4 = objc_msgSend(a1, sel_lyrics);
  if (v4)
  {
    v5 = v4;
    v6 = sub_1AD63B768();
    v8 = v7;

  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = objc_msgSend(a1, sel_language);
  if (v9)
  {
    v10 = v9;
    v11 = sub_1AD63B768();
    v13 = v12;

  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  v14 = objc_msgSend(a1, sel_startTime);
  v15 = v14;
  if (v14)
  {
    objc_msgSend(v14, sel_doubleValue);
    v17 = v16;

  }
  else
  {
    v17 = 0;
  }
  v18 = objc_msgSend(a1, sel_endTime);
  v19 = v18;
  if (v18)
  {
    objc_msgSend(v18, sel_doubleValue);
    v21 = v20;

  }
  else
  {

    v21 = 0;
  }
  *(_QWORD *)a2 = v6;
  *(_QWORD *)(a2 + 8) = v8;
  *(_QWORD *)(a2 + 16) = v11;
  *(_QWORD *)(a2 + 24) = v13;
  *(_QWORD *)(a2 + 32) = v17;
  *(_BYTE *)(a2 + 40) = v15 == 0;
  *(_QWORD *)(a2 + 48) = v21;
  *(_BYTE *)(a2 + 56) = v19 == 0;
}

id sub_1AD36E09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  double v3;
  char v4;
  double v5;
  char v6;
  id v7;
  void *v8;
  void *v9;
  id v10;
  id v11;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(double *)(v0 + 32);
  v4 = *(_BYTE *)(v0 + 40);
  v5 = *(double *)(v0 + 48);
  v6 = *(_BYTE *)(v0 + 56);
  v7 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorLPLyricExcerptMetadata), sel_init);
  if (v1)
    v8 = (void *)sub_1AD63B744();
  else
    v8 = 0;
  objc_msgSend(v7, sel_setLyrics_, v8);

  if (v2)
    v9 = (void *)sub_1AD63B744();
  else
    v9 = 0;
  objc_msgSend(v7, sel_setLanguage_, v9);

  if ((v4 & 1) != 0)
    v10 = 0;
  else
    v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v3);
  objc_msgSend(v7, sel_setStartTime_, v10);

  if ((v6 & 1) != 0)
    v11 = 0;
  else
    v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v5);
  objc_msgSend(v7, sel_setEndTime_, v11);

  return v7;
}

double sub_1AD36E1F4@<D0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  id v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  double result;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;

  v4 = objc_msgSend(a1, sel_street);
  v5 = sub_1AD63B768();
  v44 = v6;
  v45 = v5;

  swift_bridgeObjectRetain();
  v7 = objc_msgSend(a1, sel_subLocality);
  v8 = sub_1AD63B768();
  v42 = v9;
  v43 = v8;

  swift_bridgeObjectRetain();
  v10 = objc_msgSend(a1, sel_city);
  v11 = sub_1AD63B768();
  v13 = v12;

  v14 = v13;
  swift_bridgeObjectRetain();
  v15 = objc_msgSend(a1, sel_subAdministrativeArea);
  v41 = sub_1AD63B768();
  v17 = v16;

  v18 = v17;
  swift_bridgeObjectRetain();
  v19 = objc_msgSend(a1, sel_state);
  v20 = sub_1AD63B768();
  v39 = v21;
  v40 = v20;

  swift_bridgeObjectRetain();
  v22 = objc_msgSend(a1, sel_postalCode);
  v38 = sub_1AD63B768();
  v24 = v23;

  swift_bridgeObjectRetain();
  v25 = objc_msgSend(a1, sel_country);
  v37 = sub_1AD63B768();
  v27 = v26;

  swift_bridgeObjectRetain();
  v28 = objc_msgSend(a1, sel_ISOCountryCode);
  v29 = sub_1AD63B768();
  v31 = v30;

  *(_QWORD *)&v46 = v45;
  *((_QWORD *)&v46 + 1) = v44;
  *(_QWORD *)&v47 = v43;
  *((_QWORD *)&v47 + 1) = v42;
  *(_QWORD *)&v48 = v11;
  *((_QWORD *)&v48 + 1) = v14;
  *(_QWORD *)&v49 = v41;
  *((_QWORD *)&v49 + 1) = v18;
  *(_QWORD *)&v50 = v40;
  *((_QWORD *)&v50 + 1) = v39;
  *(_QWORD *)&v51 = v38;
  *((_QWORD *)&v51 + 1) = v24;
  *(_QWORD *)&v52 = v37;
  *((_QWORD *)&v52 + 1) = v27;
  *(_QWORD *)&v53 = v29;
  *((_QWORD *)&v53 + 1) = v31;
  sub_1AD36E890((uint64_t)&v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD36E924((uint64_t)&v46);
  v32 = v51;
  a2[4] = v50;
  a2[5] = v32;
  v33 = v53;
  a2[6] = v52;
  a2[7] = v33;
  v34 = v47;
  *a2 = v46;
  a2[1] = v34;
  result = *(double *)&v48;
  v36 = v49;
  a2[2] = v48;
  a2[3] = v36;
  return result;
}

id sub_1AD36E494()
{
  id v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;

  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C97378]), sel_init);
  swift_bridgeObjectRetain();
  v1 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setStreet_, v1);

  swift_bridgeObjectRetain();
  v2 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setSubLocality_, v2);

  swift_bridgeObjectRetain();
  v3 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setCity_, v3);

  swift_bridgeObjectRetain();
  v4 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setSubAdministrativeArea_, v4);

  swift_bridgeObjectRetain();
  v5 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setState_, v5);

  swift_bridgeObjectRetain();
  v6 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setPostalCode_, v6);

  swift_bridgeObjectRetain();
  v7 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setCountry_, v7);

  swift_bridgeObjectRetain();
  v8 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_setISOCountryCode_, v8);

  return v0;
}

id sub_1AD36E764()
{
  id v0;
  void *v1;
  id v2;

  v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  v1 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend(v0, sel_initWithString_, v1);

  return v2;
}

id sub_1AD36E7D4()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  id v4;
  id v6[2];

  v6[1] = *(id *)MEMORY[0x1E0C80C00];
  v1 = (void *)sub_1AD63AFA0();
  v6[0] = 0;
  v2 = objc_msgSend(v0, sel_initForReadingFromData_error_, v1, v6);

  if (v2)
  {
    v3 = v6[0];
  }
  else
  {
    v4 = v6[0];
    sub_1AD63AE50();

    swift_willThrow();
  }
  return v2;
}

uint64_t sub_1AD36E890(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD36E924(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

double sub_1AD36E9B8(uint64_t a1)
{
  double result;

  result = 0.0;
  *(_OWORD *)a1 = xmmword_1AD676DD0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_QWORD *)(a1 + 176) = 0;
  return result;
}

double sub_1AD36E9E4(uint64_t a1)
{
  double result;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 1;
  result = 0.0;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_OWORD *)(a1 + 56) = 0u;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_BYTE *)(a1 + 120) = 0;
  return result;
}

uint64_t sub_1AD36EA14()
{
  return swift_deallocObject();
}

uint64_t sub_1AD36EA24()
{
  uint64_t v0;

  return swift_deallocObject();
}

uint64_t sub_1AD36EA48()
{
  return swift_getObjectType();
}

uint64_t sub_1AD36EA50()
{
  return swift_deallocObject();
}

_BYTE **sub_1AD36EA60(_BYTE **a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1AD43D7AC(a1, a2, a3, *(_BYTE *)(v3 + 16));
}

uint64_t sub_1AD36EA68()
{
  return swift_deallocObject();
}

uint64_t sub_1AD36EA78()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD36EA9C()
{
  uint64_t v0;

  (*(void (**)(void))(v0 + 16))();
  return sub_1AD63C578();
}

uint64_t sub_1AD36EAC0()
{
  uint64_t v0;

  return sub_1AD43D140(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_1AD36EAC8(uint64_t *a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  return sub_1AD43D160(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1AD36EAD0()
{
  return swift_release();
}

double sub_1AD36EAD8(_OWORD *a1)
{
  double result;

  result = 0.0;
  *a1 = xmmword_1AD676DD0;
  a1[1] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  return result;
}

uint64_t sub_1AD36EAF8(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_1AD36EB1C(uint64_t a1)
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD36EB50(uint64_t a1)
{
  unint64_t v1;
  int v2;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  v2 = v1 - 1;
  if (v2 < 0)
    v2 = -1;
  return (v2 + 1);
}

uint64_t sub_1AD36EB74()
{
  uint64_t v0;

  return swift_deallocObject();
}

void *sub_1AD36EB98()
{
  uint64_t v0;
  void *v1;
  id v2;

  v1 = *(void **)(v0 + 16);
  v2 = v1;
  return v1;
}

uint64_t sub_1AD36EBC0()
{
  return swift_deallocObject();
}

uint64_t sub_1AD36EBD0()
{
  return swift_deallocObject();
}

uint64_t sub_1AD36EBE0()
{
  uint64_t v0;

  return sub_1AD43D120(*(void (**)(void))(v0 + 16));
}

void sub_1AD36EBE8(uint64_t *a1, _QWORD **a2, uint64_t a3)
{
  uint64_t v3;

  sub_1AD43D7BC(a1, a2, a3, *(uint64_t (**)(void))(v3 + 16));
}

uint64_t sub_1AD36EC08()
{
  sub_1AD63C4AC();
  sub_1AD63B6C0();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD36EC68()
{
  sub_1AD372804();
  return sub_1AD63B288();
}

uint64_t sub_1AD36ECA0()
{
  sub_1AD63C4AC();
  sub_1AD63B6C0();
  return sub_1AD63C4F4();
}

void sub_1AD36ECFC(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_1AD36ED04@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1AD376D30(a1);
  *a2 = result;
  return result;
}

uint64_t sub_1AD36ED28()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

uint64_t sub_1AD36ED34@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = sub_1AD376D30(*a1);
  *a2 = result;
  return result;
}

void sub_1AD36ED5C(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = *v1 + 1;
}

void sub_1AD36ED6C(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5C9DDF8;
}

uint64_t sub_1AD36ED7C()
{
  sub_1AD373A4C();
  return sub_1AD63B288();
}

uint64_t sub_1AD36EDB4@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 2)
    v2 = 1;
  else
    v2 = 2;
  if (result == 1)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD36EDD0()
{
  _BYTE *v0;

  if (*v0)
    return 2;
  else
    return 1;
}

void sub_1AD36EDE4(_QWORD *a1@<X8>)
{
  *a1 = &unk_1E5CCA530;
}

uint64_t sub_1AD36EDF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED838E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED838E0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD67B890;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "messageType";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "sendDate";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "messageData";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "baseColor";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "identifier";
  *((_QWORD *)v17 + 1) = 10;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "supportsPlaybackTimeOffsets";
  *((_QWORD *)v19 + 1) = 27;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "startDelay";
  *((_QWORD *)v21 + 1) = 10;
  v21[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD36F05C()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1AD63B294();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          sub_1AD36F218();
          break;
        case 2:
          type metadata accessor for ETP_Header(0);
          sub_1AD63B324();
          break;
        case 3:
          type metadata accessor for ETP_Header(0);
          sub_1AD63B2B8();
          break;
        case 4:
          type metadata accessor for ETP_Header(0);
          sub_1AD63B30C();
          break;
        case 5:
          type metadata accessor for ETP_Header(0);
          sub_1AD63B2E8();
          break;
        case 6:
          type metadata accessor for ETP_Header(0);
          sub_1AD63B2A0();
          break;
        case 7:
          type metadata accessor for ETP_Header(0);
          sub_1AD63B2DC();
          break;
        default:
          break;
      }
      result = sub_1AD63B294();
    }
  }
  return result;
}

uint64_t sub_1AD36F218()
{
  type metadata accessor for ETP_Header(0);
  sub_1AD372804();
  return sub_1AD63B2AC();
}

uint64_t sub_1AD36F28C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = (int *)type metadata accessor for ETP_Header(0);
  if (*(_BYTE *)(v0 + v2[5]) == 8 || (sub_1AD372804(), result = sub_1AD63B378(), !v1))
  {
    if ((*(_BYTE *)(v0 + v2[6] + 8) & 1) != 0 || (result = sub_1AD63B3F0(), !v1))
    {
      v4 = v0 + v2[7];
      v5 = *(_QWORD *)(v4 + 8);
      if (v5 >> 60 == 15
        || (v6 = *(_QWORD *)v4,
            sub_1AD0040A0(*(_QWORD *)v4, *(_QWORD *)(v4 + 8)),
            sub_1AD63B384(),
            result = sub_1AD004118(v6, v5),
            !v1))
      {
        if ((*(_BYTE *)(v0 + v2[8] + 4) & 1) != 0 || (result = sub_1AD63B3D8(), !v1))
        {
          if (!*(_QWORD *)(v0 + v2[9] + 8) || (result = sub_1AD63B3B4(), !v1))
          {
            if (*(_BYTE *)(v0 + v2[10]) == 2 || (result = sub_1AD63B36C(), !v1))
            {
              if ((*(_BYTE *)(v0 + v2[11] + 8) & 1) != 0)
                return sub_1AD63B234();
              result = sub_1AD63B3A8();
              if (!v1)
                return sub_1AD63B234();
            }
          }
        }
      }
    }
  }
  return result;
}

double sub_1AD36F490@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  sub_1AD63B240();
  v4 = a1[6];
  *(_BYTE *)(a2 + a1[5]) = 8;
  v5 = a2 + v4;
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  result = 0.0;
  v7 = a1[8];
  *(_OWORD *)(a2 + a1[7]) = xmmword_1AD67A180;
  v8 = a2 + v7;
  *(_DWORD *)v8 = 0;
  *(_BYTE *)(v8 + 4) = 1;
  v9 = a1[10];
  v10 = (_QWORD *)(a2 + a1[9]);
  *v10 = 0;
  v10[1] = 0;
  *(_BYTE *)(a2 + v9) = 2;
  v11 = a2 + a1[11];
  *(_QWORD *)v11 = 0;
  *(_BYTE *)(v11 + 8) = 1;
  return result;
}

uint64_t sub_1AD36F510()
{
  return 0x646165482E505445;
}

uint64_t (*sub_1AD36F538())()
{
  return nullsub_1;
}

uint64_t sub_1AD36F548()
{
  return sub_1AD36F05C();
}

uint64_t sub_1AD36F55C()
{
  return sub_1AD36F28C();
}

uint64_t sub_1AD36F574()
{
  sub_1ACFF9724(&qword_1EECDB1C8, type metadata accessor for ETP_Header, (uint64_t)&unk_1AD67C3CC);
  return sub_1AD63B27C();
}

uint64_t sub_1AD36F5C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD1450, (uint64_t)qword_1EED838E0, a1);
}

uint64_t sub_1AD36F5E4()
{
  sub_1ACFF9724(&qword_1EECDAD48, type metadata accessor for ETP_Header, (uint64_t)&unk_1AD67C404);
  return sub_1AD63B354();
}

uint64_t sub_1AD36F628()
{
  sub_1ACFF9724(&qword_1EECDAD48, type metadata accessor for ETP_Header, (uint64_t)&unk_1AD67C404);
  return sub_1AD63B360();
}

uint64_t sub_1AD36F680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(void);
  unint64_t v10;
  _QWORD *v11;
  char *v12;
  _QWORD *v13;
  char *v14;
  _QWORD *v15;
  char *v16;
  _QWORD *v17;
  char *v18;
  _QWORD *v19;
  char *v20;
  _QWORD *v21;
  char *v22;
  uint64_t v24;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED838F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED838F8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1AD67B8A0;
  v5 = v24 + v4;
  v6 = v24 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v24 + v4) = 1;
  *(_QWORD *)v6 = "Tap";
  *(_QWORD *)(v6 + 8) = 3;
  *(_BYTE *)(v6 + 16) = 2;
  v7 = *MEMORY[0x1E0D3EF08];
  v8 = sub_1AD63B3FC();
  v9 = *(void (**)(void))(*(_QWORD *)(v8 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v9)(v6, v7, v8);
  v10 = v5 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v3) = 2;
  *(_QWORD *)v10 = "QuickTap";
  *(_QWORD *)(v10 + 8) = 8;
  *(_BYTE *)(v10 + 16) = 2;
  v9();
  v11 = (_QWORD *)(v5 + 2 * v3);
  v12 = (char *)v11 + *(int *)(v1 + 48);
  *v11 = 3;
  *(_QWORD *)v12 = "Heartbeat";
  *((_QWORD *)v12 + 1) = 9;
  v12[16] = 2;
  v9();
  v13 = (_QWORD *)(v5 + 3 * v3);
  v14 = (char *)v13 + *(int *)(v1 + 48);
  *v13 = 4;
  *(_QWORD *)v14 = "Doodle";
  *((_QWORD *)v14 + 1) = 6;
  v14[16] = 2;
  v9();
  v15 = (_QWORD *)(v5 + 4 * v3);
  v16 = (char *)v15 + *(int *)(v1 + 48);
  *v15 = 5;
  *(_QWORD *)v16 = "ReadReceipt";
  *((_QWORD *)v16 + 1) = 11;
  v16[16] = 2;
  v9();
  v17 = (_QWORD *)(v5 + 5 * v3);
  v18 = (char *)v17 + *(int *)(v1 + 48);
  *v17 = 6;
  *(_QWORD *)v18 = "Video";
  *((_QWORD *)v18 + 1) = 5;
  v18[16] = 2;
  v9();
  v19 = (_QWORD *)(v5 + 6 * v3);
  v20 = (char *)v19 + *(int *)(v1 + 48);
  *v19 = 7;
  *(_QWORD *)v20 = "Kiss";
  *((_QWORD *)v20 + 1) = 4;
  v20[16] = 2;
  v9();
  v21 = (_QWORD *)(v5 + 7 * v3);
  v22 = (char *)v21 + *(int *)(v1 + 48);
  *v21 = 8;
  *(_QWORD *)v22 = "Anger";
  *((_QWORD *)v22 + 1) = 5;
  v22[16] = 2;
  v9();
  return sub_1AD63B408();
}

uint64_t sub_1AD36F91C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD1458, (uint64_t)qword_1EED838F8, a1);
}

uint64_t sub_1AD36F938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED83910);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED83910);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD64CE50;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 2;
  *(_QWORD *)v7 = "timeDeltas";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 3;
  *(_QWORD *)v11 = "points";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 4;
  *(_QWORD *)v12 = "colors";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD36FAC8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1AD63B294();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 4 || result == 3 || result == 2)
    {
      type metadata accessor for ETP_Tap(0);
      sub_1AD63B2B8();
    }
    v0 = 0;
  }
  return result;
}

uint64_t sub_1AD36FB90()
{
  return 0x7061542E505445;
}

uint64_t sub_1AD36FBA8()
{
  return sub_1AD36FAC8();
}

uint64_t sub_1AD36FBBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD37164C(a1, a2, a3, type metadata accessor for ETP_Tap);
}

uint64_t sub_1AD36FBE4()
{
  sub_1ACFF9724(&qword_1EECDB1E8, type metadata accessor for ETP_Tap, (uint64_t)&unk_1AD67C23C);
  return sub_1AD63B27C();
}

uint64_t sub_1AD36FC34@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD1460, (uint64_t)qword_1EED83910, a1);
}

uint64_t sub_1AD36FC50()
{
  sub_1ACFF9724(&qword_1EECDAD60, type metadata accessor for ETP_Tap, (uint64_t)&unk_1AD67C274);
  return sub_1AD63B354();
}

uint64_t sub_1AD36FC90()
{
  sub_1ACFF9724(&qword_1EECDAD60, type metadata accessor for ETP_Tap, (uint64_t)&unk_1AD67C274);
  return sub_1AD63B360();
}

uint64_t sub_1AD36FCE0(uint64_t a1, uint64_t a2)
{
  return sub_1AD372E34(a1, a2, type metadata accessor for ETP_Tap) & 1;
}

uint64_t sub_1AD36FD00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED83928);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED83928);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD679140;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "beatsPerMinute";
  *(_QWORD *)(v7 + 8) = 14;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "duration";
  *(_QWORD *)(v11 + 8) = 8;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "normalizedCenterX";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "normalizedCenterY";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "rotation";
  *((_QWORD *)v17 + 1) = 8;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "heartbreakTime";
  *((_QWORD *)v19 + 1) = 14;
  v19[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD36FF38()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1AD63B294();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
        case 5:
        case 6:
          type metadata accessor for ETP_Heartbeat(0);
          sub_1AD63B2C4();
          break;
        case 2:
          type metadata accessor for ETP_Heartbeat(0);
          sub_1AD63B2F4();
          break;
        default:
          break;
      }
      result = sub_1AD63B294();
    }
  }
  return result;
}

uint64_t sub_1AD370060()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t result;

  v2 = (int *)type metadata accessor for ETP_Heartbeat(0);
  if ((*(_BYTE *)(v0 + v2[5] + 4) & 1) != 0 || (result = sub_1AD63B390(), !v1))
  {
    if ((*(_BYTE *)(v0 + v2[6] + 4) & 1) != 0 || (result = sub_1AD63B3C0(), !v1))
    {
      if ((*(_BYTE *)(v0 + v2[7] + 4) & 1) != 0 || (result = sub_1AD63B390(), !v1))
      {
        if ((*(_BYTE *)(v0 + v2[8] + 4) & 1) != 0 || (result = sub_1AD63B390(), !v1))
        {
          if ((*(_BYTE *)(v0 + v2[9] + 4) & 1) != 0 || (result = sub_1AD63B390(), !v1))
          {
            if ((*(_BYTE *)(v0 + v2[10] + 4) & 1) != 0)
              return sub_1AD63B234();
            result = sub_1AD63B390();
            if (!v1)
              return sub_1AD63B234();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AD3701E8@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  result = sub_1AD63B240();
  v5 = a1[6];
  v6 = a2 + a1[5];
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a2 + v5;
  *(_DWORD *)v7 = 0;
  *(_BYTE *)(v7 + 4) = 1;
  v8 = a1[8];
  v9 = a2 + a1[7];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  v10 = a2 + v8;
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  v11 = a1[10];
  v12 = a2 + a1[9];
  *(_DWORD *)v12 = 0;
  *(_BYTE *)(v12 + 4) = 1;
  v13 = a2 + v11;
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  return result;
}

uint64_t sub_1AD370264()
{
  return 0x726165482E505445;
}

uint64_t sub_1AD370288()
{
  return sub_1AD36FF38();
}

uint64_t sub_1AD37029C()
{
  return sub_1AD370060();
}

uint64_t sub_1AD3702B0()
{
  sub_1ACFF9724(&qword_1EECDB1F0, type metadata accessor for ETP_Heartbeat, (uint64_t)&unk_1AD67C0D4);
  return sub_1AD63B27C();
}

uint64_t sub_1AD370300@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD1468, (uint64_t)qword_1EED83928, a1);
}

uint64_t sub_1AD37031C()
{
  sub_1ACFF9724(&qword_1EECDAD58, type metadata accessor for ETP_Heartbeat, (uint64_t)&unk_1AD67C10C);
  return sub_1AD63B354();
}

uint64_t sub_1AD37035C()
{
  sub_1ACFF9724(&qword_1EECDAD58, type metadata accessor for ETP_Heartbeat, (uint64_t)&unk_1AD67C10C);
  return sub_1AD63B360();
}

uint64_t sub_1AD3703B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED83940);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED83940);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD679240;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "doodleCount";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "doodleData";
  *(_QWORD *)(v11 + 8) = 10;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "colorData";
  *((_QWORD *)v13 + 1) = 9;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "pointTimeDeltaData";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD370570()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1AD63B294();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for ETP_Doodle(0);
          sub_1AD63B2F4();
          break;
        case 2:
        case 3:
        case 4:
          type metadata accessor for ETP_Doodle(0);
          sub_1AD63B2B8();
          break;
        default:
          break;
      }
      result = sub_1AD63B294();
    }
  }
  return result;
}

uint64_t sub_1AD37067C()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = (int *)type metadata accessor for ETP_Doodle(0);
  if ((*(_BYTE *)(v0 + v2[5] + 4) & 1) != 0 || (result = sub_1AD63B3C0(), !v1))
  {
    v4 = v0 + v2[6];
    v5 = *(_QWORD *)(v4 + 8);
    if (v5 >> 60 == 15
      || (v6 = *(_QWORD *)v4,
          sub_1AD0040A0(*(_QWORD *)v4, *(_QWORD *)(v4 + 8)),
          sub_1AD63B384(),
          result = sub_1AD004118(v6, v5),
          !v1))
    {
      v7 = v0 + v2[7];
      v8 = *(_QWORD *)(v7 + 8);
      if (v8 >> 60 == 15
        || (v9 = *(_QWORD *)v7,
            sub_1AD0040A0(*(_QWORD *)v7, *(_QWORD *)(v7 + 8)),
            sub_1AD63B384(),
            result = sub_1AD004118(v9, v8),
            !v1))
      {
        v10 = v0 + v2[8];
        v11 = *(_QWORD *)(v10 + 8);
        if (v11 >> 60 == 15)
          return sub_1AD63B234();
        v12 = *(_QWORD *)v10;
        sub_1AD0040A0(*(_QWORD *)v10, *(_QWORD *)(v10 + 8));
        sub_1AD63B384();
        result = sub_1AD004118(v12, v11);
        if (!v1)
          return sub_1AD63B234();
      }
    }
  }
  return result;
}

double sub_1AD370824@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  double result;
  uint64_t v7;

  sub_1AD63B240();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  result = 0.0;
  *(_OWORD *)(a2 + v4) = xmmword_1AD67A180;
  v7 = a1[8];
  *(_OWORD *)(a2 + a1[7]) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + v7) = xmmword_1AD67A180;
  return result;
}

uint64_t sub_1AD370874()
{
  return 0x646F6F442E505445;
}

uint64_t sub_1AD370890()
{
  return sub_1AD370570();
}

uint64_t sub_1AD3708A4()
{
  return sub_1AD37067C();
}

uint64_t sub_1AD3708B8()
{
  sub_1ACFF9724(&qword_1EECDB1F8, type metadata accessor for ETP_Doodle, (uint64_t)&unk_1AD67BF6C);
  return sub_1AD63B27C();
}

uint64_t sub_1AD370908@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD1470, (uint64_t)qword_1EED83940, a1);
}

uint64_t sub_1AD370924()
{
  sub_1ACFF9724(&qword_1EECDAD50, type metadata accessor for ETP_Doodle, (uint64_t)&unk_1AD67BFA4);
  return sub_1AD63B354();
}

uint64_t sub_1AD370964()
{
  sub_1ACFF9724(&qword_1EECDAD50, type metadata accessor for ETP_Doodle, (uint64_t)&unk_1AD67BFA4);
  return sub_1AD63B360();
}

uint64_t sub_1AD3709B8()
{
  uint64_t v0;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED83958);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED83958);
  return sub_1AD63B414();
}

uint64_t sub_1AD370A00()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  do
    result = sub_1AD63B294();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t sub_1AD370A40()
{
  return sub_1AD63B234();
}

uint64_t sub_1AD370A58()
{
  return 0x646165522E505445;
}

uint64_t sub_1AD370A7C()
{
  return sub_1AD370A00();
}

uint64_t sub_1AD370A90()
{
  return sub_1AD370A40();
}

uint64_t sub_1AD370AA4()
{
  sub_1ACFF9724(&qword_1EECDB200, type metadata accessor for ETP_ReadReceipt, (uint64_t)&unk_1AD67BE04);
  return sub_1AD63B27C();
}

uint64_t sub_1AD370AF4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD1478, (uint64_t)qword_1EED83958, a1);
}

uint64_t sub_1AD370B10()
{
  sub_1ACFF9724(&qword_1EECDB130, type metadata accessor for ETP_ReadReceipt, (uint64_t)&unk_1AD67BE3C);
  return sub_1AD63B354();
}

uint64_t sub_1AD370B50()
{
  sub_1ACFF9724(&qword_1EECDB130, type metadata accessor for ETP_ReadReceipt, (uint64_t)&unk_1AD67BE3C);
  return sub_1AD63B360();
}

uint64_t sub_1AD370BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  void (*v12)(char *, uint64_t, uint64_t);
  void (*v13)(char *, uint64_t);
  uint64_t v15;

  v4 = sub_1AD63B24C();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998];
  v6 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v15 - v10;
  v12 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v12((char *)&v15 - v10, a1, v4);
  v12(v9, a2, v4);
  sub_1ACFF9724(&qword_1EECDAEC8, v5, MEMORY[0x1E0D3E9A8]);
  LOBYTE(a2) = sub_1AD63B738();
  v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v4);
  v13(v11, v4);
  return a2 & 1;
}

uint64_t sub_1AD370CAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED83970);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED83970);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD64CE50;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "introMessageData";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "playingMessagesData";
  *((_QWORD *)v11 + 1) = 19;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 4;
  *(_QWORD *)v12 = "mediaType";
  *(_QWORD *)(v12 + 8) = 9;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD370E40()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1AD63B294();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 4)
    {
      sub_1AD370F1C();
    }
    else if (result == 2 || result == 1)
    {
      type metadata accessor for ETP_Video(0);
      sub_1AD63B2B8();
    }
    v0 = 0;
  }
  return result;
}

uint64_t sub_1AD370F1C()
{
  type metadata accessor for ETP_Video(0);
  sub_1AD373A4C();
  return sub_1AD63B2AC();
}

uint64_t sub_1AD370F90()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = (int *)type metadata accessor for ETP_Video(0);
  v3 = v0 + v2[5];
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 == 15
    || (v5 = *(_QWORD *)v3,
        sub_1AD0040A0(*(_QWORD *)v3, *(_QWORD *)(v3 + 8)),
        sub_1AD63B384(),
        result = sub_1AD004118(v5, v4),
        !v1))
  {
    v7 = v0 + v2[6];
    v8 = *(_QWORD *)(v7 + 8);
    if (v8 >> 60 == 15
      || (v9 = *(_QWORD *)v7,
          sub_1AD0040A0(*(_QWORD *)v7, *(_QWORD *)(v7 + 8)),
          sub_1AD63B384(),
          result = sub_1AD004118(v9, v8),
          !v1))
    {
      if (*(_BYTE *)(v0 + v2[7]) == 2)
        return sub_1AD63B234();
      sub_1AD373A4C();
      result = sub_1AD63B378();
      if (!v1)
        return sub_1AD63B234();
    }
  }
  return result;
}

double sub_1AD371100@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  uint64_t v5;

  sub_1AD63B240();
  result = 0.0;
  v5 = a1[6];
  *(_OWORD *)(a2 + a1[5]) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + v5) = xmmword_1AD67A180;
  *(_BYTE *)(a2 + a1[7]) = 2;
  return result;
}

uint64_t sub_1AD371144()
{
  return 0x656469562E505445;
}

uint64_t sub_1AD371160()
{
  return sub_1AD370E40();
}

uint64_t sub_1AD371174()
{
  return sub_1AD370F90();
}

uint64_t sub_1AD371188()
{
  sub_1ACFF9724(&qword_1EECDB208, type metadata accessor for ETP_Video, (uint64_t)&unk_1AD67BC9C);
  return sub_1AD63B27C();
}

uint64_t sub_1AD3711D8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD1480, (uint64_t)qword_1EED83970, a1);
}

uint64_t sub_1AD3711F4()
{
  sub_1ACFF9724(&qword_1EECDAD68, type metadata accessor for ETP_Video, (uint64_t)&unk_1AD67BCD4);
  return sub_1AD63B354();
}

uint64_t sub_1AD371234()
{
  sub_1ACFF9724(&qword_1EECDAD68, type metadata accessor for ETP_Video, (uint64_t)&unk_1AD67BCD4);
  return sub_1AD63B360();
}

uint64_t sub_1AD371288()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED83988);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED83988);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD648170;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "Video";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "Photo";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD3713DC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD1488, (uint64_t)qword_1EED83988, a1);
}

uint64_t sub_1AD3713F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  uint64_t v12;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED839A0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED839A0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD64CE50;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "delays";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "points";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (uint64_t)v6 + 2 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + 2 * v3) = 3;
  *(_QWORD *)v12 = "angles";
  *(_QWORD *)(v12 + 8) = 6;
  *(_BYTE *)(v12 + 16) = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD371588()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1AD63B294();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 3 || result == 2 || result == 1)
    {
      type metadata accessor for ETP_Kiss(0);
      sub_1AD63B2B8();
    }
    v0 = 0;
  }
  return result;
}

uint64_t sub_1AD37164C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;

  v6 = v4;
  v7 = (int *)a4(0);
  v8 = (uint64_t *)(v4 + v7[5]);
  v9 = v8[1];
  if (v9 >> 60 == 15
    || (v10 = *v8, sub_1AD0040A0(*v8, v9), sub_1AD63B384(), v11 = v10, v6 = v4, result = sub_1AD004118(v11, v9), !v5))
  {
    v13 = v6 + v7[6];
    v14 = *(_QWORD *)(v13 + 8);
    if (v14 >> 60 == 15
      || (v15 = v6,
          v16 = *(_QWORD *)v13,
          sub_1AD0040A0(*(_QWORD *)v13, *(_QWORD *)(v13 + 8)),
          sub_1AD63B384(),
          v17 = v16,
          v6 = v15,
          result = sub_1AD004118(v17, v14),
          !v5))
    {
      v18 = v6 + v7[7];
      v19 = *(_QWORD *)(v18 + 8);
      if (v19 >> 60 == 15)
        return sub_1AD63B234();
      v20 = *(_QWORD *)v18;
      sub_1AD0040A0(*(_QWORD *)v18, *(_QWORD *)(v18 + 8));
      sub_1AD63B384();
      result = sub_1AD004118(v20, v19);
      if (!v5)
        return sub_1AD63B234();
    }
  }
  return result;
}

double sub_1AD3717F0@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  uint64_t v5;

  sub_1AD63B240();
  result = 0.0;
  v5 = a1[6];
  *(_OWORD *)(a2 + a1[5]) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + v5) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + a1[7]) = xmmword_1AD67A180;
  return result;
}

uint64_t sub_1AD371830()
{
  return 0x7373694B2E505445;
}

uint64_t sub_1AD371848()
{
  return sub_1AD371588();
}

uint64_t sub_1AD37185C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD37164C(a1, a2, a3, type metadata accessor for ETP_Kiss);
}

uint64_t sub_1AD371884()
{
  sub_1ACFF9724(&qword_1EECDB218, type metadata accessor for ETP_Kiss, (uint64_t)&unk_1AD67BB0C);
  return sub_1AD63B27C();
}

uint64_t sub_1AD3718D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD1490, (uint64_t)qword_1EED839A0, a1);
}

uint64_t sub_1AD3718F0()
{
  sub_1ACFF9724(&qword_1EECDAD70, type metadata accessor for ETP_Kiss, (uint64_t)&unk_1AD67BB44);
  return sub_1AD63B354();
}

uint64_t sub_1AD371930()
{
  sub_1ACFF9724(&qword_1EECDAD70, type metadata accessor for ETP_Kiss, (uint64_t)&unk_1AD67BB44);
  return sub_1AD63B360();
}

uint64_t sub_1AD371980(uint64_t a1, uint64_t a2)
{
  return sub_1AD372E34(a1, a2, type metadata accessor for ETP_Kiss) & 1;
}

uint64_t sub_1AD3719A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED839B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED839B8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD67B8B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "duration";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "normalizedCenterX";
  *(_QWORD *)(v11 + 8) = 17;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "normalizedCenterY";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "delays";
  *((_QWORD *)v15 + 1) = 6;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 5;
  *(_QWORD *)v16 = "points";
  *(_QWORD *)(v16 + 8) = 6;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD371BA4()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1AD63B294();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 3:
          type metadata accessor for ETP_Anger(0);
          sub_1AD63B2C4();
          break;
        case 4:
        case 5:
          type metadata accessor for ETP_Anger(0);
          sub_1AD63B2B8();
          break;
        default:
          break;
      }
      result = sub_1AD63B294();
    }
  }
  return result;
}

uint64_t sub_1AD371CC0()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = (int *)type metadata accessor for ETP_Anger(0);
  if ((*(_BYTE *)(v0 + v2[5] + 4) & 1) != 0 || (result = sub_1AD63B390(), !v1))
  {
    if ((*(_BYTE *)(v0 + v2[6] + 4) & 1) != 0 || (result = sub_1AD63B390(), !v1))
    {
      if ((*(_BYTE *)(v0 + v2[7] + 4) & 1) != 0 || (result = sub_1AD63B390(), !v1))
      {
        v4 = v0 + v2[8];
        v5 = *(_QWORD *)(v4 + 8);
        if (v5 >> 60 == 15
          || (v6 = *(_QWORD *)v4,
              sub_1AD0040A0(*(_QWORD *)v4, *(_QWORD *)(v4 + 8)),
              sub_1AD63B384(),
              result = sub_1AD004118(v6, v5),
              !v1))
        {
          v7 = v0 + v2[9];
          v8 = *(_QWORD *)(v7 + 8);
          if (v8 >> 60 == 15)
            return sub_1AD63B234();
          v9 = *(_QWORD *)v7;
          sub_1AD0040A0(*(_QWORD *)v7, *(_QWORD *)(v7 + 8));
          sub_1AD63B384();
          result = sub_1AD004118(v9, v8);
          if (!v1)
            return sub_1AD63B234();
        }
      }
    }
  }
  return result;
}

double sub_1AD371E70@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  double result;

  sub_1AD63B240();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_DWORD *)v5 = 0;
  *(_BYTE *)(v5 + 4) = 1;
  v6 = a2 + v4;
  *(_DWORD *)v6 = 0;
  *(_BYTE *)(v6 + 4) = 1;
  v7 = a1[8];
  v8 = a2 + a1[7];
  *(_BYTE *)(v8 + 4) = 1;
  *(_DWORD *)v8 = 0;
  result = 0.0;
  *(_OWORD *)(a2 + v7) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + a1[9]) = xmmword_1AD67A180;
  return result;
}

uint64_t sub_1AD371ED8()
{
  return 0x65676E412E505445;
}

uint64_t sub_1AD371EF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63B24C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1AD371F2C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63B24C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t sub_1AD371F64()
{
  return sub_1AD371BA4();
}

uint64_t sub_1AD371F78()
{
  return sub_1AD371CC0();
}

uint64_t sub_1AD371F8C()
{
  sub_1ACFF9724(&qword_1EECDB220, type metadata accessor for ETP_Anger, (uint64_t)&unk_1AD67B9A4);
  return sub_1AD63B27C();
}

uint64_t sub_1AD371FDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD1498, (uint64_t)qword_1EED839B8, a1);
}

uint64_t sub_1AD371FF8@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1AD63B420();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1AD372064()
{
  sub_1ACFF9724(&qword_1EECDAD78, type metadata accessor for ETP_Anger, (uint64_t)&unk_1AD67B9DC);
  return sub_1AD63B354();
}

uint64_t sub_1AD3720A4()
{
  sub_1AD63C4AC();
  sub_1AD63B6C0();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD3720F8()
{
  sub_1ACFF9724(&qword_1EECDAD78, type metadata accessor for ETP_Anger, (uint64_t)&unk_1AD67B9DC);
  return sub_1AD63B360();
}

uint64_t sub_1AD372148()
{
  sub_1AD63C4AC();
  sub_1AD63B6C0();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD37219C()
{
  return sub_1ACFF9724(&qword_1EECDB0E0, type metadata accessor for ETP_Anger, (uint64_t)&unk_1AD67B8EC);
}

uint64_t type metadata accessor for ETP_Anger(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDB298);
}

uint64_t sub_1AD3721DC()
{
  return sub_1ACFF9724(&qword_1EECDAD78, type metadata accessor for ETP_Anger, (uint64_t)&unk_1AD67B9DC);
}

uint64_t sub_1AD372208()
{
  return sub_1ACFF9724(&qword_1EECDB0E8, type metadata accessor for ETP_Anger, (uint64_t)&unk_1AD67B914);
}

uint64_t sub_1AD372234()
{
  return sub_1ACFF9724(&qword_1EECDB0F0, type metadata accessor for ETP_Anger, (uint64_t)&unk_1AD67B954);
}

uint64_t sub_1AD372260()
{
  return sub_1ACFF9724(&qword_1EECDB0F8, type metadata accessor for ETP_Kiss, (uint64_t)&unk_1AD67BA54);
}

uint64_t type metadata accessor for ETP_Kiss(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDB288);
}

uint64_t sub_1AD3722A0()
{
  return sub_1ACFF9724(&qword_1EECDAD70, type metadata accessor for ETP_Kiss, (uint64_t)&unk_1AD67BB44);
}

uint64_t sub_1AD3722CC()
{
  return sub_1ACFF9724(&qword_1EECDB100, type metadata accessor for ETP_Kiss, (uint64_t)&unk_1AD67BA7C);
}

uint64_t sub_1AD3722F8()
{
  return sub_1ACFF9724(&qword_1EECDB108, type metadata accessor for ETP_Kiss, (uint64_t)&unk_1AD67BABC);
}

uint64_t sub_1AD372324()
{
  return sub_1ACFF9724(&qword_1EECDB110, type metadata accessor for ETP_Video, (uint64_t)&unk_1AD67BBE4);
}

uint64_t type metadata accessor for ETP_Video(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDB278);
}

uint64_t sub_1AD372364()
{
  return sub_1ACFF9724(&qword_1EECDAD68, type metadata accessor for ETP_Video, (uint64_t)&unk_1AD67BCD4);
}

uint64_t sub_1AD372390()
{
  return sub_1ACFF9724(&qword_1EECDB118, type metadata accessor for ETP_Video, (uint64_t)&unk_1AD67BC0C);
}

uint64_t sub_1AD3723BC()
{
  return sub_1ACFF9724(&qword_1EECDB120, type metadata accessor for ETP_Video, (uint64_t)&unk_1AD67BC4C);
}

uint64_t sub_1AD3723E8()
{
  return sub_1ACFF9724(&qword_1EECDB128, type metadata accessor for ETP_ReadReceipt, (uint64_t)&unk_1AD67BD4C);
}

uint64_t type metadata accessor for ETP_ReadReceipt(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDB268);
}

uint64_t sub_1AD372428()
{
  return sub_1ACFF9724(&qword_1EECDB130, type metadata accessor for ETP_ReadReceipt, (uint64_t)&unk_1AD67BE3C);
}

uint64_t sub_1AD372454()
{
  return sub_1ACFF9724(&qword_1EECDB138, type metadata accessor for ETP_ReadReceipt, (uint64_t)&unk_1AD67BD74);
}

uint64_t sub_1AD372480()
{
  return sub_1ACFF9724(&qword_1EECDB140, type metadata accessor for ETP_ReadReceipt, (uint64_t)&unk_1AD67BDB4);
}

uint64_t sub_1AD3724AC()
{
  return sub_1ACFF9724(&qword_1EECDB148, type metadata accessor for ETP_Doodle, (uint64_t)&unk_1AD67BEB4);
}

uint64_t type metadata accessor for ETP_Doodle(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDB258);
}

uint64_t sub_1AD3724EC()
{
  return sub_1ACFF9724(&qword_1EECDAD50, type metadata accessor for ETP_Doodle, (uint64_t)&unk_1AD67BFA4);
}

uint64_t sub_1AD372518()
{
  return sub_1ACFF9724(&qword_1EECDB150, type metadata accessor for ETP_Doodle, (uint64_t)&unk_1AD67BEDC);
}

uint64_t sub_1AD372544()
{
  return sub_1ACFF9724(&qword_1EECDB158, type metadata accessor for ETP_Doodle, (uint64_t)&unk_1AD67BF1C);
}

uint64_t sub_1AD372570()
{
  return sub_1ACFF9724(&qword_1EECDB160, type metadata accessor for ETP_Heartbeat, (uint64_t)&unk_1AD67C01C);
}

uint64_t type metadata accessor for ETP_Heartbeat(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDB248);
}

uint64_t sub_1AD3725B0()
{
  return sub_1ACFF9724(&qword_1EECDAD58, type metadata accessor for ETP_Heartbeat, (uint64_t)&unk_1AD67C10C);
}

uint64_t sub_1AD3725DC()
{
  return sub_1ACFF9724(&qword_1EECDB168, type metadata accessor for ETP_Heartbeat, (uint64_t)&unk_1AD67C044);
}

uint64_t sub_1AD372608()
{
  return sub_1ACFF9724(&qword_1EECDB170, type metadata accessor for ETP_Heartbeat, (uint64_t)&unk_1AD67C084);
}

uint64_t sub_1AD372634()
{
  return sub_1ACFF9724(&qword_1EECDB178, type metadata accessor for ETP_Tap, (uint64_t)&unk_1AD67C184);
}

uint64_t type metadata accessor for ETP_Tap(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDB238);
}

uint64_t sub_1AD372674()
{
  return sub_1ACFF9724(&qword_1EECDAD60, type metadata accessor for ETP_Tap, (uint64_t)&unk_1AD67C274);
}

uint64_t sub_1AD3726A0()
{
  return sub_1ACFF9724(&qword_1EECDB180, type metadata accessor for ETP_Tap, (uint64_t)&unk_1AD67C1AC);
}

uint64_t sub_1AD3726CC()
{
  return sub_1ACFF9724(&qword_1EECDB188, type metadata accessor for ETP_Tap, (uint64_t)&unk_1AD67C1EC);
}

uint64_t sub_1AD3726F8()
{
  return sub_1ACFF9724(&qword_1EECDB190, type metadata accessor for ETP_Header, (uint64_t)&unk_1AD67C314);
}

uint64_t type metadata accessor for ETP_Header(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDB228);
}

uint64_t sub_1AD372738()
{
  return sub_1ACFF9724(&qword_1EECDAD48, type metadata accessor for ETP_Header, (uint64_t)&unk_1AD67C404);
}

uint64_t sub_1AD372764()
{
  return sub_1ACFF9724(&qword_1EECDB198, type metadata accessor for ETP_Header, (uint64_t)&unk_1AD67C33C);
}

uint64_t sub_1AD372790()
{
  return sub_1ACFF9724(&qword_1EECDB1A0, type metadata accessor for ETP_Header, (uint64_t)&unk_1AD67C37C);
}

uint64_t sub_1AD3727BC()
{
  return sub_1AD0D73A4(&qword_1EECDB1A8, &qword_1EECDB1B0);
}

uint64_t sub_1AD3727E0()
{
  return sub_1AD0D73A4(&qword_1EECDB1B8, &qword_1EECDB1C0);
}

unint64_t sub_1AD372804()
{
  unint64_t result;

  result = qword_1EECDB1D0;
  if (!qword_1EECDB1D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67C77C, &type metadata for ETP_Header.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDB1D0);
  }
  return result;
}

uint64_t sub_1AD372848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  char v23;
  char v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  void (*v29)(char *, uint64_t, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;

  v4 = sub_1AD63B24C();
  v33 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v33 - v8;
  v10 = (int *)type metadata accessor for ETP_Video(0);
  v11 = v10[5];
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (uint64_t *)(a2 + v11);
  v15 = *v14;
  v16 = v14[1];
  v34 = v4;
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 != 15)
      goto LABEL_10;
    goto LABEL_6;
  }
  if (v16 >> 60 == 15)
    goto LABEL_10;
  sub_1AD00408C(v12, v13);
  sub_1AD00408C(v15, v16);
  sub_1AD3DB778(v12, v13);
  v18 = v17;
  sub_1AD004118(v15, v16);
  sub_1AD004118(v12, v13);
  if ((v18 & 1) != 0)
  {
LABEL_6:
    v19 = v10[6];
    v12 = *(_QWORD *)(a1 + v19);
    v13 = *(_QWORD *)(a1 + v19 + 8);
    v20 = (uint64_t *)(a2 + v19);
    v15 = *v20;
    v16 = v20[1];
    if (v13 >> 60 == 15)
    {
      if (v16 >> 60 == 15)
        goto LABEL_14;
    }
    else if (v16 >> 60 != 15)
    {
      sub_1AD00408C(v12, v13);
      sub_1AD00408C(v15, v16);
      sub_1AD3DB778(v12, v13);
      v24 = v23;
      sub_1AD004118(v15, v16);
      sub_1AD004118(v12, v13);
      if ((v24 & 1) == 0)
        goto LABEL_11;
LABEL_14:
      v25 = v10[7];
      v26 = *(unsigned __int8 *)(a1 + v25);
      v27 = *(unsigned __int8 *)(a2 + v25);
      if (v26 == 2)
      {
        if (v27 != 2)
          goto LABEL_11;
      }
      else if (v27 == 2 || ((v27 ^ v26) & 1) != 0)
      {
        goto LABEL_11;
      }
      v28 = v33;
      v29 = *(void (**)(char *, uint64_t, uint64_t))(v33 + 16);
      v30 = a1;
      v31 = v34;
      v29(v9, v30, v34);
      v29(v7, a2, v31);
      sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
      v21 = sub_1AD63B738();
      v32 = *(void (**)(char *, uint64_t))(v28 + 8);
      v32(v7, v31);
      v32(v9, v31);
      return v21 & 1;
    }
LABEL_10:
    sub_1AD00408C(v12, v13);
    sub_1AD00408C(v15, v16);
    sub_1AD004118(v12, v13);
    sub_1AD004118(v15, v16);
  }
LABEL_11:
  v21 = 0;
  return v21 & 1;
}

uint64_t sub_1AD372AF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  int *v11;
  int *v12;
  uint64_t v13;
  float *v14;
  char v15;
  float *v16;
  int v17;
  uint64_t v18;
  float *v19;
  char v20;
  float *v21;
  int v22;
  uint64_t v23;
  float *v24;
  char v25;
  float *v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  unint64_t v43;
  char v44;
  int v46;
  void (*v47)(_BYTE *, uint64_t, uint64_t);
  void (*v48)(_BYTE *, uint64_t);
  _BYTE v49[4];
  int v50;
  uint64_t v51;

  v4 = sub_1AD63B24C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v49[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v49[-v9];
  v11 = (int *)type metadata accessor for ETP_Anger(0);
  v12 = v11;
  v13 = v11[5];
  v14 = (float *)(a1 + v13);
  v15 = *(_BYTE *)(a1 + v13 + 4);
  v16 = (float *)(a2 + v13);
  v17 = *(unsigned __int8 *)(a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_31;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_31;
  }
  v18 = v11[6];
  v19 = (float *)(a1 + v18);
  v20 = *(_BYTE *)(a1 + v18 + 4);
  v21 = (float *)(a2 + v18);
  v22 = *(unsigned __int8 *)(a2 + v18 + 4);
  if ((v20 & 1) != 0)
  {
    if (!v22)
      goto LABEL_31;
  }
  else
  {
    if (*v19 != *v21)
      LOBYTE(v22) = 1;
    if ((v22 & 1) != 0)
      goto LABEL_31;
  }
  v23 = v11[7];
  v24 = (float *)(a1 + v23);
  v25 = *(_BYTE *)(a1 + v23 + 4);
  v26 = (float *)(a2 + v23);
  v27 = *(unsigned __int8 *)(a2 + v23 + 4);
  if ((v25 & 1) != 0)
  {
    if (!v27)
      goto LABEL_31;
  }
  else
  {
    if (*v24 != *v26)
      LOBYTE(v27) = 1;
    if ((v27 & 1) != 0)
      goto LABEL_31;
  }
  v28 = v11[8];
  v29 = *(_QWORD *)(a1 + v28);
  v30 = *(_QWORD *)(a1 + v28 + 8);
  v31 = (uint64_t *)(a2 + v28);
  v32 = *v31;
  v33 = v31[1];
  if (v30 >> 60 != 15)
  {
    if (v33 >> 60 != 15)
    {
      v51 = v29;
      sub_1AD00408C(v29, v30);
      sub_1AD00408C(v32, v33);
      sub_1AD3DB778(v51, v30);
      v50 = v37;
      sub_1AD004118(v32, v33);
      sub_1AD004118(v51, v30);
      if ((v50 & 1) == 0)
        goto LABEL_31;
      goto LABEL_25;
    }
LABEL_23:
    v34 = v29;
    sub_1AD00408C(v29, v30);
    sub_1AD00408C(v32, v33);
    sub_1AD004118(v34, v30);
    v35 = v32;
    v36 = v33;
LABEL_30:
    sub_1AD004118(v35, v36);
    goto LABEL_31;
  }
  if (v33 >> 60 != 15)
    goto LABEL_23;
LABEL_25:
  v38 = v12[9];
  v39 = *(_QWORD *)(a1 + v38);
  v40 = *(_QWORD *)(a1 + v38 + 8);
  v41 = (uint64_t *)(a2 + v38);
  v42 = *v41;
  v43 = v41[1];
  if (v40 >> 60 == 15)
  {
    if (v43 >> 60 == 15)
      goto LABEL_34;
    goto LABEL_29;
  }
  if (v43 >> 60 == 15)
  {
LABEL_29:
    sub_1AD00408C(v39, v40);
    sub_1AD00408C(v42, v43);
    sub_1AD004118(v39, v40);
    v35 = v42;
    v36 = v43;
    goto LABEL_30;
  }
  sub_1AD00408C(v39, v40);
  sub_1AD00408C(v42, v43);
  sub_1AD3DB778(v39, v40);
  LODWORD(v51) = v46;
  sub_1AD004118(v42, v43);
  sub_1AD004118(v39, v40);
  if ((v51 & 1) != 0)
  {
LABEL_34:
    v47 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
    v47(v10, a1, v4);
    v47(v8, a2, v4);
    sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v44 = sub_1AD63B738();
    v48 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
    v48(v8, v4);
    v48(v10, v4);
    return v44 & 1;
  }
LABEL_31:
  v44 = 0;
  return v44 & 1;
}

uint64_t sub_1AD372E34(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  unint64_t v18;
  char v19;
  char v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  unint64_t v34;
  char v35;
  char v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  void (*v40)(char *, uint64_t);
  char *v41;
  uint64_t v42;

  v6 = sub_1AD63B24C();
  v42 = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v41 - v10;
  v12 = (int *)a3(0);
  v13 = v12[5];
  v14 = *(_QWORD *)(a1 + v13);
  v15 = *(_QWORD *)(a1 + v13 + 8);
  v16 = (uint64_t *)(a2 + v13);
  v17 = *v16;
  v18 = v16[1];
  v41 = v9;
  if (v15 >> 60 == 15)
  {
    if (v18 >> 60 != 15)
      goto LABEL_10;
    goto LABEL_6;
  }
  if (v18 >> 60 == 15)
    goto LABEL_10;
  sub_1AD00408C(v14, v15);
  sub_1AD00408C(v17, v18);
  sub_1AD3DB778(v14, v15);
  v20 = v19;
  sub_1AD004118(v17, v18);
  sub_1AD004118(v14, v15);
  if ((v20 & 1) != 0)
  {
LABEL_6:
    v21 = v12[6];
    v14 = *(_QWORD *)(a1 + v21);
    v15 = *(_QWORD *)(a1 + v21 + 8);
    v22 = (uint64_t *)(a2 + v21);
    v17 = *v22;
    v18 = v22[1];
    if (v15 >> 60 == 15)
    {
      if (v18 >> 60 == 15)
        goto LABEL_15;
    }
    else if (v18 >> 60 != 15)
    {
      sub_1AD00408C(v14, v15);
      sub_1AD00408C(v17, v18);
      sub_1AD3DB778(v14, v15);
      v28 = v27;
      sub_1AD004118(v17, v18);
      sub_1AD004118(v14, v15);
      if ((v28 & 1) == 0)
        goto LABEL_12;
LABEL_15:
      v29 = v12[7];
      v30 = *(_QWORD *)(a1 + v29);
      v31 = *(_QWORD *)(a1 + v29 + 8);
      v32 = (uint64_t *)(a2 + v29);
      v33 = *v32;
      v34 = v32[1];
      if (v31 >> 60 == 15)
      {
        if (v34 >> 60 == 15)
          goto LABEL_21;
      }
      else if (v34 >> 60 != 15)
      {
        sub_1AD00408C(v30, v31);
        sub_1AD00408C(v33, v34);
        sub_1AD3DB778(v30, v31);
        v36 = v35;
        sub_1AD004118(v33, v34);
        sub_1AD004118(v30, v31);
        if ((v36 & 1) == 0)
          goto LABEL_12;
LABEL_21:
        v37 = v42;
        v38 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
        v38(v11, a1, v6);
        v39 = v41;
        v38(v41, a2, v6);
        sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        v25 = sub_1AD63B738();
        v40 = *(void (**)(char *, uint64_t))(v37 + 8);
        v40(v39, v6);
        v40(v11, v6);
        return v25 & 1;
      }
      sub_1AD00408C(v30, v31);
      sub_1AD00408C(v33, v34);
      sub_1AD004118(v30, v31);
      v23 = v33;
      v24 = v34;
      goto LABEL_11;
    }
LABEL_10:
    sub_1AD00408C(v14, v15);
    sub_1AD00408C(v17, v18);
    sub_1AD004118(v14, v15);
    v23 = v17;
    v24 = v18;
LABEL_11:
    sub_1AD004118(v23, v24);
  }
LABEL_12:
  v25 = 0;
  return v25 & 1;
}

uint64_t sub_1AD373164(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v12;
  float *v13;
  char v14;
  float *v15;
  int v16;
  uint64_t v17;
  _DWORD *v18;
  char v19;
  _DWORD *v20;
  int v21;
  uint64_t v22;
  float *v23;
  char v24;
  float *v25;
  int v26;
  uint64_t v27;
  float *v28;
  char v29;
  float *v30;
  int v31;
  uint64_t v32;
  float *v33;
  char v34;
  float *v35;
  int v36;
  uint64_t v37;
  float *v38;
  char v39;
  float *v40;
  int v41;
  char v42;
  void (*v44)(char *, uint64_t, uint64_t);
  void (*v45)(char *, uint64_t);
  uint64_t v46;

  v4 = sub_1AD63B24C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v46 - v9;
  v11 = (int *)type metadata accessor for ETP_Heartbeat(0);
  v12 = v11[5];
  v13 = (float *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 4);
  v15 = (float *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 4);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_33;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_33;
  }
  v17 = v11[6];
  v18 = (_DWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 4);
  v20 = (_DWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 4);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_33;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_33;
  }
  v22 = v11[7];
  v23 = (float *)(a1 + v22);
  v24 = *(_BYTE *)(a1 + v22 + 4);
  v25 = (float *)(a2 + v22);
  v26 = *(unsigned __int8 *)(a2 + v22 + 4);
  if ((v24 & 1) != 0)
  {
    if (!v26)
      goto LABEL_33;
  }
  else
  {
    if (*v23 != *v25)
      LOBYTE(v26) = 1;
    if ((v26 & 1) != 0)
      goto LABEL_33;
  }
  v27 = v11[8];
  v28 = (float *)(a1 + v27);
  v29 = *(_BYTE *)(a1 + v27 + 4);
  v30 = (float *)(a2 + v27);
  v31 = *(unsigned __int8 *)(a2 + v27 + 4);
  if ((v29 & 1) != 0)
  {
    if (!v31)
      goto LABEL_33;
  }
  else
  {
    if (*v28 != *v30)
      LOBYTE(v31) = 1;
    if ((v31 & 1) != 0)
      goto LABEL_33;
  }
  v32 = v11[9];
  v33 = (float *)(a1 + v32);
  v34 = *(_BYTE *)(a1 + v32 + 4);
  v35 = (float *)(a2 + v32);
  v36 = *(unsigned __int8 *)(a2 + v32 + 4);
  if ((v34 & 1) == 0)
  {
    if (*v33 != *v35)
      LOBYTE(v36) = 1;
    if ((v36 & 1) != 0)
      goto LABEL_33;
LABEL_31:
    v37 = v11[10];
    v38 = (float *)(a1 + v37);
    v39 = *(_BYTE *)(a1 + v37 + 4);
    v40 = (float *)(a2 + v37);
    v41 = *(unsigned __int8 *)(a2 + v37 + 4);
    if ((v39 & 1) != 0)
    {
      if (!v41)
        goto LABEL_33;
    }
    else
    {
      if (*v38 != *v40)
        LOBYTE(v41) = 1;
      if ((v41 & 1) != 0)
        goto LABEL_33;
    }
    v44 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v44(v10, a1, v4);
    v44(v8, a2, v4);
    sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v42 = sub_1AD63B738();
    v45 = *(void (**)(char *, uint64_t))(v5 + 8);
    v45(v8, v4);
    v45(v10, v4);
    return v42 & 1;
  }
  if (v36)
    goto LABEL_31;
LABEL_33:
  v42 = 0;
  return v42 & 1;
}

uint64_t sub_1AD3733B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  int *v11;
  int *v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v17;
  _QWORD *v18;
  char v19;
  _QWORD *v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  _DWORD *v30;
  char v31;
  _DWORD *v32;
  int v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  double *v44;
  char v45;
  double *v46;
  int v47;
  uint64_t v49;
  void (*v50)(_BYTE *, uint64_t, uint64_t);
  void (*v51)(_BYTE *, uint64_t);
  _BYTE v52[4];
  int v53;
  uint64_t v54;

  v4 = sub_1AD63B24C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v52[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v52[-v9];
  v11 = (int *)type metadata accessor for ETP_Header(0);
  v12 = v11;
  v13 = v11[5];
  v14 = *(unsigned __int8 *)(a1 + v13);
  v15 = *(unsigned __int8 *)(a2 + v13);
  if (v14 == 8)
  {
    if (v15 != 8)
      goto LABEL_41;
  }
  else if (v15 == 8 || v14 != v15)
  {
    goto LABEL_41;
  }
  v17 = v11[6];
  v18 = (_QWORD *)(a1 + v17);
  v19 = *(_BYTE *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  v21 = *(unsigned __int8 *)(a2 + v17 + 8);
  if ((v19 & 1) != 0)
  {
    if (!v21)
      goto LABEL_41;
  }
  else
  {
    if (*v18 != *v20)
      LOBYTE(v21) = 1;
    if ((v21 & 1) != 0)
      goto LABEL_41;
  }
  v54 = v5;
  v22 = v11[7];
  v23 = *(_QWORD *)(a1 + v22);
  v24 = *(_QWORD *)(a1 + v22 + 8);
  v25 = (uint64_t *)(a2 + v22);
  v26 = *v25;
  v27 = v25[1];
  if (v24 >> 60 == 15)
  {
    if (v27 >> 60 == 15)
      goto LABEL_21;
LABEL_19:
    sub_1AD00408C(v23, v24);
    sub_1AD00408C(v26, v27);
    sub_1AD004118(v23, v24);
    sub_1AD004118(v26, v27);
    goto LABEL_41;
  }
  if (v27 >> 60 == 15)
    goto LABEL_19;
  sub_1AD00408C(v23, v24);
  sub_1AD00408C(v26, v27);
  sub_1AD3DB778(v23, v24);
  v53 = v28;
  sub_1AD004118(v26, v27);
  sub_1AD004118(v23, v24);
  if ((v53 & 1) == 0)
    goto LABEL_41;
LABEL_21:
  v29 = v12[8];
  v30 = (_DWORD *)(a1 + v29);
  v31 = *(_BYTE *)(a1 + v29 + 4);
  v32 = (_DWORD *)(a2 + v29);
  v33 = *(unsigned __int8 *)(a2 + v29 + 4);
  if ((v31 & 1) != 0)
  {
    if (!v33)
      goto LABEL_41;
  }
  else
  {
    if (*v30 != *v32)
      LOBYTE(v33) = 1;
    if ((v33 & 1) != 0)
      goto LABEL_41;
  }
  v34 = v12[9];
  v35 = (_QWORD *)(a1 + v34);
  v36 = *(_QWORD *)(a1 + v34 + 8);
  v37 = (_QWORD *)(a2 + v34);
  v38 = v37[1];
  if (!v36)
  {
    if (v38)
      goto LABEL_41;
LABEL_34:
    v40 = v12[10];
    v41 = *(unsigned __int8 *)(a1 + v40);
    v42 = *(unsigned __int8 *)(a2 + v40);
    if (v41 != 2)
    {
      if (v42 == 2 || ((((v42 & 1) == 0) ^ v41) & 1) == 0)
        goto LABEL_41;
LABEL_39:
      v43 = v12[11];
      v44 = (double *)(a1 + v43);
      v45 = *(_BYTE *)(a1 + v43 + 8);
      v46 = (double *)(a2 + v43);
      v47 = *(unsigned __int8 *)(a2 + v43 + 8);
      if ((v45 & 1) != 0)
      {
        if (!v47)
          goto LABEL_41;
      }
      else
      {
        if (*v44 != *v46)
          LOBYTE(v47) = 1;
        if ((v47 & 1) != 0)
          goto LABEL_41;
      }
      v49 = v54;
      v50 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v54 + 16);
      v50(v10, a1, v4);
      v50(v8, a2, v4);
      sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
      v39 = sub_1AD63B738();
      v51 = *(void (**)(_BYTE *, uint64_t))(v49 + 8);
      v51(v8, v4);
      v51(v10, v4);
      return v39 & 1;
    }
    if (v42 == 2)
      goto LABEL_39;
LABEL_41:
    v39 = 0;
    return v39 & 1;
  }
  if (!v38)
    goto LABEL_41;
  if (*v35 == *v37 && v36 == v38)
    goto LABEL_34;
  v39 = 0;
  if ((sub_1AD63C2A8() & 1) != 0)
    goto LABEL_34;
  return v39 & 1;
}

uint64_t sub_1AD3736E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _DWORD *v14;
  char v15;
  _DWORD *v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  unint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;
  char v29;
  int v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  unint64_t v37;
  char v38;
  char v39;
  uint64_t v40;
  void (*v41)(_BYTE *, uint64_t, uint64_t);
  void (*v42)(_BYTE *, uint64_t);
  _BYTE v43[4];
  int v44;
  uint64_t v45;

  v4 = sub_1AD63B24C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v43[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v43[-v9];
  v11 = type metadata accessor for ETP_Doodle(0);
  v12 = v11;
  v13 = *(int *)(v11 + 20);
  v14 = (_DWORD *)(a1 + v13);
  v15 = *(_BYTE *)(a1 + v13 + 4);
  v16 = (_DWORD *)(a2 + v13);
  v17 = *(unsigned __int8 *)(a2 + v13 + 4);
  if ((v15 & 1) != 0)
  {
    if (!v17)
      goto LABEL_18;
  }
  else
  {
    if (*v14 != *v16)
      LOBYTE(v17) = 1;
    if ((v17 & 1) != 0)
      goto LABEL_18;
  }
  v45 = v5;
  v18 = *(int *)(v11 + 24);
  v19 = *(_QWORD *)(a1 + v18);
  v20 = *(_QWORD *)(a1 + v18 + 8);
  v21 = (uint64_t *)(a2 + v18);
  v22 = *v21;
  v23 = v21[1];
  if (v20 >> 60 == 15)
  {
    if (v23 >> 60 != 15)
      goto LABEL_16;
    goto LABEL_12;
  }
  if (v23 >> 60 == 15)
    goto LABEL_16;
  sub_1AD00408C(v19, v20);
  sub_1AD00408C(v22, v23);
  sub_1AD3DB778(v19, v20);
  v44 = v24;
  sub_1AD004118(v22, v23);
  sub_1AD004118(v19, v20);
  if ((v44 & 1) != 0)
  {
LABEL_12:
    v25 = *(int *)(v12 + 28);
    v19 = *(_QWORD *)(a1 + v25);
    v20 = *(_QWORD *)(a1 + v25 + 8);
    v26 = (uint64_t *)(a2 + v25);
    v22 = *v26;
    v23 = v26[1];
    if (v20 >> 60 == 15)
    {
      if (v23 >> 60 == 15)
        goto LABEL_21;
    }
    else if (v23 >> 60 != 15)
    {
      sub_1AD00408C(v19, v20);
      sub_1AD00408C(v22, v23);
      sub_1AD3DB778(v19, v20);
      v44 = v31;
      sub_1AD004118(v22, v23);
      sub_1AD004118(v19, v20);
      if ((v44 & 1) == 0)
        goto LABEL_18;
LABEL_21:
      v32 = *(int *)(v12 + 32);
      v33 = *(_QWORD *)(a1 + v32);
      v34 = *(_QWORD *)(a1 + v32 + 8);
      v35 = (uint64_t *)(a2 + v32);
      v36 = *v35;
      v37 = v35[1];
      if (v34 >> 60 == 15)
      {
        if (v37 >> 60 == 15)
          goto LABEL_27;
      }
      else if (v37 >> 60 != 15)
      {
        sub_1AD00408C(v33, v34);
        sub_1AD00408C(v36, v37);
        sub_1AD3DB778(v33, v34);
        v39 = v38;
        sub_1AD004118(v36, v37);
        sub_1AD004118(v33, v34);
        if ((v39 & 1) == 0)
          goto LABEL_18;
LABEL_27:
        v40 = v45;
        v41 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v45 + 16);
        v41(v10, a1, v4);
        v41(v8, a2, v4);
        sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        v29 = sub_1AD63B738();
        v42 = *(void (**)(_BYTE *, uint64_t))(v40 + 8);
        v42(v8, v4);
        v42(v10, v4);
        return v29 & 1;
      }
      sub_1AD00408C(v33, v34);
      sub_1AD00408C(v36, v37);
      sub_1AD004118(v33, v34);
      v27 = v36;
      v28 = v37;
      goto LABEL_17;
    }
LABEL_16:
    sub_1AD00408C(v19, v20);
    sub_1AD00408C(v22, v23);
    sub_1AD004118(v19, v20);
    v27 = v22;
    v28 = v23;
LABEL_17:
    sub_1AD004118(v27, v28);
  }
LABEL_18:
  v29 = 0;
  return v29 & 1;
}

unint64_t sub_1AD373A4C()
{
  unint64_t result;

  result = qword_1EECDB210;
  if (!qword_1EECDB210)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67C734, &type metadata for ETP_Video.MediaType);
    atomic_store(result, (unint64_t *)&qword_1EECDB210);
  }
  return result;
}

_QWORD *sub_1AD373A90(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  char *v12;
  char *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    v11 = a3[7];
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = *((_QWORD *)v13 + 1);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v16 = *(_QWORD *)v13;
      sub_1AD0040A0(*(_QWORD *)v13, *((_QWORD *)v13 + 1));
      *(_QWORD *)v12 = v16;
      *((_QWORD *)v12 + 1) = v14;
    }
    v17 = a3[8];
    v18 = a3[9];
    v19 = (char *)a1 + v17;
    v20 = (char *)a2 + v17;
    *(_DWORD *)v19 = *(_DWORD *)v20;
    v19[4] = v20[4];
    v21 = (_QWORD *)((char *)a1 + v18);
    v22 = (_QWORD *)((char *)a2 + v18);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = a3[11];
    *((_BYTE *)a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    v25 = (char *)a1 + v24;
    v26 = (char *)a2 + v24;
    *(_QWORD *)v25 = *(_QWORD *)v26;
    v25[8] = v26[8];
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD373BC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;

  v4 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  v6 = v5[1];
  if (v6 >> 60 != 15)
    sub_1AD00412C(*v5, v6);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD373C30(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  v10 = a3[7];
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = v12[1];
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
  }
  else
  {
    v14 = *v12;
    sub_1AD0040A0(*v12, v12[1]);
    *(_QWORD *)v11 = v14;
    *(_QWORD *)(v11 + 8) = v13;
  }
  v15 = a3[8];
  v16 = a3[9];
  v17 = a1 + v15;
  v18 = a2 + v15;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = (_QWORD *)(a1 + v16);
  v20 = (_QWORD *)(a2 + v16);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD373D3C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int *v21;
  int v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v7 = a3[6];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = a3[7];
  v12 = (uint64_t *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  if (*(_QWORD *)(a1 + v11 + 8) >> 60 != 15)
  {
    if (v14 >> 60 != 15)
    {
      v16 = *v13;
      sub_1AD0040A0(v16, v14);
      v17 = *v12;
      v18 = v12[1];
      *v12 = v16;
      v12[1] = v14;
      sub_1AD00412C(v17, v18);
      goto LABEL_8;
    }
    sub_1AD007EC0((uint64_t)v12);
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    goto LABEL_8;
  }
  v15 = *v13;
  sub_1AD0040A0(v15, v14);
  *v12 = v15;
  v12[1] = v14;
LABEL_8:
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = (int *)(a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 4) = *((_BYTE *)v21 + 4);
  *(_DWORD *)v20 = v22;
  v23 = a3[9];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v26 = a3[11];
  v27 = a1 + v26;
  v28 = (uint64_t *)(a2 + v26);
  v29 = *v28;
  *(_BYTE *)(v27 + 8) = *((_BYTE *)v28 + 8);
  *(_QWORD *)v27 = v29;
  return a1;
}

uint64_t sub_1AD373EAC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  *(_BYTE *)(a1 + v13) = *(_BYTE *)(a2 + v13);
  v14 = a3[11];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)(v15 + 8) = *(_BYTE *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  return a1;
}

uint64_t sub_1AD373F74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_BYTE *)(a1 + a3[5]) = *(_BYTE *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  v10 = a3[7];
  v11 = (uint64_t *)(a1 + v10);
  v12 = (uint64_t *)(a2 + v10);
  v13 = *(_QWORD *)(a1 + v10 + 8);
  if (v13 >> 60 != 15)
  {
    v14 = v12[1];
    if (v14 >> 60 != 15)
    {
      v15 = *v11;
      *v11 = *v12;
      v11[1] = v14;
      sub_1AD00412C(v15, v13);
      goto LABEL_6;
    }
    sub_1AD007EC0((uint64_t)v11);
  }
  *(_OWORD *)v11 = *(_OWORD *)v12;
LABEL_6:
  v16 = a3[8];
  v17 = a3[9];
  v18 = a1 + v16;
  v19 = a2 + v16;
  *(_DWORD *)v18 = *(_DWORD *)v19;
  *(_BYTE *)(v18 + 4) = *(_BYTE *)(v19 + 4);
  v20 = (_QWORD *)(a1 + v17);
  v21 = (uint64_t *)(a2 + v17);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v25 = a1 + v24;
  v26 = a2 + v24;
  *(_QWORD *)v25 = *(_QWORD *)v26;
  *(_BYTE *)(v25 + 8) = *(_BYTE *)(v26 + 8);
  return a1;
}

uint64_t sub_1AD374098()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3740A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 36) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1AD374130()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD37413C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 36) + 8) = a2;
  return result;
}

uint64_t sub_1AD3741B8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ETP_Header.MessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AD3742A8 + 4 * byte_1AD67B8DB[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AD3742DC + 4 * byte_1AD67B8D6[v4]))();
}

uint64_t sub_1AD3742DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3742E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3742ECLL);
  return result;
}

uint64_t sub_1AD3742F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD374300);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AD374304(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD37430C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ETP_Header.MessageType()
{
  return &type metadata for ETP_Header.MessageType;
}

uint64_t sub_1AD374340()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD374350()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD374360()
{
  return sub_1AD3762D4();
}

uint64_t *sub_1AD37436C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  int v24;
  char *v25;
  char *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (char *)a2 + v15;
    *(_DWORD *)v18 = *(_DWORD *)v19;
    v18[4] = v19[4];
    v20 = a3[9];
    v21 = a3[10];
    v22 = (char *)a1 + v20;
    v23 = (char *)a2 + v20;
    v24 = *(_DWORD *)v23;
    v22[4] = v23[4];
    *(_DWORD *)v22 = v24;
    v25 = (char *)a1 + v21;
    v26 = (char *)a2 + v21;
    v25[4] = v26[4];
    *(_DWORD *)v25 = *(_DWORD *)v26;
  }
  return a1;
}

uint64_t sub_1AD374488(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = (int *)(a2 + v19);
  v23 = *v22;
  *(_BYTE *)(v21 + 4) = *((_BYTE *)v22 + 4);
  *(_DWORD *)v21 = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  return a1;
}

uint64_t sub_1AD374574(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[8];
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = *(_BYTE *)(v21 + 4);
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = v22;
  v23 = a3[9];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  *(_BYTE *)(v24 + 4) = v26;
  v27 = a3[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = *(_BYTE *)(v29 + 4);
  *(_DWORD *)v28 = *(_DWORD *)v29;
  *(_BYTE *)(v28 + 4) = v30;
  return a1;
}

uint64_t sub_1AD37466C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = (int *)(a2 + v19);
  v23 = *v22;
  *(_BYTE *)(v21 + 4) = *((_BYTE *)v22 + 4);
  *(_DWORD *)v21 = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  return a1;
}

uint64_t sub_1AD374758(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int *v22;
  int v23;
  uint64_t v24;
  uint64_t v25;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  *(_DWORD *)v17 = *(_DWORD *)v18;
  *(_BYTE *)(v17 + 4) = *(_BYTE *)(v18 + 4);
  v19 = a3[9];
  v20 = a3[10];
  v21 = a1 + v19;
  v22 = (int *)(a2 + v19);
  v23 = *v22;
  *(_BYTE *)(v21 + 4) = *((_BYTE *)v22 + 4);
  *(_DWORD *)v21 = v23;
  v24 = a1 + v20;
  v25 = a2 + v20;
  *(_BYTE *)(v24 + 4) = *(_BYTE *)(v25 + 4);
  *(_DWORD *)v24 = *(_DWORD *)v25;
  return a1;
}

uint64_t sub_1AD374844()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD374854()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD374864()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AD3748E0(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  unint64_t v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = *(uint64_t *)((char *)a2 + v9 + 8);
    if (v14 >> 60 == 15)
    {
      *(_OWORD *)v12 = *(_OWORD *)v13;
    }
    else
    {
      v16 = *v13;
      sub_1AD0040A0(*v13, v14);
      *(_QWORD *)v12 = v16;
      *((_QWORD *)v12 + 1) = v14;
    }
    v17 = a3[7];
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = *((_QWORD *)v19 + 1);
    if (v20 >> 60 == 15)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
    }
    else
    {
      v21 = *(_QWORD *)v19;
      sub_1AD0040A0(*(_QWORD *)v19, *((_QWORD *)v19 + 1));
      *(_QWORD *)v18 = v21;
      *((_QWORD *)v18 + 1) = v20;
    }
    v22 = a3[8];
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((_QWORD *)v24 + 1);
    if (v25 >> 60 == 15)
    {
      *(_OWORD *)v23 = *(_OWORD *)v24;
    }
    else
    {
      v26 = *(_QWORD *)v24;
      sub_1AD0040A0(*(_QWORD *)v24, *((_QWORD *)v24 + 1));
      *(_QWORD *)v23 = v26;
      *((_QWORD *)v23 + 1) = v25;
    }
  }
  return a1;
}

uint64_t sub_1AD374A30(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;

  v4 = sub_1AD63B24C();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v6 = (uint64_t *)(a1 + a2[6]);
  v7 = v6[1];
  if (v7 >> 60 != 15)
    result = sub_1AD00412C(*v6, v7);
  v8 = (uint64_t *)(a1 + a2[7]);
  v9 = v8[1];
  if (v9 >> 60 != 15)
    result = sub_1AD00412C(*v8, v9);
  v10 = (uint64_t *)(a1 + a2[8]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    return sub_1AD00412C(*v10, v11);
  return result;
}

uint64_t sub_1AD374AD4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = (uint64_t *)(a2 + v8);
  v13 = *(_QWORD *)(a2 + v8 + 8);
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
  }
  else
  {
    v14 = *v12;
    sub_1AD0040A0(*v12, v13);
    *(_QWORD *)v11 = v14;
    *(_QWORD *)(v11 + 8) = v13;
  }
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = (uint64_t *)(a2 + v15);
  v18 = v17[1];
  if (v18 >> 60 == 15)
  {
    *(_OWORD *)v16 = *(_OWORD *)v17;
  }
  else
  {
    v19 = *v17;
    sub_1AD0040A0(*v17, v17[1]);
    *(_QWORD *)v16 = v19;
    *(_QWORD *)(v16 + 8) = v18;
  }
  v20 = a3[8];
  v21 = a1 + v20;
  v22 = (uint64_t *)(a2 + v20);
  v23 = v22[1];
  if (v23 >> 60 == 15)
  {
    *(_OWORD *)v21 = *(_OWORD *)v22;
  }
  else
  {
    v24 = *v22;
    sub_1AD0040A0(*v22, v22[1]);
    *(_QWORD *)v21 = v24;
    *(_QWORD *)(v21 + 8) = v23;
  }
  return a1;
}

uint64_t sub_1AD374BF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  int v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (int *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 4) = *((_BYTE *)v9 + 4);
  *(_DWORD *)v8 = v10;
  v11 = a3[6];
  v12 = (uint64_t *)(a1 + v11);
  v13 = (uint64_t *)(a2 + v11);
  v14 = *(_QWORD *)(a2 + v11 + 8);
  if (*(_QWORD *)(a1 + v11 + 8) >> 60 == 15)
  {
    if (v14 >> 60 != 15)
    {
      v15 = *v13;
      sub_1AD0040A0(v15, v14);
      *v12 = v15;
      v12[1] = v14;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v14 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v12);
LABEL_6:
    *(_OWORD *)v12 = *(_OWORD *)v13;
    goto LABEL_8;
  }
  v16 = *v13;
  sub_1AD0040A0(v16, v14);
  v17 = *v12;
  v18 = v12[1];
  *v12 = v16;
  v12[1] = v14;
  sub_1AD00412C(v17, v18);
LABEL_8:
  v19 = a3[7];
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *(_QWORD *)(a2 + v19 + 8);
  if (*(_QWORD *)(a1 + v19 + 8) >> 60 == 15)
  {
    if (v22 >> 60 != 15)
    {
      v23 = *v21;
      sub_1AD0040A0(v23, v22);
      *v20 = v23;
      v20[1] = v22;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v22 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v20);
LABEL_13:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    goto LABEL_15;
  }
  v24 = *v21;
  sub_1AD0040A0(v24, v22);
  v25 = *v20;
  v26 = v20[1];
  *v20 = v24;
  v20[1] = v22;
  sub_1AD00412C(v25, v26);
LABEL_15:
  v27 = a3[8];
  v28 = (uint64_t *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *(_QWORD *)(a2 + v27 + 8);
  if (*(_QWORD *)(a1 + v27 + 8) >> 60 != 15)
  {
    if (v30 >> 60 != 15)
    {
      v32 = *v29;
      sub_1AD0040A0(v32, v30);
      v33 = *v28;
      v34 = v28[1];
      *v28 = v32;
      v28[1] = v30;
      sub_1AD00412C(v33, v34);
      return a1;
    }
    sub_1AD007EC0((uint64_t)v28);
    goto LABEL_20;
  }
  if (v30 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    return a1;
  }
  v31 = *v29;
  sub_1AD0040A0(v31, v30);
  *v28 = v31;
  v28[1] = v30;
  return a1;
}

uint64_t sub_1AD374DEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  v11 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v11) = *(_OWORD *)(a2 + v11);
  return a1;
}

uint64_t sub_1AD374E74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  *(_DWORD *)v9 = *(_DWORD *)v10;
  v11 = a1 + v8;
  v12 = a2 + v8;
  v13 = *(_QWORD *)(a1 + v8 + 8);
  if (v13 >> 60 == 15)
    goto LABEL_4;
  v14 = *(_QWORD *)(v12 + 8);
  if (v14 >> 60 == 15)
  {
    sub_1AD007EC0(v11);
LABEL_4:
    *(_OWORD *)v11 = *(_OWORD *)v12;
    goto LABEL_6;
  }
  v15 = *(_QWORD *)v11;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_QWORD *)(v11 + 8) = v14;
  sub_1AD00412C(v15, v13);
LABEL_6:
  v16 = a3[7];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = *(_QWORD *)(a1 + v16 + 8);
  if (v19 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    goto LABEL_11;
  }
  v20 = *(_QWORD *)(v18 + 8);
  if (v20 >> 60 == 15)
  {
    sub_1AD007EC0(v17);
    goto LABEL_9;
  }
  v21 = *(_QWORD *)v17;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v20;
  sub_1AD00412C(v21, v19);
LABEL_11:
  v22 = a3[8];
  v23 = (uint64_t *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v25 = *(_QWORD *)(a1 + v22 + 8);
  if (v25 >> 60 != 15)
  {
    v26 = v24[1];
    if (v26 >> 60 != 15)
    {
      v27 = *v23;
      *v23 = *v24;
      v23[1] = v26;
      sub_1AD00412C(v27, v25);
      return a1;
    }
    sub_1AD007EC0((uint64_t)v23);
  }
  *(_OWORD *)v23 = *(_OWORD *)v24;
  return a1;
}

uint64_t sub_1AD374FD4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD374FE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  unsigned int v11;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8) >> 60;
  v10 = ((4 * (_DWORD)v9) & 0xC) == 0;
  v11 = ((4 * v9) & 0xC | (v9 >> 2)) ^ 0xF;
  if (v10)
    return 0;
  else
    return v11;
}

uint64_t sub_1AD375068()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD375074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 24));
  *v10 = 0;
  v10[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
  return result;
}

uint64_t sub_1AD3750FC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AD37517C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B24C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1AD3751B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AD63B24C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1AD3751EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AD375230(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AD375274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AD3752B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AD3752FC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_3Tm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B24C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1AD375348()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_4Tm_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1AD63B24C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1AD375398()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_1AD375400(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *(_QWORD *)v10;
      sub_1AD0040A0(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
    v14 = a3[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *((_QWORD *)v16 + 1);
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
    }
    else
    {
      v18 = *(_QWORD *)v16;
      sub_1AD0040A0(*(_QWORD *)v16, *((_QWORD *)v16 + 1));
      *(_QWORD *)v15 = v18;
      *((_QWORD *)v15 + 1) = v17;
    }
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_1AD375508(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;

  v4 = sub_1AD63B24C();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v6 = (uint64_t *)(a1 + *(int *)(a2 + 20));
  v7 = v6[1];
  if (v7 >> 60 != 15)
    result = sub_1AD00412C(*v6, v7);
  v8 = (uint64_t *)(a1 + *(int *)(a2 + 24));
  v9 = v8[1];
  if (v9 >> 60 != 15)
    return sub_1AD00412C(*v8, v9);
  return result;
}

uint64_t sub_1AD37558C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_1AD0040A0(*v9, v9[1]);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = v14[1];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
  }
  else
  {
    v16 = *v14;
    sub_1AD0040A0(*v14, v14[1]);
    *(_QWORD *)v13 = v16;
    *(_QWORD *)(v13 + 8) = v15;
  }
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1AD375668(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      v11 = *v9;
      sub_1AD0040A0(v11, v10);
      *v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v8);
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v12 = *v9;
  sub_1AD0040A0(v12, v10);
  v13 = *v8;
  v14 = v8[1];
  *v8 = v12;
  v8[1] = v10;
  sub_1AD00412C(v13, v14);
LABEL_8:
  v15 = a3[6];
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  if (*(_QWORD *)(a1 + v15 + 8) >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      v20 = *v17;
      sub_1AD0040A0(v20, v18);
      v21 = *v16;
      v22 = v16[1];
      *v16 = v20;
      v16[1] = v18;
      sub_1AD00412C(v21, v22);
      goto LABEL_15;
    }
    sub_1AD007EC0((uint64_t)v16);
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_15;
  }
  v19 = *v17;
  sub_1AD0040A0(v19, v18);
  *v16 = v19;
  v16[1] = v18;
LABEL_15:
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1AD3757CC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1AD37583C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 == 15)
    goto LABEL_4;
  v11 = *(_QWORD *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_1AD007EC0(v8);
LABEL_4:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  v12 = *(_QWORD *)v8;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v11;
  sub_1AD00412C(v12, v10);
LABEL_6:
  v13 = a3[6];
  v14 = (uint64_t *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v16 = *(_QWORD *)(a1 + v13 + 8);
  if (v16 >> 60 != 15)
  {
    v17 = v15[1];
    if (v17 >> 60 != 15)
    {
      v18 = *v14;
      *v14 = *v15;
      v14[1] = v17;
      sub_1AD00412C(v18, v16);
      goto LABEL_11;
    }
    sub_1AD007EC0((uint64_t)v14);
  }
  *(_OWORD *)v14 = *(_OWORD *)v15;
LABEL_11:
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1AD375940()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD37594C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int v9;
  unsigned int v10;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) <= 2u)
    v9 = 2;
  else
    v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 28));
  v10 = v9 - 2;
  if (*(unsigned __int8 *)(a1 + *(int *)(a3 + 28)) >= 2u)
    return v10;
  else
    return 0;
}

uint64_t sub_1AD3759D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3759DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 28)) = a2 + 2;
  return result;
}

uint64_t sub_1AD375A54()
{
  return sub_1AD3762D4();
}

uint64_t storeEnumTagSinglePayload for ETP_Video.MediaType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD375AAC + 4 * byte_1AD67B8E5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD375AE0 + 4 * byte_1AD67B8E0[v4]))();
}

uint64_t sub_1AD375AE0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD375AE8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD375AF0);
  return result;
}

uint64_t sub_1AD375AFC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD375B04);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD375B08(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD375B10(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ETP_Video.MediaType()
{
  return &type metadata for ETP_Video.MediaType;
}

uint64_t *sub_1AD375B2C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *(_QWORD *)v10;
      sub_1AD0040A0(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
    v14 = a3[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *((_QWORD *)v16 + 1);
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
    }
    else
    {
      v18 = *(_QWORD *)v16;
      sub_1AD0040A0(*(_QWORD *)v16, *((_QWORD *)v16 + 1));
      *(_QWORD *)v15 = v18;
      *((_QWORD *)v15 + 1) = v17;
    }
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *((_QWORD *)v21 + 1);
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
    else
    {
      v23 = *(_QWORD *)v21;
      sub_1AD0040A0(*(_QWORD *)v21, *((_QWORD *)v21 + 1));
      *(_QWORD *)v20 = v23;
      *((_QWORD *)v20 + 1) = v22;
    }
  }
  return a1;
}

uint64_t sub_1AD375C64(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;

  v4 = sub_1AD63B24C();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v6 = (uint64_t *)(a1 + a2[5]);
  v7 = v6[1];
  if (v7 >> 60 != 15)
    result = sub_1AD00412C(*v6, v7);
  v8 = (uint64_t *)(a1 + a2[6]);
  v9 = v8[1];
  if (v9 >> 60 != 15)
    result = sub_1AD00412C(*v8, v9);
  v10 = (uint64_t *)(a1 + a2[7]);
  v11 = v10[1];
  if (v11 >> 60 != 15)
    return sub_1AD00412C(*v10, v11);
  return result;
}

uint64_t sub_1AD375D08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_1AD0040A0(*v9, v9[1]);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = v14[1];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
  }
  else
  {
    v16 = *v14;
    sub_1AD0040A0(*v14, v14[1]);
    *(_QWORD *)v13 = v16;
    *(_QWORD *)(v13 + 8) = v15;
  }
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = v19[1];
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  else
  {
    v21 = *v19;
    sub_1AD0040A0(*v19, v19[1]);
    *(_QWORD *)v18 = v21;
    *(_QWORD *)(v18 + 8) = v20;
  }
  return a1;
}

uint64_t sub_1AD375E14(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      v11 = *v9;
      sub_1AD0040A0(v11, v10);
      *v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v8);
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v12 = *v9;
  sub_1AD0040A0(v12, v10);
  v13 = *v8;
  v14 = v8[1];
  *v8 = v12;
  v8[1] = v10;
  sub_1AD00412C(v13, v14);
LABEL_8:
  v15 = a3[6];
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  if (*(_QWORD *)(a1 + v15 + 8) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      v19 = *v17;
      sub_1AD0040A0(v19, v18);
      *v16 = v19;
      v16[1] = v18;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v16);
LABEL_13:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_15;
  }
  v20 = *v17;
  sub_1AD0040A0(v20, v18);
  v21 = *v16;
  v22 = v16[1];
  *v16 = v20;
  v16[1] = v18;
  sub_1AD00412C(v21, v22);
LABEL_15:
  v23 = a3[7];
  v24 = (uint64_t *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v26 = *(_QWORD *)(a2 + v23 + 8);
  if (*(_QWORD *)(a1 + v23 + 8) >> 60 != 15)
  {
    if (v26 >> 60 != 15)
    {
      v28 = *v25;
      sub_1AD0040A0(v28, v26);
      v29 = *v24;
      v30 = v24[1];
      *v24 = v28;
      v24[1] = v26;
      sub_1AD00412C(v29, v30);
      return a1;
    }
    sub_1AD007EC0((uint64_t)v24);
    goto LABEL_20;
  }
  if (v26 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    return a1;
  }
  v27 = *v25;
  sub_1AD0040A0(v27, v26);
  *v24 = v27;
  v24[1] = v26;
  return a1;
}

uint64_t sub_1AD375FEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_1AD37605C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 == 15)
    goto LABEL_4;
  v11 = *(_QWORD *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_1AD007EC0(v8);
LABEL_4:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  v12 = *(_QWORD *)v8;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v11;
  sub_1AD00412C(v12, v10);
LABEL_6:
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a1 + v13 + 8);
  if (v16 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)v14 = *(_OWORD *)v15;
    goto LABEL_11;
  }
  v17 = *(_QWORD *)(v15 + 8);
  if (v17 >> 60 == 15)
  {
    sub_1AD007EC0(v14);
    goto LABEL_9;
  }
  v18 = *(_QWORD *)v14;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v17;
  sub_1AD00412C(v18, v16);
LABEL_11:
  v19 = a3[7];
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *(_QWORD *)(a1 + v19 + 8);
  if (v22 >> 60 != 15)
  {
    v23 = v21[1];
    if (v23 >> 60 != 15)
    {
      v24 = *v20;
      *v20 = *v21;
      v20[1] = v23;
      sub_1AD00412C(v24, v22);
      return a1;
    }
    sub_1AD007EC0((uint64_t)v20);
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
  return a1;
}

uint64_t sub_1AD3761A4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t __swift_get_extra_inhabitant_index_1Tm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  unsigned int v11;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  v10 = ((4 * (_DWORD)v9) & 0xC) == 0;
  v11 = ((4 * v9) & 0xC | (v9 >> 2)) ^ 0xF;
  if (v10)
    return 0;
  else
    return v11;
}

uint64_t sub_1AD37623C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t __swift_store_extra_inhabitant_index_2Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
  return result;
}

uint64_t sub_1AD3762D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AD37634C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  unint64_t v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_DWORD *)v10 = *(_DWORD *)v11;
    v10[4] = v11[4];
    v12 = (char *)a1 + v9;
    v13 = (char *)a2 + v9;
    *(_DWORD *)v12 = *(_DWORD *)v13;
    v12[4] = v13[4];
    v14 = a3[7];
    v15 = a3[8];
    v16 = (char *)a1 + v14;
    v17 = (char *)a2 + v14;
    *(_DWORD *)v16 = *(_DWORD *)v17;
    v16[4] = v17[4];
    v18 = (char *)a1 + v15;
    v19 = (uint64_t *)((char *)a2 + v15);
    v20 = *(uint64_t *)((char *)a2 + v15 + 8);
    if (v20 >> 60 == 15)
    {
      *(_OWORD *)v18 = *(_OWORD *)v19;
    }
    else
    {
      v22 = *v19;
      sub_1AD0040A0(*v19, v20);
      *(_QWORD *)v18 = v22;
      *((_QWORD *)v18 + 1) = v20;
    }
    v23 = a3[9];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = *((_QWORD *)v25 + 1);
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    else
    {
      v27 = *(_QWORD *)v25;
      sub_1AD0040A0(*(_QWORD *)v25, *((_QWORD *)v25 + 1));
      *(_QWORD *)v24 = v27;
      *((_QWORD *)v24 + 1) = v26;
    }
  }
  return a1;
}

uint64_t sub_1AD376494(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;
  uint64_t *v8;
  unint64_t v9;

  v4 = sub_1AD63B24C();
  result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v6 = (uint64_t *)(a1 + *(int *)(a2 + 32));
  v7 = v6[1];
  if (v7 >> 60 != 15)
    result = sub_1AD00412C(*v6, v7);
  v8 = (uint64_t *)(a1 + *(int *)(a2 + 36));
  v9 = v8[1];
  if (v9 >> 60 != 15)
    return sub_1AD00412C(*v8, v9);
  return result;
}

uint64_t sub_1AD376518(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = (uint64_t *)(a2 + v14);
  v19 = *(_QWORD *)(a2 + v14 + 8);
  if (v19 >> 60 == 15)
  {
    *(_OWORD *)v17 = *(_OWORD *)v18;
  }
  else
  {
    v20 = *v18;
    sub_1AD0040A0(*v18, v19);
    *(_QWORD *)v17 = v20;
    *(_QWORD *)(v17 + 8) = v19;
  }
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = (uint64_t *)(a2 + v21);
  v24 = v23[1];
  if (v24 >> 60 == 15)
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
  }
  else
  {
    v25 = *v23;
    sub_1AD0040A0(*v23, v23[1]);
    *(_QWORD *)v22 = v25;
    *(_QWORD *)(v22 + 8) = v24;
  }
  return a1;
}

uint64_t sub_1AD376634(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 4);
  *(_DWORD *)v8 = *(_DWORD *)v9;
  *(_BYTE *)(v8 + 4) = v10;
  v11 = a3[6];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = *(_BYTE *)(v13 + 4);
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = v14;
  v15 = a3[7];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = *(_BYTE *)(v17 + 4);
  *(_DWORD *)v16 = *(_DWORD *)v17;
  *(_BYTE *)(v16 + 4) = v18;
  v19 = a3[8];
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *(_QWORD *)(a2 + v19 + 8);
  if (*(_QWORD *)(a1 + v19 + 8) >> 60 == 15)
  {
    if (v22 >> 60 != 15)
    {
      v23 = *v21;
      sub_1AD0040A0(v23, v22);
      *v20 = v23;
      v20[1] = v22;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v22 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v20);
LABEL_6:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    goto LABEL_8;
  }
  v24 = *v21;
  sub_1AD0040A0(v24, v22);
  v25 = *v20;
  v26 = v20[1];
  *v20 = v24;
  v20[1] = v22;
  sub_1AD00412C(v25, v26);
LABEL_8:
  v27 = a3[9];
  v28 = (uint64_t *)(a1 + v27);
  v29 = (uint64_t *)(a2 + v27);
  v30 = *(_QWORD *)(a2 + v27 + 8);
  if (*(_QWORD *)(a1 + v27 + 8) >> 60 != 15)
  {
    if (v30 >> 60 != 15)
    {
      v32 = *v29;
      sub_1AD0040A0(v32, v30);
      v33 = *v28;
      v34 = v28[1];
      *v28 = v32;
      v28[1] = v30;
      sub_1AD00412C(v33, v34);
      return a1;
    }
    sub_1AD007EC0((uint64_t)v28);
    goto LABEL_13;
  }
  if (v30 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)v28 = *(_OWORD *)v29;
    return a1;
  }
  v31 = *v29;
  sub_1AD0040A0(v31, v30);
  *v28 = v31;
  v28[1] = v30;
  return a1;
}

uint64_t sub_1AD3767E0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t sub_1AD376894(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  unint64_t v25;
  unint64_t v26;
  uint64_t v27;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_DWORD *)v9 = *(_DWORD *)v10;
  *(_BYTE *)(v9 + 4) = *(_BYTE *)(v10 + 4);
  v11 = a1 + v8;
  v12 = a2 + v8;
  *(_DWORD *)v11 = *(_DWORD *)v12;
  *(_BYTE *)(v11 + 4) = *(_BYTE *)(v12 + 4);
  v13 = a3[7];
  v14 = a3[8];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_DWORD *)v15 = *(_DWORD *)v16;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  v17 = a1 + v14;
  v18 = a2 + v14;
  v19 = *(_QWORD *)(a1 + v14 + 8);
  if (v19 >> 60 == 15)
    goto LABEL_4;
  v20 = *(_QWORD *)(v18 + 8);
  if (v20 >> 60 == 15)
  {
    sub_1AD007EC0(v17);
LABEL_4:
    *(_OWORD *)v17 = *(_OWORD *)v18;
    goto LABEL_6;
  }
  v21 = *(_QWORD *)v17;
  *(_QWORD *)v17 = *(_QWORD *)v18;
  *(_QWORD *)(v17 + 8) = v20;
  sub_1AD00412C(v21, v19);
LABEL_6:
  v22 = a3[9];
  v23 = (uint64_t *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v25 = *(_QWORD *)(a1 + v22 + 8);
  if (v25 >> 60 != 15)
  {
    v26 = v24[1];
    if (v26 >> 60 != 15)
    {
      v27 = *v23;
      *v23 = *v24;
      v23[1] = v26;
      sub_1AD00412C(v27, v25);
      return a1;
    }
    sub_1AD007EC0((uint64_t)v23);
  }
  *(_OWORD *)v23 = *(_OWORD *)v24;
  return a1;
}

uint64_t sub_1AD3769D8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3769E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  unsigned int v11;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8) >> 60;
  v10 = ((4 * (_DWORD)v9) & 0xC) == 0;
  v11 = ((4 * v9) & 0xC | (v9 >> 2)) ^ 0xF;
  if (v10)
    return 0;
  else
    return v11;
}

uint64_t sub_1AD376A6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD376A78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 32));
  *v10 = 0;
  v10[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
  return result;
}

uint64_t sub_1AD376B00()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_1AD376B84()
{
  unint64_t result;

  result = qword_1EECDB2A8;
  if (!qword_1EECDB2A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67C66C, &type metadata for ETP_Video.MediaType);
    atomic_store(result, (unint64_t *)&qword_1EECDB2A8);
  }
  return result;
}

unint64_t sub_1AD376BCC()
{
  unint64_t result;

  result = qword_1EECDB2B0;
  if (!qword_1EECDB2B0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67C70C, &type metadata for ETP_Header.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDB2B0);
  }
  return result;
}

unint64_t sub_1AD376C14()
{
  unint64_t result;

  result = qword_1EECDB2B8;
  if (!qword_1EECDB2B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67C62C, &type metadata for ETP_Video.MediaType);
    atomic_store(result, (unint64_t *)&qword_1EECDB2B8);
  }
  return result;
}

unint64_t sub_1AD376C5C()
{
  unint64_t result;

  result = qword_1EECDB2C0;
  if (!qword_1EECDB2C0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67C5F4, &type metadata for ETP_Video.MediaType);
    atomic_store(result, (unint64_t *)&qword_1EECDB2C0);
  }
  return result;
}

unint64_t sub_1AD376CA4()
{
  unint64_t result;

  result = qword_1EECDB2C8;
  if (!qword_1EECDB2C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67C6CC, &type metadata for ETP_Header.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDB2C8);
  }
  return result;
}

unint64_t sub_1AD376CEC()
{
  unint64_t result;

  result = qword_1EECDB2D0;
  if (!qword_1EECDB2D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67C694, &type metadata for ETP_Header.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDB2D0);
  }
  return result;
}

uint64_t sub_1AD376D30(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) >= 8)
    return 8;
  else
    return a1 - 1;
}

uint64_t JPEGEncoder.__allocating_init(configuration:)()
{
  return swift_allocObject();
}

uint64_t JPEGEncoder.init(configuration:)()
{
  uint64_t v0;

  return v0;
}

uint64_t JPEGEncoder.encode(imageSource:)()
{
  _BYTE *v0;

  sub_1AD376DA8();
  swift_allocError();
  *v0 = 3;
  return swift_willThrow();
}

unint64_t sub_1AD376DA8()
{
  unint64_t result;

  result = qword_1EECDB2D8;
  if (!qword_1EECDB2D8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67C89C, &type metadata for JPEGEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EECDB2D8);
  }
  return result;
}

void JPEGEncoder.encode(imageSource:to:)(CGImageSource *a1)
{
  sub_1AD376FE8(a1);
}

__CFData *JPEGEncoder.encode(image:)(CGImage *a1)
{
  return sub_1AD377230(a1);
}

void JPEGEncoder.encode(image:to:)(CGImage *a1)
{
  sub_1AD3774E4(a1);
}

uint64_t JPEGEncoder.encode(pixelBuffer:to:)()
{
  uint64_t v0;

  sub_1AD0D0080();
  swift_allocError();
  *(_WORD *)v0 = 1281;
  *(_QWORD *)(v0 + 8) = 0;
  return swift_willThrow();
}

uint64_t JPEGEncoder.encode(pixelBuffer:)()
{
  uint64_t v0;

  sub_1AD0D0080();
  swift_allocError();
  *(_WORD *)v0 = 1281;
  *(_QWORD *)(v0 + 8) = 0;
  return swift_willThrow();
}

uint64_t JPEGEncoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t JPEGEncoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1AD376EE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *a1 = result;
  return result;
}

void sub_1AD376F10(CGImageSource *a1)
{
  sub_1AD376FE8(a1);
}

uint64_t sub_1AD376F24()
{
  _BYTE *v0;

  sub_1AD376DA8();
  swift_allocError();
  *v0 = 3;
  return swift_willThrow();
}

void sub_1AD376F70(CGImage *a1)
{
  sub_1AD3774E4(a1);
}

__CFData *sub_1AD376F84(CGImage *a1)
{
  return sub_1AD377230(a1);
}

uint64_t sub_1AD376F98()
{
  uint64_t v0;

  sub_1AD0D0080();
  swift_allocError();
  *(_WORD *)v0 = 1281;
  *(_QWORD *)(v0 + 8) = 0;
  return swift_willThrow();
}

void sub_1AD376FE8(CGImageSource *a1)
{
  const __CFURL *v1;
  __CFString *v2;
  uint64_t inited;
  void *v4;
  void *v5;
  id v6;
  id v7;
  const __CFDictionary *v8;
  CGImageDestination *v9;
  uint64_t v10;
  id v11;
  id v12;
  const __CFDictionary *v13;
  _BYTE *v14;
  _BYTE *v15;

  v1 = (const __CFURL *)sub_1AD63AE98();
  v2 = (__CFString *)sub_1AD63B744();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD70);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648170;
  v4 = (void *)*MEMORY[0x1E0CBD2B8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD2B8];
  *(_BYTE *)(inited + 40) = 0;
  v5 = (void *)*MEMORY[0x1E0CBD1C0];
  *(_QWORD *)(inited + 48) = *MEMORY[0x1E0CBD1C0];
  *(_BYTE *)(inited + 56) = 1;
  v6 = v4;
  v7 = v5;
  sub_1AD4396D8(inited);
  type metadata accessor for CFString(0);
  sub_1AD32EFC0();
  v8 = (const __CFDictionary *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  v9 = CGImageDestinationCreateWithURL(v1, v2, 1uLL, v8);

  if (v9)
  {
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_1AD648170;
    *(_QWORD *)(v10 + 32) = v6;
    *(_BYTE *)(v10 + 40) = 0;
    *(_QWORD *)(v10 + 48) = v7;
    *(_BYTE *)(v10 + 56) = 1;
    v11 = v6;
    v12 = v7;
    sub_1AD4396D8(v10);
    v13 = (const __CFDictionary *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    CGImageDestinationAddImageFromSource(v9, a1, 0, v13);

    if (!CGImageDestinationFinalize(v9))
    {
      sub_1AD376DA8();
      swift_allocError();
      *v15 = 3;
      swift_willThrow();
    }

  }
  else
  {
    sub_1AD376DA8();
    swift_allocError();
    *v14 = 2;
    swift_willThrow();
  }
}

__CFData *sub_1AD377230(CGImage *a1)
{
  __CFData *v1;
  CFMutableDataRef Mutable;
  __CFString *v4;
  uint64_t inited;
  void *v6;
  void *v7;
  id v8;
  id v9;
  const __CFDictionary *v10;
  CGImageDestination *v11;
  uint64_t v12;
  id v13;
  id v14;
  const __CFDictionary *v15;
  __CFData *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  CGImage *v21;

  Mutable = CFDataCreateMutable(0, 0);
  if (Mutable)
  {
    v1 = Mutable;
    v21 = a1;
    v4 = (__CFString *)sub_1AD63B744();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD70);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648170;
    v6 = (void *)*MEMORY[0x1E0CBD2B8];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD2B8];
    *(_BYTE *)(inited + 40) = 0;
    v7 = (void *)*MEMORY[0x1E0CBD1C0];
    *(_QWORD *)(inited + 48) = *MEMORY[0x1E0CBD1C0];
    *(_BYTE *)(inited + 56) = 1;
    v8 = v6;
    v9 = v7;
    sub_1AD4396D8(inited);
    type metadata accessor for CFString(0);
    sub_1AD32EFC0();
    v10 = (const __CFDictionary *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    v11 = CGImageDestinationCreateWithData(v1, v4, 1uLL, v10);

    if (v11)
    {
      v12 = swift_initStackObject();
      *(_OWORD *)(v12 + 16) = xmmword_1AD648170;
      *(_QWORD *)(v12 + 32) = v8;
      *(_BYTE *)(v12 + 40) = 0;
      *(_QWORD *)(v12 + 48) = v9;
      *(_BYTE *)(v12 + 56) = 1;
      v13 = v8;
      v14 = v9;
      sub_1AD4396D8(v12);
      v15 = (const __CFDictionary *)sub_1AD63B678();
      swift_bridgeObjectRelease();
      CGImageDestinationAddImage(v11, v21, v15);

      if (CGImageDestinationFinalize(v11))
      {
        v16 = v1;
        v1 = (__CFData *)sub_1AD63AFB8();

      }
      else
      {
        sub_1AD376DA8();
        swift_allocError();
        *v19 = 3;
        swift_willThrow();

      }
    }
    else
    {
      sub_1AD376DA8();
      swift_allocError();
      *v18 = 2;
      swift_willThrow();

    }
  }
  else
  {
    sub_1AD376DA8();
    swift_allocError();
    *v17 = 1;
    swift_willThrow();
  }
  return v1;
}

void sub_1AD3774E4(CGImage *a1)
{
  const __CFURL *v1;
  __CFString *v2;
  uint64_t inited;
  void *v4;
  void *v5;
  id v6;
  id v7;
  const __CFDictionary *v8;
  CGImageDestination *v9;
  uint64_t v10;
  id v11;
  id v12;
  const __CFDictionary *v13;
  _BYTE *v14;
  _BYTE *v15;

  v1 = (const __CFURL *)sub_1AD63AE98();
  v2 = (__CFString *)sub_1AD63B744();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD70);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648170;
  v4 = (void *)*MEMORY[0x1E0CBD2B8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD2B8];
  *(_BYTE *)(inited + 40) = 0;
  v5 = (void *)*MEMORY[0x1E0CBD1C0];
  *(_QWORD *)(inited + 48) = *MEMORY[0x1E0CBD1C0];
  *(_BYTE *)(inited + 56) = 1;
  v6 = v4;
  v7 = v5;
  sub_1AD4396D8(inited);
  type metadata accessor for CFString(0);
  sub_1AD32EFC0();
  v8 = (const __CFDictionary *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  v9 = CGImageDestinationCreateWithURL(v1, v2, 1uLL, v8);

  if (v9)
  {
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_1AD648170;
    *(_QWORD *)(v10 + 32) = v6;
    *(_BYTE *)(v10 + 40) = 0;
    *(_QWORD *)(v10 + 48) = v7;
    *(_BYTE *)(v10 + 56) = 1;
    v11 = v6;
    v12 = v7;
    sub_1AD4396D8(v10);
    v13 = (const __CFDictionary *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    CGImageDestinationAddImage(v9, a1, v13);

    if (!CGImageDestinationFinalize(v9))
    {
      sub_1AD376DA8();
      swift_allocError();
      *v15 = 3;
      swift_willThrow();
    }

  }
  else
  {
    sub_1AD376DA8();
    swift_allocError();
    *v14 = 2;
    swift_willThrow();
  }
}

uint64_t type metadata accessor for JPEGEncoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for JPEGEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of JPEGEncoder.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t storeEnumTagSinglePayload for JPEGEncodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD3777A8 + 4 * byte_1AD67C7D5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD3777DC + 4 * byte_1AD67C7D0[v4]))();
}

uint64_t sub_1AD3777DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3777E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3777ECLL);
  return result;
}

uint64_t sub_1AD3777F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD377800);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD377804(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD37780C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for JPEGEncodingError()
{
  return &type metadata for JPEGEncodingError;
}

unint64_t sub_1AD37782C()
{
  unint64_t result;

  result = qword_1EECDB2E0;
  if (!qword_1EECDB2E0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67C874, &type metadata for JPEGEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EECDB2E0);
  }
  return result;
}

uint64_t sub_1AD377870()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD377878(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD377880())()
{
  return nullsub_1;
}

uint64_t sub_1AD377890()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_1AD377898(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*sub_1AD3778A0())()
{
  return nullsub_1;
}

uint64_t sub_1AD3778B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1AD3778E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*sub_1AD377920())()
{
  return nullsub_1;
}

uint64_t sub_1AD377930()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Metadata() + 20));
}

uint64_t type metadata accessor for Metadata()
{
  uint64_t result;

  result = qword_1ED2E1F88;
  if (!qword_1ED2E1F88)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD377994(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for Metadata();
  v6 = v2 + *(int *)(result + 20);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD3779D8())(_QWORD)
{
  type metadata accessor for Metadata();
  return nullsub_1;
}

uint64_t sub_1AD377A00()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Metadata() + 24));
}

uint64_t sub_1AD377A20(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Metadata();
  *(_BYTE *)(v1 + *(int *)(result + 24)) = a1;
  return result;
}

uint64_t (*sub_1AD377A4C())(_QWORD)
{
  type metadata accessor for Metadata();
  return nullsub_1;
}

uint64_t sub_1AD377A74()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Metadata() + 28));
}

uint64_t sub_1AD377A94(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Metadata();
  *(_BYTE *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_1AD377AC0())(_QWORD)
{
  type metadata accessor for Metadata();
  return nullsub_1;
}

uint64_t sub_1AD377AE8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char *v4;
  char v5;

  result = type metadata accessor for Metadata();
  v4 = (char *)(v1 + *(int *)(result + 32));
  v5 = *v4;
  LOBYTE(v4) = v4[1];
  *a1 = v5;
  a1[1] = (_BYTE)v4;
  return result;
}

uint64_t sub_1AD377B24(char *a1)
{
  uint64_t v1;
  char v2;
  char v3;
  uint64_t result;
  _BYTE *v5;

  v2 = *a1;
  v3 = a1[1];
  result = type metadata accessor for Metadata();
  v5 = (_BYTE *)(v1 + *(int *)(result + 32));
  *v5 = v2;
  v5[1] = v3;
  return result;
}

uint64_t (*sub_1AD377B64())(_QWORD)
{
  type metadata accessor for Metadata();
  return nullsub_1;
}

unint64_t sub_1AD377B8C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD28A614();
  result = sub_1AD28A658();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD377BB8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD377C04(&qword_1ED2DA308, (uint64_t)&unk_1AD6513A8);
  result = sub_1AD377C04(&qword_1ED2DA7D8, (uint64_t)&unk_1AD6513D0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD377C04(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for Metadata();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1AD377C44(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B084();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    *((_BYTE *)a1 + v9) = *((_BYTE *)a2 + v9);
    v12 = a3[8];
    *((_BYTE *)a1 + a3[7]) = *((_BYTE *)a2 + a3[7]);
    *(_WORD *)((char *)a1 + v12) = *(_WORD *)((char *)a2 + v12);
  }
  return a1;
}

uint64_t sub_1AD377CF8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_WORD *)(a1 + v11) = *(_WORD *)(a2 + v11);
  return a1;
}

uint64_t sub_1AD377D80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = *v9;
  *(_BYTE *)(v8 + 8) = *((_BYTE *)v9 + 8);
  *(_QWORD *)v8 = v10;
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v11 = a3[8];
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  return a1;
}

uint64_t sub_1AD377E20(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  *(_WORD *)(a1 + v11) = *(_WORD *)(a2 + v11);
  return a1;
}

uint64_t sub_1AD377EA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  v11 = a3[8];
  *(_BYTE *)(a1 + a3[7]) = *(_BYTE *)(a2 + a3[7]);
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  return a1;
}

uint64_t sub_1AD377F40()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD377F4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int v9;

  v6 = sub_1AD63B084();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

uint64_t sub_1AD377FD8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD377FE4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1AD63B084();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_BYTE *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  return result;
}

uint64_t sub_1AD37805C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for Metadata.StorageContext(unsigned __int16 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_17;
  if (a2 + 65281 <= 0xFFFEFFFF)
    v2 = 2;
  else
    v2 = 4;
  if (a2 + 65281 < 0xFF0000)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 16)) - 65281;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
      return (*a1 | (v4 << 16)) - 65281;
    }
    v4 = *((unsigned __int8 *)a1 + 2);
    if (*((_BYTE *)a1 + 2))
      return (*a1 | (v4 << 16)) - 65281;
  }
LABEL_17:
  v6 = *(unsigned __int8 *)a1;
  v7 = v6 >= 2;
  v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for Metadata.StorageContext(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD3781D4 + 4 * byte_1AD67C8E5[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1AD378208 + 4 * byte_1AD67C8E0[v4]))();
}

uint64_t sub_1AD378208(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AD378210(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1AD378218);
  return result;
}

uint64_t sub_1AD378224(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1AD37822CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD378230(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AD378238(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Metadata.StorageContext()
{
  return &type metadata for Metadata.StorageContext;
}

uint64_t CommandType.init(rawValue:)(uint64_t a1)
{
  return sub_1AD3782A0(a1);
}

uint64_t sub_1AD378270@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_1AD3782A0(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_1AD3782A0(uint64_t result)
{
  if (result > 226)
  {
    if ((unint64_t)(result - 227) <= 0x1C && ((1 << (result + 29)) & 0x10040DE1) != 0)
      return result;
    return 0;
  }
  if (result && result != 97 && result != 100)
    return 0;
  return result;
}

unint64_t sub_1AD3782F8()
{
  unint64_t result;

  result = qword_1EECDB2E8;
  if (!qword_1EECDB2E8)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for CommandType, &type metadata for CommandType);
    atomic_store(result, (unint64_t *)&qword_1EECDB2E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for CommandType()
{
  return &type metadata for CommandType;
}

uint64_t sub_1AD37834C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_1AD63C2A8();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_1AD63C2A8() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD378410@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t inited;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t *);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t *);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t (*v52)(uint64_t *);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  unsigned __int8 *v58;
  void (*v59)(void);
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t (*v64)(uint64_t *);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t *);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v79;
  uint64_t v80;
  uint64_t (**v81)(uint64_t *);
  unint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unsigned __int8 *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unsigned __int8 *v92;
  uint64_t v93;
  uint64_t v94;
  int v95;
  int v96;
  int v97;
  int v98;
  uint64_t v99;
  char v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t *v108;
  unsigned __int8 *v109;
  uint64_t *v110;
  unsigned __int8 *v111;
  uint64_t *v112;
  unint64_t v113;
  uint64_t v114;
  unsigned __int8 *v115;
  BOOL (**v116)();
  unsigned __int8 *v117;
  int v118;
  char *v119;
  char v120;
  uint64_t (**v121)(uint64_t *);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  int v148;
  int v149;
  int v150;
  uint64_t (*v151)(_QWORD);
  _QWORD *v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t (**v160)(uint64_t *);
  BOOL (**v161)();
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  void (*v169)(BOOL (**)(), uint64_t, uint64_t, uint64_t);
  uint64_t v170;
  unsigned __int8 *v171;
  uint64_t v172;
  uint64_t v173;
  unsigned __int8 *v174;
  unsigned __int8 *v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  __int128 v179;
  unsigned __int8 *v180;
  uint64_t v181;
  __int128 v182;
  __int128 v183;
  char v184;
  char v185;
  unsigned __int8 v186;
  char v187;
  unsigned __int8 v188[361];
  __int128 v189;
  __int128 v190;
  uint64_t v191;

  v176 = a1;
  v177 = a2;
  v4 = (int *)type metadata accessor for IDSHealthInvitation(0);
  MEMORY[0x1E0C80A78](v4);
  v155 = (uint64_t)&v144 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2400);
  v7 = MEMORY[0x1E0C80A78](v6);
  v159 = (uint64_t)&v144 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v160 = (uint64_t (**)(uint64_t *))((char *)&v144 - v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
  v11 = MEMORY[0x1E0C80A78](v10);
  v154 = (uint64_t)&v144 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v161 = (BOOL (**)())((char *)&v144 - v13);
  v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v15 = MEMORY[0x1E0C80A78](v14);
  v158 = (uint64_t)&v144 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v156 = (uint64_t)&v144 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v157 = (uint64_t)&v144 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v164 = (uint64_t)&v144 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v162 = (uint64_t)&v144 - v24;
  MEMORY[0x1E0C80A78](v23);
  v163 = (uint64_t)&v144 - v25;
  v26 = sub_1AD63B264();
  MEMORY[0x1E0C80A78](v26);
  v169 = (void (*)(BOOL (**)(), uint64_t, uint64_t, uint64_t))((char *)&v144
                                                                     - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0));
  v170 = type metadata accessor for HealthSummarySharingEntry(0);
  MEMORY[0x1E0C80A78](v170);
  v178 = (uint64_t)&v144 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v180 = (unsigned __int8 *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A10);
  inited = swift_initStackObject();
  v183 = xmmword_1AD648160;
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v30 = swift_initStackObject();
  *(_OWORD *)(v30 + 16) = v183;
  *(_QWORD *)(v30 + 32) = sub_1AD284780;
  *(_QWORD *)(v30 + 40) = 0;
  v31 = sub_1AD281264(v30);
  v32 = swift_allocObject();
  *(_QWORD *)(v32 + 16) = v31;
  swift_setDeallocating();
  v181 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2020);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD0097FC;
  *(_QWORD *)(inited + 40) = v32;
  if (*(_QWORD *)(inited + 16) == 1)
  {
    swift_retain();
    swift_bridgeObjectRelease();
    v33 = sub_1AD0097FC;
  }
  else
  {
    v34 = sub_1AD28137C(inited);
    swift_bridgeObjectRelease();
    v32 = swift_allocObject();
    *(_QWORD *)(v32 + 16) = v34;
    v33 = sub_1AD37EDAC;
  }
  *(_QWORD *)a3 = v33;
  *(_QWORD *)(a3 + 8) = v32;
  v182 = xmmword_1AD676DD0;
  *(_OWORD *)(a3 + 16) = xmmword_1AD676DD0;
  v35 = swift_initStackObject();
  *(_OWORD *)(v35 + 16) = v183;
  v36 = swift_initStackObject();
  *(_OWORD *)(v36 + 16) = v183;
  v37 = swift_allocObject();
  v179 = xmmword_1AD648170;
  *(_OWORD *)(v37 + 16) = xmmword_1AD648170;
  v38 = swift_allocObject();
  *(_QWORD *)(v38 + 16) = sub_1AD324644;
  *(_QWORD *)(v38 + 24) = 0;
  *(_QWORD *)(v37 + 32) = sub_1AD37EDB4;
  *(_QWORD *)(v37 + 40) = v38;
  v39 = swift_allocObject();
  *(_QWORD *)(v39 + 16) = sub_1AD324644;
  *(_QWORD *)(v39 + 24) = 0;
  *(_QWORD *)(v37 + 48) = sub_1AD37EDB4;
  *(_QWORD *)(v37 + 56) = v39;
  v40 = swift_allocObject();
  *(_QWORD *)(v40 + 16) = v37;
  *(_QWORD *)(v36 + 32) = sub_1AD37EDDC;
  *(_QWORD *)(v36 + 40) = v40;
  v41 = sub_1AD281264(v36);
  v42 = swift_allocObject();
  *(_QWORD *)(v42 + 16) = v41;
  swift_setDeallocating();
  swift_arrayDestroy();
  *(_QWORD *)(v35 + 32) = sub_1AD00988C;
  *(_QWORD *)(v35 + 40) = v42;
  if (*(_QWORD *)(v35 + 16) == 1)
  {
    swift_retain();
    swift_bridgeObjectRelease();
    v43 = sub_1AD00988C;
  }
  else
  {
    v44 = sub_1AD28137C(v35);
    swift_bridgeObjectRelease();
    v42 = swift_allocObject();
    *(_QWORD *)(v42 + 16) = v44;
    v43 = sub_1AD38306C;
  }
  *(_QWORD *)(a3 + 32) = v43;
  *(_QWORD *)(a3 + 40) = v42;
  *(_OWORD *)(a3 + 48) = v182;
  v168 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A00);
  v45 = swift_initStackObject();
  *(_OWORD *)(v45 + 16) = v183;
  v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = v179;
  v47 = swift_allocObject();
  *(_QWORD *)(v47 + 16) = sub_1AD324644;
  *(_QWORD *)(v47 + 24) = 0;
  *(_QWORD *)(v46 + 32) = sub_1AD37EDB4;
  *(_QWORD *)(v46 + 40) = v47;
  v48 = swift_allocObject();
  *(_QWORD *)(v48 + 16) = sub_1AD324644;
  *(_QWORD *)(v48 + 24) = 0;
  *(_QWORD *)(v46 + 48) = sub_1AD37EDB4;
  *(_QWORD *)(v46 + 56) = v48;
  v49 = swift_allocObject();
  *(_QWORD *)(v49 + 16) = v46;
  v50 = swift_allocObject();
  *(_QWORD *)(v50 + 16) = sub_1AD383074;
  *(_QWORD *)(v50 + 24) = v49;
  *(_QWORD *)(v45 + 32) = sub_1AD324674;
  *(_QWORD *)(v45 + 40) = v50;
  if (*(_QWORD *)(v45 + 16) == 1)
  {
    v51 = v50;
    swift_retain();
    swift_bridgeObjectRelease();
    v52 = sub_1AD324674;
  }
  else
  {
    v53 = sub_1AD283DBC(v45);
    swift_bridgeObjectRelease();
    v51 = swift_allocObject();
    *(_QWORD *)(v51 + 16) = v53;
    v52 = sub_1AD382418;
  }
  *(_QWORD *)(a3 + 64) = v52;
  *(_QWORD *)(a3 + 72) = v51;
  *(_QWORD *)(a3 + 80) = 0;
  *(_OWORD *)(a3 + 88) = 0u;
  *(_OWORD *)(a3 + 104) = 0u;
  *(_WORD *)(a3 + 120) = 514;
  *(_BYTE *)(a3 + 122) = 5;
  v54 = a3 + v4[12];
  v55 = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  v56 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 56);
  v167 = v54;
  v56(v54, 1, 1, v55);
  v57 = a3 + v4[13];
  v58 = (unsigned __int8 *)sub_1AD63B03C();
  v59 = *(void (**)(void))(*((_QWORD *)v58 - 1) + 56);
  v166 = v57;
  ((void (*)(uint64_t, uint64_t, uint64_t, unsigned __int8 *))v59)(v57, 1, 1, v58);
  v173 = a3 + v4[14];
  v59();
  v165 = a3 + v4[15];
  v174 = (unsigned __int8 *)v59;
  v175 = v58;
  v59();
  v60 = swift_initStackObject();
  *(_OWORD *)(v60 + 16) = v183;
  v61 = swift_initStackObject();
  *(_OWORD *)(v61 + 16) = v183;
  *(_QWORD *)(v61 + 32) = sub_1AD284780;
  *(_QWORD *)(v61 + 40) = 0;
  v62 = sub_1AD281264(v61);
  v63 = swift_allocObject();
  *(_QWORD *)(v63 + 16) = v62;
  swift_setDeallocating();
  swift_arrayDestroy();
  *(_QWORD *)(v60 + 32) = sub_1AD00988C;
  *(_QWORD *)(v60 + 40) = v63;
  if (*(_QWORD *)(v60 + 16) == 1)
  {
    swift_retain();
    swift_bridgeObjectRelease();
    v64 = sub_1AD00988C;
  }
  else
  {
    v65 = sub_1AD28137C(v60);
    swift_bridgeObjectRelease();
    v63 = swift_allocObject();
    *(_QWORD *)(v63 + 16) = v65;
    v64 = sub_1AD38306C;
  }
  v66 = a3 + v4[16];
  *(_QWORD *)v66 = v64;
  *(_QWORD *)(v66 + 8) = v63;
  v172 = v66;
  *(_OWORD *)(v66 + 16) = v182;
  v67 = swift_initStackObject();
  *(_OWORD *)(v67 + 16) = v183;
  v68 = swift_initStackObject();
  *(_OWORD *)(v68 + 16) = v179;
  v69 = (_QWORD *)swift_allocObject();
  v69[2] = sub_1AD043FD0;
  v69[3] = 0;
  v69[4] = 1;
  *(_QWORD *)(v68 + 32) = sub_1AD324618;
  *(_QWORD *)(v68 + 40) = v69;
  v70 = (_QWORD *)swift_allocObject();
  v70[2] = sub_1AD0097B4;
  v70[3] = 0;
  v70[4] = 255;
  *(_QWORD *)(v68 + 48) = sub_1AD3246B8;
  *(_QWORD *)(v68 + 56) = v70;
  v71 = sub_1AD281264(v68);
  v72 = swift_allocObject();
  *(_QWORD *)(v72 + 16) = v71;
  swift_setDeallocating();
  swift_arrayDestroy();
  *(_QWORD *)(v67 + 32) = sub_1AD00988C;
  *(_QWORD *)(v67 + 40) = v72;
  if (*(_QWORD *)(v67 + 16) == 1)
  {
    swift_retain();
    swift_bridgeObjectRelease();
    v73 = sub_1AD00988C;
  }
  else
  {
    v74 = sub_1AD28137C(v67);
    swift_bridgeObjectRelease();
    v72 = swift_allocObject();
    *(_QWORD *)(v72 + 16) = v74;
    v73 = sub_1AD38306C;
  }
  v75 = a3 + v4[17];
  *(_QWORD *)v75 = v73;
  *(_QWORD *)(v75 + 8) = v72;
  v181 = v75;
  *(_OWORD *)(v75 + 16) = v182;
  v76 = a3 + v4[18];
  v77 = type metadata accessor for CloudKitShareParticipant(0);
  v78 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 56);
  *(_QWORD *)&v182 = v76;
  v78(v76, 1, 1, v77);
  *(_BYTE *)(a3 + v4[19]) = 3;
  *(_BYTE *)(a3 + v4[21]) = 3;
  v79 = swift_initStackObject();
  *(_OWORD *)(v79 + 16) = v183;
  v80 = swift_allocObject();
  *(_QWORD *)(v80 + 16) = sub_1AD2F5224;
  *(_QWORD *)(v80 + 24) = 0;
  *(_QWORD *)(v79 + 32) = sub_1AD383070;
  *(_QWORD *)(v79 + 40) = v80;
  swift_retain();
  swift_bridgeObjectRelease();
  v81 = (uint64_t (**)(uint64_t *))(a3 + v4[22]);
  *v81 = sub_1AD383070;
  v81[1] = (uint64_t (*)(uint64_t *))v80;
  *(_QWORD *)&v183 = v81;
  v81[2] = 0;
  v191 = 0;
  v189 = 0u;
  v190 = 0u;
  v83 = v176;
  v82 = v177;
  sub_1AD0040A0(v176, v177);
  sub_1AD63B258();
  sub_1ACFF9724(&qword_1EECDB310, type metadata accessor for HealthSummarySharingEntry, (uint64_t)&unk_1AD68166C);
  v84 = v178;
  v85 = v170;
  v86 = v171;
  sub_1AD63B33C();
  if (v86)
  {
    sub_1AD00412C(v83, v82);
    v88 = v166;
    v87 = v167;
    v89 = v165;
    v90 = v181;
  }
  else
  {
    v169 = (void (*)(BOOL (**)(), uint64_t, uint64_t, uint64_t))v78;
    v91 = *(_QWORD *)(v84 + *(int *)(v85 + 20));
    swift_beginAccess();
    v92 = *(unsigned __int8 **)(v91 + 24);
    v168 = *(_QWORD *)(v91 + 16);
    swift_beginAccess();
    v153 = *(_QWORD *)(v91 + 32);
    v180 = *(unsigned __int8 **)(v91 + 40);
    swift_beginAccess();
    v93 = *(_QWORD *)(v91 + 64);
    v152 = *(_QWORD **)(v91 + 56);
    swift_beginAccess();
    v94 = *(_QWORD *)(v91 + 80);
    v151 = *(uint64_t (**)(_QWORD))(v91 + 72);
    swift_beginAccess();
    v95 = *(unsigned __int8 *)(v91 + 88);
    if (v95 == 2)
      v96 = 2;
    else
      v96 = v95 & 1;
    v150 = v96;
    swift_beginAccess();
    v97 = *(unsigned __int8 *)(v91 + 89);
    if (v97 == 2)
      v98 = 2;
    else
      v98 = v97 & 1;
    v149 = v98;
    swift_beginAccess();
    v148 = *(unsigned __int8 *)(v91 + 90);
    v99 = v91
        + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__dateModified;
    swift_beginAccess();
    v100 = *(_BYTE *)(v99 + 8);
    *(_QWORD *)&v179 = v93;
    v170 = v94;
    v171 = v92;
    if ((v100 & 1) != 0)
    {
      ((void (*)(uint64_t, uint64_t, uint64_t, unsigned __int8 *))v174)(v163, 1, 1, v175);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v101 = v163;
      sub_1AD63B000();
      ((void (*)(uint64_t, _QWORD, uint64_t, unsigned __int8 *))v174)(v101, 0, 1, v175);
    }
    v102 = 0;
    v103 = v91
         + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__dateAccepted;
    swift_beginAccess();
    if ((*(_BYTE *)(v103 + 8) & 1) != 0)
    {
      v104 = 1;
      v105 = v162;
    }
    else
    {
      v105 = v162;
      sub_1AD63B000();
      v104 = 0;
    }
    v106 = 1;
    ((void (*)(uint64_t, uint64_t, uint64_t, unsigned __int8 *))v174)(v105, v104, 1, v175);
    v107 = v91
         + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__dateInvited;
    swift_beginAccess();
    if ((*(_BYTE *)(v107 + 8) & 1) == 0)
    {
      sub_1AD63B000();
      v106 = 0;
    }
    ((void (*)(uint64_t, uint64_t, uint64_t, unsigned __int8 *))v174)(v164, v106, 1, v175);
    v108 = (uint64_t *)(v91
                     + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__invitationUuid);
    swift_beginAccess();
    v109 = (unsigned __int8 *)v108[1];
    v147 = *v108;
    v110 = (uint64_t *)(v91
                     + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__cloudKitIdentifier);
    swift_beginAccess();
    v111 = (unsigned __int8 *)v110[1];
    v146 = *v110;
    v112 = (uint64_t *)(v91
                     + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__ownerParticipant);
    swift_beginAccess();
    v113 = v112[1];
    if (v113 >> 60 == 15)
    {
      v169(v161, 1, 1, v77);
      v174 = v111;
      swift_bridgeObjectRetain();
      v175 = v109;
      swift_bridgeObjectRetain();
    }
    else
    {
      v114 = *v112;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AD00408C(v114, v113);
      v115 = v109;
      v116 = v161;
      sub_1AD58D9A4(v114, v113, v161);
      v145 = 0;
      v174 = v111;
      v175 = v115;
      v169(v116, 0, 1, v77);
      v102 = v145;
    }
    v117 = (unsigned __int8 *)(v91
                             + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__notificationStatus);
    swift_beginAccess();
    v118 = *v117;
    v119 = (char *)(v91
                  + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__userWheelchairMode);
    swift_beginAccess();
    v120 = *v119;
    v121 = v160;
    v122 = v178;
    sub_1AD37989C(v178, v160);
    v90 = v181;
    if (!v102)
    {
      LODWORD(v169) = v118;
      v145 = sub_1AD3827DC(v122);
      swift_beginAccess();
      v144 = *(_QWORD *)(v91 + 48);
      v188[0] = v150;
      v187 = v149;
      v186 = v148;
      sub_1ACFF64C0((uint64_t)v121, v159, &qword_1EECD2400);
      sub_1ACFF64C0(v163, v157, (uint64_t *)&unk_1ED2E2D98);
      sub_1ACFF64C0(v162, v156, (uint64_t *)&unk_1ED2E2D98);
      sub_1ACFF64C0(v164, v158, (uint64_t *)&unk_1ED2E2D98);
      v131 = v154;
      sub_1ACFF64C0((uint64_t)v161, v154, (uint64_t *)&unk_1EECDB300);
      v185 = (char)v169;
      v184 = v120;
      v132 = (uint64_t *)(v91
                       + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__authorizationCategories);
      swift_beginAccess();
      v133 = *v132;
      v134 = v144;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1AD1946B8(v168, v171, v153, v180, v134, v152, v179, v151, v155, v170, v188, (uint64_t (*)(_QWORD))&v187, &v186, v159, v157, v156, v158, v147, v175,
        v146,
        v174,
        v131,
        (uint64_t (*)(uint64_t *))&v185,
        (uint64_t)v145,
        (uint64_t)&v184,
        v133);
      sub_1AD00412C(v176, v177);
      sub_1AD009758((uint64_t)v121, &qword_1EECD2400);
      sub_1AD009758((uint64_t)v161, (uint64_t *)&unk_1EECDB300);
      sub_1AD009758(v164, (uint64_t *)&unk_1ED2E2D98);
      sub_1AD009758(v162, (uint64_t *)&unk_1ED2E2D98);
      sub_1AD009758(v163, (uint64_t *)&unk_1ED2E2D98);
      sub_1AD066230(v178, type metadata accessor for HealthSummarySharingEntry);
      v135 = *(_QWORD *)(a3 + 16);
      v136 = *(_QWORD *)(a3 + 24);
      swift_release();
      sub_1AD003F24(v135, v136);
      v137 = *(_QWORD *)(a3 + 48);
      v138 = *(_QWORD *)(a3 + 56);
      swift_release();
      sub_1AD003F24(v137, v138);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AD009758(v167, &qword_1EECD2400);
      sub_1AD009758(v166, (uint64_t *)&unk_1ED2E2D98);
      sub_1AD009758(v173, (uint64_t *)&unk_1ED2E2D98);
      sub_1AD009758(v165, (uint64_t *)&unk_1ED2E2D98);
      v139 = *(_QWORD *)(v172 + 16);
      v140 = *(_QWORD *)(v172 + 24);
      swift_release();
      sub_1AD003F24(v139, v140);
      v141 = *(_QWORD *)(v90 + 16);
      v142 = *(_QWORD *)(v90 + 24);
      swift_release();
      sub_1AD003F24(v141, v142);
      sub_1AD009758(v182, (uint64_t *)&unk_1EECDB300);
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1AD2A5214(v155, a3, type metadata accessor for IDSHealthInvitation);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1AD00412C(v176, v177);
    sub_1AD009758((uint64_t)v161, (uint64_t *)&unk_1EECDB300);
    sub_1AD009758(v164, (uint64_t *)&unk_1ED2E2D98);
    sub_1AD009758(v162, (uint64_t *)&unk_1ED2E2D98);
    sub_1AD009758(v163, (uint64_t *)&unk_1ED2E2D98);
    sub_1AD066230(v122, type metadata accessor for HealthSummarySharingEntry);
    v88 = v166;
    v87 = v167;
    v89 = v165;
  }
  v123 = *(_QWORD *)(a3 + 16);
  v124 = *(_QWORD *)(a3 + 24);
  swift_release();
  sub_1AD003F24(v123, v124);
  v125 = *(_QWORD *)(a3 + 48);
  v126 = *(_QWORD *)(a3 + 56);
  swift_release();
  sub_1AD003F24(v125, v126);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD009758(v87, &qword_1EECD2400);
  sub_1AD009758(v88, (uint64_t *)&unk_1ED2E2D98);
  sub_1AD009758(v173, (uint64_t *)&unk_1ED2E2D98);
  sub_1AD009758(v89, (uint64_t *)&unk_1ED2E2D98);
  v127 = *(_QWORD *)(v172 + 16);
  v128 = *(_QWORD *)(v172 + 24);
  swift_release();
  sub_1AD003F24(v127, v128);
  v129 = *(_QWORD *)(v90 + 16);
  v130 = *(_QWORD *)(v90 + 24);
  swift_release();
  sub_1AD003F24(v129, v130);
  sub_1AD009758(v182, (uint64_t *)&unk_1EECDB300);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD37989C@<X0>(uint64_t a1@<X0>, uint64_t (**a2)(uint64_t *)@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(char *, uint64_t, int *);
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  BOOL (**v39)();
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (**v43)(uint64_t *);
  uint64_t (*v44)(uint64_t *);
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unsigned __int8 *v50;
  unsigned __int8 *v51;
  id v52;
  uint64_t (*v53)(uint64_t *);
  int v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  BOOL (**v58)();
  uint64_t v59;
  BOOL (**v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t (*v67)(uint64_t);
  uint64_t (*v68)(uint64_t);
  _QWORD *v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t (**v80)(uint64_t *);
  uint64_t v81;
  uint64_t v82;
  _QWORD v83[2];
  uint64_t v84;
  uint64_t (*v85)(uint64_t *);
  uint64_t (*v86)(uint64_t *);
  uint64_t (*v87)(uint64_t *);
  uint64_t (*v88)(uint64_t *);
  id v89;
  uint64_t (*v90)(uint64_t *);
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  BOOL (**v94)();
  BOOL (**v95)();
  uint64_t (**v96)(uint64_t *);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  unint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  int v105;
  unsigned __int8 v106;

  v96 = a2;
  v99 = type metadata accessor for CloudKitSharingToken();
  v103 = *(_QWORD *)(v99 - 8);
  v3 = MEMORY[0x1E0C80A78](v99);
  v98 = (uint64_t)v83 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v97 = (uint64_t)v83 - v5;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  v7 = MEMORY[0x1E0C80A78](v6);
  v100 = (char *)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v104 = (_QWORD *)((char *)v83 - v9);
  v10 = type metadata accessor for HealthSharingSetupInvitationToken(0);
  v91 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v101 = (uint64_t)v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
  v13 = MEMORY[0x1E0C80A78](v12);
  v93 = (uint64_t)v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v92 = (uint64_t)v83 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v94 = (BOOL (**)())((char *)v83 - v18);
  MEMORY[0x1E0C80A78](v17);
  v95 = (BOOL (**)())((char *)v83 - v19);
  v20 = (int *)type metadata accessor for HealthSharingSetupMetadata(0);
  v21 = *((_QWORD *)v20 - 1);
  MEMORY[0x1E0C80A78](v20);
  v23 = (_QWORD *)((char *)v83 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB318);
  v25 = MEMORY[0x1E0C80A78](v24);
  v27 = (char *)v83 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v25);
  v29 = (char *)v83 - v28;
  v30 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for HealthSummarySharingEntry(0) + 20));
  v31 = v30
      + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__sharingSetupMetadata;
  swift_beginAccess();
  sub_1ACFF64C0(v31, (uint64_t)v29, &qword_1EECDB318);
  v32 = *(uint64_t (**)(char *, uint64_t, int *))(v21 + 48);
  LODWORD(v31) = v32(v29, 1, v20);
  sub_1AD009758((uint64_t)v29, &qword_1EECDB318);
  if ((_DWORD)v31 == 1)
  {
    v33 = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
    return (*(uint64_t (**)(uint64_t (**)(uint64_t *), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v96, 1, 1, v33);
  }
  v35 = v30
      + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__sharingSetupMetadata;
  swift_beginAccess();
  sub_1ACFF64C0(v35, (uint64_t)v27, &qword_1EECDB318);
  if (v32(v27, 1, v20) == 1)
  {
    v36 = (uint64_t)v23;
    *v23 = MEMORY[0x1E0DEE9D8];
    sub_1AD63B240();
    v37 = (_QWORD *)((char *)v23 + v20[6]);
    *v37 = 0;
    v37[1] = 0;
    *(_OWORD *)((char *)v23 + v20[7]) = xmmword_1AD67A180;
    *(_OWORD *)((char *)v23 + v20[8]) = xmmword_1AD67A180;
    *(_OWORD *)((char *)v23 + v20[9]) = xmmword_1AD67A180;
    v38 = (_QWORD *)((char *)v23 + v20[10]);
    *v38 = 0;
    v38[1] = 0;
    sub_1AD009758((uint64_t)v27, &qword_1EECDB318);
  }
  else
  {
    v36 = (uint64_t)v23;
    sub_1AD2A5214((uint64_t)v27, (uint64_t)v23, type metadata accessor for HealthSharingSetupMetadata);
  }
  v39 = v95;
  v41 = (uint64_t)v100;
  v40 = v101;
  v42 = v20[7];
  v43 = (uint64_t (**)(uint64_t *))(v36 + v20[6]);
  v44 = v43[1];
  v90 = *v43;
  v45 = *(_QWORD *)(v36 + v42 + 8);
  v46 = v102;
  if (v45 >> 60 == 15)
  {
    v47 = type metadata accessor for CloudKitShareParticipant(0);
    (*(void (**)(BOOL (**)(), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v39, 1, 1, v47);
    swift_bridgeObjectRetain();
  }
  else
  {
    v48 = *(_QWORD *)(v36 + v42);
    swift_bridgeObjectRetain();
    sub_1AD00408C(v48, v45);
    sub_1AD58D9A4(v48, v45, v39);
    if (v46)
    {
      sub_1AD066230(v36, type metadata accessor for HealthSharingSetupMetadata);
      return swift_bridgeObjectRelease();
    }
    v49 = type metadata accessor for CloudKitShareParticipant(0);
    (*(void (**)(BOOL (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 56))(v39, 0, 1, v49);
  }
  sub_1AD382444(v36);
  if (v46)
  {
    swift_bridgeObjectRelease();
    sub_1AD009758((uint64_t)v39, (uint64_t *)&unk_1EECDB300);
    return sub_1AD066230(v36, type metadata accessor for HealthSharingSetupMetadata);
  }
  else
  {
    v51 = v50;
    if (v50)
    {
      v52 = objc_msgSend(*(id *)&v50[OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_uuid], sel_UUIDString);
      v87 = (uint64_t (*)(uint64_t *))sub_1AD63B768();
      v88 = v53;

      v54 = v51[OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_type];
    }
    else
    {
      v87 = 0;
      v88 = 0;
      v54 = 5;
    }
    v105 = v54;
    v55 = (uint64_t *)(v36 + v20[9]);
    v56 = v55[1];
    v89 = v51;
    if (v56 >> 60 == 15)
    {
      v86 = v44;
      v57 = type metadata accessor for CloudKitShareParticipant(0);
      v58 = v94;
      (*(void (**)(BOOL (**)(), uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 56))(v94, 1, 1, v57);
    }
    else
    {
      v59 = *v55;
      sub_1AD0040A0(*v55, v56);
      v60 = v94;
      sub_1AD58D9A4(v59, v56, v94);
      v86 = v44;
      v61 = type metadata accessor for CloudKitShareParticipant(0);
      (*(void (**)(BOOL (**)(), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 56))(v60, 0, 1, v61);
      v58 = v60;
      v40 = v101;
    }
    v62 = v36 + v20[10];
    v63 = *(_QWORD *)(v62 + 8);
    v64 = *(_QWORD *)v36;
    v65 = *(_QWORD *)(*(_QWORD *)v36 + 16);
    v85 = *(uint64_t (**)(uint64_t *))v62;
    if (v65)
    {
      v83[0] = v36;
      v66 = v64 + ((*(unsigned __int8 *)(v91 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v91 + 80));
      v91 = *(_QWORD *)(v91 + 72);
      v84 = v63;
      swift_bridgeObjectRetain();
      v83[1] = v64;
      swift_bridgeObjectRetain();
      v102 = MEMORY[0x1E0DEE9D8];
      v67 = type metadata accessor for HealthSharingSetupInvitationToken;
      do
      {
        v68 = v67;
        sub_1AD0D3D2C(v66, v40, v67);
        v69 = v104;
        sub_1AD37BE90(v40, v104);
        sub_1ACFF64C0((uint64_t)v69, v41, (uint64_t *)&unk_1EECDB370);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v103 + 48))(v41, 1, v99) == 1)
        {
          sub_1AD009758((uint64_t)v69, (uint64_t *)&unk_1EECDB370);
          v67 = v68;
          sub_1AD066230(v40, v68);
          sub_1AD009758(v41, (uint64_t *)&unk_1EECDB370);
        }
        else
        {
          v70 = v97;
          sub_1AD2A5214(v41, v97, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
          sub_1AD0D3D2C(v70, v98, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
          {
            v67 = v68;
            v71 = v102;
          }
          else
          {
            v71 = sub_1AD3CB6C8(0, *(_QWORD *)(v102 + 16) + 1, 1, v102);
            v67 = v68;
          }
          v73 = *(_QWORD *)(v71 + 16);
          v72 = *(_QWORD *)(v71 + 24);
          if (v73 >= v72 >> 1)
            v71 = sub_1AD3CB6C8(v72 > 1, v73 + 1, 1, v71);
          *(_QWORD *)(v71 + 16) = v73 + 1;
          v74 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
          v102 = v71;
          sub_1AD2A5214(v98, v71 + v74 + *(_QWORD *)(v103 + 72) * v73, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
          sub_1AD066230(v97, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
          sub_1AD009758((uint64_t)v104, (uint64_t *)&unk_1EECDB370);
          v40 = v101;
          sub_1AD066230(v101, v67);
          v41 = (uint64_t)v100;
        }
        v66 += v91;
        --v65;
      }
      while (v65);
      swift_bridgeObjectRelease();
      v58 = v94;
      v39 = v95;
      v75 = v84;
      v36 = v83[0];
      v76 = v102;
    }
    else
    {
      v75 = v63;
      swift_bridgeObjectRetain();
      v76 = MEMORY[0x1E0DEE9D8];
    }
    v77 = v92;
    sub_1ACFF64C0((uint64_t)v39, v92, (uint64_t *)&unk_1EECDB300);
    v78 = v93;
    sub_1ACFF64C0((uint64_t)v58, v93, (uint64_t *)&unk_1EECDB300);
    v106 = v105;
    v82 = v76;
    v79 = (uint64_t)v39;
    v80 = v96;
    sub_1AD209F2C(v90, v86, v77, v78, v87, v88, &v106, v85, v96, v75, v82);

    sub_1AD009758((uint64_t)v58, (uint64_t *)&unk_1EECDB300);
    sub_1AD009758(v79, (uint64_t *)&unk_1EECDB300);
    sub_1AD066230(v36, type metadata accessor for HealthSharingSetupMetadata);
    v81 = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
    return (*(uint64_t (**)(uint64_t (**)(uint64_t *), _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 56))(v80, 0, 1, v81);
  }
}

uint64_t sub_1AD37A28C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t (*v86)(uint64_t, uint64_t, uint64_t);
  int v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  int v119;
  uint64_t v120;
  uint64_t v121;
  _BYTE *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t *v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  _BYTE *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  uint64_t v136;
  uint64_t v137;
  void *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t result;
  uint64_t v143;
  uint64_t v144;
  uint64_t *v145;
  uint64_t v146;
  unint64_t v147;
  _QWORD v148[2];
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  int *v167;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
  MEMORY[0x1E0C80A78](v2);
  v161 = (uint64_t)v148 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for CloudKitShareParticipant(0);
  v159 = *(_QWORD *)(v4 - 8);
  v160 = v4;
  MEMORY[0x1E0C80A78](v4);
  v152 = (uint64_t)v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v7 = MEMORY[0x1E0C80A78](v6);
  v164 = (char *)v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v148 - v10;
  MEMORY[0x1E0C80A78](v9);
  v154 = (uint64_t)v148 - v12;
  v13 = sub_1AD63B03C();
  v165 = *(_QWORD *)(v13 - 8);
  v166 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v158 = (char *)v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v157 = (char *)v148 - v17;
  MEMORY[0x1E0C80A78](v16);
  v155 = (char *)v148 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB318);
  v20 = MEMORY[0x1E0C80A78](v19);
  v151 = (uint64_t)v148 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v150 = (uint64_t)v148 - v23;
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v148 - v24;
  v26 = type metadata accessor for HealthSharingSetupMetadata(0);
  v162 = *(_QWORD *)(v26 - 8);
  v163 = v26;
  v27 = MEMORY[0x1E0C80A78](v26);
  v149 = (uint64_t)v148 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v153 = (uint64_t)v148 - v29;
  v30 = type metadata accessor for HealthSummarySharingEntry(0);
  MEMORY[0x1E0C80A78](v30);
  v32 = (char *)v148 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD63B240();
  v148[1] = v30;
  v33 = *(int *)(v30 + 20);
  if (qword_1EECD1520 != -1)
    swift_once();
  *(_QWORD *)&v32[v33] = qword_1EECDBF30;
  v34 = *(_QWORD *)(v1 + 24);
  v156 = v11;
  if (!v34)
  {
    swift_retain();
    v35 = *(_QWORD *)(v1 + 56);
    if (!v35)
      goto LABEL_14;
    goto LABEL_10;
  }
  if (v34 == 1)
    goto LABEL_93;
  v36 = *(_QWORD *)(v1 + 16);
  swift_retain();
  sub_1AD003E48(v36, v34);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
    swift_allocObject();
    v37 = swift_retain();
    v38 = sub_1AD3E86B8(v37);
    swift_release();
    *(_QWORD *)&v32[v33] = v38;
    swift_release();
  }
  v39 = *(_QWORD *)&v32[v33];
  swift_beginAccess();
  *(_QWORD *)(v39 + 16) = v36;
  *(_QWORD *)(v39 + 24) = v34;
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(v1 + 56);
  if (v35)
  {
LABEL_10:
    if (v35 == 1)
      goto LABEL_93;
    v40 = *(_QWORD *)(v1 + 48);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v41 = swift_retain();
      v42 = sub_1AD3E86B8(v41);
      swift_release();
      *(_QWORD *)&v32[v33] = v42;
      swift_release();
    }
    v43 = *(_QWORD *)&v32[v33];
    swift_beginAccess();
    *(_QWORD *)(v43 + 32) = v40;
    *(_QWORD *)(v43 + 40) = v35;
    swift_bridgeObjectRelease();
  }
LABEL_14:
  v44 = *(_QWORD *)(v1 + 80);
  if (!v44)
    goto LABEL_93;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
    swift_allocObject();
    v45 = swift_retain();
    v46 = sub_1AD3E86B8(v45);
    swift_release();
    *(_QWORD *)&v32[v33] = v46;
    swift_release();
  }
  v47 = *(_QWORD *)&v32[v33];
  swift_beginAccess();
  *(_QWORD *)(v47 + 48) = v44;
  swift_bridgeObjectRelease();
  v48 = *(_QWORD *)(v1 + 96);
  if (v48)
  {
    v49 = *(_QWORD *)(v1 + 88);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v50 = swift_retain();
      v51 = sub_1AD3E86B8(v50);
      swift_release();
      *(_QWORD *)&v32[v33] = v51;
      swift_release();
    }
    v52 = *(_QWORD *)&v32[v33];
    swift_beginAccess();
    *(_QWORD *)(v52 + 56) = v49;
    *(_QWORD *)(v52 + 64) = v48;
    swift_bridgeObjectRelease();
  }
  v53 = *(_QWORD *)(v1 + 112);
  if (v53)
  {
    v54 = *(_QWORD *)(v1 + 104);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v55 = swift_retain();
      v56 = sub_1AD3E86B8(v55);
      swift_release();
      *(_QWORD *)&v32[v33] = v56;
      swift_release();
    }
    v57 = *(_QWORD *)&v32[v33];
    swift_beginAccess();
    *(_QWORD *)(v57 + 72) = v54;
    *(_QWORD *)(v57 + 80) = v53;
    swift_bridgeObjectRelease();
  }
  v58 = *(unsigned __int8 *)(v1 + 120);
  if (v58 != 2)
  {
    v59 = v58 & 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v60 = swift_retain();
      v61 = sub_1AD3E86B8(v60);
      swift_release();
      *(_QWORD *)&v32[v33] = v61;
      swift_release();
    }
    v62 = *(_QWORD *)&v32[v33];
    swift_beginAccess();
    *(_BYTE *)(v62 + 88) = v59;
  }
  v63 = *(unsigned __int8 *)(v1 + 121);
  if (v63 != 2)
  {
    v64 = v63 & 1;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v65 = swift_retain();
      v66 = sub_1AD3E86B8(v65);
      swift_release();
      *(_QWORD *)&v32[v33] = v66;
      swift_release();
    }
    v67 = *(_QWORD *)&v32[v33];
    swift_beginAccess();
    *(_BYTE *)(v67 + 89) = v64;
  }
  v68 = *(unsigned __int8 *)(v1 + 122);
  if (v68 != 5)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v69 = swift_retain();
      v70 = sub_1AD3E86B8(v69);
      swift_release();
      *(_QWORD *)&v32[v33] = v70;
      swift_release();
    }
    v71 = *(_QWORD *)&v32[v33];
    swift_beginAccess();
    *(_BYTE *)(v71 + 90) = v68;
  }
  v72 = v1;
  v73 = v167;
  sub_1AD37B39C((uint64_t)v25);
  if (v73)
  {
LABEL_88:
    sub_1AD066230((uint64_t)v32, type metadata accessor for HealthSummarySharingEntry);
    return v72;
  }
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v162 + 48))(v25, 1, v163) == 1)
  {
    sub_1AD009758((uint64_t)v25, &qword_1EECDB318);
  }
  else
  {
    v74 = v153;
    sub_1AD2A5214((uint64_t)v25, v153, type metadata accessor for HealthSharingSetupMetadata);
    v75 = v149;
    sub_1AD0D3D2C(v74, v149, type metadata accessor for HealthSharingSetupMetadata);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v76 = swift_retain();
      v77 = sub_1AD3E86B8(v76);
      swift_release();
      *(_QWORD *)&v32[v33] = v77;
      swift_release();
    }
    v78 = *(_QWORD *)&v32[v33];
    v79 = v75;
    v80 = v150;
    sub_1AD2A5214(v79, v150, type metadata accessor for HealthSharingSetupMetadata);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v162 + 56))(v80, 0, 1, v163);
    v81 = v151;
    sub_1AD382A5C(v80, v151);
    v82 = v78
        + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__sharingSetupMetadata;
    swift_beginAccess();
    swift_retain();
    sub_1AD382AA4(v81, v82);
    swift_endAccess();
    swift_release();
    sub_1AD066230(v153, type metadata accessor for HealthSharingSetupMetadata);
  }
  v167 = (int *)type metadata accessor for IDSHealthInvitation(0);
  v83 = v154;
  sub_1ACFF64C0(v1 + v167[13], v154, (uint64_t *)&unk_1ED2E2D98);
  v85 = v165;
  v84 = v166;
  v86 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v165 + 48);
  v87 = v86(v83, 1, v166);
  v148[0] = 0;
  if (v87 == 1)
  {
    sub_1AD009758(v83, (uint64_t *)&unk_1ED2E2D98);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v155, v83, v84);
    sub_1AD63B00C();
    v89 = v88;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v90 = swift_retain();
      v91 = sub_1AD3E86B8(v90);
      v85 = v165;
      v84 = v166;
      swift_release();
      *(_QWORD *)&v32[v33] = v91;
      swift_release();
    }
    v92 = *(_QWORD *)&v32[v33]
        + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__dateModified;
    swift_beginAccess();
    *(_QWORD *)v92 = v89;
    *(_BYTE *)(v92 + 8) = 0;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v155, v84);
  }
  v93 = (uint64_t)v164;
  v94 = (uint64_t)v156;
  sub_1ACFF64C0(v1 + v167[14], (uint64_t)v156, (uint64_t *)&unk_1ED2E2D98);
  if (v86(v94, 1, v84) == 1)
  {
    sub_1AD009758(v94, (uint64_t *)&unk_1ED2E2D98);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v157, v94, v84);
    sub_1AD63B00C();
    v96 = v95;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v97 = swift_retain();
      v98 = sub_1AD3E86B8(v97);
      v85 = v165;
      v84 = v166;
      swift_release();
      *(_QWORD *)&v32[v33] = v98;
      swift_release();
    }
    v99 = *(_QWORD *)&v32[v33]
        + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__dateAccepted;
    swift_beginAccess();
    *(_QWORD *)v99 = v96;
    *(_BYTE *)(v99 + 8) = 0;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v157, v84);
    v93 = (uint64_t)v164;
  }
  v100 = v148[0];
  sub_1ACFF64C0(v1 + v167[15], v93, (uint64_t *)&unk_1ED2E2D98);
  if (v86(v93, 1, v84) == 1)
  {
    sub_1AD009758(v93, (uint64_t *)&unk_1ED2E2D98);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v85 + 32))(v158, v93, v84);
    sub_1AD63B00C();
    v102 = v101;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v103 = swift_retain();
      v104 = sub_1AD3E86B8(v103);
      v85 = v165;
      v84 = v166;
      swift_release();
      *(_QWORD *)&v32[v33] = v104;
      swift_release();
    }
    v105 = *(_QWORD *)&v32[v33]
         + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__dateInvited;
    swift_beginAccess();
    *(_QWORD *)v105 = v102;
    *(_BYTE *)(v105 + 8) = 0;
    (*(void (**)(char *, uint64_t))(v85 + 8))(v158, v84);
  }
  v106 = v1 + v167[16];
  v107 = *(_QWORD *)(v106 + 24);
  if (v107)
  {
    if (v107 == 1)
      goto LABEL_93;
    v108 = *(_QWORD *)(v106 + 16);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v109 = swift_retain();
      v110 = sub_1AD3E86B8(v109);
      swift_release();
      *(_QWORD *)&v32[v33] = v110;
      swift_release();
    }
    v111 = (_QWORD *)(*(_QWORD *)&v32[v33]
                    + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__invitationUuid);
    swift_beginAccess();
    *v111 = v108;
    v111[1] = v107;
    swift_bridgeObjectRelease();
  }
  v112 = v1 + v167[17];
  v113 = *(_QWORD *)(v112 + 24);
  if (v113)
  {
    if (v113 == 1)
      goto LABEL_93;
    v114 = *(_QWORD *)(v112 + 16);
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v115 = swift_retain();
      v116 = sub_1AD3E86B8(v115);
      swift_release();
      *(_QWORD *)&v32[v33] = v116;
      swift_release();
    }
    v117 = (_QWORD *)(*(_QWORD *)&v32[v33]
                    + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__cloudKitIdentifier);
    swift_beginAccess();
    *v117 = v114;
    v117[1] = v113;
    swift_bridgeObjectRelease();
  }
  v118 = v161;
  sub_1ACFF64C0(v1 + v167[18], v161, (uint64_t *)&unk_1EECDB300);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v159 + 48))(v118, 1, v160) == 1)
  {
    sub_1AD009758(v118, (uint64_t *)&unk_1EECDB300);
    goto LABEL_70;
  }
  v136 = v152;
  sub_1AD2A5214(v118, v152, type metadata accessor for CloudKitShareParticipant);
  v72 = v136;
  v137 = sub_1AD58DEA4();
  if (v100)
  {
    sub_1AD066230(v136, type metadata accessor for CloudKitShareParticipant);
    goto LABEL_88;
  }
  v138 = (void *)v137;
  v139 = sub_1AD590B14();
  v141 = v140;
  v100 = 0;

  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
    swift_allocObject();
    v143 = swift_retain();
    v144 = sub_1AD3E86B8(v143);
    v136 = v152;
    swift_release();
    *(_QWORD *)&v32[v33] = v144;
    swift_release();
  }
  v145 = (uint64_t *)(*(_QWORD *)&v32[v33]
                   + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__ownerParticipant);
  swift_beginAccess();
  v146 = *v145;
  v147 = v145[1];
  *v145 = v139;
  v145[1] = v141;
  sub_1AD004118(v146, v147);
  sub_1AD066230(v136, type metadata accessor for CloudKitShareParticipant);
LABEL_70:
  v119 = *(unsigned __int8 *)(v1 + v167[19]);
  if (v119 != 3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v120 = swift_retain();
      v121 = sub_1AD3E86B8(v120);
      swift_release();
      *(_QWORD *)&v32[v33] = v121;
      swift_release();
    }
    v122 = (_BYTE *)(*(_QWORD *)&v32[v33]
                   + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__notificationStatus);
    swift_beginAccess();
    *v122 = v119;
  }
  v72 = v1;
  v123 = sub_1AD37BBA4();
  if (v100)
    goto LABEL_88;
  v124 = v123;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
    swift_allocObject();
    v125 = swift_retain();
    v126 = sub_1AD3E86B8(v125);
    swift_release();
    *(_QWORD *)&v32[v33] = v126;
    swift_release();
  }
  v127 = (uint64_t *)(*(_QWORD *)&v32[v33]
                   + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__sharingAuthorizations);
  swift_beginAccess();
  *v127 = v124;
  swift_bridgeObjectRelease();
  v128 = *(unsigned __int8 *)(v1 + v167[21]);
  if (v128 != 3)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v129 = swift_retain();
      v130 = sub_1AD3E86B8(v129);
      swift_release();
      *(_QWORD *)&v32[v33] = v130;
      swift_release();
    }
    v131 = (_BYTE *)(*(_QWORD *)&v32[v33]
                   + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__userWheelchairMode);
    swift_beginAccess();
    *v131 = v128;
  }
  v132 = *(_QWORD *)(v1 + v167[22] + 16);
  if (v132)
  {
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      type metadata accessor for HealthSummarySharingEntry._StorageClass(0);
      swift_allocObject();
      v133 = swift_retain();
      v134 = sub_1AD3E86B8(v133);
      swift_release();
      *(_QWORD *)&v32[v33] = v134;
      swift_release();
    }
    v135 = (_QWORD *)(*(_QWORD *)&v32[v33]
                    + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__authorizationCategories);
    swift_beginAccess();
    *v135 = v132;
    swift_bridgeObjectRelease();
    sub_1ACFF9724(&qword_1EECDB310, type metadata accessor for HealthSummarySharingEntry, (uint64_t)&unk_1AD68166C);
    v72 = sub_1AD63B348();
    sub_1AD066230((uint64_t)v32, type metadata accessor for HealthSummarySharingEntry);
    return v72;
  }
LABEL_93:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD37B39C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, uint64_t);
  uint64_t result;
  _QWORD *v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)(uint64_t, uint64_t, uint64_t);
  int v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t (*v60)();
  uint64_t v61;
  uint64_t v62;
  uint64_t (*v63)();
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t *v81;
  _QWORD *v82;
  int *v83;
  uint64_t *v84;
  uint64_t v85;
  unint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v94 = a1;
  v2 = type metadata accessor for HealthSharingSetupInvitationToken(0);
  v95 = *(_QWORD *)(v2 - 8);
  v3 = MEMORY[0x1E0C80A78](v2);
  v101 = (uint64_t)&v80 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v96 = (uint64_t)&v80 - v5;
  v6 = type metadata accessor for CloudKitSharingToken();
  v87 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v97 = (uint64_t)&v80 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
  v9 = MEMORY[0x1E0C80A78](v8);
  v89 = (uint64_t)&v80 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v91 = (uint64_t)&v80 - v11;
  v93 = type metadata accessor for CloudKitShareParticipant(0);
  v90 = *(_QWORD *)(v93 - 8);
  v12 = MEMORY[0x1E0C80A78](v93);
  v88 = (uint64_t)&v80 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v92 = (char *)&v80 - v14;
  v15 = (int *)type metadata accessor for HealthSharingSetupMetadata(0);
  v16 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v15);
  v18 = (unint64_t *)((char *)&v80 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2400);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v80 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  v23 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v80 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = *(int *)(type metadata accessor for IDSHealthInvitation(0) + 48);
  v99 = v1;
  sub_1ACFF64C0(v1 + v26, (uint64_t)v21, &qword_1EECD2400);
  v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  v98 = (int *)v22;
  if (v27(v21, 1, v22) == 1)
  {
    sub_1AD009758((uint64_t)v21, &qword_1EECD2400);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v16 + 56))(v94, 1, 1, v15);
  }
  v85 = v16;
  sub_1AD2A5214((uint64_t)v21, (uint64_t)v25, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  *v18 = MEMORY[0x1E0DEE9D8];
  sub_1AD63B240();
  v29 = (unint64_t *)((char *)v18 + v15[6]);
  *v29 = 0;
  v29[1] = 0;
  v30 = (char *)v18 + v15[7];
  *(_OWORD *)v30 = xmmword_1AD67A180;
  v84 = (uint64_t *)((char *)v18 + v15[8]);
  *(_OWORD *)v84 = xmmword_1AD67A180;
  v81 = (uint64_t *)((char *)v18 + v15[9]);
  *(_OWORD *)v81 = xmmword_1AD67A180;
  v31 = (unint64_t *)((char *)v18 + v15[10]);
  *v31 = 0;
  v31[1] = 0;
  v82 = v31;
  v32 = *((_QWORD *)v25 + 3);
  v33 = v100;
  v34 = v15;
  v35 = (uint64_t)v25;
  v37 = (uint64_t)v92;
  v36 = v93;
  if (v32)
  {
    if (v32 == 1)
      goto LABEL_32;
    *v29 = *((_QWORD *)v25 + 2);
    v29[1] = v32;
  }
  v86 = v18;
  v38 = v91;
  sub_1ACFF64C0((uint64_t)&v25[v98[5]], v91, (uint64_t *)&unk_1EECDB300);
  v39 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v90 + 48);
  v40 = v39(v38, 1, v36);
  v83 = v34;
  if (v40 == 1)
  {
    swift_bridgeObjectRetain();
    sub_1AD009758(v38, (uint64_t *)&unk_1EECDB300);
  }
  else
  {
    v66 = v38;
    v41 = v35;
    sub_1AD2A5214(v66, v37, type metadata accessor for CloudKitShareParticipant);
    swift_bridgeObjectRetain();
    v67 = sub_1AD58DEA4();
    if (v33)
    {
      sub_1AD066230(v37, type metadata accessor for CloudKitShareParticipant);
      goto LABEL_27;
    }
    v68 = (void *)v67;
    v69 = sub_1AD590B14();
    v71 = v70;
    v33 = 0;

    *(_QWORD *)v30 = v69;
    *((_QWORD *)v30 + 1) = v71;
    sub_1AD066230(v37, type metadata accessor for CloudKitShareParticipant);
    v35 = v41;
  }
  v41 = v35;
  v42 = sub_1AD37C37C(v35);
  if (v33)
  {
LABEL_27:
    sub_1AD066230(v41, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    v72 = (uint64_t)v86;
    return sub_1AD066230(v72, type metadata accessor for HealthSharingSetupMetadata);
  }
  v44 = v43;
  if (v43 >> 60 != 15)
  {
    v45 = v42;
    v46 = v84;
    sub_1AD004118(*v84, v84[1]);
    *v46 = v45;
    v46[1] = v44;
  }
  v47 = v41;
  v48 = v89;
  sub_1ACFF64C0(v41 + v98[6], v89, (uint64_t *)&unk_1EECDB300);
  if (v39(v48, 1, v36) == 1)
  {
    v49 = v86;
    sub_1AD009758(v48, (uint64_t *)&unk_1EECDB300);
    v50 = v94;
    v51 = v85;
  }
  else
  {
    v73 = v88;
    sub_1AD2A5214(v48, v88, type metadata accessor for CloudKitShareParticipant);
    v74 = (void *)sub_1AD58DEA4();
    v75 = sub_1AD590B14();
    v77 = v76;

    v49 = v86;
    v79 = v81;
    sub_1AD004118(*v81, v81[1]);
    *v79 = v75;
    v79[1] = v77;
    sub_1AD066230(v73, type metadata accessor for CloudKitShareParticipant);
    v50 = v94;
    v51 = v85;
    v47 = v41;
  }
  v52 = v47 + v98[9];
  v53 = *(_QWORD *)(v52 + 24);
  if (!v53)
    goto LABEL_16;
  if (v53 != 1)
  {
    v54 = *(_QWORD *)(v52 + 16);
    v55 = v82;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v55 = v54;
    v55[1] = v53;
LABEL_16:
    v56 = *(_QWORD *)(v41 + v98[10]);
    v57 = *(_QWORD *)(v56 + 16);
    if (v57)
    {
      v58 = v56 + ((*(unsigned __int8 *)(v87 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v87 + 80));
      v100 = *(_QWORD *)(v87 + 72);
      v98 = (int *)v56;
      swift_bridgeObjectRetain();
      v59 = MEMORY[0x1E0DEE9D8];
      v60 = type metadata accessor for CloudKitSharingToken;
      v62 = v96;
      v61 = v97;
      do
      {
        v63 = v60;
        sub_1AD0D3D2C(v58, v61, (uint64_t (*)(_QWORD))v60);
        sub_1AD37C5E4(v61, v62);
        sub_1AD0D3D2C(v62, v101, type metadata accessor for HealthSharingSetupInvitationToken);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v59 = sub_1AD3CAF1C(0, *(_QWORD *)(v59 + 16) + 1, 1, v59);
        v65 = *(_QWORD *)(v59 + 16);
        v64 = *(_QWORD *)(v59 + 24);
        if (v65 >= v64 >> 1)
          v59 = sub_1AD3CAF1C(v64 > 1, v65 + 1, 1, v59);
        *(_QWORD *)(v59 + 16) = v65 + 1;
        sub_1AD2A5214(v101, v59+ ((*(unsigned __int8 *)(v95 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v95 + 80))+ *(_QWORD *)(v95 + 72) * v65, type metadata accessor for HealthSharingSetupInvitationToken);
        v62 = v96;
        sub_1AD066230(v96, type metadata accessor for HealthSharingSetupInvitationToken);
        v61 = v97;
        sub_1AD066230(v97, (uint64_t (*)(_QWORD))v63);
        v60 = v63;
        v58 += v100;
        --v57;
      }
      while (v57);
      v49 = v86;
      swift_bridgeObjectRelease();
      v50 = v94;
      v51 = v85;
      v78 = v41;
    }
    else
    {
      v78 = v41;
      v59 = MEMORY[0x1E0DEE9D8];
    }
    sub_1AD066230(v78, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    swift_bridgeObjectRelease();
    *v49 = v59;
    sub_1AD0D3D2C((uint64_t)v49, v50, type metadata accessor for HealthSharingSetupMetadata);
    (*(void (**)(uint64_t, _QWORD, uint64_t, int *))(v51 + 56))(v50, 0, 1, v83);
    v72 = (uint64_t)v49;
    return sub_1AD066230(v72, type metadata accessor for HealthSharingSetupMetadata);
  }
LABEL_32:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD37BBA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  char *v19;
  char *v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t result;
  _QWORD v26[2];
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v2 = type metadata accessor for HealthSharingAuthorization(0);
  v29 = *(_QWORD *)(v2 - 8);
  v30 = v2;
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v26 - v6;
  v8 = *(_QWORD *)(*(_QWORD *)(v0 + *(int *)(type metadata accessor for IDSHealthInvitation(0) + 80)) + 16);
  if (!v8)
    return MEMORY[0x1E0DEE9D8];
  v26[1] = v1;
  v26[0] = swift_bridgeObjectRetain();
  v9 = (uint64_t *)(v26[0] + 48);
  v10 = MEMORY[0x1E0DEE9D8];
  v27 = v7;
  v28 = v5;
  while (1)
  {
    v11 = *(v9 - 1);
    v12 = *v9;
    v13 = v9[1];
    v15 = v9[3];
    v14 = v9[4];
    v31 = v9[2];
    v32 = v14;
    v16 = v9[5];
    v33 = v11;
    swift_retain();
    sub_1AD003E48(v12, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1AD63B240();
    v17 = v30;
    v18 = (uint64_t *)&v7[*(int *)(v30 + 20)];
    *v18 = 0;
    v18[1] = 0;
    v19 = &v7[*(int *)(v17 + 24)];
    *(_QWORD *)v19 = 0;
    *((_QWORD *)v19 + 1) = 0;
    v20 = &v7[*(int *)(v17 + 28)];
    *(_QWORD *)v20 = 0;
    *((_QWORD *)v20 + 1) = 0;
    if (v13)
      break;
LABEL_6:
    if (v15)
    {
      *(_QWORD *)v19 = v31;
      *((_QWORD *)v19 + 1) = v15;
    }
    if (v16)
    {
      *(_QWORD *)v20 = v32;
      *((_QWORD *)v20 + 1) = v16;
    }
    sub_1AD0D3D2C((uint64_t)v7, (uint64_t)v5, type metadata accessor for HealthSharingAuthorization);
    sub_1AD003E48(v12, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
      v21 = v10;
    else
      v21 = sub_1AD3CAF30(0, *(_QWORD *)(v10 + 16) + 1, 1, v10);
    v23 = *(_QWORD *)(v21 + 16);
    v22 = *(_QWORD *)(v21 + 24);
    if (v23 >= v22 >> 1)
      v21 = sub_1AD3CAF30(v22 > 1, v23 + 1, 1, v21);
    v9 += 8;
    *(_QWORD *)(v21 + 16) = v23 + 1;
    v10 = v21;
    v24 = v21
        + ((*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80))
        + *(_QWORD *)(v29 + 72) * v23;
    v5 = v28;
    sub_1AD2A5214((uint64_t)v28, v24, type metadata accessor for HealthSharingAuthorization);
    swift_release();
    sub_1AD003F24(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v7 = v27;
    sub_1AD066230((uint64_t)v27, type metadata accessor for HealthSharingAuthorization);
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      return v10;
    }
  }
  if (v13 != 1)
  {
    *v18 = v12;
    v18[1] = v13;
    goto LABEL_6;
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

void sub_1AD37BE90(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  _QWORD *v18;
  _QWORD *v19;
  id v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t ObjCClassFromMetadata;
  void *v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  unint64_t *v33;
  unint64_t *v34;
  id v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  id v42[4];
  void *v43;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for HealthSharingSetupInvitationToken(0);
  v9 = (uint64_t *)(a1 + *(int *)(v8 + 24));
  v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    v11 = type metadata accessor for CloudKitSharingToken();
    (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a2, 1, 1, v11);
    return;
  }
  v12 = v8;
  v13 = *v9;
  v14 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  sub_1AD00408C(v13, v10);
  v15 = sub_1AD36E7D4();
  if (v2)
  {
    sub_1AD004118(v13, v10);
    v42[0] = v2;
    v16 = v2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
    sub_1AD32F2CC(0, (unint64_t *)&qword_1EECDB380);
    if ((swift_dynamicCast() & 1) != 0)
    {

      v17 = v43;
      sub_1AD0DDA60();
      swift_allocError();
      v19 = v18;
      v20 = v17;
      sub_1AD601B20(v20, 0xD000000000000013, 0x80000001AD6A8B10, v19);
      swift_willThrow();

      v21 = v42[0];
    }
    else
    {

      sub_1AD0DDA60();
      swift_allocError();
      v34 = v33;
      v35 = v2;
      sub_1AD6015CC(v2, 0xD000000000000013, 0x80000001AD6A8B10, v34);
      swift_willThrow();
      v21 = v2;
    }

    return;
  }
  v22 = v15;
  sub_1AD004118(v13, v10);
  v23 = v22;
  objc_msgSend(v23, sel__enableStrictSecureDecodingMode);
  objc_msgSend(v23, sel_setDecodingFailurePolicy_, 1);
  v24 = sub_1AD32F2CC(0, &qword_1EECDB010);
  ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  v26 = (void *)sub_1AD63B744();
  objc_msgSend(v23, sel_setClass_forClassName_, ObjCClassFromMetadata, v26);

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB0B8);
  v27 = swift_allocObject();
  *(_OWORD *)(v27 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v27 + 32) = v24;
  sub_1AD63B768();
  sub_1AD63BC24();
  v41 = v23;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v42[3])
  {
    sub_1AD009758((uint64_t)v42, &qword_1EECDC5F0);
    goto LABEL_16;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_16:
    v36 = v41;
    v37 = sub_1AD63BD8C();
    swift_allocError();
    v39 = v38;
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v39, *MEMORY[0x1E0DEC458], v37);
    swift_willThrow();

    return;
  }
  v28 = v43;
  if (*(_QWORD *)(a1 + *(int *)(v12 + 20) + 8))
  {
    swift_bridgeObjectRetain();
    sub_1AD63AF04();
    swift_bridgeObjectRelease();
    v29 = sub_1AD63AF28();
    v30 = *(_QWORD *)(v29 - 8);
    v31 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v7, 1, v29) != 1)
    {
      v31 = (void *)sub_1AD63AE98();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v29);
    }
    objc_msgSend(v28, sel_setShareURL_, v31);

  }
  sub_1AD4E29DC(v28, a2);

  v32 = type metadata accessor for CloudKitSharingToken();
  (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(a2, 0, 1, v32);
}

uint64_t sub_1AD37C37C(uint64_t a1)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  objc_class *v10;
  _BYTE *v11;
  _QWORD *v12;
  _QWORD *v13;
  id v14;
  id v15;
  id v16;
  void *v17;
  id v18;
  uint64_t result;
  objc_super v20;

  v2 = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  v3 = *(unsigned __int8 *)(a1 + *(int *)(v2 + 32));
  if (v3 == 5)
    return 0;
  v5 = a1 + *(int *)(v2 + 28);
  v4 = *(_QWORD *)(v5 + 24);
  if (!v4)
    return v4;
  if (v4 != 1)
  {
    v6 = *(_QWORD *)(v5 + 16);
    v7 = objc_allocWithZone(MEMORY[0x1E0CB3A28]);
    swift_bridgeObjectRetain();
    v8 = (void *)sub_1AD63B744();
    sub_1AD003F24(v6, v4);
    v9 = objc_msgSend(v7, sel_initWithUUIDString_, v8);

    if (v9)
    {
      v10 = (objc_class *)type metadata accessor for _BlastDoorHKProfileIdentifier();
      v11 = objc_allocWithZone(v10);
      v12 = &v11[OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_UuidKey];
      *v12 = 0x746E65646970;
      v12[1] = 0xE600000000000000;
      v13 = &v11[OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_TypeKey];
      *v13 = 0x6570797470;
      v13[1] = 0xE500000000000000;
      v11[OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_type] = v3;
      *(_QWORD *)&v11[OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_uuid] = v9;
      v20.receiver = v11;
      v20.super_class = v10;
      v14 = v9;
      v15 = objc_msgSendSuper2(&v20, sel_init);
      v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
      v17 = (void *)sub_1AD63B744();
      objc_msgSend(v16, sel_setClassName_forClass_, v17, swift_getObjCClassFromMetadata());

      objc_msgSend(v16, sel_encodeObject_forKey_, v15, *MEMORY[0x1E0CB2CD0]);
      v18 = objc_msgSend(v16, sel_encodedData);
      v4 = sub_1AD63AFB8();

      return v4;
    }
    return 0;
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

void sub_1AD37C5E4(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void *v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  os_log_type_t v13;
  NSObject *v14;
  os_log_type_t v15;
  id v16;
  id v17;
  uint8_t *v18;
  _QWORD *v19;
  id v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  void *v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  id v38;
  _QWORD v39[2];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AD63AF28();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1AD4E2BB8();
  if (v2)
  {
    v13 = sub_1AD63BB7C();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    v14 = qword_1ED2E7530;
    v15 = v13;
    if (os_log_type_enabled((os_log_t)qword_1ED2E7530, v13))
    {
      v16 = v2;
      v17 = v2;
      v18 = (uint8_t *)swift_slowAlloc();
      v19 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v18 = 138412290;
      v20 = v2;
      v21 = _swift_stdlib_bridgeErrorToNSError();
      v39[1] = v21;
      sub_1AD63BC60();
      *v19 = v21;

      _os_log_impl(&dword_1ACFC8000, v14, v15, "Error when attempting to recompose CloudSharingMetadata token: %@", v18, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDAC98);
      swift_arrayDestroy();
      MEMORY[0x1AF44BED4](v19, -1, -1);
      MEMORY[0x1AF44BED4](v18, -1, -1);
    }
    swift_willThrow();
  }
  else
  {
    v22 = v12;
    v23 = a1 + *(int *)(type metadata accessor for CloudKitSharingToken() + 24);
    v24 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
    sub_1ACFF64C0(v23 + *(int *)(v24 + 28), (uint64_t)v7, &qword_1ED2E1A40);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      v38 = v22;
      sub_1AD009758((uint64_t)v7, &qword_1ED2E1A40);
      sub_1AD63BE28();
      __break(1u);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      v25 = v22;
      v26 = sub_1AD63AE74();
      v28 = v27;
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
      objc_msgSend(v25, sel_setShareURL_, 0);
      v29 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
      v30 = (void *)sub_1AD63B744();
      sub_1AD32F2CC(0, &qword_1EECDB010);
      objc_msgSend(v29, sel_setClassName_forClass_, v30, swift_getObjCClassFromMetadata());

      objc_msgSend(v29, sel_encodeObject_forKey_, v25, *MEMORY[0x1E0CB2CD0]);
      sub_1AD63B240();
      v31 = type metadata accessor for HealthSharingSetupInvitationToken(0);
      v32 = (uint64_t *)(a2 + *(int *)(v31 + 20));
      *v32 = 0;
      v32[1] = 0;
      v33 = a2 + *(int *)(v31 + 24);
      *(_OWORD *)v33 = xmmword_1AD67A180;
      *v32 = v26;
      v32[1] = v28;
      v34 = objc_msgSend(v29, sel_encodedData);
      v35 = sub_1AD63AFB8();
      v37 = v36;

      *(_QWORD *)v33 = v35;
      *(_QWORD *)(v33 + 8) = v37;
    }
  }
}

id sub_1AD37CA14(void *a1)
{
  char *v1;
  char *v3;
  char *v4;
  uint64_t v5;
  char *v6;
  id v7;
  void *v8;
  id v9;
  char v10;
  id v11;
  objc_super v13;
  id v14;
  char v15[24];
  uint64_t v16;

  v3 = &v1[OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_UuidKey];
  *(_QWORD *)v3 = 0x746E65646970;
  *((_QWORD *)v3 + 1) = 0xE600000000000000;
  v4 = &v1[OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_TypeKey];
  *(_QWORD *)v4 = 0x6570797470;
  *((_QWORD *)v4 + 1) = 0xE500000000000000;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB0B8);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v5 + 32) = sub_1AD32F2CC(0, (unint64_t *)&unk_1EECDB340);
  v6 = v1;
  sub_1AD63BC24();
  swift_bridgeObjectRelease();
  if (!v16)
  {

    sub_1AD009758((uint64_t)v15, &qword_1EECDC5F0);
LABEL_13:
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    type metadata accessor for _BlastDoorHKProfileIdentifier();
    swift_deallocPartialClassInstance();
    return 0;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_12:

    goto LABEL_13;
  }
  v7 = v14;
  swift_bridgeObjectRetain();
  v8 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(a1, sel_decodeIntegerForKey_, v8);

  v10 = 0;
  switch((unint64_t)v9)
  {
    case 1uLL:
      goto LABEL_10;
    case 2uLL:
      v10 = 1;
      goto LABEL_10;
    case 3uLL:
      v10 = 2;
      goto LABEL_10;
    case 4uLL:
      v10 = 3;
      goto LABEL_10;
    default:
      if (v9 != (id)100)
      {

        goto LABEL_12;
      }
      v10 = 4;
LABEL_10:
      v6[OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_type] = v10;
      *(_QWORD *)&v6[OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_uuid] = v7;

      v13.receiver = v6;
      v13.super_class = (Class)type metadata accessor for _BlastDoorHKProfileIdentifier();
      v11 = objc_msgSendSuper2(&v13, sel_init);

      break;
  }
  return v11;
}

void sub_1AD37CC80(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  uint64_t v5;
  id v6;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_uuid);
  v4 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = qword_1AD67CB30[*(char *)(v1 + OBJC_IVAR____TtC9BlastDoor29_BlastDoorHKProfileIdentifier_type)];
  v6 = (id)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v5, v6);

}

id sub_1AD37CDD4()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _BlastDoorHKProfileIdentifier();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1AD37CE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *);
  char v10;
  BOOL v12;
  _QWORD v14[2];

  if (a2 && (v4 = *(_QWORD *)(a3 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v7 = v4 - 1;
    v8 = a3 + 40;
    do
    {
      v9 = *(uint64_t (**)(_QWORD *))(v8 - 8);
      v14[0] = a1;
      v14[1] = a2;
      swift_retain();
      v10 = v9(v14);
      swift_release();
      v12 = v7-- != 0;
      if ((v10 & 1) == 0)
        break;
      v8 += 16;
    }
    while (v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 1;
  }
  return v10 & 1;
}

uint64_t sub_1AD37CF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char v11;
  int64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AD63AF28();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD63AF04();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1AD009758((uint64_t)v6, &qword_1ED2E1A40);
    v11 = 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v12 = *(_QWORD *)(a3 + 16);
    v13 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    if (v12)
    {
      v28 = v10;
      v29 = v8;
      v30 = v7;
      v33 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1AD1474DC(0, v12, 0);
      v13 = v33;
      sub_1AD0442F4();
      v14 = (uint64_t *)(a3 + 40);
      do
      {
        v15 = *v14;
        v31 = *(v14 - 1);
        v32 = v15;
        v16 = sub_1AD63BC84();
        v18 = v17;
        v33 = v13;
        v20 = v13[2];
        v19 = v13[3];
        if (v20 >= v19 >> 1)
        {
          sub_1AD1474DC(v19 > 1, v20 + 1, 1);
          v13 = v33;
        }
        v14 += 2;
        v13[2] = v20 + 1;
        v21 = &v13[2 * v20];
        v21[4] = v16;
        v21[5] = v18;
        --v12;
      }
      while (v12);
      v8 = v29;
      v7 = v30;
      v10 = v28;
    }
    v22 = sub_1AD63AEF8();
    if (v23)
    {
      v31 = v22;
      v32 = v23;
      sub_1AD0442F4();
      swift_bridgeObjectRetain();
      v24 = sub_1AD63BC84();
      v26 = v25;
      swift_bridgeObjectRelease();
      v11 = sub_1AD37834C(v24, v26, v13);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v11 = 0;
    }
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v11 & 1;
}

BOOL sub_1AD37D17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  int64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AD63AF28();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD63AF04();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1AD009758((uint64_t)v6, &qword_1ED2E1A40);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    v12 = *(_QWORD *)(a3 + 16);
    v13 = MEMORY[0x1E0DEE9D8];
    if (v12)
    {
      v39 = v10;
      v40 = v8;
      v41 = v7;
      v53 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      sub_1AD1474F8(0, v12, 0);
      v14 = v53;
      v43 = a3 + 32;
      sub_1AD0442F4();
      v15 = 0;
      v42 = v12;
      do
      {
        v16 = (uint64_t *)(v43 + 24 * v15);
        v17 = v16[1];
        v18 = v16[2];
        v51 = *v16;
        v52 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v19 = sub_1AD63BC84();
        v20 = v19;
        v49 = v21;
        v22 = *(_QWORD *)(v18 + 16);
        if (v22)
        {
          v45 = v17;
          v46 = v19;
          v47 = v15;
          v48 = v14;
          v50 = v13;
          sub_1AD1474DC(0, v22, 0);
          v23 = v18;
          v24 = v50;
          v44 = v23;
          v25 = (uint64_t *)(v23 + 40);
          do
          {
            v26 = *v25;
            v51 = *(v25 - 1);
            v52 = v26;
            v27 = sub_1AD63BC84();
            v29 = v28;
            v50 = v24;
            v31 = *(_QWORD *)(v24 + 16);
            v30 = *(_QWORD *)(v24 + 24);
            if (v31 >= v30 >> 1)
            {
              sub_1AD1474DC(v30 > 1, v31 + 1, 1);
              v24 = v50;
            }
            v25 += 2;
            *(_QWORD *)(v24 + 16) = v31 + 1;
            v32 = v24 + 16 * v31;
            *(_QWORD *)(v32 + 32) = v27;
            *(_QWORD *)(v32 + 40) = v29;
            --v22;
          }
          while (v22);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v13 = MEMORY[0x1E0DEE9D8];
          v12 = v42;
          v15 = v47;
          v14 = v48;
          v20 = v46;
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v24 = v13;
        }
        v53 = v14;
        v34 = v14[2];
        v33 = v14[3];
        if (v34 >= v33 >> 1)
        {
          sub_1AD1474F8(v33 > 1, v34 + 1, 1);
          v14 = v53;
        }
        ++v15;
        v14[2] = v34 + 1;
        v35 = &v14[3 * v34];
        v36 = v49;
        v35[4] = v20;
        v35[5] = v36;
        v35[6] = v24;
      }
      while (v15 != v12);
      v8 = v40;
      v7 = v41;
      v10 = v39;
    }
    else
    {
      v14 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    }
    v11 = sub_1AD0D0208((uint64_t)v10, v14);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v11;
}

uint64_t sub_1AD37D4A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *);
  char v10;
  BOOL v12;
  _QWORD v14[2];

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v7 = v3 - 1;
    v8 = a3 + 40;
    do
    {
      v9 = *(uint64_t (**)(_QWORD *))(v8 - 8);
      v14[0] = a1;
      v14[1] = a2;
      swift_retain();
      v10 = v9(v14);
      swift_release();
      v12 = v7-- != 0;
      if ((v10 & 1) == 0)
        break;
      v8 += 16;
    }
    while (v12);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = 1;
  }
  return v10 & 1;
}

uint64_t sub_1AD37D554(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD *);
  char v10;
  BOOL v12;
  _QWORD v14[2];

  if (a2 >> 60 == 15 || (v4 = *(_QWORD *)(a3 + 16)) == 0)
  {
    v10 = 1;
  }
  else
  {
    sub_1AD00408C(a1, a2);
    swift_bridgeObjectRetain();
    v7 = v4 - 1;
    v8 = a3 + 40;
    do
    {
      v9 = *(uint64_t (**)(_QWORD *))(v8 - 8);
      v14[0] = a1;
      v14[1] = a2;
      swift_retain();
      v10 = v9(v14);
      swift_release();
      v12 = v7-- != 0;
      if ((v10 & 1) == 0)
        break;
      v8 += 16;
    }
    while (v12);
    swift_bridgeObjectRelease();
    sub_1AD004118(a1, a2);
  }
  return v10 & 1;
}

uint64_t sub_1AD37D61C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  BOOL v10;
  uint64_t v12;

  if (a1 && (v3 = *(_QWORD *)(a2 + 16)) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = v3 - 1;
    v6 = a2 + 40;
    do
    {
      v7 = *(uint64_t (**)(uint64_t *))(v6 - 8);
      v12 = a1;
      swift_retain();
      v8 = v7(&v12);
      swift_release();
      v10 = v5-- != 0;
      if ((v8 & 1) == 0)
        break;
      v6 += 16;
    }
    while (v10);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 1;
  }
  return v8 & 1;
}

uint64_t sub_1AD37D6D8(uint64_t a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  BOOL v9;
  _QWORD v11[2];

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    v4 = v2 - 1;
    v5 = (uint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      v6 = *v5;
      v11[0] = *(v5 - 1);
      v11[1] = v6;
      swift_bridgeObjectRetain();
      v7 = a2(v11);
      swift_bridgeObjectRelease();
      v9 = v4-- != 0;
      if ((v7 & 1) == 0)
        break;
      v5 += 2;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 1;
  }
  return v7 & 1;
}

uint64_t sub_1AD37D784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD *);
  _QWORD v12[2];

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v7 = v3 - 1;
    v8 = a3 + 40;
    do
    {
      v9 = v7;
      v10 = *(uint64_t (**)(_QWORD *))(v8 - 8);
      v12[0] = a1;
      v12[1] = a2;
      swift_retain();
      LOBYTE(v3) = v10(v12);
      swift_release();
      if ((v3 & 1) != 0)
        break;
      v7 = v9 - 1;
      v8 += 16;
    }
    while (v9);
    swift_bridgeObjectRelease();
  }
  return v3 & 1;
}

uint64_t sub_1AD37D82C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(uint64_t *);
  char v8;
  BOOL v10;
  uint64_t v12;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v5 = v2 - 1;
    v6 = a2 + 40;
    do
    {
      v7 = *(uint64_t (**)(uint64_t *))(v6 - 8);
      v12 = a1;
      swift_retain();
      v8 = v7(&v12);
      swift_release();
      v10 = v5-- != 0;
      if ((v8 & 1) == 0)
        break;
      v6 += 16;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 1;
  }
  return v8 & 1;
}

uint64_t sub_1AD37D8D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *);
  char v12;
  BOOL v14;
  _QWORD v16[3];

  v4 = *(_QWORD *)(a4 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    v9 = v4 - 1;
    v10 = a4 + 40;
    do
    {
      v11 = *(uint64_t (**)(_QWORD *))(v10 - 8);
      v16[0] = a1;
      v16[1] = a2;
      v16[2] = a3;
      swift_retain();
      v12 = v11(v16);
      swift_release();
      v14 = v9-- != 0;
      if ((v12 & 1) == 0)
        break;
      v10 += 16;
    }
    while (v14);
    swift_bridgeObjectRelease();
  }
  else
  {
    v12 = 1;
  }
  return v12 & 1;
}

uint64_t sub_1AD37D990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD *);
  char v12;
  BOOL v14;
  _QWORD v16[3];

  if (a1 && (v5 = *(_QWORD *)(a4 + 16)) != 0)
  {
    sub_1AD00C45C(a1);
    swift_bridgeObjectRetain();
    v9 = v5 - 1;
    v10 = a4 + 40;
    do
    {
      v11 = *(uint64_t (**)(_QWORD *))(v10 - 8);
      v16[0] = a1;
      v16[1] = a2;
      v16[2] = a3;
      swift_retain();
      v12 = v11(v16);
      swift_release();
      v14 = v9-- != 0;
      if ((v12 & 1) == 0)
        break;
      v10 += 16;
    }
    while (v14);
    swift_bridgeObjectRelease();
    sub_1AD0096E4(a1);
  }
  else
  {
    v12 = 1;
  }
  return v12 & 1;
}

unint64_t sub_1AD37DA64(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t result;
  char v11;

  if ((a4 & 1) == 0 && sub_1AD63B804() > a3)
    return 0;
  swift_bridgeObjectRetain();
  v5 = sub_1AD63B828();
  if (!v6)
  {
LABEL_20:
    v4 = 1;
LABEL_23:
    swift_bridgeObjectRelease();
    return v4;
  }
  v7 = v5;
  v8 = v6;
  while (1)
  {
    if ((v7 != 2573 || v8 != 0xE200000000000000) && (sub_1AD63C2A8() & 1) == 0)
    {
      if ((sub_1AD63B6F0() & 1) == 0)
        goto LABEL_21;
      result = sub_1AD37EA48(v7, v8);
      if ((result & 0x100000000) != 0)
        goto LABEL_26;
      if ((result & 0xFFFFFF80) != 0)
      {
LABEL_21:
        swift_bridgeObjectRelease();
LABEL_22:
        v4 = 0;
        goto LABEL_23;
      }
      result = sub_1AD37EA48(v7, v8);
      if ((result & 0x100000000) != 0)
        goto LABEL_27;
      if ((result & 0xFFFFFF00) != 0)
        break;
    }
    if ((sub_1AD63B6FC() & 1) != 0 || (sub_1AD63B708() & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_1AD63B6CC();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        goto LABEL_22;
    }
    v7 = sub_1AD63B828();
    v8 = v9;
    if (!v9)
      goto LABEL_20;
  }
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

unint64_t sub_1AD37DBE8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _BOOL8 v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t result;
  int v10;

  if ((a4 & 1) != 0 || sub_1AD63B804() <= a3)
  {
    swift_bridgeObjectRetain();
    while (1)
    {
      v5 = sub_1AD63B828();
      v4 = v6 == 0;
      if (!v6)
        goto LABEL_23;
      v7 = v5;
      v8 = v6;
      if (v5 == 2573 && v6 == 0xE200000000000000)
      {
LABEL_22:
        swift_bridgeObjectRelease();
LABEL_23:
        swift_bridgeObjectRelease();
        return v4;
      }
      if ((sub_1AD63C2A8() & 1) == 0)
      {
        if ((sub_1AD63B6F0() & 1) == 0)
          goto LABEL_22;
        result = sub_1AD37EA48(v7, v8);
        if ((result & 0x100000000) != 0)
          goto LABEL_29;
        if ((result & 0xFFFFFF80) != 0)
          goto LABEL_22;
        result = sub_1AD37EA48(v7, v8);
        if ((result & 0x100000000) != 0)
          goto LABEL_30;
        if ((result & 0xFFFFFF00) != 0)
          break;
      }
      if ((sub_1AD63C2A8() & 1) != 0)
        goto LABEL_22;
      result = sub_1AD63B6F0();
      if ((result & 1) == 0)
        goto LABEL_26;
      result = sub_1AD37EA48(v7, v8);
      if ((result & 0x100000000) != 0)
        goto LABEL_31;
      if ((result & 0xFFFFFF80) != 0)
        goto LABEL_27;
      result = sub_1AD37EA48(v7, v8);
      if ((result & 0x100000000) != 0)
        goto LABEL_32;
      v10 = result;
      result = swift_bridgeObjectRelease();
      if ((v10 & 0xFFFFFF00) != 0)
        goto LABEL_28;
      if (v10 - 127 < 0xFFFFFFA1)
        goto LABEL_23;
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
  }
  else
  {
    return 0;
  }
  return result;
}

unint64_t sub_1AD37DD98(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t result;
  char v11;

  if ((a4 & 1) == 0 && sub_1AD63B804() > a3)
    return 0;
  swift_bridgeObjectRetain();
  v5 = sub_1AD63B828();
  if (!v6)
  {
LABEL_19:
    v4 = 1;
LABEL_22:
    swift_bridgeObjectRelease();
    return v4;
  }
  v7 = v5;
  v8 = v6;
  while (1)
  {
    if ((v7 != 2573 || v8 != 0xE200000000000000) && (sub_1AD63C2A8() & 1) == 0)
    {
      if ((sub_1AD63B6F0() & 1) == 0)
        goto LABEL_20;
      result = sub_1AD37EA48(v7, v8);
      if ((result & 0x100000000) != 0)
        goto LABEL_25;
      if ((result & 0xFFFFFF80) != 0)
      {
LABEL_20:
        swift_bridgeObjectRelease();
LABEL_21:
        v4 = 0;
        goto LABEL_22;
      }
      result = sub_1AD37EA48(v7, v8);
      if ((result & 0x100000000) != 0)
        goto LABEL_26;
      if ((result & 0xFFFFFF00) != 0)
        break;
    }
    if ((sub_1AD63B6FC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v11 = sub_1AD63B708();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
        goto LABEL_21;
    }
    v7 = sub_1AD63B828();
    v8 = v9;
    if (!v9)
      goto LABEL_19;
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1AD37DF0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v5)(uint64_t);
  uint64_t result;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);

  v2 = *(_QWORD *)(a2 + 16);
  if (!v2)
  {
    v7 = 1;
    return v7 & 1;
  }
  v5 = *(uint64_t (**)(uint64_t))(a2 + 32);
  swift_bridgeObjectRetain();
  swift_retain();
  LOBYTE(v5) = v5(a1);
  result = swift_release();
  if ((v5 & 1) == 0)
  {
    v7 = 0;
    goto LABEL_7;
  }
  if (v2 == 1)
  {
    v7 = 1;
LABEL_7:
    swift_bridgeObjectRelease();
    return v7 & 1;
  }
  v8 = a2 + 56;
  v9 = 1;
  while (1)
  {
    v10 = v9 + 1;
    if (__OFADD__(v9, 1))
      break;
    v11 = *(uint64_t (**)(uint64_t))(v8 - 8);
    swift_retain();
    v7 = v11(a1);
    result = swift_release();
    if ((v7 & 1) != 0)
    {
      ++v9;
      v8 += 16;
      if (v10 != v2)
        continue;
    }
    goto LABEL_7;
  }
  __break(1u);
  return result;
}

uint64_t sub_1AD37DFF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  uint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(char *);
  BOOL v25;
  uint64_t v27;

  v4 = sub_1AD63AF28();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v27 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v27 - v15;
  sub_1ACFF64C0(a1, (uint64_t)v14, &qword_1ED2E1A40);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48);
  v18 = 1;
  if (v17(v14, 1, v4) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v16, v14, v4);
    v18 = 0;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v16, v18, 1, v4);
  sub_1ACFF64C0((uint64_t)v16, (uint64_t)v11, &qword_1ED2E1A40);
  if (v17(v11, 1, v4) == 1)
  {
    sub_1AD009758((uint64_t)v16, &qword_1ED2E1A40);
    v19 = 1;
    v16 = v11;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
    v20 = *(_QWORD *)(a2 + 16);
    if (v20)
    {
      swift_bridgeObjectRetain();
      v21 = v20 - 1;
      v22 = a2 + 40;
      do
      {
        v23 = *(uint64_t (**)(char *))(v22 - 8);
        swift_retain();
        v19 = v23(v7);
        swift_release();
        v25 = v21-- != 0;
        if ((v19 & 1) == 0)
          break;
        v22 += 16;
      }
      while (v25);
      swift_bridgeObjectRelease();
    }
    else
    {
      v19 = 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  sub_1AD009758((uint64_t)v16, &qword_1ED2E1A40);
  return v19 & 1;
}

uint64_t sub_1AD37E224()
{
  unint64_t v0;

  sub_1AD63AF7C();
  if (v0 >> 60 != 15)
    __asm { BR              X10 }
  return 0;
}

BOOL sub_1AD37E2F8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _BOOL8 v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD **v13;
  _QWORD **v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v2 = a2[2];
  if (v2)
  {
    v4 = a2[4];
    v5 = a2[5];
    v6 = (_QWORD *)a2[6];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    LOBYTE(v4) = sub_1AD0D0304(v4, v5, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v4 & 1) == 0)
    {
      v7 = v2 - 1;
      if (v2 == 1)
      {
        v8 = 0;
LABEL_8:
        swift_bridgeObjectRelease();
        return v8;
      }
      v9 = a2[7];
      v10 = a2[8];
      v11 = (_QWORD *)a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      LOBYTE(v9) = sub_1AD0D0304(v9, v10, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v9 & 1) == 0)
      {
        v13 = (_QWORD **)(a2 + 12);
        do
        {
          v8 = --v7 != 0;
          if (!v7)
            break;
          v14 = v13 + 3;
          v16 = (uint64_t)*(v13 - 1);
          v15 = *v13;
          v17 = (uint64_t)*(v13 - 2);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          LOBYTE(v17) = sub_1AD0D0304(v17, v16, v15);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v13 = v14;
        }
        while ((v17 & 1) == 0);
        goto LABEL_8;
      }
    }
    v8 = 1;
    goto LABEL_8;
  }
  return 0;
}

uint64_t sub_1AD37E444(uint64_t a1, uint64_t (*a2)(uint64_t *))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v10;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v5 = 0;
    v6 = v2 - 1;
    do
    {
      v10 = *(_QWORD *)(a1 + 8 * v5 + 32);
      v7 = a2(&v10);
      if ((v7 & 1) == 0)
        break;
    }
    while (v6 != v5++);
    swift_bridgeObjectRelease();
  }
  else
  {
    v7 = 1;
  }
  return v7 & 1;
}

uint64_t sub_1AD37E4D4(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t (*v10)(uint64_t *);
  char v11;
  BOOL v13;
  uint64_t v15;
  char v16;

  v3 = *(_QWORD *)(a3 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v7 = v3 - 1;
    v8 = a3 + 40;
    v9 = a2 & 1;
    do
    {
      v10 = *(uint64_t (**)(uint64_t *))(v8 - 8);
      v15 = a1;
      v16 = v9;
      swift_retain();
      v11 = v10(&v15);
      swift_release();
      v13 = v7-- != 0;
      if ((v11 & 1) == 0)
        break;
      v8 += 16;
    }
    while (v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    v11 = 1;
  }
  return v11 & 1;
}

uint64_t sub_1AD37E588(uint64_t a1, char a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t *);
  char v9;
  BOOL v11;
  uint64_t v13;

  if ((a2 & 1) != 0 || (v4 = *(_QWORD *)(a3 + 16)) == 0)
  {
    v9 = 1;
  }
  else
  {
    swift_bridgeObjectRetain();
    v6 = v4 - 1;
    v7 = a3 + 40;
    do
    {
      v8 = *(uint64_t (**)(uint64_t *))(v7 - 8);
      v13 = a1;
      swift_retain();
      v9 = v8(&v13);
      swift_release();
      v11 = v6-- != 0;
      if ((v9 & 1) == 0)
        break;
      v7 += 16;
    }
    while (v11);
    swift_bridgeObjectRelease();
  }
  return v9 & 1;
}

uint64_t sub_1AD37E634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(int *);
  char v8;
  BOOL v10;
  int v12;
  char v13;

  v2 = *(_QWORD *)(a2 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v5 = v2 - 1;
    v6 = a2 + 40;
    do
    {
      v7 = *(uint64_t (**)(int *))(v6 - 8);
      v12 = a1;
      v13 = BYTE4(a1) & 1;
      swift_retain();
      v8 = v7(&v12);
      swift_release();
      v10 = v5-- != 0;
      if ((v8 & 1) == 0)
        break;
      v6 += 16;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 1;
  }
  return v8 & 1;
}

uint64_t sub_1AD37E6E4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(int *);
  char v8;
  BOOL v10;
  int v12;

  if ((a1 & 0x100000000) != 0 || (v3 = *(_QWORD *)(a2 + 16)) == 0)
  {
    v8 = 1;
  }
  else
  {
    v4 = a1;
    swift_bridgeObjectRetain();
    v5 = v3 - 1;
    v6 = a2 + 40;
    do
    {
      v7 = *(uint64_t (**)(int *))(v6 - 8);
      v12 = v4;
      swift_retain();
      v8 = v7(&v12);
      swift_release();
      v10 = v5-- != 0;
      if ((v8 & 1) == 0)
        break;
      v6 += 16;
    }
    while (v10);
    swift_bridgeObjectRelease();
  }
  return v8 & 1;
}

uint64_t sub_1AD37E790(uint64_t a1, unint64_t a2)
{
  return ((uint64_t (*)(void))((char *)&loc_1AD37E79C + *((int *)qword_1AD37E7F8 + (a2 >> 62))))();
}

BOOL sub_1AD37E7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return BYTE6(a2) <= a3;
}

uint64_t sub_1AD37E808(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  if ((a4 & 1) == 0 && sub_1AD63B804() > a3)
    return 0;
  swift_bridgeObjectRetain();
  sub_1AD63B828();
  if (v5)
  {
    do
    {
      if ((sub_1AD63B6FC() & 1) != 0
        || (sub_1AD63B708() & 1) != 0
        || (sub_1AD63B6CC() & 1) != 0
        || (sub_1AD63B714() & 1) != 0)
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v7 = sub_1AD63B6E4();
        swift_bridgeObjectRelease();
        if ((v7 & 1) == 0)
        {
          v4 = 0;
          goto LABEL_15;
        }
      }
      sub_1AD63B828();
    }
    while (v6);
  }
  v4 = 1;
LABEL_15:
  swift_bridgeObjectRelease();
  return v4;
}

BOOL sub_1AD37E924(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  _BOOL8 v4;
  uint64_t v5;
  char v6;
  char v7;

  if ((a4 & 1) == 0 && sub_1AD63B804() > a3)
    return 0;
  swift_bridgeObjectRetain();
  do
  {
    sub_1AD63B828();
    v4 = v5 == 0;
    if (!v5)
      break;
    sub_1AD63B6D8();
    v7 = v6;
    swift_bridgeObjectRelease();
  }
  while ((v7 & 1) == 0);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1AD37E9D0(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_1AD63B870();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x1AF44A53C](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

unint64_t sub_1AD37EA48(unint64_t a1, unint64_t a2)
{
  uint64_t v2;
  unsigned int v5;

  if ((a2 & 0x2000000000000000) != 0)
    v2 = HIBYTE(a2) & 0xF;
  else
    v2 = a1 & 0xFFFFFFFFFFFFLL;
  if (v2)
  {
    sub_1AD37EB24(0xFuLL, a1, a2);
    if ((a2 & 0x1000000000000000) != 0)
    {
      v5 = sub_1AD63BD2C();
    }
    else
    {
      if ((a2 & 0x2000000000000000) == 0 && (a1 & 0x1000000000000000) == 0)
        sub_1AD63BDB0();
      v5 = sub_1AD63BDBC();
    }
  }
  else
  {
    v5 = 0;
  }
  return v5 | ((unint64_t)(v2 == 0) << 32);
}

unint64_t sub_1AD37EB24(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 1) == 0 || (result & 0xC) == 4 << v5)
    goto LABEL_9;
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
  {
    __break(1u);
LABEL_9:
    result = sub_1AD37EBC0(result, a2, a3);
    if ((result & 1) == 0)
      return result & 0xC | sub_1AD37EC2C(result, a2, a3) & 0xFFFFFFFFFFFFFFF3 | 1;
  }
  return result;
}

unint64_t sub_1AD37EBC0(unint64_t result, unint64_t a2, unint64_t a3)
{
  uint64_t v5;
  unint64_t v6;

  v5 = (a2 >> 59) & 1;
  if ((a3 & 0x1000000000000000) == 0)
    LOBYTE(v5) = 1;
  if ((result & 0xC) == 4 << v5)
    result = sub_1AD37E9D0(result, a2, a3);
  v6 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0)
    v6 = a2 & 0xFFFFFFFFFFFFLL;
  if (v6 <= result >> 16)
    __break(1u);
  return result;
}

unint64_t sub_1AD37EC2C(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unint64_t v12;
  _QWORD v13[4];

  if ((result & 0xC000) != 0 || result < 0x10000)
  {
    result &= 0xFFFFFFFFFFFF0000;
  }
  else
  {
    v5 = result >> 16;
    if ((a3 & 0x1000000000000000) == 0)
    {
      v13[2] = v3;
      v13[3] = v4;
      if ((a3 & 0x2000000000000000) != 0)
      {
        v13[0] = a2;
        v13[1] = a3 & 0xFFFFFFFFFFFFFFLL;
        if (v5 != (HIBYTE(a3) & 0xF) && (*((_BYTE *)v13 + v5) & 0xC0) == 0x80)
        {
          do
          {
            v7 = v5 - 1;
            v11 = *((_BYTE *)&v12 + v5-- + 7) & 0xC0;
          }
          while (v11 == 128);
          return v7 << 16;
        }
        goto LABEL_14;
      }
      if ((a2 & 0x1000000000000000) != 0)
      {
        v6 = (a3 & 0xFFFFFFFFFFFFFFFLL) + 32;
        if (v5 == (a2 & 0xFFFFFFFFFFFFLL))
          goto LABEL_14;
      }
      else
      {
        v12 = result >> 16;
        v6 = sub_1AD63BDB0();
        v5 = v12;
        if (v12 == v10)
          goto LABEL_14;
      }
      if ((*(_BYTE *)(v6 + v5) & 0xC0) == 0x80)
      {
        do
        {
          v7 = v5 - 1;
          v8 = *(_BYTE *)(v6 - 1 + v5--) & 0xC0;
        }
        while (v8 == 128);
        return v7 << 16;
      }
LABEL_14:
      v7 = v5;
      return v7 << 16;
    }
    v9 = HIBYTE(a3) & 0xF;
    if ((a3 & 0x2000000000000000) == 0)
      v9 = a2 & 0xFFFFFFFFFFFFLL;
    if (v5 != v9)
      return sub_1AD63BD20();
  }
  return result;
}

uint64_t sub_1AD37ED3C(_QWORD *a1, uint64_t (**a2)(_QWORD *))
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v2 = a1[1];
  v3 = *a2;
  v5[0] = *a1;
  v5[1] = v2;
  return v3(v5) & 1;
}

uint64_t sub_1AD37ED74(uint64_t *a1, uint64_t *a2)
{
  return sub_1AD37D784(*a1, a1[1], *a2);
}

uint64_t sub_1AD37ED88()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD37EDAC(_QWORD *a1)
{
  uint64_t v1;

  return sub_1AD280D5C(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_1AD37EDB8()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD37EDDC(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AD37D784(*a1, a1[1], *(_QWORD *)(v1 + 16));
}

uint64_t sub_1AD37EDEC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD *);
  _QWORD v5[2];

  v2 = a1[1];
  v3 = *(uint64_t (**)(_QWORD *))(v1 + 16);
  v5[0] = *a1;
  v5[1] = v2;
  return v3(v5) & 1;
}

uint64_t sub_1AD37EE24(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t result;
  char v15;

  v3 = a1[3];
  if (v3 == 1 || (v4 = a2[3], v4 == 1))
  {
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
  v5 = a1[4];
  v6 = a1[5];
  v7 = a1[6];
  v8 = a1[7];
  v10 = a2[4];
  v9 = a2[5];
  v11 = a2[6];
  v12 = a2[7];
  if (v3)
  {
    if (!v4)
      return 0;
    if (a1[2] != a2[2] || v3 != v4)
    {
      v13 = sub_1AD63C2A8();
      result = 0;
      if ((v13 & 1) == 0)
        return result;
    }
  }
  else if (v4)
  {
    return 0;
  }
  if (v6)
  {
    if (v9)
    {
      if (v5 != v10 || v6 != v9)
      {
        v15 = sub_1AD63C2A8();
        result = 0;
        if ((v15 & 1) == 0)
          return result;
      }
      goto LABEL_19;
    }
    return 0;
  }
  if (v9)
    return 0;
LABEL_19:
  result = (v8 | v12) == 0;
  if (v8 && v12)
  {
    if (v7 == v11 && v8 == v12)
      return 1;
    else
      return sub_1AD63C2A8();
  }
  return result;
}

uint64_t sub_1AD37EFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE *v85;
  uint64_t v86;
  uint64_t v87;
  _BYTE *v88;
  uint64_t v89;
  uint64_t v90;
  _BYTE *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _BYTE *v102;
  uint64_t v103;
  uint64_t v104;
  char v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _BYTE *v113;
  _BYTE *v114;
  uint64_t v115;
  _BYTE *v116;
  _BYTE *v117;
  _BYTE *v118;
  _BYTE *v119;
  _BYTE *v120;
  _BYTE *v121;
  _BYTE *v122;
  uint64_t v123;
  _BYTE *v124;
  _BYTE *v125;
  uint64_t v126;
  _BYTE *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  _BYTE *v133;
  _BYTE *v134;
  uint64_t v135;
  _BYTE *v136;
  uint64_t v137;
  uint64_t v138;
  _BYTE *v139;
  _BYTE *v140;
  uint64_t v141;
  _BYTE *v142;
  uint64_t v143;
  uint64_t v144;
  _BYTE *v145;
  uint64_t v146;
  _BYTE *v147;
  uint64_t v148;
  _BYTE *v149;
  _BYTE *v150;
  char v151;
  uint64_t result;
  char v153;
  _QWORD *v154;
  _QWORD *v155;
  char v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  _BYTE *v160;
  uint64_t v161;
  uint64_t v162;
  char v163;
  int v164;
  uint64_t v165;
  int v166;
  char v167;
  int v168;
  uint64_t v169;
  int v170;
  char v171;
  int v172;
  uint64_t v173;
  int v174;
  BOOL v175;
  uint64_t v176;
  uint64_t v177;
  _BYTE *v178;
  uint64_t v179;
  uint64_t (*v180)(uint64_t, uint64_t, uint64_t);
  uint64_t v181;
  int v182;
  _BYTE *v183;
  _BYTE *v184;
  _BYTE *v185;
  _BYTE *v186;
  uint64_t v187;
  uint64_t v188;
  _BYTE *v189;
  uint64_t v190;
  _BYTE *v191;
  uint64_t v192;
  int v193;
  int v194;
  uint64_t v195;
  _BYTE *v196;
  uint64_t v197;
  _BYTE *v198;
  void (*v199)(_BYTE *, uint64_t);
  uint64_t v200;
  uint64_t v201;
  _BYTE *v202;
  uint64_t v203;
  uint64_t v204;
  unsigned int (*v205)(uint64_t, uint64_t, uint64_t);
  _BYTE *v206;
  _BYTE *v207;
  void (*v208)(_BYTE *, uint64_t);
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  _BYTE *v212;
  uint64_t v213;
  uint64_t v214;
  _BYTE *v215;
  uint64_t v216;
  _BYTE *v217;
  char v218;
  void (*v219)(_BYTE *, uint64_t);
  uint64_t v220;
  _BYTE *v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  char v229;
  uint64_t v230;
  _BYTE *v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  unsigned int (*v246)(uint64_t, uint64_t, uint64_t);
  _BYTE *v247;
  uint64_t v248;
  char v249;
  int *v250;
  uint64_t v251;
  int v252;
  int v253;
  char v254;
  int *v255;
  int v256;
  int v257;
  uint64_t v258;
  _QWORD *v259;
  _QWORD *v260;
  _BYTE v261[4];
  int v262;
  uint64_t v263;
  _BYTE *v264;
  _BYTE *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  _BYTE *v269;
  _BYTE *v270;
  _BYTE *v271;
  _BYTE *v272;
  _BYTE *v273;
  _BYTE *v274;
  _BYTE *v275;
  _BYTE *v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  _BYTE *v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  int *v284;
  _BYTE *v285;
  _BYTE *v286;
  uint64_t v287;
  _BYTE *v288;
  uint64_t v289;
  _BYTE *v290;
  _BYTE *v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  _BYTE *v295;
  _BYTE *v296;
  _BYTE *v297;
  _BYTE *v298;
  _BYTE *v299;
  _BYTE *v300;
  _BYTE *v301;
  _BYTE *v302;
  _BYTE *v303;
  _BYTE *v304;
  _BYTE *v305;
  _BYTE *v306;
  uint64_t v307;
  _BYTE *v308;
  _BYTE *v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  _BYTE *v313;
  _BYTE *v314;
  _BYTE *v315;
  _BYTE *v316;
  uint64_t v317;
  uint64_t v318;

  v4 = type metadata accessor for CloudKitShareParticipant(0);
  v268 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v261[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
  MEMORY[0x1E0C80A78](v7);
  v9 = &v261[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v267 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB350);
  MEMORY[0x1E0C80A78](v267);
  v11 = &v261[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v278 = sub_1AD63B03C();
  v279 = *(_QWORD *)(v278 - 8);
  MEMORY[0x1E0C80A78](v278);
  v272 = &v261[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v14 = MEMORY[0x1E0C80A78](v13);
  v269 = &v261[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v16 = MEMORY[0x1E0C80A78](v14);
  v270 = &v261[-v17];
  MEMORY[0x1E0C80A78](v16);
  v275 = &v261[-v18];
  v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB358);
  v19 = MEMORY[0x1E0C80A78](v277);
  v271 = &v261[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = MEMORY[0x1E0C80A78](v19);
  v273 = &v261[-v22];
  MEMORY[0x1E0C80A78](v21);
  v280 = &v261[-v23];
  v283 = type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  v282 = *(_QWORD *)(v283 - 8);
  MEMORY[0x1E0C80A78](v283);
  v274 = &v261[-((v24 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD2400);
  MEMORY[0x1E0C80A78](v25);
  v276 = &v261[-((v26 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v281 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB360);
  MEMORY[0x1E0C80A78](v281);
  v285 = &v261[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v284 = (int *)type metadata accessor for IDSHealthInvitation(0);
  v28 = MEMORY[0x1E0C80A78](v284);
  v297 = &v261[-((v29 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v30 = MEMORY[0x1E0C80A78](v28);
  v296 = &v261[-v31];
  v32 = MEMORY[0x1E0C80A78](v30);
  v300 = &v261[-v33];
  v34 = MEMORY[0x1E0C80A78](v32);
  v295 = &v261[-v35];
  v36 = MEMORY[0x1E0C80A78](v34);
  v304 = &v261[-v37];
  v38 = MEMORY[0x1E0C80A78](v36);
  v298 = &v261[-v39];
  v40 = MEMORY[0x1E0C80A78](v38);
  v299 = &v261[-v41];
  v42 = MEMORY[0x1E0C80A78](v40);
  v43 = MEMORY[0x1E0C80A78](v42);
  v44 = MEMORY[0x1E0C80A78](v43);
  MEMORY[0x1E0C80A78](v44);
  v46 = MEMORY[0x1E0C80A78](&v261[-v45]);
  v301 = &v261[-v47];
  v48 = MEMORY[0x1E0C80A78](v46);
  v49 = MEMORY[0x1E0C80A78](v48);
  v305 = &v261[-v50];
  v51 = MEMORY[0x1E0C80A78](v49);
  v303 = &v261[-v52];
  v53 = MEMORY[0x1E0C80A78](v51);
  v302 = &v261[-v54];
  v55 = MEMORY[0x1E0C80A78](v53);
  v56 = MEMORY[0x1E0C80A78](v55);
  v308 = &v261[-v57];
  v58 = MEMORY[0x1E0C80A78](v56);
  v59 = MEMORY[0x1E0C80A78](v58);
  v306 = &v261[-v60];
  v61 = MEMORY[0x1E0C80A78](v59);
  v62 = MEMORY[0x1E0C80A78](v61);
  v309 = &v261[-v63];
  v64 = MEMORY[0x1E0C80A78](v62);
  v286 = &v261[-v65];
  v66 = MEMORY[0x1E0C80A78](v64);
  v291 = &v261[-v67];
  v68 = MEMORY[0x1E0C80A78](v66);
  v290 = &v261[-v69];
  v70 = MEMORY[0x1E0C80A78](v68);
  v71 = MEMORY[0x1E0C80A78](v70);
  v315 = &v261[-v72];
  v73 = MEMORY[0x1E0C80A78](v71);
  v288 = &v261[-v74];
  v75 = MEMORY[0x1E0C80A78](v73);
  v313 = &v261[-v76];
  v77 = MEMORY[0x1E0C80A78](v75);
  v314 = &v261[-v78];
  v79 = MEMORY[0x1E0C80A78](v77);
  v316 = &v261[-v80];
  v81 = MEMORY[0x1E0C80A78](v79);
  v317 = (uint64_t)&v261[-v82];
  v83 = MEMORY[0x1E0C80A78](v81);
  v85 = &v261[-v84];
  v86 = MEMORY[0x1E0C80A78](v83);
  v88 = &v261[-v87];
  v89 = MEMORY[0x1E0C80A78](v86);
  v91 = &v261[-v90];
  v92 = MEMORY[0x1E0C80A78](v89);
  v102 = &v261[-v98];
  v318 = a1;
  v103 = *(_QWORD *)(a1 + 24);
  if (v103 == 1)
    goto LABEL_174;
  v104 = *(_QWORD *)(a2 + 24);
  if (v104 == 1)
    goto LABEL_174;
  v311 = v99;
  v312 = v100;
  v294 = v101;
  v293 = v92;
  v292 = v93;
  v307 = v94;
  v287 = v95;
  v310 = v96;
  v289 = v97;
  if (!v103)
  {
    if (!v104)
      goto LABEL_12;
LABEL_10:
    sub_1AD0D3D2C(v318, (uint64_t)&v261[-v98], type metadata accessor for IDSHealthInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v91, type metadata accessor for IDSHealthInvitation);
    goto LABEL_11;
  }
  if (!v104)
    goto LABEL_10;
  if (*(_QWORD *)(v318 + 16) != *(_QWORD *)(a2 + 16) || v103 != v104)
  {
    v105 = sub_1AD63C2A8();
    sub_1AD0D3D2C(v318, (uint64_t)v102, type metadata accessor for IDSHealthInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v91, type metadata accessor for IDSHealthInvitation);
    if ((v105 & 1) != 0)
      goto LABEL_13;
LABEL_11:
    sub_1AD066230((uint64_t)v91, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v102, type metadata accessor for IDSHealthInvitation);
LABEL_25:
    v112 = v318;
    v113 = v291;
    sub_1AD0D3D2C(v318, (uint64_t)v88, type metadata accessor for IDSHealthInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v85, type metadata accessor for IDSHealthInvitation);
    v114 = v315;
    goto LABEL_26;
  }
LABEL_12:
  sub_1AD0D3D2C(v318, (uint64_t)&v261[-v98], type metadata accessor for IDSHealthInvitation);
  sub_1AD0D3D2C(a2, (uint64_t)v91, type metadata accessor for IDSHealthInvitation);
LABEL_13:
  v264 = v9;
  v266 = a2;
  v106 = *((_QWORD *)v102 + 7);
  if (v106 == 1)
    goto LABEL_174;
  v265 = v11;
  v107 = *((_QWORD *)v91 + 7);
  if (v107 == 1)
    goto LABEL_174;
  v108 = *((_QWORD *)v102 + 6);
  v109 = *((_QWORD *)v91 + 6);
  if (!v106)
  {
    sub_1AD003E48(*((_QWORD *)v102 + 6), 0);
    sub_1AD003E48(v109, v107);
    sub_1AD066230((uint64_t)v91, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v102, type metadata accessor for IDSHealthInvitation);
    if (!v107)
      goto LABEL_22;
    sub_1AD003F24(v108, 0);
    v110 = v109;
    v111 = v107;
    goto LABEL_24;
  }
  if (!v107)
  {
    sub_1AD003E48(*((_QWORD *)v102 + 6), v106);
    sub_1AD003E48(v109, 0);
    sub_1AD066230((uint64_t)v91, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v102, type metadata accessor for IDSHealthInvitation);
    sub_1AD003F24(v108, v106);
    v110 = v109;
    v111 = 0;
LABEL_24:
    sub_1AD003F24(v110, v111);
    a2 = v266;
    goto LABEL_25;
  }
  if (v108 != v109 || v106 != v107)
  {
    v153 = sub_1AD63C2A8();
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v91, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v102, type metadata accessor for IDSHealthInvitation);
    sub_1AD003F24(v108, v106);
    v112 = v318;
    sub_1AD0D3D2C(v318, (uint64_t)v88, type metadata accessor for IDSHealthInvitation);
    a2 = v266;
    sub_1AD0D3D2C(v266, (uint64_t)v85, type metadata accessor for IDSHealthInvitation);
    v113 = v291;
    v114 = v315;
    if ((v153 & 1) != 0)
      goto LABEL_58;
LABEL_26:
    sub_1AD066230((uint64_t)v85, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v88, type metadata accessor for IDSHealthInvitation);
    v115 = v317;
    sub_1AD0D3D2C(v112, v317, type metadata accessor for IDSHealthInvitation);
    v116 = v316;
    sub_1AD0D3D2C(a2, (uint64_t)v316, type metadata accessor for IDSHealthInvitation);
LABEL_27:
    sub_1AD066230((uint64_t)v116, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v115, type metadata accessor for IDSHealthInvitation);
    v118 = v304;
    v117 = v305;
    v119 = v309;
LABEL_28:
    v120 = v314;
    sub_1AD0D3D2C(v112, (uint64_t)v314, type metadata accessor for IDSHealthInvitation);
    v121 = v313;
    sub_1AD0D3D2C(a2, (uint64_t)v313, type metadata accessor for IDSHealthInvitation);
    goto LABEL_29;
  }
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v91, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230((uint64_t)v102, type metadata accessor for IDSHealthInvitation);
  sub_1AD003F24(v108, v106);
LABEL_22:
  v112 = v318;
  sub_1AD0D3D2C(v318, (uint64_t)v88, type metadata accessor for IDSHealthInvitation);
  a2 = v266;
  sub_1AD0D3D2C(v266, (uint64_t)v85, type metadata accessor for IDSHealthInvitation);
  v113 = v291;
  v114 = v315;
LABEL_58:
  v154 = (_QWORD *)*((_QWORD *)v88 + 10);
  if (!v154)
    goto LABEL_174;
  v155 = (_QWORD *)*((_QWORD *)v85 + 10);
  if (!v155)
    goto LABEL_174;
  v156 = sub_1AD350DB4(v154, v155);
  sub_1AD066230((uint64_t)v85, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230((uint64_t)v88, type metadata accessor for IDSHealthInvitation);
  v115 = v317;
  sub_1AD0D3D2C(v112, v317, type metadata accessor for IDSHealthInvitation);
  v116 = v316;
  sub_1AD0D3D2C(a2, (uint64_t)v316, type metadata accessor for IDSHealthInvitation);
  if ((v156 & 1) == 0)
    goto LABEL_27;
  v263 = v4;
  v157 = *(_QWORD *)(v115 + 96);
  v158 = *((_QWORD *)v116 + 12);
  v159 = v115;
  v119 = v309;
  if (!v157)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v116, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v159, type metadata accessor for IDSHealthInvitation);
    v118 = v304;
    if (!v158)
      goto LABEL_68;
    swift_bridgeObjectRelease();
    v117 = v305;
    goto LABEL_28;
  }
  if (!v158)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v316, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v317, type metadata accessor for IDSHealthInvitation);
    swift_bridgeObjectRelease();
    v118 = v304;
    v117 = v305;
    goto LABEL_28;
  }
  v160 = v316;
  if (*(_QWORD *)(v317 + 88) == *((_QWORD *)v316 + 11) && v157 == v158)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v160, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v317, type metadata accessor for IDSHealthInvitation);
    swift_bridgeObjectRelease();
    v118 = v304;
LABEL_68:
    v291 = v6;
    v120 = v314;
    sub_1AD0D3D2C(v112, (uint64_t)v314, type metadata accessor for IDSHealthInvitation);
    v121 = v313;
    sub_1AD0D3D2C(a2, (uint64_t)v313, type metadata accessor for IDSHealthInvitation);
    v117 = v305;
    goto LABEL_71;
  }
  v291 = v6;
  v262 = sub_1AD63C2A8();
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v160, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230(v317, type metadata accessor for IDSHealthInvitation);
  swift_bridgeObjectRelease();
  v120 = v314;
  sub_1AD0D3D2C(v112, (uint64_t)v314, type metadata accessor for IDSHealthInvitation);
  v121 = v313;
  v114 = v315;
  sub_1AD0D3D2C(a2, (uint64_t)v313, type metadata accessor for IDSHealthInvitation);
  v118 = v304;
  v117 = v305;
  if ((v262 & 1) == 0)
  {
LABEL_29:
    sub_1AD066230((uint64_t)v121, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v120, type metadata accessor for IDSHealthInvitation);
LABEL_30:
    v122 = v288;
    sub_1AD0D3D2C(v112, (uint64_t)v288, type metadata accessor for IDSHealthInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v114, type metadata accessor for IDSHealthInvitation);
    goto LABEL_31;
  }
LABEL_71:
  v161 = *((_QWORD *)v120 + 14);
  v162 = *((_QWORD *)v121 + 14);
  if (!v161)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v121, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v120, type metadata accessor for IDSHealthInvitation);
    if (!v162)
      goto LABEL_77;
    goto LABEL_79;
  }
  if (!v162)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v121, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v120, type metadata accessor for IDSHealthInvitation);
LABEL_79:
    swift_bridgeObjectRelease();
    goto LABEL_30;
  }
  if (*((_QWORD *)v120 + 13) == *((_QWORD *)v121 + 13) && v161 == v162)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v313, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v314, type metadata accessor for IDSHealthInvitation);
    swift_bridgeObjectRelease();
LABEL_77:
    v122 = v288;
    sub_1AD0D3D2C(v112, (uint64_t)v288, type metadata accessor for IDSHealthInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v114, type metadata accessor for IDSHealthInvitation);
    goto LABEL_81;
  }
  v163 = sub_1AD63C2A8();
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v313, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230((uint64_t)v314, type metadata accessor for IDSHealthInvitation);
  swift_bridgeObjectRelease();
  v122 = v288;
  sub_1AD0D3D2C(v112, (uint64_t)v288, type metadata accessor for IDSHealthInvitation);
  v114 = v315;
  sub_1AD0D3D2C(a2, (uint64_t)v315, type metadata accessor for IDSHealthInvitation);
  if ((v163 & 1) == 0)
  {
LABEL_31:
    sub_1AD066230((uint64_t)v114, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v122, type metadata accessor for IDSHealthInvitation);
    v123 = v289;
    goto LABEL_32;
  }
LABEL_81:
  v164 = v122[120];
  sub_1AD066230((uint64_t)v122, type metadata accessor for IDSHealthInvitation);
  v165 = (uint64_t)v114;
  v166 = v114[120];
  sub_1AD066230(v165, type metadata accessor for IDSHealthInvitation);
  if (v164 == 2)
  {
    v123 = v289;
    if (v166 == 2)
    {
      sub_1AD0D3D2C(v112, v289, type metadata accessor for IDSHealthInvitation);
      v124 = v290;
      sub_1AD0D3D2C(a2, (uint64_t)v290, type metadata accessor for IDSHealthInvitation);
      goto LABEL_86;
    }
    goto LABEL_32;
  }
  v123 = v289;
  if (v166 == 2)
  {
LABEL_32:
    sub_1AD0D3D2C(v112, v123, type metadata accessor for IDSHealthInvitation);
    v124 = v290;
    sub_1AD0D3D2C(a2, (uint64_t)v290, type metadata accessor for IDSHealthInvitation);
LABEL_33:
    sub_1AD066230((uint64_t)v124, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v123, type metadata accessor for IDSHealthInvitation);
    goto LABEL_34;
  }
  v167 = v166 ^ v164;
  sub_1AD0D3D2C(v112, v289, type metadata accessor for IDSHealthInvitation);
  v124 = v290;
  sub_1AD0D3D2C(a2, (uint64_t)v290, type metadata accessor for IDSHealthInvitation);
  if ((v167 & 1) != 0)
    goto LABEL_33;
LABEL_86:
  v168 = *(unsigned __int8 *)(v123 + 121);
  sub_1AD066230(v123, type metadata accessor for IDSHealthInvitation);
  v169 = (uint64_t)v124;
  v170 = v124[121];
  sub_1AD066230(v169, type metadata accessor for IDSHealthInvitation);
  if (v168 == 2)
  {
    if (v170 == 2)
    {
      sub_1AD0D3D2C(v112, (uint64_t)v113, type metadata accessor for IDSHealthInvitation);
      v125 = v286;
      sub_1AD0D3D2C(a2, (uint64_t)v286, type metadata accessor for IDSHealthInvitation);
      goto LABEL_91;
    }
    goto LABEL_34;
  }
  if (v170 == 2)
  {
LABEL_34:
    sub_1AD0D3D2C(v112, (uint64_t)v113, type metadata accessor for IDSHealthInvitation);
    v125 = v286;
    sub_1AD0D3D2C(a2, (uint64_t)v286, type metadata accessor for IDSHealthInvitation);
LABEL_35:
    v126 = (uint64_t)v113;
    v127 = v117;
    sub_1AD066230((uint64_t)v125, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v126, type metadata accessor for IDSHealthInvitation);
    goto LABEL_36;
  }
  v171 = v170 ^ v168;
  sub_1AD0D3D2C(v112, (uint64_t)v113, type metadata accessor for IDSHealthInvitation);
  v125 = v286;
  sub_1AD0D3D2C(a2, (uint64_t)v286, type metadata accessor for IDSHealthInvitation);
  if ((v171 & 1) != 0)
    goto LABEL_35;
LABEL_91:
  v172 = v113[122];
  sub_1AD066230((uint64_t)v113, type metadata accessor for IDSHealthInvitation);
  v173 = (uint64_t)v125;
  v174 = v125[122];
  sub_1AD066230(v173, type metadata accessor for IDSHealthInvitation);
  v127 = v117;
  if (v172 == 5)
  {
    if (v174 == 5)
    {
      sub_1AD0D3D2C(v112, (uint64_t)v119, type metadata accessor for IDSHealthInvitation);
      v128 = v310;
      sub_1AD0D3D2C(a2, v310, type metadata accessor for IDSHealthInvitation);
      goto LABEL_97;
    }
    goto LABEL_36;
  }
  if (v174 == 5)
  {
LABEL_36:
    sub_1AD0D3D2C(v112, (uint64_t)v119, type metadata accessor for IDSHealthInvitation);
    v128 = v310;
    sub_1AD0D3D2C(a2, v310, type metadata accessor for IDSHealthInvitation);
    v129 = v311;
    v130 = v312;
LABEL_37:
    v131 = (uint64_t)v119;
    v132 = (uint64_t)v118;
    sub_1AD066230(v128, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v131, type metadata accessor for IDSHealthInvitation);
LABEL_38:
    v133 = v127;
    v134 = v306;
    sub_1AD0D3D2C(v112, (uint64_t)v306, type metadata accessor for IDSHealthInvitation);
    v135 = v287;
    sub_1AD0D3D2C(a2, v287, type metadata accessor for IDSHealthInvitation);
    v136 = v308;
LABEL_39:
    sub_1AD066230(v135, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v134, type metadata accessor for IDSHealthInvitation);
LABEL_40:
    v137 = v132;
    sub_1AD0D3D2C(v112, (uint64_t)v136, type metadata accessor for IDSHealthInvitation);
    v138 = v307;
    sub_1AD0D3D2C(a2, v307, type metadata accessor for IDSHealthInvitation);
    v139 = v303;
LABEL_41:
    sub_1AD066230(v138, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v136, type metadata accessor for IDSHealthInvitation);
LABEL_42:
    v140 = v302;
    sub_1AD0D3D2C(v112, (uint64_t)v302, type metadata accessor for IDSHealthInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v139, type metadata accessor for IDSHealthInvitation);
LABEL_43:
    sub_1AD066230((uint64_t)v139, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v140, type metadata accessor for IDSHealthInvitation);
LABEL_44:
    sub_1AD0D3D2C(v112, (uint64_t)v133, type metadata accessor for IDSHealthInvitation);
    v141 = v292;
    sub_1AD0D3D2C(a2, v292, type metadata accessor for IDSHealthInvitation);
    v143 = (uint64_t)v300;
    v142 = v301;
    goto LABEL_45;
  }
  sub_1AD0D3D2C(v112, (uint64_t)v119, type metadata accessor for IDSHealthInvitation);
  v128 = v310;
  sub_1AD0D3D2C(a2, v310, type metadata accessor for IDSHealthInvitation);
  v175 = v172 == v174;
  v129 = v311;
  v130 = v312;
  if (!v175)
    goto LABEL_37;
LABEL_97:
  v176 = v284[12];
  v177 = v128 + v176;
  v178 = v285;
  v179 = (uint64_t)&v285[*(int *)(v281 + 48)];
  sub_1ACFF64C0((uint64_t)&v119[v176], (uint64_t)v285, &qword_1EECD2400);
  v317 = v179;
  sub_1ACFF64C0(v177, v179, &qword_1EECD2400);
  v180 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v282 + 48);
  v181 = v283;
  if (v180((uint64_t)v178, 1, v283) == 1)
  {
    sub_1AD066230(v128, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v119, type metadata accessor for IDSHealthInvitation);
    v182 = v180(v317, 1, v181);
    v129 = v311;
    v130 = v312;
    if (v182 == 1)
    {
      v132 = (uint64_t)v118;
      sub_1AD009758((uint64_t)v285, &qword_1EECD2400);
      v183 = v306;
      sub_1AD0D3D2C(v112, (uint64_t)v306, type metadata accessor for IDSHealthInvitation);
      v135 = v287;
      sub_1AD0D3D2C(a2, v287, type metadata accessor for IDSHealthInvitation);
      v136 = v308;
      v133 = v127;
      v134 = v183;
      goto LABEL_104;
    }
    goto LABEL_102;
  }
  v184 = v276;
  sub_1ACFF64C0((uint64_t)v178, (uint64_t)v276, &qword_1EECD2400);
  if (v180(v317, 1, v181) == 1)
  {
    sub_1AD066230(v310, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v119, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v184, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    v129 = v311;
    v130 = v312;
LABEL_102:
    v132 = (uint64_t)v118;
    sub_1AD009758((uint64_t)v285, &qword_1EECDB360);
    goto LABEL_38;
  }
  v132 = (uint64_t)v118;
  v185 = v274;
  sub_1AD2A5214(v317, (uint64_t)v274, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  LODWORD(v317) = sub_1AD3818A4((uint64_t)v184, (uint64_t)v185);
  sub_1AD066230((uint64_t)v185, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  sub_1AD066230(v310, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230((uint64_t)v309, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230((uint64_t)v184, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  sub_1AD009758((uint64_t)v178, &qword_1EECD2400);
  v186 = v306;
  sub_1AD0D3D2C(v112, (uint64_t)v306, type metadata accessor for IDSHealthInvitation);
  v135 = v287;
  sub_1AD0D3D2C(a2, v287, type metadata accessor for IDSHealthInvitation);
  v129 = v311;
  v130 = v312;
  v136 = v308;
  v133 = v127;
  v134 = v186;
  if ((v317 & 1) == 0)
    goto LABEL_39;
LABEL_104:
  v187 = v284[13];
  v188 = v135 + v187;
  v189 = v280;
  v190 = (uint64_t)&v280[*(int *)(v277 + 48)];
  sub_1ACFF64C0((uint64_t)&v134[v187], (uint64_t)v280, (uint64_t *)&unk_1ED2E2D98);
  v317 = v190;
  sub_1ACFF64C0(v188, v190, (uint64_t *)&unk_1ED2E2D98);
  v191 = *(_BYTE **)(v279 + 48);
  v192 = v278;
  v193 = ((uint64_t (*)(_BYTE *, uint64_t, uint64_t))v191)(v189, 1, v278);
  v316 = v191;
  if (v193 == 1)
  {
    sub_1AD066230(v135, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v134, type metadata accessor for IDSHealthInvitation);
    v194 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v191)(v317, 1, v192);
    v130 = v312;
    if (v194 == 1)
    {
      sub_1AD009758((uint64_t)v280, (uint64_t *)&unk_1ED2E2D98);
      sub_1AD0D3D2C(v112, (uint64_t)v136, type metadata accessor for IDSHealthInvitation);
      v138 = v307;
      sub_1AD0D3D2C(a2, v307, type metadata accessor for IDSHealthInvitation);
      v137 = v132;
      v139 = v303;
      goto LABEL_111;
    }
    goto LABEL_109;
  }
  v195 = (uint64_t)v189;
  v196 = v275;
  sub_1ACFF64C0(v195, (uint64_t)v275, (uint64_t *)&unk_1ED2E2D98);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v191)(v317, 1, v192) == 1)
  {
    sub_1AD066230(v135, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v134, type metadata accessor for IDSHealthInvitation);
    (*(void (**)(_BYTE *, uint64_t))(v279 + 8))(v196, v192);
    v130 = v312;
LABEL_109:
    sub_1AD009758((uint64_t)v280, &qword_1EECDB358);
    v129 = v311;
    goto LABEL_40;
  }
  v197 = v279;
  v198 = v272;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v279 + 32))(v272, v317, v192);
  sub_1ACFF9724(&qword_1EECDB368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  LODWORD(v317) = sub_1AD63B738();
  v199 = *(void (**)(_BYTE *, uint64_t))(v197 + 8);
  v136 = v308;
  v199(v198, v192);
  sub_1AD066230(v135, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230((uint64_t)v306, type metadata accessor for IDSHealthInvitation);
  v199(v275, v192);
  sub_1AD009758((uint64_t)v280, (uint64_t *)&unk_1ED2E2D98);
  sub_1AD0D3D2C(v112, (uint64_t)v136, type metadata accessor for IDSHealthInvitation);
  v138 = v307;
  sub_1AD0D3D2C(a2, v307, type metadata accessor for IDSHealthInvitation);
  v129 = v311;
  v130 = v312;
  v137 = v132;
  v139 = v303;
  if ((v317 & 1) == 0)
    goto LABEL_41;
LABEL_111:
  v200 = v284[14];
  v201 = v138 + v200;
  v202 = v273;
  v203 = (uint64_t)&v273[*(int *)(v277 + 48)];
  sub_1ACFF64C0((uint64_t)&v136[v200], (uint64_t)v273, (uint64_t *)&unk_1ED2E2D98);
  sub_1ACFF64C0(v201, v203, (uint64_t *)&unk_1ED2E2D98);
  v204 = v278;
  v205 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v316;
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v316)(v202, 1, v278) == 1)
  {
    sub_1AD066230(v307, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v136, type metadata accessor for IDSHealthInvitation);
    if (v205(v203, 1, v204) == 1)
    {
      sub_1AD009758((uint64_t)v202, (uint64_t *)&unk_1ED2E2D98);
      v140 = v302;
      sub_1AD0D3D2C(v112, (uint64_t)v302, type metadata accessor for IDSHealthInvitation);
      sub_1AD0D3D2C(a2, (uint64_t)v139, type metadata accessor for IDSHealthInvitation);
      goto LABEL_118;
    }
    goto LABEL_116;
  }
  v206 = v270;
  sub_1ACFF64C0((uint64_t)v202, (uint64_t)v270, (uint64_t *)&unk_1ED2E2D98);
  if (v205(v203, 1, v204) == 1)
  {
    sub_1AD066230(v307, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v308, type metadata accessor for IDSHealthInvitation);
    (*(void (**)(_BYTE *, uint64_t))(v279 + 8))(v206, v204);
    v202 = v273;
LABEL_116:
    sub_1AD009758((uint64_t)v202, &qword_1EECDB358);
    v129 = v311;
    v130 = v312;
    goto LABEL_42;
  }
  v207 = v272;
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v279 + 32))(v272, v203, v204);
  sub_1ACFF9724(&qword_1EECDB368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
  LODWORD(v317) = sub_1AD63B738();
  v208 = *(void (**)(_BYTE *, uint64_t))(v279 + 8);
  v208(v207, v204);
  sub_1AD066230(v307, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230((uint64_t)v308, type metadata accessor for IDSHealthInvitation);
  v208(v206, v204);
  sub_1AD009758((uint64_t)v273, (uint64_t *)&unk_1ED2E2D98);
  v140 = v302;
  sub_1AD0D3D2C(v112, (uint64_t)v302, type metadata accessor for IDSHealthInvitation);
  sub_1AD0D3D2C(a2, (uint64_t)v139, type metadata accessor for IDSHealthInvitation);
  v129 = v311;
  v130 = v312;
  if ((v317 & 1) == 0)
    goto LABEL_43;
LABEL_118:
  v209 = v284[15];
  v210 = (uint64_t)&v140[v209];
  v211 = (uint64_t)&v139[v209];
  v212 = v271;
  v213 = (uint64_t)&v271[*(int *)(v277 + 48)];
  sub_1ACFF64C0(v210, (uint64_t)v271, (uint64_t *)&unk_1ED2E2D98);
  sub_1ACFF64C0(v211, v213, (uint64_t *)&unk_1ED2E2D98);
  if (((unsigned int (*)(_BYTE *, uint64_t, uint64_t))v316)(v212, 1, v278) != 1)
  {
    sub_1ACFF64C0((uint64_t)v271, (uint64_t)v269, (uint64_t *)&unk_1ED2E2D98);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v316)(v213, 1, v278) != 1)
    {
      v214 = v279;
      v215 = v272;
      v216 = v278;
      (*(void (**)(_BYTE *, uint64_t, uint64_t))(v279 + 32))(v272, v213, v278);
      sub_1ACFF9724(&qword_1EECDB368, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v217 = v269;
      v218 = sub_1AD63B738();
      v219 = *(void (**)(_BYTE *, uint64_t))(v214 + 8);
      v219(v215, v216);
      sub_1AD066230((uint64_t)v303, type metadata accessor for IDSHealthInvitation);
      sub_1AD066230((uint64_t)v302, type metadata accessor for IDSHealthInvitation);
      v219(v217, v216);
      sub_1AD009758((uint64_t)v271, (uint64_t *)&unk_1ED2E2D98);
      v112 = v318;
      v133 = v305;
      sub_1AD0D3D2C(v318, (uint64_t)v305, type metadata accessor for IDSHealthInvitation);
      a2 = v266;
      v141 = v292;
      sub_1AD0D3D2C(v266, v292, type metadata accessor for IDSHealthInvitation);
      v143 = (uint64_t)v300;
      v142 = v301;
      v137 = (uint64_t)v304;
      v129 = v311;
      v130 = v312;
      if ((v218 & 1) != 0)
        goto LABEL_125;
LABEL_45:
      sub_1AD066230(v141, type metadata accessor for IDSHealthInvitation);
      sub_1AD066230((uint64_t)v133, type metadata accessor for IDSHealthInvitation);
LABEL_46:
      sub_1AD0D3D2C(v112, (uint64_t)v142, type metadata accessor for IDSHealthInvitation);
      v144 = v293;
      sub_1AD0D3D2C(a2, v293, type metadata accessor for IDSHealthInvitation);
      v145 = v299;
      goto LABEL_47;
    }
    sub_1AD066230((uint64_t)v303, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v302, type metadata accessor for IDSHealthInvitation);
    (*(void (**)(_BYTE *, uint64_t))(v279 + 8))(v269, v278);
    goto LABEL_123;
  }
  sub_1AD066230((uint64_t)v303, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230((uint64_t)v302, type metadata accessor for IDSHealthInvitation);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v316)(v213, 1, v278) != 1)
  {
LABEL_123:
    sub_1AD009758((uint64_t)v271, &qword_1EECDB358);
    a2 = v266;
    v112 = v318;
    v137 = (uint64_t)v304;
    v133 = v305;
    v129 = v311;
    v130 = v312;
    goto LABEL_44;
  }
  sub_1AD009758((uint64_t)v271, (uint64_t *)&unk_1ED2E2D98);
  v133 = v305;
  sub_1AD0D3D2C(v318, (uint64_t)v305, type metadata accessor for IDSHealthInvitation);
  v141 = v292;
  sub_1AD0D3D2C(v266, v292, type metadata accessor for IDSHealthInvitation);
LABEL_125:
  v220 = v284[16];
  v221 = &v133[v220];
  v222 = *(_QWORD *)&v133[v220 + 24];
  if (v222 == 1)
    goto LABEL_174;
  v223 = v141 + v220;
  v224 = *(_QWORD *)(v223 + 24);
  if (v224 == 1)
    goto LABEL_174;
  v225 = *((_QWORD *)v221 + 2);
  v226 = *(_QWORD *)(v223 + 16);
  if (!v222)
  {
    sub_1AD003E48(*((_QWORD *)v221 + 2), 0);
    sub_1AD003E48(v226, v224);
    sub_1AD066230(v141, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v305, type metadata accessor for IDSHealthInvitation);
    if (!v224)
      goto LABEL_134;
    sub_1AD003F24(v225, 0);
    v227 = v226;
    v228 = v224;
    goto LABEL_136;
  }
  if (!v224)
  {
    sub_1AD003E48(*((_QWORD *)v221 + 2), v222);
    sub_1AD003E48(v226, 0);
    sub_1AD066230(v141, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v305, type metadata accessor for IDSHealthInvitation);
    sub_1AD003F24(v225, v222);
    v227 = v226;
    v228 = 0;
LABEL_136:
    sub_1AD003F24(v227, v228);
    a2 = v266;
    v112 = v318;
    v143 = (uint64_t)v300;
    v142 = v301;
    v137 = (uint64_t)v304;
    v129 = v311;
    v130 = v312;
    goto LABEL_46;
  }
  if (v225 != v226 || v222 != v224)
  {
    v229 = sub_1AD63C2A8();
    swift_bridgeObjectRetain();
    sub_1AD066230(v141, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v305, type metadata accessor for IDSHealthInvitation);
    sub_1AD003F24(v225, v222);
    v112 = v318;
    v142 = v301;
    sub_1AD0D3D2C(v318, (uint64_t)v301, type metadata accessor for IDSHealthInvitation);
    a2 = v266;
    v144 = v293;
    sub_1AD0D3D2C(v266, v293, type metadata accessor for IDSHealthInvitation);
    v145 = v299;
    v143 = (uint64_t)v300;
    v137 = (uint64_t)v304;
    v129 = v311;
    v130 = v312;
    if ((v229 & 1) != 0)
      goto LABEL_138;
LABEL_47:
    sub_1AD066230(v144, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v142, type metadata accessor for IDSHealthInvitation);
LABEL_48:
    sub_1AD0D3D2C(v112, v130, type metadata accessor for IDSHealthInvitation);
    v146 = v294;
    sub_1AD0D3D2C(a2, v294, type metadata accessor for IDSHealthInvitation);
    v147 = v298;
    goto LABEL_49;
  }
  swift_bridgeObjectRetain();
  sub_1AD066230(v141, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230((uint64_t)v305, type metadata accessor for IDSHealthInvitation);
  sub_1AD003F24(v225, v222);
LABEL_134:
  v142 = v301;
  sub_1AD0D3D2C(v318, (uint64_t)v301, type metadata accessor for IDSHealthInvitation);
  v144 = v293;
  sub_1AD0D3D2C(v266, v293, type metadata accessor for IDSHealthInvitation);
LABEL_138:
  v230 = v284[17];
  v231 = &v142[v230];
  v232 = *(_QWORD *)&v142[v230 + 24];
  if (v232 == 1)
    goto LABEL_174;
  v233 = v144 + v230;
  v234 = *(_QWORD *)(v233 + 24);
  if (v234 == 1)
    goto LABEL_174;
  v235 = *((_QWORD *)v231 + 2);
  v236 = *(_QWORD *)(v233 + 16);
  if (!v232)
  {
    sub_1AD003E48(*((_QWORD *)v231 + 2), 0);
    sub_1AD003E48(v236, v234);
    sub_1AD066230(v144, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v301, type metadata accessor for IDSHealthInvitation);
    if (!v234)
      goto LABEL_147;
    sub_1AD003F24(v235, 0);
    v237 = v236;
    v238 = v234;
    goto LABEL_149;
  }
  if (!v234)
  {
    sub_1AD003E48(*((_QWORD *)v231 + 2), v232);
    sub_1AD003E48(v236, 0);
    sub_1AD066230(v144, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v301, type metadata accessor for IDSHealthInvitation);
    sub_1AD003F24(v235, v232);
    v237 = v236;
    v238 = 0;
LABEL_149:
    sub_1AD003F24(v237, v238);
    a2 = v266;
    v112 = v318;
    v145 = v299;
    v143 = (uint64_t)v300;
    v137 = (uint64_t)v304;
    v129 = v311;
    v130 = v312;
    goto LABEL_48;
  }
  if (v235 == v236 && v232 == v234)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230(v144, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v301, type metadata accessor for IDSHealthInvitation);
    sub_1AD003F24(v235, v232);
LABEL_147:
    v130 = v312;
    sub_1AD0D3D2C(v318, v312, type metadata accessor for IDSHealthInvitation);
    v146 = v294;
    sub_1AD0D3D2C(v266, v294, type metadata accessor for IDSHealthInvitation);
    goto LABEL_151;
  }
  v239 = sub_1AD63C2A8();
  swift_bridgeObjectRetain();
  sub_1AD066230(v144, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230((uint64_t)v301, type metadata accessor for IDSHealthInvitation);
  sub_1AD003F24(v235, v232);
  v112 = v318;
  v240 = v312;
  sub_1AD0D3D2C(v318, v312, type metadata accessor for IDSHealthInvitation);
  a2 = v266;
  v146 = v294;
  v130 = v240;
  sub_1AD0D3D2C(v266, v294, type metadata accessor for IDSHealthInvitation);
  v145 = v299;
  v143 = (uint64_t)v300;
  v137 = (uint64_t)v304;
  v147 = v298;
  v129 = v311;
  if ((v239 & 1) == 0)
  {
LABEL_49:
    sub_1AD066230(v146, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v130, type metadata accessor for IDSHealthInvitation);
LABEL_50:
    sub_1AD0D3D2C(v112, v129, type metadata accessor for IDSHealthInvitation);
    sub_1AD0D3D2C(a2, (uint64_t)v145, type metadata accessor for IDSHealthInvitation);
    v148 = (uint64_t)v295;
LABEL_51:
    sub_1AD066230((uint64_t)v145, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v129, type metadata accessor for IDSHealthInvitation);
    goto LABEL_52;
  }
LABEL_151:
  v241 = v284[18];
  v242 = v146;
  v243 = v146 + v241;
  v244 = (uint64_t)v265;
  v245 = (uint64_t)&v265[*(int *)(v267 + 48)];
  sub_1ACFF64C0(v130 + v241, (uint64_t)v265, (uint64_t *)&unk_1EECDB300);
  sub_1ACFF64C0(v243, v245, (uint64_t *)&unk_1EECDB300);
  v246 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v268 + 48);
  if (v246(v244, 1, v263) == 1)
  {
    sub_1AD066230(v242, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v312, type metadata accessor for IDSHealthInvitation);
    if (v246(v245, 1, v263) == 1)
    {
      sub_1AD009758((uint64_t)v265, (uint64_t *)&unk_1EECDB300);
      v129 = v311;
      sub_1AD0D3D2C(v318, v311, type metadata accessor for IDSHealthInvitation);
      v145 = v299;
      sub_1AD0D3D2C(v266, (uint64_t)v299, type metadata accessor for IDSHealthInvitation);
      goto LABEL_158;
    }
    goto LABEL_156;
  }
  sub_1ACFF64C0((uint64_t)v265, (uint64_t)v264, (uint64_t *)&unk_1EECDB300);
  if (v246(v245, 1, v263) == 1)
  {
    sub_1AD066230(v242, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v312, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v264, type metadata accessor for CloudKitShareParticipant);
LABEL_156:
    sub_1AD009758((uint64_t)v265, &qword_1EECDB350);
    a2 = v266;
    v112 = v318;
    v145 = v299;
    v143 = (uint64_t)v300;
    v137 = (uint64_t)v304;
    v147 = v298;
    v129 = v311;
    goto LABEL_50;
  }
  v247 = v291;
  sub_1AD2A5214(v245, (uint64_t)v291, type metadata accessor for CloudKitShareParticipant);
  v248 = (uint64_t)v264;
  v249 = sub_1AD58EEBC((uint64_t)v264, (uint64_t)v247);
  sub_1AD066230((uint64_t)v247, type metadata accessor for CloudKitShareParticipant);
  sub_1AD066230(v242, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230(v312, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230(v248, type metadata accessor for CloudKitShareParticipant);
  sub_1AD009758((uint64_t)v265, (uint64_t *)&unk_1EECDB300);
  v112 = v318;
  v129 = v311;
  sub_1AD0D3D2C(v318, v311, type metadata accessor for IDSHealthInvitation);
  a2 = v266;
  v145 = v299;
  sub_1AD0D3D2C(v266, (uint64_t)v299, type metadata accessor for IDSHealthInvitation);
  v143 = (uint64_t)v300;
  v148 = (uint64_t)v295;
  v137 = (uint64_t)v304;
  v147 = v298;
  if ((v249 & 1) == 0)
    goto LABEL_51;
LABEL_158:
  v250 = v284;
  v251 = v129;
  v252 = *(unsigned __int8 *)(v129 + v284[19]);
  sub_1AD066230(v251, type metadata accessor for IDSHealthInvitation);
  v253 = v145[v250[19]];
  sub_1AD066230((uint64_t)v145, type metadata accessor for IDSHealthInvitation);
  if (v252 == 3)
  {
    a2 = v266;
    v112 = v318;
    v143 = (uint64_t)v300;
    v148 = (uint64_t)v295;
    v137 = (uint64_t)v304;
    v147 = v298;
    if (v253 == 3)
    {
      sub_1AD0D3D2C(v318, (uint64_t)v298, type metadata accessor for IDSHealthInvitation);
      sub_1AD0D3D2C(a2, v137, type metadata accessor for IDSHealthInvitation);
      goto LABEL_163;
    }
    goto LABEL_52;
  }
  a2 = v266;
  v112 = v318;
  v143 = (uint64_t)v300;
  v148 = (uint64_t)v295;
  v137 = (uint64_t)v304;
  v147 = v298;
  if (v253 == 3)
  {
LABEL_52:
    sub_1AD0D3D2C(v112, (uint64_t)v147, type metadata accessor for IDSHealthInvitation);
    sub_1AD0D3D2C(a2, v137, type metadata accessor for IDSHealthInvitation);
LABEL_53:
    sub_1AD066230((uint64_t)v147, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v137, type metadata accessor for IDSHealthInvitation);
    sub_1AD0D3D2C(v112, v148, type metadata accessor for IDSHealthInvitation);
    sub_1AD0D3D2C(a2, v143, type metadata accessor for IDSHealthInvitation);
LABEL_54:
    sub_1AD066230(v143, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230(v148, type metadata accessor for IDSHealthInvitation);
    goto LABEL_55;
  }
  sub_1AD0D3D2C(v318, (uint64_t)v298, type metadata accessor for IDSHealthInvitation);
  sub_1AD0D3D2C(a2, v137, type metadata accessor for IDSHealthInvitation);
  if (v252 != v253)
    goto LABEL_53;
LABEL_163:
  v254 = sub_1AD353E90(*(_QWORD *)&v147[v284[20]], *(_QWORD *)(v137 + v284[20]));
  sub_1AD066230((uint64_t)v147, type metadata accessor for IDSHealthInvitation);
  sub_1AD066230(v137, type metadata accessor for IDSHealthInvitation);
  sub_1AD0D3D2C(v112, v148, type metadata accessor for IDSHealthInvitation);
  sub_1AD0D3D2C(a2, v143, type metadata accessor for IDSHealthInvitation);
  if ((v254 & 1) == 0)
    goto LABEL_54;
  v255 = v284;
  v256 = *(unsigned __int8 *)(v148 + v284[21]);
  sub_1AD066230(v148, type metadata accessor for IDSHealthInvitation);
  v257 = *(unsigned __int8 *)(v143 + v255[21]);
  sub_1AD066230(v143, type metadata accessor for IDSHealthInvitation);
  if (v256 != 3)
  {
    a2 = v266;
    v112 = v318;
    if (v257 != 3)
    {
      sub_1AD0D3D2C(v318, (uint64_t)v296, type metadata accessor for IDSHealthInvitation);
      sub_1AD0D3D2C(a2, (uint64_t)v297, type metadata accessor for IDSHealthInvitation);
      if (v256 != v257)
      {
        v151 = 0;
        goto LABEL_173;
      }
      goto LABEL_169;
    }
LABEL_55:
    v149 = v296;
    sub_1AD0D3D2C(v112, (uint64_t)v296, type metadata accessor for IDSHealthInvitation);
    v150 = v297;
    sub_1AD0D3D2C(a2, (uint64_t)v297, type metadata accessor for IDSHealthInvitation);
    v151 = 0;
LABEL_56:
    sub_1AD066230((uint64_t)v150, type metadata accessor for IDSHealthInvitation);
    sub_1AD066230((uint64_t)v149, type metadata accessor for IDSHealthInvitation);
    return v151 & 1;
  }
  a2 = v266;
  v112 = v318;
  if (v257 != 3)
    goto LABEL_55;
  sub_1AD0D3D2C(v318, (uint64_t)v296, type metadata accessor for IDSHealthInvitation);
  sub_1AD0D3D2C(a2, (uint64_t)v297, type metadata accessor for IDSHealthInvitation);
LABEL_169:
  v258 = v284[22];
  v259 = *(_QWORD **)&v296[v258 + 16];
  if (v259)
  {
    v260 = *(_QWORD **)&v297[v258 + 16];
    if (v260)
    {
      v151 = sub_1AD350DB4(v259, v260);
LABEL_173:
      v150 = v297;
      v149 = v296;
      goto LABEL_56;
    }
  }
LABEL_174:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD3818A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t, uint64_t, uint64_t);
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _BOOL8 v53;
  uint64_t result;
  uint64_t v55;
  char v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int *v86;
  char *v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  v4 = type metadata accessor for CloudKitShareParticipant(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v84 = (uint64_t)&v82 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB300);
  MEMORY[0x1E0C80A78](v7);
  v85 = (uint64_t)&v82 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB350);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v82 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v86 = (int *)type metadata accessor for IDSHealthInvitation.SharingSetupMetadata(0);
  v12 = MEMORY[0x1E0C80A78](v86);
  v91 = (uint64_t)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v90 = (uint64_t)&v82 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v88 = (char *)&v82 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v89 = (char *)&v82 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v93 = (uint64_t)&v82 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v87 = (char *)&v82 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v82 - v25;
  v27 = MEMORY[0x1E0C80A78](v24);
  v92 = (uint64_t)&v82 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v31 = (char *)&v82 - v30;
  MEMORY[0x1E0C80A78](v29);
  v33 = (char *)&v82 - v32;
  v34 = *(_QWORD *)(a1 + 24);
  if (v34 == 1)
    goto LABEL_60;
  v35 = *(_QWORD *)(a2 + 24);
  if (v35 == 1)
    goto LABEL_60;
  v36 = a1;
  if (!v34)
  {
    if (!v35)
    {
LABEL_12:
      sub_1AD0D3D2C(a1, (uint64_t)&v82 - v32, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      sub_1AD0D3D2C(a2, (uint64_t)v31, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      goto LABEL_13;
    }
LABEL_10:
    sub_1AD0D3D2C(a1, (uint64_t)&v82 - v32, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD0D3D2C(a2, (uint64_t)v31, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    goto LABEL_11;
  }
  if (!v35)
    goto LABEL_10;
  if (*(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16) && v34 == v35)
    goto LABEL_12;
  v37 = sub_1AD63C2A8();
  sub_1AD0D3D2C(v36, (uint64_t)v33, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  sub_1AD0D3D2C(a2, (uint64_t)v31, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  if ((v37 & 1) == 0)
  {
LABEL_11:
    sub_1AD066230((uint64_t)v31, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD066230((uint64_t)v33, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    v38 = v36;
    v39 = (uint64_t)v88;
    v40 = v93;
LABEL_19:
    v46 = v92;
    sub_1AD0D3D2C(v38, v92, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD0D3D2C(a2, (uint64_t)v26, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    v47 = (uint64_t)v87;
    goto LABEL_20;
  }
LABEL_13:
  v83 = a2;
  v41 = v86[5];
  v42 = (uint64_t)&v31[v41];
  v43 = (uint64_t)&v11[*(int *)(v9 + 48)];
  sub_1ACFF64C0((uint64_t)&v33[v41], (uint64_t)v11, (uint64_t *)&unk_1EECDB300);
  sub_1ACFF64C0(v42, v43, (uint64_t *)&unk_1EECDB300);
  v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v44((uint64_t)v11, 1, v4) != 1)
  {
    v48 = v85;
    sub_1ACFF64C0((uint64_t)v11, v85, (uint64_t *)&unk_1EECDB300);
    v49 = v44(v43, 1, v4);
    a2 = v83;
    if (v49 != 1)
    {
      v55 = v84;
      sub_1AD2A5214(v43, v84, type metadata accessor for CloudKitShareParticipant);
      v56 = sub_1AD5941D0(v48, v55);
      sub_1AD066230(v55, type metadata accessor for CloudKitShareParticipant);
      sub_1AD066230((uint64_t)v31, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      sub_1AD066230((uint64_t)v33, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      sub_1AD066230(v48, type metadata accessor for CloudKitShareParticipant);
      sub_1AD009758((uint64_t)v11, (uint64_t *)&unk_1EECDB300);
      v38 = v36;
      v46 = v92;
      sub_1AD0D3D2C(v36, v92, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      sub_1AD0D3D2C(a2, (uint64_t)v26, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      v47 = (uint64_t)v87;
      v39 = (uint64_t)v88;
      v40 = v93;
      if ((v56 & 1) != 0)
        goto LABEL_28;
LABEL_20:
      sub_1AD066230((uint64_t)v26, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      sub_1AD066230(v46, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      v50 = (uint64_t)v89;
LABEL_21:
      sub_1AD0D3D2C(v38, v47, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      sub_1AD0D3D2C(a2, v40, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      goto LABEL_22;
    }
    sub_1AD066230((uint64_t)v31, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD066230((uint64_t)v33, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD066230(v48, type metadata accessor for CloudKitShareParticipant);
    v40 = v93;
    goto LABEL_18;
  }
  sub_1AD066230((uint64_t)v31, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  sub_1AD066230((uint64_t)v33, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  v45 = v44(v43, 1, v4);
  a2 = v83;
  v40 = v93;
  if (v45 != 1)
  {
LABEL_18:
    sub_1AD009758((uint64_t)v11, &qword_1EECDB350);
    v38 = v36;
    v39 = (uint64_t)v88;
    goto LABEL_19;
  }
  sub_1AD009758((uint64_t)v11, (uint64_t *)&unk_1EECDB300);
  v38 = v36;
  v46 = v92;
  sub_1AD0D3D2C(v36, v92, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  sub_1AD0D3D2C(a2, (uint64_t)v26, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  v47 = (uint64_t)v87;
  v39 = (uint64_t)v88;
LABEL_28:
  v57 = v86[7];
  v58 = v46 + v57;
  v59 = *(_QWORD *)(v46 + v57 + 24);
  if (v59 == 1)
    goto LABEL_60;
  v60 = &v26[v57];
  v61 = *((_QWORD *)v60 + 3);
  if (v61 == 1)
    goto LABEL_60;
  v62 = *(_QWORD *)(v58 + 16);
  v63 = *((_QWORD *)v60 + 2);
  if (!v59)
  {
    sub_1AD003E48(*(_QWORD *)(v58 + 16), 0);
    sub_1AD003E48(v63, v61);
    sub_1AD066230((uint64_t)v26, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD066230(v46, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    if (!v61)
      goto LABEL_37;
    sub_1AD003F24(v62, 0);
    v64 = v63;
    v65 = v61;
    goto LABEL_39;
  }
  if (!v61)
  {
    sub_1AD003E48(*(_QWORD *)(v58 + 16), v59);
    sub_1AD003E48(v63, 0);
    sub_1AD066230((uint64_t)v26, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD066230(v46, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD003F24(v62, v59);
    v64 = v63;
    v65 = 0;
LABEL_39:
    sub_1AD003F24(v64, v65);
    v50 = (uint64_t)v89;
    v40 = v93;
    goto LABEL_21;
  }
  if (v62 == v63 && v59 == v61)
  {
    swift_bridgeObjectRetain();
    sub_1AD066230((uint64_t)v26, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD066230(v92, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD003F24(v62, v59);
LABEL_37:
    sub_1AD0D3D2C(v38, v47, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    v40 = v93;
    sub_1AD0D3D2C(a2, v93, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    v50 = (uint64_t)v89;
    goto LABEL_41;
  }
  v66 = sub_1AD63C2A8();
  swift_bridgeObjectRetain();
  sub_1AD066230((uint64_t)v26, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  sub_1AD066230(v92, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  sub_1AD003F24(v62, v59);
  sub_1AD0D3D2C(v38, v47, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  v40 = v93;
  sub_1AD0D3D2C(a2, v93, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  v50 = (uint64_t)v89;
  if ((v66 & 1) == 0)
  {
LABEL_22:
    sub_1AD066230(v40, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD066230(v47, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
LABEL_23:
    sub_1AD0D3D2C(v38, v50, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    sub_1AD0D3D2C(a2, v39, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
    goto LABEL_24;
  }
LABEL_41:
  v67 = v86[8];
  v68 = *(char *)(v47 + v67);
  v69 = *(char *)(v40 + v67);
  if (v68 != 5)
  {
    if ((_DWORD)v69 != 5)
    {
      v70 = qword_1AD67CB30[v68];
      v71 = qword_1AD67CB30[v69];
      sub_1AD066230(v40, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      sub_1AD066230(v47, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      sub_1AD0D3D2C(v38, v50, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      sub_1AD0D3D2C(a2, v39, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      if (v70 == v71)
        goto LABEL_46;
LABEL_24:
      sub_1AD066230(v39, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      sub_1AD066230(v50, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  sub_1AD066230(v40, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  sub_1AD066230(v47, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  if ((_DWORD)v69 != 5)
    goto LABEL_23;
  sub_1AD0D3D2C(v38, v50, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
  sub_1AD0D3D2C(a2, v39, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
LABEL_46:
  v72 = v86[9];
  v73 = v50 + v72;
  v74 = *(_QWORD *)(v50 + v72 + 24);
  if (v74 != 1)
  {
    v75 = v39 + v72;
    v76 = *(_QWORD *)(v75 + 24);
    if (v76 != 1)
    {
      v77 = *(_QWORD *)(v73 + 16);
      v78 = *(_QWORD *)(v75 + 16);
      if (v74)
      {
        if (v76)
        {
          if (v77 == v78 && v74 == v76)
          {
            swift_bridgeObjectRetain();
            sub_1AD066230(v39, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
            sub_1AD066230(v50, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
            sub_1AD003F24(v77, v74);
LABEL_55:
            v51 = v90;
            sub_1AD0D3D2C(v38, v90, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
            v52 = v91;
            sub_1AD0D3D2C(a2, v91, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
LABEL_59:
            v53 = *(_QWORD *)(*(_QWORD *)(v51 + v86[10]) + 16) == *(_QWORD *)(*(_QWORD *)(v52 + v86[10]) + 16);
            goto LABEL_26;
          }
          v81 = sub_1AD63C2A8();
          swift_bridgeObjectRetain();
          sub_1AD066230(v39, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
          sub_1AD066230(v50, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
          sub_1AD003F24(v77, v74);
          v51 = v90;
          sub_1AD0D3D2C(v38, v90, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
          v52 = v91;
          sub_1AD0D3D2C(a2, v91, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
          v53 = 0;
          if ((v81 & 1) != 0)
            goto LABEL_59;
LABEL_26:
          sub_1AD066230(v51, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
          sub_1AD066230(v52, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
          return v53;
        }
        sub_1AD003E48(*(_QWORD *)(v73 + 16), v74);
        sub_1AD003E48(v78, 0);
        sub_1AD066230(v39, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
        sub_1AD066230(v50, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
        sub_1AD003F24(v77, v74);
        v79 = v78;
        v80 = 0;
      }
      else
      {
        sub_1AD003E48(*(_QWORD *)(v73 + 16), 0);
        sub_1AD003E48(v78, v76);
        sub_1AD066230(v39, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
        sub_1AD066230(v50, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
        if (!v76)
          goto LABEL_55;
        sub_1AD003F24(v77, 0);
        v79 = v78;
        v80 = v76;
      }
      sub_1AD003F24(v79, v80);
LABEL_25:
      v51 = v90;
      sub_1AD0D3D2C(v38, v90, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      v52 = v91;
      sub_1AD0D3D2C(a2, v91, type metadata accessor for IDSHealthInvitation.SharingSetupMetadata);
      v53 = 0;
      goto LABEL_26;
    }
  }
LABEL_60:
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD382418(_QWORD *a1)
{
  uint64_t v1;

  return sub_1AD280E48(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_1AD382420()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1AD382444(uint64_t a1)
{
  void *v1;
  uint64_t *v2;
  unint64_t v3;
  uint64_t v4;
  id v5;
  id v6;
  id v7;
  _QWORD *v8;
  _QWORD *v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v13;
  uint64_t ObjCClassFromMetadata;
  void *v15;
  uint64_t v16;
  unint64_t *v17;
  unint64_t *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23[5];

  v2 = (uint64_t *)(a1 + *(int *)(type metadata accessor for HealthSharingSetupMetadata(0) + 32));
  v3 = v2[1];
  if (v3 >> 60 != 15)
  {
    v4 = *v2;
    v5 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
    sub_1AD0040A0(v4, v3);
    v6 = sub_1AD36E7D4();
    if (v1)
    {
      sub_1AD004118(v4, v3);
      v23[0] = v1;
      v7 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
      sub_1AD32F2CC(0, (unint64_t *)&qword_1EECDB380);
      if ((swift_dynamicCast() & 1) != 0)
      {

        sub_1AD0DDA60();
        swift_allocError();
        v9 = v8;
        v10 = v23[4];
        sub_1AD601B20(v10, 0xD000000000000013, 0x80000001AD6A8B10, v9);
        swift_willThrow();

      }
      else
      {

        sub_1AD0DDA60();
        swift_allocError();
        v18 = v17;
        v19 = v1;
        sub_1AD6015CC(v1, 0xD000000000000013, 0x80000001AD6A8B10, v18);
        swift_willThrow();

      }
    }
    else
    {
      v11 = v6;
      sub_1AD004118(v4, v3);
      v12 = v11;
      objc_msgSend(v12, sel__enableStrictSecureDecodingMode);
      objc_msgSend(v12, sel_setDecodingFailurePolicy_, 1);
      v13 = type metadata accessor for _BlastDoorHKProfileIdentifier();
      ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
      v15 = (void *)sub_1AD63B744();
      objc_msgSend(v12, sel_setClass_forClassName_, ObjCClassFromMetadata, v15);

      __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB0B8);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_1AD648160;
      *(_QWORD *)(v16 + 32) = v13;
      sub_1AD63B768();
      sub_1AD63BC24();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v23[3])
      {
        if ((swift_dynamicCast() & 1) != 0)
        {

          return;
        }
      }
      else
      {
        sub_1AD009758((uint64_t)v23, &qword_1EECDC5F0);
      }
      v20 = sub_1AD63BD8C();
      swift_allocError();
      v22 = v21;
      sub_1AD63BD68();
      (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC458], v20);
      swift_willThrow();

    }
  }
}

_QWORD *sub_1AD3827DC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t (*v18)(uint64_t *);
  uint64_t (*v19)(uint64_t *);
  uint64_t (**v20)(uint64_t *);
  uint64_t (*v21)(uint64_t *);
  uint64_t (*v22)(uint64_t *);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD v33[2];
  uint64_t v34;
  int *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v35 = (int *)type metadata accessor for HealthSharingAuthorization(0);
  v3 = *((_QWORD *)v35 - 1);
  MEMORY[0x1E0C80A78](v35);
  v36 = (uint64_t)v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(a1 + *(int *)(type metadata accessor for HealthSummarySharingEntry(0) + 20))
     + OBJC_IVAR____TtCV9BlastDoor25HealthSummarySharingEntryP33_DEAEB66CBC3E1B66E4C8080B1AEAC45D13_StorageClass__sharingAuthorizations;
  swift_beginAccess();
  v6 = *(_QWORD *)v5;
  v7 = *(_QWORD *)(*(_QWORD *)v5 + 16);
  if (!v7)
    return (_QWORD *)MEMORY[0x1E0DEE9D8];
  v48 = v1;
  v8 = v6 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v9 = *(_QWORD *)(v3 + 72);
  v33[1] = v6;
  v34 = v9;
  swift_bridgeObjectRetain();
  v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v11 = type metadata accessor for HealthSharingAuthorization;
  v12 = v36;
  while (1)
  {
    v13 = v11;
    sub_1AD0D3D2C(v8, v12, v11);
    v14 = v35[6];
    v15 = (uint64_t *)(v12 + v35[5]);
    v16 = *v15;
    v17 = v15[1];
    v19 = *(uint64_t (**)(uint64_t *))(v12 + v14);
    v18 = *(uint64_t (**)(uint64_t *))(v12 + v14 + 8);
    v20 = (uint64_t (**)(uint64_t *))(v12 + v35[7]);
    v22 = *v20;
    v21 = v20[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v23 = v16;
    v24 = v48;
    sub_1AD20B9CC(v23, v17, v19, v18, v22, v21, (uint64_t (**)(uint64_t *))&v41);
    if (v24)
      break;
    v48 = 0;
    v40 = v41;
    v25 = v43;
    v26 = v44;
    v27 = v45;
    v38 = v46;
    v39 = v42;
    v37 = v47;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v10 = sub_1AD3CB6DC(0, v10[2] + 1, 1, v10);
    v29 = v10[2];
    v28 = v10[3];
    if (v29 >= v28 >> 1)
      v10 = sub_1AD3CB6DC((_QWORD *)(v28 > 1), v29 + 1, 1, v10);
    v10[2] = v29 + 1;
    v30 = &v10[8 * v29];
    *((_OWORD *)v30 + 2) = v40;
    v30[6] = v39;
    v30[7] = v25;
    v30[8] = v26;
    v30[9] = v27;
    v12 = v36;
    v31 = v37;
    v30[10] = v38;
    v30[11] = v31;
    v11 = v13;
    sub_1AD066230(v12, v13);
    v8 += v34;
    if (!--v7)
    {
      swift_bridgeObjectRelease();
      return v10;
    }
  }
  sub_1AD066230(v36, type metadata accessor for HealthSharingAuthorization);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_1AD382A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD382AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB318);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for _BlastDoorHKProfileIdentifier()
{
  return objc_opt_self();
}

uint64_t sub_1AD382B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[2];

  v4 = sub_1AD63B468();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB388);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EECD14F8 != -1)
    swift_once();
  if ((byte_1EED839D0 & 1) != 0)
    return 1;
  swift_bridgeObjectRetain();
  sub_1AD63B45C();
  sub_1AD63B42C();
  v9 = 1;
  v10 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v8, 1, v4);
  sub_1AD009758((uint64_t)v8, &qword_1EECDB388);
  if (v10 == 1)
  {
    sub_1AD63BB7C();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
    v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1AD648160;
    v17[0] = a1;
    v17[1] = a2;
    swift_bridgeObjectRetain();
    v12 = MEMORY[0x1E0DEA968];
    v13 = sub_1AD63B7A4();
    v15 = v14;
    *(_QWORD *)(v11 + 56) = v12;
    *(_QWORD *)(v11 + 64) = sub_1AD0469B8();
    *(_QWORD *)(v11 + 32) = v13;
    *(_QWORD *)(v11 + 40) = v15;
    sub_1AD63B48C();
    swift_bridgeObjectRelease();
    return 0;
  }
  return v9;
}

uint64_t sub_1AD382D18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  BOOL v12;
  int v13;
  char v14;

  if (!sub_1AD63B804())
    return 0;
  if (a1 == 0xD000000000000010 && a2 == 0x80000001AD6A8BF0 || (sub_1AD63C2A8() & 1) != 0)
    return 1;
  swift_bridgeObjectRetain();
  v5 = sub_1AD63B828();
  if (v6)
  {
    v7 = v5;
    v8 = v6;
    do
    {
      sub_1AD63B6D8();
      if ((v10 & 1) == 0
        || v7 == 43 && v8 == 0xE100000000000000
        || ((v11 = sub_1AD63C2A8(), v7 == 95) ? (v12 = v8 == 0xE100000000000000) : (v12 = 0),
            !v12 ? (v13 = 0) : (v13 = 1),
            (v11 & 1) != 0 || v13))
      {
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = sub_1AD63C2A8();
        swift_bridgeObjectRelease();
        if ((v14 & 1) == 0)
        {
          v4 = 0;
          goto LABEL_25;
        }
      }
      v7 = sub_1AD63B828();
      v8 = v9;
    }
    while (v9);
  }
  v4 = 1;
LABEL_25:
  swift_bridgeObjectRelease();
  return v4;
}

BOOL sub_1AD382E90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v15[2];

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB388);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1AD63B474();
  v7 = sub_1AD63B468();
  v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 48))(v6, 1, v7);
  sub_1AD009758((uint64_t)v6, &qword_1EECDB388);
  if (v8 == 1)
  {
    sub_1AD63BB7C();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
    v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1AD648160;
    v15[0] = a1;
    v15[1] = a2;
    swift_bridgeObjectRetain();
    v10 = MEMORY[0x1E0DEA968];
    v11 = sub_1AD63B7A4();
    v13 = v12;
    *(_QWORD *)(v9 + 56) = v10;
    *(_QWORD *)(v9 + 64) = sub_1AD0469B8();
    *(_QWORD *)(v9 + 32) = v11;
    *(_QWORD *)(v9 + 40) = v13;
    sub_1AD63B48C();
    swift_bridgeObjectRelease();
  }
  return v8 != 1;
}

uint64_t sub_1AD383078@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  v7 = *(_QWORD *)(v1 + 40);
  v8 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v1 + 56);
  return sub_1AD3830A4(v2);
}

uint64_t sub_1AD3830A4(uint64_t result)
{
  if (result)
  {
    swift_retain();
    return swift_retain();
  }
  return result;
}

__n128 sub_1AD3830D4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  sub_1AD290134(*(_QWORD *)v1);
  *(_OWORD *)v1 = v7;
  *(_OWORD *)(v1 + 16) = v6;
  result = v5;
  *(__n128 *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 48) = v2;
  *(_BYTE *)(v1 + 56) = v3;
  return result;
}

uint64_t (*sub_1AD38314C())()
{
  return nullsub_1;
}

uint64_t sub_1AD38315C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 72);
  *a1 = *(_QWORD *)(v1 + 64);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD383168(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v3;
  return result;
}

uint64_t (*sub_1AD383198())()
{
  return nullsub_1;
}

uint64_t sub_1AD3831A8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  *a1 = v2;
  a1[1] = v3;
  return sub_1AD3831B4(v2, v3);
}

uint64_t sub_1AD3831B4(uint64_t a1, uint64_t a2)
{
  uint64_t result;

  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD3831E0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  result = sub_1AD2901EC(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
  *(_QWORD *)(v1 + 80) = v2;
  *(_QWORD *)(v1 + 88) = v3;
  return result;
}

uint64_t (*sub_1AD383210())()
{
  return nullsub_1;
}

uint64_t sub_1AD383220@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[12];
  v3 = v1[13];
  v4 = v1[14];
  v5 = v1[15];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1AD29BCAC(v2);
}

__n128 sub_1AD383234(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_1AD29A470(v1[12]);
  result = v5;
  *((__n128 *)v1 + 6) = v5;
  v1[14] = v2;
  v1[15] = v3;
  return result;
}

uint64_t (*sub_1AD383280())()
{
  return nullsub_1;
}

uint64_t sub_1AD383290()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD383298(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 128) = a1;
  return result;
}

uint64_t (*sub_1AD3832C0())()
{
  return nullsub_1;
}

unint64_t sub_1AD3832D0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD3832FC();
  result = sub_1AD383340();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD3832FC()
{
  unint64_t result;

  result = qword_1EECDB3F0;
  if (!qword_1EECDB3F0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD652D98, &type metadata for ProvisioningConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EECDB3F0);
  }
  return result;
}

unint64_t sub_1AD383340()
{
  unint64_t result;

  result = qword_1EECDB3F8;
  if (!qword_1EECDB3F8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD652DC0, &type metadata for ProvisioningConfiguration);
    atomic_store(result, (unint64_t *)&qword_1EECDB3F8);
  }
  return result;
}

uint64_t destroy for ProvisioningConfiguration(_QWORD *a1)
{
  if (*a1)
  {
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
  if (a1[11])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[12])
  {
    swift_release();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ProvisioningConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 v15;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    *(_QWORD *)(a1 + 16) = v5;
    *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
    v6 = *(_QWORD *)(a2 + 40);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 40) = v6;
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    swift_retain();
    swift_retain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  }
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  v9 = (_QWORD *)(a2 + 80);
  v10 = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRetain();
  if (v10)
  {
    *(_QWORD *)(a1 + 80) = *v9;
    *(_QWORD *)(a1 + 88) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v9;
  }
  v11 = *(_QWORD *)(a2 + 96);
  if (v11)
  {
    v12 = *(_QWORD *)(a2 + 104);
    v13 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 96) = v11;
    *(_QWORD *)(a1 + 104) = v12;
    v14 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = v13;
    *(_QWORD *)(a1 + 120) = v14;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v15 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v15;
  }
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ProvisioningConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  __int128 v26;

  v4 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v5;
      swift_retain();
      swift_release();
      v6 = a2[2];
      *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
      *(_QWORD *)(a1 + 16) = v6;
      v7 = a2[5];
      *(_QWORD *)(a1 + 32) = a2[4];
      *(_QWORD *)(a1 + 40) = v7;
      swift_retain();
      swift_release();
      v8 = a2[6];
      *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
      *(_QWORD *)(a1 + 48) = v8;
    }
    else
    {
      sub_1AD383760(a1);
      v14 = *((_OWORD *)a2 + 1);
      v13 = *((_OWORD *)a2 + 2);
      v15 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
      *(_OWORD *)(a1 + 16) = v14;
      *(_OWORD *)(a1 + 32) = v13;
      *(_OWORD *)a1 = v15;
    }
  }
  else if (v4)
  {
    v9 = a2[1];
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v9;
    v10 = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 16) = v10;
    v11 = a2[5];
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_QWORD *)(a1 + 40) = v11;
    v12 = a2[6];
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 48) = v12;
    swift_retain();
    swift_retain();
  }
  else
  {
    v16 = *(_OWORD *)a2;
    v17 = *((_OWORD *)a2 + 1);
    v18 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)a2 + 41);
    *(_OWORD *)(a1 + 16) = v17;
    *(_OWORD *)(a1 + 32) = v18;
    *(_OWORD *)a1 = v16;
  }
  *(_QWORD *)(a1 + 64) = a2[8];
  *(_QWORD *)(a1 + 72) = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a2[11];
  if (*(_QWORD *)(a1 + 88))
  {
    if (v19)
    {
      *(_QWORD *)(a1 + 80) = a2[10];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = a2[11];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_1AD383794(a1 + 80);
  }
  else if (v19)
  {
    *(_QWORD *)(a1 + 80) = a2[10];
    *(_QWORD *)(a1 + 88) = a2[11];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
LABEL_15:
  v20 = (_OWORD *)(a1 + 96);
  v22 = a2 + 12;
  v21 = a2[12];
  if (*(_QWORD *)(a1 + 96))
  {
    if (v21)
    {
      v23 = a2[13];
      *(_QWORD *)(a1 + 96) = v21;
      *(_QWORD *)(a1 + 104) = v23;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3837C8(a1 + 96);
      v25 = *((_OWORD *)a2 + 7);
      *v20 = *v22;
      *(_OWORD *)(a1 + 112) = v25;
    }
  }
  else if (v21)
  {
    v24 = a2[13];
    *(_QWORD *)(a1 + 96) = v21;
    *(_QWORD *)(a1 + 104) = v24;
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = a2[15];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v26 = *((_OWORD *)a2 + 7);
    *v20 = *v22;
    *(_OWORD *)(a1 + 112) = v26;
  }
  *(_QWORD *)(a1 + 128) = a2[16];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD383760(uint64_t a1)
{
  destroy for VersionCharacteristic();
  return a1;
}

uint64_t sub_1AD383794(uint64_t a1)
{
  destroy for SMSParserPart();
  return a1;
}

uint64_t sub_1AD3837C8(uint64_t a1)
{
  destroy for CPIMMessage.IMDNMessageIDHeader();
  return a1;
}

__n128 __swift_memcpy136_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v2 = *(_OWORD *)(a2 + 16);
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  result = *(__n128 *)(a2 + 80);
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 80) = result;
  return result;
}

uint64_t assignWithTake for ProvisioningConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;

  if (*(_QWORD *)a1)
  {
    if (*(_QWORD *)a2)
    {
      v4 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_release();
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      swift_release();
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      goto LABEL_6;
    }
    sub_1AD383760(a1);
  }
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_6:
  v6 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
  v7 = (_QWORD *)(a2 + 80);
  if (*(_QWORD *)(a1 + 88))
  {
    v8 = *(_QWORD *)(a2 + 88);
    if (v8)
    {
      *(_QWORD *)(a1 + 80) = *v7;
      swift_bridgeObjectRelease();
      *(_QWORD *)(a1 + 88) = v8;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1AD383794(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)v7;
LABEL_11:
  v9 = *(_QWORD *)(a2 + 96);
  if (!*(_QWORD *)(a1 + 96))
  {
LABEL_15:
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    goto LABEL_16;
  }
  if (!v9)
  {
    sub_1AD3837C8(a1 + 96);
    goto LABEL_15;
  }
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v9;
  *(_QWORD *)(a1 + 104) = v10;
  swift_release();
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  swift_bridgeObjectRelease();
LABEL_16:
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ProvisioningConfiguration(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 136))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ProvisioningConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 136) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ProvisioningConfiguration()
{
  return &type metadata for ProvisioningConfiguration;
}

uint64_t sub_1AD383A6C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[56];
  v4 = v1[57];
  v3 = v1[58];
  *a1 = v1[55];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD383A9C(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 440) = *a1;
  *(_QWORD *)(v1 + 456) = v3;
  *(_QWORD *)(v1 + 464) = v4;
  return result;
}

_QWORD *sub_1AD383AF0(_QWORD *a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[15];
  uint64_t v12;

  sub_1AD0CFB8C((uint64_t)a1, (uint64_t)v11);
  sub_1AD009758(v1, &qword_1ED2E2680);
  v3 = v11[13];
  *(_OWORD *)(v1 + 192) = v11[12];
  *(_OWORD *)(v1 + 208) = v3;
  *(_OWORD *)(v1 + 224) = v11[14];
  *(_QWORD *)(v1 + 240) = v12;
  v4 = v11[9];
  *(_OWORD *)(v1 + 128) = v11[8];
  *(_OWORD *)(v1 + 144) = v4;
  v5 = v11[11];
  *(_OWORD *)(v1 + 160) = v11[10];
  *(_OWORD *)(v1 + 176) = v5;
  v6 = v11[5];
  *(_OWORD *)(v1 + 64) = v11[4];
  *(_OWORD *)(v1 + 80) = v6;
  v7 = v11[7];
  *(_OWORD *)(v1 + 96) = v11[6];
  *(_OWORD *)(v1 + 112) = v7;
  v8 = v11[1];
  *(_OWORD *)v1 = v11[0];
  *(_OWORD *)(v1 + 16) = v8;
  v9 = v11[3];
  *(_OWORD *)(v1 + 32) = v11[2];
  *(_OWORD *)(v1 + 48) = v9;
  return sub_1AD046A30(a1);
}

uint64_t sub_1AD383B7C(uint64_t a1)
{
  void *v1;
  _BYTE __src[440];

  sub_1ACFF64C0(a1, (uint64_t)__src, &qword_1ED2E2FE8);
  sub_1AD009758((uint64_t)v1, &qword_1ED2E2FE8);
  memcpy(v1, __src, 0x1B8uLL);
  return sub_1AD009758(a1, &qword_1ED2E2FE8);
}

uint64_t sub_1AD383BE4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, &qword_1ED2E2FE8);
}

uint64_t sub_1AD383C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 464))
  {
    v1 = *(_QWORD *)(v0 + 456);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD383C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;

  return sub_1AD2A1398(v1, a1);
}

uint64_t sub_1AD383C8C(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1AD383C94(a1, v1);
}

uint64_t sub_1AD383C94(unsigned __int8 *a1, uint64_t a2)
{
  assignWithTake for EncodedAttachments.EncodedContent(a2, a1);
  return a2;
}

uint64_t (*sub_1AD383CC8())()
{
  return nullsub_1;
}

uint64_t sub_1AD383CD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(v1, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a1 + 192) = v23;
    *(_OWORD *)(a1 + 208) = v4;
    *(_OWORD *)(a1 + 224) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a1 + 128) = v19;
    *(_OWORD *)(a1 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a1 + 160) = v21;
    *(_OWORD *)(a1 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a1 + 64) = v15;
    *(_OWORD *)(a1 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD383D64(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v2 = v1;
  v4 = (char *)malloc(0x1F8uLL);
  *a1 = v4;
  *((_QWORD *)v4 + 62) = v2;
  result = sub_1ACFF64C0(v2, (uint64_t)(v4 + 248), &qword_1ED2E2680);
  if (*((_QWORD *)v4 + 34))
  {
    v6 = *(_OWORD *)(v4 + 456);
    *((_OWORD *)v4 + 12) = *(_OWORD *)(v4 + 440);
    *((_OWORD *)v4 + 13) = v6;
    *((_OWORD *)v4 + 14) = *(_OWORD *)(v4 + 472);
    *((_QWORD *)v4 + 30) = *((_QWORD *)v4 + 61);
    v7 = *(_OWORD *)(v4 + 392);
    *((_OWORD *)v4 + 8) = *(_OWORD *)(v4 + 376);
    *((_OWORD *)v4 + 9) = v7;
    v8 = *(_OWORD *)(v4 + 424);
    *((_OWORD *)v4 + 10) = *(_OWORD *)(v4 + 408);
    *((_OWORD *)v4 + 11) = v8;
    v9 = *(_OWORD *)(v4 + 328);
    *((_OWORD *)v4 + 4) = *(_OWORD *)(v4 + 312);
    *((_OWORD *)v4 + 5) = v9;
    v10 = *(_OWORD *)(v4 + 360);
    *((_OWORD *)v4 + 6) = *(_OWORD *)(v4 + 344);
    *((_OWORD *)v4 + 7) = v10;
    v11 = *(_OWORD *)(v4 + 264);
    *(_OWORD *)v4 = *(_OWORD *)(v4 + 248);
    *((_OWORD *)v4 + 1) = v11;
    v12 = *(_OWORD *)(v4 + 296);
    result = (uint64_t)sub_1AD146614;
    *((_OWORD *)v4 + 2) = *(_OWORD *)(v4 + 280);
    *((_OWORD *)v4 + 3) = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void (*sub_1AD383E18(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x530uLL);
  *a1 = v3;
  v3[165] = v1;
  sub_1ACFF64C0(v1, (uint64_t)v3, &qword_1ED2E2FE8);
  return sub_1AD146874;
}

uint64_t sub_1AD383E70@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 464);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 456);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD383ED8(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD383EF8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 464);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 456);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD383F80;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD383F80(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD383FE4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[55] = v4;
  a2[56] = v3;
  a2[57] = v6;
  a2[58] = v5;
  return result;
}

void (*sub_1AD384050(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[56];
  v6 = v1[57];
  v5 = v1[58];
  *v3 = v1[55];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD3840B4;
}

void sub_1AD3840B4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[55] = v6;
    v4[56] = v5;
    v4[57] = v7;
    v4[58] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[55] = v6;
    v4[56] = v5;
    v4[57] = v7;
    v4[58] = v3;
  }
  free(v2);
}

uint64_t sub_1AD38415C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1AD0040A0(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t sub_1AD38418C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD00412C(*(_QWORD *)v2, *(_QWORD *)(v2 + 8));
  *(_QWORD *)v2 = a1;
  *(_QWORD *)(v2 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD3841C0())()
{
  return nullsub_1;
}

uint64_t sub_1AD3841D0()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD3841D8(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_1AD384200())()
{
  return nullsub_1;
}

uint64_t sub_1AD384210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2883F8, (uint64_t (*)(void))sub_1AD28843C);
}

uint64_t sub_1AD384224(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD290FA8, (uint64_t (*)(void))sub_1AD290FEC);
}

uint64_t sub_1AD384238(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A1528, (uint64_t (*)(void))sub_1AD2A145C);
}

uint64_t sub_1AD38424C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A14E4, (uint64_t (*)(void))sub_1AD2A1418);
}

uint64_t sub_1AD384260(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD284068, (uint64_t (*)(void))sub_1AD2841D8);
}

uint64_t sub_1AD384274@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(a1, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a2 + 192) = v23;
    *(_OWORD *)(a2 + 208) = v4;
    *(_OWORD *)(a2 + 224) = v25;
    *(_QWORD *)(a2 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a2 + 128) = v19;
    *(_OWORD *)(a2 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a2 + 160) = v21;
    *(_OWORD *)(a2 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD38431C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACFF64C0(a1, a2, &qword_1ED2E2FE8);
}

uint64_t sub_1AD384344(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD384380@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[55];
  v3 = a1[56];
  v5 = a1[57];
  v4 = a1[58];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

ValueMetadata *type metadata accessor for EncodedAttachments()
{
  return &type metadata for EncodedAttachments;
}

uint64_t destroy for EncodedAttachments.Content(uint64_t a1)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  if ((*(_BYTE *)(a1 + 472) & 1) != 0)
    return sub_1AD00412C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)(a1 + 24))
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v3 = *(_QWORD *)(a1 + 80);
    v4 = *(_QWORD *)(a1 + 96);
    v5 = *(_QWORD *)(a1 + 112);
    v6 = *(_QWORD *)(a1 + 128);
    v7 = *(_QWORD *)(a1 + 160);
    v8 = *(_QWORD *)(a1 + 176);
    v9 = *(_QWORD *)(a1 + 192);
    if (v3 >> 1 != 0xFFFFFFFF
      || (v5 | (unint64_t)v4) > 1
      || (v7 & 0xFFFFFFFFFFFFFEFELL | v6 & 0xFFFFFFFFFFFF00FELL) != 0
      || (v9 | v8) >= 2)
    {
      sub_1AD00E8B0(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v3, *(_QWORD *)(a1 + 88), v4, *(_QWORD *)(a1 + 104), v5, *(_QWORD *)(a1 + 120), v6, *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), v7, *(_QWORD *)(a1 + 168), v8, *(_QWORD *)(a1 + 184), v9, *(_QWORD *)(a1 + 200),
        *(_QWORD *)(a1 + 208),
        *(_QWORD *)(a1 + 216),
        *(_QWORD *)(a1 + 224),
        *(_QWORD *)(a1 + 232),
        *(_QWORD *)(a1 + 240));
    }
  }
  v13 = *(_QWORD *)(a1 + 248);
  v14 = *(_QWORD *)(a1 + 256);
  v15 = a1 + 248;
  sub_1AD00E8B0(v13, v14, *(_QWORD *)(v15 + 16), *(_QWORD *)(v15 + 24), *(_QWORD *)(v15 + 32), *(_QWORD *)(v15 + 40), *(_QWORD *)(v15 + 48), *(_QWORD *)(v15 + 56), *(_QWORD *)(v15 + 64), *(_QWORD *)(v15 + 72), *(_QWORD *)(v15 + 80), *(_QWORD *)(v15 + 88), *(_QWORD *)(v15 + 96), *(_QWORD *)(v15 + 104), *(_QWORD *)(v15 + 112), *(_QWORD *)(v15 + 120), *(_QWORD *)(v15 + 128), *(_QWORD *)(v15 + 136), *(_QWORD *)(v15 + 144),
    *(_QWORD *)(v15 + 152),
    *(_QWORD *)(v15 + 160),
    *(_QWORD *)(v15 + 168),
    *(_QWORD *)(v15 + 176),
    *(_QWORD *)(v15 + 184));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EncodedAttachments.Content(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;

  if ((*(_BYTE *)(a2 + 472) & 1) != 0)
  {
    v5 = *(_QWORD *)a2;
    v4 = *(_QWORD *)(a2 + 8);
    sub_1AD0040A0(*(_QWORD *)a2, v4);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
    *(_BYTE *)(a1 + 472) = 1;
  }
  else
  {
    v6 = *(_QWORD *)(a2 + 24);
    if (v6)
    {
      v7 = *(_QWORD *)(a2 + 32);
      *(_QWORD *)(a1 + 24) = v6;
      *(_QWORD *)(a1 + 32) = v7;
      (**(void (***)(uint64_t, uint64_t))(v6 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
      v8 = *(_QWORD *)(a2 + 80);
      v9 = *(_QWORD *)(a2 + 96);
      v10 = *(_QWORD *)(a2 + 112);
      v11 = *(_QWORD *)(a2 + 192);
      if (v8 >> 1 != 0xFFFFFFFF
        || (v10 | (unint64_t)v9) > 1
        || *(_QWORD *)(a2 + 160) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a2 + 128) & 0xFFFFFFFFFFFF00FELL
        || (v11 | *(_QWORD *)(a2 + 176)) >= 2)
      {
        v25 = *(_QWORD *)(a2 + 64);
        v26 = *(_QWORD *)(a2 + 88);
        v44 = *(_QWORD *)(a2 + 120);
        v48 = *(_QWORD *)(a2 + 136);
        v54 = *(_QWORD *)(a2 + 144);
        v56 = *(_QWORD *)(a2 + 152);
        v58 = *(_QWORD *)(a2 + 168);
        v60 = *(_QWORD *)(a2 + 184);
        v62 = *(_QWORD *)(a2 + 200);
        v64 = *(_QWORD *)(a2 + 208);
        v66 = *(_QWORD *)(a2 + 216);
        v68 = *(_QWORD *)(a2 + 224);
        v70 = *(_QWORD *)(a2 + 232);
        v72 = *(_QWORD *)(a2 + 240);
        v50 = *(_QWORD *)(a2 + 160);
        v52 = *(_QWORD *)(a2 + 176);
        v27 = *(_QWORD *)(a2 + 56);
        v42 = *(_QWORD *)(a2 + 128);
        v28 = *(_QWORD *)(a2 + 72);
        v46 = *(_QWORD *)(a2 + 192);
        v29 = *(_QWORD *)(a2 + 104);
        sub_1AD00FEAC(v27, v25, v28, v8, v26, v9, v29, v10, v44, v42, v48, v54, v56, v50, v58, v52, v60, v11, v62,
          v64,
          v66,
          v68,
          v70,
          v72);
        *(_QWORD *)(a1 + 56) = v27;
        *(_QWORD *)(a1 + 64) = v25;
        *(_QWORD *)(a1 + 72) = v28;
        *(_QWORD *)(a1 + 80) = v8;
        *(_QWORD *)(a1 + 88) = v26;
        *(_QWORD *)(a1 + 96) = v9;
        *(_QWORD *)(a1 + 104) = v29;
        *(_QWORD *)(a1 + 112) = v10;
        *(_QWORD *)(a1 + 120) = v44;
        *(_QWORD *)(a1 + 128) = v42;
        *(_QWORD *)(a1 + 136) = v48;
        *(_QWORD *)(a1 + 144) = v54;
        *(_QWORD *)(a1 + 152) = v56;
        *(_QWORD *)(a1 + 160) = v50;
        *(_QWORD *)(a1 + 168) = v58;
        *(_QWORD *)(a1 + 176) = v52;
        *(_QWORD *)(a1 + 184) = v60;
        *(_QWORD *)(a1 + 192) = v46;
        *(_QWORD *)(a1 + 200) = v62;
        *(_QWORD *)(a1 + 208) = v64;
        *(_QWORD *)(a1 + 216) = v66;
        *(_QWORD *)(a1 + 224) = v68;
        *(_QWORD *)(a1 + 232) = v70;
        *(_QWORD *)(a1 + 240) = v72;
      }
      else
      {
        v12 = *(_OWORD *)(a2 + 200);
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
        *(_OWORD *)(a1 + 200) = v12;
        v13 = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 232) = v13;
        v14 = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = v14;
        v15 = *(_OWORD *)(a2 + 168);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 168) = v15;
        v16 = *(_OWORD *)(a2 + 72);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
        *(_OWORD *)(a1 + 72) = v16;
        v17 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v17;
      }
    }
    else
    {
      v18 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v18;
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      v19 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v19;
      v20 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v20;
      v21 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v21;
      v22 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v22;
      v23 = *(_OWORD *)(a2 + 16);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v23;
      v24 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
      *(_OWORD *)(a1 + 48) = v24;
    }
    v30 = *(_QWORD *)(a2 + 288);
    v31 = *(_QWORD *)(a2 + 296);
    v43 = *(_QWORD *)(a2 + 312);
    v45 = *(_QWORD *)(a2 + 320);
    v47 = *(_QWORD *)(a2 + 328);
    v49 = *(_QWORD *)(a2 + 336);
    v51 = *(_QWORD *)(a2 + 344);
    v53 = *(_QWORD *)(a2 + 352);
    v55 = *(_QWORD *)(a2 + 360);
    v57 = *(_QWORD *)(a2 + 368);
    v59 = *(_QWORD *)(a2 + 376);
    v61 = *(_QWORD *)(a2 + 384);
    v63 = *(_QWORD *)(a2 + 392);
    v65 = *(_QWORD *)(a2 + 400);
    v67 = *(_QWORD *)(a2 + 408);
    v69 = *(_QWORD *)(a2 + 416);
    v71 = *(_QWORD *)(a2 + 424);
    v73 = *(_QWORD *)(a2 + 432);
    v32 = *(_QWORD *)(a2 + 248);
    v33 = *(_QWORD *)(a2 + 256);
    v34 = *(_QWORD *)(a2 + 264);
    v35 = *(_QWORD *)(a2 + 272);
    v36 = *(_QWORD *)(a2 + 280);
    v37 = *(_QWORD *)(a2 + 304);
    sub_1AD00FEAC(v32, v33, v34, v35, v36, v30, v31, v37, v43, v45, v47, v49, v51, v53, v55, v57, v59, v61, v63,
      v65,
      v67,
      v69,
      v71,
      v73);
    *(_QWORD *)(a1 + 248) = v32;
    *(_QWORD *)(a1 + 256) = v33;
    *(_QWORD *)(a1 + 264) = v34;
    *(_QWORD *)(a1 + 272) = v35;
    *(_QWORD *)(a1 + 280) = v36;
    *(_QWORD *)(a1 + 288) = v30;
    *(_QWORD *)(a1 + 296) = v31;
    *(_QWORD *)(a1 + 304) = v37;
    *(_QWORD *)(a1 + 312) = v43;
    *(_QWORD *)(a1 + 320) = v45;
    *(_QWORD *)(a1 + 328) = v47;
    *(_QWORD *)(a1 + 336) = v49;
    *(_QWORD *)(a1 + 344) = v51;
    *(_QWORD *)(a1 + 352) = v53;
    *(_QWORD *)(a1 + 360) = v55;
    *(_QWORD *)(a1 + 368) = v57;
    *(_QWORD *)(a1 + 376) = v59;
    *(_QWORD *)(a1 + 384) = v61;
    *(_QWORD *)(a1 + 392) = v63;
    *(_QWORD *)(a1 + 400) = v65;
    *(_QWORD *)(a1 + 408) = v67;
    *(_QWORD *)(a1 + 416) = v69;
    *(_QWORD *)(a1 + 424) = v71;
    *(_QWORD *)(a1 + 432) = v73;
    v38 = *(_QWORD *)(a2 + 448);
    *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
    *(_QWORD *)(a1 + 448) = v38;
    v39 = *(_QWORD *)(a2 + 456);
    v40 = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 456) = v39;
    *(_QWORD *)(a1 + 464) = v40;
    *(_BYTE *)(a1 + 472) = 0;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for EncodedAttachments.Content(uint64_t a1, __int128 *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  unint64_t v79;

  if ((__int128 *)a1 != a2)
  {
    sub_1AD384D0C(a1);
    if ((*((_BYTE *)a2 + 472) & 1) != 0)
    {
      v5 = *(_QWORD *)a2;
      v4 = *((_QWORD *)a2 + 1);
      sub_1AD0040A0(v5, v4);
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v4;
      *(_BYTE *)(a1 + 472) = 1;
    }
    else
    {
      v6 = *((_QWORD *)a2 + 3);
      if (v6)
      {
        *(_QWORD *)(a1 + 24) = v6;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v6 - 8))(a1, a2);
        v7 = *((_QWORD *)a2 + 5);
        *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
        *(_QWORD *)(a1 + 40) = v7;
        v8 = *((_QWORD *)a2 + 10);
        v9 = *((_QWORD *)a2 + 12);
        v10 = *((_QWORD *)a2 + 14);
        v11 = *((_QWORD *)a2 + 22);
        if (v8 >> 1 != 0xFFFFFFFF
          || (v10 | (unint64_t)v9) > 1
          || a2[10] & 0xFFFFFFFFFFFFFEFELL | (_QWORD)a2[8] & 0xFFFFFFFFFFFF00FELL
          || (*((_QWORD *)a2 + 24) | (unint64_t)v11) >= 2)
        {
          v33 = *((_QWORD *)a2 + 7);
          v34 = *((_QWORD *)a2 + 13);
          v50 = *((_QWORD *)a2 + 15);
          v56 = *((_QWORD *)a2 + 17);
          v58 = *((_QWORD *)a2 + 18);
          v62 = *((_QWORD *)a2 + 19);
          v64 = *((_QWORD *)a2 + 21);
          v66 = *((_QWORD *)a2 + 23);
          v68 = *((_QWORD *)a2 + 25);
          v70 = *((_QWORD *)a2 + 26);
          v72 = *((_QWORD *)a2 + 27);
          v74 = *((_QWORD *)a2 + 28);
          v76 = *((_QWORD *)a2 + 29);
          v78 = *((_QWORD *)a2 + 30);
          v54 = *((_QWORD *)a2 + 20);
          v35 = *((_QWORD *)a2 + 8);
          v60 = *((_QWORD *)a2 + 24);
          v48 = *((_QWORD *)a2 + 16);
          v36 = *((_QWORD *)a2 + 9);
          v37 = *((_QWORD *)a2 + 11);
          v52 = *((_QWORD *)a2 + 22);
          sub_1AD00FEAC(v33, v35, v36, v8, v37, v9, v34, v10, v50, v48, v56, v58, v62, v54, v64, v11, v66, v60, v68,
            v70,
            v72,
            v74,
            v76,
            v78);
          *(_QWORD *)(a1 + 56) = v33;
          *(_QWORD *)(a1 + 64) = v35;
          *(_QWORD *)(a1 + 72) = v36;
          *(_QWORD *)(a1 + 80) = v8;
          *(_QWORD *)(a1 + 88) = v37;
          *(_QWORD *)(a1 + 96) = v9;
          *(_QWORD *)(a1 + 104) = v34;
          *(_QWORD *)(a1 + 112) = v10;
          *(_QWORD *)(a1 + 120) = v50;
          *(_QWORD *)(a1 + 128) = v48;
          *(_QWORD *)(a1 + 136) = v56;
          *(_QWORD *)(a1 + 144) = v58;
          *(_QWORD *)(a1 + 152) = v62;
          *(_QWORD *)(a1 + 160) = v54;
          *(_QWORD *)(a1 + 168) = v64;
          *(_QWORD *)(a1 + 176) = v52;
          *(_QWORD *)(a1 + 184) = v66;
          *(_QWORD *)(a1 + 192) = v60;
          *(_QWORD *)(a1 + 200) = v68;
          *(_QWORD *)(a1 + 208) = v70;
          *(_QWORD *)(a1 + 216) = v72;
          *(_QWORD *)(a1 + 224) = v74;
          *(_QWORD *)(a1 + 232) = v76;
          *(_QWORD *)(a1 + 240) = v78;
        }
        else
        {
          v12 = *(__int128 *)((char *)a2 + 56);
          v13 = *(__int128 *)((char *)a2 + 72);
          v14 = *(__int128 *)((char *)a2 + 104);
          *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
          *(_OWORD *)(a1 + 104) = v14;
          *(_OWORD *)(a1 + 56) = v12;
          *(_OWORD *)(a1 + 72) = v13;
          v15 = *(__int128 *)((char *)a2 + 120);
          v16 = *(__int128 *)((char *)a2 + 136);
          v17 = *(__int128 *)((char *)a2 + 168);
          *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
          *(_OWORD *)(a1 + 168) = v17;
          *(_OWORD *)(a1 + 120) = v15;
          *(_OWORD *)(a1 + 136) = v16;
          v18 = *(__int128 *)((char *)a2 + 184);
          v19 = *(__int128 *)((char *)a2 + 200);
          v20 = *(__int128 *)((char *)a2 + 232);
          *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
          *(_OWORD *)(a1 + 232) = v20;
          *(_OWORD *)(a1 + 184) = v18;
          *(_OWORD *)(a1 + 200) = v19;
        }
      }
      else
      {
        v21 = *a2;
        v22 = a2[1];
        v23 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v23;
        *(_OWORD *)a1 = v21;
        *(_OWORD *)(a1 + 16) = v22;
        v24 = a2[4];
        v25 = a2[5];
        v26 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v26;
        *(_OWORD *)(a1 + 64) = v24;
        *(_OWORD *)(a1 + 80) = v25;
        v27 = a2[8];
        v28 = a2[9];
        v29 = a2[11];
        *(_OWORD *)(a1 + 160) = a2[10];
        *(_OWORD *)(a1 + 176) = v29;
        *(_OWORD *)(a1 + 128) = v27;
        *(_OWORD *)(a1 + 144) = v28;
        v30 = a2[12];
        v31 = a2[13];
        v32 = a2[14];
        *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
        *(_OWORD *)(a1 + 208) = v31;
        *(_OWORD *)(a1 + 224) = v32;
        *(_OWORD *)(a1 + 192) = v30;
      }
      v38 = *((_QWORD *)a2 + 36);
      v39 = *((_QWORD *)a2 + 37);
      v49 = *((_QWORD *)a2 + 39);
      v51 = *((_QWORD *)a2 + 40);
      v53 = *((_QWORD *)a2 + 41);
      v55 = *((_QWORD *)a2 + 42);
      v57 = *((_QWORD *)a2 + 43);
      v59 = *((_QWORD *)a2 + 44);
      v61 = *((_QWORD *)a2 + 45);
      v63 = *((_QWORD *)a2 + 46);
      v65 = *((_QWORD *)a2 + 47);
      v67 = *((_QWORD *)a2 + 48);
      v69 = *((_QWORD *)a2 + 49);
      v71 = *((_QWORD *)a2 + 50);
      v73 = *((_QWORD *)a2 + 51);
      v75 = *((_QWORD *)a2 + 52);
      v77 = *((_QWORD *)a2 + 53);
      v79 = *((_QWORD *)a2 + 54);
      v40 = *((_QWORD *)a2 + 31);
      v41 = *((_QWORD *)a2 + 32);
      v42 = *((_QWORD *)a2 + 33);
      v43 = *((_QWORD *)a2 + 34);
      v44 = *((_QWORD *)a2 + 35);
      v45 = *((_QWORD *)a2 + 38);
      sub_1AD00FEAC(v40, v41, v42, v43, v44, v38, v39, v45, v49, v51, v53, v55, v57, v59, v61, v63, v65, v67, v69,
        v71,
        v73,
        v75,
        v77,
        v79);
      *(_QWORD *)(a1 + 248) = v40;
      *(_QWORD *)(a1 + 256) = v41;
      *(_QWORD *)(a1 + 264) = v42;
      *(_QWORD *)(a1 + 272) = v43;
      *(_QWORD *)(a1 + 280) = v44;
      *(_QWORD *)(a1 + 288) = v38;
      *(_QWORD *)(a1 + 296) = v39;
      *(_QWORD *)(a1 + 304) = v45;
      *(_QWORD *)(a1 + 312) = v49;
      *(_QWORD *)(a1 + 320) = v51;
      *(_QWORD *)(a1 + 328) = v53;
      *(_QWORD *)(a1 + 336) = v55;
      *(_QWORD *)(a1 + 344) = v57;
      *(_QWORD *)(a1 + 352) = v59;
      *(_QWORD *)(a1 + 360) = v61;
      *(_QWORD *)(a1 + 368) = v63;
      *(_QWORD *)(a1 + 376) = v65;
      *(_QWORD *)(a1 + 384) = v67;
      *(_QWORD *)(a1 + 392) = v69;
      *(_QWORD *)(a1 + 400) = v71;
      *(_QWORD *)(a1 + 408) = v73;
      *(_QWORD *)(a1 + 416) = v75;
      *(_QWORD *)(a1 + 424) = v77;
      *(_QWORD *)(a1 + 432) = v79;
      v46 = *((_QWORD *)a2 + 56);
      *(_QWORD *)(a1 + 440) = *((_QWORD *)a2 + 55);
      *(_QWORD *)(a1 + 448) = v46;
      *(_QWORD *)(a1 + 456) = *((_QWORD *)a2 + 57);
      *(_QWORD *)(a1 + 464) = *((_QWORD *)a2 + 58);
      *(_BYTE *)(a1 + 472) = 0;
      swift_retain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t sub_1AD384D0C(uint64_t a1)
{
  destroy for EncodedAttachments.EncodedContent(a1);
  return a1;
}

void *__swift_memcpy473_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1D9uLL);
}

void *assignWithTake for EncodedAttachments.Content(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_1AD384D0C((uint64_t)a1);
    memcpy(a1, a2, 0x1D9uLL);
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for EncodedAttachments.Content(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 473))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 472);
  if (v3 <= 1)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EncodedAttachments.Content(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 472) = 0;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 473) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 473) = 0;
    if (a2)
      *(_BYTE *)(result + 472) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedAttachments.Content()
{
  return &type metadata for EncodedAttachments.Content;
}

uint64_t destroy for EncodedAttachments.EncodedContent(uint64_t a1)
{
  unsigned int v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *(unsigned __int8 *)(a1 + 472);
  if (v2 >= 2)
    v2 = *(_DWORD *)a1 + 2;
  if (v2 == 1)
    return sub_1AD00412C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  if (*(_QWORD *)(a1 + 24))
  {
    __swift_destroy_boxed_opaque_existential_1(a1);
    v4 = *(_QWORD *)(a1 + 80);
    v5 = *(_QWORD *)(a1 + 96);
    v6 = *(_QWORD *)(a1 + 112);
    v7 = *(_QWORD *)(a1 + 128);
    v8 = *(_QWORD *)(a1 + 160);
    v9 = *(_QWORD *)(a1 + 176);
    v10 = *(_QWORD *)(a1 + 192);
    if (v4 >> 1 != 0xFFFFFFFF
      || (v6 | (unint64_t)v5) > 1
      || v8 & 0xFFFFFFFFFFFFFEFELL | v7 & 0xFFFFFFFFFFFF00FELL
      || (v10 | v9) >= 2)
    {
      sub_1AD00E8B0(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v4, *(_QWORD *)(a1 + 88), v5, *(_QWORD *)(a1 + 104), v6, *(_QWORD *)(a1 + 120), v7, *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), v8, *(_QWORD *)(a1 + 168), v9, *(_QWORD *)(a1 + 184), v10, *(_QWORD *)(a1 + 200),
        *(_QWORD *)(a1 + 208),
        *(_QWORD *)(a1 + 216),
        *(_QWORD *)(a1 + 224),
        *(_QWORD *)(a1 + 232),
        *(_QWORD *)(a1 + 240));
    }
  }
  v11 = *(_QWORD *)(a1 + 248);
  v12 = *(_QWORD *)(a1 + 256);
  v13 = a1 + 248;
  sub_1AD00E8B0(v11, v12, *(_QWORD *)(v13 + 16), *(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32), *(_QWORD *)(v13 + 40), *(_QWORD *)(v13 + 48), *(_QWORD *)(v13 + 56), *(_QWORD *)(v13 + 64), *(_QWORD *)(v13 + 72), *(_QWORD *)(v13 + 80), *(_QWORD *)(v13 + 88), *(_QWORD *)(v13 + 96), *(_QWORD *)(v13 + 104), *(_QWORD *)(v13 + 112), *(_QWORD *)(v13 + 120), *(_QWORD *)(v13 + 128), *(_QWORD *)(v13 + 136), *(_QWORD *)(v13 + 144),
    *(_QWORD *)(v13 + 152),
    *(_QWORD *)(v13 + 160),
    *(_QWORD *)(v13 + 168),
    *(_QWORD *)(v13 + 176),
    *(_QWORD *)(v13 + 184));
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EncodedAttachments.EncodedContent(uint64_t a1, uint64_t *a2)
{
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;

  v4 = *((unsigned __int8 *)a2 + 472);
  if (v4 >= 2)
    v4 = *(_DWORD *)a2 + 2;
  if (v4 == 1)
  {
    v6 = *a2;
    v5 = a2[1];
    sub_1AD0040A0(*a2, v5);
    *(_QWORD *)a1 = v6;
    *(_QWORD *)(a1 + 8) = v5;
    *(_BYTE *)(a1 + 472) = 1;
  }
  else
  {
    v7 = a2[3];
    if (v7)
    {
      v8 = a2[4];
      *(_QWORD *)(a1 + 24) = v7;
      *(_QWORD *)(a1 + 32) = v8;
      (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
      *(_QWORD *)(a1 + 40) = a2[5];
      *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
      v9 = a2[10];
      v10 = a2[12];
      v11 = a2[14];
      v12 = a2[24];
      if (v9 >> 1 != 0xFFFFFFFF
        || (v11 | (unint64_t)v10) > 1
        || a2[20] & 0xFFFFFFFFFFFFFEFELL | a2[16] & 0xFFFFFFFFFFFF00FELL
        || (v12 | a2[22]) >= 2)
      {
        v26 = a2[8];
        v27 = a2[11];
        v45 = a2[15];
        v49 = a2[17];
        v55 = a2[18];
        v57 = a2[19];
        v59 = a2[21];
        v61 = a2[23];
        v63 = a2[25];
        v65 = a2[26];
        v67 = a2[27];
        v69 = a2[28];
        v71 = a2[29];
        v73 = a2[30];
        v51 = a2[20];
        v53 = a2[22];
        v28 = a2[7];
        v43 = a2[16];
        v29 = a2[9];
        v47 = a2[24];
        v30 = a2[13];
        sub_1AD00FEAC(v28, v26, v29, v9, v27, v10, v30, v11, v45, v43, v49, v55, v57, v51, v59, v53, v61, v12, v63,
          v65,
          v67,
          v69,
          v71,
          v73);
        *(_QWORD *)(a1 + 56) = v28;
        *(_QWORD *)(a1 + 64) = v26;
        *(_QWORD *)(a1 + 72) = v29;
        *(_QWORD *)(a1 + 80) = v9;
        *(_QWORD *)(a1 + 88) = v27;
        *(_QWORD *)(a1 + 96) = v10;
        *(_QWORD *)(a1 + 104) = v30;
        *(_QWORD *)(a1 + 112) = v11;
        *(_QWORD *)(a1 + 120) = v45;
        *(_QWORD *)(a1 + 128) = v43;
        *(_QWORD *)(a1 + 136) = v49;
        *(_QWORD *)(a1 + 144) = v55;
        *(_QWORD *)(a1 + 152) = v57;
        *(_QWORD *)(a1 + 160) = v51;
        *(_QWORD *)(a1 + 168) = v59;
        *(_QWORD *)(a1 + 176) = v53;
        *(_QWORD *)(a1 + 184) = v61;
        *(_QWORD *)(a1 + 192) = v47;
        *(_QWORD *)(a1 + 200) = v63;
        *(_QWORD *)(a1 + 208) = v65;
        *(_QWORD *)(a1 + 216) = v67;
        *(_QWORD *)(a1 + 224) = v69;
        *(_QWORD *)(a1 + 232) = v71;
        *(_QWORD *)(a1 + 240) = v73;
      }
      else
      {
        v13 = *(_OWORD *)(a2 + 25);
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 23);
        *(_OWORD *)(a1 + 200) = v13;
        v14 = *(_OWORD *)(a2 + 29);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
        *(_OWORD *)(a1 + 232) = v14;
        v15 = *(_OWORD *)(a2 + 17);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 15);
        *(_OWORD *)(a1 + 136) = v15;
        v16 = *(_OWORD *)(a2 + 21);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 19);
        *(_OWORD *)(a1 + 168) = v16;
        v17 = *(_OWORD *)(a2 + 9);
        *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 7);
        *(_OWORD *)(a1 + 72) = v17;
        v18 = *(_OWORD *)(a2 + 13);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 11);
        *(_OWORD *)(a1 + 104) = v18;
      }
    }
    else
    {
      v19 = *((_OWORD *)a2 + 13);
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_OWORD *)(a1 + 208) = v19;
      *(_OWORD *)(a1 + 224) = *((_OWORD *)a2 + 14);
      *(_QWORD *)(a1 + 240) = a2[30];
      v20 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v20;
      v21 = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 176) = v21;
      v22 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v22;
      v23 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v23;
      v24 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v24;
      v25 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v25;
    }
    v31 = a2[36];
    v32 = a2[37];
    v44 = a2[39];
    v46 = a2[40];
    v48 = a2[41];
    v50 = a2[42];
    v52 = a2[43];
    v54 = a2[44];
    v56 = a2[45];
    v58 = a2[46];
    v60 = a2[47];
    v62 = a2[48];
    v64 = a2[49];
    v66 = a2[50];
    v68 = a2[51];
    v70 = a2[52];
    v72 = a2[53];
    v74 = a2[54];
    v33 = a2[31];
    v34 = a2[32];
    v35 = a2[33];
    v36 = a2[34];
    v37 = a2[35];
    v38 = a2[38];
    sub_1AD00FEAC(v33, v34, v35, v36, v37, v31, v32, v38, v44, v46, v48, v50, v52, v54, v56, v58, v60, v62, v64,
      v66,
      v68,
      v70,
      v72,
      v74);
    *(_QWORD *)(a1 + 248) = v33;
    *(_QWORD *)(a1 + 256) = v34;
    *(_QWORD *)(a1 + 264) = v35;
    *(_QWORD *)(a1 + 272) = v36;
    *(_QWORD *)(a1 + 280) = v37;
    *(_QWORD *)(a1 + 288) = v31;
    *(_QWORD *)(a1 + 296) = v32;
    *(_QWORD *)(a1 + 304) = v38;
    *(_QWORD *)(a1 + 312) = v44;
    *(_QWORD *)(a1 + 320) = v46;
    *(_QWORD *)(a1 + 328) = v48;
    *(_QWORD *)(a1 + 336) = v50;
    *(_QWORD *)(a1 + 344) = v52;
    *(_QWORD *)(a1 + 352) = v54;
    *(_QWORD *)(a1 + 360) = v56;
    *(_QWORD *)(a1 + 368) = v58;
    *(_QWORD *)(a1 + 376) = v60;
    *(_QWORD *)(a1 + 384) = v62;
    *(_QWORD *)(a1 + 392) = v64;
    *(_QWORD *)(a1 + 400) = v66;
    *(_QWORD *)(a1 + 408) = v68;
    *(_QWORD *)(a1 + 416) = v70;
    *(_QWORD *)(a1 + 424) = v72;
    *(_QWORD *)(a1 + 432) = v74;
    v39 = a2[56];
    *(_QWORD *)(a1 + 440) = a2[55];
    *(_QWORD *)(a1 + 448) = v39;
    v40 = a2[57];
    v41 = a2[58];
    *(_QWORD *)(a1 + 456) = v40;
    *(_QWORD *)(a1 + 464) = v41;
    *(_BYTE *)(a1 + 472) = 0;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for EncodedAttachments.EncodedContent(uint64_t a1, __int128 *a2)
{
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;

  if ((__int128 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 472);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      sub_1AD00412C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    }
    else
    {
      if (*(_QWORD *)(a1 + 24))
      {
        __swift_destroy_boxed_opaque_existential_1(a1);
        v5 = *(_QWORD *)(a1 + 80);
        v6 = *(_QWORD *)(a1 + 96);
        v7 = *(_QWORD *)(a1 + 112);
        v8 = *(_QWORD *)(a1 + 128);
        v9 = *(_QWORD *)(a1 + 160);
        v10 = *(_QWORD *)(a1 + 176);
        v11 = *(_QWORD *)(a1 + 192);
        if (v5 >> 1 != 0xFFFFFFFF
          || (v7 | (unint64_t)v6) > 1
          || v9 & 0xFFFFFFFFFFFFFEFELL | v8 & 0xFFFFFFFFFFFF00FELL
          || (v11 | v10) >= 2)
        {
          sub_1AD00E8B0(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v5, *(_QWORD *)(a1 + 88), v6, *(_QWORD *)(a1 + 104), v7, *(_QWORD *)(a1 + 120), v8, *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), v9, *(_QWORD *)(a1 + 168), v10, *(_QWORD *)(a1 + 184), v11, *(_QWORD *)(a1 + 200),
            *(_QWORD *)(a1 + 208),
            *(_QWORD *)(a1 + 216),
            *(_QWORD *)(a1 + 224),
            *(_QWORD *)(a1 + 232),
            *(_QWORD *)(a1 + 240));
        }
      }
      sub_1AD00E8B0(*(_QWORD *)(a1 + 248), *(_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 264), *(_QWORD *)(a1 + 272), *(_QWORD *)(a1 + 280), *(_QWORD *)(a1 + 288), *(_QWORD *)(a1 + 296), *(_QWORD *)(a1 + 304), *(_QWORD *)(a1 + 312), *(_QWORD *)(a1 + 320), *(_QWORD *)(a1 + 328), *(_QWORD *)(a1 + 336), *(_QWORD *)(a1 + 344), *(_QWORD *)(a1 + 352), *(_QWORD *)(a1 + 360), *(_QWORD *)(a1 + 368), *(_QWORD *)(a1 + 376), *(_QWORD *)(a1 + 384), *(_QWORD *)(a1 + 392),
        *(_QWORD *)(a1 + 400),
        *(_QWORD *)(a1 + 408),
        *(_QWORD *)(a1 + 416),
        *(_QWORD *)(a1 + 424),
        *(_QWORD *)(a1 + 432));
      swift_release();
      swift_bridgeObjectRelease();
    }
    v12 = *((unsigned __int8 *)a2 + 472);
    if (v12 >= 2)
      v12 = *(_DWORD *)a2 + 2;
    if (v12 == 1)
    {
      v14 = *(_QWORD *)a2;
      v13 = *((_QWORD *)a2 + 1);
      sub_1AD0040A0(v14, v13);
      *(_QWORD *)a1 = v14;
      *(_QWORD *)(a1 + 8) = v13;
      *(_BYTE *)(a1 + 472) = 1;
    }
    else
    {
      v15 = *((_QWORD *)a2 + 3);
      if (v15)
      {
        *(_QWORD *)(a1 + 24) = v15;
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        (**(void (***)(uint64_t, __int128 *))(v15 - 8))(a1, a2);
        v16 = *((_QWORD *)a2 + 5);
        *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
        *(_QWORD *)(a1 + 40) = v16;
        v17 = *((_QWORD *)a2 + 10);
        v18 = *((_QWORD *)a2 + 12);
        v19 = *((_QWORD *)a2 + 14);
        v20 = *((_QWORD *)a2 + 22);
        if (v17 >> 1 != 0xFFFFFFFF
          || (v19 | (unint64_t)v18) > 1
          || a2[10] & 0xFFFFFFFFFFFFFEFELL | (_QWORD)a2[8] & 0xFFFFFFFFFFFF00FELL
          || (*((_QWORD *)a2 + 24) | (unint64_t)v20) >= 2)
        {
          v42 = *((_QWORD *)a2 + 7);
          v43 = *((_QWORD *)a2 + 13);
          v59 = *((_QWORD *)a2 + 15);
          v65 = *((_QWORD *)a2 + 17);
          v67 = *((_QWORD *)a2 + 18);
          v71 = *((_QWORD *)a2 + 19);
          v73 = *((_QWORD *)a2 + 21);
          v75 = *((_QWORD *)a2 + 23);
          v77 = *((_QWORD *)a2 + 25);
          v79 = *((_QWORD *)a2 + 26);
          v81 = *((_QWORD *)a2 + 27);
          v83 = *((_QWORD *)a2 + 28);
          v85 = *((_QWORD *)a2 + 29);
          v87 = *((_QWORD *)a2 + 30);
          v63 = *((_QWORD *)a2 + 20);
          v44 = *((_QWORD *)a2 + 8);
          v69 = *((_QWORD *)a2 + 24);
          v57 = *((_QWORD *)a2 + 16);
          v45 = *((_QWORD *)a2 + 9);
          v46 = *((_QWORD *)a2 + 11);
          v61 = *((_QWORD *)a2 + 22);
          sub_1AD00FEAC(v42, v44, v45, v17, v46, v18, v43, v19, v59, v57, v65, v67, v71, v63, v73, v20, v75, v69, v77,
            v79,
            v81,
            v83,
            v85,
            v87);
          *(_QWORD *)(a1 + 56) = v42;
          *(_QWORD *)(a1 + 64) = v44;
          *(_QWORD *)(a1 + 72) = v45;
          *(_QWORD *)(a1 + 80) = v17;
          *(_QWORD *)(a1 + 88) = v46;
          *(_QWORD *)(a1 + 96) = v18;
          *(_QWORD *)(a1 + 104) = v43;
          *(_QWORD *)(a1 + 112) = v19;
          *(_QWORD *)(a1 + 120) = v59;
          *(_QWORD *)(a1 + 128) = v57;
          *(_QWORD *)(a1 + 136) = v65;
          *(_QWORD *)(a1 + 144) = v67;
          *(_QWORD *)(a1 + 152) = v71;
          *(_QWORD *)(a1 + 160) = v63;
          *(_QWORD *)(a1 + 168) = v73;
          *(_QWORD *)(a1 + 176) = v61;
          *(_QWORD *)(a1 + 184) = v75;
          *(_QWORD *)(a1 + 192) = v69;
          *(_QWORD *)(a1 + 200) = v77;
          *(_QWORD *)(a1 + 208) = v79;
          *(_QWORD *)(a1 + 216) = v81;
          *(_QWORD *)(a1 + 224) = v83;
          *(_QWORD *)(a1 + 232) = v85;
          *(_QWORD *)(a1 + 240) = v87;
        }
        else
        {
          v21 = *(__int128 *)((char *)a2 + 56);
          v22 = *(__int128 *)((char *)a2 + 72);
          v23 = *(__int128 *)((char *)a2 + 104);
          *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
          *(_OWORD *)(a1 + 104) = v23;
          *(_OWORD *)(a1 + 56) = v21;
          *(_OWORD *)(a1 + 72) = v22;
          v24 = *(__int128 *)((char *)a2 + 120);
          v25 = *(__int128 *)((char *)a2 + 136);
          v26 = *(__int128 *)((char *)a2 + 168);
          *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
          *(_OWORD *)(a1 + 168) = v26;
          *(_OWORD *)(a1 + 120) = v24;
          *(_OWORD *)(a1 + 136) = v25;
          v27 = *(__int128 *)((char *)a2 + 184);
          v28 = *(__int128 *)((char *)a2 + 200);
          v29 = *(__int128 *)((char *)a2 + 232);
          *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
          *(_OWORD *)(a1 + 232) = v29;
          *(_OWORD *)(a1 + 184) = v27;
          *(_OWORD *)(a1 + 200) = v28;
        }
      }
      else
      {
        v30 = *a2;
        v31 = a2[1];
        v32 = a2[3];
        *(_OWORD *)(a1 + 32) = a2[2];
        *(_OWORD *)(a1 + 48) = v32;
        *(_OWORD *)a1 = v30;
        *(_OWORD *)(a1 + 16) = v31;
        v33 = a2[4];
        v34 = a2[5];
        v35 = a2[7];
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_OWORD *)(a1 + 112) = v35;
        *(_OWORD *)(a1 + 64) = v33;
        *(_OWORD *)(a1 + 80) = v34;
        v36 = a2[8];
        v37 = a2[9];
        v38 = a2[11];
        *(_OWORD *)(a1 + 160) = a2[10];
        *(_OWORD *)(a1 + 176) = v38;
        *(_OWORD *)(a1 + 128) = v36;
        *(_OWORD *)(a1 + 144) = v37;
        v39 = a2[12];
        v40 = a2[13];
        v41 = a2[14];
        *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
        *(_OWORD *)(a1 + 208) = v40;
        *(_OWORD *)(a1 + 224) = v41;
        *(_OWORD *)(a1 + 192) = v39;
      }
      v47 = *((_QWORD *)a2 + 36);
      v48 = *((_QWORD *)a2 + 37);
      v58 = *((_QWORD *)a2 + 39);
      v60 = *((_QWORD *)a2 + 40);
      v62 = *((_QWORD *)a2 + 41);
      v64 = *((_QWORD *)a2 + 42);
      v66 = *((_QWORD *)a2 + 43);
      v68 = *((_QWORD *)a2 + 44);
      v70 = *((_QWORD *)a2 + 45);
      v72 = *((_QWORD *)a2 + 46);
      v74 = *((_QWORD *)a2 + 47);
      v76 = *((_QWORD *)a2 + 48);
      v78 = *((_QWORD *)a2 + 49);
      v80 = *((_QWORD *)a2 + 50);
      v82 = *((_QWORD *)a2 + 51);
      v84 = *((_QWORD *)a2 + 52);
      v86 = *((_QWORD *)a2 + 53);
      v88 = *((_QWORD *)a2 + 54);
      v49 = *((_QWORD *)a2 + 31);
      v50 = *((_QWORD *)a2 + 32);
      v51 = *((_QWORD *)a2 + 33);
      v52 = *((_QWORD *)a2 + 34);
      v53 = *((_QWORD *)a2 + 35);
      v54 = *((_QWORD *)a2 + 38);
      sub_1AD00FEAC(v49, v50, v51, v52, v53, v47, v48, v54, v58, v60, v62, v64, v66, v68, v70, v72, v74, v76, v78,
        v80,
        v82,
        v84,
        v86,
        v88);
      *(_QWORD *)(a1 + 248) = v49;
      *(_QWORD *)(a1 + 256) = v50;
      *(_QWORD *)(a1 + 264) = v51;
      *(_QWORD *)(a1 + 272) = v52;
      *(_QWORD *)(a1 + 280) = v53;
      *(_QWORD *)(a1 + 288) = v47;
      *(_QWORD *)(a1 + 296) = v48;
      *(_QWORD *)(a1 + 304) = v54;
      *(_QWORD *)(a1 + 312) = v58;
      *(_QWORD *)(a1 + 320) = v60;
      *(_QWORD *)(a1 + 328) = v62;
      *(_QWORD *)(a1 + 336) = v64;
      *(_QWORD *)(a1 + 344) = v66;
      *(_QWORD *)(a1 + 352) = v68;
      *(_QWORD *)(a1 + 360) = v70;
      *(_QWORD *)(a1 + 368) = v72;
      *(_QWORD *)(a1 + 376) = v74;
      *(_QWORD *)(a1 + 384) = v76;
      *(_QWORD *)(a1 + 392) = v78;
      *(_QWORD *)(a1 + 400) = v80;
      *(_QWORD *)(a1 + 408) = v82;
      *(_QWORD *)(a1 + 416) = v84;
      *(_QWORD *)(a1 + 424) = v86;
      *(_QWORD *)(a1 + 432) = v88;
      v55 = *((_QWORD *)a2 + 56);
      *(_QWORD *)(a1 + 440) = *((_QWORD *)a2 + 55);
      *(_QWORD *)(a1 + 448) = v55;
      *(_QWORD *)(a1 + 456) = *((_QWORD *)a2 + 57);
      *(_QWORD *)(a1 + 464) = *((_QWORD *)a2 + 58);
      *(_BYTE *)(a1 + 472) = 0;
      swift_retain();
      swift_bridgeObjectRetain();
    }
  }
  return a1;
}

uint64_t assignWithTake for EncodedAttachments.EncodedContent(uint64_t a1, unsigned __int8 *a2)
{
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;

  if ((unsigned __int8 *)a1 != a2)
  {
    v4 = *(unsigned __int8 *)(a1 + 472);
    if (v4 >= 2)
      v4 = *(_DWORD *)a1 + 2;
    if (v4 == 1)
    {
      sub_1AD00412C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
    }
    else
    {
      if (*(_QWORD *)(a1 + 24))
      {
        __swift_destroy_boxed_opaque_existential_1(a1);
        v5 = *(_QWORD *)(a1 + 80);
        v6 = *(_QWORD *)(a1 + 96);
        v7 = *(_QWORD *)(a1 + 112);
        v8 = *(_QWORD *)(a1 + 128);
        v9 = *(_QWORD *)(a1 + 160);
        v10 = *(_QWORD *)(a1 + 176);
        v11 = *(_QWORD *)(a1 + 192);
        if (v5 >> 1 != 0xFFFFFFFF
          || (v7 | (unint64_t)v6) > 1
          || v9 & 0xFFFFFFFFFFFFFEFELL | v8 & 0xFFFFFFFFFFFF00FELL
          || (v11 | v10) >= 2)
        {
          sub_1AD00E8B0(*(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), v5, *(_QWORD *)(a1 + 88), v6, *(_QWORD *)(a1 + 104), v7, *(_QWORD *)(a1 + 120), v8, *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144), *(_QWORD *)(a1 + 152), v9, *(_QWORD *)(a1 + 168), v10, *(_QWORD *)(a1 + 184), v11, *(_QWORD *)(a1 + 200),
            *(_QWORD *)(a1 + 208),
            *(_QWORD *)(a1 + 216),
            *(_QWORD *)(a1 + 224),
            *(_QWORD *)(a1 + 232),
            *(_QWORD *)(a1 + 240));
        }
      }
      sub_1AD00E8B0(*(_QWORD *)(a1 + 248), *(_QWORD *)(a1 + 256), *(_QWORD *)(a1 + 264), *(_QWORD *)(a1 + 272), *(_QWORD *)(a1 + 280), *(_QWORD *)(a1 + 288), *(_QWORD *)(a1 + 296), *(_QWORD *)(a1 + 304), *(_QWORD *)(a1 + 312), *(_QWORD *)(a1 + 320), *(_QWORD *)(a1 + 328), *(_QWORD *)(a1 + 336), *(_QWORD *)(a1 + 344), *(_QWORD *)(a1 + 352), *(_QWORD *)(a1 + 360), *(_QWORD *)(a1 + 368), *(_QWORD *)(a1 + 376), *(_QWORD *)(a1 + 384), *(_QWORD *)(a1 + 392),
        *(_QWORD *)(a1 + 400),
        *(_QWORD *)(a1 + 408),
        *(_QWORD *)(a1 + 416),
        *(_QWORD *)(a1 + 424),
        *(_QWORD *)(a1 + 432));
      swift_release();
      swift_bridgeObjectRelease();
    }
    v12 = a2[472];
    if (v12 >= 2)
      v12 = *(_DWORD *)a2 + 2;
    if (v12 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    else
    {
      memcpy((void *)a1, a2, 0x1D8uLL);
      LOBYTE(v12) = 0;
    }
    *(_BYTE *)(a1 + 472) = v12;
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for EncodedAttachments.EncodedContent(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 473))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 472);
  if (v3 >= 2)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for EncodedAttachments.EncodedContent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 432) = 0u;
    *(_OWORD *)(result + 448) = 0u;
    *(_OWORD *)(result + 400) = 0u;
    *(_OWORD *)(result + 416) = 0u;
    *(_OWORD *)(result + 368) = 0u;
    *(_OWORD *)(result + 384) = 0u;
    *(_OWORD *)(result + 336) = 0u;
    *(_OWORD *)(result + 352) = 0u;
    *(_OWORD *)(result + 304) = 0u;
    *(_OWORD *)(result + 320) = 0u;
    *(_OWORD *)(result + 272) = 0u;
    *(_OWORD *)(result + 288) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_OWORD *)(result + 32) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 457) = 0u;
    *(_DWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 473) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 473) = 0;
    if (a2)
      *(_BYTE *)(result + 472) = -(char)a2;
  }
  return result;
}

uint64_t sub_1AD385BC0(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 472);
  if (result >= 2)
    return (*(_DWORD *)a1 + 2);
  return result;
}

uint64_t sub_1AD385BDC(uint64_t result, unsigned int a2)
{
  if (a2 > 1)
  {
    *(_QWORD *)(result + 464) = 0;
    *(_OWORD *)(result + 432) = 0u;
    *(_OWORD *)(result + 448) = 0u;
    *(_OWORD *)(result + 400) = 0u;
    *(_OWORD *)(result + 416) = 0u;
    *(_OWORD *)(result + 368) = 0u;
    *(_OWORD *)(result + 384) = 0u;
    *(_OWORD *)(result + 336) = 0u;
    *(_OWORD *)(result + 352) = 0u;
    *(_OWORD *)(result + 304) = 0u;
    *(_OWORD *)(result + 320) = 0u;
    *(_OWORD *)(result + 272) = 0u;
    *(_OWORD *)(result + 288) = 0u;
    *(_OWORD *)(result + 240) = 0u;
    *(_OWORD *)(result + 256) = 0u;
    *(_OWORD *)(result + 208) = 0u;
    *(_OWORD *)(result + 224) = 0u;
    *(_OWORD *)(result + 176) = 0u;
    *(_OWORD *)(result + 192) = 0u;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 112) = 0u;
    *(_OWORD *)(result + 128) = 0u;
    *(_OWORD *)(result + 80) = 0u;
    *(_OWORD *)(result + 96) = 0u;
    *(_OWORD *)(result + 48) = 0u;
    *(_OWORD *)(result + 64) = 0u;
    *(_OWORD *)result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)result = a2 - 2;
    LOBYTE(a2) = 2;
    *(_OWORD *)(result + 32) = 0u;
  }
  *(_BYTE *)(result + 472) = a2;
  return result;
}

ValueMetadata *type metadata accessor for EncodedAttachments.EncodedContent()
{
  return &type metadata for EncodedAttachments.EncodedContent;
}

uint64_t destroy for EncodedAttachments.EncodedAstc(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  if (a1[3])
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v2 = a1[10];
    v3 = a1[12];
    v4 = a1[14];
    v5 = a1[16];
    v6 = a1[20];
    v7 = a1[22];
    v8 = a1[24];
    if (v2 >> 1 != 0xFFFFFFFF
      || (v4 | (unint64_t)v3) > 1
      || (v6 & 0xFFFFFFFFFFFFFEFELL | v5 & 0xFFFFFFFFFFFF00FELL) != 0
      || (v8 | v7) >= 2)
    {
      sub_1AD00E8B0(a1[7], a1[8], a1[9], v2, a1[11], v3, a1[13], v4, a1[15], v5, a1[17], a1[18], a1[19], v6, a1[21], v7, a1[23], v8, a1[25],
        a1[26],
        a1[27],
        a1[28],
        a1[29],
        a1[30]);
    }
  }
  v12 = a1[31];
  v13 = a1[32];
  v14 = a1 + 31;
  sub_1AD00E8B0(v12, v13, v14[2], v14[3], v14[4], v14[5], v14[6], v14[7], v14[8], v14[9], v14[10], v14[11], v14[12], v14[13], v14[14], v14[15], v14[16], v14[17], v14[18],
    v14[19],
    v14[20],
    v14[21],
    v14[22],
    v14[23]);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EncodedAttachments.EncodedAstc(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v6 = *(_QWORD *)(a2 + 80);
    v7 = *(_QWORD *)(a2 + 96);
    v8 = *(_QWORD *)(a2 + 112);
    v9 = *(_QWORD *)(a2 + 192);
    if (v6 >> 1 != 0xFFFFFFFF
      || (v8 | (unint64_t)v7) > 1
      || *(_QWORD *)(a2 + 160) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a2 + 128) & 0xFFFFFFFFFFFF00FELL
      || (v9 | *(_QWORD *)(a2 + 176)) >= 2)
    {
      v23 = *(_QWORD *)(a2 + 64);
      v24 = *(_QWORD *)(a2 + 88);
      v42 = *(_QWORD *)(a2 + 120);
      v46 = *(_QWORD *)(a2 + 136);
      v52 = *(_QWORD *)(a2 + 144);
      v54 = *(_QWORD *)(a2 + 152);
      v56 = *(_QWORD *)(a2 + 168);
      v58 = *(_QWORD *)(a2 + 184);
      v60 = *(_QWORD *)(a2 + 200);
      v62 = *(_QWORD *)(a2 + 208);
      v64 = *(_QWORD *)(a2 + 216);
      v66 = *(_QWORD *)(a2 + 224);
      v68 = *(_QWORD *)(a2 + 232);
      v70 = *(_QWORD *)(a2 + 240);
      v48 = *(_QWORD *)(a2 + 160);
      v50 = *(_QWORD *)(a2 + 176);
      v25 = *(_QWORD *)(a2 + 56);
      v40 = *(_QWORD *)(a2 + 128);
      v26 = *(_QWORD *)(a2 + 72);
      v44 = *(_QWORD *)(a2 + 192);
      v27 = *(_QWORD *)(a2 + 104);
      sub_1AD00FEAC(v25, v23, v26, v6, v24, v7, v27, v8, v42, v40, v46, v52, v54, v48, v56, v50, v58, v9, v60,
        v62,
        v64,
        v66,
        v68,
        v70);
      *(_QWORD *)(a1 + 56) = v25;
      *(_QWORD *)(a1 + 64) = v23;
      *(_QWORD *)(a1 + 72) = v26;
      *(_QWORD *)(a1 + 80) = v6;
      *(_QWORD *)(a1 + 88) = v24;
      *(_QWORD *)(a1 + 96) = v7;
      *(_QWORD *)(a1 + 104) = v27;
      *(_QWORD *)(a1 + 112) = v8;
      *(_QWORD *)(a1 + 120) = v42;
      *(_QWORD *)(a1 + 128) = v40;
      *(_QWORD *)(a1 + 136) = v46;
      *(_QWORD *)(a1 + 144) = v52;
      *(_QWORD *)(a1 + 152) = v54;
      *(_QWORD *)(a1 + 160) = v48;
      *(_QWORD *)(a1 + 168) = v56;
      *(_QWORD *)(a1 + 176) = v50;
      *(_QWORD *)(a1 + 184) = v58;
      *(_QWORD *)(a1 + 192) = v44;
      *(_QWORD *)(a1 + 200) = v60;
      *(_QWORD *)(a1 + 208) = v62;
      *(_QWORD *)(a1 + 216) = v64;
      *(_QWORD *)(a1 + 224) = v66;
      *(_QWORD *)(a1 + 232) = v68;
      *(_QWORD *)(a1 + 240) = v70;
    }
    else
    {
      v10 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v10;
      v11 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v11;
      v12 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v12;
      v13 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v13;
      v14 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v14;
      v15 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v15;
    }
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v16;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v17 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v17;
    v18 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v18;
    v19 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v19;
    v20 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v20;
    v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v21;
    v22 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v22;
  }
  v28 = *(_QWORD *)(a2 + 288);
  v29 = *(_QWORD *)(a2 + 296);
  v41 = *(_QWORD *)(a2 + 312);
  v43 = *(_QWORD *)(a2 + 320);
  v45 = *(_QWORD *)(a2 + 328);
  v47 = *(_QWORD *)(a2 + 336);
  v49 = *(_QWORD *)(a2 + 344);
  v51 = *(_QWORD *)(a2 + 352);
  v53 = *(_QWORD *)(a2 + 360);
  v55 = *(_QWORD *)(a2 + 368);
  v57 = *(_QWORD *)(a2 + 376);
  v59 = *(_QWORD *)(a2 + 384);
  v61 = *(_QWORD *)(a2 + 392);
  v63 = *(_QWORD *)(a2 + 400);
  v65 = *(_QWORD *)(a2 + 408);
  v67 = *(_QWORD *)(a2 + 416);
  v69 = *(_QWORD *)(a2 + 424);
  v71 = *(_QWORD *)(a2 + 432);
  v30 = *(_QWORD *)(a2 + 248);
  v31 = *(_QWORD *)(a2 + 256);
  v32 = *(_QWORD *)(a2 + 264);
  v33 = *(_QWORD *)(a2 + 272);
  v34 = *(_QWORD *)(a2 + 280);
  v35 = *(_QWORD *)(a2 + 304);
  sub_1AD00FEAC(v30, v31, v32, v33, v34, v28, v29, v35, v41, v43, v45, v47, v49, v51, v53, v55, v57, v59, v61,
    v63,
    v65,
    v67,
    v69,
    v71);
  *(_QWORD *)(a1 + 248) = v30;
  *(_QWORD *)(a1 + 256) = v31;
  *(_QWORD *)(a1 + 264) = v32;
  *(_QWORD *)(a1 + 272) = v33;
  *(_QWORD *)(a1 + 280) = v34;
  *(_QWORD *)(a1 + 288) = v28;
  *(_QWORD *)(a1 + 296) = v29;
  *(_QWORD *)(a1 + 304) = v35;
  *(_QWORD *)(a1 + 312) = v41;
  *(_QWORD *)(a1 + 320) = v43;
  *(_QWORD *)(a1 + 328) = v45;
  *(_QWORD *)(a1 + 336) = v47;
  *(_QWORD *)(a1 + 344) = v49;
  *(_QWORD *)(a1 + 352) = v51;
  *(_QWORD *)(a1 + 360) = v53;
  *(_QWORD *)(a1 + 368) = v55;
  *(_QWORD *)(a1 + 376) = v57;
  *(_QWORD *)(a1 + 384) = v59;
  *(_QWORD *)(a1 + 392) = v61;
  *(_QWORD *)(a1 + 400) = v63;
  *(_QWORD *)(a1 + 408) = v65;
  *(_QWORD *)(a1 + 416) = v67;
  *(_QWORD *)(a1 + 424) = v69;
  *(_QWORD *)(a1 + 432) = v71;
  v36 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v36;
  v37 = *(_QWORD *)(a2 + 456);
  v38 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = v37;
  *(_QWORD *)(a1 + 464) = v38;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EncodedAttachments.EncodedAstc(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (!v4)
    {
      v63 = *a2;
      v64 = a2[1];
      v65 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v65;
      *(_OWORD *)a1 = v63;
      *(_OWORD *)(a1 + 16) = v64;
      v66 = a2[4];
      v67 = a2[5];
      v68 = a2[7];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v68;
      *(_OWORD *)(a1 + 64) = v66;
      *(_OWORD *)(a1 + 80) = v67;
      v69 = a2[8];
      v70 = a2[9];
      v71 = a2[11];
      *(_OWORD *)(a1 + 160) = a2[10];
      *(_OWORD *)(a1 + 176) = v71;
      *(_OWORD *)(a1 + 128) = v69;
      *(_OWORD *)(a1 + 144) = v70;
      v72 = a2[12];
      v73 = a2[13];
      v74 = a2[14];
      *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
      *(_OWORD *)(a1 + 208) = v73;
      *(_OWORD *)(a1 + 224) = v74;
      *(_OWORD *)(a1 + 192) = v72;
      goto LABEL_35;
    }
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
    v28 = *((_QWORD *)a2 + 5);
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_QWORD *)(a1 + 40) = v28;
    v29 = *((_QWORD *)a2 + 10);
    v30 = *((_QWORD *)a2 + 12);
    v31 = *((_QWORD *)a2 + 14);
    v32 = *((_QWORD *)a2 + 22);
    if (v29 >> 1 == 0xFFFFFFFF
      && (v31 | (unint64_t)v30) <= 1
      && !(a2[10] & 0xFFFFFFFFFFFFFEFELL | (_QWORD)a2[8] & 0xFFFFFFFFFFFF00FELL)
      && (*((_QWORD *)a2 + 24) | (unint64_t)v32) < 2)
    {
      v33 = *(__int128 *)((char *)a2 + 56);
      v34 = *(__int128 *)((char *)a2 + 72);
      v35 = *(__int128 *)((char *)a2 + 104);
      *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
      *(_OWORD *)(a1 + 104) = v35;
      *(_OWORD *)(a1 + 56) = v33;
      *(_OWORD *)(a1 + 72) = v34;
      v36 = *(__int128 *)((char *)a2 + 120);
      v37 = *(__int128 *)((char *)a2 + 136);
      v38 = *(__int128 *)((char *)a2 + 168);
      *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
      *(_OWORD *)(a1 + 168) = v38;
      *(_OWORD *)(a1 + 120) = v36;
      *(_OWORD *)(a1 + 136) = v37;
      v39 = *(__int128 *)((char *)a2 + 184);
      v40 = *(__int128 *)((char *)a2 + 200);
      v41 = *(__int128 *)((char *)a2 + 232);
      *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
      *(_OWORD *)(a1 + 232) = v41;
      *(_OWORD *)(a1 + 184) = v39;
      *(_OWORD *)(a1 + 200) = v40;
      goto LABEL_35;
    }
    v75 = *((_QWORD *)a2 + 7);
    v76 = *((_QWORD *)a2 + 11);
    v133 = *((_QWORD *)a2 + 15);
    v145 = *((_QWORD *)a2 + 17);
    v149 = *((_QWORD *)a2 + 18);
    v157 = *((_QWORD *)a2 + 19);
    v161 = *((_QWORD *)a2 + 21);
    v165 = *((_QWORD *)a2 + 23);
    v169 = *((_QWORD *)a2 + 25);
    v173 = *((_QWORD *)a2 + 26);
    v177 = *((_QWORD *)a2 + 27);
    v181 = *((_QWORD *)a2 + 28);
    v185 = *((_QWORD *)a2 + 29);
    v189 = *((_QWORD *)a2 + 30);
    v141 = *((_QWORD *)a2 + 20);
    v77 = *((_QWORD *)a2 + 8);
    v153 = *((_QWORD *)a2 + 24);
    v129 = *((_QWORD *)a2 + 16);
    v78 = *((_QWORD *)a2 + 9);
    v137 = *((_QWORD *)a2 + 22);
    v79 = *((_QWORD *)a2 + 13);
    sub_1AD00FEAC(v75, v77, v78, v29, v76, v30, v79, v31, v133, v129, v145, v149, v157, v141, v161, v32, v165, v153, v169,
      v173,
      v177,
      v181,
      v185,
      v189);
    *(_QWORD *)(a1 + 56) = v75;
    *(_QWORD *)(a1 + 64) = v77;
    *(_QWORD *)(a1 + 72) = v78;
    *(_QWORD *)(a1 + 80) = v29;
    *(_QWORD *)(a1 + 88) = v76;
    *(_QWORD *)(a1 + 96) = v30;
    *(_QWORD *)(a1 + 104) = v79;
    *(_QWORD *)(a1 + 112) = v31;
    *(_QWORD *)(a1 + 120) = v133;
    *(_QWORD *)(a1 + 128) = v129;
    *(_QWORD *)(a1 + 136) = v145;
    *(_QWORD *)(a1 + 144) = v149;
    *(_QWORD *)(a1 + 152) = v157;
    *(_QWORD *)(a1 + 160) = v141;
    *(_QWORD *)(a1 + 168) = v161;
    *(_QWORD *)(a1 + 176) = v137;
    *(_QWORD *)(a1 + 184) = v165;
    *(_QWORD *)(a1 + 192) = v153;
    *(_QWORD *)(a1 + 200) = v169;
    *(_QWORD *)(a1 + 208) = v173;
    *(_QWORD *)(a1 + 216) = v177;
    *(_QWORD *)(a1 + 224) = v181;
    *(_QWORD *)(a1 + 232) = v185;
    v80 = v189;
    goto LABEL_34;
  }
  if (!v4)
  {
    sub_1AD046A30((_QWORD *)a1);
    v42 = a2[3];
    v44 = *a2;
    v43 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v42;
    *(_OWORD *)a1 = v44;
    *(_OWORD *)(a1 + 16) = v43;
    v45 = a2[7];
    v47 = a2[4];
    v46 = a2[5];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v45;
    *(_OWORD *)(a1 + 64) = v47;
    *(_OWORD *)(a1 + 80) = v46;
    v48 = a2[11];
    v50 = a2[8];
    v49 = a2[9];
    *(_OWORD *)(a1 + 160) = a2[10];
    *(_OWORD *)(a1 + 176) = v48;
    *(_OWORD *)(a1 + 128) = v50;
    *(_OWORD *)(a1 + 144) = v49;
    v52 = a2[13];
    v51 = a2[14];
    v53 = a2[12];
    *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
    *(_OWORD *)(a1 + 208) = v52;
    *(_OWORD *)(a1 + 224) = v51;
    *(_OWORD *)(a1 + 192) = v53;
    goto LABEL_35;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v5 = *((_QWORD *)a2 + 5);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = (_OWORD *)(a1 + 56);
  v7 = (__int128 *)((char *)a2 + 56);
  v8 = *((_QWORD *)a2 + 10);
  v9 = *((_QWORD *)a2 + 12);
  v10 = *((_QWORD *)a2 + 14);
  v11 = *((_QWORD *)a2 + 16);
  v12 = *((_QWORD *)a2 + 20);
  v13 = *((_QWORD *)a2 + 22);
  v14 = *((_QWORD *)a2 + 24);
  v18 = v8 >> 1 == 0xFFFFFFFF
     && (v10 | (unint64_t)v9) < 2
     && (v12 & 0xFFFFFFFFFFFFFEFELL | v11 & 0xFFFFFFFFFFFF00FELL) == 0
     && (v14 | v13) < 2;
  if (*(_QWORD *)(a1 + 80) >> 1 == 0xFFFFFFFFLL
    && (*(_QWORD *)(a1 + 112) | *(_QWORD *)(a1 + 96)) <= 1
    && !(*(_QWORD *)(a1 + 160) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a1 + 128) & 0xFFFFFFFFFFFF00FELL)
    && (*(_QWORD *)(a1 + 192) | *(_QWORD *)(a1 + 176)) < 2)
  {
    if (v18)
    {
      v19 = *v7;
      v20 = *(__int128 *)((char *)a2 + 72);
      v21 = *(__int128 *)((char *)a2 + 104);
      *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
      *(_OWORD *)(a1 + 104) = v21;
      *v6 = v19;
      *(_OWORD *)(a1 + 72) = v20;
      v22 = *(__int128 *)((char *)a2 + 120);
      v23 = *(__int128 *)((char *)a2 + 136);
      v24 = *(__int128 *)((char *)a2 + 168);
      *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
      *(_OWORD *)(a1 + 168) = v24;
      *(_OWORD *)(a1 + 120) = v22;
      *(_OWORD *)(a1 + 136) = v23;
      v25 = *(__int128 *)((char *)a2 + 184);
      v26 = *(__int128 *)((char *)a2 + 200);
      v27 = *(__int128 *)((char *)a2 + 232);
      *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
      *(_OWORD *)(a1 + 232) = v27;
      *(_OWORD *)(a1 + 184) = v25;
      *(_OWORD *)(a1 + 200) = v26;
      goto LABEL_35;
    }
    v135 = *((_QWORD *)a2 + 8);
    v139 = *((_QWORD *)a2 + 7);
    v131 = *((_QWORD *)a2 + 9);
    v100 = *((_QWORD *)a2 + 11);
    v101 = *((_QWORD *)a2 + 13);
    v143 = *((_QWORD *)a2 + 15);
    v147 = *((_QWORD *)a2 + 17);
    v151 = *((_QWORD *)a2 + 18);
    v155 = *((_QWORD *)a2 + 19);
    v159 = *((_QWORD *)a2 + 21);
    v163 = *((_QWORD *)a2 + 23);
    v167 = *((_QWORD *)a2 + 25);
    v171 = *((_QWORD *)a2 + 26);
    v175 = *((_QWORD *)a2 + 27);
    v179 = *((_QWORD *)a2 + 28);
    v183 = *((_QWORD *)a2 + 29);
    v187 = *((_QWORD *)a2 + 30);
    v191 = *((_QWORD *)a2 + 24);
    sub_1AD00FEAC(v139, v135, v131, v8, v100, v9, v101, v10, v143, v11, v147, v151, v155, v12, v159, v13, v163, v14, v167,
      v171,
      v175,
      v179,
      v183,
      v187);
    *(_QWORD *)(a1 + 56) = v139;
    *(_QWORD *)(a1 + 64) = v135;
    *(_QWORD *)(a1 + 72) = v131;
    *(_QWORD *)(a1 + 80) = v8;
    *(_QWORD *)(a1 + 88) = v100;
    *(_QWORD *)(a1 + 96) = v9;
    *(_QWORD *)(a1 + 104) = v101;
    *(_QWORD *)(a1 + 112) = v10;
    *(_QWORD *)(a1 + 120) = v143;
    *(_QWORD *)(a1 + 128) = v11;
    *(_QWORD *)(a1 + 136) = v147;
    *(_QWORD *)(a1 + 144) = v151;
    *(_QWORD *)(a1 + 152) = v155;
    *(_QWORD *)(a1 + 160) = v12;
    *(_QWORD *)(a1 + 168) = v159;
    *(_QWORD *)(a1 + 176) = v13;
    *(_QWORD *)(a1 + 184) = v163;
    *(_QWORD *)(a1 + 192) = v191;
    *(_QWORD *)(a1 + 200) = v167;
    *(_QWORD *)(a1 + 208) = v171;
    *(_QWORD *)(a1 + 216) = v175;
    *(_QWORD *)(a1 + 224) = v179;
    *(_QWORD *)(a1 + 232) = v183;
    v80 = v187;
LABEL_34:
    *(_QWORD *)(a1 + 240) = v80;
    goto LABEL_35;
  }
  if (v18)
  {
    sub_1AD148B34(a1 + 56);
    v54 = *(__int128 *)((char *)a2 + 104);
    v56 = *v7;
    v55 = *(__int128 *)((char *)a2 + 72);
    *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
    *(_OWORD *)(a1 + 104) = v54;
    *v6 = v56;
    *(_OWORD *)(a1 + 72) = v55;
    v57 = *(__int128 *)((char *)a2 + 168);
    v59 = *(__int128 *)((char *)a2 + 120);
    v58 = *(__int128 *)((char *)a2 + 136);
    *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
    *(_OWORD *)(a1 + 168) = v57;
    *(_OWORD *)(a1 + 120) = v59;
    *(_OWORD *)(a1 + 136) = v58;
    v60 = *(__int128 *)((char *)a2 + 232);
    v62 = *(__int128 *)((char *)a2 + 184);
    v61 = *(__int128 *)((char *)a2 + 200);
    *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
    *(_OWORD *)(a1 + 232) = v60;
    *(_OWORD *)(a1 + 184) = v62;
    *(_OWORD *)(a1 + 200) = v61;
  }
  else
  {
    v134 = *((_QWORD *)a2 + 8);
    v138 = *((_QWORD *)a2 + 7);
    v130 = *((_QWORD *)a2 + 9);
    v81 = *((_QWORD *)a2 + 11);
    v82 = *((_QWORD *)a2 + 13);
    v142 = *((_QWORD *)a2 + 15);
    v146 = *((_QWORD *)a2 + 17);
    v150 = *((_QWORD *)a2 + 18);
    v154 = *((_QWORD *)a2 + 19);
    v158 = *((_QWORD *)a2 + 21);
    v162 = *((_QWORD *)a2 + 23);
    v166 = *((_QWORD *)a2 + 25);
    v170 = *((_QWORD *)a2 + 26);
    v174 = *((_QWORD *)a2 + 27);
    v178 = *((_QWORD *)a2 + 28);
    v182 = *((_QWORD *)a2 + 29);
    v186 = *((_QWORD *)a2 + 30);
    v190 = *((_QWORD *)a2 + 24);
    sub_1AD00FEAC(v138, v134, v130, v8, v81, v9, v82, v10, v142, v11, v146, v150, v154, v12, v158, v13, v162, v14, v166,
      v170,
      v174,
      v178,
      v182,
      v186);
    v83 = *(_QWORD *)(a1 + 56);
    v84 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v138;
    *(_QWORD *)(a1 + 64) = v134;
    v85 = *(_QWORD *)(a1 + 72);
    v86 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = v130;
    *(_QWORD *)(a1 + 80) = v8;
    v87 = *(_QWORD *)(a1 + 88);
    v88 = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = v81;
    *(_QWORD *)(a1 + 96) = v9;
    v89 = *(_QWORD *)(a1 + 104);
    v90 = *(_QWORD *)(a1 + 112);
    *(_QWORD *)(a1 + 104) = v82;
    *(_QWORD *)(a1 + 112) = v10;
    v91 = *(_OWORD *)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v142;
    *(_QWORD *)(a1 + 128) = v11;
    v92 = *(_OWORD *)(a1 + 136);
    *(_QWORD *)(a1 + 136) = v146;
    *(_QWORD *)(a1 + 144) = v150;
    v93 = *(_OWORD *)(a1 + 152);
    *(_QWORD *)(a1 + 152) = v154;
    *(_QWORD *)(a1 + 160) = v12;
    v94 = *(_OWORD *)(a1 + 168);
    *(_QWORD *)(a1 + 168) = v158;
    *(_QWORD *)(a1 + 176) = v13;
    v95 = *(_OWORD *)(a1 + 184);
    *(_QWORD *)(a1 + 184) = v162;
    *(_QWORD *)(a1 + 192) = v190;
    v96 = *(_OWORD *)(a1 + 200);
    *(_QWORD *)(a1 + 200) = v166;
    *(_QWORD *)(a1 + 208) = v170;
    v97 = *(_OWORD *)(a1 + 216);
    *(_QWORD *)(a1 + 216) = v174;
    *(_QWORD *)(a1 + 224) = v178;
    v98 = *(_QWORD *)(a1 + 232);
    v99 = *(_QWORD *)(a1 + 240);
    *(_QWORD *)(a1 + 232) = v182;
    *(_QWORD *)(a1 + 240) = v186;
    sub_1AD00E8B0(v83, v84, v85, v86, v87, v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92, *((uint64_t *)&v92 + 1), v93, *((uint64_t *)&v93 + 1), v94, *((uint64_t *)&v94 + 1), v95, *((unint64_t *)&v95 + 1), v96,
      *((uint64_t *)&v96 + 1),
      v97,
      *((uint64_t *)&v97 + 1),
      v98,
      v99);
  }
LABEL_35:
  v102 = *((_QWORD *)a2 + 36);
  v103 = *((_QWORD *)a2 + 37);
  v132 = *((_QWORD *)a2 + 39);
  v136 = *((_QWORD *)a2 + 40);
  v140 = *((_QWORD *)a2 + 41);
  v144 = *((_QWORD *)a2 + 42);
  v148 = *((_QWORD *)a2 + 43);
  v152 = *((_QWORD *)a2 + 44);
  v156 = *((_QWORD *)a2 + 45);
  v160 = *((_QWORD *)a2 + 46);
  v164 = *((_QWORD *)a2 + 47);
  v168 = *((_QWORD *)a2 + 48);
  v172 = *((_QWORD *)a2 + 49);
  v176 = *((_QWORD *)a2 + 50);
  v180 = *((_QWORD *)a2 + 51);
  v184 = *((_QWORD *)a2 + 52);
  v188 = *((_QWORD *)a2 + 53);
  v192 = *((_QWORD *)a2 + 54);
  v104 = *((_QWORD *)a2 + 31);
  v105 = *((_QWORD *)a2 + 32);
  v106 = *((_QWORD *)a2 + 33);
  v107 = *((_QWORD *)a2 + 34);
  v108 = *((_QWORD *)a2 + 35);
  v109 = *((_QWORD *)a2 + 38);
  sub_1AD00FEAC(v104, v105, v106, v107, v108, v102, v103, v109, v132, v136, v140, v144, v148, v152, v156, v160, v164, v168, v172,
    v176,
    v180,
    v184,
    v188,
    v192);
  v110 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v104;
  v111 = *(_QWORD *)(a1 + 256);
  v112 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = v105;
  *(_QWORD *)(a1 + 264) = v106;
  v113 = *(_QWORD *)(a1 + 272);
  v114 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 272) = v107;
  *(_QWORD *)(a1 + 280) = v108;
  v115 = *(_QWORD *)(a1 + 288);
  v116 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 288) = v102;
  *(_QWORD *)(a1 + 296) = v103;
  v117 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 304) = v109;
  v118 = *(_OWORD *)(a1 + 312);
  v119 = *(_OWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 312) = v132;
  *(_QWORD *)(a1 + 320) = v136;
  *(_QWORD *)(a1 + 328) = v140;
  *(_QWORD *)(a1 + 336) = v144;
  v120 = *(_OWORD *)(a1 + 344);
  v121 = *(_OWORD *)(a1 + 360);
  *(_QWORD *)(a1 + 344) = v148;
  *(_QWORD *)(a1 + 352) = v152;
  *(_QWORD *)(a1 + 360) = v156;
  *(_QWORD *)(a1 + 368) = v160;
  v122 = *(_OWORD *)(a1 + 376);
  v123 = *(_OWORD *)(a1 + 392);
  *(_QWORD *)(a1 + 376) = v164;
  *(_QWORD *)(a1 + 384) = v168;
  *(_QWORD *)(a1 + 392) = v172;
  *(_QWORD *)(a1 + 400) = v176;
  v124 = *(_OWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 408) = v180;
  v125 = *(_QWORD *)(a1 + 424);
  v126 = *(_QWORD *)(a1 + 432);
  *(_QWORD *)(a1 + 416) = v184;
  *(_QWORD *)(a1 + 424) = v188;
  *(_QWORD *)(a1 + 432) = v192;
  sub_1AD00E8B0(v110, v111, v112, v113, v114, v115, v116, v117, v118, *((uint64_t *)&v118 + 1), v119, *((uint64_t *)&v119 + 1), v120, *((uint64_t *)&v120 + 1), v121, *((uint64_t *)&v121 + 1), v122, *((unint64_t *)&v122 + 1), v123,
    *((uint64_t *)&v123 + 1),
    v124,
    *((uint64_t *)&v124 + 1),
    v125,
    v126);
  v127 = *((_QWORD *)a2 + 56);
  *(_QWORD *)(a1 + 440) = *((_QWORD *)a2 + 55);
  *(_QWORD *)(a1 + 448) = v127;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 456) = *((_QWORD *)a2 + 57);
  *(_QWORD *)(a1 + 464) = *((_QWORD *)a2 + 58);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EncodedAttachments.EncodedAstc(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  __int128 v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;

  v4 = (_OWORD *)(a1 + 264);
  v5 = (_OWORD *)(a2 + 264);
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_14;
  if (!*(_QWORD *)(a2 + 24))
  {
    sub_1AD046A30((_QWORD *)a1);
LABEL_14:
    v28 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v28;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v29 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v29;
    v30 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v30;
    v31 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v31;
    v32 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v32;
    v33 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v33;
    v34 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v34;
    goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 112);
  v11 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 160);
  v13 = *(_QWORD *)(a1 + 176);
  v14 = *(_QWORD *)(a1 + 192);
  v15 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 128);
  v19 = *(_QWORD *)(a2 + 160);
  v20 = *(_QWORD *)(a2 + 176);
  v21 = *(_QWORD *)(a2 + 192);
  if (v8 >> 1 != 0xFFFFFFFF
    || (v10 | (unint64_t)v9) > 1
    || v12 & 0xFFFFFFFFFFFFFEFELL | v11 & 0xFFFFFFFFFFFF00FELL
    || (v14 | v13) >= 2)
  {
    if (v15 >> 1 != 0xFFFFFFFF
      || (v17 | v16) > 1
      || v19 & 0xFFFFFFFFFFFFFEFELL | v18 & 0xFFFFFFFFFFFF00FELL
      || (v21 | v20) >= 2)
    {
      v59 = *(_QWORD *)(a2 + 72);
      v60 = *(_QWORD *)(a2 + 88);
      v61 = *(_QWORD *)(a2 + 104);
      v62 = *(_QWORD *)(a2 + 120);
      v63 = *(_QWORD *)(a2 + 152);
      v64 = *(_QWORD *)(a2 + 168);
      v65 = *(_QWORD *)(a2 + 184);
      v76 = *(_QWORD *)(a1 + 64);
      v77 = *(_QWORD *)(a1 + 56);
      v75 = *(_QWORD *)(a1 + 72);
      v78 = *(_QWORD *)(a1 + 88);
      v79 = *(_QWORD *)(a1 + 104);
      v66 = *(_OWORD *)(a1 + 136);
      v73 = *(_QWORD *)(a1 + 152);
      v74 = *(_QWORD *)(a1 + 120);
      v67 = *(_QWORD *)(a1 + 168);
      v68 = *(_QWORD *)(a1 + 184);
      v69 = *(_OWORD *)(a1 + 200);
      v70 = *(_OWORD *)(a1 + 216);
      v72 = *(_QWORD *)(a1 + 232);
      v71 = *(_QWORD *)(a1 + 240);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = v59;
      *(_QWORD *)(a1 + 80) = v15;
      *(_QWORD *)(a1 + 88) = v60;
      *(_QWORD *)(a1 + 96) = v16;
      *(_QWORD *)(a1 + 104) = v61;
      *(_QWORD *)(a1 + 112) = v17;
      *(_QWORD *)(a1 + 120) = v62;
      *(_QWORD *)(a1 + 128) = v18;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = v63;
      *(_QWORD *)(a1 + 160) = v19;
      *(_QWORD *)(a1 + 168) = v64;
      *(_QWORD *)(a1 + 176) = v20;
      *(_QWORD *)(a1 + 184) = v65;
      *(_QWORD *)(a1 + 192) = v21;
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      sub_1AD00E8B0(v77, v76, v75, v8, v78, v9, v79, v10, v74, v11, v66, *((uint64_t *)&v66 + 1), v73, v12, v67, v13, v68, v14, v69,
        *((uint64_t *)&v69 + 1),
        v70,
        *((uint64_t *)&v70 + 1),
        v72,
        v71);
      goto LABEL_15;
    }
    sub_1AD148B34(a1 + 56);
  }
  v22 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v22;
  v23 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v23;
  v24 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v24;
  v25 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v25;
  v26 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v26;
  v27 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v27;
LABEL_15:
  v35 = *(_QWORD *)(a1 + 248);
  v36 = *(_QWORD *)(a1 + 256);
  v37 = *(_QWORD *)(a1 + 264);
  v38 = *(_QWORD *)(a1 + 272);
  v39 = *(_QWORD *)(a1 + 280);
  v40 = *(_QWORD *)(a1 + 288);
  v41 = *(_QWORD *)(a1 + 296);
  v42 = *(_QWORD *)(a1 + 304);
  v43 = *(_OWORD *)(a1 + 312);
  v44 = *(_OWORD *)(a1 + 328);
  v45 = *(_OWORD *)(a1 + 344);
  v46 = *(_OWORD *)(a1 + 360);
  v47 = *(_OWORD *)(a1 + 376);
  v48 = *(_OWORD *)(a1 + 392);
  v49 = *(_OWORD *)(a1 + 408);
  v50 = *(_QWORD *)(a1 + 424);
  v51 = *(_QWORD *)(a1 + 432);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v52 = v5[1];
  *v4 = *v5;
  v4[1] = v52;
  v53 = v5[3];
  v4[2] = v5[2];
  v4[3] = v53;
  v54 = v5[5];
  v4[4] = v5[4];
  v4[5] = v54;
  v55 = v5[7];
  v4[6] = v5[6];
  v4[7] = v55;
  v56 = v5[9];
  v4[8] = v5[8];
  v4[9] = v56;
  v4[10] = v5[10];
  sub_1AD00E8B0(v35, v36, v37, v38, v39, v40, v41, v42, v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((unint64_t *)&v47 + 1), v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    v51);
  v4[11] = v5[11];
  swift_release();
  v57 = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 464) = v57;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EncodedAttachments.EncodedAstc(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 472))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 272) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for EncodedAttachments.EncodedAstc(uint64_t a1, int a2, int a3)
{
  double result;
  uint64_t v4;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 472) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(a1 + 248) = 0;
      *(_QWORD *)(a1 + 256) = 0;
      v4 = a1 + 248;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 2 * -a2;
      result = 0.0;
      *(_OWORD *)(v4 + 32) = 0u;
      *(_OWORD *)(v4 + 48) = 0u;
      *(_OWORD *)(v4 + 64) = 0u;
      *(_OWORD *)(v4 + 80) = 0u;
      *(_OWORD *)(v4 + 96) = 0u;
      *(_OWORD *)(v4 + 112) = 0u;
      *(_OWORD *)(v4 + 128) = 0u;
      *(_OWORD *)(v4 + 144) = 0u;
      *(_OWORD *)(v4 + 160) = 0u;
      *(_OWORD *)(v4 + 176) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 472) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedAttachments.EncodedAstc()
{
  return &type metadata for EncodedAttachments.EncodedAstc;
}

uint64_t *initializeBufferWithCopyOfBuffer for EncodedAttachments.RawData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a2;
  v4 = a2[1];
  sub_1AD0040A0(*a2, v4);
  *a1 = v3;
  a1[1] = v4;
  return a1;
}

uint64_t destroy for EncodedAttachments.RawData(uint64_t a1)
{
  return sub_1AD00412C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
}

uint64_t *assignWithCopy for EncodedAttachments.RawData(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v3 = *a2;
  v4 = a2[1];
  sub_1AD0040A0(*a2, v4);
  v5 = *a1;
  v6 = a1[1];
  *a1 = v3;
  a1[1] = v4;
  sub_1AD00412C(v5, v6);
  return a1;
}

uint64_t *assignWithTake for EncodedAttachments.RawData(uint64_t *a1, _OWORD *a2)
{
  uint64_t v3;
  unint64_t v4;

  v3 = *a1;
  v4 = a1[1];
  *(_OWORD *)a1 = *a2;
  sub_1AD00412C(v3, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for EncodedAttachments.RawData(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xD && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 13);
  v3 = (((*(_QWORD *)(a1 + 8) >> 60) >> 2) & 0xFFFFFFF3 | (4 * ((*(_QWORD *)(a1 + 8) >> 60) & 3))) ^ 0xF;
  if (v3 >= 0xC)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for EncodedAttachments.RawData(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xC)
  {
    *(_QWORD *)result = a2 - 13;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xD)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)(((-a2 >> 2) & 3) - 4 * a2) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EncodedAttachments.RawData()
{
  return &type metadata for EncodedAttachments.RawData;
}

unint64_t sub_1AD386F84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  double *v10;
  double v11;
  double v12;
  double v13;
  double v14;
  id v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for Handwriting() + 24) + 64);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x1E0DEE9D8];
  if (v2)
  {
    v19 = MEMORY[0x1E0DEE9D8];
    swift_bridgeObjectRetain();
    sub_1AD63BDE0();
    v4 = 0;
    v17 = v2;
    do
    {
      v8 = *(_QWORD *)(v1 + 32 + 8 * v4);
      v9 = *(_QWORD *)(v8 + 16);
      v18 = v4;
      if (v9)
      {
        swift_bridgeObjectRetain();
        sub_1AD63BDE0();
        v10 = (double *)(v8 + 56);
        do
        {
          v11 = *(v10 - 3);
          v12 = *(v10 - 2);
          v13 = *(v10 - 1);
          v14 = *v10;
          v15 = objc_msgSend(objc_allocWithZone((Class)_BlastDoorDrawingStrokePoint), sel_init);
          objc_msgSend(v15, sel_setLocation_, v11, v12);
          objc_msgSend(v15, sel_setForce_, v13);
          objc_msgSend(v15, sel_setVelocity_, v14);
          sub_1AD63BDC8();
          sub_1AD63BDEC();
          sub_1AD63BDF8();
          sub_1AD63BDD4();
          v10 += 4;
          --v9;
        }
        while (v9);
        v5 = v3;
      }
      else
      {
        swift_bridgeObjectRetain();
        v5 = v3;
      }
      v4 = v18 + 1;
      v6 = objc_msgSend(objc_msgSend(objc_allocWithZone((Class)_BlastDoorDrawingStroke), sel_init), sel_strokePoints);
      sub_1AD387234(v5, &qword_1EECDB400);
      swift_bridgeObjectRelease();
      v7 = (void *)sub_1AD63B990();
      swift_bridgeObjectRelease();
      objc_msgSend(v6, sel_addObjectsFromArray_, v7);
      swift_bridgeObjectRelease();

      sub_1AD63BDC8();
      sub_1AD63BDEC();
      sub_1AD63BDF8();
      sub_1AD63BDD4();
      v3 = MEMORY[0x1E0DEE9D8];
    }
    while (v18 + 1 != v17);
    v3 = v19;
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_1AD38720C(unint64_t a1)
{
  return sub_1AD387234(a1, &qword_1EECDB410);
}

uint64_t sub_1AD387220(unint64_t a1)
{
  return sub_1AD387234(a1, &qword_1EECDB408);
}

uint64_t sub_1AD387234(unint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t i;
  unint64_t v8;
  unint64_t v9;
  id *v10;
  id v11;
  unint64_t v12;
  unint64_t v13;
  _OWORD v14[2];
  uint64_t v15;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1AD63BE34();
    swift_bridgeObjectRelease();
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v5 = MEMORY[0x1E0DEE9D8];
  if (!v4)
    return v5;
  v15 = MEMORY[0x1E0DEE9D8];
  result = sub_1AD147838(0, v4 & ~(v4 >> 63), 0);
  if ((v4 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        MEMORY[0x1AF44AA40](i, a1);
        sub_1AD32F2CC(0, a2);
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AD147838(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v9 = *(_QWORD *)(v5 + 16);
        v8 = *(_QWORD *)(v5 + 24);
        if (v9 >= v8 >> 1)
        {
          sub_1AD147838(v8 > 1, v9 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v9 + 1;
        sub_1AD002F7C(v14, (_OWORD *)(v5 + 32 * v9 + 32));
      }
    }
    else
    {
      v10 = (id *)(a1 + 32);
      sub_1AD32F2CC(0, a2);
      do
      {
        v11 = *v10;
        swift_dynamicCast();
        v5 = v15;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1AD147838(0, *(_QWORD *)(v5 + 16) + 1, 1);
          v5 = v15;
        }
        v13 = *(_QWORD *)(v5 + 16);
        v12 = *(_QWORD *)(v5 + 24);
        if (v13 >= v12 >> 1)
        {
          sub_1AD147838(v12 > 1, v13 + 1, 1);
          v5 = v15;
        }
        *(_QWORD *)(v5 + 16) = v13 + 1;
        sub_1AD002F7C(v14, (_OWORD *)(v5 + 32 * v13 + 32));
        ++v10;
        --v4;
      }
      while (v4);
    }
    return v5;
  }
  __break(1u);
  return result;
}

uint64_t Handwriting.bridgedToObjectiveC.getter()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v0 = sub_1AD3874C8();
  v2 = v1;
  v3 = sub_1AD63AFA0();
  sub_1AD00412C(v0, v2);
  return v3;
}

uint64_t sub_1AD3874C8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  double *v3;
  double v4;
  double v5;
  double v6;
  double v7;
  double v8;
  double v9;
  double v10;
  double v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;

  v1 = (void *)objc_opt_self();
  sub_1AD386F84();
  sub_1AD32F2CC(0, (unint64_t *)&qword_1EECDB418);
  v2 = (void *)sub_1AD63B990();
  swift_bridgeObjectRelease();
  v3 = (double *)(v0 + *(int *)(type metadata accessor for Handwriting() + 24));
  v4 = v3[4];
  v5 = v3[5];
  v6 = v3[6];
  v7 = v3[7];
  v8 = *v3;
  v9 = v3[1];
  v10 = v3[2];
  v11 = v3[3];
  v12 = (void *)sub_1AD63B060();
  v13 = (void *)sub_1AD63B018();
  v14 = objc_msgSend(v1, sel_dataRepresentation_frame_bound_uuid_date_, v2, v12, v13, v4, v5, v6, v7, v8, v9, v10, v11);

  if (v14)
  {
    v15 = sub_1AD63AFB8();

  }
  else
  {
    sub_1AD63BB7C();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    sub_1AD63B48C();
    return 0;
  }
  return v15;
}

uint64_t sub_1AD387674()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v0 = sub_1AD3874C8();
  v2 = v1;
  v3 = sub_1AD63AFA0();
  sub_1AD00412C(v0, v2);
  return v3;
}

uint64_t sub_1AD3876B8()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD3876E4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AD3876EC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_1AD3876F8()
{
  _BYTE *v0;

  if (*v0)
    return 0x646E616D6D6F63;
  else
    return 0x65636976726573;
}

uint64_t sub_1AD38772C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD38D134(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD387750()
{
  sub_1AD3878D0();
  return sub_1AD63C560();
}

uint64_t sub_1AD387778()
{
  sub_1AD3878D0();
  return sub_1AD63C56C();
}

uint64_t sub_1AD3877A0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v8;
  uint64_t v9;
  char v10;
  char v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB420);
  v9 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD3878D0();
  sub_1AD63C53C();
  v11 = 0;
  sub_1AD63C020();
  if (!v2)
  {
    v10 = 1;
    sub_1AD63C05C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v6, v4);
}

unint64_t sub_1AD3878D0()
{
  unint64_t result;

  result = qword_1EECDB428;
  if (!qword_1EECDB428)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D19C, &type metadata for IDSClientMessageContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDB428);
  }
  return result;
}

uint64_t sub_1AD387914@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  char v15;
  char v16;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB430);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD3878D0();
  sub_1AD63C524();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v16 = 0;
  v9 = sub_1AD63BF0C();
  v11 = v10;
  v15 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1AD63BF48();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v11;
  a2[2] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD387A98@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AD387914(a1, a2);
}

uint64_t sub_1AD387AAC(_QWORD *a1)
{
  return sub_1AD3877A0(a1);
}

uint64_t sub_1AD387AC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD387ACC(v1, a1);
}

uint64_t sub_1AD387ACC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IDSClientMessageType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for IDSClientMessageType(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E19A8);
}

uint64_t sub_1AD387B24(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD387B2C(a1, v1);
}

uint64_t sub_1AD387B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IDSClientMessageType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD387B70())()
{
  return nullsub_1;
}

uint64_t sub_1AD387B80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD2A5214(a1, a2, type metadata accessor for IDSClientMessageType);
}

uint64_t sub_1AD387BA0()
{
  sub_1AD387D00();
  return sub_1AD63C560();
}

uint64_t sub_1AD387BC8()
{
  sub_1AD387D00();
  return sub_1AD63C56C();
}

uint64_t sub_1AD387BF0(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB438);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD387D00();
  sub_1AD63C53C();
  type metadata accessor for IDSClientMessageType(0);
  sub_1ACFF9724(&qword_1EECDB448, type metadata accessor for IDSClientMessageType, (uint64_t)&unk_1AD657000);
  sub_1AD63C068();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1AD387D00()
{
  unint64_t result;

  result = qword_1EECDB440;
  if (!qword_1EECDB440)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D14C, &type metadata for IDSClientMessageResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDB440);
  }
  return result;
}

uint64_t sub_1AD387D44@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v13 = a2;
  v4 = type metadata accessor for IDSClientMessageType(0);
  MEMORY[0x1E0C80A78](v4);
  v15 = (uint64_t)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB450);
  v14 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for IDSClientMessageResult(0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD387D00();
  sub_1AD63C524();
  if (!v2)
  {
    sub_1ACFF9724(&qword_1EECDB458, type metadata accessor for IDSClientMessageType, (uint64_t)&unk_1AD656FD8);
    sub_1AD63BF54();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v8, v6);
    sub_1AD2A5214(v15, (uint64_t)v11, type metadata accessor for IDSClientMessageType);
    sub_1AD2A5214((uint64_t)v11, v13, type metadata accessor for IDSClientMessageResult);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t type metadata accessor for IDSClientMessageResult(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E1988);
}

uint64_t sub_1AD387F24()
{
  uint64_t v0;

  sub_1AD3880E8();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD387F74()
{
  uint64_t v0;

  sub_1AD3880E8();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD387FC4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD387D44(a1, a2);
}

uint64_t sub_1AD387FD8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB438);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD387D00();
  sub_1AD63C53C();
  type metadata accessor for IDSClientMessageType(0);
  sub_1ACFF9724(&qword_1EECDB448, type metadata accessor for IDSClientMessageType, (uint64_t)&unk_1AD657000);
  sub_1AD63C068();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

void sub_1AD3880E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for IDSSampleMessage(0);
  MEMORY[0x1E0C80A78](v1);
  v2 = type metadata accessor for IDSClientMessageType(0);
  MEMORY[0x1E0C80A78](v2);
  sub_1AD387ACC(v0, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4 = (char *)sub_1AD3881B0 + 4 * byte_1AD67CD10[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1AD3881B0()
{
  uint64_t v0;
  _BYTE *v1;

  *(_BYTE *)(v0 + 480) = *v1;
  return sub_1AD002C18();
}

uint64_t sub_1AD3884A8()
{
  uint64_t v0;

  sub_1AD3880E8();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1AD3884FC()
{
  unint64_t result;

  result = qword_1EECDB460;
  if (!qword_1EECDB460)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67CD64, &type metadata for IDSClientMessageContext);
    atomic_store(result, (unint64_t *)&qword_1EECDB460);
  }
  return result;
}

unint64_t sub_1AD388544()
{
  unint64_t result;

  result = qword_1EECDB468;
  if (!qword_1EECDB468)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67CD8C, &type metadata for IDSClientMessageContext);
    atomic_store(result, (unint64_t *)&qword_1EECDB468);
  }
  return result;
}

uint64_t sub_1AD388588(uint64_t a1)
{
  uint64_t result;

  result = sub_1ACFF9724(&qword_1EECDB470, type metadata accessor for IDSClientMessageResult, (uint64_t)&unk_1AD67CDE0);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AD3885C4(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECDB478, type metadata accessor for IDSClientMessageResult, (uint64_t)&unk_1AD67CE0C);
  result = sub_1ACFF9724(&qword_1EECDB480, type metadata accessor for IDSClientMessageResult, (uint64_t)&unk_1AD67CE34);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD388620(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECDB458, type metadata accessor for IDSClientMessageType, (uint64_t)&unk_1AD656FD8);
  result = sub_1ACFF9724(&qword_1EECDB448, type metadata accessor for IDSClientMessageType, (uint64_t)&unk_1AD657000);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for IDSClientMessageContext()
{
  return &type metadata for IDSClientMessageContext;
}

char *sub_1AD38868C(char *a1, char *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _OWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t v63;
  _OWORD *v64;
  uint64_t v65;
  uint64_t *v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t *v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  v4 = *(_QWORD *)(type metadata accessor for IDSClientMessageType(0) - 8);
  v5 = *(_DWORD *)(v4 + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v6;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        v7 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v7;
        v8 = a2 + 48;
        v9 = *((_QWORD *)a2 + 7);
        swift_retain();
        swift_retain();
        if (v9 == 1)
        {
          *((_OWORD *)a1 + 3) = *v8;
        }
        else
        {
          *((_QWORD *)a1 + 6) = *(_QWORD *)v8;
          *((_QWORD *)a1 + 7) = v9;
          swift_bridgeObjectRetain();
        }
        v35 = type metadata accessor for IDSSampleMessage(0);
        v36 = *(int *)(v35 + 24);
        v37 = &a1[v36];
        v38 = &a2[v36];
        v39 = sub_1AD63B03C();
        v40 = *(_QWORD *)(v39 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
        {
          v41 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
        }
        v72 = *(int *)(v35 + 28);
        v73 = &a1[v72];
        v74 = &a2[v72];
        v75 = *((_QWORD *)v74 + 1);
        *(_QWORD *)v73 = *(_QWORD *)v74;
        *((_QWORD *)v73 + 1) = v75;
        *((_QWORD *)v73 + 2) = *((_QWORD *)v74 + 2);
        *((_WORD *)v73 + 12) = *((_WORD *)v74 + 12);
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a1 = *a2;
        v12 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v12;
        a1[24] = a2[24];
        *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
        v13 = (uint64_t *)(a2 + 32);
        v14 = *((_QWORD *)a2 + 5);
        if (v14 >> 60 == 15)
        {
          *((_OWORD *)a1 + 2) = *(_OWORD *)v13;
        }
        else
        {
          v42 = *v13;
          sub_1AD0040A0(*v13, *((_QWORD *)a2 + 5));
          *((_QWORD *)a1 + 4) = v42;
          *((_QWORD *)a1 + 5) = v14;
        }
        a1[48] = a2[48];
        v43 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v43;
        v44 = (uint64_t *)(a2 + 72);
        v45 = *((_QWORD *)a2 + 10);
        swift_retain();
        if (v45 >> 60 == 11 || v45 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v44;
        }
        else
        {
          v76 = *v44;
          sub_1AD0040A0(*v44, v45);
          *((_QWORD *)a1 + 9) = v76;
          *((_QWORD *)a1 + 10) = v45;
        }
        a1[88] = a2[88];
        v77 = (uint64_t *)(a2 + 96);
        v78 = *((_QWORD *)a2 + 13);
        if (v78 >> 60 == 15)
        {
          *((_OWORD *)a1 + 6) = *(_OWORD *)v77;
        }
        else
        {
          v79 = *v77;
          sub_1AD0040A0(*v77, *((_QWORD *)a2 + 13));
          *((_QWORD *)a1 + 12) = v79;
          *((_QWORD *)a1 + 13) = v78;
        }
        a1[112] = a2[112];
        v80 = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = v80;
        v81 = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        *((_QWORD *)a1 + 18) = v81;
        a1[152] = a2[152];
        v82 = *((_QWORD *)a2 + 21);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = v82;
        v83 = *((_QWORD *)a2 + 23);
        *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
        *((_QWORD *)a1 + 23) = v83;
        *((_WORD *)a1 + 96) = *((_WORD *)a2 + 96);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v15 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v15;
        v16 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v16;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v17 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v17;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v18 = (uint64_t *)(a2 + 72);
        v19 = *((_QWORD *)a2 + 10);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v19 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v18;
        }
        else
        {
          v46 = *v18;
          sub_1AD0040A0(*v18, v19);
          *((_QWORD *)a1 + 9) = v46;
          *((_QWORD *)a1 + 10) = v19;
        }
        goto LABEL_27;
      case 4u:
        v20 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v20;
        v21 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v21;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v22 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v22;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        v23 = (uint64_t *)(a2 + 80);
        v24 = *((_QWORD *)a2 + 11);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v24 >> 60 == 15)
        {
          *((_OWORD *)a1 + 5) = *(_OWORD *)v23;
        }
        else
        {
          v47 = *v23;
          sub_1AD0040A0(*v23, v24);
          *((_QWORD *)a1 + 10) = v47;
          *((_QWORD *)a1 + 11) = v24;
        }
LABEL_27:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v25 = (uint64_t *)(a2 + 8);
        v26 = *((_QWORD *)a2 + 2);
        if (v26 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v25;
        }
        else
        {
          v48 = *v25;
          sub_1AD0040A0(*v25, *((_QWORD *)a2 + 2));
          *((_QWORD *)a1 + 1) = v48;
          *((_QWORD *)a1 + 2) = v26;
        }
        v49 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v49;
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        v50 = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = v50;
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v51 = (uint64_t *)(a2 + 88);
        v52 = *((_QWORD *)a2 + 12);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v52 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 88) = *(_OWORD *)v51;
        }
        else
        {
          v53 = *v51;
          sub_1AD0040A0(*v51, v52);
          *((_QWORD *)a1 + 11) = v53;
          *((_QWORD *)a1 + 12) = v52;
        }
        a1[104] = a2[104];
        *(_WORD *)(a1 + 105) = *(_WORD *)(a2 + 105);
        v54 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = v54;
        v55 = (uint64_t *)(a2 + 128);
        v56 = *((_QWORD *)a2 + 17);
        swift_retain();
        if (v56 >> 60 == 11 || v56 >> 60 == 15)
        {
          *((_OWORD *)a1 + 8) = *(_OWORD *)v55;
        }
        else
        {
          v84 = *v55;
          sub_1AD0040A0(*v55, v56);
          *((_QWORD *)a1 + 16) = v84;
          *((_QWORD *)a1 + 17) = v56;
        }
        a1[144] = a2[144];
        v85 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = v85;
        v86 = (uint64_t *)(a2 + 168);
        v87 = *((_QWORD *)a2 + 22);
        swift_retain();
        if (v87 >> 60 == 11 || v87 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 168) = *(_OWORD *)v86;
        }
        else
        {
          v92 = *v86;
          sub_1AD0040A0(*v86, v87);
          *((_QWORD *)a1 + 21) = v92;
          *((_QWORD *)a1 + 22) = v87;
        }
        *((_QWORD *)a1 + 23) = *((_QWORD *)a2 + 23);
        a1[192] = a2[192];
        *((_QWORD *)a1 + 25) = *((_QWORD *)a2 + 25);
        a1[208] = a2[208];
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v27 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v27;
        v28 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v28;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v29 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v29;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v30 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v30;
        v31 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v31;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        v32 = *((_QWORD *)a2 + 10);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_QWORD *)a1 + 10) = v32;
        v33 = a2 + 88;
        v34 = *((_QWORD *)a2 + 12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v34 == 1)
        {
          *(_OWORD *)(a1 + 88) = *v33;
        }
        else
        {
          *((_QWORD *)a1 + 11) = *(_QWORD *)v33;
          *((_QWORD *)a1 + 12) = v34;
          swift_bridgeObjectRetain();
        }
        v57 = (uint64_t *)(a2 + 104);
        v58 = *((_QWORD *)a2 + 14);
        if (v58 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 104) = *(_OWORD *)v57;
        }
        else
        {
          v59 = *v57;
          sub_1AD0040A0(*v57, *((_QWORD *)a2 + 14));
          *((_QWORD *)a1 + 13) = v59;
          *((_QWORD *)a1 + 14) = v58;
        }
        v60 = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = v60;
        v61 = a2 + 136;
        v62 = *((_QWORD *)a2 + 18);
        swift_retain();
        if (v62 == 1)
        {
          *(_OWORD *)(a1 + 136) = *v61;
        }
        else
        {
          *((_QWORD *)a1 + 17) = *(_QWORD *)v61;
          *((_QWORD *)a1 + 18) = v62;
          swift_bridgeObjectRetain();
        }
        v63 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = v63;
        v64 = a2 + 168;
        v65 = *((_QWORD *)a2 + 22);
        swift_retain();
        if (v65 == 1)
        {
          *(_OWORD *)(a1 + 168) = *v64;
        }
        else
        {
          *((_QWORD *)a1 + 21) = *(_QWORD *)v64;
          *((_QWORD *)a1 + 22) = v65;
          swift_bridgeObjectRetain();
        }
        a1[184] = a2[184];
        *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
        a1[200] = a2[200];
        *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
        *((_WORD *)a1 + 108) = *((_WORD *)a2 + 108);
        v66 = (uint64_t *)(a2 + 224);
        v67 = *((_QWORD *)a2 + 29);
        if (v67 >> 60 == 15)
        {
          *((_OWORD *)a1 + 14) = *(_OWORD *)v66;
        }
        else
        {
          v68 = *v66;
          sub_1AD0040A0(*v66, *((_QWORD *)a2 + 29));
          *((_QWORD *)a1 + 28) = v68;
          *((_QWORD *)a1 + 29) = v67;
        }
        a1[240] = a2[240];
        *((_QWORD *)a1 + 31) = *((_QWORD *)a2 + 31);
        a1[256] = a2[256];
        *((_QWORD *)a1 + 33) = *((_QWORD *)a2 + 33);
        a1[272] = a2[272];
        *((_QWORD *)a1 + 35) = *((_QWORD *)a2 + 35);
        a1[288] = a2[288];
        a1[304] = a2[304];
        *((_QWORD *)a1 + 37) = *((_QWORD *)a2 + 37);
        *((_QWORD *)a1 + 39) = *((_QWORD *)a2 + 39);
        a1[320] = a2[320];
        *((_QWORD *)a1 + 41) = *((_QWORD *)a2 + 41);
        a1[336] = a2[336];
        *((_QWORD *)a1 + 43) = *((_QWORD *)a2 + 43);
        *((_WORD *)a1 + 176) = *((_WORD *)a2 + 176);
        *((_QWORD *)a1 + 45) = *((_QWORD *)a2 + 45);
        *((_WORD *)a1 + 184) = *((_WORD *)a2 + 184);
        v69 = *((_QWORD *)a2 + 48);
        *((_QWORD *)a1 + 47) = *((_QWORD *)a2 + 47);
        *((_QWORD *)a1 + 48) = v69;
        v70 = (uint64_t *)(a2 + 392);
        v71 = *((_QWORD *)a2 + 50);
        swift_retain();
        if (v71 >> 60 == 11 || v71 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 392) = *(_OWORD *)v70;
        }
        else
        {
          v88 = *v70;
          sub_1AD0040A0(*v70, v71);
          *((_QWORD *)a1 + 49) = v88;
          *((_QWORD *)a1 + 50) = v71;
        }
        v89 = *((_QWORD *)a2 + 52);
        *((_QWORD *)a1 + 51) = *((_QWORD *)a2 + 51);
        *((_QWORD *)a1 + 52) = v89;
        v90 = (uint64_t *)(a2 + 424);
        v91 = *((_QWORD *)a2 + 54);
        swift_retain();
        if (v91 >> 60 == 11 || v91 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 424) = *(_OWORD *)v90;
        }
        else
        {
          v93 = *v90;
          sub_1AD0040A0(*v90, v91);
          *((_QWORD *)a1 + 53) = v93;
          *((_QWORD *)a1 + 54) = v91;
        }
        a1[440] = a2[440];
        v94 = *((_QWORD *)a2 + 57);
        *((_QWORD *)a1 + 56) = *((_QWORD *)a2 + 56);
        *((_QWORD *)a1 + 57) = v94;
        v95 = *((_QWORD *)a2 + 58);
        swift_retain();
        if (v95 != 1)
          swift_bridgeObjectRetain();
        *((_QWORD *)a1 + 58) = v95;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v4 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1AD389008(uint64_t *a1)
{
  uint64_t result;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;

  type metadata accessor for IDSClientMessageType(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      swift_release();
      swift_release();
      if (a1[7] != 1)
        swift_bridgeObjectRelease();
      v3 = (char *)a1 + *(int *)(type metadata accessor for IDSSampleMessage(0) + 24);
      v4 = sub_1AD63B03C();
      v5 = *(_QWORD *)(v4 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
        (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
      return swift_release();
    case 2:
      v6 = a1[5];
      if (v6 >> 60 != 15)
        sub_1AD00412C(a1[4], v6);
      swift_release();
      v7 = a1[10];
      if (v7 >> 60 != 15 && (v7 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(a1[9], v7);
      v9 = a1[13];
      if (v9 >> 60 != 15)
        sub_1AD00412C(a1[12], v9);
      goto LABEL_16;
    case 3:
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      result = swift_bridgeObjectRelease();
      v10 = a1[10];
      if (v10 >> 60 == 15)
        return result;
      v11 = a1[9];
      goto LABEL_31;
    case 4:
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      result = swift_bridgeObjectRelease();
      v10 = a1[11];
      if (v10 >> 60 == 15)
        return result;
      v11 = a1[10];
      goto LABEL_31;
    case 5:
      v12 = a1[2];
      if (v12 >> 60 != 15)
        sub_1AD00412C(a1[1], v12);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v13 = a1[12];
      if (v13 >> 60 != 15)
        sub_1AD00412C(a1[11], v13);
      swift_release();
      v14 = a1[17];
      if (v14 >> 60 != 15 && (v14 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(a1[16], v14);
      result = swift_release();
      v10 = a1[22];
      if (v10 >> 60 == 15 || (v10 & 0xF000000000000000) == 0xB000000000000000)
        return result;
      v11 = a1[21];
LABEL_31:
      result = sub_1AD00412C(v11, v10);
      break;
    case 6:
LABEL_16:
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_50;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (a1[12] != 1)
        swift_bridgeObjectRelease();
      v15 = a1[14];
      if (v15 >> 60 != 15)
        sub_1AD00412C(a1[13], v15);
      swift_release();
      if (a1[18] != 1)
        swift_bridgeObjectRelease();
      swift_release();
      if (a1[22] != 1)
        swift_bridgeObjectRelease();
      v16 = a1[29];
      if (v16 >> 60 != 15)
        sub_1AD00412C(a1[28], v16);
      swift_release();
      v17 = a1[50];
      if (v17 >> 60 != 15 && (v17 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(a1[49], v17);
      swift_release();
      v18 = a1[54];
      if (v18 >> 60 != 15 && (v18 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(a1[53], v18);
      swift_release();
      result = a1[58];
      if (result == 1)
        return result;
LABEL_50:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1AD3893DC(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t *v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t *v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _OWORD *v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  uint64_t v62;
  uint64_t *v63;
  unint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t *v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  v4 = type metadata accessor for IDSClientMessageType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v5 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v5;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      v6 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v6;
      v7 = a2 + 48;
      v8 = *((_QWORD *)a2 + 7);
      swift_retain();
      swift_retain();
      if (v8 == 1)
      {
        *((_OWORD *)a1 + 3) = *v7;
      }
      else
      {
        *((_QWORD *)a1 + 6) = *(_QWORD *)v7;
        *((_QWORD *)a1 + 7) = v8;
        swift_bridgeObjectRetain();
      }
      v32 = type metadata accessor for IDSSampleMessage(0);
      v33 = *(int *)(v32 + 24);
      v34 = &a1[v33];
      v35 = &a2[v33];
      v36 = sub_1AD63B03C();
      v37 = *(_QWORD *)(v36 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v34, v35, v36);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
      }
      v69 = *(int *)(v32 + 28);
      v70 = &a1[v69];
      v71 = &a2[v69];
      v72 = *((_QWORD *)v71 + 1);
      *(_QWORD *)v70 = *(_QWORD *)v71;
      *((_QWORD *)v70 + 1) = v72;
      *((_QWORD *)v70 + 2) = *((_QWORD *)v71 + 2);
      *((_WORD *)v70 + 12) = *((_WORD *)v71 + 12);
      swift_retain();
      goto LABEL_71;
    case 2u:
      *a1 = *a2;
      v9 = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = v9;
      a1[24] = a2[24];
      *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
      v10 = (uint64_t *)(a2 + 32);
      v11 = *((_QWORD *)a2 + 5);
      if (v11 >> 60 == 15)
      {
        *((_OWORD *)a1 + 2) = *(_OWORD *)v10;
      }
      else
      {
        v39 = *v10;
        sub_1AD0040A0(*v10, *((_QWORD *)a2 + 5));
        *((_QWORD *)a1 + 4) = v39;
        *((_QWORD *)a1 + 5) = v11;
      }
      a1[48] = a2[48];
      v40 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v40;
      v41 = (uint64_t *)(a2 + 72);
      v42 = *((_QWORD *)a2 + 10);
      swift_retain();
      if (v42 >> 60 == 11 || v42 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v41;
      }
      else
      {
        v73 = *v41;
        sub_1AD0040A0(*v41, v42);
        *((_QWORD *)a1 + 9) = v73;
        *((_QWORD *)a1 + 10) = v42;
      }
      a1[88] = a2[88];
      v74 = (uint64_t *)(a2 + 96);
      v75 = *((_QWORD *)a2 + 13);
      if (v75 >> 60 == 15)
      {
        *((_OWORD *)a1 + 6) = *(_OWORD *)v74;
      }
      else
      {
        v76 = *v74;
        sub_1AD0040A0(*v74, *((_QWORD *)a2 + 13));
        *((_QWORD *)a1 + 12) = v76;
        *((_QWORD *)a1 + 13) = v75;
      }
      a1[112] = a2[112];
      v77 = *((_QWORD *)a2 + 16);
      *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 16) = v77;
      v78 = *((_QWORD *)a2 + 18);
      *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
      *((_QWORD *)a1 + 18) = v78;
      a1[152] = a2[152];
      v79 = *((_QWORD *)a2 + 21);
      *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 21) = v79;
      v80 = *((_QWORD *)a2 + 23);
      *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
      *((_QWORD *)a1 + 23) = v80;
      *((_WORD *)a1 + 96) = *((_WORD *)a2 + 96);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_71;
    case 3u:
      v12 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v12;
      v13 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v13;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v14 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v14;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v15 = (uint64_t *)(a2 + 72);
      v16 = *((_QWORD *)a2 + 10);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v16 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v15;
      }
      else
      {
        v43 = *v15;
        sub_1AD0040A0(*v15, v16);
        *((_QWORD *)a1 + 9) = v43;
        *((_QWORD *)a1 + 10) = v16;
      }
      goto LABEL_71;
    case 4u:
      v17 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v17;
      v18 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v18;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v19 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v19;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      a1[72] = a2[72];
      v20 = (uint64_t *)(a2 + 80);
      v21 = *((_QWORD *)a2 + 11);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v21 >> 60 == 15)
      {
        *((_OWORD *)a1 + 5) = *(_OWORD *)v20;
      }
      else
      {
        v44 = *v20;
        sub_1AD0040A0(*v20, v21);
        *((_QWORD *)a1 + 10) = v44;
        *((_QWORD *)a1 + 11) = v21;
      }
      goto LABEL_71;
    case 5u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v22 = (uint64_t *)(a2 + 8);
      v23 = *((_QWORD *)a2 + 2);
      if (v23 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)v22;
      }
      else
      {
        v45 = *v22;
        sub_1AD0040A0(*v22, *((_QWORD *)a2 + 2));
        *((_QWORD *)a1 + 1) = v45;
        *((_QWORD *)a1 + 2) = v23;
      }
      v46 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 4) = v46;
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      v47 = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 9) = v47;
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v48 = (uint64_t *)(a2 + 88);
      v49 = *((_QWORD *)a2 + 12);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v49 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 88) = *(_OWORD *)v48;
      }
      else
      {
        v52 = *v48;
        sub_1AD0040A0(*v48, v49);
        *((_QWORD *)a1 + 11) = v52;
        *((_QWORD *)a1 + 12) = v49;
      }
      a1[104] = a2[104];
      *(_WORD *)(a1 + 105) = *(_WORD *)(a2 + 105);
      v53 = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
      *((_QWORD *)a1 + 15) = v53;
      v54 = (uint64_t *)(a2 + 128);
      v55 = *((_QWORD *)a2 + 17);
      swift_retain();
      if (v55 >> 60 == 11 || v55 >> 60 == 15)
      {
        *((_OWORD *)a1 + 8) = *(_OWORD *)v54;
      }
      else
      {
        v81 = *v54;
        sub_1AD0040A0(*v54, v55);
        *((_QWORD *)a1 + 16) = v81;
        *((_QWORD *)a1 + 17) = v55;
      }
      a1[144] = a2[144];
      v82 = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
      *((_QWORD *)a1 + 20) = v82;
      v83 = (uint64_t *)(a2 + 168);
      v84 = *((_QWORD *)a2 + 22);
      swift_retain();
      if (v84 >> 60 == 11 || v84 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 168) = *(_OWORD *)v83;
      }
      else
      {
        v89 = *v83;
        sub_1AD0040A0(*v83, v84);
        *((_QWORD *)a1 + 21) = v89;
        *((_QWORD *)a1 + 22) = v84;
      }
      *((_QWORD *)a1 + 23) = *((_QWORD *)a2 + 23);
      a1[192] = a2[192];
      *((_QWORD *)a1 + 25) = *((_QWORD *)a2 + 25);
      a1[208] = a2[208];
      goto LABEL_71;
    case 6u:
      v24 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v24;
      v25 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v25;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v26 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v26;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      a1[72] = a2[72];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_71;
    case 7u:
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v27 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 4) = v27;
      v28 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v28;
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      v29 = *((_QWORD *)a2 + 10);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_QWORD *)a1 + 10) = v29;
      v30 = a2 + 88;
      v31 = *((_QWORD *)a2 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v31 == 1)
      {
        *(_OWORD *)(a1 + 88) = *v30;
      }
      else
      {
        *((_QWORD *)a1 + 11) = *(_QWORD *)v30;
        *((_QWORD *)a1 + 12) = v31;
        swift_bridgeObjectRetain();
      }
      v50 = (uint64_t *)(a2 + 104);
      v51 = *((_QWORD *)a2 + 14);
      if (v51 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 104) = *(_OWORD *)v50;
      }
      else
      {
        v56 = *v50;
        sub_1AD0040A0(*v50, *((_QWORD *)a2 + 14));
        *((_QWORD *)a1 + 13) = v56;
        *((_QWORD *)a1 + 14) = v51;
      }
      v57 = *((_QWORD *)a2 + 16);
      *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 16) = v57;
      v58 = a2 + 136;
      v59 = *((_QWORD *)a2 + 18);
      swift_retain();
      if (v59 == 1)
      {
        *(_OWORD *)(a1 + 136) = *v58;
      }
      else
      {
        *((_QWORD *)a1 + 17) = *(_QWORD *)v58;
        *((_QWORD *)a1 + 18) = v59;
        swift_bridgeObjectRetain();
      }
      v60 = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
      *((_QWORD *)a1 + 20) = v60;
      v61 = a2 + 168;
      v62 = *((_QWORD *)a2 + 22);
      swift_retain();
      if (v62 == 1)
      {
        *(_OWORD *)(a1 + 168) = *v61;
      }
      else
      {
        *((_QWORD *)a1 + 21) = *(_QWORD *)v61;
        *((_QWORD *)a1 + 22) = v62;
        swift_bridgeObjectRetain();
      }
      a1[184] = a2[184];
      *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
      a1[200] = a2[200];
      *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
      *((_WORD *)a1 + 108) = *((_WORD *)a2 + 108);
      v63 = (uint64_t *)(a2 + 224);
      v64 = *((_QWORD *)a2 + 29);
      if (v64 >> 60 == 15)
      {
        *((_OWORD *)a1 + 14) = *(_OWORD *)v63;
      }
      else
      {
        v65 = *v63;
        sub_1AD0040A0(*v63, *((_QWORD *)a2 + 29));
        *((_QWORD *)a1 + 28) = v65;
        *((_QWORD *)a1 + 29) = v64;
      }
      a1[240] = a2[240];
      *((_QWORD *)a1 + 31) = *((_QWORD *)a2 + 31);
      a1[256] = a2[256];
      *((_QWORD *)a1 + 33) = *((_QWORD *)a2 + 33);
      a1[272] = a2[272];
      *((_QWORD *)a1 + 35) = *((_QWORD *)a2 + 35);
      a1[288] = a2[288];
      a1[304] = a2[304];
      *((_QWORD *)a1 + 37) = *((_QWORD *)a2 + 37);
      *((_QWORD *)a1 + 39) = *((_QWORD *)a2 + 39);
      a1[320] = a2[320];
      *((_QWORD *)a1 + 41) = *((_QWORD *)a2 + 41);
      a1[336] = a2[336];
      *((_QWORD *)a1 + 43) = *((_QWORD *)a2 + 43);
      *((_WORD *)a1 + 176) = *((_WORD *)a2 + 176);
      *((_QWORD *)a1 + 45) = *((_QWORD *)a2 + 45);
      *((_WORD *)a1 + 184) = *((_WORD *)a2 + 184);
      v66 = *((_QWORD *)a2 + 48);
      *((_QWORD *)a1 + 47) = *((_QWORD *)a2 + 47);
      *((_QWORD *)a1 + 48) = v66;
      v67 = (uint64_t *)(a2 + 392);
      v68 = *((_QWORD *)a2 + 50);
      swift_retain();
      if (v68 >> 60 == 11 || v68 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 392) = *(_OWORD *)v67;
      }
      else
      {
        v85 = *v67;
        sub_1AD0040A0(*v67, v68);
        *((_QWORD *)a1 + 49) = v85;
        *((_QWORD *)a1 + 50) = v68;
      }
      v86 = *((_QWORD *)a2 + 52);
      *((_QWORD *)a1 + 51) = *((_QWORD *)a2 + 51);
      *((_QWORD *)a1 + 52) = v86;
      v87 = (uint64_t *)(a2 + 424);
      v88 = *((_QWORD *)a2 + 54);
      swift_retain();
      if (v88 >> 60 == 11 || v88 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 424) = *(_OWORD *)v87;
      }
      else
      {
        v90 = *v87;
        sub_1AD0040A0(*v87, v88);
        *((_QWORD *)a1 + 53) = v90;
        *((_QWORD *)a1 + 54) = v88;
      }
      a1[440] = a2[440];
      v91 = *((_QWORD *)a2 + 57);
      *((_QWORD *)a1 + 56) = *((_QWORD *)a2 + 56);
      *((_QWORD *)a1 + 57) = v91;
      v92 = *((_QWORD *)a2 + 58);
      swift_retain();
      if (v92 != 1)
        swift_bridgeObjectRetain();
      *((_QWORD *)a1 + 58) = v92;
LABEL_71:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1AD389D18(char *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  unint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  if (a1 != a2)
  {
    sub_1AD066230((uint64_t)a1, type metadata accessor for IDSClientMessageType);
    v4 = type metadata accessor for IDSClientMessageType(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v5 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v5;
        v6 = *((_QWORD *)a2 + 2);
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        *((_QWORD *)a1 + 2) = v6;
        v7 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v7;
        v8 = *((_QWORD *)a2 + 7);
        swift_retain();
        swift_retain();
        if (v8 == 1)
        {
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        }
        else
        {
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          swift_bridgeObjectRetain();
        }
        v26 = type metadata accessor for IDSSampleMessage(0);
        v27 = *(int *)(v26 + 24);
        v28 = &a1[v27];
        v29 = &a2[v27];
        v30 = sub_1AD63B03C();
        v31 = *(_QWORD *)(v30 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v29, 1, v30))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
        }
        v71 = *(int *)(v26 + 28);
        v72 = &a1[v71];
        v73 = &a2[v71];
        v74 = *((_QWORD *)v73 + 1);
        *(_QWORD *)v72 = *(_QWORD *)v73;
        *((_QWORD *)v72 + 1) = v74;
        v75 = *((_QWORD *)v73 + 2);
        *((_WORD *)v72 + 12) = *((_WORD *)v73 + 12);
        *((_QWORD *)v72 + 2) = v75;
        swift_retain();
        goto LABEL_72;
      case 2u:
        *a1 = *a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v9 = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 2) = v9;
        a1[25] = a2[25];
        a1[26] = a2[26];
        a1[27] = a2[27];
        a1[28] = a2[28];
        v10 = (uint64_t *)(a2 + 32);
        v11 = *((_QWORD *)a2 + 5);
        if (v11 >> 60 == 15)
        {
          *((_OWORD *)a1 + 2) = *(_OWORD *)v10;
        }
        else
        {
          v33 = *v10;
          sub_1AD0040A0(*v10, *((_QWORD *)a2 + 5));
          *((_QWORD *)a1 + 4) = v33;
          *((_QWORD *)a1 + 5) = v11;
        }
        a1[48] = a2[48];
        v34 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v34;
        v35 = (uint64_t *)(a2 + 72);
        v36 = *((_QWORD *)a2 + 10);
        swift_retain();
        if (v36 >> 60 == 11 || v36 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v35;
        }
        else
        {
          v76 = *v35;
          sub_1AD0040A0(*v35, v36);
          *((_QWORD *)a1 + 9) = v76;
          *((_QWORD *)a1 + 10) = v36;
        }
        a1[88] = a2[88];
        v77 = (uint64_t *)(a2 + 96);
        v78 = *((_QWORD *)a2 + 13);
        if (v78 >> 60 == 15)
        {
          *((_OWORD *)a1 + 6) = *(_OWORD *)v77;
        }
        else
        {
          v79 = *v77;
          sub_1AD0040A0(*v77, *((_QWORD *)a2 + 13));
          *((_QWORD *)a1 + 12) = v79;
          *((_QWORD *)a1 + 13) = v78;
        }
        a1[112] = a2[112];
        v80 = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = v80;
        *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
        a1[152] = a2[152];
        v81 = *((_QWORD *)a2 + 21);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = v81;
        *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
        *((_QWORD *)a1 + 23) = *((_QWORD *)a2 + 23);
        a1[192] = a2[192];
        a1[193] = a2[193];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_72;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v12 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v12;
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v13 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v13;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v14 = (uint64_t *)(a2 + 72);
        v15 = *((_QWORD *)a2 + 10);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v15 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v14;
        }
        else
        {
          v37 = *v14;
          sub_1AD0040A0(*v14, v15);
          *((_QWORD *)a1 + 9) = v37;
          *((_QWORD *)a1 + 10) = v15;
        }
        goto LABEL_72;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v16 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v16;
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v17 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v17;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        v18 = (uint64_t *)(a2 + 80);
        v19 = *((_QWORD *)a2 + 11);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v19 >> 60 == 15)
        {
          *((_OWORD *)a1 + 5) = *(_OWORD *)v18;
        }
        else
        {
          v38 = *v18;
          sub_1AD0040A0(*v18, v19);
          *((_QWORD *)a1 + 10) = v38;
          *((_QWORD *)a1 + 11) = v19;
        }
        goto LABEL_72;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v20 = (uint64_t *)(a2 + 8);
        v21 = *((_QWORD *)a2 + 2);
        if (v21 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v20;
        }
        else
        {
          v39 = *v20;
          sub_1AD0040A0(*v20, *((_QWORD *)a2 + 2));
          *((_QWORD *)a1 + 1) = v39;
          *((_QWORD *)a1 + 2) = v21;
        }
        v40 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v40;
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v41 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v41;
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v42 = (uint64_t *)(a2 + 88);
        v43 = *((_QWORD *)a2 + 12);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v43 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 88) = *(_OWORD *)v42;
        }
        else
        {
          v46 = *v42;
          sub_1AD0040A0(*v42, v43);
          *((_QWORD *)a1 + 11) = v46;
          *((_QWORD *)a1 + 12) = v43;
        }
        a1[104] = a2[104];
        a1[105] = a2[105];
        a1[106] = a2[106];
        v47 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = v47;
        v48 = (uint64_t *)(a2 + 128);
        v49 = *((_QWORD *)a2 + 17);
        swift_retain();
        if (v49 >> 60 == 11 || v49 >> 60 == 15)
        {
          *((_OWORD *)a1 + 8) = *(_OWORD *)v48;
        }
        else
        {
          v82 = *v48;
          sub_1AD0040A0(*v48, v49);
          *((_QWORD *)a1 + 16) = v82;
          *((_QWORD *)a1 + 17) = v49;
        }
        a1[144] = a2[144];
        v83 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = v83;
        v84 = (uint64_t *)(a2 + 168);
        v85 = *((_QWORD *)a2 + 22);
        swift_retain();
        if (v85 >> 60 == 11 || v85 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 168) = *(_OWORD *)v84;
        }
        else
        {
          v90 = *v84;
          sub_1AD0040A0(*v84, v85);
          *((_QWORD *)a1 + 21) = v90;
          *((_QWORD *)a1 + 22) = v85;
        }
        v91 = *((_QWORD *)a2 + 23);
        a1[192] = a2[192];
        *((_QWORD *)a1 + 23) = v91;
        v92 = *((_QWORD *)a2 + 25);
        a1[208] = a2[208];
        *((_QWORD *)a1 + 25) = v92;
        goto LABEL_72;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v22 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v22;
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v23 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v23;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_72;
      case 7u:
        *a1 = *a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v24 = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v24;
        v25 = *((_QWORD *)a2 + 12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v25 == 1)
        {
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        }
        else
        {
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
          swift_bridgeObjectRetain();
        }
        v44 = (uint64_t *)(a2 + 104);
        v45 = *((_QWORD *)a2 + 14);
        if (v45 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 104) = *(_OWORD *)v44;
        }
        else
        {
          v50 = *v44;
          sub_1AD0040A0(*v44, *((_QWORD *)a2 + 14));
          *((_QWORD *)a1 + 13) = v50;
          *((_QWORD *)a1 + 14) = v45;
        }
        v51 = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = v51;
        v52 = *((_QWORD *)a2 + 18);
        swift_retain();
        if (v52 == 1)
        {
          *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        }
        else
        {
          *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
          *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
          swift_bridgeObjectRetain();
        }
        v53 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = v53;
        v54 = *((_QWORD *)a2 + 22);
        swift_retain();
        if (v54 == 1)
        {
          *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
        }
        else
        {
          *((_QWORD *)a1 + 21) = *((_QWORD *)a2 + 21);
          *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
          swift_bridgeObjectRetain();
        }
        a1[184] = a2[184];
        v55 = *((_QWORD *)a2 + 24);
        a1[200] = a2[200];
        *((_QWORD *)a1 + 24) = v55;
        v56 = *((_QWORD *)a2 + 26);
        a1[216] = a2[216];
        *((_QWORD *)a1 + 26) = v56;
        a1[217] = a2[217];
        v57 = (uint64_t *)(a2 + 224);
        v58 = *((_QWORD *)a2 + 29);
        if (v58 >> 60 == 15)
        {
          *((_OWORD *)a1 + 14) = *(_OWORD *)v57;
        }
        else
        {
          v59 = *v57;
          sub_1AD0040A0(*v57, *((_QWORD *)a2 + 29));
          *((_QWORD *)a1 + 28) = v59;
          *((_QWORD *)a1 + 29) = v58;
        }
        a1[240] = a2[240];
        v60 = *((_QWORD *)a2 + 31);
        a1[256] = a2[256];
        *((_QWORD *)a1 + 31) = v60;
        v61 = *((_QWORD *)a2 + 33);
        a1[272] = a2[272];
        *((_QWORD *)a1 + 33) = v61;
        v62 = *((_QWORD *)a2 + 35);
        a1[288] = a2[288];
        *((_QWORD *)a1 + 35) = v62;
        v63 = *((_QWORD *)a2 + 37);
        a1[304] = a2[304];
        *((_QWORD *)a1 + 37) = v63;
        v64 = *((_QWORD *)a2 + 39);
        a1[320] = a2[320];
        *((_QWORD *)a1 + 39) = v64;
        v65 = *((_QWORD *)a2 + 41);
        a1[336] = a2[336];
        *((_QWORD *)a1 + 41) = v65;
        v66 = *((_QWORD *)a2 + 43);
        a1[352] = a2[352];
        *((_QWORD *)a1 + 43) = v66;
        a1[353] = a2[353];
        v67 = *((_QWORD *)a2 + 45);
        a1[368] = a2[368];
        *((_QWORD *)a1 + 45) = v67;
        a1[369] = a2[369];
        v68 = *((_QWORD *)a2 + 48);
        *((_QWORD *)a1 + 47) = *((_QWORD *)a2 + 47);
        *((_QWORD *)a1 + 48) = v68;
        v69 = (uint64_t *)(a2 + 392);
        v70 = *((_QWORD *)a2 + 50);
        swift_retain();
        if (v70 >> 60 == 11 || v70 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 392) = *(_OWORD *)v69;
        }
        else
        {
          v86 = *v69;
          sub_1AD0040A0(*v69, v70);
          *((_QWORD *)a1 + 49) = v86;
          *((_QWORD *)a1 + 50) = v70;
        }
        v87 = *((_QWORD *)a2 + 52);
        *((_QWORD *)a1 + 51) = *((_QWORD *)a2 + 51);
        *((_QWORD *)a1 + 52) = v87;
        v88 = (uint64_t *)(a2 + 424);
        v89 = *((_QWORD *)a2 + 54);
        swift_retain();
        if (v89 >> 60 == 11 || v89 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 424) = *(_OWORD *)v88;
        }
        else
        {
          v93 = *v88;
          sub_1AD0040A0(*v88, v89);
          *((_QWORD *)a1 + 53) = v93;
          *((_QWORD *)a1 + 54) = v89;
        }
        a1[440] = a2[440];
        v94 = *((_QWORD *)a2 + 57);
        *((_QWORD *)a1 + 56) = *((_QWORD *)a2 + 56);
        *((_QWORD *)a1 + 57) = v94;
        v95 = *((_QWORD *)a2 + 58);
        swift_retain();
        if (v95 != 1)
          swift_bridgeObjectRetain();
        *((_QWORD *)a1 + 58) = v95;
LABEL_72:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1AD38A6F4(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;

  v4 = type metadata accessor for IDSClientMessageType(0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
    v5 = a2[3];
    a1[2] = a2[2];
    a1[3] = v5;
    v6 = type metadata accessor for IDSSampleMessage(0);
    v7 = *(int *)(v6 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1AD63B03C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v13 = *(int *)(v6 + 28);
    v14 = (_OWORD *)((char *)a1 + v13);
    v15 = (_OWORD *)((char *)a2 + v13);
    *v14 = *v15;
    *(_OWORD *)((char *)v14 + 10) = *(_OWORD *)((char *)v15 + 10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1AD38A83C(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;

  if (a1 != a2)
  {
    sub_1AD066230((uint64_t)a1, type metadata accessor for IDSClientMessageType);
    v4 = type metadata accessor for IDSClientMessageType(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
      v5 = a2[3];
      a1[2] = a2[2];
      a1[3] = v5;
      v6 = type metadata accessor for IDSSampleMessage(0);
      v7 = *(int *)(v6 + 24);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_1AD63B03C();
      v11 = *(_QWORD *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
      {
        v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      }
      v13 = *(int *)(v6 + 28);
      v14 = (_OWORD *)((char *)a1 + v13);
      v15 = (_OWORD *)((char *)a2 + v13);
      *v14 = *v15;
      *(_OWORD *)((char *)v14 + 10) = *(_OWORD *)((char *)v15 + 10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1AD38A99C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD38A9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IDSClientMessageType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1AD38A9E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD38A9F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for IDSClientMessageType(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1AD38AA30()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IDSClientMessageType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

char *sub_1AD38AA98(char *a1, char *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  uint64_t v63;
  uint64_t v64;
  _OWORD *v65;
  uint64_t v66;
  uint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t *v71;
  unint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v7 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v7;
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        v8 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v8;
        v9 = a2 + 48;
        v10 = *((_QWORD *)a2 + 7);
        swift_retain();
        swift_retain();
        if (v10 == 1)
        {
          *((_OWORD *)a1 + 3) = *v9;
        }
        else
        {
          *((_QWORD *)a1 + 6) = *(_QWORD *)v9;
          *((_QWORD *)a1 + 7) = v10;
          swift_bridgeObjectRetain();
        }
        v36 = type metadata accessor for IDSSampleMessage(0);
        v37 = *(int *)(v36 + 24);
        v38 = &a1[v37];
        v39 = &a2[v37];
        v40 = sub_1AD63B03C();
        v41 = *(_QWORD *)(v40 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v41 + 48))(v39, 1, v40))
        {
          v42 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v38, v39, v40);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v38, 0, 1, v40);
        }
        v73 = *(int *)(v36 + 28);
        v74 = &a1[v73];
        v75 = &a2[v73];
        v76 = *((_QWORD *)v75 + 1);
        *(_QWORD *)v74 = *(_QWORD *)v75;
        *((_QWORD *)v74 + 1) = v76;
        *((_QWORD *)v74 + 2) = *((_QWORD *)v75 + 2);
        *((_WORD *)v74 + 12) = *((_WORD *)v75 + 12);
        swift_retain();
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a1 = *a2;
        v13 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v13;
        a1[24] = a2[24];
        *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
        v14 = (uint64_t *)(a2 + 32);
        v15 = *((_QWORD *)a2 + 5);
        if (v15 >> 60 == 15)
        {
          *((_OWORD *)a1 + 2) = *(_OWORD *)v14;
        }
        else
        {
          v43 = *v14;
          sub_1AD0040A0(*v14, *((_QWORD *)a2 + 5));
          *((_QWORD *)a1 + 4) = v43;
          *((_QWORD *)a1 + 5) = v15;
        }
        a1[48] = a2[48];
        v44 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v44;
        v45 = (uint64_t *)(a2 + 72);
        v46 = *((_QWORD *)a2 + 10);
        swift_retain();
        if (v46 >> 60 == 11 || v46 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v45;
        }
        else
        {
          v77 = *v45;
          sub_1AD0040A0(*v45, v46);
          *((_QWORD *)a1 + 9) = v77;
          *((_QWORD *)a1 + 10) = v46;
        }
        a1[88] = a2[88];
        v78 = (uint64_t *)(a2 + 96);
        v79 = *((_QWORD *)a2 + 13);
        if (v79 >> 60 == 15)
        {
          *((_OWORD *)a1 + 6) = *(_OWORD *)v78;
        }
        else
        {
          v80 = *v78;
          sub_1AD0040A0(*v78, *((_QWORD *)a2 + 13));
          *((_QWORD *)a1 + 12) = v80;
          *((_QWORD *)a1 + 13) = v79;
        }
        a1[112] = a2[112];
        v81 = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = v81;
        v82 = *((_QWORD *)a2 + 18);
        *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        *((_QWORD *)a1 + 18) = v82;
        a1[152] = a2[152];
        v83 = *((_QWORD *)a2 + 21);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = v83;
        v84 = *((_QWORD *)a2 + 23);
        *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
        *((_QWORD *)a1 + 23) = v84;
        *((_WORD *)a1 + 96) = *((_WORD *)a2 + 96);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        v16 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v16;
        v17 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v17;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v18 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v18;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v19 = (uint64_t *)(a2 + 72);
        v20 = *((_QWORD *)a2 + 10);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v20 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v19;
        }
        else
        {
          v47 = *v19;
          sub_1AD0040A0(*v19, v20);
          *((_QWORD *)a1 + 9) = v47;
          *((_QWORD *)a1 + 10) = v20;
        }
        goto LABEL_27;
      case 4u:
        v21 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v21;
        v22 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v22;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v23 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v23;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        v24 = (uint64_t *)(a2 + 80);
        v25 = *((_QWORD *)a2 + 11);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v25 >> 60 == 15)
        {
          *((_OWORD *)a1 + 5) = *(_OWORD *)v24;
        }
        else
        {
          v48 = *v24;
          sub_1AD0040A0(*v24, v25);
          *((_QWORD *)a1 + 10) = v48;
          *((_QWORD *)a1 + 11) = v25;
        }
LABEL_27:
        swift_storeEnumTagMultiPayload();
        break;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v26 = (uint64_t *)(a2 + 8);
        v27 = *((_QWORD *)a2 + 2);
        if (v27 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v26;
        }
        else
        {
          v49 = *v26;
          sub_1AD0040A0(*v26, *((_QWORD *)a2 + 2));
          *((_QWORD *)a1 + 1) = v49;
          *((_QWORD *)a1 + 2) = v27;
        }
        v50 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v50;
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        v51 = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 9) = v51;
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v52 = (uint64_t *)(a2 + 88);
        v53 = *((_QWORD *)a2 + 12);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v53 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 88) = *(_OWORD *)v52;
        }
        else
        {
          v54 = *v52;
          sub_1AD0040A0(*v52, v53);
          *((_QWORD *)a1 + 11) = v54;
          *((_QWORD *)a1 + 12) = v53;
        }
        a1[104] = a2[104];
        *(_WORD *)(a1 + 105) = *(_WORD *)(a2 + 105);
        v55 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = v55;
        v56 = (uint64_t *)(a2 + 128);
        v57 = *((_QWORD *)a2 + 17);
        swift_retain();
        if (v57 >> 60 == 11 || v57 >> 60 == 15)
        {
          *((_OWORD *)a1 + 8) = *(_OWORD *)v56;
        }
        else
        {
          v85 = *v56;
          sub_1AD0040A0(*v56, v57);
          *((_QWORD *)a1 + 16) = v85;
          *((_QWORD *)a1 + 17) = v57;
        }
        a1[144] = a2[144];
        v86 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = v86;
        v87 = (uint64_t *)(a2 + 168);
        v88 = *((_QWORD *)a2 + 22);
        swift_retain();
        if (v88 >> 60 == 11 || v88 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 168) = *(_OWORD *)v87;
        }
        else
        {
          v93 = *v87;
          sub_1AD0040A0(*v87, v88);
          *((_QWORD *)a1 + 21) = v93;
          *((_QWORD *)a1 + 22) = v88;
        }
        *((_QWORD *)a1 + 23) = *((_QWORD *)a2 + 23);
        a1[192] = a2[192];
        *((_QWORD *)a1 + 25) = *((_QWORD *)a2 + 25);
        a1[208] = a2[208];
        swift_storeEnumTagMultiPayload();
        break;
      case 6u:
        v28 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v28;
        v29 = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = v29;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v30 = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = v30;
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
        v31 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v31;
        v32 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v32;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        v33 = *((_QWORD *)a2 + 10);
        *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
        *((_QWORD *)a1 + 10) = v33;
        v34 = a2 + 88;
        v35 = *((_QWORD *)a2 + 12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v35 == 1)
        {
          *(_OWORD *)(a1 + 88) = *v34;
        }
        else
        {
          *((_QWORD *)a1 + 11) = *(_QWORD *)v34;
          *((_QWORD *)a1 + 12) = v35;
          swift_bridgeObjectRetain();
        }
        v58 = (uint64_t *)(a2 + 104);
        v59 = *((_QWORD *)a2 + 14);
        if (v59 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 104) = *(_OWORD *)v58;
        }
        else
        {
          v60 = *v58;
          sub_1AD0040A0(*v58, *((_QWORD *)a2 + 14));
          *((_QWORD *)a1 + 13) = v60;
          *((_QWORD *)a1 + 14) = v59;
        }
        v61 = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = v61;
        v62 = a2 + 136;
        v63 = *((_QWORD *)a2 + 18);
        swift_retain();
        if (v63 == 1)
        {
          *(_OWORD *)(a1 + 136) = *v62;
        }
        else
        {
          *((_QWORD *)a1 + 17) = *(_QWORD *)v62;
          *((_QWORD *)a1 + 18) = v63;
          swift_bridgeObjectRetain();
        }
        v64 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = v64;
        v65 = a2 + 168;
        v66 = *((_QWORD *)a2 + 22);
        swift_retain();
        if (v66 == 1)
        {
          *(_OWORD *)(a1 + 168) = *v65;
        }
        else
        {
          *((_QWORD *)a1 + 21) = *(_QWORD *)v65;
          *((_QWORD *)a1 + 22) = v66;
          swift_bridgeObjectRetain();
        }
        a1[184] = a2[184];
        *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
        a1[200] = a2[200];
        *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
        *((_WORD *)a1 + 108) = *((_WORD *)a2 + 108);
        v67 = (uint64_t *)(a2 + 224);
        v68 = *((_QWORD *)a2 + 29);
        if (v68 >> 60 == 15)
        {
          *((_OWORD *)a1 + 14) = *(_OWORD *)v67;
        }
        else
        {
          v69 = *v67;
          sub_1AD0040A0(*v67, *((_QWORD *)a2 + 29));
          *((_QWORD *)a1 + 28) = v69;
          *((_QWORD *)a1 + 29) = v68;
        }
        a1[240] = a2[240];
        *((_QWORD *)a1 + 31) = *((_QWORD *)a2 + 31);
        a1[256] = a2[256];
        *((_QWORD *)a1 + 33) = *((_QWORD *)a2 + 33);
        a1[272] = a2[272];
        *((_QWORD *)a1 + 35) = *((_QWORD *)a2 + 35);
        a1[288] = a2[288];
        a1[304] = a2[304];
        *((_QWORD *)a1 + 37) = *((_QWORD *)a2 + 37);
        *((_QWORD *)a1 + 39) = *((_QWORD *)a2 + 39);
        a1[320] = a2[320];
        *((_QWORD *)a1 + 41) = *((_QWORD *)a2 + 41);
        a1[336] = a2[336];
        *((_QWORD *)a1 + 43) = *((_QWORD *)a2 + 43);
        *((_WORD *)a1 + 176) = *((_WORD *)a2 + 176);
        *((_QWORD *)a1 + 45) = *((_QWORD *)a2 + 45);
        *((_WORD *)a1 + 184) = *((_WORD *)a2 + 184);
        v70 = *((_QWORD *)a2 + 48);
        *((_QWORD *)a1 + 47) = *((_QWORD *)a2 + 47);
        *((_QWORD *)a1 + 48) = v70;
        v71 = (uint64_t *)(a2 + 392);
        v72 = *((_QWORD *)a2 + 50);
        swift_retain();
        if (v72 >> 60 == 11 || v72 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 392) = *(_OWORD *)v71;
        }
        else
        {
          v89 = *v71;
          sub_1AD0040A0(*v71, v72);
          *((_QWORD *)a1 + 49) = v89;
          *((_QWORD *)a1 + 50) = v72;
        }
        v90 = *((_QWORD *)a2 + 52);
        *((_QWORD *)a1 + 51) = *((_QWORD *)a2 + 51);
        *((_QWORD *)a1 + 52) = v90;
        v91 = (uint64_t *)(a2 + 424);
        v92 = *((_QWORD *)a2 + 54);
        swift_retain();
        if (v92 >> 60 == 11 || v92 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 424) = *(_OWORD *)v91;
        }
        else
        {
          v94 = *v91;
          sub_1AD0040A0(*v91, v92);
          *((_QWORD *)a1 + 53) = v94;
          *((_QWORD *)a1 + 54) = v92;
        }
        a1[440] = a2[440];
        v95 = *((_QWORD *)a2 + 57);
        *((_QWORD *)a1 + 56) = *((_QWORD *)a2 + 56);
        *((_QWORD *)a1 + 57) = v95;
        v96 = *((_QWORD *)a2 + 58);
        swift_retain();
        if (v96 != 1)
          swift_bridgeObjectRetain();
        *((_QWORD *)a1 + 58) = v96;
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1AD38B40C(uint64_t *a1)
{
  uint64_t result;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 1:
      swift_release();
      swift_release();
      if (a1[7] != 1)
        swift_bridgeObjectRelease();
      v3 = (char *)a1 + *(int *)(type metadata accessor for IDSSampleMessage(0) + 24);
      v4 = sub_1AD63B03C();
      v5 = *(_QWORD *)(v4 - 8);
      if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v3, 1, v4))
        (*(void (**)(char *, uint64_t))(v5 + 8))(v3, v4);
      return swift_release();
    case 2:
      v6 = a1[5];
      if (v6 >> 60 != 15)
        sub_1AD00412C(a1[4], v6);
      swift_release();
      v7 = a1[10];
      if (v7 >> 60 != 15 && (v7 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(a1[9], v7);
      v9 = a1[13];
      if (v9 >> 60 != 15)
        sub_1AD00412C(a1[12], v9);
      goto LABEL_16;
    case 3:
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      result = swift_bridgeObjectRelease();
      v10 = a1[10];
      if (v10 >> 60 == 15)
        return result;
      v11 = a1[9];
      goto LABEL_31;
    case 4:
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      result = swift_bridgeObjectRelease();
      v10 = a1[11];
      if (v10 >> 60 == 15)
        return result;
      v11 = a1[10];
      goto LABEL_31;
    case 5:
      v12 = a1[2];
      if (v12 >> 60 != 15)
        sub_1AD00412C(a1[1], v12);
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      v13 = a1[12];
      if (v13 >> 60 != 15)
        sub_1AD00412C(a1[11], v13);
      swift_release();
      v14 = a1[17];
      if (v14 >> 60 != 15 && (v14 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(a1[16], v14);
      result = swift_release();
      v10 = a1[22];
      if (v10 >> 60 == 15 || (v10 & 0xF000000000000000) == 0xB000000000000000)
        return result;
      v11 = a1[21];
LABEL_31:
      result = sub_1AD00412C(v11, v10);
      break;
    case 6:
LABEL_16:
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_50;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (a1[12] != 1)
        swift_bridgeObjectRelease();
      v15 = a1[14];
      if (v15 >> 60 != 15)
        sub_1AD00412C(a1[13], v15);
      swift_release();
      if (a1[18] != 1)
        swift_bridgeObjectRelease();
      swift_release();
      if (a1[22] != 1)
        swift_bridgeObjectRelease();
      v16 = a1[29];
      if (v16 >> 60 != 15)
        sub_1AD00412C(a1[28], v16);
      swift_release();
      v17 = a1[50];
      if (v17 >> 60 != 15 && (v17 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(a1[49], v17);
      swift_release();
      v18 = a1[54];
      if (v18 >> 60 != 15 && (v18 & 0xF000000000000000) != 0xB000000000000000)
        sub_1AD00412C(a1[53], v18);
      swift_release();
      result = a1[58];
      if (result == 1)
        return result;
LABEL_50:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1AD38B7D0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _OWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t *v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t *v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  uint64_t v60;
  uint64_t v61;
  _OWORD *v62;
  uint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  unint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  unint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      v6 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v6;
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
      v7 = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 5) = v7;
      v8 = a2 + 48;
      v9 = *((_QWORD *)a2 + 7);
      swift_retain();
      swift_retain();
      if (v9 == 1)
      {
        *((_OWORD *)a1 + 3) = *v8;
      }
      else
      {
        *((_QWORD *)a1 + 6) = *(_QWORD *)v8;
        *((_QWORD *)a1 + 7) = v9;
        swift_bridgeObjectRetain();
      }
      v33 = type metadata accessor for IDSSampleMessage(0);
      v34 = *(int *)(v33 + 24);
      v35 = &a1[v34];
      v36 = &a2[v34];
      v37 = sub_1AD63B03C();
      v38 = *(_QWORD *)(v37 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
      }
      v70 = *(int *)(v33 + 28);
      v71 = &a1[v70];
      v72 = &a2[v70];
      v73 = *((_QWORD *)v72 + 1);
      *(_QWORD *)v71 = *(_QWORD *)v72;
      *((_QWORD *)v71 + 1) = v73;
      *((_QWORD *)v71 + 2) = *((_QWORD *)v72 + 2);
      *((_WORD *)v71 + 12) = *((_WORD *)v72 + 12);
      swift_retain();
      goto LABEL_71;
    case 2u:
      *a1 = *a2;
      v10 = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
      *((_QWORD *)a1 + 2) = v10;
      a1[24] = a2[24];
      *(_DWORD *)(a1 + 25) = *(_DWORD *)(a2 + 25);
      v11 = (uint64_t *)(a2 + 32);
      v12 = *((_QWORD *)a2 + 5);
      if (v12 >> 60 == 15)
      {
        *((_OWORD *)a1 + 2) = *(_OWORD *)v11;
      }
      else
      {
        v40 = *v11;
        sub_1AD0040A0(*v11, *((_QWORD *)a2 + 5));
        *((_QWORD *)a1 + 4) = v40;
        *((_QWORD *)a1 + 5) = v12;
      }
      a1[48] = a2[48];
      v41 = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 8) = v41;
      v42 = (uint64_t *)(a2 + 72);
      v43 = *((_QWORD *)a2 + 10);
      swift_retain();
      if (v43 >> 60 == 11 || v43 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v42;
      }
      else
      {
        v74 = *v42;
        sub_1AD0040A0(*v42, v43);
        *((_QWORD *)a1 + 9) = v74;
        *((_QWORD *)a1 + 10) = v43;
      }
      a1[88] = a2[88];
      v75 = (uint64_t *)(a2 + 96);
      v76 = *((_QWORD *)a2 + 13);
      if (v76 >> 60 == 15)
      {
        *((_OWORD *)a1 + 6) = *(_OWORD *)v75;
      }
      else
      {
        v77 = *v75;
        sub_1AD0040A0(*v75, *((_QWORD *)a2 + 13));
        *((_QWORD *)a1 + 12) = v77;
        *((_QWORD *)a1 + 13) = v76;
      }
      a1[112] = a2[112];
      v78 = *((_QWORD *)a2 + 16);
      *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 16) = v78;
      v79 = *((_QWORD *)a2 + 18);
      *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
      *((_QWORD *)a1 + 18) = v79;
      a1[152] = a2[152];
      v80 = *((_QWORD *)a2 + 21);
      *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 21) = v80;
      v81 = *((_QWORD *)a2 + 23);
      *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
      *((_QWORD *)a1 + 23) = v81;
      *((_WORD *)a1 + 96) = *((_WORD *)a2 + 96);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_71;
    case 3u:
      v13 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v13;
      v14 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v14;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v15 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v15;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      v16 = (uint64_t *)(a2 + 72);
      v17 = *((_QWORD *)a2 + 10);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v17 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 72) = *(_OWORD *)v16;
      }
      else
      {
        v44 = *v16;
        sub_1AD0040A0(*v16, v17);
        *((_QWORD *)a1 + 9) = v44;
        *((_QWORD *)a1 + 10) = v17;
      }
      goto LABEL_71;
    case 4u:
      v18 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v18;
      v19 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v19;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v20 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v20;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      a1[72] = a2[72];
      v21 = (uint64_t *)(a2 + 80);
      v22 = *((_QWORD *)a2 + 11);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v22 >> 60 == 15)
      {
        *((_OWORD *)a1 + 5) = *(_OWORD *)v21;
      }
      else
      {
        v45 = *v21;
        sub_1AD0040A0(*v21, v22);
        *((_QWORD *)a1 + 10) = v45;
        *((_QWORD *)a1 + 11) = v22;
      }
      goto LABEL_71;
    case 5u:
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v23 = (uint64_t *)(a2 + 8);
      v24 = *((_QWORD *)a2 + 2);
      if (v24 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 8) = *(_OWORD *)v23;
      }
      else
      {
        v46 = *v23;
        sub_1AD0040A0(*v23, *((_QWORD *)a2 + 2));
        *((_QWORD *)a1 + 1) = v46;
        *((_QWORD *)a1 + 2) = v24;
      }
      v47 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 4) = v47;
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
      v48 = *((_QWORD *)a2 + 9);
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      *((_QWORD *)a1 + 9) = v48;
      *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
      v49 = (uint64_t *)(a2 + 88);
      v50 = *((_QWORD *)a2 + 12);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      if (v50 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 88) = *(_OWORD *)v49;
      }
      else
      {
        v53 = *v49;
        sub_1AD0040A0(*v49, v50);
        *((_QWORD *)a1 + 11) = v53;
        *((_QWORD *)a1 + 12) = v50;
      }
      a1[104] = a2[104];
      *(_WORD *)(a1 + 105) = *(_WORD *)(a2 + 105);
      v54 = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
      *((_QWORD *)a1 + 15) = v54;
      v55 = (uint64_t *)(a2 + 128);
      v56 = *((_QWORD *)a2 + 17);
      swift_retain();
      if (v56 >> 60 == 11 || v56 >> 60 == 15)
      {
        *((_OWORD *)a1 + 8) = *(_OWORD *)v55;
      }
      else
      {
        v82 = *v55;
        sub_1AD0040A0(*v55, v56);
        *((_QWORD *)a1 + 16) = v82;
        *((_QWORD *)a1 + 17) = v56;
      }
      a1[144] = a2[144];
      v83 = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
      *((_QWORD *)a1 + 20) = v83;
      v84 = (uint64_t *)(a2 + 168);
      v85 = *((_QWORD *)a2 + 22);
      swift_retain();
      if (v85 >> 60 == 11 || v85 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 168) = *(_OWORD *)v84;
      }
      else
      {
        v90 = *v84;
        sub_1AD0040A0(*v84, v85);
        *((_QWORD *)a1 + 21) = v90;
        *((_QWORD *)a1 + 22) = v85;
      }
      *((_QWORD *)a1 + 23) = *((_QWORD *)a2 + 23);
      a1[192] = a2[192];
      *((_QWORD *)a1 + 25) = *((_QWORD *)a2 + 25);
      a1[208] = a2[208];
      goto LABEL_71;
    case 6u:
      v25 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v25;
      v26 = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
      *((_QWORD *)a1 + 3) = v26;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v27 = *((_QWORD *)a2 + 7);
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 7) = v27;
      *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
      a1[72] = a2[72];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      swift_bridgeObjectRetain();
      goto LABEL_71;
    case 7u:
      *a1 = *a2;
      *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
      v28 = *((_QWORD *)a2 + 4);
      *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
      *((_QWORD *)a1 + 4) = v28;
      v29 = *((_QWORD *)a2 + 6);
      *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
      *((_QWORD *)a1 + 6) = v29;
      *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
      v30 = *((_QWORD *)a2 + 10);
      *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
      *((_QWORD *)a1 + 10) = v30;
      v31 = a2 + 88;
      v32 = *((_QWORD *)a2 + 12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v32 == 1)
      {
        *(_OWORD *)(a1 + 88) = *v31;
      }
      else
      {
        *((_QWORD *)a1 + 11) = *(_QWORD *)v31;
        *((_QWORD *)a1 + 12) = v32;
        swift_bridgeObjectRetain();
      }
      v51 = (uint64_t *)(a2 + 104);
      v52 = *((_QWORD *)a2 + 14);
      if (v52 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 104) = *(_OWORD *)v51;
      }
      else
      {
        v57 = *v51;
        sub_1AD0040A0(*v51, *((_QWORD *)a2 + 14));
        *((_QWORD *)a1 + 13) = v57;
        *((_QWORD *)a1 + 14) = v52;
      }
      v58 = *((_QWORD *)a2 + 16);
      *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
      *((_QWORD *)a1 + 16) = v58;
      v59 = a2 + 136;
      v60 = *((_QWORD *)a2 + 18);
      swift_retain();
      if (v60 == 1)
      {
        *(_OWORD *)(a1 + 136) = *v59;
      }
      else
      {
        *((_QWORD *)a1 + 17) = *(_QWORD *)v59;
        *((_QWORD *)a1 + 18) = v60;
        swift_bridgeObjectRetain();
      }
      v61 = *((_QWORD *)a2 + 20);
      *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
      *((_QWORD *)a1 + 20) = v61;
      v62 = a2 + 168;
      v63 = *((_QWORD *)a2 + 22);
      swift_retain();
      if (v63 == 1)
      {
        *(_OWORD *)(a1 + 168) = *v62;
      }
      else
      {
        *((_QWORD *)a1 + 21) = *(_QWORD *)v62;
        *((_QWORD *)a1 + 22) = v63;
        swift_bridgeObjectRetain();
      }
      a1[184] = a2[184];
      *((_QWORD *)a1 + 24) = *((_QWORD *)a2 + 24);
      a1[200] = a2[200];
      *((_QWORD *)a1 + 26) = *((_QWORD *)a2 + 26);
      *((_WORD *)a1 + 108) = *((_WORD *)a2 + 108);
      v64 = (uint64_t *)(a2 + 224);
      v65 = *((_QWORD *)a2 + 29);
      if (v65 >> 60 == 15)
      {
        *((_OWORD *)a1 + 14) = *(_OWORD *)v64;
      }
      else
      {
        v66 = *v64;
        sub_1AD0040A0(*v64, *((_QWORD *)a2 + 29));
        *((_QWORD *)a1 + 28) = v66;
        *((_QWORD *)a1 + 29) = v65;
      }
      a1[240] = a2[240];
      *((_QWORD *)a1 + 31) = *((_QWORD *)a2 + 31);
      a1[256] = a2[256];
      *((_QWORD *)a1 + 33) = *((_QWORD *)a2 + 33);
      a1[272] = a2[272];
      *((_QWORD *)a1 + 35) = *((_QWORD *)a2 + 35);
      a1[288] = a2[288];
      a1[304] = a2[304];
      *((_QWORD *)a1 + 37) = *((_QWORD *)a2 + 37);
      *((_QWORD *)a1 + 39) = *((_QWORD *)a2 + 39);
      a1[320] = a2[320];
      *((_QWORD *)a1 + 41) = *((_QWORD *)a2 + 41);
      a1[336] = a2[336];
      *((_QWORD *)a1 + 43) = *((_QWORD *)a2 + 43);
      *((_WORD *)a1 + 176) = *((_WORD *)a2 + 176);
      *((_QWORD *)a1 + 45) = *((_QWORD *)a2 + 45);
      *((_WORD *)a1 + 184) = *((_WORD *)a2 + 184);
      v67 = *((_QWORD *)a2 + 48);
      *((_QWORD *)a1 + 47) = *((_QWORD *)a2 + 47);
      *((_QWORD *)a1 + 48) = v67;
      v68 = (uint64_t *)(a2 + 392);
      v69 = *((_QWORD *)a2 + 50);
      swift_retain();
      if (v69 >> 60 == 11 || v69 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 392) = *(_OWORD *)v68;
      }
      else
      {
        v86 = *v68;
        sub_1AD0040A0(*v68, v69);
        *((_QWORD *)a1 + 49) = v86;
        *((_QWORD *)a1 + 50) = v69;
      }
      v87 = *((_QWORD *)a2 + 52);
      *((_QWORD *)a1 + 51) = *((_QWORD *)a2 + 51);
      *((_QWORD *)a1 + 52) = v87;
      v88 = (uint64_t *)(a2 + 424);
      v89 = *((_QWORD *)a2 + 54);
      swift_retain();
      if (v89 >> 60 == 11 || v89 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 424) = *(_OWORD *)v88;
      }
      else
      {
        v91 = *v88;
        sub_1AD0040A0(*v88, v89);
        *((_QWORD *)a1 + 53) = v91;
        *((_QWORD *)a1 + 54) = v89;
      }
      a1[440] = a2[440];
      v92 = *((_QWORD *)a2 + 57);
      *((_QWORD *)a1 + 56) = *((_QWORD *)a2 + 56);
      *((_QWORD *)a1 + 57) = v92;
      v93 = *((_QWORD *)a2 + 58);
      swift_retain();
      if (v93 != 1)
        swift_bridgeObjectRetain();
      *((_QWORD *)a1 + 58) = v93;
LABEL_71:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1AD38C104(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  unint64_t v44;
  uint64_t *v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  unint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t *v78;
  unint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  if (a1 != a2)
  {
    sub_1AD066230((uint64_t)a1, type metadata accessor for IDSClientMessageType);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        v6 = *((_QWORD *)a2 + 1);
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = v6;
        v7 = *((_QWORD *)a2 + 2);
        *((_WORD *)a1 + 12) = *((_WORD *)a2 + 12);
        *((_QWORD *)a1 + 2) = v7;
        v8 = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = v8;
        v9 = *((_QWORD *)a2 + 7);
        swift_retain();
        swift_retain();
        if (v9 == 1)
        {
          *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
        }
        else
        {
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
          swift_bridgeObjectRetain();
        }
        v27 = type metadata accessor for IDSSampleMessage(0);
        v28 = *(int *)(v27 + 24);
        v29 = &a1[v28];
        v30 = &a2[v28];
        v31 = sub_1AD63B03C();
        v32 = *(_QWORD *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v30, 1, v31))
        {
          v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
          memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v29, v30, v31);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v29, 0, 1, v31);
        }
        v72 = *(int *)(v27 + 28);
        v73 = &a1[v72];
        v74 = &a2[v72];
        v75 = *((_QWORD *)v74 + 1);
        *(_QWORD *)v73 = *(_QWORD *)v74;
        *((_QWORD *)v73 + 1) = v75;
        v76 = *((_QWORD *)v74 + 2);
        *((_WORD *)v73 + 12) = *((_WORD *)v74 + 12);
        *((_QWORD *)v73 + 2) = v76;
        swift_retain();
        goto LABEL_72;
      case 2u:
        *a1 = *a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 2);
        a1[24] = a2[24];
        *((_QWORD *)a1 + 2) = v10;
        a1[25] = a2[25];
        a1[26] = a2[26];
        a1[27] = a2[27];
        a1[28] = a2[28];
        v11 = (uint64_t *)(a2 + 32);
        v12 = *((_QWORD *)a2 + 5);
        if (v12 >> 60 == 15)
        {
          *((_OWORD *)a1 + 2) = *(_OWORD *)v11;
        }
        else
        {
          v34 = *v11;
          sub_1AD0040A0(*v11, *((_QWORD *)a2 + 5));
          *((_QWORD *)a1 + 4) = v34;
          *((_QWORD *)a1 + 5) = v12;
        }
        a1[48] = a2[48];
        v35 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v35;
        v36 = (uint64_t *)(a2 + 72);
        v37 = *((_QWORD *)a2 + 10);
        swift_retain();
        if (v37 >> 60 == 11 || v37 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v36;
        }
        else
        {
          v77 = *v36;
          sub_1AD0040A0(*v36, v37);
          *((_QWORD *)a1 + 9) = v77;
          *((_QWORD *)a1 + 10) = v37;
        }
        a1[88] = a2[88];
        v78 = (uint64_t *)(a2 + 96);
        v79 = *((_QWORD *)a2 + 13);
        if (v79 >> 60 == 15)
        {
          *((_OWORD *)a1 + 6) = *(_OWORD *)v78;
        }
        else
        {
          v80 = *v78;
          sub_1AD0040A0(*v78, *((_QWORD *)a2 + 13));
          *((_QWORD *)a1 + 12) = v80;
          *((_QWORD *)a1 + 13) = v79;
        }
        a1[112] = a2[112];
        v81 = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = v81;
        *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
        *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
        a1[152] = a2[152];
        v82 = *((_QWORD *)a2 + 21);
        *((_QWORD *)a1 + 20) = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 21) = v82;
        *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
        *((_QWORD *)a1 + 23) = *((_QWORD *)a2 + 23);
        a1[192] = a2[192];
        a1[193] = a2[193];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_72;
      case 3u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v13 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v13;
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v14 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v14;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v15 = (uint64_t *)(a2 + 72);
        v16 = *((_QWORD *)a2 + 10);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v16 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 72) = *(_OWORD *)v15;
        }
        else
        {
          v38 = *v15;
          sub_1AD0040A0(*v15, v16);
          *((_QWORD *)a1 + 9) = v38;
          *((_QWORD *)a1 + 10) = v16;
        }
        goto LABEL_72;
      case 4u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v17 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v17;
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v18 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v18;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        v19 = (uint64_t *)(a2 + 80);
        v20 = *((_QWORD *)a2 + 11);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v20 >> 60 == 15)
        {
          *((_OWORD *)a1 + 5) = *(_OWORD *)v19;
        }
        else
        {
          v39 = *v19;
          sub_1AD0040A0(*v19, v20);
          *((_QWORD *)a1 + 10) = v39;
          *((_QWORD *)a1 + 11) = v20;
        }
        goto LABEL_72;
      case 5u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v21 = (uint64_t *)(a2 + 8);
        v22 = *((_QWORD *)a2 + 2);
        if (v22 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 8) = *(_OWORD *)v21;
        }
        else
        {
          v40 = *v21;
          sub_1AD0040A0(*v21, *((_QWORD *)a2 + 2));
          *((_QWORD *)a1 + 1) = v40;
          *((_QWORD *)a1 + 2) = v22;
        }
        v41 = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = v41;
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v42 = *((_QWORD *)a2 + 8);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = v42;
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = *((_QWORD *)a2 + 10);
        v43 = (uint64_t *)(a2 + 88);
        v44 = *((_QWORD *)a2 + 12);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        if (v44 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 88) = *(_OWORD *)v43;
        }
        else
        {
          v47 = *v43;
          sub_1AD0040A0(*v43, v44);
          *((_QWORD *)a1 + 11) = v47;
          *((_QWORD *)a1 + 12) = v44;
        }
        a1[104] = a2[104];
        a1[105] = a2[105];
        a1[106] = a2[106];
        v48 = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 14) = *((_QWORD *)a2 + 14);
        *((_QWORD *)a1 + 15) = v48;
        v49 = (uint64_t *)(a2 + 128);
        v50 = *((_QWORD *)a2 + 17);
        swift_retain();
        if (v50 >> 60 == 11 || v50 >> 60 == 15)
        {
          *((_OWORD *)a1 + 8) = *(_OWORD *)v49;
        }
        else
        {
          v83 = *v49;
          sub_1AD0040A0(*v49, v50);
          *((_QWORD *)a1 + 16) = v83;
          *((_QWORD *)a1 + 17) = v50;
        }
        a1[144] = a2[144];
        v84 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = v84;
        v85 = (uint64_t *)(a2 + 168);
        v86 = *((_QWORD *)a2 + 22);
        swift_retain();
        if (v86 >> 60 == 11 || v86 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 168) = *(_OWORD *)v85;
        }
        else
        {
          v91 = *v85;
          sub_1AD0040A0(*v85, v86);
          *((_QWORD *)a1 + 21) = v91;
          *((_QWORD *)a1 + 22) = v86;
        }
        v92 = *((_QWORD *)a2 + 23);
        a1[192] = a2[192];
        *((_QWORD *)a1 + 23) = v92;
        v93 = *((_QWORD *)a2 + 25);
        a1[208] = a2[208];
        *((_QWORD *)a1 + 25) = v93;
        goto LABEL_72;
      case 6u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        v23 = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = v23;
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v24 = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = v24;
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        a1[72] = a2[72];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
        swift_bridgeObjectRetain();
        goto LABEL_72;
      case 7u:
        *a1 = *a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        *((_QWORD *)a1 + 2) = *((_QWORD *)a2 + 2);
        *((_QWORD *)a1 + 3) = *((_QWORD *)a2 + 3);
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        *((_QWORD *)a1 + 5) = *((_QWORD *)a2 + 5);
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        *((_QWORD *)a1 + 7) = *((_QWORD *)a2 + 7);
        *((_QWORD *)a1 + 8) = *((_QWORD *)a2 + 8);
        v25 = *((_QWORD *)a2 + 10);
        *((_QWORD *)a1 + 9) = *((_QWORD *)a2 + 9);
        *((_QWORD *)a1 + 10) = v25;
        v26 = *((_QWORD *)a2 + 12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_retain();
        if (v26 == 1)
        {
          *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        }
        else
        {
          *((_QWORD *)a1 + 11) = *((_QWORD *)a2 + 11);
          *((_QWORD *)a1 + 12) = *((_QWORD *)a2 + 12);
          swift_bridgeObjectRetain();
        }
        v45 = (uint64_t *)(a2 + 104);
        v46 = *((_QWORD *)a2 + 14);
        if (v46 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 104) = *(_OWORD *)v45;
        }
        else
        {
          v51 = *v45;
          sub_1AD0040A0(*v45, *((_QWORD *)a2 + 14));
          *((_QWORD *)a1 + 13) = v51;
          *((_QWORD *)a1 + 14) = v46;
        }
        v52 = *((_QWORD *)a2 + 16);
        *((_QWORD *)a1 + 15) = *((_QWORD *)a2 + 15);
        *((_QWORD *)a1 + 16) = v52;
        v53 = *((_QWORD *)a2 + 18);
        swift_retain();
        if (v53 == 1)
        {
          *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
        }
        else
        {
          *((_QWORD *)a1 + 17) = *((_QWORD *)a2 + 17);
          *((_QWORD *)a1 + 18) = *((_QWORD *)a2 + 18);
          swift_bridgeObjectRetain();
        }
        v54 = *((_QWORD *)a2 + 20);
        *((_QWORD *)a1 + 19) = *((_QWORD *)a2 + 19);
        *((_QWORD *)a1 + 20) = v54;
        v55 = *((_QWORD *)a2 + 22);
        swift_retain();
        if (v55 == 1)
        {
          *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
        }
        else
        {
          *((_QWORD *)a1 + 21) = *((_QWORD *)a2 + 21);
          *((_QWORD *)a1 + 22) = *((_QWORD *)a2 + 22);
          swift_bridgeObjectRetain();
        }
        a1[184] = a2[184];
        v56 = *((_QWORD *)a2 + 24);
        a1[200] = a2[200];
        *((_QWORD *)a1 + 24) = v56;
        v57 = *((_QWORD *)a2 + 26);
        a1[216] = a2[216];
        *((_QWORD *)a1 + 26) = v57;
        a1[217] = a2[217];
        v58 = (uint64_t *)(a2 + 224);
        v59 = *((_QWORD *)a2 + 29);
        if (v59 >> 60 == 15)
        {
          *((_OWORD *)a1 + 14) = *(_OWORD *)v58;
        }
        else
        {
          v60 = *v58;
          sub_1AD0040A0(*v58, *((_QWORD *)a2 + 29));
          *((_QWORD *)a1 + 28) = v60;
          *((_QWORD *)a1 + 29) = v59;
        }
        a1[240] = a2[240];
        v61 = *((_QWORD *)a2 + 31);
        a1[256] = a2[256];
        *((_QWORD *)a1 + 31) = v61;
        v62 = *((_QWORD *)a2 + 33);
        a1[272] = a2[272];
        *((_QWORD *)a1 + 33) = v62;
        v63 = *((_QWORD *)a2 + 35);
        a1[288] = a2[288];
        *((_QWORD *)a1 + 35) = v63;
        v64 = *((_QWORD *)a2 + 37);
        a1[304] = a2[304];
        *((_QWORD *)a1 + 37) = v64;
        v65 = *((_QWORD *)a2 + 39);
        a1[320] = a2[320];
        *((_QWORD *)a1 + 39) = v65;
        v66 = *((_QWORD *)a2 + 41);
        a1[336] = a2[336];
        *((_QWORD *)a1 + 41) = v66;
        v67 = *((_QWORD *)a2 + 43);
        a1[352] = a2[352];
        *((_QWORD *)a1 + 43) = v67;
        a1[353] = a2[353];
        v68 = *((_QWORD *)a2 + 45);
        a1[368] = a2[368];
        *((_QWORD *)a1 + 45) = v68;
        a1[369] = a2[369];
        v69 = *((_QWORD *)a2 + 48);
        *((_QWORD *)a1 + 47) = *((_QWORD *)a2 + 47);
        *((_QWORD *)a1 + 48) = v69;
        v70 = (uint64_t *)(a2 + 392);
        v71 = *((_QWORD *)a2 + 50);
        swift_retain();
        if (v71 >> 60 == 11 || v71 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 392) = *(_OWORD *)v70;
        }
        else
        {
          v87 = *v70;
          sub_1AD0040A0(*v70, v71);
          *((_QWORD *)a1 + 49) = v87;
          *((_QWORD *)a1 + 50) = v71;
        }
        v88 = *((_QWORD *)a2 + 52);
        *((_QWORD *)a1 + 51) = *((_QWORD *)a2 + 51);
        *((_QWORD *)a1 + 52) = v88;
        v89 = (uint64_t *)(a2 + 424);
        v90 = *((_QWORD *)a2 + 54);
        swift_retain();
        if (v90 >> 60 == 11 || v90 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 424) = *(_OWORD *)v89;
        }
        else
        {
          v94 = *v89;
          sub_1AD0040A0(*v89, v90);
          *((_QWORD *)a1 + 53) = v94;
          *((_QWORD *)a1 + 54) = v90;
        }
        a1[440] = a2[440];
        v95 = *((_QWORD *)a2 + 57);
        *((_QWORD *)a1 + 56) = *((_QWORD *)a2 + 56);
        *((_QWORD *)a1 + 57) = v95;
        v96 = *((_QWORD *)a2 + 58);
        swift_retain();
        if (v96 != 1)
          swift_bridgeObjectRetain();
        *((_QWORD *)a1 + 58) = v96;
LABEL_72:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

_OWORD *sub_1AD38CAD8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = type metadata accessor for IDSSampleMessage(0);
    v8 = *(int *)(v7 + 24);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1AD63B03C();
    v12 = *(_QWORD *)(v11 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v14 = *(int *)(v7 + 28);
    v15 = (_OWORD *)((char *)a1 + v14);
    v16 = (_OWORD *)((char *)a2 + v14);
    *v15 = *v16;
    *(_OWORD *)((char *)v15 + 10) = *(_OWORD *)((char *)v16 + 10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *sub_1AD38CC18(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  _OWORD *v16;

  if (a1 != a2)
  {
    sub_1AD066230((uint64_t)a1, type metadata accessor for IDSClientMessageType);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      *(_OWORD *)((char *)a1 + 10) = *(_OWORD *)((char *)a2 + 10);
      v6 = a2[3];
      a1[2] = a2[2];
      a1[3] = v6;
      v7 = type metadata accessor for IDSSampleMessage(0);
      v8 = *(int *)(v7 + 24);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1AD63B03C();
      v12 = *(_QWORD *)(v11 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      }
      v14 = *(int *)(v7 + 28);
      v15 = (_OWORD *)((char *)a1 + v14);
      v16 = (_OWORD *)((char *)a2 + v14);
      *v15 = *v16;
      *(_OWORD *)((char *)v15 + 10) = *(_OWORD *)((char *)v16 + 10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1AD38CD70()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for IDSSampleMessage(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for IDSClientMessageResult.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AD38CE5C + 4 * byte_1AD67CD50[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AD38CE7C + 4 * byte_1AD67CD55[v4]))();
}

_BYTE *sub_1AD38CE5C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AD38CE7C(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD38CE84(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD38CE8C(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD38CE94(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD38CE9C(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for IDSClientMessageResult.CodingKeys()
{
  return &type metadata for IDSClientMessageResult.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for IDSClientMessageContext.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD38CF04 + 4 * byte_1AD67CD5F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD38CF38 + 4 * byte_1AD67CD5A[v4]))();
}

uint64_t sub_1AD38CF38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD38CF40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD38CF48);
  return result;
}

uint64_t sub_1AD38CF54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD38CF5CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD38CF60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD38CF68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IDSClientMessageContext.CodingKeys()
{
  return &type metadata for IDSClientMessageContext.CodingKeys;
}

unint64_t sub_1AD38CF88()
{
  unint64_t result;

  result = qword_1EECDB488;
  if (!qword_1EECDB488)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D06C, &type metadata for IDSClientMessageContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDB488);
  }
  return result;
}

unint64_t sub_1AD38CFD0()
{
  unint64_t result;

  result = qword_1EECDB490;
  if (!qword_1EECDB490)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D124, &type metadata for IDSClientMessageResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDB490);
  }
  return result;
}

unint64_t sub_1AD38D018()
{
  unint64_t result;

  result = qword_1EECDB498;
  if (!qword_1EECDB498)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D094, &type metadata for IDSClientMessageResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDB498);
  }
  return result;
}

unint64_t sub_1AD38D060()
{
  unint64_t result;

  result = qword_1EECDB4A0;
  if (!qword_1EECDB4A0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D0BC, &type metadata for IDSClientMessageResult.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDB4A0);
  }
  return result;
}

unint64_t sub_1AD38D0A8()
{
  unint64_t result;

  result = qword_1EECDB4A8;
  if (!qword_1EECDB4A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67CFDC, &type metadata for IDSClientMessageContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDB4A8);
  }
  return result;
}

unint64_t sub_1AD38D0F0()
{
  unint64_t result;

  result = qword_1EECDB4B0;
  if (!qword_1EECDB4B0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D004, &type metadata for IDSClientMessageContext.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDB4B0);
  }
  return result;
}

uint64_t sub_1AD38D134(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x65636976726573 && a2 == 0xE700000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646E616D6D6F63 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t EmojiTapBack.$associatedMessageEmoji.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[8];
  v4 = v1[9];
  v3 = v1[10];
  *a1 = v1[7];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 EmojiTapBack.$associatedMessageEmoji.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 56) = *a1;
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  return result;
}

uint64_t EmojiTapBack.$participantDestinationIdentifiers.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[12];
  v3 = v1[13];
  *a1 = v1[11];
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 EmojiTapBack.$participantDestinationIdentifiers.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 88) = *a1;
  *(_QWORD *)(v1 + 104) = v3;
  return result;
}

uint64_t EmojiTapBack.associatedMessageEmoji.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t EmojiTapBack.participantDestinationIdentifiers.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 104))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

BlastDoor::EmojiTapBack::AssociatedMessageType __swiftcall EmojiTapBack.AssociatedMessageType.init(defaultingRawValue:)(Swift::Int defaultingRawValue)
{
  char *v1;
  char v2;

  v2 = defaultingRawValue == 2006;
  if (defaultingRawValue == 3006)
    v2 = 2;
  *v1 = v2;
  return (char)defaultingRawValue;
}

BlastDoor::EmojiTapBack::AssociatedMessageType_optional __swiftcall EmojiTapBack.AssociatedMessageType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;

  if (rawValue == 3006)
    v2 = 2;
  else
    v2 = 3;
  if (rawValue == 2006)
    v3 = 1;
  else
    v3 = v2;
  if (!rawValue)
    v3 = 0;
  *v1 = v3;
  return (BlastDoor::EmojiTapBack::AssociatedMessageType_optional)rawValue;
}

uint64_t EmojiTapBack.AssociatedMessageType.rawValue.getter()
{
  char *v0;

  return qword_1AD67D3C8[*v0];
}

BOOL sub_1AD38D448(char *a1, char *a2)
{
  return qword_1AD67D3C8[*a1] == qword_1AD67D3C8[*a2];
}

uint64_t sub_1AD38D46C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD38D4B8()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD38D4EC()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

BlastDoor::EmojiTapBack::AssociatedMessageType_optional sub_1AD38D534(Swift::Int *a1)
{
  return EmojiTapBack.AssociatedMessageType.init(rawValue:)(*a1);
}

void sub_1AD38D53C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1AD67D3C8[*v1];
}

uint64_t sub_1AD38D554()
{
  sub_1AD38E45C();
  return sub_1AD63B930();
}

uint64_t sub_1AD38D5B0()
{
  sub_1AD38E45C();
  return sub_1AD63B8D0();
}

void EmojiTapBack.associatedMessageType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *EmojiTapBack.associatedMessageType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*EmojiTapBack.associatedMessageType.modify())()
{
  return nullsub_1;
}

uint64_t EmojiTapBack.associatedMessageGUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmojiTapBack.associatedMessageGUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*EmojiTapBack.associatedMessageGUID.modify())()
{
  return nullsub_1;
}

uint64_t EmojiTapBack.associatedMessageFallbackHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmojiTapBack.associatedMessageFallbackHash.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*EmojiTapBack.associatedMessageFallbackHash.modify())()
{
  return nullsub_1;
}

uint64_t EmojiTapBack.associatedMessageRange.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t EmojiTapBack.associatedMessageRange.setter(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 40) = result;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*EmojiTapBack.associatedMessageRange.modify())()
{
  return nullsub_1;
}

uint64_t EmojiTapBack.associatedMessageEmoji.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*EmojiTapBack.associatedMessageEmoji.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 80);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 72);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD33A6A8;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*EmojiTapBack.$associatedMessageEmoji.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[8];
  v6 = v1[9];
  v5 = v1[10];
  *v3 = v1[7];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD33A7DC;
}

uint64_t EmojiTapBack.participantDestinationIdentifiers.setter()
{
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0();
}

uint64_t (*EmojiTapBack.participantDestinationIdentifiers.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(_QWORD *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 104);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD33A988;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*EmojiTapBack.$participantDestinationIdentifiers.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[12];
  v4 = v1[13];
  *a1 = v1[11];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD33AA80;
}

uint64_t EmojiTapBack.messageSummaryInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v1[14];
  v3 = v1[15];
  v4 = v1[16];
  v5 = v1[17];
  v6 = v1[18];
  v7 = v1[19];
  v8 = v1[20];
  v9 = v1[21];
  v10 = v1[22];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_1AD0E3030(v2, v3, v4, v5, v6, v7, v8);
}

__n128 EmojiTapBack.messageSummaryInfo.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;

  v7 = *a1;
  v5 = a1[2];
  v6 = a1[1];
  v4 = (__n128)a1[3];
  v2 = *((_QWORD *)a1 + 8);
  sub_1AD0E3108(v1[14], v1[15], v1[16], v1[17], v1[18], v1[19], v1[20]);
  *((_OWORD *)v1 + 7) = v7;
  *((_OWORD *)v1 + 8) = v6;
  result = v4;
  *((_OWORD *)v1 + 9) = v5;
  *((__n128 *)v1 + 10) = v4;
  v1[22] = v2;
  return result;
}

uint64_t (*EmojiTapBack.messageSummaryInfo.modify())()
{
  return nullsub_1;
}

uint64_t EmojiTapBack.plainTextBody.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 184);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t EmojiTapBack.plainTextBody.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 184) = a1;
  *(_QWORD *)(v2 + 192) = a2;
  return result;
}

uint64_t (*EmojiTapBack.plainTextBody.modify())()
{
  return nullsub_1;
}

uint64_t EmojiTapBack.debugDescription.getter()
{
  sub_1AD63BD38();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63BE04();
  sub_1AD63B810();
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  return 0;
}

unint64_t sub_1AD38DB84()
{
  unint64_t result;

  result = qword_1EECDB4B8;
  if (!qword_1EECDB4B8)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for EmojiTapBack.AssociatedMessageType, &type metadata for EmojiTapBack.AssociatedMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDB4B8);
  }
  return result;
}

uint64_t sub_1AD38DBC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD288184, (uint64_t (*)(void))sub_1AD28832C);
}

uint64_t sub_1AD38DBDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A2E30, (uint64_t (*)(void))sub_1AD2A2C98);
}

uint64_t sub_1AD38DBF8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD38DC34@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[7];
  v3 = a1[8];
  v5 = a1[9];
  v4 = a1[10];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD38DC6C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD38DC94@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[11];
  v3 = a1[12];
  v4 = a1[13];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t destroy for EmojiTapBack(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 136))
  {
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(a1 + 160) != 1)
      swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EmojiTapBack(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v7;
  v8 = *(_QWORD *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v8)
  {
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    v9 = *(_QWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = v9;
    v10 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = v8;
    *(_QWORD *)(a1 + 144) = v10;
    v11 = (_OWORD *)(a2 + 152);
    v12 = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v12 == 1)
    {
      *(_OWORD *)(a1 + 152) = *v11;
    }
    else
    {
      *(_QWORD *)(a1 + 152) = *(_QWORD *)v11;
      *(_QWORD *)(a1 + 160) = v12;
      swift_bridgeObjectRetain();
    }
    v15 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = v15;
    swift_bridgeObjectRetain();
  }
  else
  {
    v13 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v13;
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    v14 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v14;
  }
  v16 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v16;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EmojiTapBack(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v4 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = (_OWORD *)(a1 + 112);
  v7 = (_OWORD *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 136);
  if (*(_QWORD *)(a1 + 136))
  {
    if (v8)
    {
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 144) = v9;
      swift_retain();
      swift_release();
      v10 = *(_QWORD *)(a2 + 160);
      if (*(_QWORD *)(a1 + 160) == 1)
      {
        if (v10 != 1)
        {
          *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
          *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
          swift_bridgeObjectRetain();
LABEL_17:
          *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
          *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_18;
        }
      }
      else
      {
        if (v10 != 1)
        {
          *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
          *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_17;
        }
        sub_1AD0256E4(a1 + 152);
      }
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      goto LABEL_17;
    }
    sub_1AD0E3B7C(a1 + 112);
    *v6 = *v7;
    v14 = *(_OWORD *)(a2 + 144);
    v13 = *(_OWORD *)(a2 + 160);
    v15 = *(_OWORD *)(a2 + 128);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 144) = v14;
    *(_OWORD *)(a1 + 160) = v13;
    *(_OWORD *)(a1 + 128) = v15;
  }
  else if (v8)
  {
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
    v11 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v11;
    v12 = *(_QWORD *)(a2 + 160);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v12 == 1)
    {
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    }
    else
    {
      *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
      *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
      swift_bridgeObjectRetain();
    }
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    swift_bridgeObjectRetain();
  }
  else
  {
    *v6 = *v7;
    v16 = *(_OWORD *)(a2 + 128);
    v17 = *(_OWORD *)(a2 + 144);
    v18 = *(_OWORD *)(a2 + 160);
    *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 144) = v17;
    *(_OWORD *)(a1 + 160) = v18;
    *(_OWORD *)(a1 + 128) = v16;
  }
LABEL_18:
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EmojiTapBack(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  v6 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v6;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 136))
  {
    v7 = *(_QWORD *)(a2 + 136);
    if (v7)
    {
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      v8 = *(_QWORD *)(a2 + 128);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 128) = v8;
      swift_bridgeObjectRelease();
      v9 = *(_QWORD *)(a2 + 144);
      *(_QWORD *)(a1 + 136) = v7;
      *(_QWORD *)(a1 + 144) = v9;
      swift_release();
      v10 = (_QWORD *)(a2 + 152);
      if (*(_QWORD *)(a1 + 160) != 1)
      {
        v11 = *(_QWORD *)(a2 + 160);
        if (v11 != 1)
        {
          *(_QWORD *)(a1 + 152) = *v10;
          *(_QWORD *)(a1 + 160) = v11;
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        sub_1AD0256E4(a1 + 152);
      }
      *(_OWORD *)(a1 + 152) = *(_OWORD *)v10;
LABEL_10:
      v14 = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 176) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1AD0E3B7C(a1 + 112);
  }
  v12 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v12;
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  v13 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v13;
LABEL_11:
  v15 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EmojiTapBack(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 200))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EmojiTapBack(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 200) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 200) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EmojiTapBack()
{
  return &type metadata for EmojiTapBack;
}

uint64_t storeEnumTagSinglePayload for EmojiTapBack.AssociatedMessageType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD38E3DC + 4 * byte_1AD67D1F5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD38E410 + 4 * byte_1AD67D1F0[v4]))();
}

uint64_t sub_1AD38E410(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD38E418(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD38E420);
  return result;
}

uint64_t sub_1AD38E42C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD38E434);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD38E438(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD38E440(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EmojiTapBack.AssociatedMessageType()
{
  return &type metadata for EmojiTapBack.AssociatedMessageType;
}

unint64_t sub_1AD38E45C()
{
  unint64_t result;

  result = qword_1EECDB4C0;
  if (!qword_1EECDB4C0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for EmojiTapBack.AssociatedMessageType, &type metadata for EmojiTapBack.AssociatedMessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDB4C0);
  }
  return result;
}

double sub_1AD38E4A0()
{
  return sub_1AD38EFB0(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t type metadata accessor for SecureCloudInviteRequestProtobuf(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1EECDB750);
}

uint64_t sub_1AD38E4C0(double a1)
{
  return sub_1AD38F008(type metadata accessor for SecureCloudInviteRequestProtobuf, a1);
}

uint64_t (*sub_1AD38E4CC(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_1AD38E524;
}

BOOL sub_1AD38E528()
{
  return sub_1AD38F0A4(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E534()
{
  return sub_1AD38F0E0(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E540()
{
  return sub_1AD38F11C(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E54C(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F21C(a1, a2, type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t (*sub_1AD38E558(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD38E5C4()
{
  return sub_1AD38F2D4(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E5D0()
{
  return sub_1AD38F310(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E5DC()
{
  return sub_1AD38F354(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E5E8(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F454(a1, a2, type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t (*sub_1AD38E5F4(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD38E65C()
{
  return sub_1AD38F50C(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E668()
{
  return sub_1AD38F548(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E674()
{
  return sub_1AD38F58C(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E680(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F68C(a1, a2, type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t (*sub_1AD38E68C(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD38E6F4()
{
  return sub_1AD38F744(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E700()
{
  return sub_1AD38F780(type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD38E70C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  sub_1AD38EA78(v1 + *(int *)(v6 + 36), (uint64_t)v5);
  v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_1AD38EAD4((uint64_t)v5, a1);
  sub_1AD63B240();
  *(_OWORD *)(a1 + v7[5]) = xmmword_1AD67A180;
  *(_OWORD *)(a1 + v7[6]) = xmmword_1AD67A180;
  *(_OWORD *)(a1 + v7[7]) = xmmword_1AD67A180;
  v8 = (_QWORD *)(a1 + v7[8]);
  *v8 = 0;
  v8[1] = 0;
  return sub_1AD009758((uint64_t)v5, &qword_1EECDB5B0);
}

uint64_t sub_1AD38E804@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  sub_1AD38EA78(a1 + *(int *)(v7 + 36), (uint64_t)v6);
  v8 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v6, 1, v8) != 1)
    return sub_1AD38EAD4((uint64_t)v6, a2);
  sub_1AD63B240();
  *(_OWORD *)(a2 + v8[5]) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + v8[6]) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + v8[7]) = xmmword_1AD67A180;
  v9 = (_QWORD *)(a2 + v8[8]);
  *v9 = 0;
  v9[1] = 0;
  return sub_1AD009758((uint64_t)v6, &qword_1EECDB5B0);
}

uint64_t sub_1AD38E900(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD38EC4C(a1, (uint64_t)v7);
  v8 = a2 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 36);
  sub_1AD009758(v8, &qword_1EECDB5B0);
  sub_1AD38EAD4((uint64_t)v7, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t sub_1AD38E9BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 36);
  sub_1AD009758(v3, &qword_1EECDB5B0);
  sub_1AD38EAD4(a1, v3);
  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

double sub_1AD38EA24@<D0>(uint64_t a1@<X8>)
{
  int *v2;
  double result;
  _QWORD *v4;

  sub_1AD63B240();
  v2 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  result = 0.0;
  *(_OWORD *)(a1 + v2[5]) = xmmword_1AD67A180;
  *(_OWORD *)(a1 + v2[6]) = xmmword_1AD67A180;
  *(_OWORD *)(a1 + v2[7]) = xmmword_1AD67A180;
  v4 = (_QWORD *)(a1 + v2[8]);
  *v4 = 0;
  v4[1] = 0;
  return result;
}

uint64_t sub_1AD38EA78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for SecureCloudInviteUserInfoProtobuf(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1EECDB8A8);
}

uint64_t sub_1AD38EAD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD38EB18(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 36);
  *((_DWORD *)v3 + 12) = v10;
  sub_1AD38EA78(v1 + v10, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1AD63B240();
    *(_OWORD *)&v9[v6[5]] = xmmword_1AD67A180;
    *(_OWORD *)&v9[v6[6]] = xmmword_1AD67A180;
    *(_OWORD *)&v9[v6[7]] = xmmword_1AD67A180;
    v11 = &v9[v6[8]];
    *(_QWORD *)v11 = 0;
    *((_QWORD *)v11 + 1) = 0;
    sub_1AD009758((uint64_t)v5, &qword_1EECDB5B0);
  }
  else
  {
    sub_1AD38EAD4((uint64_t)v5, (uint64_t)v9);
  }
  return sub_1AD38EC48;
}

uint64_t sub_1AD38EC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD38EC90(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_1AD38ECCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  sub_1AD38EA78(v0 + *(int *)(v4 + 36), (uint64_t)v3);
  v5 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1AD009758((uint64_t)v3, &qword_1EECDB5B0);
  return v6;
}

uint64_t sub_1AD38ED7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 36);
  sub_1AD009758(v1, &qword_1EECDB5B0);
  v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_1AD38EDD4()
{
  uint64_t v0;
  _BYTE *v1;

  v1 = (_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 40));
  if (v1[4])
    return 0;
  else
    return *(unsigned int *)v1;
}

uint64_t sub_1AD38EE04(int a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  v4 = v1 + *(int *)(result + 40);
  *(_DWORD *)v4 = a1;
  *(_BYTE *)(v4 + 4) = 0;
  return result;
}

uint64_t (*sub_1AD38EE38(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 40);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_1AD38EE88;
}

BOOL sub_1AD38EE8C()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteRequestProtobuf(0) + 40) + 4) & 1) == 0;
}

uint64_t sub_1AD38EEB8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  v2 = v0 + *(int *)(result + 40);
  *(_DWORD *)v2 = 0;
  *(_BYTE *)(v2 + 4) = 1;
  return result;
}

uint64_t (*sub_1AD38EEEC())()
{
  return nullsub_1;
}

uint64_t sub_1AD38EEFC@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  sub_1AD63B240();
  v2 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  v3 = a1 + v2[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = (_QWORD *)(a1 + v2[6]);
  *v4 = 0;
  v4[1] = 0;
  v5 = (_QWORD *)(a1 + v2[7]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a1 + v2[8]);
  *v6 = 0;
  v6[1] = 0;
  v7 = a1 + v2[9];
  v8 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 56))(v7, 1, 1, v8);
  v10 = a1 + v2[10];
  *(_DWORD *)v10 = 0;
  *(_BYTE *)(v10 + 4) = 1;
  return result;
}

double sub_1AD38EFA4()
{
  return sub_1AD38EFB0(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

double sub_1AD38EFB0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t v2;
  double result;

  v2 = v1 + *(int *)(a1(0) + 20);
  result = *(double *)v2;
  if (*(_BYTE *)(v2 + 8))
    return 0.0;
  return result;
}

uint64_t type metadata accessor for SecureCloudInviteResponseProtobuf(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1EECDB800);
}

uint64_t sub_1AD38EFFC(double a1)
{
  return sub_1AD38F008(type metadata accessor for SecureCloudInviteResponseProtobuf, a1);
}

uint64_t sub_1AD38F008(uint64_t (*a1)(_QWORD), double a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1(0);
  v5 = v2 + *(int *)(result + 20);
  *(double *)v5 = a2;
  *(_BYTE *)(v5 + 8) = 0;
  return result;
}

uint64_t (*sub_1AD38F040(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_1AD38E524;
}

BOOL sub_1AD38F098()
{
  return sub_1AD38F0A4(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

BOOL sub_1AD38F0A4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return (*(_BYTE *)(v1 + *(int *)(a1(0) + 20) + 8) & 1) == 0;
}

uint64_t sub_1AD38F0D4()
{
  return sub_1AD38F0E0(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38F0E0(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = a1(0);
  v3 = v1 + *(int *)(result + 20);
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  return result;
}

uint64_t sub_1AD38F110()
{
  return sub_1AD38F11C(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38F11C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 24));
  if (v2[1])
    v3 = *v2;
  else
    v3 = 0;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1AD38F170@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = (uint64_t *)(a1 + *(int *)(a2(0) + 24));
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *a3 = v6;
  a3[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD38F1C0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(a2 + *(int *)(a5(0) + 24));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v7 = v6;
  v7[1] = v5;
  return result;
}

uint64_t sub_1AD38F210(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F21C(a1, a2, type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38F21C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 24));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*sub_1AD38F260(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD38F2C8()
{
  return sub_1AD38F2D4(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

BOOL sub_1AD38F2D4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 24) + 8) != 0;
}

uint64_t sub_1AD38F304()
{
  return sub_1AD38F310(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38F310(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;

  v2 = (_QWORD *)(v1 + *(int *)(a1(0) + 24));
  result = swift_bridgeObjectRelease();
  *v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t sub_1AD38F348()
{
  return sub_1AD38F354(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38F354(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 28));
  if (v2[1])
    v3 = *v2;
  else
    v3 = 0;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1AD38F3A8@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = (uint64_t *)(a1 + *(int *)(a2(0) + 28));
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *a3 = v6;
  a3[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD38F3F8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(a2 + *(int *)(a5(0) + 28));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v7 = v6;
  v7[1] = v5;
  return result;
}

uint64_t sub_1AD38F448(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F454(a1, a2, type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38F454(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 28));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*sub_1AD38F498(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD38F500()
{
  return sub_1AD38F50C(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

BOOL sub_1AD38F50C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 28) + 8) != 0;
}

uint64_t sub_1AD38F53C()
{
  return sub_1AD38F548(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38F548(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;

  v2 = (_QWORD *)(v1 + *(int *)(a1(0) + 28));
  result = swift_bridgeObjectRelease();
  *v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t sub_1AD38F580()
{
  return sub_1AD38F58C(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38F58C(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 32));
  if (v2[1])
    v3 = *v2;
  else
    v3 = 0;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1AD38F5E0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = (uint64_t *)(a1 + *(int *)(a2(0) + 32));
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *a3 = v6;
  a3[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD38F630(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(a2 + *(int *)(a5(0) + 32));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v7 = v6;
  v7[1] = v5;
  return result;
}

uint64_t sub_1AD38F680(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F68C(a1, a2, type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38F68C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 32));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*sub_1AD38F6D0(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD38F738()
{
  return sub_1AD38F744(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

BOOL sub_1AD38F744(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 32) + 8) != 0;
}

uint64_t sub_1AD38F774()
{
  return sub_1AD38F780(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38F780(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;

  v2 = (_QWORD *)(v1 + *(int *)(a1(0) + 32));
  result = swift_bridgeObjectRelease();
  *v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t sub_1AD38F7B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  result = type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 36));
  if ((*((_BYTE *)v4 + 9) & 1) != 0)
  {
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v7 = *((_BYTE *)v4 + 8);
    v5 = *v4;
    v6 = v7 & 1;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_1AD38F80C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  v5 = v1 + *(int *)(result + 36);
  *(_QWORD *)v5 = v2;
  *(_BYTE *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 9) = 0;
  return result;
}

uint64_t (*sub_1AD38F850(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 36);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if ((*((_BYTE *)v4 + 9) & 1) != 0)
  {
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v7 = *((_BYTE *)v4 + 8);
    v5 = *v4;
    v6 = v7 & 1;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return sub_1AD38F8B8;
}

BOOL sub_1AD38F8BC()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 36) + 9) & 1) == 0;
}

uint64_t sub_1AD38F8E8()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  v2 = v0 + *(int *)(result + 36);
  *(_QWORD *)v2 = 0;
  *(_WORD *)(v2 + 8) = 256;
  return result;
}

uint64_t sub_1AD38F914@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  int *v7;
  _QWORD *v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  sub_1AD38EA78(v1 + *(int *)(v6 + 40), (uint64_t)v5);
  v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v5, 1, v7) != 1)
    return sub_1AD38EAD4((uint64_t)v5, a1);
  sub_1AD63B240();
  *(_OWORD *)(a1 + v7[5]) = xmmword_1AD67A180;
  *(_OWORD *)(a1 + v7[6]) = xmmword_1AD67A180;
  *(_OWORD *)(a1 + v7[7]) = xmmword_1AD67A180;
  v8 = (_QWORD *)(a1 + v7[8]);
  *v8 = 0;
  v8[1] = 0;
  return sub_1AD009758((uint64_t)v5, &qword_1EECDB5B0);
}

uint64_t sub_1AD38FA0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int *v8;
  _QWORD *v9;
  uint64_t v11;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  sub_1AD38EA78(a1 + *(int *)(v7 + 40), (uint64_t)v6);
  v8 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v8 - 1) + 48))(v6, 1, v8) != 1)
    return sub_1AD38EAD4((uint64_t)v6, a2);
  sub_1AD63B240();
  *(_OWORD *)(a2 + v8[5]) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + v8[6]) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + v8[7]) = xmmword_1AD67A180;
  v9 = (_QWORD *)(a2 + v8[8]);
  *v9 = 0;
  v9[1] = 0;
  return sub_1AD009758((uint64_t)v6, &qword_1EECDB5B0);
}

uint64_t sub_1AD38FB08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD38EC4C(a1, (uint64_t)v7);
  v8 = a2 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 40);
  sub_1AD009758(v8, &qword_1EECDB5B0);
  sub_1AD38EAD4((uint64_t)v7, v8);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(v8, 0, 1, v4);
}

uint64_t sub_1AD38FBC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 40);
  sub_1AD009758(v3, &qword_1EECDB5B0);
  sub_1AD38EAD4(a1, v3);
  v4 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v3, 0, 1, v4);
}

uint64_t (*sub_1AD38FC2C(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  int *v6;
  uint64_t v7;
  size_t v8;
  char *v9;
  uint64_t v10;
  char *v11;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v3[2] = v6;
  v7 = *((_QWORD *)v6 - 1);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = (char *)malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 40);
  *((_DWORD *)v3 + 12) = v10;
  sub_1AD38EA78(v1 + v10, (uint64_t)v5);
  if ((*(unsigned int (**)(void *, uint64_t, int *))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1AD63B240();
    *(_OWORD *)&v9[v6[5]] = xmmword_1AD67A180;
    *(_OWORD *)&v9[v6[6]] = xmmword_1AD67A180;
    *(_OWORD *)&v9[v6[7]] = xmmword_1AD67A180;
    v11 = &v9[v6[8]];
    *(_QWORD *)v11 = 0;
    *((_QWORD *)v11 + 1) = 0;
    sub_1AD009758((uint64_t)v5, &qword_1EECDB5B0);
  }
  else
  {
    sub_1AD38EAD4((uint64_t)v5, (uint64_t)v9);
  }
  return sub_1AD38EC48;
}

void sub_1AD38FD5C(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;

  v2 = *(void **)a1;
  v3 = *(int *)(*(_QWORD *)a1 + 48);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 40);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 16);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v8 = *(void **)(*(_QWORD *)a1 + 8);
  v9 = **(_QWORD **)a1 + v3;
  if ((a2 & 1) != 0)
  {
    sub_1AD38EC4C(*(_QWORD *)(*(_QWORD *)a1 + 40), (uint64_t)v4);
    sub_1AD009758(v9, &qword_1EECDB5B0);
    sub_1AD38EAD4((uint64_t)v4, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
    sub_1AD38EC90((uint64_t)v5);
  }
  else
  {
    sub_1AD009758(**(_QWORD **)a1 + v3, &qword_1EECDB5B0);
    sub_1AD38EAD4((uint64_t)v5, v9);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v7 + 56))(v9, 0, 1, v6);
  }
  free(v5);
  free(v4);
  free(v8);
  free(v2);
}

BOOL sub_1AD38FE44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  _BOOL8 v6;
  uint64_t v8;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  sub_1AD38EA78(v0 + *(int *)(v4 + 40), (uint64_t)v3);
  v5 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_1AD009758((uint64_t)v3, &qword_1EECDB5B0);
  return v6;
}

uint64_t sub_1AD38FEF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 40);
  sub_1AD009758(v1, &qword_1EECDB5B0);
  v2 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v1, 1, 1, v2);
}

uint64_t sub_1AD38FF4C()
{
  return sub_1AD3912E8(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38FF58(int a1)
{
  return sub_1AD391328(a1, type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t (*sub_1AD38FF64(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteResponseProtobuf(0) + 44);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_1AD38EE88;
}

BOOL sub_1AD38FFB4()
{
  return sub_1AD3913D4(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD38FFC0()
{
  return sub_1AD391410(type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t (*sub_1AD38FFD4())()
{
  return nullsub_1;
}

void sub_1AD38FFE4(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

unint64_t sub_1AD38FFF4@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 5;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1AD39000C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

void sub_1AD390014(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

uint64_t sub_1AD390028()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

unint64_t sub_1AD390030@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD38FFF4(*a1, a2);
}

uint64_t sub_1AD39003C()
{
  sub_1AD3961A8();
  return sub_1AD63B288();
}

uint64_t sub_1AD390078@<X0>(uint64_t a1@<X8>)
{
  int *v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  sub_1AD63B240();
  v2 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  v3 = a1 + v2[5];
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = (_QWORD *)(a1 + v2[6]);
  *v4 = 0;
  v4[1] = 0;
  v5 = (_QWORD *)(a1 + v2[7]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a1 + v2[8]);
  *v6 = 0;
  v6[1] = 0;
  v7 = a1 + v2[9];
  *(_QWORD *)v7 = 0;
  *(_WORD *)(v7 + 8) = 256;
  v8 = a1 + v2[10];
  v9 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(v8, 1, 1, v9);
  v11 = a1 + v2[11];
  *(_DWORD *)v11 = 0;
  *(_BYTE *)(v11 + 4) = 1;
  return result;
}

void sub_1AD390134()
{
  qword_1EECDB4C8 = (uint64_t)&unk_1E5CCD048;
}

uint64_t sub_1AD390148()
{
  return sub_1AD391700(&qword_1EECD14A0);
}

uint64_t sub_1AD390164(uint64_t a1)
{
  return sub_1AD391774(a1, &qword_1EECD14A0, &qword_1EECDB4C8);
}

uint64_t (*sub_1AD390180())()
{
  if (qword_1EECD14A0 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1AD3901F0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AD391860(&qword_1EECD14A0, &qword_1EECDB4C8, a1);
}

uint64_t sub_1AD39020C()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 20));
  v2 = v1[1];
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = *v1;
  sub_1AD00408C(*v1, v2);
  return v3;
}

uint64_t sub_1AD390258(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 20));
  v5 = *v4;
  v6 = v4[1];
  sub_1AD0040A0(v2, v3);
  result = sub_1AD004118(v5, v6);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t sub_1AD3902B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 20);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD3902FC(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  sub_1AD00408C(v5, v6);
  return sub_1AD39035C;
}

BOOL sub_1AD390360()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 20) + 8) >> 60 != 15;
}

double sub_1AD390390()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 20);
  sub_1AD004118(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  result = 0.0;
  *(_OWORD *)v1 = xmmword_1AD67A180;
  return result;
}

uint64_t sub_1AD3903CC()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 24));
  v2 = v1[1];
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = *v1;
  sub_1AD00408C(*v1, v2);
  return v3;
}

uint64_t sub_1AD390418(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 24));
  v5 = *v4;
  v6 = v4[1];
  sub_1AD0040A0(v2, v3);
  result = sub_1AD004118(v5, v6);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t sub_1AD390478(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 24);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD3904BC(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  sub_1AD00408C(v5, v6);
  return sub_1AD39035C;
}

BOOL sub_1AD39051C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 24) + 8) >> 60 != 15;
}

double sub_1AD39054C()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 24);
  sub_1AD004118(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  result = 0.0;
  *(_OWORD *)v1 = xmmword_1AD67A180;
  return result;
}

uint64_t sub_1AD390588()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 28));
  v2 = v1[1];
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = *v1;
  sub_1AD00408C(*v1, v2);
  return v3;
}

uint64_t sub_1AD3905D4(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 28));
  v5 = *v4;
  v6 = v4[1];
  sub_1AD0040A0(v2, v3);
  result = sub_1AD004118(v5, v6);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t sub_1AD390634(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 28);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD390678(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  sub_1AD00408C(v5, v6);
  return sub_1AD39035C;
}

BOOL sub_1AD3906D8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 28) + 8) >> 60 != 15;
}

double sub_1AD390708()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 28);
  sub_1AD004118(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  result = 0.0;
  *(_OWORD *)v1 = xmmword_1AD67A180;
  return result;
}

uint64_t sub_1AD390744()
{
  return sub_1AD38F58C(type metadata accessor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_1AD390750(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F68C(a1, a2, type metadata accessor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t (*sub_1AD39075C(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD3907C4()
{
  return sub_1AD38F744(type metadata accessor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_1AD3907D0()
{
  return sub_1AD38F780(type metadata accessor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t (*sub_1AD3907E4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3907F4()
{
  return sub_1AD3908F8(type metadata accessor for SecureCloudPingRequestProtobuf);
}

uint64_t type metadata accessor for SecureCloudPingRequestProtobuf(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1EECDB948);
}

uint64_t sub_1AD390814(uint64_t a1, uint64_t a2)
{
  return sub_1AD390A0C(a1, a2, type metadata accessor for SecureCloudPingRequestProtobuf);
}

uint64_t (*sub_1AD390820(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD390888()
{
  return sub_1AD390AC4(type metadata accessor for SecureCloudPingRequestProtobuf);
}

uint64_t sub_1AD390894()
{
  return sub_1AD390B00(type metadata accessor for SecureCloudPingRequestProtobuf);
}

uint64_t (*sub_1AD3908A8())()
{
  return nullsub_1;
}

uint64_t sub_1AD3908B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  _QWORD *v3;

  sub_1AD63B240();
  result = type metadata accessor for SecureCloudPingRequestProtobuf(0);
  v3 = (_QWORD *)(a1 + *(int *)(result + 20));
  *v3 = 0;
  v3[1] = 0;
  return result;
}

uint64_t sub_1AD3908EC()
{
  return sub_1AD3908F8(type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_1AD3908F8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *(int *)(a1(0) + 20));
  if (v2[1])
    v3 = *v2;
  else
    v3 = 0;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t type metadata accessor for SecureCloudPingResponseProtobuf(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1EECDB9D8);
}

uint64_t sub_1AD390960@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _QWORD *a3@<X8>)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = (uint64_t *)(a1 + *(int *)(a2(0) + 20));
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *a3 = v6;
  a3[1] = v7;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD3909B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t result;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(a2 + *(int *)(a5(0) + 20));
  swift_bridgeObjectRetain();
  result = swift_bridgeObjectRelease();
  *v7 = v6;
  v7[1] = v5;
  return result;
}

uint64_t sub_1AD390A00(uint64_t a1, uint64_t a2)
{
  return sub_1AD390A0C(a1, a2, type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_1AD390A0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  _QWORD *v6;
  uint64_t result;

  v6 = (_QWORD *)(v3 + *(int *)(a3(0) + 20));
  result = swift_bridgeObjectRelease();
  *v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*sub_1AD390A50(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD390AB8()
{
  return sub_1AD390AC4(type metadata accessor for SecureCloudPingResponseProtobuf);
}

BOOL sub_1AD390AC4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return *(_QWORD *)(v1 + *(int *)(a1(0) + 20) + 8) != 0;
}

uint64_t sub_1AD390AF4()
{
  return sub_1AD390B00(type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_1AD390B00(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;

  v2 = (_QWORD *)(v1 + *(int *)(a1(0) + 20));
  result = swift_bridgeObjectRelease();
  *v2 = 0;
  v2[1] = 0;
  return result;
}

uint64_t sub_1AD390B38()
{
  return sub_1AD38F11C(type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_1AD390B44(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F21C(a1, a2, type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t (*sub_1AD390B50(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudPingResponseProtobuf(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD390BB8()
{
  return sub_1AD38F2D4(type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_1AD390BC4()
{
  return sub_1AD38F310(type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t (*sub_1AD390BD8())()
{
  return nullsub_1;
}

uint64_t sub_1AD390BE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  _QWORD *v3;
  _QWORD *v4;

  sub_1AD63B240();
  result = type metadata accessor for SecureCloudPingResponseProtobuf(0);
  v3 = (_QWORD *)(a1 + *(int *)(result + 20));
  *v3 = 0;
  v3[1] = 0;
  v4 = (_QWORD *)(a1 + *(int *)(result + 24));
  *v4 = 0;
  v4[1] = 0;
  return result;
}

uint64_t sub_1AD390C28()
{
  return sub_1AD3908F8(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t type metadata accessor for SecureCloudUpgradeMessageProtobuf(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1EECDBA70);
}

uint64_t sub_1AD390C48(uint64_t a1, uint64_t a2)
{
  return sub_1AD390A0C(a1, a2, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t (*sub_1AD390C54(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 20);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD390CBC()
{
  return sub_1AD390AC4(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD390CC8()
{
  return sub_1AD390B00(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

double sub_1AD390CD4()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 24);
  result = *(double *)v1;
  if (*(_BYTE *)(v1 + 8))
    return 0.0;
  return result;
}

uint64_t sub_1AD390D08(double a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v4 = v1 + *(int *)(result + 24);
  *(double *)v4 = a1;
  *(_BYTE *)(v4 + 8) = 0;
  return result;
}

uint64_t (*sub_1AD390D3C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 24);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_1AD38E524;
}

BOOL sub_1AD390D94()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 24) + 8) & 1) == 0;
}

uint64_t sub_1AD390DC0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v2 = v0 + *(int *)(result + 24);
  *(_QWORD *)v2 = 0;
  *(_BYTE *)(v2 + 8) = 1;
  return result;
}

uint64_t sub_1AD390DEC()
{
  return sub_1AD38F354(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD390DF8(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F454(a1, a2, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t (*sub_1AD390E04(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD390E6C()
{
  return sub_1AD38F50C(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD390E78()
{
  return sub_1AD38F548(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD390E84()
{
  return sub_1AD38F58C(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD390E90(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F68C(a1, a2, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t (*sub_1AD390E9C(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

BOOL sub_1AD390F04()
{
  return sub_1AD38F744(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD390F10()
{
  return sub_1AD38F780(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD390F1C()
{
  uint64_t v0;
  uint64_t *v1;
  unint64_t v2;
  uint64_t v3;

  v1 = (uint64_t *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 36));
  v2 = v1[1];
  if (v2 >> 60 == 15)
    v3 = 0;
  else
    v3 = *v1;
  sub_1AD00408C(*v1, v2);
  return v3;
}

uint64_t sub_1AD390F68(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  v4 = (uint64_t *)(a2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 36));
  v5 = *v4;
  v6 = v4[1];
  sub_1AD0040A0(v2, v3);
  result = sub_1AD004118(v5, v6);
  *v4 = v2;
  v4[1] = v3;
  return result;
}

uint64_t sub_1AD390FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 36);
  result = sub_1AD004118(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD39100C(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 36);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = *v4;
  v6 = v4[1];
  if (v6 >> 60 == 15)
    v7 = 0;
  else
    v7 = *v4;
  v8 = 0xC000000000000000;
  if (v6 >> 60 != 15)
    v8 = v6;
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  sub_1AD00408C(v5, v6);
  return sub_1AD39035C;
}

uint64_t sub_1AD39106C(uint64_t a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16) + *(int *)(a1 + 24);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(v3 + 8);
  if ((a2 & 1) != 0)
  {
    sub_1AD0040A0(*(_QWORD *)a1, v2);
    sub_1AD004118(v5, v6);
    *(_QWORD *)v3 = v4;
    *(_QWORD *)(v3 + 8) = v2;
    return sub_1AD00412C(v4, v2);
  }
  else
  {
    result = sub_1AD004118(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    *(_QWORD *)v3 = v4;
    *(_QWORD *)(v3 + 8) = v2;
  }
  return result;
}

BOOL sub_1AD3910F4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 36) + 8) >> 60 != 15;
}

double sub_1AD391124()
{
  uint64_t v0;
  uint64_t v1;
  double result;

  v1 = v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 36);
  sub_1AD004118(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  result = 0.0;
  *(_OWORD *)v1 = xmmword_1AD67A180;
  return result;
}

uint64_t sub_1AD391160@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v4 = (uint64_t *)(v1 + *(int *)(result + 40));
  if ((*((_BYTE *)v4 + 9) & 1) != 0)
  {
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v7 = *((_BYTE *)v4 + 8);
    v5 = *v4;
    v6 = v7 & 1;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return result;
}

uint64_t sub_1AD3911B4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v5 = v1 + *(int *)(result + 40);
  *(_QWORD *)v5 = v2;
  *(_BYTE *)(v5 + 8) = v3;
  *(_BYTE *)(v5 + 9) = 0;
  return result;
}

uint64_t (*sub_1AD3911F8(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  char v6;
  char v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 40);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = (uint64_t *)(v1 + v3);
  if ((*((_BYTE *)v4 + 9) & 1) != 0)
  {
    v5 = 0;
    v6 = 1;
  }
  else
  {
    v7 = *((_BYTE *)v4 + 8);
    v5 = *v4;
    v6 = v7 & 1;
  }
  *(_QWORD *)a1 = v5;
  *(_BYTE *)(a1 + 8) = v6;
  return sub_1AD38F8B8;
}

uint64_t sub_1AD391260(uint64_t result)
{
  uint64_t v1;
  unsigned __int8 v2;

  v1 = *(_QWORD *)(result + 16) + *(int *)(result + 12);
  v2 = *(_BYTE *)(result + 8);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_WORD *)(v1 + 8) = v2;
  return result;
}

BOOL sub_1AD391284()
{
  uint64_t v0;

  return (*(_BYTE *)(v0 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 40) + 9) & 1) == 0;
}

uint64_t sub_1AD3912B0()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v2 = v0 + *(int *)(result + 40);
  *(_QWORD *)v2 = 0;
  *(_WORD *)(v2 + 8) = 256;
  return result;
}

uint64_t sub_1AD3912DC()
{
  return sub_1AD3912E8(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD3912E8(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  _BYTE *v2;

  v2 = (_BYTE *)(v1 + *(int *)(a1(0) + 44));
  if (v2[4])
    return 0;
  else
    return *(unsigned int *)v2;
}

uint64_t sub_1AD39131C(int a1)
{
  return sub_1AD391328(a1, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD391328(int a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a2(0);
  v5 = v2 + *(int *)(result + 44);
  *(_DWORD *)v5 = a1;
  *(_BYTE *)(v5 + 4) = 0;
  return result;
}

uint64_t (*sub_1AD39135C(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  int v4;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 44);
  if (*(_BYTE *)(v1 + v3 + 4))
    v4 = 0;
  else
    v4 = *(_DWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v4;
  *(_DWORD *)(a1 + 12) = v3;
  return sub_1AD38EE88;
}

uint64_t sub_1AD3913AC(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)result + *(int *)(result + 12);
  *(_DWORD *)v1 = *(_DWORD *)(result + 8);
  *(_BYTE *)(v1 + 4) = 0;
  return result;
}

BOOL sub_1AD3913C8()
{
  return sub_1AD3913D4(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

BOOL sub_1AD3913D4(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;

  return (*(_BYTE *)(v1 + *(int *)(a1(0) + 44) + 4) & 1) == 0;
}

uint64_t sub_1AD391404()
{
  return sub_1AD391410(type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD391410(uint64_t (*a1)(_QWORD))
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;

  result = a1(0);
  v3 = v1 + *(int *)(result + 44);
  *(_DWORD *)v3 = 0;
  *(_BYTE *)(v3 + 4) = 1;
  return result;
}

uint64_t (*sub_1AD391448())()
{
  return nullsub_1;
}

unint64_t sub_1AD391458@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1AD391470()
{
  _BYTE *v0;

  if (v0[8])
    return *(_QWORD *)v0 != 0;
  else
    return *(_QWORD *)v0;
}

unint64_t sub_1AD39148C@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = result < 2;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

uint64_t sub_1AD3914A4()
{
  _BYTE *v0;

  if (v0[8])
    return *(_QWORD *)v0 != 0;
  else
    return *(_QWORD *)v0;
}

_QWORD *sub_1AD3914C0@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  BOOL v2;
  char v3;

  v2 = *result >= 2uLL;
  *(_QWORD *)a2 = *result;
  v3 = !v2;
  *(_BYTE *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 9) = 0;
  return result;
}

void sub_1AD3914DC(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*((_BYTE *)v1 + 8))
    v2 = *v1 != 0;
  *a1 = v2;
}

uint64_t sub_1AD3914FC()
{
  sub_1AD63C4AC();
  sub_1AD63B6C0();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD391564()
{
  sub_1AD3964F8();
  return sub_1AD63B288();
}

uint64_t sub_1AD39159C()
{
  sub_1AD63C4AC();
  sub_1AD63B6C0();
  return sub_1AD63C4F4();
}

BOOL sub_1AD391600(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  if (*((_BYTE *)a1 + 8))
    v2 = *a1 != 0;
  v3 = *a2 != 0;
  if (!*((_BYTE *)a2 + 8))
    v3 = *a2;
  return v2 == v3;
}

double sub_1AD39163C@<D0>(uint64_t a1@<X8>)
{
  int *v2;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  double result;
  uint64_t v8;
  uint64_t v9;

  sub_1AD63B240();
  v2 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v3 = (_QWORD *)(a1 + v2[5]);
  *v3 = 0;
  v3[1] = 0;
  v4 = a1 + v2[6];
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  v5 = (_QWORD *)(a1 + v2[7]);
  *v5 = 0;
  v5[1] = 0;
  v6 = (_QWORD *)(a1 + v2[8]);
  *v6 = 0;
  v6[1] = 0;
  result = 0.0;
  *(_OWORD *)(a1 + v2[9]) = xmmword_1AD67A180;
  v8 = a1 + v2[10];
  *(_QWORD *)v8 = 0;
  *(_WORD *)(v8 + 8) = 256;
  v9 = a1 + v2[11];
  *(_DWORD *)v9 = 0;
  *(_BYTE *)(v9 + 4) = 1;
  return result;
}

void sub_1AD3916D0()
{
  qword_1EECDB4D0 = (uint64_t)&unk_1E5CCD0B8;
}

uint64_t sub_1AD3916E4()
{
  return sub_1AD391700(&qword_1EECD14A8);
}

uint64_t sub_1AD391700(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD391758(uint64_t a1)
{
  return sub_1AD391774(a1, &qword_1EECD14A8, &qword_1EECDB4D0);
}

uint64_t sub_1AD391774(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD3917D8())()
{
  if (qword_1EECD14A8 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1AD391844@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AD391860(&qword_1EECD14A8, &qword_1EECDB4D0, a1);
}

uint64_t sub_1AD391860@<X0>(_QWORD *a1@<X2>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = *a2;
  return swift_bridgeObjectRetain();
}

double sub_1AD3918C4()
{
  return sub_1AD38EFB0(type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t type metadata accessor for SecureCloudWithdrawRequestProtobuf(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1EECDBB18);
}

uint64_t sub_1AD3918E4(double a1)
{
  return sub_1AD38F008(type metadata accessor for SecureCloudWithdrawRequestProtobuf, a1);
}

uint64_t (*sub_1AD3918F0(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  double v5;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf(0) + 20);
  *(_DWORD *)(a1 + 16) = v3;
  v4 = v1 + v3;
  v5 = *(double *)v4;
  if (*(_BYTE *)(v4 + 8))
    v5 = 0.0;
  *(double *)a1 = v5;
  return sub_1AD38E524;
}

uint64_t sub_1AD391948(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)(result + 8) + *(int *)(result + 16);
  *(_QWORD *)v1 = *(_QWORD *)result;
  *(_BYTE *)(v1 + 8) = 0;
  return result;
}

BOOL sub_1AD391960()
{
  return sub_1AD38F0A4(type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_1AD39196C()
{
  return sub_1AD38F0E0(type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_1AD391978()
{
  return sub_1AD38F11C(type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_1AD391984(uint64_t a1, uint64_t a2)
{
  return sub_1AD38F21C(a1, a2, type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t (*sub_1AD391990(uint64_t a1))()
{
  uint64_t v1;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for SecureCloudWithdrawRequestProtobuf(0) + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (uint64_t *)(v1 + v3);
  v5 = v4[1];
  if (v5)
  {
    v6 = *v4;
    v7 = v5;
  }
  else
  {
    v6 = 0;
    v7 = 0xE000000000000000;
  }
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_bridgeObjectRetain();
  return sub_1AD38E5C0;
}

uint64_t sub_1AD3919F8(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = (_QWORD *)(a1[2] + *((int *)a1 + 6));
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
  }
  return result;
}

BOOL sub_1AD391A64()
{
  return sub_1AD38F2D4(type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_1AD391A70()
{
  return sub_1AD38F310(type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t (*sub_1AD391A84())()
{
  return nullsub_1;
}

uint64_t sub_1AD391A94@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  _QWORD *v4;

  sub_1AD63B240();
  result = type metadata accessor for SecureCloudWithdrawRequestProtobuf(0);
  v3 = a1 + *(int *)(result + 20);
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = 1;
  v4 = (_QWORD *)(a1 + *(int *)(result + 24));
  *v4 = 0;
  v4[1] = 0;
  return result;
}

unint64_t sub_1AD391ADC()
{
  return 0xD000000000000020;
}

uint64_t sub_1AD391AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EECDB4D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDB4D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD679140;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "date";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "handshakeToken";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "identifier";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "buildNumber";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "userInfo";
  *((_QWORD *)v17 + 1) = 8;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "version";
  *((_QWORD *)v19 + 1) = 7;
  v19[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD391D30@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD39263C(&qword_1EECD14B0, (uint64_t)qword_1EECDB4D8, a1);
}

uint64_t sub_1AD391D4C()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t v3;
  uint64_t v4;

  result = sub_1AD63B294();
  v3 = v0;
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for SecureCloudInviteRequestProtobuf(0);
          v4 = v3;
          sub_1AD63B2DC();
          goto LABEL_5;
        case 2:
        case 3:
        case 4:
          type metadata accessor for SecureCloudInviteRequestProtobuf(0);
          v4 = v3;
          sub_1AD63B2E8();
          goto LABEL_5;
        case 5:
          v4 = v3;
          sub_1AD391E8C();
          goto LABEL_5;
        case 6:
          type metadata accessor for SecureCloudInviteRequestProtobuf(0);
          v4 = v3;
          sub_1AD63B2F4();
LABEL_5:
          v3 = v4;
          break;
        default:
          break;
      }
      result = sub_1AD63B294();
    }
  }
  return result;
}

uint64_t sub_1AD391E8C()
{
  type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  sub_1ACFF9724(&qword_1EECDB5B8, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DA5C);
  return sub_1AD63B318();
}

uint64_t sub_1AD391F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  char v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v17 = (uint64_t)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  v13 = *(_BYTE *)(v3 + v12[5] + 8);
  v18 = a3;
  if ((v13 & 1) != 0 || (result = sub_1AD63B3A8(), !v4))
  {
    if (!*(_QWORD *)(v3 + v12[6] + 8) || (result = sub_1AD63B3B4(), !v4))
    {
      if (!*(_QWORD *)(v3 + v12[7] + 8) || (result = sub_1AD63B3B4(), !v4))
      {
        if (!*(_QWORD *)(v3 + v12[8] + 8) || (result = sub_1AD63B3B4(), !v4))
        {
          sub_1AD38EA78(v3 + v12[9], (uint64_t)v8);
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
          {
            sub_1AD009758((uint64_t)v8, &qword_1EECDB5B0);
          }
          else
          {
            v15 = v17;
            sub_1AD38EAD4((uint64_t)v8, v17);
            sub_1ACFF9724(&qword_1EECDB5B8, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DA5C);
            sub_1AD63B3E4();
            result = sub_1AD38EC90(v15);
            if (v4)
              return result;
          }
          if ((*(_BYTE *)(v3 + v12[10] + 4) & 1) != 0)
            return sub_1AD63B234();
          result = sub_1AD63B3C0();
          if (!v4)
            return sub_1AD63B234();
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AD3921A8()
{
  return sub_1AD394C94(type metadata accessor for SecureCloudInviteRequestProtobuf, &qword_1EECDB5C0, (uint64_t)&unk_1AD67D864);
}

uint64_t sub_1AD3921C4@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;

  sub_1AD63B240();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = (_QWORD *)(a2 + v4);
  *v6 = 0;
  v6[1] = 0;
  v7 = a1[8];
  v8 = (_QWORD *)(a2 + a1[7]);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(a2 + v7);
  *v9 = 0;
  v9[1] = 0;
  v10 = a2 + a1[9];
  v11 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(v10, 1, 1, v11);
  v13 = a2 + a1[10];
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  return result;
}

unint64_t sub_1AD39225C()
{
  return 0xD000000000000020;
}

uint64_t sub_1AD392278()
{
  return sub_1AD391D4C();
}

uint64_t sub_1AD39228C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD391F20(a1, a2, a3);
}

uint64_t sub_1AD3922A0()
{
  sub_1ACFF9724(&qword_1EECDBB88, type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&unk_1AD67D7DC);
  return sub_1AD63B27C();
}

uint64_t sub_1AD3922F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD14B0, (uint64_t)qword_1EECDB4D8, a1);
}

uint64_t sub_1AD39230C()
{
  sub_1ACFF9724(&qword_1EECDB660, type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&unk_1AD67D764);
  return sub_1AD63B354();
}

uint64_t sub_1AD39234C()
{
  sub_1ACFF9724(&qword_1EECDB660, type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&unk_1AD67D764);
  return sub_1AD63B360();
}

unint64_t sub_1AD3923A0()
{
  return 0xD000000000000021;
}

uint64_t sub_1AD3923BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EECDB4F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDB4F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD67B890;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "date";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "handshakeToken";
  *(_QWORD *)(v11 + 8) = 14;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "identifier";
  *((_QWORD *)v13 + 1) = 10;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "buildNumber";
  *((_QWORD *)v15 + 1) = 11;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "type";
  *((_QWORD *)v17 + 1) = 4;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "userInfo";
  *((_QWORD *)v19 + 1) = 8;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "version";
  *((_QWORD *)v21 + 1) = 7;
  v21[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD392620@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD39263C(&qword_1EECD14B8, (uint64_t)qword_1EECDB4F0, a1);
}

uint64_t sub_1AD39263C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  if (*a1 != -1)
    swift_once();
  v5 = sub_1AD63B420();
  v6 = __swift_project_value_buffer(v5, a2);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v6, v5);
}

uint64_t sub_1AD3926A4()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1AD63B294();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
          type metadata accessor for SecureCloudInviteResponseProtobuf(0);
          sub_1AD63B2DC();
          break;
        case 2:
        case 3:
        case 4:
          type metadata accessor for SecureCloudInviteResponseProtobuf(0);
          sub_1AD63B2E8();
          break;
        case 5:
          sub_1AD392820();
          break;
        case 6:
          sub_1AD392894();
          break;
        case 7:
          type metadata accessor for SecureCloudInviteResponseProtobuf(0);
          sub_1AD63B2F4();
          break;
        default:
          break;
      }
      result = sub_1AD63B294();
    }
  }
  return result;
}

uint64_t sub_1AD392820()
{
  type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  sub_1AD3961A8();
  return sub_1AD63B2AC();
}

uint64_t sub_1AD392894()
{
  type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  sub_1ACFF9724(&qword_1EECDB5B8, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DA5C);
  return sub_1AD63B318();
}

uint64_t sub_1AD392928(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  char v13;
  uint64_t result;
  uint64_t *v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v19 = (uint64_t)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  v13 = *(_BYTE *)(v3 + v12[5] + 8);
  v22 = a3;
  if ((v13 & 1) != 0 || (result = sub_1AD63B3A8(), !v4))
  {
    if (!*(_QWORD *)(v3 + v12[6] + 8) || (result = sub_1AD63B3B4(), !v4))
    {
      if (!*(_QWORD *)(v3 + v12[7] + 8) || (result = sub_1AD63B3B4(), !v4))
      {
        if (!*(_QWORD *)(v3 + v12[8] + 8) || (result = sub_1AD63B3B4(), !v4))
        {
          v15 = (uint64_t *)(v3 + v12[9]);
          if ((*((_BYTE *)v15 + 9) & 1) != 0
            || (v16 = *((_BYTE *)v15 + 8), v20 = *v15, v21 = v16 & 1, sub_1AD3961A8(), result = sub_1AD63B378(), !v4))
          {
            sub_1AD38EA78(v3 + v12[10], (uint64_t)v8);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
            {
              sub_1AD009758((uint64_t)v8, &qword_1EECDB5B0);
            }
            else
            {
              v17 = v19;
              sub_1AD38EAD4((uint64_t)v8, v19);
              sub_1ACFF9724(&qword_1EECDB5B8, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DA5C);
              sub_1AD63B3E4();
              result = sub_1AD38EC90(v17);
              if (v4)
                return result;
            }
            if ((*(_BYTE *)(v3 + v12[11] + 4) & 1) != 0)
              return sub_1AD63B234();
            result = sub_1AD63B3C0();
            if (!v4)
              return sub_1AD63B234();
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AD392C04()
{
  return sub_1AD394C94(type metadata accessor for SecureCloudInviteResponseProtobuf, &qword_1EECDB5D0, (uint64_t)&unk_1AD67D9CC);
}

uint64_t sub_1AD392C20@<X0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;

  sub_1AD63B240();
  v4 = a1[6];
  v5 = a2 + a1[5];
  *(_QWORD *)v5 = 0;
  *(_BYTE *)(v5 + 8) = 1;
  v6 = (_QWORD *)(a2 + v4);
  *v6 = 0;
  v6[1] = 0;
  v7 = a1[8];
  v8 = (_QWORD *)(a2 + a1[7]);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(a2 + v7);
  *v9 = 0;
  v9[1] = 0;
  v10 = a1[10];
  v11 = a2 + a1[9];
  *(_WORD *)(v11 + 8) = 256;
  v12 = a2 + v10;
  *(_QWORD *)v11 = 0;
  v13 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v12, 1, 1, v13);
  v15 = a2 + a1[11];
  *(_DWORD *)v15 = 0;
  *(_BYTE *)(v15 + 4) = 1;
  return result;
}

unint64_t sub_1AD392CC8()
{
  return 0xD000000000000021;
}

uint64_t sub_1AD392CE4()
{
  return sub_1AD3926A4();
}

uint64_t sub_1AD392CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD392928(a1, a2, a3);
}

uint64_t sub_1AD392D0C()
{
  sub_1ACFF9724(&qword_1EECDBB80, type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&unk_1AD67D944);
  return sub_1AD63B27C();
}

uint64_t sub_1AD392D5C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD14B8, (uint64_t)qword_1EECDB4F0, a1);
}

uint64_t sub_1AD392D78()
{
  sub_1ACFF9724(&qword_1EECDB678, type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&unk_1AD67D8CC);
  return sub_1AD63B354();
}

uint64_t sub_1AD392DB8()
{
  sub_1ACFF9724(&qword_1EECDB678, type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&unk_1AD67D8CC);
  return sub_1AD63B360();
}

uint64_t sub_1AD392E0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  uint64_t v16;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EECDB508);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDB508);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD67B8B0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "accept";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "incompatibleVersion";
  *(_QWORD *)(v11 + 8) = 19;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "incompatibleAccount";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "ineligibleDevices";
  *((_QWORD *)v15 + 1) = 17;
  v15[16] = 2;
  v10();
  v16 = v6 + 4 * v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + 4 * v3) = 4;
  *(_QWORD *)v16 = "invalidAddress";
  *(_QWORD *)(v16 + 8) = 14;
  *(_BYTE *)(v16 + 16) = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD393010@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD39263C(&qword_1EECD14C0, (uint64_t)qword_1EECDB508, a1);
}

uint64_t sub_1AD39302C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD14C0, (uint64_t)qword_1EECDB508, a1);
}

unint64_t sub_1AD393048()
{
  return 0xD000000000000021;
}

uint64_t sub_1AD393064()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EECDB520);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDB520);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD679240;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "activityDataPreview";
  *(_QWORD *)(v7 + 8) = 19;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "secureCloudShareItem";
  *(_QWORD *)(v11 + 8) = 20;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "legacyShareLocations";
  *((_QWORD *)v13 + 1) = 20;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "cloudKitAddress";
  *((_QWORD *)v15 + 1) = 15;
  v15[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD39322C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD39263C(&qword_1EECD14C8, (uint64_t)qword_1EECDB520, a1);
}

uint64_t sub_1AD393248()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1AD63B294();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 3:
        case 4:
          type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
          sub_1AD63B2B8();
          break;
        case 5:
          type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
          sub_1AD63B2E8();
          break;
        default:
          break;
      }
      result = sub_1AD63B294();
    }
  }
  return result;
}

uint64_t sub_1AD393354()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v3 = v0 + v2[5];
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 == 15
    || (v5 = *(_QWORD *)v3,
        sub_1AD0040A0(*(_QWORD *)v3, *(_QWORD *)(v3 + 8)),
        sub_1AD63B384(),
        result = sub_1AD004118(v5, v4),
        !v1))
  {
    v7 = v0 + v2[6];
    v8 = *(_QWORD *)(v7 + 8);
    if (v8 >> 60 == 15
      || (v9 = *(_QWORD *)v7,
          sub_1AD0040A0(*(_QWORD *)v7, *(_QWORD *)(v7 + 8)),
          sub_1AD63B384(),
          result = sub_1AD004118(v9, v8),
          !v1))
    {
      v10 = v0 + v2[7];
      v11 = *(_QWORD *)(v10 + 8);
      if (v11 >> 60 == 15
        || (v12 = *(_QWORD *)v10,
            sub_1AD0040A0(*(_QWORD *)v10, *(_QWORD *)(v10 + 8)),
            sub_1AD63B384(),
            result = sub_1AD004118(v12, v11),
            !v1))
      {
        if (!*(_QWORD *)(v0 + v2[8] + 8))
          return sub_1AD63B234();
        result = sub_1AD63B3B4();
        if (!v1)
          return sub_1AD63B234();
      }
    }
  }
  return result;
}

uint64_t sub_1AD393500()
{
  return sub_1AD394C94(type metadata accessor for SecureCloudInviteUserInfoProtobuf, &qword_1EECDB5D8, (uint64_t)&unk_1AD67DB5C);
}

double sub_1AD39351C@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  sub_1AD63B240();
  result = 0.0;
  v5 = a1[6];
  *(_OWORD *)(a2 + a1[5]) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + v5) = xmmword_1AD67A180;
  v6 = a1[8];
  *(_OWORD *)(a2 + a1[7]) = xmmword_1AD67A180;
  v7 = (_QWORD *)(a2 + v6);
  *v7 = 0;
  v7[1] = 0;
  return result;
}

unint64_t sub_1AD393564()
{
  return 0xD000000000000021;
}

uint64_t sub_1AD393580()
{
  return sub_1AD393248();
}

uint64_t sub_1AD393594()
{
  return sub_1AD393354();
}

uint64_t sub_1AD3935A8()
{
  sub_1ACFF9724(&qword_1EECDBB78, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DAD4);
  return sub_1AD63B27C();
}

uint64_t sub_1AD3935F8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD14C8, (uint64_t)qword_1EECDB520, a1);
}

uint64_t sub_1AD393614()
{
  sub_1ACFF9724(&qword_1EECDB5B8, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DA5C);
  return sub_1AD63B354();
}

uint64_t sub_1AD393654()
{
  sub_1ACFF9724(&qword_1EECDB5B8, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DA5C);
  return sub_1AD63B360();
}

unint64_t sub_1AD3936A8()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1AD3936C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EECDB538);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDB538);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AD648160;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 1;
  *(_QWORD *)v5 = "identifier";
  *(_QWORD *)(v5 + 8) = 10;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x1E0D3EF08];
  v7 = sub_1AD63B3FC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_1AD63B408();
}

uint64_t sub_1AD3937C8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD39263C(&qword_1EECD14D0, (uint64_t)qword_1EECDB538, a1);
}

uint64_t sub_1AD3937E4()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1AD63B294();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
    {
      type metadata accessor for SecureCloudPingRequestProtobuf(0);
      sub_1AD63B2E8();
    }
    v0 = 0;
  }
  return result;
}

uint64_t sub_1AD393878()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(v0 + *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf(0) + 20) + 8))
    return sub_1AD63B234();
  result = sub_1AD63B3B4();
  if (!v1)
    return sub_1AD63B234();
  return result;
}

uint64_t sub_1AD393910()
{
  return sub_1AD394C94(type metadata accessor for SecureCloudPingRequestProtobuf, &qword_1EECDB5E0, (uint64_t)&unk_1AD67DCC4);
}

uint64_t sub_1AD39392C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  _QWORD *v5;

  result = sub_1AD63B240();
  v5 = (_QWORD *)(a2 + *(int *)(a1 + 20));
  *v5 = 0;
  v5[1] = 0;
  return result;
}

unint64_t sub_1AD39395C()
{
  return 0xD00000000000001ELL;
}

uint64_t sub_1AD393978()
{
  return sub_1AD3937E4();
}

uint64_t sub_1AD39398C()
{
  return sub_1AD393878();
}

uint64_t sub_1AD3939A0()
{
  sub_1ACFF9724(&qword_1EECDBB70, type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&unk_1AD67DC3C);
  return sub_1AD63B27C();
}

uint64_t sub_1AD3939F0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD14D0, (uint64_t)qword_1EECDB538, a1);
}

uint64_t sub_1AD393A0C()
{
  sub_1ACFF9724(&qword_1EECDB6A0, type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&unk_1AD67DBC4);
  return sub_1AD63B354();
}

uint64_t sub_1AD393A4C()
{
  sub_1ACFF9724(&qword_1EECDB6A0, type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&unk_1AD67DBC4);
  return sub_1AD63B360();
}

unint64_t sub_1AD393AA0()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1AD393ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EECDB550);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDB550);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD648170;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "identifier";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "requestIdentifier";
  *((_QWORD *)v11 + 1) = 17;
  v11[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD393C0C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD39263C(&qword_1EECD14D8, (uint64_t)qword_1EECDB550, a1);
}

uint64_t sub_1AD393C28()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1AD63B294();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2 || result == 1)
    {
      type metadata accessor for SecureCloudPingResponseProtobuf(0);
      sub_1AD63B2E8();
    }
    v0 = 0;
  }
  return result;
}

uint64_t sub_1AD393CD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SecureCloudPingResponseProtobuf(0);
  if (!*(_QWORD *)(v0 + *(int *)(v2 + 20) + 8) || (result = sub_1AD63B3B4(), !v1))
  {
    if (!*(_QWORD *)(v0 + *(int *)(v2 + 24) + 8))
      return sub_1AD63B234();
    result = sub_1AD63B3B4();
    if (!v1)
      return sub_1AD63B234();
  }
  return result;
}

uint64_t sub_1AD393DA0()
{
  return sub_1AD394C94(type metadata accessor for SecureCloudPingResponseProtobuf, &qword_1EECDB5E8, (uint64_t)&unk_1AD67DE2C);
}

uint64_t sub_1AD393DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;

  result = sub_1AD63B240();
  v5 = *(int *)(a1 + 24);
  v6 = (_QWORD *)(a2 + *(int *)(a1 + 20));
  *v6 = 0;
  v6[1] = 0;
  v7 = (_QWORD *)(a2 + v5);
  *v7 = 0;
  v7[1] = 0;
  return result;
}

unint64_t sub_1AD393DF4()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1AD393E10()
{
  return sub_1AD393C28();
}

uint64_t sub_1AD393E24()
{
  return sub_1AD393CD4();
}

uint64_t sub_1AD393E38()
{
  sub_1ACFF9724(&qword_1EECDBB68, type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&unk_1AD67DDA4);
  return sub_1AD63B27C();
}

uint64_t sub_1AD393E88@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD14D8, (uint64_t)qword_1EECDB550, a1);
}

uint64_t sub_1AD393EA4()
{
  sub_1ACFF9724(&qword_1EECDB6B8, type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&unk_1AD67DD2C);
  return sub_1AD63B354();
}

uint64_t sub_1AD393EE4()
{
  sub_1ACFF9724(&qword_1EECDB6B8, type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&unk_1AD67DD2C);
  return sub_1AD63B360();
}

unint64_t sub_1AD393F38()
{
  return 0xD000000000000021;
}

uint64_t sub_1AD393F54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EECDB568);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDB568);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD67B890;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 2;
  *(_QWORD *)v7 = "buildNumber";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 3;
  *(_QWORD *)v11 = "date";
  *(_QWORD *)(v11 + 8) = 4;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 4;
  *(_QWORD *)v13 = "upgradeToken";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 5;
  *(_QWORD *)v15 = "identifier";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 6;
  *(_QWORD *)v17 = "secureCloudShareItem";
  *((_QWORD *)v17 + 1) = 20;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 7;
  *(_QWORD *)v19 = "type";
  *((_QWORD *)v19 + 1) = 4;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 8;
  *(_QWORD *)v21 = "version";
  *((_QWORD *)v21 + 1) = 7;
  v21[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD3941C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD39263C(&qword_1EECD14E0, (uint64_t)qword_1EECDB568, a1);
}

uint64_t sub_1AD3941DC()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_1AD63B294();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 2:
        case 4:
        case 5:
          type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
          sub_1AD63B2E8();
          break;
        case 3:
          type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
          sub_1AD63B2DC();
          break;
        case 6:
          type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
          sub_1AD63B2B8();
          break;
        case 7:
          sub_1AD394360();
          break;
        case 8:
          type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
          sub_1AD63B2F4();
          break;
        default:
          break;
      }
      result = sub_1AD63B294();
    }
  }
  return result;
}

uint64_t sub_1AD394360()
{
  type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  sub_1AD3964F8();
  return sub_1AD63B2AC();
}

uint64_t sub_1AD3943D4()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v2 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  if (!*(_QWORD *)(v0 + v2[5] + 8) || (result = sub_1AD63B3B4(), !v1))
  {
    if ((*(_BYTE *)(v0 + v2[6] + 8) & 1) != 0 || (result = sub_1AD63B3A8(), !v1))
    {
      if (!*(_QWORD *)(v0 + v2[7] + 8) || (result = sub_1AD63B3B4(), !v1))
      {
        if (!*(_QWORD *)(v0 + v2[8] + 8) || (result = sub_1AD63B3B4(), !v1))
        {
          v4 = v0 + v2[9];
          v5 = *(_QWORD *)(v4 + 8);
          if (v5 >> 60 == 15
            || (v6 = *(_QWORD *)v4,
                sub_1AD0040A0(*(_QWORD *)v4, *(_QWORD *)(v4 + 8)),
                sub_1AD63B384(),
                result = sub_1AD004118(v6, v5),
                !v1))
          {
            if ((*(_BYTE *)(v0 + v2[10] + 9) & 1) != 0 || (sub_1AD3964F8(), result = sub_1AD63B378(), !v1))
            {
              if ((*(_BYTE *)(v0 + v2[11] + 4) & 1) != 0)
                return sub_1AD63B234();
              result = sub_1AD63B3C0();
              if (!v1)
                return sub_1AD63B234();
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AD3945EC()
{
  return sub_1AD394C94(type metadata accessor for SecureCloudUpgradeMessageProtobuf, &qword_1EECDB5F8, (uint64_t)&unk_1AD67DF94);
}

double sub_1AD394608@<D0>(int *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  double result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  sub_1AD63B240();
  v4 = a1[6];
  v5 = (_QWORD *)(a2 + a1[5]);
  *v5 = 0;
  v5[1] = 0;
  v6 = a2 + v4;
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = a1[8];
  v8 = (_QWORD *)(a2 + a1[7]);
  *v8 = 0;
  v8[1] = 0;
  v9 = (_QWORD *)(a2 + v7);
  *v9 = 0;
  v9[1] = 0;
  result = 0.0;
  v11 = a1[10];
  *(_OWORD *)(a2 + a1[9]) = xmmword_1AD67A180;
  v12 = a2 + v11;
  *(_QWORD *)v12 = 0;
  *(_WORD *)(v12 + 8) = 256;
  v13 = a2 + a1[11];
  *(_DWORD *)v13 = 0;
  *(_BYTE *)(v13 + 4) = 1;
  return result;
}

unint64_t sub_1AD39468C()
{
  return 0xD000000000000021;
}

uint64_t sub_1AD3946A8()
{
  return sub_1AD3941DC();
}

uint64_t sub_1AD3946BC()
{
  return sub_1AD3943D4();
}

uint64_t sub_1AD3946D0()
{
  sub_1ACFF9724(&qword_1EECDBB60, type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&unk_1AD67DF0C);
  return sub_1AD63B27C();
}

uint64_t sub_1AD394720@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD14E0, (uint64_t)qword_1EECDB568, a1);
}

uint64_t sub_1AD39473C()
{
  sub_1ACFF9724(&qword_1EECDB6D0, type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&unk_1AD67DE94);
  return sub_1AD63B354();
}

uint64_t sub_1AD39477C()
{
  sub_1ACFF9724(&qword_1EECDB6D0, type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&unk_1AD67DE94);
  return sub_1AD63B360();
}

uint64_t sub_1AD3947D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EECDB580);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDB580);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD648170;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "request";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "response";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD394920@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD39263C(&qword_1EECD14E8, (uint64_t)qword_1EECDB580, a1);
}

uint64_t sub_1AD39493C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD14E8, (uint64_t)qword_1EECDB580, a1);
}

unint64_t sub_1AD394958()
{
  return 0xD000000000000022;
}

uint64_t sub_1AD394974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EECDB598);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDB598);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD648170;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "date";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "handshakeToken";
  *((_QWORD *)v11 + 1) = 14;
  v11[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD394AC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD39263C(&qword_1EECD14F0, (uint64_t)qword_1EECDB598, a1);
}

uint64_t sub_1AD394AE0()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1AD63B294();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2)
    {
      type metadata accessor for SecureCloudWithdrawRequestProtobuf(0);
      sub_1AD63B2E8();
    }
    else if (result == 1)
    {
      type metadata accessor for SecureCloudWithdrawRequestProtobuf(0);
      sub_1AD63B2DC();
    }
    v0 = 0;
  }
  return result;
}

uint64_t sub_1AD394BAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = type metadata accessor for SecureCloudWithdrawRequestProtobuf(0);
  if ((*(_BYTE *)(v0 + *(int *)(v2 + 20) + 8) & 1) != 0 || (result = sub_1AD63B3A8(), !v1))
  {
    if (!*(_QWORD *)(v0 + *(int *)(v2 + 24) + 8))
      return sub_1AD63B234();
    result = sub_1AD63B3B4();
    if (!v1)
      return sub_1AD63B234();
  }
  return result;
}

uint64_t sub_1AD394C78()
{
  return sub_1AD394C94(type metadata accessor for SecureCloudWithdrawRequestProtobuf, &qword_1EECDB600, (uint64_t)&unk_1AD67E124);
}

uint64_t sub_1AD394C94(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  sub_1AD63C4AC();
  a1(0);
  sub_1ACFF9724(a2, a1, a3);
  sub_1AD63B6C0();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD394D10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  result = sub_1AD63B240();
  v5 = *(int *)(a1 + 24);
  v6 = a2 + *(int *)(a1 + 20);
  *(_QWORD *)v6 = 0;
  *(_BYTE *)(v6 + 8) = 1;
  v7 = (_QWORD *)(a2 + v5);
  *v7 = 0;
  v7[1] = 0;
  return result;
}

unint64_t sub_1AD394D50()
{
  return 0xD000000000000022;
}

uint64_t sub_1AD394D6C()
{
  return sub_1AD394AE0();
}

uint64_t sub_1AD394D80()
{
  return sub_1AD394BAC();
}

uint64_t sub_1AD394D94()
{
  sub_1ACFF9724(&qword_1EECDBB58, type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&unk_1AD67E09C);
  return sub_1AD63B27C();
}

uint64_t sub_1AD394DE4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD371FF8(&qword_1EECD14F0, (uint64_t)qword_1EECDB598, a1);
}

uint64_t sub_1AD394E00()
{
  sub_1ACFF9724(&qword_1EECDB6E8, type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&unk_1AD67E024);
  return sub_1AD63B354();
}

uint64_t sub_1AD394E40()
{
  sub_1ACFF9724(&qword_1EECDB6E8, type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&unk_1AD67E024);
  return sub_1AD63B360();
}

uint64_t sub_1AD394E94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  char v14;
  double *v15;
  int v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t);
  void (*v25)(char *, uint64_t);
  uint64_t v27;

  v4 = sub_1AD63B24C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v27 - v9;
  v11 = type metadata accessor for SecureCloudWithdrawRequestProtobuf(0);
  v12 = *(int *)(v11 + 20);
  v13 = (double *)(a1 + v12);
  v14 = *(_BYTE *)(a1 + v12 + 8);
  v15 = (double *)(a2 + v12);
  v16 = *(unsigned __int8 *)(a2 + v12 + 8);
  if ((v14 & 1) != 0)
  {
    if (!v16)
      goto LABEL_16;
  }
  else
  {
    if (*v13 != *v15)
      LOBYTE(v16) = 1;
    if ((v16 & 1) != 0)
      goto LABEL_16;
  }
  v17 = *(int *)(v11 + 24);
  v18 = (_QWORD *)(a1 + v17);
  v19 = *(_QWORD *)(a1 + v17 + 8);
  v20 = (_QWORD *)(a2 + v17);
  v21 = v20[1];
  if (!v19)
  {
    if (!v21)
    {
LABEL_17:
      v24 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v24(v10, a1, v4);
      v24(v8, a2, v4);
      sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
      v23 = sub_1AD63B738();
      v25 = *(void (**)(char *, uint64_t))(v5 + 8);
      v25(v8, v4);
      v25(v10, v4);
      return v23 & 1;
    }
LABEL_16:
    v23 = 0;
    return v23 & 1;
  }
  if (!v21)
    goto LABEL_16;
  if (*v18 == *v20 && v19 == v21)
    goto LABEL_17;
  v23 = 0;
  if ((sub_1AD63C2A8() & 1) != 0)
    goto LABEL_17;
  return v23 & 1;
}

uint64_t sub_1AD395028(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  int *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  double *v20;
  char v21;
  double *v22;
  int v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  uint64_t *v46;
  char v47;
  uint64_t *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  _DWORD *v55;
  char v56;
  _DWORD *v57;
  int v58;
  void (*v59)(_BYTE *, uint64_t, uint64_t);
  void (*v60)(_BYTE *, uint64_t);
  _BYTE v61[4];
  int v62;
  uint64_t v63;

  v4 = sub_1AD63B24C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v61[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v61[-v9];
  v11 = (int *)type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v12 = v11[5];
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  if (!v14)
  {
    if (v16)
      goto LABEL_34;
    goto LABEL_10;
  }
  if (!v16)
    goto LABEL_34;
  v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (v18 = 0, (sub_1AD63C2A8() & 1) != 0))
  {
LABEL_10:
    v19 = v11[6];
    v20 = (double *)(a1 + v19);
    v21 = *(_BYTE *)(a1 + v19 + 8);
    v22 = (double *)(a2 + v19);
    v23 = *(unsigned __int8 *)(a2 + v19 + 8);
    if ((v21 & 1) != 0)
    {
      if (!v23)
        goto LABEL_34;
    }
    else
    {
      if (*v20 != *v22)
        LOBYTE(v23) = 1;
      if ((v23 & 1) != 0)
        goto LABEL_34;
    }
    v24 = v11[7];
    v25 = (_QWORD *)(a1 + v24);
    v26 = *(_QWORD *)(a1 + v24 + 8);
    v27 = (_QWORD *)(a2 + v24);
    v28 = v27[1];
    if (v26)
    {
      if (!v28)
        goto LABEL_34;
      if (*v25 != *v27 || v26 != v28)
      {
        v18 = 0;
        if ((sub_1AD63C2A8() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v28)
    {
      goto LABEL_34;
    }
    v30 = v11[8];
    v31 = (_QWORD *)(a1 + v30);
    v32 = *(_QWORD *)(a1 + v30 + 8);
    v33 = (_QWORD *)(a2 + v30);
    v34 = v33[1];
    if (v32)
    {
      if (!v34)
        goto LABEL_34;
      if (*v31 != *v33 || v32 != v34)
      {
        v18 = 0;
        if ((sub_1AD63C2A8() & 1) == 0)
          return v18 & 1;
      }
    }
    else if (v34)
    {
      goto LABEL_34;
    }
    v37 = v11[9];
    v38 = *(_QWORD *)(a1 + v37);
    v39 = *(_QWORD *)(a1 + v37 + 8);
    v40 = (uint64_t *)(a2 + v37);
    v41 = *v40;
    v42 = v40[1];
    if (v39 >> 60 == 15)
    {
      if (v42 >> 60 == 15)
      {
LABEL_42:
        v45 = v11[10];
        v46 = (uint64_t *)(a1 + v45);
        v47 = *(_BYTE *)(a1 + v45 + 9);
        v48 = (uint64_t *)(a2 + v45);
        if ((v47 & 1) != 0)
        {
          if ((*((_BYTE *)v48 + 9) & 1) == 0)
            goto LABEL_34;
        }
        else
        {
          if ((*((_BYTE *)v48 + 9) & 1) != 0)
            goto LABEL_34;
          v49 = *v46;
          v50 = *((_BYTE *)v46 + 8);
          v51 = *v48;
          v52 = *((_BYTE *)v48 + 8);
          v53 = v49 != 0;
          if ((v50 & 1) == 0)
            v53 = v49;
          if ((v52 & 1) != 0)
          {
            if (v51)
            {
              if (v53 != 1)
                goto LABEL_34;
            }
            else if (v53)
            {
              goto LABEL_34;
            }
          }
          else if (v53 != v51)
          {
            goto LABEL_34;
          }
        }
        v54 = v11[11];
        v55 = (_DWORD *)(a1 + v54);
        v56 = *(_BYTE *)(a1 + v54 + 4);
        v57 = (_DWORD *)(a2 + v54);
        v58 = *(unsigned __int8 *)(a2 + v54 + 4);
        if ((v56 & 1) == 0)
        {
          if (*v55 != *v57)
            LOBYTE(v58) = 1;
          if ((v58 & 1) != 0)
            goto LABEL_34;
LABEL_61:
          v59 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
          v59(v10, a1, v4);
          v59(v8, a2, v4);
          sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
          v18 = sub_1AD63B738();
          v60 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
          v60(v8, v4);
          v60(v10, v4);
          return v18 & 1;
        }
        if (v58)
          goto LABEL_61;
LABEL_34:
        v18 = 0;
        return v18 & 1;
      }
    }
    else if (v42 >> 60 != 15)
    {
      v63 = v38;
      sub_1AD00408C(v38, v39);
      sub_1AD00408C(v41, v42);
      sub_1AD3DB778(v63, v39);
      v62 = v44;
      sub_1AD004118(v41, v42);
      sub_1AD004118(v63, v39);
      if ((v62 & 1) == 0)
        goto LABEL_34;
      goto LABEL_42;
    }
    v43 = v38;
    sub_1AD00408C(v38, v39);
    sub_1AD00408C(v41, v42);
    sub_1AD004118(v43, v39);
    sub_1AD004118(v41, v42);
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1AD3953C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  int *v23;
  uint64_t v24;
  double *v25;
  char v26;
  double *v27;
  int v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  char v47;
  uint64_t *v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  unsigned int (*v52)(uint64_t, uint64_t, uint64_t);
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  uint64_t v57;
  _DWORD *v58;
  char v59;
  _DWORD *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  void (*v64)(char *, uint64_t, uint64_t);
  char *v65;
  char *v66;
  void (*v67)(char *, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;

  v4 = sub_1AD63B24C();
  v74 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v73 = (char *)&v69 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v72 = (char *)&v69 - v7;
  v75 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v8 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v10 = (char *)&v69 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDBB90);
  MEMORY[0x1E0C80A78](v11);
  v76 = (char *)&v69 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v69 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v69 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v69 - v20;
  v22 = type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  v23 = (int *)v22;
  v24 = *(int *)(v22 + 20);
  v25 = (double *)(a1 + v24);
  v26 = *(_BYTE *)(a1 + v24 + 8);
  v27 = (double *)(a2 + v24);
  v28 = *(unsigned __int8 *)(a2 + v24 + 8);
  if ((v26 & 1) != 0)
  {
    if (!v28)
      goto LABEL_49;
  }
  else
  {
    if (*v25 != *v27)
      LOBYTE(v28) = 1;
    if ((v28 & 1) != 0)
      goto LABEL_49;
  }
  v29 = *(int *)(v22 + 24);
  v30 = (_QWORD *)(a1 + v29);
  v31 = *(_QWORD *)(a1 + v29 + 8);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  if (v31)
  {
    if (!v33)
      goto LABEL_49;
    v71 = v4;
    if (*v30 != *v32 || v31 != v33)
    {
      v34 = 0;
      if ((sub_1AD63C2A8() & 1) == 0)
        return v34 & 1;
    }
  }
  else
  {
    v71 = v4;
    if (v33)
      goto LABEL_49;
  }
  v35 = v23[7];
  v36 = (_QWORD *)(a1 + v35);
  v37 = *(_QWORD *)(a1 + v35 + 8);
  v38 = (_QWORD *)(a2 + v35);
  v39 = v38[1];
  if (v37)
  {
    if (!v39)
      goto LABEL_49;
    if (*v36 != *v38 || v37 != v39)
    {
      v34 = 0;
      if ((sub_1AD63C2A8() & 1) == 0)
        return v34 & 1;
    }
  }
  else if (v39)
  {
    goto LABEL_49;
  }
  v40 = v23[8];
  v41 = (_QWORD *)(a1 + v40);
  v42 = *(_QWORD *)(a1 + v40 + 8);
  v43 = (_QWORD *)(a2 + v40);
  v44 = v43[1];
  if (v42)
  {
    if (!v44)
      goto LABEL_49;
    if (*v41 != *v43 || v42 != v44)
    {
      v34 = 0;
      if ((sub_1AD63C2A8() & 1) == 0)
        return v34 & 1;
    }
  }
  else if (v44)
  {
    goto LABEL_49;
  }
  v45 = v23[9];
  v46 = (uint64_t *)(a1 + v45);
  v47 = *(_BYTE *)(a1 + v45 + 9);
  v48 = (uint64_t *)(a2 + v45);
  v49 = *(_BYTE *)(a2 + v45 + 9);
  if ((v47 & 1) != 0)
  {
    v50 = (uint64_t)v76;
    if ((v49 & 1) == 0)
      goto LABEL_49;
  }
  else
  {
    v50 = (uint64_t)v76;
    if ((v49 & 1) != 0)
      goto LABEL_49;
    v54 = *v46;
    v55 = *v48;
    if ((v48[1] & 1) != 0)
      __asm { BR              X11 }
    if (v54 != v55)
      goto LABEL_49;
  }
  sub_1AD38EA78(a1 + v23[10], (uint64_t)v21);
  sub_1AD38EA78(a2 + v23[10], (uint64_t)v19);
  v51 = v50 + *(int *)(v11 + 48);
  sub_1AD38EA78((uint64_t)v21, v50);
  v70 = v51;
  sub_1AD38EA78((uint64_t)v19, v51);
  v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  v53 = v75;
  if (v52(v50, 1, v75) != 1)
  {
    sub_1AD38EA78(v50, (uint64_t)v16);
    if (v52(v70, 1, v53) == 1)
    {
      sub_1AD009758((uint64_t)v19, &qword_1EECDB5B0);
      sub_1AD009758((uint64_t)v21, &qword_1EECDB5B0);
      sub_1AD38EC90((uint64_t)v16);
      goto LABEL_39;
    }
    sub_1AD38EAD4(v70, (uint64_t)v10);
    v56 = sub_1AD39594C((uint64_t)v16, (uint64_t)v10);
    sub_1AD38EC90((uint64_t)v10);
    sub_1AD009758((uint64_t)v19, &qword_1EECDB5B0);
    sub_1AD009758((uint64_t)v21, &qword_1EECDB5B0);
    sub_1AD38EC90((uint64_t)v16);
    sub_1AD009758(v50, &qword_1EECDB5B0);
    if ((v56 & 1) != 0)
      goto LABEL_42;
LABEL_49:
    v34 = 0;
    return v34 & 1;
  }
  sub_1AD009758((uint64_t)v19, &qword_1EECDB5B0);
  v50 = (uint64_t)v76;
  sub_1AD009758((uint64_t)v21, &qword_1EECDB5B0);
  if (v52(v70, 1, v53) != 1)
  {
LABEL_39:
    sub_1AD009758(v50, &qword_1EECDBB90);
    goto LABEL_49;
  }
  sub_1AD009758(v50, &qword_1EECDB5B0);
LABEL_42:
  v57 = v23[11];
  v58 = (_DWORD *)(a1 + v57);
  v59 = *(_BYTE *)(a1 + v57 + 4);
  v60 = (_DWORD *)(a2 + v57);
  v61 = *(unsigned __int8 *)(a2 + v57 + 4);
  if ((v59 & 1) != 0)
  {
    v62 = v71;
    if (!v61)
      goto LABEL_49;
  }
  else
  {
    if (*v58 != *v60)
      LOBYTE(v61) = 1;
    v62 = v71;
    if ((v61 & 1) != 0)
      goto LABEL_49;
  }
  v63 = v74;
  v64 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
  v65 = v72;
  v64(v72, a1, v62);
  v66 = v73;
  v64(v73, a2, v62);
  sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
  v34 = sub_1AD63B738();
  v67 = *(void (**)(char *, uint64_t))(v63 + 8);
  v67(v66, v62);
  v67(v65, v62);
  return v34 & 1;
}

uint64_t sub_1AD39594C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t v19;
  uint64_t *v20;
  char v21;
  char v22;
  uint64_t v23;
  uint64_t *v24;
  char v25;
  char v27;
  char v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1AD63B24C();
  v39 = *(_QWORD *)(v4 - 8);
  v40 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v39 - v8;
  v10 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v11 = v10[5];
  v12 = *(_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (uint64_t *)(a2 + v11);
  v15 = *v14;
  v16 = v14[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 != 15)
      goto LABEL_15;
  }
  else
  {
    if (v16 >> 60 == 15)
      goto LABEL_15;
    sub_1AD00408C(v12, v13);
    sub_1AD00408C(v15, v16);
    sub_1AD3DB778(v12, v13);
    v18 = v17;
    sub_1AD004118(v15, v16);
    sub_1AD004118(v12, v13);
    if ((v18 & 1) == 0)
      goto LABEL_16;
  }
  v19 = v10[6];
  v12 = *(_QWORD *)(a1 + v19);
  v13 = *(_QWORD *)(a1 + v19 + 8);
  v20 = (uint64_t *)(a2 + v19);
  v15 = *v20;
  v16 = v20[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 != 15)
      goto LABEL_15;
    goto LABEL_11;
  }
  if (v16 >> 60 == 15)
    goto LABEL_15;
  sub_1AD00408C(v12, v13);
  sub_1AD00408C(v15, v16);
  sub_1AD3DB778(v12, v13);
  v22 = v21;
  sub_1AD004118(v15, v16);
  sub_1AD004118(v12, v13);
  if ((v22 & 1) == 0)
  {
LABEL_16:
    v25 = 0;
    return v25 & 1;
  }
LABEL_11:
  v23 = v10[7];
  v12 = *(_QWORD *)(a1 + v23);
  v13 = *(_QWORD *)(a1 + v23 + 8);
  v24 = (uint64_t *)(a2 + v23);
  v15 = *v24;
  v16 = v24[1];
  if (v13 >> 60 == 15)
  {
    if (v16 >> 60 == 15)
      goto LABEL_19;
LABEL_15:
    sub_1AD00408C(v12, v13);
    sub_1AD00408C(v15, v16);
    sub_1AD004118(v12, v13);
    sub_1AD004118(v15, v16);
    goto LABEL_16;
  }
  if (v16 >> 60 == 15)
    goto LABEL_15;
  sub_1AD00408C(v12, v13);
  sub_1AD00408C(v15, v16);
  sub_1AD3DB778(v12, v13);
  v28 = v27;
  sub_1AD004118(v15, v16);
  sub_1AD004118(v12, v13);
  if ((v28 & 1) == 0)
    goto LABEL_16;
LABEL_19:
  v29 = v10[8];
  v30 = (_QWORD *)(a1 + v29);
  v31 = *(_QWORD *)(a1 + v29 + 8);
  v32 = (_QWORD *)(a2 + v29);
  v33 = v32[1];
  if (!v31)
  {
    if (v33)
      goto LABEL_16;
    goto LABEL_26;
  }
  if (!v33)
    goto LABEL_16;
  if (*v30 == *v32 && v31 == v33 || (v25 = 0, (sub_1AD63C2A8() & 1) != 0))
  {
LABEL_26:
    v34 = v39;
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    v36 = a1;
    v37 = v40;
    v35(v9, v36, v40);
    v35(v7, a2, v37);
    sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v25 = sub_1AD63B738();
    v38 = *(void (**)(char *, uint64_t))(v34 + 8);
    v38(v7, v37);
    v38(v9, v37);
  }
  return v25 & 1;
}

uint64_t sub_1AD395C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  int *v25;
  uint64_t v26;
  double *v27;
  char v28;
  double *v29;
  int v30;
  uint64_t v31;
  _QWORD *v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  char v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unsigned int (*v57)(uint64_t, uint64_t, uint64_t);
  char v59;
  uint64_t v60;
  _DWORD *v61;
  char v62;
  _DWORD *v63;
  int v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t, uint64_t);
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;

  v4 = sub_1AD63B24C();
  v77 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v76 = (char *)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v75 = (char *)&v73 - v7;
  v8 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v73 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDBB90);
  MEMORY[0x1E0C80A78](v12);
  v78 = (uint64_t)&v73 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v73 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v73 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v73 - v21;
  v23 = type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  v24 = a2;
  v25 = (int *)v23;
  v26 = *(int *)(v23 + 20);
  v27 = (double *)(a1 + v26);
  v28 = *(_BYTE *)(a1 + v26 + 8);
  v29 = (double *)(v24 + v26);
  v30 = *(unsigned __int8 *)(v24 + v26 + 8);
  if ((v28 & 1) != 0)
  {
    if (!v30)
      goto LABEL_34;
  }
  else
  {
    if (*v27 != *v29)
      LOBYTE(v30) = 1;
    if ((v30 & 1) != 0)
      goto LABEL_34;
  }
  v31 = *(int *)(v23 + 24);
  v32 = (_QWORD *)(a1 + v31);
  v33 = *(_QWORD *)(a1 + v31 + 8);
  v34 = (_QWORD *)(v24 + v31);
  v35 = v34[1];
  if (!v33)
  {
    v74 = v4;
    if (v35)
      goto LABEL_34;
    goto LABEL_14;
  }
  if (!v35)
    goto LABEL_34;
  v74 = v4;
  if (*v32 == *v34 && v33 == v35 || (v36 = v24, v37 = sub_1AD63C2A8(), v24 = v36, v38 = 0, (v37 & 1) != 0))
  {
LABEL_14:
    v39 = v25[7];
    v40 = (_QWORD *)(a1 + v39);
    v41 = *(_QWORD *)(a1 + v39 + 8);
    v42 = (_QWORD *)(v24 + v39);
    v43 = v42[1];
    if (v41)
    {
      if (!v43)
        goto LABEL_34;
      if (*v40 != *v42 || v41 != v43)
      {
        v44 = v24;
        v45 = sub_1AD63C2A8();
        v24 = v44;
        v38 = 0;
        if ((v45 & 1) == 0)
          return v38 & 1;
      }
    }
    else if (v43)
    {
      goto LABEL_34;
    }
    v46 = v25[8];
    v47 = (_QWORD *)(a1 + v46);
    v48 = *(_QWORD *)(a1 + v46 + 8);
    v49 = (_QWORD *)(v24 + v46);
    v50 = v49[1];
    if (v48)
    {
      if (!v50)
        goto LABEL_34;
      if (*v47 != *v49 || v48 != v50)
      {
        v51 = v24;
        v52 = sub_1AD63C2A8();
        v24 = v51;
        v38 = 0;
        if ((v52 & 1) == 0)
          return v38 & 1;
      }
    }
    else if (v50)
    {
      goto LABEL_34;
    }
    v53 = v24;
    sub_1AD38EA78(a1 + v25[9], (uint64_t)v22);
    v54 = v25[9];
    v73 = v53;
    sub_1AD38EA78(v53 + v54, (uint64_t)v20);
    v55 = v78;
    v56 = v78 + *(int *)(v12 + 48);
    sub_1AD38EA78((uint64_t)v22, v78);
    sub_1AD38EA78((uint64_t)v20, v56);
    v57 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    if (v57(v55, 1, v8) == 1)
    {
      sub_1AD009758((uint64_t)v20, &qword_1EECDB5B0);
      v55 = v78;
      sub_1AD009758((uint64_t)v22, &qword_1EECDB5B0);
      if (v57(v56, 1, v8) == 1)
      {
        sub_1AD009758(v55, &qword_1EECDB5B0);
LABEL_37:
        v60 = v25[10];
        v61 = (_DWORD *)(a1 + v60);
        v62 = *(_BYTE *)(a1 + v60 + 4);
        v63 = (_DWORD *)(v73 + v60);
        v64 = *(unsigned __int8 *)(v73 + v60 + 4);
        if ((v62 & 1) == 0)
        {
          if (*v61 != *v63)
            LOBYTE(v64) = 1;
          if ((v64 & 1) != 0)
            goto LABEL_34;
LABEL_43:
          v65 = v77;
          v66 = *(void (**)(char *, uint64_t, uint64_t))(v77 + 16);
          v67 = v74;
          v68 = v75;
          v69 = a1;
          v70 = v73;
          v66(v75, v69, v74);
          v71 = v76;
          v66(v76, v70, v67);
          sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
          v38 = sub_1AD63B738();
          v72 = *(void (**)(char *, uint64_t))(v65 + 8);
          v72(v71, v67);
          v72(v68, v67);
          return v38 & 1;
        }
        if (v64)
          goto LABEL_43;
LABEL_34:
        v38 = 0;
        return v38 & 1;
      }
    }
    else
    {
      sub_1AD38EA78(v55, (uint64_t)v17);
      if (v57(v56, 1, v8) != 1)
      {
        sub_1AD38EAD4(v56, (uint64_t)v11);
        v59 = sub_1AD39594C((uint64_t)v17, (uint64_t)v11);
        sub_1AD38EC90((uint64_t)v11);
        sub_1AD009758((uint64_t)v20, &qword_1EECDB5B0);
        sub_1AD009758((uint64_t)v22, &qword_1EECDB5B0);
        sub_1AD38EC90((uint64_t)v17);
        sub_1AD009758(v55, &qword_1EECDB5B0);
        if ((v59 & 1) == 0)
          goto LABEL_34;
        goto LABEL_37;
      }
      sub_1AD009758((uint64_t)v20, &qword_1EECDB5B0);
      sub_1AD009758((uint64_t)v22, &qword_1EECDB5B0);
      sub_1AD38EC90((uint64_t)v17);
    }
    sub_1AD009758(v55, &qword_1EECDBB90);
    goto LABEL_34;
  }
  return v38 & 1;
}

unint64_t sub_1AD3961A8()
{
  unint64_t result;

  result = qword_1EECDB5C8;
  if (!qword_1EECDB5C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D524, &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType);
    atomic_store(result, (unint64_t *)&qword_1EECDB5C8);
  }
  return result;
}

uint64_t sub_1AD3961EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  BOOL v17;
  char v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t);
  uint64_t v28;

  v4 = sub_1AD63B24C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v28 - v9;
  v11 = type metadata accessor for SecureCloudPingResponseProtobuf(0);
  v12 = *(int *)(v11 + 20);
  v13 = (_QWORD *)(a1 + v12);
  v14 = *(_QWORD *)(a1 + v12 + 8);
  v15 = (_QWORD *)(a2 + v12);
  v16 = v15[1];
  if (!v14)
  {
    if (v16)
      goto LABEL_19;
    goto LABEL_10;
  }
  if (!v16)
    goto LABEL_19;
  v17 = *v13 == *v15 && v14 == v16;
  if (v17 || (v18 = 0, (sub_1AD63C2A8() & 1) != 0))
  {
LABEL_10:
    v19 = *(int *)(v11 + 24);
    v20 = (_QWORD *)(a1 + v19);
    v21 = *(_QWORD *)(a1 + v19 + 8);
    v22 = (_QWORD *)(a2 + v19);
    v23 = v22[1];
    if (v21)
    {
      if (v23)
      {
        if (*v20 != *v22 || v21 != v23)
        {
          v18 = 0;
          if ((sub_1AD63C2A8() & 1) == 0)
            return v18 & 1;
        }
LABEL_20:
        v25 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
        v25(v10, a1, v4);
        v25(v8, a2, v4);
        sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
        v18 = sub_1AD63B738();
        v26 = *(void (**)(char *, uint64_t))(v5 + 8);
        v26(v8, v4);
        v26(v10, v4);
        return v18 & 1;
      }
    }
    else if (!v23)
    {
      goto LABEL_20;
    }
LABEL_19:
    v18 = 0;
  }
  return v18 & 1;
}

uint64_t sub_1AD396398(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  char v17;
  void (*v18)(char *, uint64_t, uint64_t);
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v4 = sub_1AD63B24C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - v9;
  v11 = *(int *)(type metadata accessor for SecureCloudPingRequestProtobuf(0) + 20);
  v12 = (_QWORD *)(a1 + v11);
  v13 = *(_QWORD *)(a1 + v11 + 8);
  v14 = (_QWORD *)(a2 + v11);
  v15 = v14[1];
  if (!v13)
  {
    if (!v15)
    {
LABEL_11:
      v18 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v18(v10, a1, v4);
      v18(v8, a2, v4);
      sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
      v17 = sub_1AD63B738();
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v8, v4);
      v19(v10, v4);
      return v17 & 1;
    }
LABEL_10:
    v17 = 0;
    return v17 & 1;
  }
  if (!v15)
    goto LABEL_10;
  if (*v12 == *v14 && v13 == v15)
    goto LABEL_11;
  v17 = 0;
  if ((sub_1AD63C2A8() & 1) != 0)
    goto LABEL_11;
  return v17 & 1;
}

unint64_t sub_1AD3964F8()
{
  unint64_t result;

  result = qword_1EECDB5F0;
  if (!qword_1EECDB5F0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D644, &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDB5F0);
  }
  return result;
}

unint64_t sub_1AD396540()
{
  unint64_t result;

  result = qword_1EECDB608;
  if (!qword_1EECDB608)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D5A4, &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType);
    atomic_store(result, (unint64_t *)&qword_1EECDB608);
  }
  return result;
}

unint64_t sub_1AD396588()
{
  unint64_t result;

  result = qword_1EECDB610;
  if (!qword_1EECDB610)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D56C, &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType);
    atomic_store(result, (unint64_t *)&qword_1EECDB610);
  }
  return result;
}

unint64_t sub_1AD3965D0()
{
  unint64_t result;

  result = qword_1EECDB618;
  if (!qword_1EECDB618)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D5E4, &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType);
    atomic_store(result, (unint64_t *)&qword_1EECDB618);
  }
  return result;
}

uint64_t sub_1AD396614()
{
  return sub_1AD0D73A4(&qword_1EECDB620, &qword_1EECDB628);
}

unint64_t sub_1AD39663C()
{
  unint64_t result;

  result = qword_1EECDB630;
  if (!qword_1EECDB630)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D6C4, &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDB630);
  }
  return result;
}

unint64_t sub_1AD396684()
{
  unint64_t result;

  result = qword_1EECDB638;
  if (!qword_1EECDB638)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D68C, &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDB638);
  }
  return result;
}

unint64_t sub_1AD3966CC()
{
  unint64_t result;

  result = qword_1EECDB640;
  if (!qword_1EECDB640)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67D704, &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType);
    atomic_store(result, (unint64_t *)&qword_1EECDB640);
  }
  return result;
}

uint64_t sub_1AD396710()
{
  return sub_1AD0D73A4(&qword_1EECDB648, &qword_1EECDB650);
}

uint64_t sub_1AD396734()
{
  return sub_1ACFF9724(&qword_1EECDB658, type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&unk_1AD67D83C);
}

uint64_t sub_1AD396760()
{
  return sub_1ACFF9724(&qword_1EECDB660, type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&unk_1AD67D764);
}

uint64_t sub_1AD39678C()
{
  return sub_1ACFF9724(&qword_1EECDB5C0, type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&unk_1AD67D864);
}

uint64_t sub_1AD3967B8()
{
  return sub_1ACFF9724(&qword_1EECDB668, type metadata accessor for SecureCloudInviteRequestProtobuf, (uint64_t)&unk_1AD67D8A4);
}

uint64_t sub_1AD3967E4()
{
  return sub_1ACFF9724(&qword_1EECDB670, type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&unk_1AD67D9A4);
}

uint64_t sub_1AD396810()
{
  return sub_1ACFF9724(&qword_1EECDB678, type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&unk_1AD67D8CC);
}

uint64_t sub_1AD39683C()
{
  return sub_1ACFF9724(&qword_1EECDB5D0, type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&unk_1AD67D9CC);
}

uint64_t sub_1AD396868()
{
  return sub_1ACFF9724(&qword_1EECDB680, type metadata accessor for SecureCloudInviteResponseProtobuf, (uint64_t)&unk_1AD67DA0C);
}

uint64_t sub_1AD396894()
{
  return sub_1ACFF9724(&qword_1EECDB688, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DB34);
}

uint64_t sub_1AD3968C0()
{
  return sub_1ACFF9724(&qword_1EECDB5B8, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DA5C);
}

uint64_t sub_1AD3968EC()
{
  return sub_1ACFF9724(&qword_1EECDB5D8, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DB5C);
}

uint64_t sub_1AD396918()
{
  return sub_1ACFF9724(&qword_1EECDB690, type metadata accessor for SecureCloudInviteUserInfoProtobuf, (uint64_t)&unk_1AD67DB9C);
}

uint64_t sub_1AD396944()
{
  return sub_1ACFF9724(&qword_1EECDB698, type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&unk_1AD67DC9C);
}

uint64_t sub_1AD396970()
{
  return sub_1ACFF9724(&qword_1EECDB6A0, type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&unk_1AD67DBC4);
}

uint64_t sub_1AD39699C()
{
  return sub_1ACFF9724(&qword_1EECDB5E0, type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&unk_1AD67DCC4);
}

uint64_t sub_1AD3969C8()
{
  return sub_1ACFF9724(&qword_1EECDB6A8, type metadata accessor for SecureCloudPingRequestProtobuf, (uint64_t)&unk_1AD67DD04);
}

uint64_t sub_1AD3969F4()
{
  return sub_1ACFF9724(&qword_1EECDB6B0, type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&unk_1AD67DE04);
}

uint64_t sub_1AD396A20()
{
  return sub_1ACFF9724(&qword_1EECDB6B8, type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&unk_1AD67DD2C);
}

uint64_t sub_1AD396A4C()
{
  return sub_1ACFF9724(&qword_1EECDB5E8, type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&unk_1AD67DE2C);
}

uint64_t sub_1AD396A78()
{
  return sub_1ACFF9724(&qword_1EECDB6C0, type metadata accessor for SecureCloudPingResponseProtobuf, (uint64_t)&unk_1AD67DE6C);
}

uint64_t sub_1AD396AA4()
{
  return sub_1ACFF9724(&qword_1EECDB6C8, type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&unk_1AD67DF6C);
}

uint64_t sub_1AD396AD0()
{
  return sub_1ACFF9724(&qword_1EECDB6D0, type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&unk_1AD67DE94);
}

uint64_t sub_1AD396AFC()
{
  return sub_1ACFF9724(&qword_1EECDB5F8, type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&unk_1AD67DF94);
}

uint64_t sub_1AD396B28()
{
  return sub_1ACFF9724(&qword_1EECDB6D8, type metadata accessor for SecureCloudUpgradeMessageProtobuf, (uint64_t)&unk_1AD67DFD4);
}

uint64_t sub_1AD396B54()
{
  return sub_1ACFF9724(&qword_1EECDB6E0, type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&unk_1AD67E0FC);
}

uint64_t sub_1AD396B80()
{
  return sub_1ACFF9724(&qword_1EECDB6E8, type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&unk_1AD67E024);
}

uint64_t sub_1AD396BAC()
{
  return sub_1ACFF9724(&qword_1EECDB600, type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&unk_1AD67E124);
}

uint64_t sub_1AD396BD8()
{
  return sub_1ACFF9724(&qword_1EECDB6F0, type metadata accessor for SecureCloudWithdrawRequestProtobuf, (uint64_t)&unk_1AD67E164);
}

uint64_t sub_1AD396C04@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  return keypath_getTm_0(a1, type metadata accessor for SecureCloudInviteRequestProtobuf, a2);
}

uint64_t sub_1AD396C10(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_1(a1, a2, a3, a4, type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD396C1C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F170(a1, type metadata accessor for SecureCloudInviteRequestProtobuf, a2);
}

uint64_t sub_1AD396C38(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F1C0(a1, a2, a3, a4, type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD396C54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F3A8(a1, type metadata accessor for SecureCloudInviteRequestProtobuf, a2);
}

uint64_t sub_1AD396C70(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F3F8(a1, a2, a3, a4, type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD396C8C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F5E0(a1, type metadata accessor for SecureCloudInviteRequestProtobuf, a2);
}

uint64_t sub_1AD396CA8(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F630(a1, a2, a3, a4, type metadata accessor for SecureCloudInviteRequestProtobuf);
}

uint64_t sub_1AD396CCC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t result;
  int *v5;
  int v6;

  result = type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  v5 = (int *)(a1 + *(int *)(result + 40));
  if (*((_BYTE *)v5 + 4))
    v6 = 0;
  else
    v6 = *v5;
  *a2 = v6;
  return result;
}

uint64_t sub_1AD396D10(int *a1, uint64_t a2)
{
  int v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudInviteRequestProtobuf(0);
  v5 = a2 + *(int *)(result + 40);
  *(_DWORD *)v5 = v3;
  *(_BYTE *)(v5 + 4) = 0;
  return result;
}

uint64_t sub_1AD396D48@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  return keypath_getTm_0(a1, type metadata accessor for SecureCloudInviteResponseProtobuf, a2);
}

uint64_t sub_1AD396D54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_1(a1, a2, a3, a4, type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD396D60@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F170(a1, type metadata accessor for SecureCloudInviteResponseProtobuf, a2);
}

uint64_t sub_1AD396D7C(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F1C0(a1, a2, a3, a4, type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD396D98@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F3A8(a1, type metadata accessor for SecureCloudInviteResponseProtobuf, a2);
}

uint64_t sub_1AD396DB4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F3F8(a1, a2, a3, a4, type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD396DD0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F5E0(a1, type metadata accessor for SecureCloudInviteResponseProtobuf, a2);
}

uint64_t sub_1AD396DEC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F630(a1, a2, a3, a4, type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD396E08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  int v8;

  result = type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  v5 = (uint64_t *)(a1 + *(int *)(result + 36));
  v6 = *v5;
  v7 = *((_BYTE *)v5 + 8);
  v8 = *((unsigned __int8 *)v5 + 9);
  if (v8)
    v6 = 0;
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = (v8 | v7) & 1;
  return result;
}

uint64_t sub_1AD396E5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SecureCloudInviteResponseProtobuf(0);
  v6 = a2 + *(int *)(result + 36);
  *(_QWORD *)v6 = v3;
  *(_BYTE *)(v6 + 8) = v4;
  *(_BYTE *)(v6 + 9) = 0;
  return result;
}

uint64_t sub_1AD396EAC@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_23Tm(a1, type metadata accessor for SecureCloudInviteResponseProtobuf, a2);
}

uint64_t sub_1AD396EB8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_24Tm(a1, a2, a3, a4, type metadata accessor for SecureCloudInviteResponseProtobuf);
}

uint64_t sub_1AD396EC4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 20));
  v4 = *v3;
  v5 = v3[1];
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0xC000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a2 = v6;
  a2[1] = v7;
  return sub_1AD00408C(v4, v5);
}

uint64_t sub_1AD396F14@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 24));
  v4 = *v3;
  v5 = v3[1];
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0xC000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a2 = v6;
  a2[1] = v7;
  return sub_1AD00408C(v4, v5);
}

uint64_t sub_1AD396F64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudInviteUserInfoProtobuf(0) + 28));
  v4 = *v3;
  v5 = v3[1];
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0xC000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a2 = v6;
  a2[1] = v7;
  return sub_1AD00408C(v4, v5);
}

uint64_t sub_1AD396FB4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F5E0(a1, type metadata accessor for SecureCloudInviteUserInfoProtobuf, a2);
}

uint64_t sub_1AD396FD0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F630(a1, a2, a3, a4, type metadata accessor for SecureCloudInviteUserInfoProtobuf);
}

uint64_t sub_1AD396FEC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD390960(a1, type metadata accessor for SecureCloudPingRequestProtobuf, a2);
}

uint64_t sub_1AD397008(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD3909B0(a1, a2, a3, a4, type metadata accessor for SecureCloudPingRequestProtobuf);
}

uint64_t sub_1AD397024@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD390960(a1, type metadata accessor for SecureCloudPingResponseProtobuf, a2);
}

uint64_t sub_1AD397040(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD3909B0(a1, a2, a3, a4, type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_1AD39705C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F170(a1, type metadata accessor for SecureCloudPingResponseProtobuf, a2);
}

uint64_t sub_1AD397078(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F1C0(a1, a2, a3, a4, type metadata accessor for SecureCloudPingResponseProtobuf);
}

uint64_t sub_1AD397094@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD390960(a1, type metadata accessor for SecureCloudUpgradeMessageProtobuf, a2);
}

uint64_t sub_1AD3970B0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD3909B0(a1, a2, a3, a4, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD3970CC@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  double v6;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v5 = a1 + *(int *)(result + 24);
  v6 = *(double *)v5;
  if (*(_BYTE *)(v5 + 8))
    v6 = 0.0;
  *a2 = v6;
  return result;
}

uint64_t sub_1AD397114(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *a1;
  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v5 = a2 + *(int *)(result + 24);
  *(_QWORD *)v5 = v3;
  *(_BYTE *)(v5 + 8) = 0;
  return result;
}

uint64_t sub_1AD39714C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F3A8(a1, type metadata accessor for SecureCloudUpgradeMessageProtobuf, a2);
}

uint64_t sub_1AD397168(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F3F8(a1, a2, a3, a4, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD397184@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F5E0(a1, type metadata accessor for SecureCloudUpgradeMessageProtobuf, a2);
}

uint64_t sub_1AD3971A0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F630(a1, a2, a3, a4, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t sub_1AD3971BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for SecureCloudUpgradeMessageProtobuf(0) + 36));
  v4 = *v3;
  v5 = v3[1];
  if (v5 >> 60 == 15)
    v6 = 0;
  else
    v6 = *v3;
  v7 = 0xC000000000000000;
  if (v5 >> 60 != 15)
    v7 = v5;
  *a2 = v6;
  a2[1] = v7;
  return sub_1AD00408C(v4, v5);
}

uint64_t sub_1AD39720C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  int v8;

  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v5 = (uint64_t *)(a1 + *(int *)(result + 40));
  v6 = *v5;
  v7 = *((_BYTE *)v5 + 8);
  v8 = *((unsigned __int8 *)v5 + 9);
  if (v8)
    v6 = 0;
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = (v8 | v7) & 1;
  return result;
}

uint64_t sub_1AD397260(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t result;
  uint64_t v6;

  v3 = *a1;
  v4 = *((_BYTE *)a1 + 8);
  result = type metadata accessor for SecureCloudUpgradeMessageProtobuf(0);
  v6 = a2 + *(int *)(result + 40);
  *(_QWORD *)v6 = v3;
  *(_BYTE *)(v6 + 8) = v4;
  *(_BYTE *)(v6 + 9) = 0;
  return result;
}

uint64_t sub_1AD3972A8@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  return keypath_get_23Tm(a1, type metadata accessor for SecureCloudUpgradeMessageProtobuf, a2);
}

uint64_t keypath_get_23Tm@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X3>, _DWORD *a3@<X8>)
{
  uint64_t result;
  int *v6;
  int v7;

  result = a2(0);
  v6 = (int *)(a1 + *(int *)(result + 44));
  if (*((_BYTE *)v6 + 4))
    v7 = 0;
  else
    v7 = *v6;
  *a3 = v7;
  return result;
}

uint64_t sub_1AD3972F8(int *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_24Tm(a1, a2, a3, a4, type metadata accessor for SecureCloudUpgradeMessageProtobuf);
}

uint64_t keypath_set_24Tm(int *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  int v6;
  uint64_t result;
  uint64_t v8;

  v6 = *a1;
  result = a5(0);
  v8 = a2 + *(int *)(result + 44);
  *(_DWORD *)v8 = v6;
  *(_BYTE *)(v8 + 4) = 0;
  return result;
}

uint64_t sub_1AD39733C@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  return keypath_getTm_0(a1, type metadata accessor for SecureCloudWithdrawRequestProtobuf, a2);
}

uint64_t sub_1AD397348(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm_1(a1, a2, a3, a4, type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t sub_1AD397354@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD38F170(a1, type metadata accessor for SecureCloudWithdrawRequestProtobuf, a2);
}

uint64_t sub_1AD397370(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD38F1C0(a1, a2, a3, a4, type metadata accessor for SecureCloudWithdrawRequestProtobuf);
}

uint64_t *sub_1AD39738C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int *v25;
  uint64_t v26;
  unsigned int (*v27)(char *, uint64_t, int *);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t *v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  void (*v50)(char *, _QWORD, uint64_t, int *);
  uint64_t v51;
  char *v52;
  char *v53;
  void (*v55)(uint64_t *, uint64_t *);
  uint64_t v56;
  uint64_t v57;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v30 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v30 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    v55 = *(void (**)(uint64_t *, uint64_t *))(*(_QWORD *)(v7 - 8) + 16);
    v56 = v7;
    v55(a1, a2);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (uint64_t *)((char *)a1 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (uint64_t *)((char *)a1 + v16);
    v21 = (uint64_t *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[9];
    __dst = (char *)a1 + v23;
    v24 = (char *)a2 + v23;
    v25 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
    v26 = *((_QWORD *)v25 - 1);
    v27 = *(unsigned int (**)(char *, uint64_t, int *))(v26 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v28 = v24;
    swift_bridgeObjectRetain();
    if (v27(v24, 1, v25))
    {
      v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
      memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
    }
    else
    {
      ((void (*)(char *, char *, uint64_t))v55)(__dst, v24, v56);
      v31 = v25[5];
      v32 = &__dst[v31];
      v33 = (uint64_t *)&v24[v31];
      v34 = v33[1];
      v57 = v26;
      if (v34 >> 60 == 15)
      {
        *(_OWORD *)v32 = *(_OWORD *)v33;
      }
      else
      {
        v35 = *v33;
        sub_1AD0040A0(*v33, v34);
        *(_QWORD *)v32 = v35;
        *((_QWORD *)v32 + 1) = v34;
      }
      v36 = v25[6];
      v37 = &__dst[v36];
      v38 = &v28[v36];
      v39 = *((_QWORD *)v38 + 1);
      if (v39 >> 60 == 15)
      {
        *(_OWORD *)v37 = *(_OWORD *)v38;
      }
      else
      {
        v40 = *(_QWORD *)v38;
        sub_1AD0040A0(*(_QWORD *)v38, *((_QWORD *)v38 + 1));
        *(_QWORD *)v37 = v40;
        *((_QWORD *)v37 + 1) = v39;
      }
      v41 = v25[7];
      v42 = &__dst[v41];
      v43 = &v28[v41];
      v44 = *((_QWORD *)v43 + 1);
      if (v44 >> 60 == 15)
      {
        *(_OWORD *)v42 = *(_OWORD *)v43;
      }
      else
      {
        v45 = *(_QWORD *)v43;
        sub_1AD0040A0(*(_QWORD *)v43, *((_QWORD *)v43 + 1));
        *(_QWORD *)v42 = v45;
        *((_QWORD *)v42 + 1) = v44;
      }
      v46 = v25[8];
      v47 = &__dst[v46];
      v48 = &v28[v46];
      v49 = *((_QWORD *)v48 + 1);
      *(_QWORD *)v47 = *(_QWORD *)v48;
      *((_QWORD *)v47 + 1) = v49;
      v50 = *(void (**)(char *, _QWORD, uint64_t, int *))(v57 + 56);
      swift_bridgeObjectRetain();
      v50(__dst, 0, 1, v25);
    }
    v51 = a3[10];
    v52 = (char *)a1 + v51;
    v53 = (char *)a2 + v51;
    *(_DWORD *)v52 = *(_DWORD *)v53;
    v52[4] = v53[4];
  }
  return a1;
}

uint64_t sub_1AD397610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int *v7;
  uint64_t result;
  uint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;

  v4 = sub_1AD63B24C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 36);
  v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    v9 = (uint64_t *)(v6 + v7[5]);
    v10 = v9[1];
    if (v10 >> 60 != 15)
      sub_1AD00412C(*v9, v10);
    v11 = (uint64_t *)(v6 + v7[6]);
    v12 = v11[1];
    if (v12 >> 60 != 15)
      sub_1AD00412C(*v11, v12);
    v13 = (uint64_t *)(v6 + v7[7]);
    v14 = v13[1];
    if (v14 >> 60 != 15)
      sub_1AD00412C(*v13, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD397740(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int *v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, int *);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, _QWORD, uint64_t, int *);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v52)(uint64_t, uint64_t, uint64_t);
  char *__dst;
  int *v54;

  v6 = sub_1AD63B24C();
  v52 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v52(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)(a1 + v15);
  v20 = (_QWORD *)(a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[9];
  __dst = (char *)(a1 + v22);
  v54 = a3;
  v23 = (char *)(a2 + v22);
  v24 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v25 = *((_QWORD *)v24 - 1);
  v26 = *(unsigned int (**)(char *, uint64_t, int *))(v25 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26(v23, 1, v24))
  {
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
  }
  else
  {
    v52((uint64_t)__dst, (uint64_t)v23, v6);
    v28 = v24[5];
    v29 = &__dst[v28];
    v30 = &v23[v28];
    v31 = *((_QWORD *)v30 + 1);
    if (v31 >> 60 == 15)
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
    }
    else
    {
      v32 = *(_QWORD *)v30;
      sub_1AD0040A0(*(_QWORD *)v30, *((_QWORD *)v30 + 1));
      *(_QWORD *)v29 = v32;
      *((_QWORD *)v29 + 1) = v31;
    }
    v33 = v24[6];
    v34 = &__dst[v33];
    v35 = &v23[v33];
    v36 = *((_QWORD *)v35 + 1);
    if (v36 >> 60 == 15)
    {
      *(_OWORD *)v34 = *(_OWORD *)v35;
    }
    else
    {
      v37 = *(_QWORD *)v35;
      sub_1AD0040A0(*(_QWORD *)v35, *((_QWORD *)v35 + 1));
      *(_QWORD *)v34 = v37;
      *((_QWORD *)v34 + 1) = v36;
    }
    v38 = v24[7];
    v39 = &__dst[v38];
    v40 = &v23[v38];
    v41 = *((_QWORD *)v40 + 1);
    if (v41 >> 60 == 15)
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
    }
    else
    {
      v42 = *(_QWORD *)v40;
      sub_1AD0040A0(*(_QWORD *)v40, *((_QWORD *)v40 + 1));
      *(_QWORD *)v39 = v42;
      *((_QWORD *)v39 + 1) = v41;
    }
    v43 = v24[8];
    v44 = &__dst[v43];
    v45 = &v23[v43];
    v46 = *((_QWORD *)v45 + 1);
    *(_QWORD *)v44 = *(_QWORD *)v45;
    *((_QWORD *)v44 + 1) = v46;
    v47 = *(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56);
    swift_bridgeObjectRetain();
    v47(__dst, 0, 1, v24);
  }
  v48 = v54[10];
  v49 = a1 + v48;
  v50 = a2 + v48;
  *(_DWORD *)v49 = *(_DWORD *)v50;
  *(_BYTE *)(v49 + 4) = *(_BYTE *)(v50 + 4);
  return a1;
}

uint64_t sub_1AD39799C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  int *v25;
  uint64_t (*v26)(char *, uint64_t, int *);
  char *v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  unint64_t v32;
  uint64_t v33;
  int *v34;
  char *v35;
  uint64_t v36;
  uint64_t *v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  void (*v55)(char *, _QWORD, uint64_t, int *);
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  uint64_t *v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  int *v80;
  int v81;
  uint64_t v83;
  int *v84;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = *(_BYTE *)(v11 + 8);
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = v12;
  v13 = a3[6];
  v14 = (_QWORD *)(a1 + v13);
  v15 = (_QWORD *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = a3[7];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (_QWORD *)(a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v84 = a3;
  v22 = a3[9];
  v23 = (char *)(a1 + v22);
  v24 = (char *)(a2 + v22);
  v25 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v83 = *((_QWORD *)v25 - 1);
  v26 = *(uint64_t (**)(char *, uint64_t, int *))(v83 + 48);
  v27 = v23;
  LODWORD(v23) = v26(v23, 1, v25);
  v28 = v26(v24, 1, v25);
  if (!(_DWORD)v23)
  {
    if (v28)
    {
      sub_1AD38EC90((uint64_t)v27);
      goto LABEL_7;
    }
    v35 = v24;
    v8((uint64_t)v27, (uint64_t)v24, v6);
    v36 = v25[5];
    v37 = (uint64_t *)&v27[v36];
    v38 = (uint64_t *)&v24[v36];
    v39 = *(_QWORD *)&v24[v36 + 8];
    if (*(_QWORD *)&v27[v36 + 8] >> 60 == 15)
    {
      v34 = v84;
      if (v39 >> 60 != 15)
      {
        v40 = *v38;
        sub_1AD0040A0(*v38, v39);
        *v37 = v40;
        v37[1] = v39;
        goto LABEL_23;
      }
    }
    else
    {
      v34 = v84;
      if (v39 >> 60 != 15)
      {
        v56 = *v38;
        sub_1AD0040A0(*v38, v39);
        v57 = *v37;
        v58 = v37[1];
        *v37 = v56;
        v37[1] = v39;
        sub_1AD00412C(v57, v58);
LABEL_23:
        v59 = v25[6];
        v60 = (uint64_t *)&v27[v59];
        v61 = (uint64_t *)&v35[v59];
        v62 = *(_QWORD *)&v35[v59 + 8];
        if (*(_QWORD *)&v27[v59 + 8] >> 60 == 15)
        {
          if (v62 >> 60 != 15)
          {
            v63 = *v61;
            sub_1AD0040A0(*v61, v62);
            *v60 = v63;
            v60[1] = v62;
            goto LABEL_30;
          }
        }
        else
        {
          if (v62 >> 60 != 15)
          {
            v64 = *v61;
            sub_1AD0040A0(*v61, v62);
            v65 = *v60;
            v66 = v60[1];
            *v60 = v64;
            v60[1] = v62;
            sub_1AD00412C(v65, v66);
LABEL_30:
            v67 = v25[7];
            v68 = (uint64_t *)&v27[v67];
            v69 = (uint64_t *)&v35[v67];
            v70 = *(_QWORD *)&v35[v67 + 8];
            if (*(_QWORD *)&v27[v67 + 8] >> 60 == 15)
            {
              if (v70 >> 60 != 15)
              {
                v71 = *v69;
                sub_1AD0040A0(*v69, v70);
                *v68 = v71;
                v68[1] = v70;
LABEL_37:
                v75 = v25[8];
                v76 = &v27[v75];
                v77 = &v35[v75];
                *(_QWORD *)v76 = *(_QWORD *)v77;
                *((_QWORD *)v76 + 1) = *((_QWORD *)v77 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
            }
            else
            {
              if (v70 >> 60 != 15)
              {
                v72 = *v69;
                sub_1AD0040A0(*v69, v70);
                v73 = *v68;
                v74 = v68[1];
                *v68 = v72;
                v68[1] = v70;
                sub_1AD00412C(v73, v74);
                goto LABEL_37;
              }
              sub_1AD007EC0((uint64_t)v68);
            }
            *(_OWORD *)v68 = *(_OWORD *)v69;
            goto LABEL_37;
          }
          sub_1AD007EC0((uint64_t)v60);
        }
        *(_OWORD *)v60 = *(_OWORD *)v61;
        goto LABEL_30;
      }
      sub_1AD007EC0((uint64_t)v37);
    }
    *(_OWORD *)v37 = *(_OWORD *)v38;
    goto LABEL_23;
  }
  if (v28)
  {
LABEL_7:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    memcpy(v27, v24, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    v34 = v84;
    goto LABEL_38;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v27, v24, v6);
  v29 = v25[5];
  v30 = &v27[v29];
  v31 = &v24[v29];
  v32 = *((_QWORD *)v31 + 1);
  if (v32 >> 60 == 15)
  {
    *(_OWORD *)v30 = *(_OWORD *)v31;
  }
  else
  {
    v41 = *(_QWORD *)v31;
    sub_1AD0040A0(*(_QWORD *)v31, *((_QWORD *)v31 + 1));
    *(_QWORD *)v30 = v41;
    *((_QWORD *)v30 + 1) = v32;
  }
  v42 = v25[6];
  v43 = &v27[v42];
  v44 = &v24[v42];
  v45 = *((_QWORD *)v44 + 1);
  if (v45 >> 60 == 15)
  {
    *(_OWORD *)v43 = *(_OWORD *)v44;
  }
  else
  {
    v46 = *(_QWORD *)v44;
    sub_1AD0040A0(*(_QWORD *)v44, *((_QWORD *)v44 + 1));
    *(_QWORD *)v43 = v46;
    *((_QWORD *)v43 + 1) = v45;
  }
  v34 = v84;
  v47 = v25[7];
  v48 = &v27[v47];
  v49 = &v24[v47];
  v50 = *((_QWORD *)v49 + 1);
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)v48 = *(_OWORD *)v49;
  }
  else
  {
    v51 = *(_QWORD *)v49;
    sub_1AD0040A0(*(_QWORD *)v49, *((_QWORD *)v49 + 1));
    *(_QWORD *)v48 = v51;
    *((_QWORD *)v48 + 1) = v50;
  }
  v52 = v25[8];
  v53 = &v27[v52];
  v54 = &v24[v52];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *((_QWORD *)v53 + 1) = *((_QWORD *)v54 + 1);
  v55 = *(void (**)(char *, _QWORD, uint64_t, int *))(v83 + 56);
  swift_bridgeObjectRetain();
  v55(v27, 0, 1, v25);
LABEL_38:
  v78 = v34[10];
  v79 = a1 + v78;
  v80 = (int *)(a2 + v78);
  v81 = *v80;
  *(_BYTE *)(v79 + 4) = *((_BYTE *)v80 + 4);
  *(_DWORD *)v79 = v81;
  return a1;
}

uint64_t sub_1AD397E38(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v6 = sub_1AD63B24C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[9];
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  v16 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v17 = *((_QWORD *)v16 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v17 + 48))(v15, 1, v16))
  {
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v14, (uint64_t)v15, v6);
    *(_OWORD *)&v14[v16[5]] = *(_OWORD *)&v15[v16[5]];
    *(_OWORD *)&v14[v16[6]] = *(_OWORD *)&v15[v16[6]];
    *(_OWORD *)&v14[v16[7]] = *(_OWORD *)&v15[v16[7]];
    *(_OWORD *)&v14[v16[8]] = *(_OWORD *)&v15[v16[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v17 + 56))(v14, 0, 1, v16);
  }
  v19 = a3[10];
  v20 = a1 + v19;
  v21 = a2 + v19;
  *(_DWORD *)v20 = *(_DWORD *)v21;
  *(_BYTE *)(v20 + 4) = *(_BYTE *)(v21 + 4);
  return a1;
}

uint64_t sub_1AD397FA8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  uint64_t (*v30)(char *, uint64_t, int *);
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t *v51;
  uint64_t *v52;
  unint64_t v53;
  unint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t, uint64_t);

  v6 = sub_1AD63B24C();
  v61 = *(_QWORD *)(v6 - 8);
  v62 = *(void (**)(uint64_t, uint64_t, uint64_t))(v61 + 40);
  v62(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v29 = *((_QWORD *)v28 - 1);
  v30 = *(uint64_t (**)(char *, uint64_t, int *))(v29 + 48);
  v31 = v30(v26, 1, v28);
  v32 = v30(v27, 1, v28);
  if (!v31)
  {
    if (v32)
    {
      sub_1AD38EC90((uint64_t)v26);
      goto LABEL_6;
    }
    v62((uint64_t)v26, (uint64_t)v27, v6);
    v38 = v28[5];
    v39 = (uint64_t)&v26[v38];
    v40 = &v27[v38];
    v41 = *(_QWORD *)&v26[v38 + 8];
    if (v41 >> 60 == 15)
    {
      *(_OWORD *)v39 = *(_OWORD *)v40;
    }
    else
    {
      v42 = *((_QWORD *)v40 + 1);
      if (v42 >> 60 == 15)
      {
        sub_1AD007EC0(v39);
        *(_OWORD *)v39 = *(_OWORD *)v40;
      }
      else
      {
        v43 = *(_QWORD *)v39;
        *(_QWORD *)v39 = *(_QWORD *)v40;
        *(_QWORD *)(v39 + 8) = v42;
        sub_1AD00412C(v43, v41);
      }
    }
    v44 = v28[6];
    v45 = (uint64_t *)&v26[v44];
    v46 = (uint64_t *)&v27[v44];
    v47 = *(_QWORD *)&v26[v44 + 8];
    if (v47 >> 60 != 15)
    {
      v48 = v46[1];
      if (v48 >> 60 != 15)
      {
        v49 = *v45;
        *v45 = *v46;
        v45[1] = v48;
        sub_1AD00412C(v49, v47);
LABEL_18:
        v50 = v28[7];
        v51 = (uint64_t *)&v26[v50];
        v52 = (uint64_t *)&v27[v50];
        v53 = *(_QWORD *)&v26[v50 + 8];
        if (v53 >> 60 != 15)
        {
          v54 = v52[1];
          if (v54 >> 60 != 15)
          {
            v55 = *v51;
            *v51 = *v52;
            v51[1] = v54;
            sub_1AD00412C(v55, v53);
            goto LABEL_23;
          }
          sub_1AD007EC0((uint64_t)v51);
        }
        *(_OWORD *)v51 = *(_OWORD *)v52;
LABEL_23:
        v56 = v28[8];
        v57 = &v26[v56];
        v58 = &v27[v56];
        v60 = *(_QWORD *)v58;
        v59 = *((_QWORD *)v58 + 1);
        *(_QWORD *)v57 = v60;
        *((_QWORD *)v57 + 1) = v59;
        swift_bridgeObjectRelease();
        goto LABEL_7;
      }
      sub_1AD007EC0((uint64_t)v45);
    }
    *(_OWORD *)v45 = *(_OWORD *)v46;
    goto LABEL_18;
  }
  if (v32)
  {
LABEL_6:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v26, v27, v6);
  *(_OWORD *)&v26[v28[5]] = *(_OWORD *)&v27[v28[5]];
  *(_OWORD *)&v26[v28[6]] = *(_OWORD *)&v27[v28[6]];
  *(_OWORD *)&v26[v28[7]] = *(_OWORD *)&v27[v28[7]];
  *(_OWORD *)&v26[v28[8]] = *(_OWORD *)&v27[v28[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v29 + 56))(v26, 0, 1, v28);
LABEL_7:
  v34 = a3[10];
  v35 = a1 + v34;
  v36 = a2 + v34;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t sub_1AD3982D4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3982E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v11);
  }
}

uint64_t sub_1AD39839C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3983A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    v12 = a1 + *(int *)(a4 + 36);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1AD398454()
{
  unint64_t v0;
  unint64_t v1;

  sub_1AD63B24C();
  if (v0 <= 0x3F)
  {
    sub_1AD3984F8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1AD3984F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EECDB760)
  {
    type metadata accessor for SecureCloudInviteUserInfoProtobuf(255);
    v0 = sub_1AD63BC48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EECDB760);
  }
}

uint64_t *sub_1AD39854C(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  char *v27;
  int *v28;
  uint64_t v29;
  unsigned int (*v30)(char *, uint64_t, int *);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, _QWORD, uint64_t, int *);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v58;
  void (*v59)(uint64_t *, uint64_t *);
  uint64_t v60;
  char *__dst;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v32 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v32 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    v59 = *(void (**)(uint64_t *, uint64_t *))(*(_QWORD *)(v7 - 8) + 16);
    v60 = v7;
    v59(a1, a2);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (uint64_t *)((char *)a1 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (uint64_t *)((char *)a1 + v16);
    v21 = (uint64_t *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[9];
    v24 = a3[10];
    v25 = (char *)a1 + v23;
    v26 = (char *)a2 + v23;
    *(_QWORD *)v25 = *(_QWORD *)v26;
    *((_WORD *)v25 + 4) = *((_WORD *)v26 + 4);
    __dst = (char *)a1 + v24;
    v27 = (char *)a2 + v24;
    v28 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
    v29 = *((_QWORD *)v28 - 1);
    v30 = *(unsigned int (**)(char *, uint64_t, int *))(v29 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30(v27, 1, v28))
    {
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
      memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
    }
    else
    {
      v58 = v29;
      ((void (*)(char *, char *, uint64_t))v59)(__dst, v27, v60);
      v33 = v28[5];
      v34 = &__dst[v33];
      v35 = &v27[v33];
      v36 = *((_QWORD *)v35 + 1);
      v37 = v27;
      if (v36 >> 60 == 15)
      {
        *(_OWORD *)v34 = *(_OWORD *)v35;
      }
      else
      {
        v38 = *(_QWORD *)v35;
        sub_1AD0040A0(*(_QWORD *)v35, *((_QWORD *)v35 + 1));
        *(_QWORD *)v34 = v38;
        *((_QWORD *)v34 + 1) = v36;
      }
      v39 = v28[6];
      v40 = &__dst[v39];
      v41 = &v27[v39];
      v42 = *((_QWORD *)v41 + 1);
      if (v42 >> 60 == 15)
      {
        *(_OWORD *)v40 = *(_OWORD *)v41;
      }
      else
      {
        v43 = *(_QWORD *)v41;
        sub_1AD0040A0(*(_QWORD *)v41, *((_QWORD *)v41 + 1));
        *(_QWORD *)v40 = v43;
        *((_QWORD *)v40 + 1) = v42;
      }
      v44 = v28[7];
      v45 = &__dst[v44];
      v46 = &v37[v44];
      v47 = *((_QWORD *)v46 + 1);
      if (v47 >> 60 == 15)
      {
        *(_OWORD *)v45 = *(_OWORD *)v46;
      }
      else
      {
        v48 = *(_QWORD *)v46;
        sub_1AD0040A0(*(_QWORD *)v46, *((_QWORD *)v46 + 1));
        *(_QWORD *)v45 = v48;
        *((_QWORD *)v45 + 1) = v47;
      }
      v49 = v28[8];
      v50 = &__dst[v49];
      v51 = &v37[v49];
      v52 = *((_QWORD *)v51 + 1);
      *(_QWORD *)v50 = *(_QWORD *)v51;
      *((_QWORD *)v50 + 1) = v52;
      v53 = *(void (**)(char *, _QWORD, uint64_t, int *))(v58 + 56);
      swift_bridgeObjectRetain();
      v53(__dst, 0, 1, v28);
    }
    v54 = a3[11];
    v55 = (char *)a1 + v54;
    v56 = (char *)a2 + v54;
    *(_DWORD *)v55 = *(_DWORD *)v56;
    v55[4] = v56[4];
  }
  return a1;
}

uint64_t sub_1AD3987E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  int *v7;
  uint64_t result;
  uint64_t *v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;

  v4 = sub_1AD63B24C();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v6 = a1 + *(int *)(a2 + 40);
  v7 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v7 - 1) + 48))(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    v9 = (uint64_t *)(v6 + v7[5]);
    v10 = v9[1];
    if (v10 >> 60 != 15)
      sub_1AD00412C(*v9, v10);
    v11 = (uint64_t *)(v6 + v7[6]);
    v12 = v11[1];
    if (v12 >> 60 != 15)
      sub_1AD00412C(*v11, v12);
    v13 = (uint64_t *)(v6 + v7[7]);
    v14 = v13[1];
    if (v14 >> 60 != 15)
      sub_1AD00412C(*v13, v14);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1AD398918(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  int *v27;
  uint64_t v28;
  unsigned int (*v29)(char *, uint64_t, int *);
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  unint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, _QWORD, uint64_t, int *);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  void (*v57)(uint64_t, uint64_t);
  uint64_t v58;
  char *__dst;

  v6 = sub_1AD63B24C();
  v57 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16);
  v58 = v6;
  v57(a1, a2);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)(a1 + v15);
  v20 = (_QWORD *)(a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[9];
  v23 = a3[10];
  v24 = a1 + v22;
  v25 = a2 + v22;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_WORD *)(v24 + 8) = *(_WORD *)(v25 + 8);
  __dst = (char *)(a1 + v23);
  v26 = (char *)(a2 + v23);
  v27 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v28 = *((_QWORD *)v27 - 1);
  v29 = *(unsigned int (**)(char *, uint64_t, int *))(v28 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29(v26, 1, v27))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    memcpy(__dst, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v56 = v28;
    ((void (*)(char *, char *, uint64_t))v57)(__dst, v26, v58);
    v31 = v27[5];
    v32 = &__dst[v31];
    v33 = &v26[v31];
    v34 = *((_QWORD *)v33 + 1);
    v35 = v26;
    if (v34 >> 60 == 15)
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
    }
    else
    {
      v36 = *(_QWORD *)v33;
      sub_1AD0040A0(*(_QWORD *)v33, *((_QWORD *)v33 + 1));
      *(_QWORD *)v32 = v36;
      *((_QWORD *)v32 + 1) = v34;
    }
    v37 = v27[6];
    v38 = &__dst[v37];
    v39 = &v26[v37];
    v40 = *((_QWORD *)v39 + 1);
    if (v40 >> 60 == 15)
    {
      *(_OWORD *)v38 = *(_OWORD *)v39;
    }
    else
    {
      v41 = *(_QWORD *)v39;
      sub_1AD0040A0(*(_QWORD *)v39, *((_QWORD *)v39 + 1));
      *(_QWORD *)v38 = v41;
      *((_QWORD *)v38 + 1) = v40;
    }
    v42 = v27[7];
    v43 = &__dst[v42];
    v44 = &v35[v42];
    v45 = *((_QWORD *)v44 + 1);
    if (v45 >> 60 == 15)
    {
      *(_OWORD *)v43 = *(_OWORD *)v44;
    }
    else
    {
      v46 = *(_QWORD *)v44;
      sub_1AD0040A0(*(_QWORD *)v44, *((_QWORD *)v44 + 1));
      *(_QWORD *)v43 = v46;
      *((_QWORD *)v43 + 1) = v45;
    }
    v47 = v27[8];
    v48 = &__dst[v47];
    v49 = &v35[v47];
    v50 = *((_QWORD *)v49 + 1);
    *(_QWORD *)v48 = *(_QWORD *)v49;
    *((_QWORD *)v48 + 1) = v50;
    v51 = *(void (**)(char *, _QWORD, uint64_t, int *))(v56 + 56);
    swift_bridgeObjectRetain();
    v51(__dst, 0, 1, v27);
  }
  v52 = a3[11];
  v53 = a1 + v52;
  v54 = a2 + v52;
  *(_DWORD *)v53 = *(_DWORD *)v54;
  *(_BYTE *)(v53 + 4) = *(_BYTE *)(v54 + 4);
  return a1;
}

uint64_t sub_1AD398B88(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t (*v29)(char *, uint64_t, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  int *v33;
  int v34;
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  unint64_t v39;
  uint64_t v40;
  int *v41;
  char *v42;
  int *v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  char *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  char *v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  void (*v63)(char *, _QWORD, uint64_t, int *);
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t *v68;
  uint64_t *v69;
  unint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t *v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  int v89;
  uint64_t v91;
  uint64_t v92;
  int *v93;

  v6 = sub_1AD63B24C();
  v92 = *(_QWORD *)(v6 - 8);
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v92 + 24);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = *(_BYTE *)(v10 + 8);
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = v11;
  v12 = a3[6];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  *v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (_QWORD *)(a2 + v15);
  *v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v18 = a3[8];
  v19 = (_QWORD *)(a1 + v18);
  v20 = (_QWORD *)(a2 + v18);
  *v19 = *v20;
  v19[1] = v20[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v21 = a3[9];
  v22 = a1 + v21;
  v23 = (uint64_t *)(a2 + v21);
  v24 = *v23;
  *(_WORD *)(v22 + 8) = *((_WORD *)v23 + 4);
  *(_QWORD *)v22 = v24;
  v93 = a3;
  v25 = a3[10];
  v26 = (char *)(a1 + v25);
  v27 = (char *)(a2 + v25);
  v28 = type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v91 = *(_QWORD *)(v28 - 8);
  v29 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v91 + 48);
  v30 = v26;
  LODWORD(v26) = v29(v26, 1, v28);
  v31 = v27;
  v32 = v27;
  v33 = (int *)v28;
  v34 = v29(v32, 1, v28);
  if (!(_DWORD)v26)
  {
    if (v34)
    {
      sub_1AD38EC90((uint64_t)v30);
      goto LABEL_7;
    }
    v42 = v31;
    v7((uint64_t)v30, (uint64_t)v31, v6);
    v43 = (int *)v28;
    v44 = *(int *)(v28 + 20);
    v45 = (uint64_t *)&v30[v44];
    v46 = (uint64_t *)&v31[v44];
    v47 = *(_QWORD *)&v31[v44 + 8];
    if (*(_QWORD *)&v30[v44 + 8] >> 60 == 15)
    {
      v41 = v93;
      if (v47 >> 60 != 15)
      {
        v48 = *v46;
        sub_1AD0040A0(*v46, v47);
        *v45 = v48;
        v45[1] = v47;
        goto LABEL_23;
      }
    }
    else
    {
      v41 = v93;
      if (v47 >> 60 != 15)
      {
        v64 = *v46;
        sub_1AD0040A0(*v46, v47);
        v65 = *v45;
        v66 = v45[1];
        *v45 = v64;
        v45[1] = v47;
        sub_1AD00412C(v65, v66);
LABEL_23:
        v67 = v43[6];
        v68 = (uint64_t *)&v30[v67];
        v69 = (uint64_t *)&v42[v67];
        v70 = *(_QWORD *)&v42[v67 + 8];
        if (*(_QWORD *)&v30[v67 + 8] >> 60 == 15)
        {
          if (v70 >> 60 != 15)
          {
            v71 = *v69;
            sub_1AD0040A0(*v69, v70);
            *v68 = v71;
            v68[1] = v70;
            goto LABEL_30;
          }
        }
        else
        {
          if (v70 >> 60 != 15)
          {
            v72 = *v69;
            sub_1AD0040A0(*v69, v70);
            v73 = *v68;
            v74 = v68[1];
            *v68 = v72;
            v68[1] = v70;
            sub_1AD00412C(v73, v74);
LABEL_30:
            v75 = v43[7];
            v76 = (uint64_t *)&v30[v75];
            v77 = (uint64_t *)&v42[v75];
            v78 = *(_QWORD *)&v42[v75 + 8];
            if (*(_QWORD *)&v30[v75 + 8] >> 60 == 15)
            {
              if (v78 >> 60 != 15)
              {
                v79 = *v77;
                sub_1AD0040A0(*v77, v78);
                *v76 = v79;
                v76[1] = v78;
LABEL_37:
                v83 = v43[8];
                v84 = &v30[v83];
                v85 = &v42[v83];
                *(_QWORD *)v84 = *(_QWORD *)v85;
                *((_QWORD *)v84 + 1) = *((_QWORD *)v85 + 1);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_38;
              }
            }
            else
            {
              if (v78 >> 60 != 15)
              {
                v80 = *v77;
                sub_1AD0040A0(*v77, v78);
                v81 = *v76;
                v82 = v76[1];
                *v76 = v80;
                v76[1] = v78;
                sub_1AD00412C(v81, v82);
                goto LABEL_37;
              }
              sub_1AD007EC0((uint64_t)v76);
            }
            *(_OWORD *)v76 = *(_OWORD *)v77;
            goto LABEL_37;
          }
          sub_1AD007EC0((uint64_t)v68);
        }
        *(_OWORD *)v68 = *(_OWORD *)v69;
        goto LABEL_30;
      }
      sub_1AD007EC0((uint64_t)v45);
    }
    *(_OWORD *)v45 = *(_OWORD *)v46;
    goto LABEL_23;
  }
  if (v34)
  {
LABEL_7:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    v41 = v93;
    goto LABEL_38;
  }
  v35 = v31;
  (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v30, v31, v6);
  v36 = *(int *)(v28 + 20);
  v37 = &v30[v36];
  v38 = &v31[v36];
  v39 = *((_QWORD *)v38 + 1);
  if (v39 >> 60 == 15)
  {
    *(_OWORD *)v37 = *(_OWORD *)v38;
  }
  else
  {
    v49 = *(_QWORD *)v38;
    sub_1AD0040A0(*(_QWORD *)v38, *((_QWORD *)v38 + 1));
    *(_QWORD *)v37 = v49;
    *((_QWORD *)v37 + 1) = v39;
  }
  v41 = v93;
  v50 = v33[6];
  v51 = &v30[v50];
  v52 = &v35[v50];
  v53 = *((_QWORD *)v52 + 1);
  if (v53 >> 60 == 15)
  {
    *(_OWORD *)v51 = *(_OWORD *)v52;
  }
  else
  {
    v54 = *(_QWORD *)v52;
    sub_1AD0040A0(*(_QWORD *)v52, *((_QWORD *)v52 + 1));
    *(_QWORD *)v51 = v54;
    *((_QWORD *)v51 + 1) = v53;
  }
  v55 = v33[7];
  v56 = &v30[v55];
  v57 = &v35[v55];
  v58 = *((_QWORD *)v57 + 1);
  if (v58 >> 60 == 15)
  {
    *(_OWORD *)v56 = *(_OWORD *)v57;
  }
  else
  {
    v59 = *(_QWORD *)v57;
    sub_1AD0040A0(*(_QWORD *)v57, *((_QWORD *)v57 + 1));
    *(_QWORD *)v56 = v59;
    *((_QWORD *)v56 + 1) = v58;
  }
  v60 = v33[8];
  v61 = &v30[v60];
  v62 = &v35[v60];
  *(_QWORD *)v61 = *(_QWORD *)v62;
  *((_QWORD *)v61 + 1) = *((_QWORD *)v62 + 1);
  v63 = *(void (**)(char *, _QWORD, uint64_t, int *))(v91 + 56);
  swift_bridgeObjectRetain();
  v63(v30, 0, 1, v33);
LABEL_38:
  v86 = v41[11];
  v87 = a1 + v86;
  v88 = (int *)(a2 + v86);
  v89 = *v88;
  *(_BYTE *)(v87 + 4) = *((_BYTE *)v88 + 4);
  *(_DWORD *)v87 = v89;
  return a1;
}

uint64_t sub_1AD399050(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  int *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v6 = sub_1AD63B24C();
  v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  v8 = a3[5];
  v9 = a3[6];
  v10 = a1 + v8;
  v11 = a2 + v8;
  *(_QWORD *)v10 = *(_QWORD *)v11;
  *(_BYTE *)(v10 + 8) = *(_BYTE *)(v11 + 8);
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  v12 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v12) = *(_OWORD *)(a2 + v12);
  v13 = a3[9];
  v14 = a3[10];
  v15 = a1 + v13;
  v16 = a2 + v13;
  *(_WORD *)(v15 + 8) = *(_WORD *)(v16 + 8);
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v17 = (char *)(a1 + v14);
  v18 = (char *)(a2 + v14);
  v19 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v20 = *((_QWORD *)v19 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v7((uint64_t)v17, (uint64_t)v18, v6);
    *(_OWORD *)&v17[v19[5]] = *(_OWORD *)&v18[v19[5]];
    *(_OWORD *)&v17[v19[6]] = *(_OWORD *)&v18[v19[6]];
    *(_OWORD *)&v17[v19[7]] = *(_OWORD *)&v18[v19[7]];
    *(_OWORD *)&v17[v19[8]] = *(_OWORD *)&v18[v19[8]];
    (*(void (**)(char *, _QWORD, uint64_t, int *))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = a3[11];
  v23 = a1 + v22;
  v24 = a2 + v22;
  *(_DWORD *)v23 = *(_DWORD *)v24;
  *(_BYTE *)(v23 + 4) = *(_BYTE *)(v24 + 4);
  return a1;
}

uint64_t sub_1AD3991D8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int *v31;
  uint64_t v32;
  uint64_t (*v33)(char *, uint64_t, int *);
  char *v34;
  int v35;
  int v36;
  uint64_t v37;
  int *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t *v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t *v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  void (*v67)(uint64_t, uint64_t, uint64_t);
  int *v68;

  v6 = sub_1AD63B24C();
  v66 = *(_QWORD *)(v6 - 8);
  v67 = *(void (**)(uint64_t, uint64_t, uint64_t))(v66 + 40);
  v67(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  v15 = a3[7];
  v16 = (_QWORD *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = a3[10];
  v68 = a3;
  v27 = a1 + v25;
  v28 = a2 + v25;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_WORD *)(v27 + 8) = *(_WORD *)(v28 + 8);
  v29 = (char *)(a1 + v26);
  v30 = (char *)(a2 + v26);
  v31 = (int *)type metadata accessor for SecureCloudInviteUserInfoProtobuf(0);
  v32 = *((_QWORD *)v31 - 1);
  v33 = *(uint64_t (**)(char *, uint64_t, int *))(v32 + 48);
  v34 = v29;
  v35 = v33(v29, 1, v31);
  v36 = v33(v30, 1, v31);
  if (!v35)
  {
    if (v36)
    {
      sub_1AD38EC90((uint64_t)v29);
      goto LABEL_6;
    }
    v67((uint64_t)v29, (uint64_t)v30, v6);
    v43 = v31[5];
    v44 = (uint64_t)&v29[v43];
    v45 = &v30[v43];
    v46 = *(_QWORD *)&v29[v43 + 8];
    if (v46 >> 60 == 15)
    {
      *(_OWORD *)v44 = *(_OWORD *)v45;
      v38 = v68;
    }
    else
    {
      v47 = *((_QWORD *)v45 + 1);
      v38 = v68;
      if (v47 >> 60 == 15)
      {
        sub_1AD007EC0(v44);
        *(_OWORD *)v44 = *(_OWORD *)v45;
      }
      else
      {
        v48 = *(_QWORD *)v44;
        *(_QWORD *)v44 = *(_QWORD *)v45;
        *(_QWORD *)(v44 + 8) = v47;
        sub_1AD00412C(v48, v46);
      }
    }
    v49 = v31[6];
    v50 = (uint64_t *)&v34[v49];
    v51 = (uint64_t *)&v30[v49];
    v52 = *(_QWORD *)&v34[v49 + 8];
    if (v52 >> 60 != 15)
    {
      v53 = v51[1];
      if (v53 >> 60 != 15)
      {
        v54 = *v50;
        *v50 = *v51;
        v50[1] = v53;
        sub_1AD00412C(v54, v52);
LABEL_19:
        v55 = v31[7];
        v56 = (uint64_t *)&v34[v55];
        v57 = (uint64_t *)&v30[v55];
        v58 = *(_QWORD *)&v34[v55 + 8];
        if (v58 >> 60 != 15)
        {
          v59 = v57[1];
          if (v59 >> 60 != 15)
          {
            v60 = *v56;
            *v56 = *v57;
            v56[1] = v59;
            sub_1AD00412C(v60, v58);
            goto LABEL_24;
          }
          sub_1AD007EC0((uint64_t)v56);
        }
        *(_OWORD *)v56 = *(_OWORD *)v57;
LABEL_24:
        v61 = v31[8];
        v62 = &v34[v61];
        v63 = &v30[v61];
        v65 = *(_QWORD *)v63;
        v64 = *((_QWORD *)v63 + 1);
        *(_QWORD *)v62 = v65;
        *((_QWORD *)v62 + 1) = v64;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_1AD007EC0((uint64_t)v50);
    }
    *(_OWORD *)v50 = *(_OWORD *)v51;
    goto LABEL_19;
  }
  if (v36)
  {
LABEL_6:
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v66 + 32))(v29, v30, v6);
  *(_OWORD *)&v29[v31[5]] = *(_OWORD *)&v30[v31[5]];
  *(_OWORD *)&v29[v31[6]] = *(_OWORD *)&v30[v31[6]];
  *(_OWORD *)&v29[v31[7]] = *(_OWORD *)&v30[v31[7]];
  *(_OWORD *)&v29[v31[8]] = *(_OWORD *)&v30[v31[8]];
  (*(void (**)(char *, _QWORD, uint64_t, int *))(v32 + 56))(v29, 0, 1, v31);
LABEL_7:
  v38 = v68;
LABEL_8:
  v39 = v38[11];
  v40 = a1 + v39;
  v41 = a2 + v39;
  *(_DWORD *)v40 = *(_DWORD *)v41;
  *(_BYTE *)(v40 + 4) = *(_BYTE *)(v41 + 4);
  return a1;
}

uint64_t sub_1AD39951C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD399528(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;
  uint64_t v11;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  if ((_DWORD)a2 == 2147483646)
  {
    v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
    if (v9 >= 0xFFFFFFFF)
      LODWORD(v9) = -1;
    v10 = v9 - 1;
    if (v10 < 0)
      v10 = -1;
    return (v10 + 1);
  }
  else
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(a1 + *(int *)(a3 + 40), a2, v11);
  }
}

uint64_t sub_1AD3995E4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3995F0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 2147483646)
    {
      *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
      return result;
    }
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB5B0);
    v12 = a1 + *(int *)(a4 + 40);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1AD39969C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1AD63B24C();
  if (v0 <= 0x3F)
  {
    sub_1AD3984F8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for SecureCloudInviteResponseProtobuf.ProtobufType()
{
  return &type metadata for SecureCloudInviteResponseProtobuf.ProtobufType;
}

uint64_t *sub_1AD399758(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *(_QWORD *)v10;
      sub_1AD0040A0(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
    v14 = a3[6];
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *((_QWORD *)v16 + 1);
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
    }
    else
    {
      v18 = *(_QWORD *)v16;
      sub_1AD0040A0(*(_QWORD *)v16, *((_QWORD *)v16 + 1));
      *(_QWORD *)v15 = v18;
      *((_QWORD *)v15 + 1) = v17;
    }
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = *((_QWORD *)v21 + 1);
    if (v22 >> 60 == 15)
    {
      *(_OWORD *)v20 = *(_OWORD *)v21;
    }
    else
    {
      v23 = *(_QWORD *)v21;
      sub_1AD0040A0(*(_QWORD *)v21, *((_QWORD *)v21 + 1));
      *(_QWORD *)v20 = v23;
      *((_QWORD *)v20 + 1) = v22;
    }
    v24 = a3[8];
    v25 = (uint64_t *)((char *)a1 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD3998A8(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;

  v4 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = (uint64_t *)(a1 + a2[5]);
  v6 = v5[1];
  if (v6 >> 60 != 15)
    sub_1AD00412C(*v5, v6);
  v7 = (uint64_t *)(a1 + a2[6]);
  v8 = v7[1];
  if (v8 >> 60 != 15)
    sub_1AD00412C(*v7, v8);
  v9 = (uint64_t *)(a1 + a2[7]);
  v10 = v9[1];
  if (v10 >> 60 != 15)
    sub_1AD00412C(*v9, v10);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD399950(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_1AD0040A0(*v9, v9[1]);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = v14[1];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
  }
  else
  {
    v16 = *v14;
    sub_1AD0040A0(*v14, v14[1]);
    *(_QWORD *)v13 = v16;
    *(_QWORD *)(v13 + 8) = v15;
  }
  v17 = a3[7];
  v18 = a1 + v17;
  v19 = (uint64_t *)(a2 + v17);
  v20 = v19[1];
  if (v20 >> 60 == 15)
  {
    *(_OWORD *)v18 = *(_OWORD *)v19;
  }
  else
  {
    v21 = *v19;
    sub_1AD0040A0(*v19, v19[1]);
    *(_QWORD *)v18 = v21;
    *(_QWORD *)(v18 + 8) = v20;
  }
  v22 = a3[8];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD399A74(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      v11 = *v9;
      sub_1AD0040A0(v11, v10);
      *v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v8);
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v12 = *v9;
  sub_1AD0040A0(v12, v10);
  v13 = *v8;
  v14 = v8[1];
  *v8 = v12;
  v8[1] = v10;
  sub_1AD00412C(v13, v14);
LABEL_8:
  v15 = a3[6];
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  if (*(_QWORD *)(a1 + v15 + 8) >> 60 == 15)
  {
    if (v18 >> 60 != 15)
    {
      v19 = *v17;
      sub_1AD0040A0(v19, v18);
      *v16 = v19;
      v16[1] = v18;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v16);
LABEL_13:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    goto LABEL_15;
  }
  v20 = *v17;
  sub_1AD0040A0(v20, v18);
  v21 = *v16;
  v22 = v16[1];
  *v16 = v20;
  v16[1] = v18;
  sub_1AD00412C(v21, v22);
LABEL_15:
  v23 = a3[7];
  v24 = (uint64_t *)(a1 + v23);
  v25 = (uint64_t *)(a2 + v23);
  v26 = *(_QWORD *)(a2 + v23 + 8);
  if (*(_QWORD *)(a1 + v23 + 8) >> 60 != 15)
  {
    if (v26 >> 60 != 15)
    {
      v28 = *v25;
      sub_1AD0040A0(v28, v26);
      v29 = *v24;
      v30 = v24[1];
      *v24 = v28;
      v24[1] = v26;
      sub_1AD00412C(v29, v30);
      goto LABEL_22;
    }
    sub_1AD007EC0((uint64_t)v24);
    goto LABEL_20;
  }
  if (v26 >> 60 == 15)
  {
LABEL_20:
    *(_OWORD *)v24 = *(_OWORD *)v25;
    goto LABEL_22;
  }
  v27 = *v25;
  sub_1AD0040A0(v27, v26);
  *v24 = v27;
  v24[1] = v26;
LABEL_22:
  v31 = a3[8];
  v32 = (_QWORD *)(a1 + v31);
  v33 = (_QWORD *)(a2 + v31);
  *v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD399C78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1AD399CF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t *v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 == 15)
    goto LABEL_4;
  v11 = *(_QWORD *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_1AD007EC0(v8);
LABEL_4:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  v12 = *(_QWORD *)v8;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v11;
  sub_1AD00412C(v12, v10);
LABEL_6:
  v13 = a3[6];
  v14 = a1 + v13;
  v15 = a2 + v13;
  v16 = *(_QWORD *)(a1 + v13 + 8);
  if (v16 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)v14 = *(_OWORD *)v15;
    goto LABEL_11;
  }
  v17 = *(_QWORD *)(v15 + 8);
  if (v17 >> 60 == 15)
  {
    sub_1AD007EC0(v14);
    goto LABEL_9;
  }
  v18 = *(_QWORD *)v14;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_QWORD *)(v14 + 8) = v17;
  sub_1AD00412C(v18, v16);
LABEL_11:
  v19 = a3[7];
  v20 = (uint64_t *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v22 = *(_QWORD *)(a1 + v19 + 8);
  if (v22 >> 60 != 15)
  {
    v23 = v21[1];
    if (v23 >> 60 != 15)
    {
      v24 = *v20;
      *v20 = *v21;
      v20[1] = v23;
      sub_1AD00412C(v24, v22);
      goto LABEL_16;
    }
    sub_1AD007EC0((uint64_t)v20);
  }
  *(_OWORD *)v20 = *(_OWORD *)v21;
LABEL_16:
  v25 = a3[8];
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD399E54()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD399E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 32) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1AD399EEC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD399EF8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 32) + 8) = a2;
  return result;
}

uint64_t sub_1AD399F74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AD399FF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = v10[1];
    *v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD39A088(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD39A0D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = v9[1];
  *v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD39A138(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD39A1B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t sub_1AD39A210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD39A27C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD39A28C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD39A29C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1AD39A30C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v16 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (uint64_t *)((char *)a1 + v9);
    v14 = (uint64_t *)((char *)a2 + v9);
    v15 = v14[1];
    *v13 = *v14;
    v13[1] = v15;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD39A3B8(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD39A410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = (_QWORD *)(a1 + v8);
  v13 = (_QWORD *)(a2 + v8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD39A490(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = *(int *)(a3 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD39A538(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  return a1;
}

uint64_t sub_1AD39A59C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD39A624()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD39A634()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD39A644()
{
  return sub_1AD39B234();
}

uint64_t *sub_1AD39A650(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v27 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v27 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    v13 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    *(_QWORD *)v13 = *(_QWORD *)v14;
    v13[8] = v14[8];
    v15 = a3[7];
    v16 = a3[8];
    v17 = (uint64_t *)((char *)a1 + v15);
    v18 = (uint64_t *)((char *)a2 + v15);
    v19 = v18[1];
    *v17 = *v18;
    v17[1] = v19;
    v20 = (uint64_t *)((char *)a1 + v16);
    v21 = (uint64_t *)((char *)a2 + v16);
    v22 = v21[1];
    *v20 = *v21;
    v20[1] = v22;
    v23 = a3[9];
    v24 = (char *)a1 + v23;
    v25 = (uint64_t *)((char *)a2 + v23);
    v26 = *(uint64_t *)((char *)a2 + v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v26 >> 60 == 15)
    {
      *(_OWORD *)v24 = *(_OWORD *)v25;
    }
    else
    {
      v28 = *v25;
      sub_1AD0040A0(*v25, v26);
      *(_QWORD *)v24 = v28;
      *((_QWORD *)v24 + 1) = v26;
    }
    v29 = a3[10];
    v30 = a3[11];
    v31 = (char *)a1 + v29;
    v32 = (char *)a2 + v29;
    *(_QWORD *)v31 = *(_QWORD *)v32;
    *((_WORD *)v31 + 4) = *((_WORD *)v32 + 4);
    v33 = (char *)a1 + v30;
    v34 = (char *)a2 + v30;
    *(_DWORD *)v33 = *(_DWORD *)v34;
    v33[4] = v34[4];
  }
  return a1;
}

uint64_t sub_1AD39A7B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  uint64_t *v6;
  unint64_t v7;

  v4 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  v6 = (uint64_t *)(a1 + *(int *)(a2 + 36));
  v7 = v6[1];
  if (v7 >> 60 != 15)
    return sub_1AD00412C(*v6, v7);
  return result;
}

uint64_t sub_1AD39A844(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a3[6];
  v9 = (_QWORD *)(a1 + v7);
  v10 = (_QWORD *)(a2 + v7);
  v11 = v10[1];
  *v9 = *v10;
  v9[1] = v11;
  v12 = a1 + v8;
  v13 = a2 + v8;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_BYTE *)(v12 + 8) = *(_BYTE *)(v13 + 8);
  v14 = a3[7];
  v15 = a3[8];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = (_QWORD *)(a1 + v15);
  v20 = (_QWORD *)(a2 + v15);
  v21 = v20[1];
  *v19 = *v20;
  v19[1] = v21;
  v22 = a3[9];
  v23 = a1 + v22;
  v24 = (uint64_t *)(a2 + v22);
  v25 = *(_QWORD *)(a2 + v22 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25 >> 60 == 15)
  {
    *(_OWORD *)v23 = *(_OWORD *)v24;
  }
  else
  {
    v26 = *v24;
    sub_1AD0040A0(*v24, v25);
    *(_QWORD *)v23 = v26;
    *(_QWORD *)(v23 + 8) = v25;
  }
  v27 = a3[10];
  v28 = a3[11];
  v29 = a1 + v27;
  v30 = a2 + v27;
  *(_QWORD *)v29 = *(_QWORD *)v30;
  *(_WORD *)(v29 + 8) = *(_WORD *)(v30 + 8);
  v31 = a1 + v28;
  v32 = a2 + v28;
  *(_DWORD *)v31 = *(_DWORD *)v32;
  *(_BYTE *)(v31 + 4) = *(_BYTE *)(v32 + 4);
  return a1;
}

uint64_t sub_1AD39A978(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[6];
  v11 = a1 + v10;
  v12 = (uint64_t *)(a2 + v10);
  v13 = *v12;
  *(_BYTE *)(v11 + 8) = *((_BYTE *)v12 + 8);
  *(_QWORD *)v11 = v13;
  v14 = a3[7];
  v15 = (_QWORD *)(a1 + v14);
  v16 = (_QWORD *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v17 = a3[8];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  *v18 = *v19;
  v18[1] = v19[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v20 = a3[9];
  v21 = (uint64_t *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v23 = *(_QWORD *)(a2 + v20 + 8);
  if (*(_QWORD *)(a1 + v20 + 8) >> 60 != 15)
  {
    if (v23 >> 60 != 15)
    {
      v25 = *v22;
      sub_1AD0040A0(v25, v23);
      v26 = *v21;
      v27 = v21[1];
      *v21 = v25;
      v21[1] = v23;
      sub_1AD00412C(v26, v27);
      goto LABEL_8;
    }
    sub_1AD007EC0((uint64_t)v21);
    goto LABEL_6;
  }
  if (v23 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)v21 = *(_OWORD *)v22;
    goto LABEL_8;
  }
  v24 = *v22;
  sub_1AD0040A0(v24, v23);
  *v21 = v24;
  v21[1] = v23;
LABEL_8:
  v28 = a3[10];
  v29 = a1 + v28;
  v30 = (uint64_t *)(a2 + v28);
  v31 = *v30;
  *(_WORD *)(v29 + 8) = *((_WORD *)v30 + 4);
  *(_QWORD *)v29 = v31;
  v32 = a3[11];
  v33 = a1 + v32;
  v34 = a2 + v32;
  LODWORD(v31) = *(_DWORD *)v34;
  *(_BYTE *)(v33 + 4) = *(_BYTE *)(v34 + 4);
  *(_DWORD *)v33 = v31;
  return a1;
}

uint64_t sub_1AD39AB28(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  v8 = a1 + v7;
  v9 = a2 + v7;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = *(_BYTE *)(v9 + 8);
  v10 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v10) = *(_OWORD *)(a2 + v10);
  v11 = a3[10];
  *(_OWORD *)(a1 + a3[9]) = *(_OWORD *)(a2 + a3[9]);
  v12 = a1 + v11;
  v13 = a2 + v11;
  *(_WORD *)(v12 + 8) = *(_WORD *)(v13 + 8);
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v14 = a3[11];
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_BYTE *)(v15 + 4) = *(_BYTE *)(v16 + 4);
  *(_DWORD *)v15 = *(_DWORD *)v16;
  return a1;
}

uint64_t sub_1AD39ABF0(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t *v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a3[7];
  v14 = a1 + v12;
  v15 = a2 + v12;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  *(_BYTE *)(v14 + 8) = *(_BYTE *)(v15 + 8);
  v16 = (_QWORD *)(a1 + v13);
  v17 = (uint64_t *)(a2 + v13);
  v19 = *v17;
  v18 = v17[1];
  *v16 = v19;
  v16[1] = v18;
  swift_bridgeObjectRelease();
  v20 = a3[8];
  v21 = (_QWORD *)(a1 + v20);
  v22 = (uint64_t *)(a2 + v20);
  v24 = *v22;
  v23 = v22[1];
  *v21 = v24;
  v21[1] = v23;
  swift_bridgeObjectRelease();
  v25 = a3[9];
  v26 = (uint64_t *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v28 = *(_QWORD *)(a1 + v25 + 8);
  if (v28 >> 60 != 15)
  {
    v29 = v27[1];
    if (v29 >> 60 != 15)
    {
      v30 = *v26;
      *v26 = *v27;
      v26[1] = v29;
      sub_1AD00412C(v30, v28);
      goto LABEL_6;
    }
    sub_1AD007EC0((uint64_t)v26);
  }
  *(_OWORD *)v26 = *(_OWORD *)v27;
LABEL_6:
  v31 = a3[10];
  v32 = a3[11];
  v33 = a1 + v31;
  v34 = a2 + v31;
  *(_QWORD *)v33 = *(_QWORD *)v34;
  *(_WORD *)(v33 + 8) = *(_WORD *)(v34 + 8);
  v35 = a1 + v32;
  v36 = a2 + v32;
  *(_DWORD *)v35 = *(_DWORD *)v36;
  *(_BYTE *)(v35 + 4) = *(_BYTE *)(v36 + 4);
  return a1;
}

uint64_t sub_1AD39AD38()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD39AD48()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD39AD58()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SecureCloudUpgradeMessageProtobuf.MessageType()
{
  return &type metadata for SecureCloudUpgradeMessageProtobuf.MessageType;
}

uint64_t *sub_1AD39AE04(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)a1 + v8;
    v11 = (char *)a2 + v8;
    *(_QWORD *)v10 = *(_QWORD *)v11;
    v10[8] = v11[8];
    v12 = (uint64_t *)((char *)a1 + v9);
    v13 = (uint64_t *)((char *)a2 + v9);
    v14 = v13[1];
    *v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD39AEB0(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD39AEF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (_QWORD *)(a2 + v8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD39AF78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_BYTE *)(v9 + 8);
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_BYTE *)(v8 + 8) = v10;
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD39B010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  return a1;
}

uint64_t sub_1AD39B084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = *(int *)(a3 + 24);
  v9 = a1 + v7;
  v10 = a2 + v7;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  v11 = (_QWORD *)(a1 + v8);
  v12 = (uint64_t *)(a2 + v8);
  v14 = *v12;
  v13 = v12[1];
  *v11 = v14;
  v11[1] = v13;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD39B108()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD39B114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t sub_1AD39B1A0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD39B1AC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24) + 8) = a2;
  return result;
}

uint64_t sub_1AD39B228()
{
  return sub_1AD39B234();
}

uint64_t sub_1AD39B234()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AD39B2C8()
{
  uint64_t result;

  result = sub_1AD39B2E8();
  byte_1EED839D0 = result & 1;
  return result;
}

uint64_t sub_1AD39B2E8()
{
  id v0;
  id v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainBundle);
  v1 = objc_msgSend(v0, sel_bundleIdentifier);

  if (v1)
  {
    v2 = sub_1AD63B768();
    v4 = v3;

    if (v2 == 0xD000000000000023 && v4 == 0x80000001AD6A8D70 || (sub_1AD63C2A8() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
  }
  else
  {
    v4 = 0;
  }
  sub_1AD63BB70();
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1AD648160;
  v7 = MEMORY[0x1E0DEA968];
  if (v4)
  {
    v8 = sub_1AD63B7A4();
    v10 = v9;
  }
  else
  {
    v10 = 0xE300000000000000;
    v8 = 7104878;
  }
  *(_QWORD *)(v6 + 56) = v7;
  *(_QWORD *)(v6 + 64) = sub_1AD0469B8();
  *(_QWORD *)(v6 + 32) = v8;
  *(_QWORD *)(v6 + 40) = v10;
  sub_1AD63B48C();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_1AD39B4B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD39B4CC(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD39B510@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD39B52C(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD39B570()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 24) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD39B5D0()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD39B630@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 24) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(result + 16);
  }
  return result;
}

uint64_t sub_1AD39B694(double a1)
{
  uint64_t v1;
  uint64_t (*v3)(double *);
  uint64_t result;
  _QWORD *v5;
  double v6;

  v3 = *(uint64_t (**)(double *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(double *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD39B768(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    return sub_1AD39B7DC;
  }
  return result;
}

uint64_t sub_1AD39B7DC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v1 = a1[1];
  v2 = *a1;
  v3 = *(uint64_t (**)(uint64_t *))v1;
  v6 = *a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 16) = v2;
    *(_BYTE *)(v1 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*sub_1AD39B8B0(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  *v3 = *(_QWORD *)v1;
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD39B914;
}

void sub_1AD39B914(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *a1;
  v3 = (*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v6;
    *(_BYTE *)(v3 + 24) = v7;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)v3 = v5;
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v6;
    *(_BYTE *)(v3 + 24) = v7;
  }
  free(v2);
}

uint64_t sub_1AD39B9A0@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 56) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(result + 48);
  }
  return result;
}

uint64_t sub_1AD39BA04(double a1)
{
  uint64_t v1;
  uint64_t (*v3)(double *);
  uint64_t result;
  _QWORD *v5;
  double v6;

  v3 = *(uint64_t (**)(double *))(v1 + 32);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(double *)(v1 + 48) = a1;
    *(_BYTE *)(v1 + 56) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD39BAD8(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 48);
    return sub_1AD39BB4C;
  }
  return result;
}

uint64_t sub_1AD39BB4C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v1 = a1[1];
  v2 = *a1;
  v3 = *(uint64_t (**)(uint64_t *))(v1 + 32);
  v6 = *a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 48) = v2;
    *(_BYTE *)(v1 + 56) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*sub_1AD39BC20(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 56);
  *v3 = *(_QWORD *)(v1 + 32);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD39BC84;
}

void sub_1AD39BC84(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *a1;
  v3 = (*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + 32) = v5;
    *(_QWORD *)(v3 + 40) = v4;
    *(_QWORD *)(v3 + 48) = v6;
    *(_BYTE *)(v3 + 56) = v7;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)(v3 + 32) = v5;
    *(_QWORD *)(v3 + 40) = v4;
    *(_QWORD *)(v3 + 48) = v6;
    *(_BYTE *)(v3 + 56) = v7;
  }
  free(v2);
}

uint64_t (*sub_1AD39BD18())()
{
  return nullsub_1;
}

uint64_t sub_1AD39BD2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  v8 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = v8;
  swift_retain();
  return swift_retain();
}

__n128 sub_1AD39BD80(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  uint64_t v5;
  char v6;
  __n128 result;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  v5 = *(_QWORD *)(a1 + 48);
  v6 = *(_BYTE *)(a1 + 56);
  swift_release();
  swift_release();
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_QWORD *)(v1 + 16) = v3;
  *(_BYTE *)(v1 + 24) = v4;
  result = *(__n128 *)(a1 + 32);
  *(__n128 *)(v1 + 32) = result;
  *(_QWORD *)(v1 + 48) = v5;
  *(_BYTE *)(v1 + 56) = v6;
  return result;
}

uint64_t (*sub_1AD39BDF8())()
{
  return nullsub_1;
}

uint64_t sub_1AD39BE08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v1 + 56);
  return sub_1AD39BE34();
}

uint64_t sub_1AD39BE34()
{
  swift_retain();
  return swift_retain();
}

uint64_t (*sub_1AD39BE60())()
{
  return nullsub_1;
}

uint64_t sub_1AD39BE70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v1 + 56);
  return sub_1AD39BE34();
}

uint64_t (*sub_1AD39BEA0())()
{
  return nullsub_1;
}

uint64_t sub_1AD39BEB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v1 + 56);
  return sub_1AD39BE34();
}

uint64_t (*sub_1AD39BEE0())()
{
  return nullsub_1;
}

uint64_t RCSEnvelope.pushLocation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  v5 = *(_QWORD *)(v1 + 32);
  v6 = *(_QWORD *)(v1 + 40);
  v7 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v1 + 56);
  return sub_1AD39BE34();
}

__n128 sub_1AD39BF20(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  sub_1AD2A2874();
  *(_OWORD *)v1 = v7;
  *(_OWORD *)(v1 + 16) = v6;
  result = v5;
  *(__n128 *)(v1 + 32) = v5;
  *(_QWORD *)(v1 + 48) = v2;
  *(_BYTE *)(v1 + 56) = v3;
  return result;
}

uint64_t (*RCSEnvelope.pushLocation.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD39BFA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t result;

  v3 = *((char *)v1 + 56);
  if (v3 < 0)
  {
    v10 = 0;
    v8 = 0;
    v9 = 0;
    v11 = 0;
    v7 = 0;
    v4 = 0;
    v5 = 0;
    v12 = 0;
  }
  else
  {
    v4 = v1[5];
    v5 = v1[6];
    v6 = v1[3];
    v7 = v1[4];
    v8 = v1[1];
    v9 = v1[2];
    v10 = *v1;
    v11 = v6 & 1;
    v12 = v3 & 1;
    swift_retain();
    result = swift_retain();
  }
  *(_QWORD *)a1 = v10;
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v11;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_BYTE *)(a1 + 56) = v12;
  return result;
}

uint64_t sub_1AD39C04C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  __int128 v7;
  __int128 v8;
  uint64_t result;
  __int128 v10;
  __int128 v11;

  v3 = *(char *)(v1 + 56);
  if (v3 < 0)
  {
    v5 = *(_QWORD *)(v1 + 32);
    v10 = *(_OWORD *)(v1 + 40);
    v11 = *(_OWORD *)(v1 + 8);
    v4 = *(_QWORD *)(v1 + 24) & 1;
    v6 = v3 & 1;
    *(_QWORD *)a1 = *(_QWORD *)v1;
    swift_retain();
    result = swift_retain();
    v8 = v10;
    v7 = v11;
  }
  else
  {
    v4 = 0;
    v5 = 0;
    v6 = 0;
    *(_QWORD *)a1 = 0;
    v7 = 0uLL;
    v8 = 0uLL;
  }
  *(_OWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 56) = v6;
  return result;
}

uint64_t sub_1AD39C0EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD294B38, (uint64_t (*)(void))sub_1AD294B7C);
}

uint64_t sub_1AD39C100(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A29AC, (uint64_t (*)(void))sub_1AD2A28E0);
}

uint64_t sub_1AD39C114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A2968, (uint64_t (*)(void))sub_1AD2A289C);
}

uint64_t sub_1AD39C128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2949E8, (uint64_t (*)(void))sub_1AD294A2C);
}

uint64_t sub_1AD39C13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28DD2C, (uint64_t (*)(void))sub_1AD28DD70);
}

uint64_t sub_1AD39C150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28DDF8, (uint64_t (*)(void))sub_1AD28DE3C);
}

uint64_t sub_1AD39C164(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28DEC4, (uint64_t (*)(void))sub_1AD28DF08);
}

uint64_t sub_1AD39C178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD39C18C, (uint64_t (*)(void))sub_1AD39C1D0);
}

unint64_t sub_1AD39C18C()
{
  unint64_t result;

  result = qword_1EECDBB98;
  if (!qword_1EECDBB98)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for RCSEnvelope, &type metadata for RCSEnvelope);
    atomic_store(result, (unint64_t *)&qword_1EECDBB98);
  }
  return result;
}

unint64_t sub_1AD39C1D0()
{
  unint64_t result;

  result = qword_1EECDBBA0;
  if (!qword_1EECDBBA0)
  {
    result = MEMORY[0x1AF44BDF0]("1Lh8܀d8", &type metadata for RCSEnvelope);
    atomic_store(result, &qword_1EECDBBA0);
  }
  return result;
}

uint64_t sub_1AD39C218(double *a1)
{
  return sub_1AD0037A8(*a1);
}

uint64_t sub_1AD39C23C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD39C25C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_1AD39C2B8(double *a1)
{
  return sub_1AD0037A8(*a1);
}

uint64_t sub_1AD39C2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD39C2FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v5;
  *(_BYTE *)(a2 + 56) = v6;
  return result;
}

ValueMetadata *type metadata accessor for GeoPriv()
{
  return &type metadata for GeoPriv;
}

ValueMetadata *type metadata accessor for GeoPriv.LocationInfo()
{
  return &type metadata for GeoPriv.LocationInfo;
}

ValueMetadata *type metadata accessor for GeoPriv.LocationInfo.Position()
{
  return &type metadata for GeoPriv.LocationInfo.Position;
}

ValueMetadata *type metadata accessor for GeoPriv.LocationInfo.Circle()
{
  return &type metadata for GeoPriv.LocationInfo.Circle;
}

uint64_t destroy for VersionCharacteristic()
{
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for VersionCharacteristic(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for VersionCharacteristic(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  return a1;
}

uint64_t assignWithTake for VersionCharacteristic(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSActivitySharingInvitation.ActivitySharingSample(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSActivitySharingInvitation.ActivitySharingSample(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GeoPriv.LocationInfo.Point()
{
  return &type metadata for GeoPriv.LocationInfo.Point;
}

uint64_t sub_1AD39C5D0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 56) >> 7;
}

uint64_t sub_1AD39C5DC(uint64_t result)
{
  *(_BYTE *)(result + 56) &= ~0x80u;
  return result;
}

uint64_t sub_1AD39C5EC(uint64_t result, char a2)
{
  char v2;

  v2 = *(_BYTE *)(result + 56) & 1 | (a2 << 7);
  *(_QWORD *)(result + 24) &= 1uLL;
  *(_BYTE *)(result + 56) = v2;
  return result;
}

ValueMetadata *type metadata accessor for GeoPriv.LocationInfo.Location()
{
  return &type metadata for GeoPriv.LocationInfo.Location;
}

ValueMetadata *type metadata accessor for RCSPushLocation()
{
  return &type metadata for RCSPushLocation;
}

uint64_t _s9BlastDoor7GeoPrivV12LocationInfoV8LocationOwxx_0()
{
  return sub_1AD2A2874();
}

uint64_t _s9BlastDoor7GeoPrivV12LocationInfoV8LocationOwcp_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = *((_BYTE *)a2 + 56);
  sub_1AD39BE34();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  return a1;
}

uint64_t _s9BlastDoor7GeoPrivV12LocationInfoV8LocationOwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  v3 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  v6 = a2[3];
  v7 = a2[4];
  v8 = a2[5];
  v9 = a2[6];
  v10 = *((_BYTE *)a2 + 56);
  sub_1AD39BE34();
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  *(_QWORD *)(a1 + 48) = v9;
  *(_BYTE *)(a1 + 56) = v10;
  sub_1AD2A2874();
  return a1;
}

uint64_t _s9BlastDoor7GeoPrivV12LocationInfoV8LocationOwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  __int128 v5;

  v3 = *(_QWORD *)(a2 + 48);
  v4 = *(_BYTE *)(a2 + 56);
  v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = v3;
  *(_BYTE *)(a1 + 56) = v4;
  sub_1AD2A2874();
  return a1;
}

uint64_t _s9BlastDoor7GeoPrivV12LocationInfoV8LocationOwet_0(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 57))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

uint64_t sub_1AD39C824(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 56) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 57) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = 0;
      *(_QWORD *)(result + 16) = 0;
      *(_QWORD *)(result + 24) = 2 * -a2;
      *(_QWORD *)(result + 40) = 0;
      *(_QWORD *)(result + 48) = 0;
      *(_QWORD *)(result + 32) = 0;
      *(_BYTE *)(result + 56) = 0;
      return result;
    }
    *(_BYTE *)(result + 57) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for RCSEnvelope()
{
  return &type metadata for RCSEnvelope;
}

uint64_t sub_1AD39C898@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  char *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;

  v30 = a1;
  v31 = a2;
  v26 = a3;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1920);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1948);
  v7 = *(_QWORD *)(v28 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = MEMORY[0x1E0C80A78](v28);
  v27 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1938);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v26 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  v19 = *(_QWORD *)(v18 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v17, 1, 1, v18);
  v29 = v4;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, v31, v3);
  v32 = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1960);
  sub_1AD63BA68();
  sub_1ACFF64C0((uint64_t)v17, (uint64_t)v15, &qword_1ED2E1938);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18);
  if ((_DWORD)result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v19 + 32))(v26, v15, v18);
    v22 = v27;
    v21 = v28;
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v27, v11, v28);
    v23 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    v24 = swift_allocObject();
    *(_QWORD *)(v24 + 16) = 0;
    *(_QWORD *)(v24 + 24) = 0;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v24 + v23, v22, v21);
    v25 = v30;
    sub_1AD39CF28(v30, (uint64_t)&unk_1EECDBBB0, v24);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v29 + 8))(v31, v3);
    sub_1AD009758(v25, (uint64_t *)&unk_1ED2DAE40);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v11, v21);
    return sub_1AD009758((uint64_t)v17, &qword_1ED2E1938);
  }
  return result;
}

uint64_t sub_1AD39CB38(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  sub_1AD009758(a2, &qword_1ED2E1938);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t sub_1AD39CBAC(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD39CB38(a1, *(_QWORD *)(v1 + 16));
}

uint64_t sub_1AD39CBB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[4] = a4;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1940);
  v4[5] = v5;
  v4[6] = *(_QWORD *)(v5 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AD39CC18()
{
  uint64_t v0;
  _QWORD *v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1948);
  sub_1AD63BA50();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v1;
  *v1 = v0;
  v1[1] = sub_1AD39CCA0;
  return sub_1AD63BA5C();
}

uint64_t sub_1AD39CCA0()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1AD39CCF4()
{
  uint64_t v0;
  int *v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  v1 = *(int **)(v0 + 16);
  *(_QWORD *)(v0 + 72) = v1;
  if (v1)
  {
    *(_QWORD *)(v0 + 80) = *(_QWORD *)(v0 + 24);
    v4 = (uint64_t (*)(void))((char *)v1 + *v1);
    v2 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 88) = v2;
    *v2 = v0;
    v2[1] = sub_1AD39CD8C;
    return v4();
  }
  else
  {
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 48) + 8))(*(_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 40));
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_1AD39CD8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  v3 = *v0;
  swift_task_dealloc();
  sub_1AD28D974(v2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 64) = v4;
  *v4 = v3;
  v4[1] = sub_1AD39CCA0;
  return sub_1AD63BA5C();
}

uint64_t sub_1AD39CE28()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1948);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_unknownObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1AD39CEA0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1948) - 8) + 80);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_QWORD *)(v1 + 24);
  v7 = v1 + ((v4 + 32) & ~v4);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v8;
  *v8 = v2;
  v8[1] = sub_1AD39E2A0;
  return sub_1AD39CBB4(a1, v5, v6, v7);
}

uint64_t sub_1AD39CF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2DAE40);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACFF64C0(a1, (uint64_t)v8, (uint64_t *)&unk_1ED2DAE40);
  v9 = sub_1AD63BA2C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1AD009758((uint64_t)v8, (uint64_t *)&unk_1ED2DAE40);
    if (*(_QWORD *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      v11 = sub_1AD63BA14();
      v13 = v12;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1AD63BA20();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v9);
    if (*(_QWORD *)(a3 + 16))
      goto LABEL_3;
  }
  v11 = 0;
  v13 = 0;
LABEL_6:
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a2;
  *(_QWORD *)(v14 + 24) = a3;
  if (v13 | v11)
  {
    v16[0] = 0;
    v16[1] = 0;
    v16[2] = v11;
    v16[3] = v13;
  }
  return swift_task_create();
}

uint64_t sub_1AD39D0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _QWORD v16[2];

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1918);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v3, v6);
  v14 = swift_allocObject();
  *(_QWORD *)(v14 + 16) = a1;
  *(_QWORD *)(v14 + 24) = a2;
  v16[0] = &unk_1EECDCA50;
  v16[1] = v14;
  swift_retain();
  sub_1AD63BA38();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
}

uint64_t sub_1AD39D1F8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(void);

  v5 = (uint64_t (*)(void))((char *)a2 + *a2);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v3;
  *v3 = v2;
  v3[1] = sub_1AD39E2A0;
  return v5();
}

uint64_t sub_1AD39D24C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1AD39D26C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 32) = v2;
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EECDBBC8 + dword_1EECDBBC8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_1AD39D300;
  return v5(*(_QWORD *)(v0 + 16), 0, 0, (uint64_t)sub_1AD39D4C4, v1);
}

uint64_t sub_1AD39D300()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1AD39D350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;

  v20 = a5;
  v21 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1918);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v17 = v21;
  v16[2] = v20;
  v16[3] = a1;
  v16[4] = a3;
  v16[5] = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = &unk_1EECDBC00;
  *(_QWORD *)(v18 + 24) = v16;
  v22 = &unk_1EECDBC08;
  v23 = v18;
  swift_retain();
  swift_retain();
  sub_1AD63BA38();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1AD39D4C4(uint64_t a1)
{
  uint64_t *v1;

  return sub_1AD39D350(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_1AD39D4D0(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v4[2] = a1;
  v4[3] = a4;
  v6 = swift_task_alloc();
  v4[4] = v6;
  v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v7 = (_QWORD *)swift_task_alloc();
  v4[5] = v7;
  *v7 = v4;
  v7[1] = sub_1AD39D558;
  return v9(v6);
}

uint64_t sub_1AD39D558()
{
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1AD39D5AC()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8) + 32))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) + 64) + 40), *(_QWORD *)(v0 + 32));
  swift_continuation_resume();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD39D604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_1AD63BA14();
  }
  return swift_task_switch();
}

uint64_t sub_1AD39D66C()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_1AD39D6C8;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_1AD39D6C8()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  return (*(uint64_t (**)(void))(*v0 + 8))();
}

uint64_t sub_1AD39D708(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = v4;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return swift_task_switch();
}

uint64_t sub_1AD39D728()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v2;
  _QWORD *v3;
  uint64_t (*v5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v1 = swift_task_alloc();
  *(_QWORD *)(v0 + 56) = v1;
  v2 = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 32) = v2;
  v5 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_1EECDBBD8 + dword_1EECDBBD8);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 64) = v3;
  *v3 = v0;
  v3[1] = sub_1AD39D7BC;
  return v5(*(_QWORD *)(v0 + 16), 0, 0, (uint64_t)sub_1AD39D9D8, v1);
}

uint64_t sub_1AD39D7BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1AD39D830()
{
  uint64_t v0;

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD39D864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;

  v20 = a5;
  v21 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1918);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v20 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = (_QWORD *)swift_allocObject();
  v17 = v21;
  v16[2] = v20;
  v16[3] = a1;
  v16[4] = a3;
  v16[5] = a4;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v17, v8);
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = &unk_1EECDBBE8;
  *(_QWORD *)(v18 + 24) = v16;
  v22 = &unk_1EECDBBF0;
  v23 = v18;
  swift_retain();
  swift_retain();
  sub_1AD63BA38();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return swift_release();
}

uint64_t sub_1AD39D9D8(uint64_t a1)
{
  uint64_t *v1;

  return sub_1AD39D864(a1, v1[3], v1[4], v1[5], v1[2]);
}

uint64_t sub_1AD39D9E4(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v6;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t);

  v4[3] = a1;
  v4[4] = a4;
  v4[5] = *(_QWORD *)(a4 - 8);
  v6 = swift_task_alloc();
  v4[6] = v6;
  v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v7 = (_QWORD *)swift_task_alloc();
  v4[7] = v7;
  *v7 = v4;
  v7[1] = sub_1AD39DA70;
  return v9(v6);
}

uint64_t sub_1AD39DA70()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 64) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1AD39DAD4()
{
  uint64_t v0;

  (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 40) + 32))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)(v0 + 24) + 64) + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 32));
  swift_continuation_throwingResume();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD39DB24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = *(_QWORD *)(v0 + 64);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
  swift_allocError();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v2, v0 + 16, v1);
  swift_continuation_throwingResumeWithError();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD39DBB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[11] = a4;
  v5[12] = a5;
  v5[10] = a1;
  if (a2)
  {
    swift_getObjectType();
    sub_1AD63BA14();
  }
  return swift_task_switch();
}

uint64_t sub_1AD39DC20()
{
  _QWORD *v0;
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = (void (*)(uint64_t))v0[11];
  v0[7] = v0[10];
  v0[2] = v0;
  v0[3] = sub_1AD39DC7C;
  v2 = swift_continuation_init();
  v1(v2);
  return swift_continuation_await();
}

uint64_t sub_1AD39DC7C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (*(_QWORD *)(v1 + 48))
    swift_willThrow();
  return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_1AD39DCD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1AD39DD10(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1AD39DD48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AD39DD90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AD39DDD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AD39DE20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1AD39DE68()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD39DE74(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1AD39DEB4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD39DEC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1928);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t type metadata accessor for AsyncSerialQueue()
{
  uint64_t result;

  result = qword_1ED2E1828;
  if (!qword_1ED2E1828)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1AD39DF40()
{
  unint64_t v0;

  sub_1AD39DFA8();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1AD39DFA8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2E1930)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2E1960);
    v0 = sub_1AD63BA44();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2E1930);
  }
}

uint64_t sub_1AD39E000(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1AD39E064;
  return v6(a1);
}

uint64_t sub_1AD39E064()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1AD39E0B0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD39E0D4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (int *)v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1AD13F52C;
  return sub_1AD39D9E4(v3, v5, v4, v2);
}

uint64_t sub_1AD39E138()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD39E15C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1AD39E2A0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EECDBBB8 + dword_1EECDBBB8))(a1, v4);
}

uint64_t sub_1AD39E1CC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  _QWORD *v6;

  v2 = v0[2];
  v3 = v0[3];
  v5 = (int *)v0[4];
  v4 = v0[5];
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v6;
  *v6 = v1;
  v6[1] = sub_1AD39E2A0;
  return sub_1AD39D4D0(v3, v5, v4, v2);
}

uint64_t sub_1AD39E230(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1AD13F52C;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EECDBC10 + dword_1EECDBC10))(a1, v4);
}

uint64_t sub_1AD39E2B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  void *v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  _QWORD v15[4];
  int v16;

  v3 = v1;
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(unsigned __int8 *)(a1 + 16);
  v16 = 0;
  v15[2] = &v16;
  if (!v5)
  {
    sub_1AD39E6D4(v4, 0, v6, (uint64_t)sub_1AD39E6BC, (uint64_t)v15);
    swift_bridgeObjectRelease();
    if (!v2)
      goto LABEL_16;
LABEL_23:
    swift_deallocPartialClassInstance();
    return v3;
  }
  swift_retain();
  sub_1AD60B530();
  if (v2)
    goto LABEL_22;
  sub_1AD39E6D4(v4, v5, v6, (uint64_t)sub_1AD39E6BC, (uint64_t)v15);
  if ((*(_BYTE *)(v5 + 40) & 1) != 0)
  {
    sub_1AD63BB64();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    sub_1AD63B48C();
    goto LABEL_15;
  }
  v7 = sandbox_extension_release();
  if (v7 != sub_1AD63B5F4())
  {
    v8 = MEMORY[0x1AF44A2D8]();
    sub_1AD39E828();
    v9 = (void *)swift_allocError();
    *(_DWORD *)v10 = v8;
    *(_BYTE *)(v10 + 4) = 0;
    swift_willThrow();
    if ((*(_BYTE *)(v5 + 40) & 1) != 0)
    {
      sub_1AD63BB64();
      if (qword_1ED2E7540[0] != -1)
        swift_once();
      sub_1AD63B48C();
    }
    else
    {
      v11 = sandbox_extension_release();
      if (v11 != sub_1AD63B5F4())
      {
        v12 = MEMORY[0x1AF44A2D8]();
        sub_1AD39E828();
        swift_allocError();
        *(_DWORD *)v13 = v12;
        *(_BYTE *)(v13 + 4) = 0;
        swift_willThrow();

        goto LABEL_22;
      }
      *(_QWORD *)(v5 + 32) = 0;
      *(_BYTE *)(v5 + 40) = 1;
    }
    swift_willThrow();
LABEL_22:
    swift_bridgeObjectRelease();
    swift_release_n();
    goto LABEL_23;
  }
  *(_QWORD *)(v5 + 32) = 0;
  *(_BYTE *)(v5 + 40) = 1;
LABEL_15:
  swift_bridgeObjectRelease();
  swift_release_n();
LABEL_16:
  *(_DWORD *)(v1 + 16) = v16;
  return v3;
}

uint64_t sub_1AD39E57C(uint64_t a1, _DWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  char *v8;
  _DWORD v9[4];

  v4 = sub_1AD63AD0C();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a1)
  {
    __break(1u);
    goto LABEL_7;
  }
  result = sub_1AD63B5DC();
  *a2 = result;
  if ((result & 0x80000000) == 0)
    return result;
  MEMORY[0x1AF44A2D8]();
  result = sub_1AD63B5D0();
  if ((result & 0x100000000) != 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  v9[3] = result;
  sub_1AD39E88C(MEMORY[0x1E0DEE9D8]);
  sub_1AD39E9B4();
  sub_1AD63AE38();
  sub_1AD63AD00();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  return swift_willThrow();
}

uint64_t sub_1AD39E678()
{
  uint64_t v0;

  close(*(_DWORD *)(v0 + 16));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for FileDescriptor()
{
  return objc_opt_self();
}

uint64_t sub_1AD39E6BC(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD39E57C(a1, *(_DWORD **)(v1 + 16));
}

uint64_t sub_1AD39E6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  _QWORD v13[10];

  v8 = sub_1AD63AF28();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[6] = 47;
  v13[7] = 0xE100000000000000;
  v13[9] = a1;
  swift_bridgeObjectRetain_n();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7330);
  sub_1AD00F8EC();
  sub_1AD63B720();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD63AE8C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v13[4] = a4;
  v13[5] = a5;
  sub_1AD63AEC8();
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

unint64_t sub_1AD39E828()
{
  unint64_t result;

  result = qword_1EECDBC20;
  if (!qword_1EECDBC20)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A788, &type metadata for SandboxExtensionError);
    atomic_store(result, (unint64_t *)&qword_1EECDBC20);
  }
  return result;
}

uint64_t sub_1AD39E86C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_1AD39E88C(uint64_t a1)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t result;
  char v10;
  uint64_t *v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;

  if (!*(_QWORD *)(a1 + 16))
  {
    v3 = (_QWORD *)MEMORY[0x1E0DEE9E0];
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA5E0);
  v2 = sub_1AD63BE58();
  v3 = (_QWORD *)v2;
  v4 = *(_QWORD *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  v5 = v2 + 64;
  v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1AD39EA60(v6, (uint64_t)&v15);
    v7 = v15;
    v8 = v16;
    result = sub_1AD39E9FC(v15, v16);
    if ((v10 & 1) != 0)
      break;
    *(_QWORD *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    v11 = (uint64_t *)(v3[6] + 16 * result);
    *v11 = v7;
    v11[1] = v8;
    result = (unint64_t)sub_1AD002F7C(&v17, (_OWORD *)(v3[7] + 32 * result));
    v12 = v3[2];
    v13 = __OFADD__(v12, 1);
    v14 = v12 + 1;
    if (v13)
      goto LABEL_11;
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1AD39E9B4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EECDBC28;
  if (!qword_1EECDBC28)
  {
    v1 = sub_1AD63AD0C();
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0CADE88], v1);
    atomic_store(result, (unint64_t *)&qword_1EECDBC28);
  }
  return result;
}

unint64_t sub_1AD39E9FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_1AD63C4AC();
  sub_1AD63B7F8();
  v4 = sub_1AD63C4F4();
  return sub_1AD39EAA8(a1, a2, v4);
}

uint64_t sub_1AD39EA60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2DA5D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AD39EAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t i;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v15;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  i = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * i);
    if ((*v10 != a1 || v10[1] != a2) && (sub_1AD63C2A8() & 1) == 0)
    {
      v12 = ~v5;
      i = (i + 1) & v12;
      if (((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0)
      {
        v13 = (_QWORD *)(v9 + 16 * i);
        if ((*v13 != a1 || v13[1] != a2) && (sub_1AD63C2A8() & 1) == 0)
        {
          for (i = (i + 1) & v12; ((*(_QWORD *)(v4 + ((i >> 3) & 0xFFFFFFFFFFFFF8)) >> i) & 1) != 0; i = (i + 1) & v12)
          {
            v15 = (_QWORD *)(v9 + 16 * i);
            if (*v15 == a1 && v15[1] == a2)
              break;
            if ((sub_1AD63C2A8() & 1) != 0)
              break;
          }
        }
      }
    }
  }
  return i;
}

uint64_t sub_1AD39EBEC@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result)
    v2 = 2;
  else
    v2 = 1;
  if (result == -1)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD39EC08()
{
  unsigned __int8 *v0;

  return *v0 - 1;
}

_QWORD *sub_1AD39EC14@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result)
    v2 = 2;
  else
    v2 = 1;
  if (*result == -1)
    v3 = 0;
  else
    v3 = v2;
  *a2 = v3;
  return result;
}

uint64_t sub_1AD39EC34()
{
  sub_1AD39EF90();
  return sub_1AD63B930();
}

uint64_t sub_1AD39EC90()
{
  sub_1AD39EF90();
  return sub_1AD63B8D0();
}

void sub_1AD39ECDC(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *sub_1AD39ECE8(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*sub_1AD39ECF4())()
{
  return nullsub_1;
}

uint64_t sub_1AD39ED04()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD39ED0C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_1AD39ED34())()
{
  return nullsub_1;
}

unint64_t sub_1AD39ED48()
{
  unint64_t result;

  result = qword_1EECDBC30;
  if (!qword_1EECDBC30)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67E42C, &type metadata for CollaborationNoticeAction.ActionType);
    atomic_store(result, (unint64_t *)&qword_1EECDBC30);
  }
  return result;
}

uint64_t sub_1AD39ED8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD286C6C, (uint64_t (*)(void))sub_1AD286CB0);
}

uint64_t sub_1AD39EDA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD39EDB4, (uint64_t (*)(void))sub_1AD39EDF8);
}

unint64_t sub_1AD39EDB4()
{
  unint64_t result;

  result = qword_1EECDBC38;
  if (!qword_1EECDBC38)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD650228, &type metadata for CollaborationNoticeAction);
    atomic_store(result, (unint64_t *)&qword_1EECDBC38);
  }
  return result;
}

unint64_t sub_1AD39EDF8()
{
  unint64_t result;

  result = qword_1EECDBC40;
  if (!qword_1EECDBC40)
  {
    result = MEMORY[0x1AF44BDF0]("1oh8ĭd8", &type metadata for CollaborationNoticeAction);
    atomic_store(result, (unint64_t *)&qword_1EECDBC40);
  }
  return result;
}

uint64_t assignWithCopy for CollaborationNoticeAction(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CollaborationNoticeAction(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CollaborationNoticeAction()
{
  return &type metadata for CollaborationNoticeAction;
}

uint64_t storeEnumTagSinglePayload for CollaborationNoticeAction.ActionType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD39EF10 + 4 * byte_1AD67E425[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD39EF44 + 4 * asc_1AD67E420[v4]))();
}

uint64_t sub_1AD39EF44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD39EF4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD39EF54);
  return result;
}

uint64_t sub_1AD39EF60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD39EF68);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD39EF6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD39EF74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CollaborationNoticeAction.ActionType()
{
  return &type metadata for CollaborationNoticeAction.ActionType;
}

unint64_t sub_1AD39EF90()
{
  unint64_t result;

  result = qword_1EECDBC48;
  if (!qword_1EECDBC48)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD67E494, &type metadata for CollaborationNoticeAction.ActionType);
    atomic_store(result, (unint64_t *)&qword_1EECDBC48);
  }
  return result;
}

uint64_t sub_1AD39EFD4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD39EFDC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_1AD39F004())()
{
  return nullsub_1;
}

unint64_t sub_1AD39F014(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD39F040();
  result = sub_1AD39F084();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD39F040()
{
  unint64_t result;

  result = qword_1EECDBC50;
  if (!qword_1EECDBC50)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD652028, &type metadata for SatelliteSMSTextMessage);
    atomic_store(result, (unint64_t *)&qword_1EECDBC50);
  }
  return result;
}

unint64_t sub_1AD39F084()
{
  unint64_t result;

  result = qword_1EECDBC58;
  if (!qword_1EECDBC58)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD652050, &type metadata for SatelliteSMSTextMessage);
    atomic_store(result, (unint64_t *)&qword_1EECDBC58);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for DefaultCharacteristic(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for DefaultCharacteristic()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for DefaultCharacteristic(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for DefaultCharacteristic(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DefaultCharacteristic(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 8))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for DefaultCharacteristic(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for SatelliteSMSTextMessage()
{
  return &type metadata for SatelliteSMSTextMessage;
}

uint64_t sub_1AD39F224@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[2];
  v4 = v1[3];
  v3 = v1[4];
  *a1 = v1[1];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD39F254(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  return result;
}

uint64_t sub_1AD39F2A4@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[6];
  v4 = v1[7];
  v3 = v1[8];
  *a1 = v1[5];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD39F2D4(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 40) = *a1;
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v4;
  return result;
}

uint64_t sub_1AD39F324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD39F39C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 64))
  {
    v1 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD39F414()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v10;
  char v11;
  char v12;
  char v13;
  uint64_t result;
  _OWORD v15[2];
  __int128 v16;
  uint64_t v17;

  v1 = *v0;
  v3 = v0[3];
  v2 = v0[4];
  v5 = v0[7];
  v4 = v0[8];
  v6 = v0[9];
  v7 = v0[10];
  v17 = MEMORY[0x1E0DEBB98];
  *(_QWORD *)&v16 = v1;
  sub_1AD002F7C(&v16, v15);
  v8 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v15, 118, 0xE100000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_6;
  v10 = MEMORY[0x1E0DEA968];
  v17 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v16 = v3;
  *((_QWORD *)&v16 + 1) = v2;
  sub_1AD002F7C(&v16, v15);
  swift_bridgeObjectRetain();
  v11 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v15, 115, 0xE100000000000000, v11);
  swift_bridgeObjectRelease();
  if (v4)
  {
    v17 = v10;
    *(_QWORD *)&v16 = v5;
    *((_QWORD *)&v16 + 1) = v4;
    sub_1AD002F7C(&v16, v15);
    swift_bridgeObjectRetain();
    v12 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v15, 112, 0xE100000000000000, v12);
    swift_bridgeObjectRelease();
    if (v7 >> 60 != 15)
    {
      v17 = MEMORY[0x1E0CB0338];
      *(_QWORD *)&v16 = v6;
      *((_QWORD *)&v16 + 1) = v7;
      sub_1AD002F7C(&v16, v15);
      sub_1AD00408C(v6, v7);
      sub_1AD0040A0(v6, v7);
      v13 = swift_isUniquelyReferenced_nonNull_native();
      sub_1AD43F448(v15, 99, 0xE100000000000000, v13);
      swift_bridgeObjectRelease();
      sub_1AD004118(v6, v7);
    }
    return v8;
  }
  else
  {
LABEL_6:
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD39F614()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1AD39F61C(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD39F624())()
{
  return nullsub_1;
}

uint64_t sub_1AD39F634(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD39F654(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 32);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 24);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD0445AC;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD39F6DC(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[2];
  v6 = v1[3];
  v5 = v1[4];
  *v3 = v1[1];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD044760;
}

uint64_t sub_1AD39F740(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD39F760(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 64);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 56);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD044990;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD39F7E8(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[6];
  v6 = v1[7];
  v5 = v1[8];
  *v3 = v1[5];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD044B44;
}

uint64_t sub_1AD39F84C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 72);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + 80));
  return v1;
}

uint64_t sub_1AD39F87C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD004118(*(_QWORD *)(v2 + 72), *(_QWORD *)(v2 + 80));
  *(_QWORD *)(v2 + 72) = a1;
  *(_QWORD *)(v2 + 80) = a2;
  return result;
}

uint64_t (*sub_1AD39F8B0())()
{
  return nullsub_1;
}

uint64_t sub_1AD39F8C0()
{
  uint64_t v0;

  sub_1AD39F414();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD39F944()
{
  uint64_t v0;

  sub_1AD39F414();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1AD39F9C8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD29B97C();
  result = sub_1AD29B828();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD39F9F8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD39FA34@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v5 = a1[3];
  v4 = a1[4];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD39FA6C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD39FAA8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[5];
  v3 = a1[6];
  v5 = a1[7];
  v4 = a1[8];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t destroy for IDSSessionDecline(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  result = swift_bridgeObjectRelease();
  v3 = *(_QWORD *)(a1 + 80);
  if (v3 >> 60 != 15)
    return sub_1AD00412C(*(_QWORD *)(a1 + 72), v3);
  return result;
}

uint64_t initializeWithCopy for IDSSessionDecline(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  v6 = (uint64_t *)(a2 + 72);
  v7 = *(_QWORD *)(a2 + 80);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_1AD0040A0(*v6, v7);
    *(_QWORD *)(a1 + 72) = v8;
    *(_QWORD *)(a1 + 80) = v7;
  }
  return a1;
}

_QWORD *assignWithCopy for IDSSessionDecline(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;

  *a1 = *a2;
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = a2[6];
  a1[5] = a2[5];
  a1[6] = v5;
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a2 + 9;
  v7 = a2[10];
  if (a1[10] >> 60 != 15)
  {
    if (v7 >> 60 != 15)
    {
      v9 = *v6;
      sub_1AD0040A0(*v6, v7);
      v10 = a1[9];
      v11 = a1[10];
      a1[9] = v9;
      a1[10] = v7;
      sub_1AD00412C(v10, v11);
      return a1;
    }
    sub_1AD007EC0((uint64_t)(a1 + 9));
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)(a1 + 9) = *(_OWORD *)v6;
    return a1;
  }
  v8 = *v6;
  sub_1AD0040A0(*v6, v7);
  a1[9] = v8;
  a1[10] = v7;
  return a1;
}

uint64_t assignWithTake for IDSSessionDecline(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v5 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v5;
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)(a2 + 72);
  v7 = *(_QWORD *)(a1 + 80);
  if (v7 >> 60 != 15)
  {
    v8 = *(_QWORD *)(a2 + 80);
    if (v8 >> 60 != 15)
    {
      v9 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 72) = *v6;
      *(_QWORD *)(a1 + 80) = v8;
      sub_1AD00412C(v9, v7);
      return a1;
    }
    sub_1AD007EC0(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSSessionDecline(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 88))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSSessionDecline(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 88) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 88) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSSessionDecline()
{
  return &type metadata for IDSSessionDecline;
}

uint64_t sub_1AD39FE80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v23 = a5;
  v24 = a1;
  v25 = a2;
  v11 = *(_QWORD *)(a6 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, v15, v14);
  v16 = *(_QWORD *)(a6 + 16);
  v17 = *(_QWORD *)(v16 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v17 + 32))(a7, v13, v16);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, a6);
  v26 = a3;
  v27 = a4;
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  v28 = v23;
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63B810();
  v18 = v26;
  v19 = v27;
  sub_1AD0DDA60();
  swift_allocError();
  *(_QWORD *)v20 = 0xD00000000000002ELL;
  *(_QWORD *)(v20 + 8) = 0x80000001AD6A7E70;
  strcpy((char *)(v20 + 16), "Expected Value");
  *(_BYTE *)(v20 + 31) = -18;
  *(_QWORD *)(v20 + 32) = v18;
  *(_QWORD *)(v20 + 40) = v19;
  return swift_willThrow();
}

uint64_t PhotosPoster.$identifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[2];
  v4 = v1[3];
  v3 = v1[4];
  *a1 = v1[1];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 PhotosPoster.$identifier.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  return result;
}

uint64_t PhotosPoster.$assetIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = v1[64];
  v3 = v1[65];
  v4 = v1[66];
  v5 = v1[67];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 PhotosPoster.$assetIdentifier.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[33].n128_i64[0];
  v6 = v1[33].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  v1[32] = *a1;
  v1[33].n128_u64[0] = v3;
  v1[33].n128_u64[1] = v4;
  return result;
}

uint64_t PhotosPoster.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 32))
  {
    v1 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t PhotosPoster.assetIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 536) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 528);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

__n128 sub_1AD3A025C@<Q0>(__int128 *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, __int128 *a7@<X6>, __int128 *a8@<X7>, uint64_t a9@<X8>, __int128 *a10, __int128 *a11, __int128 *a12, __int128 *a13, __int128 *a14, __int128 *a15, __int128 *a16, __int128 *a17, __int128 *a18, __int128 *a19, __int128 *a20,__int128 *a21,__int128 *a22,__int128 *a23,__int128 *a24,__int128 *a25,__int128 *a26,__int128 *a27,__int128 *a28,__int128 *a29,__int128 *a30,__int128 *a31,__int128 *a32,__int128 *a33,__int128 *a34,__int128 *a35,__int128 *a36,__int128 *a37,__int128 *a38,__int128 *a39,__int128 *a40,__int128 *a41)
{
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  __int128 v149;
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  __int128 v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  __int128 v195;
  __int128 v196;
  __int128 v197;
  __int128 v198;
  __int128 v199;
  __int128 v200;
  __int128 v201;
  __int128 v202;
  __int128 v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  __int128 v210;
  __int128 v211;
  __int128 v212;
  __int128 v213;
  __int128 v214;
  __int128 v215;
  __int128 v216;
  __int128 v217;
  __int128 v218;
  __int128 v219;
  __int128 v220;
  __int128 v221;
  __int128 v222;
  __int128 v223;
  __int128 v224;
  __int128 v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  __int128 v232;
  __int128 v233;
  __int128 v234;
  __int128 v235;
  __int128 v236;
  __int128 v237;
  __int128 v238;
  __int128 v239;
  __int128 v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  __int128 v247;
  __int128 v248;
  __int128 v249;
  __int128 v250;
  __int128 v251;
  __int128 v252;
  __int128 v253;
  __int128 v254;
  __int128 v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  __int128 v262;
  __int128 v263;
  __int128 v264;
  __int128 v265;
  __int128 v266;
  __int128 v267;
  __int128 v268;
  __int128 v269;
  __int128 v270;
  __int128 v271;
  __int128 v272;
  __int128 v273;
  __int128 v274;
  __int128 v275;
  __int128 v276;
  __int128 v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  __int128 v284;
  __int128 v285;
  __int128 v286;
  __int128 v287;
  __int128 v288;
  __int128 v289;
  __int128 v290;
  __int128 v291;
  __int128 v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  __int128 v299;
  __int128 v300;
  __int128 v301;
  __int128 v302;
  __int128 v303;
  __int128 v304;
  __int128 v305;
  __int128 v306;
  __int128 v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  __int128 v314;
  __int128 v315;
  __int128 v316;
  __int128 v317;
  __int128 v318;
  __int128 v319;
  __int128 v320;
  __int128 v321;
  __int128 v322;
  __int128 v323;
  __int128 v324;
  __int128 v325;
  __int128 v326;
  __int128 v327;
  __int128 v328;
  __int128 v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  __int128 v336;
  __int128 v337;
  __int128 v338;
  __int128 v339;
  __int128 v340;
  __int128 v341;
  __int128 v342;
  __int128 v343;
  __int128 v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  __int128 v351;
  __int128 v352;
  __int128 v353;
  __int128 v354;
  __int128 v355;
  __int128 v356;
  __int128 v357;
  __int128 v358;
  __int128 v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  __int128 v366;
  __int128 v367;
  __int128 v368;
  __int128 v369;
  __int128 v370;
  __int128 v371;
  __int128 v372;
  __int128 v373;
  __int128 v374;
  __int128 v375;
  __int128 v376;
  __int128 v377;
  __int128 v378;
  __int128 v379;
  __int128 v380;
  __int128 v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  __int128 v388;
  __int128 v389;
  __int128 v390;
  __int128 v391;
  __int128 v392;
  __int128 v393;
  __int128 v394;
  __int128 v395;
  __int128 v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  __int128 v403;
  __int128 v404;
  __int128 v405;
  __int128 v406;
  __int128 v407;
  __int128 v408;
  __int128 v409;
  __int128 v410;
  __int128 v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  __int128 v418;
  __int128 v419;
  __int128 v420;
  __int128 v421;
  __int128 v422;
  __int128 v423;
  __int128 v424;
  __int128 v425;
  __int128 v426;
  __int128 v427;
  __int128 v428;
  __int128 v429;
  __int128 v430;
  __int128 v431;
  __int128 v432;
  __int128 v433;
  __int128 v434;
  __int128 v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  __int128 v439;
  __int128 v440;
  __int128 v441;
  __int128 v442;
  __int128 v443;
  __int128 v444;
  __int128 v445;
  __int128 v446;
  __int128 v447;
  __int128 v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  __int128 v455;
  __int128 v456;
  __int128 v457;
  __int128 v458;
  __int128 v459;
  __int128 v460;
  __int128 v461;
  __int128 v462;
  __int128 v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  __int128 v470;
  __int128 v471;
  __int128 v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  __int128 v476;
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __n128 result;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;

  v41 = a1[10];
  v42 = a1[11];
  v43 = a1[12];
  v44 = *(__int128 *)((char *)a1 + 201);
  v45 = a1[6];
  v46 = a1[7];
  v47 = a1[8];
  v48 = a1[9];
  v49 = a1[2];
  v50 = a1[3];
  v51 = a1[4];
  v52 = a1[5];
  v53 = *a1;
  v54 = a1[1];
  *(_OWORD *)(a9 + 416) = a2[12];
  *(_OWORD *)(a9 + 425) = *(__int128 *)((char *)a2 + 201);
  *(_OWORD *)(a9 + 160) = v41;
  *(_OWORD *)(a9 + 176) = v42;
  *(_OWORD *)(a9 + 192) = v43;
  *(_OWORD *)(a9 + 201) = v44;
  *(_OWORD *)(a9 + 96) = v45;
  *(_OWORD *)(a9 + 112) = v46;
  v55 = a2[10];
  v56 = a2[11];
  v57 = a2[6];
  v58 = a2[7];
  v59 = a2[8];
  v60 = a2[9];
  v61 = a2[2];
  v62 = a2[3];
  v63 = a2[4];
  v64 = a2[5];
  v65 = *a2;
  v66 = a2[1];
  v67 = a3[10];
  v68 = a3[11];
  *(_OWORD *)(a9 + 640) = a3[12];
  *(_OWORD *)(a9 + 649) = *(__int128 *)((char *)a3 + 201);
  v69 = a3[6];
  v70 = a3[7];
  v71 = a3[8];
  v72 = a3[9];
  v73 = a3[2];
  v74 = a3[3];
  v75 = a3[4];
  v76 = a3[5];
  *(_OWORD *)(a9 + 864) = a4[12];
  *(_OWORD *)(a9 + 873) = *(__int128 *)((char *)a4 + 201);
  v77 = *a3;
  v78 = a3[1];
  *(_OWORD *)(a9 + 128) = v47;
  *(_OWORD *)(a9 + 144) = v48;
  *(_OWORD *)(a9 + 32) = v49;
  *(_OWORD *)(a9 + 48) = v50;
  *(_OWORD *)(a9 + 64) = v51;
  *(_OWORD *)(a9 + 80) = v52;
  *(_OWORD *)a9 = v53;
  *(_OWORD *)(a9 + 16) = v54;
  *(_OWORD *)(a9 + 384) = v55;
  *(_OWORD *)(a9 + 400) = v56;
  *(_OWORD *)(a9 + 320) = v57;
  *(_OWORD *)(a9 + 336) = v58;
  *(_OWORD *)(a9 + 352) = v59;
  *(_OWORD *)(a9 + 368) = v60;
  *(_OWORD *)(a9 + 256) = v61;
  *(_OWORD *)(a9 + 272) = v62;
  *(_OWORD *)(a9 + 288) = v63;
  *(_OWORD *)(a9 + 304) = v64;
  *(_OWORD *)(a9 + 224) = v65;
  *(_OWORD *)(a9 + 240) = v66;
  *(_OWORD *)(a9 + 608) = v67;
  *(_OWORD *)(a9 + 624) = v68;
  *(_OWORD *)(a9 + 544) = v69;
  *(_OWORD *)(a9 + 560) = v70;
  v79 = a4[10];
  v80 = a4[11];
  v81 = a4[6];
  v82 = a4[7];
  v83 = a4[8];
  v84 = a4[9];
  v85 = a4[2];
  v86 = a4[3];
  v87 = a4[4];
  v88 = a4[5];
  v89 = *a4;
  v90 = a4[1];
  v91 = a5[10];
  v92 = a5[11];
  *(_OWORD *)(a9 + 1088) = a5[12];
  *(_OWORD *)(a9 + 1097) = *(__int128 *)((char *)a5 + 201);
  v93 = a5[6];
  v94 = a5[7];
  v95 = a5[8];
  v96 = a5[9];
  v97 = a5[2];
  v98 = a5[3];
  v99 = a5[4];
  v100 = a5[5];
  *(_OWORD *)(a9 + 1312) = a6[12];
  *(_OWORD *)(a9 + 1321) = *(__int128 *)((char *)a6 + 201);
  v102 = *a5;
  v101 = a5[1];
  *(_OWORD *)(a9 + 576) = v71;
  *(_OWORD *)(a9 + 592) = v72;
  *(_OWORD *)(a9 + 480) = v73;
  *(_OWORD *)(a9 + 496) = v74;
  *(_OWORD *)(a9 + 512) = v75;
  *(_OWORD *)(a9 + 528) = v76;
  *(_OWORD *)(a9 + 448) = v77;
  *(_OWORD *)(a9 + 464) = v78;
  *(_OWORD *)(a9 + 832) = v79;
  *(_OWORD *)(a9 + 848) = v80;
  *(_OWORD *)(a9 + 768) = v81;
  *(_OWORD *)(a9 + 784) = v82;
  *(_OWORD *)(a9 + 800) = v83;
  *(_OWORD *)(a9 + 816) = v84;
  *(_OWORD *)(a9 + 704) = v85;
  *(_OWORD *)(a9 + 720) = v86;
  *(_OWORD *)(a9 + 736) = v87;
  *(_OWORD *)(a9 + 752) = v88;
  *(_OWORD *)(a9 + 672) = v89;
  *(_OWORD *)(a9 + 688) = v90;
  *(_OWORD *)(a9 + 1056) = v91;
  *(_OWORD *)(a9 + 1072) = v92;
  v103 = a6[10];
  v104 = a6[11];
  v105 = a6[6];
  v106 = a6[7];
  v107 = a6[8];
  v108 = a6[9];
  v109 = a6[2];
  v110 = a6[3];
  v111 = a6[4];
  v112 = a6[5];
  v113 = *a6;
  v114 = a6[1];
  *(_OWORD *)(a9 + 1536) = a7[12];
  *(_OWORD *)(a9 + 1545) = *(__int128 *)((char *)a7 + 201);
  *(_OWORD *)(a9 + 1760) = a8[12];
  *(_OWORD *)(a9 + 1769) = *(__int128 *)((char *)a8 + 201);
  *(_OWORD *)(a9 + 1984) = a10[12];
  *(_OWORD *)(a9 + 1993) = *(__int128 *)((char *)a10 + 201);
  *(_OWORD *)(a9 + 2208) = a11[12];
  *(_OWORD *)(a9 + 2217) = *(__int128 *)((char *)a11 + 201);
  *(_OWORD *)(a9 + 2432) = a12[12];
  *(_OWORD *)(a9 + 2441) = *(__int128 *)((char *)a12 + 201);
  *(_OWORD *)(a9 + 2656) = a13[12];
  *(_OWORD *)(a9 + 2665) = *(__int128 *)((char *)a13 + 201);
  *(_OWORD *)(a9 + 2880) = a14[12];
  *(_OWORD *)(a9 + 2889) = *(__int128 *)((char *)a14 + 201);
  *(_OWORD *)(a9 + 3104) = a15[12];
  *(_OWORD *)(a9 + 3113) = *(__int128 *)((char *)a15 + 201);
  *(_OWORD *)(a9 + 3328) = a16[12];
  *(_OWORD *)(a9 + 3337) = *(__int128 *)((char *)a16 + 201);
  *(_OWORD *)(a9 + 3552) = a17[12];
  *(_OWORD *)(a9 + 3561) = *(__int128 *)((char *)a17 + 201);
  *(_OWORD *)(a9 + 3776) = a18[12];
  *(_OWORD *)(a9 + 3785) = *(__int128 *)((char *)a18 + 201);
  *(_OWORD *)(a9 + 4000) = a19[12];
  *(_OWORD *)(a9 + 4009) = *(__int128 *)((char *)a19 + 201);
  *(_OWORD *)(a9 + 4224) = a20[12];
  *(_OWORD *)(a9 + 4233) = *(__int128 *)((char *)a20 + 201);
  *(_OWORD *)(a9 + 4448) = a21[12];
  *(_OWORD *)(a9 + 4457) = *(__int128 *)((char *)a21 + 201);
  *(_OWORD *)(a9 + 4672) = a22[12];
  *(_OWORD *)(a9 + 4681) = *(__int128 *)((char *)a22 + 201);
  *(_OWORD *)(a9 + 4896) = a23[12];
  *(_OWORD *)(a9 + 4905) = *(__int128 *)((char *)a23 + 201);
  *(_OWORD *)(a9 + 5120) = a24[12];
  *(_OWORD *)(a9 + 5129) = *(__int128 *)((char *)a24 + 201);
  *(_OWORD *)(a9 + 5344) = a25[12];
  *(_OWORD *)(a9 + 5353) = *(__int128 *)((char *)a25 + 201);
  *(_OWORD *)(a9 + 5568) = a26[12];
  *(_OWORD *)(a9 + 5577) = *(__int128 *)((char *)a26 + 201);
  *(_OWORD *)(a9 + 5792) = a27[12];
  *(_OWORD *)(a9 + 5801) = *(__int128 *)((char *)a27 + 201);
  *(_OWORD *)(a9 + 6016) = a28[12];
  *(_OWORD *)(a9 + 6025) = *(__int128 *)((char *)a28 + 201);
  *(_OWORD *)(a9 + 6240) = a29[12];
  *(_OWORD *)(a9 + 6249) = *(__int128 *)((char *)a29 + 201);
  *(_OWORD *)(a9 + 6464) = a30[12];
  *(_OWORD *)(a9 + 6473) = *(__int128 *)((char *)a30 + 201);
  *(_OWORD *)(a9 + 6688) = a31[12];
  *(_OWORD *)(a9 + 6697) = *(__int128 *)((char *)a31 + 201);
  *(_OWORD *)(a9 + 6912) = a32[12];
  *(_OWORD *)(a9 + 6921) = *(__int128 *)((char *)a32 + 201);
  *(_OWORD *)(a9 + 7136) = a33[12];
  *(_OWORD *)(a9 + 7145) = *(__int128 *)((char *)a33 + 201);
  *(_OWORD *)(a9 + 7360) = a34[12];
  *(_OWORD *)(a9 + 7369) = *(__int128 *)((char *)a34 + 201);
  *(_OWORD *)(a9 + 7584) = a35[12];
  *(_OWORD *)(a9 + 7593) = *(__int128 *)((char *)a35 + 201);
  *(_OWORD *)(a9 + 7808) = a36[12];
  *(_OWORD *)(a9 + 7817) = *(__int128 *)((char *)a36 + 201);
  *(_OWORD *)(a9 + 8032) = a37[12];
  *(_OWORD *)(a9 + 8041) = *(__int128 *)((char *)a37 + 201);
  *(_OWORD *)(a9 + 8256) = a38[12];
  *(_OWORD *)(a9 + 8265) = *(__int128 *)((char *)a38 + 201);
  *(_OWORD *)(a9 + 8480) = a39[12];
  *(_OWORD *)(a9 + 8489) = *(__int128 *)((char *)a39 + 201);
  *(_OWORD *)(a9 + 8704) = a40[12];
  *(_OWORD *)(a9 + 8713) = *(__int128 *)((char *)a40 + 201);
  *(_OWORD *)(a9 + 8928) = a41[12];
  *(_OWORD *)(a9 + 8937) = *(__int128 *)((char *)a41 + 201);
  *(_OWORD *)(a9 + 992) = v93;
  *(_OWORD *)(a9 + 1008) = v94;
  v115 = a7[10];
  v116 = a7[11];
  v117 = a7[6];
  v118 = a7[7];
  v119 = a7[8];
  v120 = a7[9];
  v121 = a7[2];
  v122 = a7[3];
  v123 = a7[4];
  v124 = a7[5];
  v125 = *a7;
  v126 = a7[1];
  *(_OWORD *)(a9 + 1024) = v95;
  *(_OWORD *)(a9 + 1040) = v96;
  *(_OWORD *)(a9 + 928) = v97;
  *(_OWORD *)(a9 + 944) = v98;
  *(_OWORD *)(a9 + 960) = v99;
  *(_OWORD *)(a9 + 976) = v100;
  *(_OWORD *)(a9 + 896) = v102;
  *(_OWORD *)(a9 + 912) = v101;
  *(_OWORD *)(a9 + 1280) = v103;
  *(_OWORD *)(a9 + 1296) = v104;
  *(_OWORD *)(a9 + 1216) = v105;
  *(_OWORD *)(a9 + 1232) = v106;
  v127 = a8[10];
  v128 = a8[11];
  v129 = a8[6];
  v130 = a8[7];
  v131 = a8[8];
  v132 = a8[9];
  v133 = a8[2];
  v134 = a8[3];
  v135 = a8[4];
  v136 = a8[5];
  v137 = *a8;
  v138 = a8[1];
  *(_OWORD *)(a9 + 1248) = v107;
  *(_OWORD *)(a9 + 1264) = v108;
  *(_OWORD *)(a9 + 1152) = v109;
  *(_OWORD *)(a9 + 1168) = v110;
  *(_OWORD *)(a9 + 1184) = v111;
  *(_OWORD *)(a9 + 1200) = v112;
  *(_OWORD *)(a9 + 1120) = v113;
  *(_OWORD *)(a9 + 1136) = v114;
  *(_OWORD *)(a9 + 1504) = v115;
  *(_OWORD *)(a9 + 1520) = v116;
  *(_OWORD *)(a9 + 1440) = v117;
  *(_OWORD *)(a9 + 1456) = v118;
  v139 = a10[10];
  v140 = a10[11];
  v141 = a10[6];
  v142 = a10[7];
  v143 = a10[8];
  v144 = a10[9];
  v145 = a10[2];
  v146 = a10[3];
  v147 = a10[4];
  v148 = a10[5];
  v149 = *a10;
  v150 = a10[1];
  *(_OWORD *)(a9 + 1472) = v119;
  *(_OWORD *)(a9 + 1488) = v120;
  *(_OWORD *)(a9 + 1376) = v121;
  *(_OWORD *)(a9 + 1392) = v122;
  *(_OWORD *)(a9 + 1408) = v123;
  *(_OWORD *)(a9 + 1424) = v124;
  *(_OWORD *)(a9 + 1344) = v125;
  *(_OWORD *)(a9 + 1360) = v126;
  *(_OWORD *)(a9 + 1728) = v127;
  *(_OWORD *)(a9 + 1744) = v128;
  *(_OWORD *)(a9 + 1664) = v129;
  *(_OWORD *)(a9 + 1680) = v130;
  v151 = a11[10];
  v152 = a11[11];
  v153 = a11[6];
  v154 = a11[7];
  v155 = a11[8];
  v156 = a11[9];
  v157 = a11[2];
  v158 = a11[3];
  v159 = a11[4];
  v160 = a11[5];
  v161 = *a11;
  v162 = a11[1];
  *(_OWORD *)(a9 + 1696) = v131;
  *(_OWORD *)(a9 + 1712) = v132;
  *(_OWORD *)(a9 + 1600) = v133;
  *(_OWORD *)(a9 + 1616) = v134;
  *(_OWORD *)(a9 + 1632) = v135;
  *(_OWORD *)(a9 + 1648) = v136;
  *(_OWORD *)(a9 + 1568) = v137;
  *(_OWORD *)(a9 + 1584) = v138;
  *(_OWORD *)(a9 + 1952) = v139;
  *(_OWORD *)(a9 + 1968) = v140;
  *(_OWORD *)(a9 + 1888) = v141;
  *(_OWORD *)(a9 + 1904) = v142;
  v163 = a12[10];
  v164 = a12[11];
  v165 = a12[6];
  v166 = a12[7];
  v167 = a12[8];
  v168 = a12[9];
  v169 = a12[2];
  v170 = a12[3];
  v171 = a12[4];
  v172 = a12[5];
  v173 = *a12;
  v174 = a12[1];
  *(_OWORD *)(a9 + 1920) = v143;
  *(_OWORD *)(a9 + 1936) = v144;
  *(_OWORD *)(a9 + 1824) = v145;
  *(_OWORD *)(a9 + 1840) = v146;
  *(_OWORD *)(a9 + 1856) = v147;
  *(_OWORD *)(a9 + 1872) = v148;
  *(_OWORD *)(a9 + 1792) = v149;
  *(_OWORD *)(a9 + 1808) = v150;
  *(_OWORD *)(a9 + 2176) = v151;
  *(_OWORD *)(a9 + 2192) = v152;
  *(_OWORD *)(a9 + 2112) = v153;
  *(_OWORD *)(a9 + 2128) = v154;
  v175 = a13[10];
  v176 = a13[11];
  v177 = a13[6];
  v178 = a13[7];
  v179 = a13[8];
  v180 = a13[9];
  v181 = a13[2];
  v182 = a13[3];
  v183 = a13[4];
  v184 = a13[5];
  v185 = *a13;
  v186 = a13[1];
  *(_OWORD *)(a9 + 2144) = v155;
  *(_OWORD *)(a9 + 2160) = v156;
  *(_OWORD *)(a9 + 2048) = v157;
  *(_OWORD *)(a9 + 2064) = v158;
  *(_OWORD *)(a9 + 2080) = v159;
  *(_OWORD *)(a9 + 2096) = v160;
  *(_OWORD *)(a9 + 2016) = v161;
  *(_OWORD *)(a9 + 2032) = v162;
  *(_OWORD *)(a9 + 2400) = v163;
  *(_OWORD *)(a9 + 2416) = v164;
  *(_OWORD *)(a9 + 2336) = v165;
  *(_OWORD *)(a9 + 2352) = v166;
  v187 = a14[10];
  v188 = a14[11];
  v189 = a14[6];
  v190 = a14[7];
  v191 = a14[8];
  v192 = a14[9];
  v193 = a14[2];
  v194 = a14[3];
  v195 = a14[4];
  v196 = a14[5];
  v197 = *a14;
  v198 = a14[1];
  *(_OWORD *)(a9 + 2368) = v167;
  *(_OWORD *)(a9 + 2384) = v168;
  *(_OWORD *)(a9 + 2272) = v169;
  *(_OWORD *)(a9 + 2288) = v170;
  *(_OWORD *)(a9 + 2304) = v171;
  *(_OWORD *)(a9 + 2320) = v172;
  *(_OWORD *)(a9 + 2240) = v173;
  *(_OWORD *)(a9 + 2256) = v174;
  *(_OWORD *)(a9 + 2624) = v175;
  *(_OWORD *)(a9 + 2640) = v176;
  *(_OWORD *)(a9 + 2560) = v177;
  *(_OWORD *)(a9 + 2576) = v178;
  v199 = a15[10];
  v200 = a15[11];
  v201 = a15[6];
  v202 = a15[7];
  v203 = a15[8];
  v204 = a15[9];
  v205 = a15[2];
  v206 = a15[3];
  v207 = a15[4];
  v208 = a15[5];
  v209 = *a15;
  v210 = a15[1];
  *(_OWORD *)(a9 + 2592) = v179;
  *(_OWORD *)(a9 + 2608) = v180;
  *(_OWORD *)(a9 + 2496) = v181;
  *(_OWORD *)(a9 + 2512) = v182;
  *(_OWORD *)(a9 + 2528) = v183;
  *(_OWORD *)(a9 + 2544) = v184;
  *(_OWORD *)(a9 + 2464) = v185;
  *(_OWORD *)(a9 + 2480) = v186;
  *(_OWORD *)(a9 + 2848) = v187;
  *(_OWORD *)(a9 + 2864) = v188;
  *(_OWORD *)(a9 + 2784) = v189;
  *(_OWORD *)(a9 + 2800) = v190;
  v211 = a16[10];
  v212 = a16[11];
  v213 = a16[6];
  v214 = a16[7];
  v215 = a16[8];
  v216 = a16[9];
  v217 = a16[2];
  v218 = a16[3];
  v219 = a16[4];
  v220 = a16[5];
  v221 = *a16;
  v222 = a16[1];
  *(_OWORD *)(a9 + 2816) = v191;
  *(_OWORD *)(a9 + 2832) = v192;
  *(_OWORD *)(a9 + 2720) = v193;
  *(_OWORD *)(a9 + 2736) = v194;
  *(_OWORD *)(a9 + 2752) = v195;
  *(_OWORD *)(a9 + 2768) = v196;
  *(_OWORD *)(a9 + 2688) = v197;
  *(_OWORD *)(a9 + 2704) = v198;
  *(_OWORD *)(a9 + 3072) = v199;
  *(_OWORD *)(a9 + 3088) = v200;
  *(_OWORD *)(a9 + 3008) = v201;
  *(_OWORD *)(a9 + 3024) = v202;
  v223 = a17[10];
  v224 = a17[11];
  v225 = a17[6];
  v226 = a17[7];
  v227 = a17[8];
  v228 = a17[9];
  v229 = a17[2];
  v230 = a17[3];
  v231 = a17[4];
  v232 = a17[5];
  v233 = *a17;
  v234 = a17[1];
  *(_OWORD *)(a9 + 3040) = v203;
  *(_OWORD *)(a9 + 3056) = v204;
  *(_OWORD *)(a9 + 2944) = v205;
  *(_OWORD *)(a9 + 2960) = v206;
  *(_OWORD *)(a9 + 2976) = v207;
  *(_OWORD *)(a9 + 2992) = v208;
  *(_OWORD *)(a9 + 2912) = v209;
  *(_OWORD *)(a9 + 2928) = v210;
  *(_OWORD *)(a9 + 3296) = v211;
  *(_OWORD *)(a9 + 3312) = v212;
  *(_OWORD *)(a9 + 3232) = v213;
  *(_OWORD *)(a9 + 3248) = v214;
  v235 = a18[10];
  v236 = a18[11];
  v237 = a18[6];
  v238 = a18[7];
  v239 = a18[8];
  v240 = a18[9];
  v241 = a18[2];
  v242 = a18[3];
  v243 = a18[4];
  v244 = a18[5];
  v245 = *a18;
  v246 = a18[1];
  *(_OWORD *)(a9 + 3264) = v215;
  *(_OWORD *)(a9 + 3280) = v216;
  *(_OWORD *)(a9 + 3168) = v217;
  *(_OWORD *)(a9 + 3184) = v218;
  *(_OWORD *)(a9 + 3200) = v219;
  *(_OWORD *)(a9 + 3216) = v220;
  *(_OWORD *)(a9 + 3136) = v221;
  *(_OWORD *)(a9 + 3152) = v222;
  *(_OWORD *)(a9 + 3520) = v223;
  *(_OWORD *)(a9 + 3536) = v224;
  *(_OWORD *)(a9 + 3456) = v225;
  *(_OWORD *)(a9 + 3472) = v226;
  v247 = a19[10];
  v248 = a19[11];
  v249 = a19[6];
  v250 = a19[7];
  v251 = a19[8];
  v252 = a19[9];
  v253 = a19[2];
  v254 = a19[3];
  v255 = a19[4];
  v256 = a19[5];
  v257 = *a19;
  v258 = a19[1];
  *(_OWORD *)(a9 + 3488) = v227;
  *(_OWORD *)(a9 + 3504) = v228;
  *(_OWORD *)(a9 + 3392) = v229;
  *(_OWORD *)(a9 + 3408) = v230;
  *(_OWORD *)(a9 + 3424) = v231;
  *(_OWORD *)(a9 + 3440) = v232;
  *(_OWORD *)(a9 + 3360) = v233;
  *(_OWORD *)(a9 + 3376) = v234;
  *(_OWORD *)(a9 + 3744) = v235;
  *(_OWORD *)(a9 + 3760) = v236;
  *(_OWORD *)(a9 + 3680) = v237;
  *(_OWORD *)(a9 + 3696) = v238;
  v259 = a20[10];
  v260 = a20[11];
  v261 = a20[6];
  v262 = a20[7];
  v263 = a20[8];
  v264 = a20[9];
  v265 = a20[2];
  v266 = a20[3];
  v267 = a20[4];
  v268 = a20[5];
  v269 = *a20;
  v270 = a20[1];
  *(_OWORD *)(a9 + 3712) = v239;
  *(_OWORD *)(a9 + 3728) = v240;
  *(_OWORD *)(a9 + 3616) = v241;
  *(_OWORD *)(a9 + 3632) = v242;
  *(_OWORD *)(a9 + 3648) = v243;
  *(_OWORD *)(a9 + 3664) = v244;
  *(_OWORD *)(a9 + 3584) = v245;
  *(_OWORD *)(a9 + 3600) = v246;
  *(_OWORD *)(a9 + 3968) = v247;
  *(_OWORD *)(a9 + 3984) = v248;
  *(_OWORD *)(a9 + 3904) = v249;
  *(_OWORD *)(a9 + 3920) = v250;
  v271 = a21[10];
  v272 = a21[11];
  v273 = a21[6];
  v274 = a21[7];
  v275 = a21[8];
  v276 = a21[9];
  v277 = a21[2];
  v278 = a21[3];
  v279 = a21[4];
  v280 = a21[5];
  v281 = *a21;
  v282 = a21[1];
  *(_OWORD *)(a9 + 3936) = v251;
  *(_OWORD *)(a9 + 3952) = v252;
  *(_OWORD *)(a9 + 3840) = v253;
  *(_OWORD *)(a9 + 3856) = v254;
  *(_OWORD *)(a9 + 3872) = v255;
  *(_OWORD *)(a9 + 3888) = v256;
  *(_OWORD *)(a9 + 3808) = v257;
  *(_OWORD *)(a9 + 3824) = v258;
  *(_OWORD *)(a9 + 4192) = v259;
  *(_OWORD *)(a9 + 4208) = v260;
  *(_OWORD *)(a9 + 4128) = v261;
  *(_OWORD *)(a9 + 4144) = v262;
  v283 = a22[10];
  v284 = a22[11];
  v285 = a22[6];
  v286 = a22[7];
  v287 = a22[8];
  v288 = a22[9];
  v289 = a22[2];
  v290 = a22[3];
  v291 = a22[4];
  v292 = a22[5];
  v293 = *a22;
  v294 = a22[1];
  *(_OWORD *)(a9 + 4160) = v263;
  *(_OWORD *)(a9 + 4176) = v264;
  *(_OWORD *)(a9 + 4064) = v265;
  *(_OWORD *)(a9 + 4080) = v266;
  *(_OWORD *)(a9 + 4096) = v267;
  *(_OWORD *)(a9 + 4112) = v268;
  *(_OWORD *)(a9 + 4032) = v269;
  *(_OWORD *)(a9 + 4048) = v270;
  *(_OWORD *)(a9 + 4416) = v271;
  *(_OWORD *)(a9 + 4432) = v272;
  *(_OWORD *)(a9 + 4352) = v273;
  *(_OWORD *)(a9 + 4368) = v274;
  v295 = a23[10];
  v296 = a23[11];
  v297 = a23[6];
  v298 = a23[7];
  v299 = a23[8];
  v300 = a23[9];
  v301 = a23[2];
  v302 = a23[3];
  v303 = a23[4];
  v304 = a23[5];
  v305 = *a23;
  v306 = a23[1];
  *(_OWORD *)(a9 + 4384) = v275;
  *(_OWORD *)(a9 + 4400) = v276;
  *(_OWORD *)(a9 + 4288) = v277;
  *(_OWORD *)(a9 + 4304) = v278;
  *(_OWORD *)(a9 + 4320) = v279;
  *(_OWORD *)(a9 + 4336) = v280;
  *(_OWORD *)(a9 + 4256) = v281;
  *(_OWORD *)(a9 + 4272) = v282;
  *(_OWORD *)(a9 + 4640) = v283;
  *(_OWORD *)(a9 + 4656) = v284;
  *(_OWORD *)(a9 + 4576) = v285;
  *(_OWORD *)(a9 + 4592) = v286;
  v307 = a24[10];
  v308 = a24[11];
  v309 = a24[6];
  v310 = a24[7];
  v311 = a24[8];
  v312 = a24[9];
  v313 = a24[2];
  v314 = a24[3];
  v315 = a24[4];
  v316 = a24[5];
  v317 = *a24;
  v318 = a24[1];
  *(_OWORD *)(a9 + 4608) = v287;
  *(_OWORD *)(a9 + 4624) = v288;
  *(_OWORD *)(a9 + 4512) = v289;
  *(_OWORD *)(a9 + 4528) = v290;
  *(_OWORD *)(a9 + 4544) = v291;
  *(_OWORD *)(a9 + 4560) = v292;
  *(_OWORD *)(a9 + 4480) = v293;
  *(_OWORD *)(a9 + 4496) = v294;
  *(_OWORD *)(a9 + 4864) = v295;
  *(_OWORD *)(a9 + 4880) = v296;
  *(_OWORD *)(a9 + 4800) = v297;
  *(_OWORD *)(a9 + 4816) = v298;
  v319 = a25[10];
  v320 = a25[11];
  v321 = a25[6];
  v322 = a25[7];
  v323 = a25[8];
  v324 = a25[9];
  v325 = a25[2];
  v326 = a25[3];
  v327 = a25[4];
  v328 = a25[5];
  v329 = *a25;
  v330 = a25[1];
  *(_OWORD *)(a9 + 4832) = v299;
  *(_OWORD *)(a9 + 4848) = v300;
  *(_OWORD *)(a9 + 4736) = v301;
  *(_OWORD *)(a9 + 4752) = v302;
  *(_OWORD *)(a9 + 4768) = v303;
  *(_OWORD *)(a9 + 4784) = v304;
  *(_OWORD *)(a9 + 4704) = v305;
  *(_OWORD *)(a9 + 4720) = v306;
  *(_OWORD *)(a9 + 5088) = v307;
  *(_OWORD *)(a9 + 5104) = v308;
  *(_OWORD *)(a9 + 5024) = v309;
  *(_OWORD *)(a9 + 5040) = v310;
  v331 = a26[10];
  v332 = a26[11];
  v333 = a26[6];
  v334 = a26[7];
  v335 = a26[8];
  v336 = a26[9];
  v337 = a26[2];
  v338 = a26[3];
  v339 = a26[4];
  v340 = a26[5];
  v341 = *a26;
  v342 = a26[1];
  *(_OWORD *)(a9 + 5056) = v311;
  *(_OWORD *)(a9 + 5072) = v312;
  *(_OWORD *)(a9 + 4960) = v313;
  *(_OWORD *)(a9 + 4976) = v314;
  *(_OWORD *)(a9 + 4992) = v315;
  *(_OWORD *)(a9 + 5008) = v316;
  *(_OWORD *)(a9 + 4928) = v317;
  *(_OWORD *)(a9 + 4944) = v318;
  *(_OWORD *)(a9 + 5312) = v319;
  *(_OWORD *)(a9 + 5328) = v320;
  *(_OWORD *)(a9 + 5248) = v321;
  *(_OWORD *)(a9 + 5264) = v322;
  v343 = a27[10];
  v344 = a27[11];
  v345 = a27[6];
  v346 = a27[7];
  v347 = a27[8];
  v348 = a27[9];
  v349 = a27[2];
  v350 = a27[3];
  v351 = a27[4];
  v352 = a27[5];
  v353 = *a27;
  v354 = a27[1];
  *(_OWORD *)(a9 + 5280) = v323;
  *(_OWORD *)(a9 + 5296) = v324;
  *(_OWORD *)(a9 + 5184) = v325;
  *(_OWORD *)(a9 + 5200) = v326;
  *(_OWORD *)(a9 + 5216) = v327;
  *(_OWORD *)(a9 + 5232) = v328;
  *(_OWORD *)(a9 + 5152) = v329;
  *(_OWORD *)(a9 + 5168) = v330;
  *(_OWORD *)(a9 + 5536) = v331;
  *(_OWORD *)(a9 + 5552) = v332;
  *(_OWORD *)(a9 + 5472) = v333;
  *(_OWORD *)(a9 + 5488) = v334;
  v355 = a28[10];
  v356 = a28[11];
  v357 = a28[6];
  v358 = a28[7];
  v359 = a28[8];
  v360 = a28[9];
  v361 = a28[2];
  v362 = a28[3];
  v363 = a28[4];
  v364 = a28[5];
  v365 = *a28;
  v366 = a28[1];
  *(_OWORD *)(a9 + 5504) = v335;
  *(_OWORD *)(a9 + 5520) = v336;
  *(_OWORD *)(a9 + 5408) = v337;
  *(_OWORD *)(a9 + 5424) = v338;
  *(_OWORD *)(a9 + 5440) = v339;
  *(_OWORD *)(a9 + 5456) = v340;
  *(_OWORD *)(a9 + 5376) = v341;
  *(_OWORD *)(a9 + 5392) = v342;
  *(_OWORD *)(a9 + 5760) = v343;
  *(_OWORD *)(a9 + 5776) = v344;
  *(_OWORD *)(a9 + 5696) = v345;
  *(_OWORD *)(a9 + 5712) = v346;
  v367 = a29[10];
  v368 = a29[11];
  v369 = a29[6];
  v370 = a29[7];
  v371 = a29[8];
  v372 = a29[9];
  v373 = a29[2];
  v374 = a29[3];
  v375 = a29[4];
  v376 = a29[5];
  v377 = *a29;
  v378 = a29[1];
  *(_OWORD *)(a9 + 5728) = v347;
  *(_OWORD *)(a9 + 5744) = v348;
  *(_OWORD *)(a9 + 5632) = v349;
  *(_OWORD *)(a9 + 5648) = v350;
  *(_OWORD *)(a9 + 5664) = v351;
  *(_OWORD *)(a9 + 5680) = v352;
  *(_OWORD *)(a9 + 5600) = v353;
  *(_OWORD *)(a9 + 5616) = v354;
  *(_OWORD *)(a9 + 5984) = v355;
  *(_OWORD *)(a9 + 6000) = v356;
  *(_OWORD *)(a9 + 5920) = v357;
  *(_OWORD *)(a9 + 5936) = v358;
  v379 = a30[10];
  v380 = a30[11];
  v381 = a30[6];
  v382 = a30[7];
  v383 = a30[8];
  v384 = a30[9];
  v385 = a30[2];
  v386 = a30[3];
  v387 = a30[4];
  v388 = a30[5];
  v389 = *a30;
  v390 = a30[1];
  *(_OWORD *)(a9 + 5952) = v359;
  *(_OWORD *)(a9 + 5968) = v360;
  *(_OWORD *)(a9 + 5856) = v361;
  *(_OWORD *)(a9 + 5872) = v362;
  *(_OWORD *)(a9 + 5888) = v363;
  *(_OWORD *)(a9 + 5904) = v364;
  *(_OWORD *)(a9 + 5824) = v365;
  *(_OWORD *)(a9 + 5840) = v366;
  *(_OWORD *)(a9 + 6208) = v367;
  *(_OWORD *)(a9 + 6224) = v368;
  *(_OWORD *)(a9 + 6144) = v369;
  *(_OWORD *)(a9 + 6160) = v370;
  v391 = a31[10];
  v392 = a31[11];
  v393 = a31[6];
  v394 = a31[7];
  v395 = a31[8];
  v396 = a31[9];
  v397 = a31[2];
  v398 = a31[3];
  v399 = a31[4];
  v400 = a31[5];
  v401 = *a31;
  v402 = a31[1];
  *(_OWORD *)(a9 + 6176) = v371;
  *(_OWORD *)(a9 + 6192) = v372;
  *(_OWORD *)(a9 + 6080) = v373;
  *(_OWORD *)(a9 + 6096) = v374;
  *(_OWORD *)(a9 + 6112) = v375;
  *(_OWORD *)(a9 + 6128) = v376;
  *(_OWORD *)(a9 + 6048) = v377;
  *(_OWORD *)(a9 + 6064) = v378;
  *(_OWORD *)(a9 + 6432) = v379;
  *(_OWORD *)(a9 + 6448) = v380;
  *(_OWORD *)(a9 + 6368) = v381;
  *(_OWORD *)(a9 + 6384) = v382;
  v403 = a32[10];
  v404 = a32[11];
  v405 = a32[6];
  v406 = a32[7];
  v407 = a32[8];
  v408 = a32[9];
  v409 = a32[2];
  v410 = a32[3];
  v411 = a32[4];
  v412 = a32[5];
  v413 = *a32;
  v414 = a32[1];
  *(_OWORD *)(a9 + 6400) = v383;
  *(_OWORD *)(a9 + 6416) = v384;
  *(_OWORD *)(a9 + 6304) = v385;
  *(_OWORD *)(a9 + 6320) = v386;
  *(_OWORD *)(a9 + 6336) = v387;
  *(_OWORD *)(a9 + 6352) = v388;
  *(_OWORD *)(a9 + 6272) = v389;
  *(_OWORD *)(a9 + 6288) = v390;
  *(_OWORD *)(a9 + 6656) = v391;
  *(_OWORD *)(a9 + 6672) = v392;
  *(_OWORD *)(a9 + 6592) = v393;
  *(_OWORD *)(a9 + 6608) = v394;
  v415 = a33[10];
  v416 = a33[11];
  v417 = a33[6];
  v418 = a33[7];
  v419 = a33[8];
  v420 = a33[9];
  v421 = a33[2];
  v422 = a33[3];
  v423 = a33[4];
  v424 = a33[5];
  v425 = *a33;
  v426 = a33[1];
  *(_OWORD *)(a9 + 6624) = v395;
  *(_OWORD *)(a9 + 6640) = v396;
  *(_OWORD *)(a9 + 6528) = v397;
  *(_OWORD *)(a9 + 6544) = v398;
  *(_OWORD *)(a9 + 6560) = v399;
  *(_OWORD *)(a9 + 6576) = v400;
  *(_OWORD *)(a9 + 6496) = v401;
  *(_OWORD *)(a9 + 6512) = v402;
  *(_OWORD *)(a9 + 6880) = v403;
  *(_OWORD *)(a9 + 6896) = v404;
  *(_OWORD *)(a9 + 6816) = v405;
  *(_OWORD *)(a9 + 6832) = v406;
  v427 = a34[10];
  v428 = a34[11];
  v429 = a34[6];
  v430 = a34[7];
  v431 = a34[8];
  v432 = a34[9];
  v433 = a34[2];
  v434 = a34[3];
  v435 = a34[4];
  v436 = a34[5];
  v437 = *a34;
  v438 = a34[1];
  *(_OWORD *)(a9 + 6848) = v407;
  *(_OWORD *)(a9 + 6864) = v408;
  *(_OWORD *)(a9 + 6752) = v409;
  *(_OWORD *)(a9 + 6768) = v410;
  *(_OWORD *)(a9 + 6784) = v411;
  *(_OWORD *)(a9 + 6800) = v412;
  *(_OWORD *)(a9 + 6720) = v413;
  *(_OWORD *)(a9 + 6736) = v414;
  *(_OWORD *)(a9 + 7104) = v415;
  *(_OWORD *)(a9 + 7120) = v416;
  *(_OWORD *)(a9 + 7040) = v417;
  *(_OWORD *)(a9 + 7056) = v418;
  v439 = a35[10];
  v440 = a35[11];
  v441 = a35[6];
  v442 = a35[7];
  v443 = a35[8];
  v444 = a35[9];
  v445 = a35[2];
  v446 = a35[3];
  v447 = a35[4];
  v448 = a35[5];
  v449 = *a35;
  v450 = a35[1];
  *(_OWORD *)(a9 + 7072) = v419;
  *(_OWORD *)(a9 + 7088) = v420;
  *(_OWORD *)(a9 + 6976) = v421;
  *(_OWORD *)(a9 + 6992) = v422;
  *(_OWORD *)(a9 + 7008) = v423;
  *(_OWORD *)(a9 + 7024) = v424;
  *(_OWORD *)(a9 + 6944) = v425;
  *(_OWORD *)(a9 + 6960) = v426;
  *(_OWORD *)(a9 + 7328) = v427;
  *(_OWORD *)(a9 + 7344) = v428;
  *(_OWORD *)(a9 + 7264) = v429;
  *(_OWORD *)(a9 + 7280) = v430;
  v451 = a36[10];
  v452 = a36[11];
  v453 = a36[6];
  v454 = a36[7];
  v455 = a36[8];
  v456 = a36[9];
  v457 = a36[2];
  v458 = a36[3];
  v459 = a36[4];
  v460 = a36[5];
  v461 = *a36;
  v462 = a36[1];
  *(_OWORD *)(a9 + 7296) = v431;
  *(_OWORD *)(a9 + 7312) = v432;
  *(_OWORD *)(a9 + 7200) = v433;
  *(_OWORD *)(a9 + 7216) = v434;
  *(_OWORD *)(a9 + 7232) = v435;
  *(_OWORD *)(a9 + 7248) = v436;
  *(_OWORD *)(a9 + 7168) = v437;
  *(_OWORD *)(a9 + 7184) = v438;
  *(_OWORD *)(a9 + 7552) = v439;
  *(_OWORD *)(a9 + 7568) = v440;
  *(_OWORD *)(a9 + 7488) = v441;
  *(_OWORD *)(a9 + 7504) = v442;
  v463 = a37[10];
  v464 = a37[11];
  v465 = a37[6];
  v466 = a37[7];
  v467 = a37[8];
  v468 = a37[9];
  v469 = a37[2];
  v470 = a37[3];
  v471 = a37[4];
  v472 = a37[5];
  v473 = *a37;
  v474 = a37[1];
  *(_OWORD *)(a9 + 7520) = v443;
  *(_OWORD *)(a9 + 7536) = v444;
  *(_OWORD *)(a9 + 7424) = v445;
  *(_OWORD *)(a9 + 7440) = v446;
  *(_OWORD *)(a9 + 7456) = v447;
  *(_OWORD *)(a9 + 7472) = v448;
  *(_OWORD *)(a9 + 7392) = v449;
  *(_OWORD *)(a9 + 7408) = v450;
  *(_OWORD *)(a9 + 7776) = v451;
  *(_OWORD *)(a9 + 7792) = v452;
  *(_OWORD *)(a9 + 7712) = v453;
  *(_OWORD *)(a9 + 7728) = v454;
  v475 = a38[10];
  v476 = a38[11];
  v477 = a38[6];
  v478 = a38[7];
  v479 = a38[8];
  v480 = a38[9];
  v481 = a38[2];
  v482 = a38[3];
  v483 = a38[4];
  v484 = a38[5];
  v485 = *a38;
  v486 = a38[1];
  *(_OWORD *)(a9 + 7744) = v455;
  *(_OWORD *)(a9 + 7760) = v456;
  *(_OWORD *)(a9 + 7648) = v457;
  *(_OWORD *)(a9 + 7664) = v458;
  *(_OWORD *)(a9 + 7680) = v459;
  *(_OWORD *)(a9 + 7696) = v460;
  *(_OWORD *)(a9 + 7616) = v461;
  *(_OWORD *)(a9 + 7632) = v462;
  *(_OWORD *)(a9 + 8000) = v463;
  *(_OWORD *)(a9 + 8016) = v464;
  *(_OWORD *)(a9 + 7936) = v465;
  *(_OWORD *)(a9 + 7952) = v466;
  v487 = a39[10];
  v488 = a39[11];
  v489 = a39[6];
  v490 = a39[7];
  v491 = a39[8];
  v492 = a39[9];
  v493 = a39[2];
  v494 = a39[3];
  v495 = a39[4];
  v496 = a39[5];
  v497 = *a39;
  v498 = a39[1];
  *(_OWORD *)(a9 + 7968) = v467;
  *(_OWORD *)(a9 + 7984) = v468;
  *(_OWORD *)(a9 + 7872) = v469;
  *(_OWORD *)(a9 + 7888) = v470;
  *(_OWORD *)(a9 + 7904) = v471;
  *(_OWORD *)(a9 + 7920) = v472;
  *(_OWORD *)(a9 + 7840) = v473;
  *(_OWORD *)(a9 + 7856) = v474;
  *(_OWORD *)(a9 + 8224) = v475;
  *(_OWORD *)(a9 + 8240) = v476;
  *(_OWORD *)(a9 + 8160) = v477;
  *(_OWORD *)(a9 + 8176) = v478;
  v499 = a40[10];
  v500 = a40[11];
  v501 = a40[6];
  v502 = a40[7];
  v503 = a40[8];
  v504 = a40[9];
  v505 = a40[2];
  v506 = a40[3];
  v507 = a40[4];
  v508 = a40[5];
  v509 = *a40;
  v510 = a40[1];
  *(_OWORD *)(a9 + 0x2000) = v479;
  *(_OWORD *)(a9 + 8208) = v480;
  *(_OWORD *)(a9 + 8096) = v481;
  *(_OWORD *)(a9 + 8112) = v482;
  *(_OWORD *)(a9 + 8128) = v483;
  *(_OWORD *)(a9 + 8144) = v484;
  *(_OWORD *)(a9 + 8064) = v485;
  *(_OWORD *)(a9 + 8080) = v486;
  *(_OWORD *)(a9 + 8448) = v487;
  *(_OWORD *)(a9 + 8464) = v488;
  *(_OWORD *)(a9 + 8384) = v489;
  *(_OWORD *)(a9 + 8400) = v490;
  result = (__n128)a41[10];
  v512 = a41[11];
  v513 = a41[6];
  v514 = a41[7];
  v515 = a41[8];
  v516 = a41[9];
  v517 = a41[2];
  v518 = a41[3];
  v519 = a41[4];
  v520 = a41[5];
  v521 = *a41;
  v522 = a41[1];
  *(_OWORD *)(a9 + 8416) = v491;
  *(_OWORD *)(a9 + 8432) = v492;
  *(_OWORD *)(a9 + 8320) = v493;
  *(_OWORD *)(a9 + 8336) = v494;
  *(_OWORD *)(a9 + 8352) = v495;
  *(_OWORD *)(a9 + 8368) = v496;
  *(_OWORD *)(a9 + 8288) = v497;
  *(_OWORD *)(a9 + 8304) = v498;
  *(_OWORD *)(a9 + 8672) = v499;
  *(_OWORD *)(a9 + 8688) = v500;
  *(_OWORD *)(a9 + 8608) = v501;
  *(_OWORD *)(a9 + 8624) = v502;
  *(_OWORD *)(a9 + 8640) = v503;
  *(_OWORD *)(a9 + 8656) = v504;
  *(_OWORD *)(a9 + 8544) = v505;
  *(_OWORD *)(a9 + 8560) = v506;
  *(_OWORD *)(a9 + 8576) = v507;
  *(_OWORD *)(a9 + 8592) = v508;
  *(_OWORD *)(a9 + 8512) = v509;
  *(_OWORD *)(a9 + 8528) = v510;
  *(__n128 *)(a9 + 8896) = result;
  *(_OWORD *)(a9 + 8912) = v512;
  *(_OWORD *)(a9 + 8832) = v513;
  *(_OWORD *)(a9 + 8848) = v514;
  *(_OWORD *)(a9 + 8864) = v515;
  *(_OWORD *)(a9 + 8880) = v516;
  *(_OWORD *)(a9 + 8768) = v517;
  *(_OWORD *)(a9 + 8784) = v518;
  *(_OWORD *)(a9 + 8800) = v519;
  *(_OWORD *)(a9 + 8816) = v520;
  *(_OWORD *)(a9 + 8736) = v521;
  *(_OWORD *)(a9 + 8752) = v522;
  return result;
}

uint64_t AvatarRecord.$identifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 AvatarRecord.$identifier.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t AvatarRecord.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

_QWORD *MemojiPoster.avatarImage.setter(_QWORD *a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[15];
  uint64_t v12;

  sub_1AD0CFB8C((uint64_t)a1, (uint64_t)v11);
  sub_1AD009758(v1 + 32, &qword_1ED2E2680);
  v3 = v11[13];
  *(_OWORD *)(v1 + 224) = v11[12];
  *(_OWORD *)(v1 + 240) = v3;
  *(_OWORD *)(v1 + 256) = v11[14];
  *(_QWORD *)(v1 + 272) = v12;
  v4 = v11[9];
  *(_OWORD *)(v1 + 160) = v11[8];
  *(_OWORD *)(v1 + 176) = v4;
  v5 = v11[11];
  *(_OWORD *)(v1 + 192) = v11[10];
  *(_OWORD *)(v1 + 208) = v5;
  v6 = v11[5];
  *(_OWORD *)(v1 + 96) = v11[4];
  *(_OWORD *)(v1 + 112) = v6;
  v7 = v11[7];
  *(_OWORD *)(v1 + 128) = v11[6];
  *(_OWORD *)(v1 + 144) = v7;
  v8 = v11[1];
  *(_OWORD *)(v1 + 32) = v11[0];
  *(_OWORD *)(v1 + 48) = v8;
  v9 = v11[3];
  *(_OWORD *)(v1 + 64) = v11[2];
  *(_OWORD *)(v1 + 80) = v9;
  return sub_1AD046A30(a1);
}

uint64_t MemojiPoster.$avatarImage.setter(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE __src[440];

  sub_1ACFF64C0(a1, (uint64_t)__src, &qword_1ED2E2FE8);
  v3 = (void *)(v1 + 32);
  sub_1AD009758((uint64_t)v3, &qword_1ED2E2FE8);
  memcpy(v3, __src, 0x1B8uLL);
  return sub_1AD009758(a1, &qword_1ED2E2FE8);
}

uint64_t MemojiPoster.$avatarImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1 + 32, a1, &qword_1ED2E2FE8);
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.$groupName.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[23];
  v2 = v1[24];
  v4 = v1[25];
  v5 = v1[26];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 PosterArchive.Configuration.TitleStyleConfiguration.$groupName.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 200);
  v6 = *(_QWORD *)(v1 + 208);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 184) = *a1;
  *(_QWORD *)(v1 + 200) = v3;
  *(_QWORD *)(v1 + 208) = v4;
  return result;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.groupName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 208) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 200);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t PhotosPoster.Media.$assetUUID.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[1];
  v2 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 PhotosPoster.Media.$assetUUID.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  return result;
}

uint64_t PhotosPoster.Media.$subpath.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[6];
  v4 = v1[7];
  v3 = v1[8];
  *a1 = v1[5];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 PhotosPoster.Media.$subpath.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 40) = *a1;
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v4;
  return result;
}

uint64_t PhotosPoster.Media.assetUUID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 32) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t PhotosPoster.Media.subpath.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 64))
  {
    v1 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t PhotosPoster.ParallaxLayer.$identifier.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[61];
  v4 = v1[62];
  v3 = v1[63];
  *a1 = v1[60];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 PhotosPoster.ParallaxLayer.$identifier.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  v1[30] = *a1;
  v1[31].n128_u64[0] = v3;
  v1[31].n128_u64[1] = v4;
  return result;
}

_QWORD *PhotosPoster.ParallaxLayer.image.setter(_QWORD *a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[15];
  uint64_t v12;

  sub_1AD0CFB8C((uint64_t)a1, (uint64_t)v11);
  sub_1AD009758(v1, &qword_1ED2E2680);
  v3 = v11[13];
  *(_OWORD *)(v1 + 192) = v11[12];
  *(_OWORD *)(v1 + 208) = v3;
  *(_OWORD *)(v1 + 224) = v11[14];
  *(_QWORD *)(v1 + 240) = v12;
  v4 = v11[9];
  *(_OWORD *)(v1 + 128) = v11[8];
  *(_OWORD *)(v1 + 144) = v4;
  v5 = v11[11];
  *(_OWORD *)(v1 + 160) = v11[10];
  *(_OWORD *)(v1 + 176) = v5;
  v6 = v11[5];
  *(_OWORD *)(v1 + 64) = v11[4];
  *(_OWORD *)(v1 + 80) = v6;
  v7 = v11[7];
  *(_OWORD *)(v1 + 96) = v11[6];
  *(_OWORD *)(v1 + 112) = v7;
  v8 = v11[1];
  *(_OWORD *)v1 = v11[0];
  *(_OWORD *)(v1 + 16) = v8;
  v9 = v11[3];
  *(_OWORD *)(v1 + 32) = v11[2];
  *(_OWORD *)(v1 + 48) = v9;
  return sub_1AD046A30(a1);
}

uint64_t PhotosPoster.ParallaxLayer.$image.setter(uint64_t a1)
{
  void *v1;
  _BYTE __src[440];

  sub_1ACFF64C0(a1, (uint64_t)__src, &qword_1ED2E2FE8);
  sub_1AD009758((uint64_t)v1, &qword_1ED2E2FE8);
  memcpy(v1, __src, 0x1B8uLL);
  return sub_1AD009758(a1, &qword_1ED2E2FE8);
}

uint64_t PhotosPoster.ParallaxLayer.$image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, &qword_1ED2E2FE8);
}

uint64_t PhotosPoster.ParallaxLayer.identifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 504))
  {
    v1 = *(_QWORD *)(v0 + 496);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD3A18A8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD3A18DC(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD3A1930()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD3A19A8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD3A19D8(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD3A1A28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD3A1A44(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD3A1A88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD3A1B00()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AD3A1B98
                                                                     + 4 * asc_1AD67E670[*v0]))(0xD00000000000001BLL, 0x80000001AD69D980);
}

unint64_t sub_1AD3A1B98()
{
  return 0xD000000000000018;
}

uint64_t sub_1AD3A1BEC@<X0>(uint64_t a1@<X8>)
{
  return a1 + 3;
}

uint64_t sub_1AD3A1BFC@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8;
}

uint64_t sub_1AD3A1C0C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 4;
}

uint64_t sub_1AD3A1C1C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 11;
}

uint64_t sub_1AD3A1C2C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 4;
}

uint64_t sub_1AD3A1C3C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 11;
}

uint64_t sub_1AD3A1C4C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 1;
}

uint64_t sub_1AD3A1C5C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 5;
}

uint64_t sub_1AD3A1C6C@<X0>(uint64_t a1@<X8>)
{
  return a1 + 8;
}

void sub_1AD3A1C7C()
{
  JUMPOUT(0x1AD3A1C88);
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleLayout.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.NumberingSystem.rawValue.getter()
{
  char *v0;

  return *(_QWORD *)&aLatn_0[8 * *v0];
}

unint64_t PhotosPoster.Layout.ClockLayerOrder.rawValue.getter()
{
  return 0xD000000000000014;
}

uint64_t PhotosPoster.Layout.ClockIntersection.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PhotosPoster.ParallaxLayer.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(v1, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a1 + 192) = v23;
    *(_OWORD *)(a1 + 208) = v4;
    *(_OWORD *)(a1 + 224) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a1 + 128) = v19;
    *(_OWORD *)(a1 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a1 + 160) = v21;
    *(_OWORD *)(a1 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a1 + 64) = v15;
    *(_OWORD *)(a1 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t MemojiPoster.avatarImage.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(v1 + 32, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a1 + 192) = v23;
    *(_OWORD *)(a1 + 208) = v4;
    *(_OWORD *)(a1 + 224) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a1 + 128) = v19;
    *(_OWORD *)(a1 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a1 + 160) = v21;
    *(_OWORD *)(a1 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a1 + 64) = v15;
    *(_OWORD *)(a1 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t PosterArchive.ProviderBundleIdentifier.rawValue.getter(char a1)
{
  if (!a1)
    return 0xD00000000000002ELL;
  if (a1 == 1)
    return 0xD000000000000028;
  return 0xD00000000000002CLL;
}

BlastDoor::PosterArchive::Configuration::SystemTimeFontConfiguration::TimeFontIdentifier __swiftcall PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.init(defaultingRawValue:)(Swift::String defaultingRawValue)
{
  char *v1;
  char *v2;
  BlastDoor::PosterArchive::Configuration::SystemTimeFontConfiguration::TimeFontIdentifier result;
  char v4;
  char v5;

  v2 = v1;
  result = PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.init(rawValue:)(defaultingRawValue).value;
  v4 = v5;
  if (v5 == 16)
    v4 = 12;
  *v2 = v4;
  return result;
}

BlastDoor::PosterArchive::Configuration::SystemTimeFontConfiguration::TimeFontIdentifier_optional __swiftcall PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  BlastDoor::PosterArchive::Configuration::SystemTimeFontConfiguration::TimeFontIdentifier_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AD63BE94();
  result.value = swift_bridgeObjectRelease();
  v5 = 16;
  if (v3 < 0x10)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1AD3A1EF8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD4359BC(*a1, *a2);
}

uint64_t sub_1AD3A1F04()
{
  sub_1AD63C4AC();
  PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.rawValue.getter();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD3A1F68()
{
  PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.rawValue.getter();
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD3A1FB8()
{
  sub_1AD63C4AC();
  PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.rawValue.getter();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

BlastDoor::PosterArchive::Configuration::SystemTimeFontConfiguration::TimeFontIdentifier_optional sub_1AD3A2018(Swift::String *a1)
{
  return PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.init(rawValue:)(*a1);
}

uint64_t sub_1AD3A2024@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AD3A2048()
{
  sub_1AD3CA9B0();
  return sub_1AD63B924();
}

uint64_t sub_1AD3A20A4()
{
  sub_1AD3CA9B0();
  return sub_1AD63B8C4();
}

void PosterArchive.Configuration.SystemTimeFontConfiguration.timeFontIdentifier.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PosterArchive.Configuration.SystemTimeFontConfiguration.timeFontIdentifier.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PosterArchive.Configuration.SystemTimeFontConfiguration.timeFontIdentifier.modify())()
{
  return nullsub_1;
}

double PosterArchive.Configuration.SystemTimeFontConfiguration.weight.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void PosterArchive.Configuration.SystemTimeFontConfiguration.weight.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*PosterArchive.Configuration.SystemTimeFontConfiguration.weight.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.SystemTimeFontConfiguration.isSystemItem.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t PosterArchive.Configuration.SystemTimeFontConfiguration.isSystemItem.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*PosterArchive.Configuration.SystemTimeFontConfiguration.isSystemItem.modify())()
{
  return nullsub_1;
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleAlignment __swiftcall PosterArchive.Configuration.TitleStyleConfiguration.TitleAlignment.init(defaultingRawValue:)(Swift::Int defaultingRawValue)
{
  _BYTE *v1;
  char v2;

  if ((unint64_t)defaultingRawValue >= 6)
    v2 = 0;
  else
    v2 = defaultingRawValue;
  *v1 = v2;
  return (char)defaultingRawValue;
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleAlignment_optional __swiftcall PosterArchive.Configuration.TitleStyleConfiguration.TitleAlignment.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 6;
  if ((unint64_t)rawValue < 6)
    v2 = rawValue;
  *v1 = v2;
  return (BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleAlignment_optional)rawValue;
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleAlignment_optional sub_1AD3A217C(Swift::Int *a1)
{
  return PosterArchive.Configuration.TitleStyleConfiguration.TitleAlignment.init(rawValue:)(*a1);
}

uint64_t sub_1AD3A2184()
{
  sub_1AD3CA96C();
  return sub_1AD63B930();
}

uint64_t sub_1AD3A21E0()
{
  sub_1AD3CA96C();
  return sub_1AD63B8D0();
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleLayout __swiftcall PosterArchive.Configuration.TitleStyleConfiguration.TitleLayout.init(defaultingRawValue:)(Swift::Int defaultingRawValue)
{
  BOOL *v1;

  *v1 = defaultingRawValue == 1;
  return (char)defaultingRawValue;
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleLayout_optional __swiftcall PosterArchive.Configuration.TitleStyleConfiguration.TitleLayout.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleLayout_optional)rawValue;
}

_QWORD *sub_1AD3A2258@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

uint64_t sub_1AD3A2278()
{
  sub_1AD3CA928();
  return sub_1AD63B930();
}

uint64_t sub_1AD3A22D4()
{
  sub_1AD3CA928();
  return sub_1AD63B8D0();
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleColor::Style __swiftcall PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.Style.init(defaultingRawValue:)(Swift::Int defaultingRawValue)
{
  char *v1;
  char v2;

  v2 = defaultingRawValue == 1;
  if (defaultingRawValue == 2)
    v2 = 2;
  *v1 = v2;
  return (char)defaultingRawValue;
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleColor::Style_optional __swiftcall PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.Style.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleColor::Style_optional)rawValue;
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::TitleColor::Style_optional sub_1AD3A2350(Swift::Int *a1)
{
  return PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.Style.init(rawValue:)(*a1);
}

uint64_t sub_1AD3A2358()
{
  sub_1AD3CA8E4();
  return sub_1AD63B930();
}

uint64_t sub_1AD3A23B4()
{
  sub_1AD3CA8E4();
  return sub_1AD63B8D0();
}

__n128 PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.color.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.color.setter(uint64_t a1)
{
  _OWORD *v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.color.modify())()
{
  return nullsub_1;
}

void PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.preferredStyle.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.preferredStyle.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.preferredStyle.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.localizedName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.localizedName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.localizedName.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties.vibrant.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties.vibrant.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties.vibrant.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties.allowsVariation.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties.allowsVariation.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties.allowsVariation.modify())()
{
  return nullsub_1;
}

double PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties.variation.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties.variation.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties.variation.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A2520()
{
  sub_1AD3CA8A0();
  return sub_1AD63B93C();
}

uint64_t sub_1AD3A257C()
{
  sub_1AD3CA8A0();
  return sub_1AD63B8DC();
}

void PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.gradientType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.gradientType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.gradientType.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.locations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.locations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.locations.modify())()
{
  return nullsub_1;
}

double PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.startPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.startPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.startPoint.modify())()
{
  return nullsub_1;
}

double PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.endPoint.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.endPoint.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.endPoint.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A2670()
{
  sub_1AD3CA85C();
  return sub_1AD63B93C();
}

uint64_t sub_1AD3A26CC()
{
  sub_1AD3CA85C();
  return sub_1AD63B8DC();
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.type.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.colors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.colors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.colors.modify())()
{
  return nullsub_1;
}

__n128 PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.discreteColorProperties.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  __n128 result;

  result = v1[1];
  *a1 = result;
  return result;
}

__n128 PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.discreteColorProperties.setter(__n128 *a1)
{
  __n128 *v1;
  __n128 result;

  result = *a1;
  v1[1] = *a1;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.discreteColorProperties.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.gradientProperties.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(v1 + 56);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_bridgeObjectRetain();
}

__n128 PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.gradientProperties.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;

  v5 = (__n128)a1[1];
  v6 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  v3 = *((_QWORD *)a1 + 5);
  swift_bridgeObjectRelease();
  result = v5;
  *(_OWORD *)(v1 + 32) = v6;
  *(__n128 *)(v1 + 48) = v5;
  *(_QWORD *)(v1 + 64) = v2;
  *(_QWORD *)(v1 + 72) = v3;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.gradientProperties.modify())()
{
  return nullsub_1;
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::NumberingSystem __swiftcall PosterArchive.Configuration.TitleStyleConfiguration.NumberingSystem.init(defaultingRawValue:)(Swift::String defaultingRawValue)
{
  _BYTE *v1;
  _BYTE *v2;
  BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::NumberingSystem result;
  char v4;
  char v5;

  v2 = v1;
  result = PosterArchive.Configuration.TitleStyleConfiguration.NumberingSystem.init(rawValue:)(defaultingRawValue).value;
  v4 = v5;
  if (v5 == 5)
    v4 = 0;
  *v2 = v4;
  return result;
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::NumberingSystem_optional __swiftcall PosterArchive.Configuration.TitleStyleConfiguration.NumberingSystem.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  unint64_t v3;
  BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::NumberingSystem_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AD63BE94();
  result.value = swift_bridgeObjectRelease();
  v5 = 5;
  if (v3 < 5)
    v5 = v3;
  *v2 = v5;
  return result;
}

uint64_t sub_1AD3A28AC(char *a1, char *a2)
{
  return sub_1AD4359C8(*a1, *a2);
}

uint64_t sub_1AD3A28B8()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD3A2910()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD3A293C()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

BlastDoor::PosterArchive::Configuration::TitleStyleConfiguration::NumberingSystem_optional sub_1AD3A2990(Swift::String *a1)
{
  return PosterArchive.Configuration.TitleStyleConfiguration.NumberingSystem.init(rawValue:)(*a1);
}

void sub_1AD3A299C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = *(_QWORD *)&aLatn_0[8 * *v1];
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1AD3A29B8()
{
  sub_1AD3CA818();
  return sub_1AD63B924();
}

uint64_t sub_1AD3A2A14()
{
  sub_1AD3CA818();
  return sub_1AD63B8C4();
}

__n128 PosterArchive.Configuration.TitleStyleConfiguration.timeFontConfiguration.getter@<Q0>(__n128 *a1@<X8>)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = v1[1].n128_u8[0];
  result = *v1;
  *a1 = *v1;
  a1[1].n128_u8[0] = v2;
  return result;
}

__n128 PosterArchive.Configuration.TitleStyleConfiguration.timeFontConfiguration.setter(__n128 *a1)
{
  __n128 *v1;
  unsigned __int8 v2;
  __n128 result;

  v2 = a1[1].n128_u8[0];
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u8[0] = v2;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.timeFontConfiguration.modify())()
{
  return nullsub_1;
}

void PosterArchive.Configuration.TitleStyleConfiguration.preferredTitleAlignment.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 17);
}

_BYTE *PosterArchive.Configuration.TitleStyleConfiguration.preferredTitleAlignment.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = *result;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.preferredTitleAlignment.modify())()
{
  return nullsub_1;
}

void PosterArchive.Configuration.TitleStyleConfiguration.preferredTitleLayout.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 18);
}

_BYTE *PosterArchive.Configuration.TitleStyleConfiguration.preferredTitleLayout.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 18) = *result;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.preferredTitleLayout.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.titleColor.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v1[3];
  v3 = v1[4];
  v4 = v1[5];
  v5 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  v8 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  return sub_1AD335CF4(v2, v3, v4, v5, v6, v7, v8);
}

__n128 PosterArchive.Configuration.TitleStyleConfiguration.titleColor.setter(__int128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;
  __int128 v6;

  v5 = a1[1];
  v6 = *a1;
  v4 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  sub_1AD28B324(v1[3], v1[4], v1[5], v1[6], v1[7], v1[8], v1[9]);
  *(_OWORD *)(v1 + 3) = v6;
  *(_OWORD *)(v1 + 5) = v5;
  result = v4;
  *(__n128 *)(v1 + 7) = v4;
  v1[9] = v2;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.titleColor.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.titleContentStyle.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v1[10];
  v3 = v1[11];
  v4 = v1[12];
  v5 = v1[13];
  v6 = v1[14];
  v7 = v1[15];
  v8 = v1[16];
  v9 = v1[17];
  v10 = v1[18];
  v11 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  return sub_1AD335D08(v2, v3);
}

__n128 PosterArchive.Configuration.TitleStyleConfiguration.titleContentStyle.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v8 = *a1;
  v6 = a1[2];
  v7 = a1[1];
  v5 = (__n128)a1[3];
  v2 = *((_QWORD *)a1 + 8);
  v3 = *((_QWORD *)a1 + 9);
  sub_1AD28B338(*(_QWORD *)(v1 + 80), *(_QWORD *)(v1 + 88));
  *(_OWORD *)(v1 + 80) = v8;
  *(_OWORD *)(v1 + 96) = v7;
  result = v5;
  *(_OWORD *)(v1 + 112) = v6;
  *(__n128 *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 144) = v2;
  *(_QWORD *)(v1 + 152) = v3;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.titleContentStyle.modify())()
{
  return nullsub_1;
}

void PosterArchive.Configuration.TitleStyleConfiguration.timeNumberingSystem.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 160);
}

_BYTE *PosterArchive.Configuration.TitleStyleConfiguration.timeNumberingSystem.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 160) = *result;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.timeNumberingSystem.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.isUserConfigured.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 161);
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.isUserConfigured.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 161) = result;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.isUserConfigured.modify())()
{
  return nullsub_1;
}

double PosterArchive.Configuration.TitleStyleConfiguration.contentsLuminance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 168);
}

void PosterArchive.Configuration.TitleStyleConfiguration.contentsLuminance.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 168) = a1;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.contentsLuminance.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.isAlternateDateEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 176);
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.isAlternateDateEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 176) = result;
  return result;
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.isAlternateDateEnabled.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A2CE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 208);
  if (v3 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(a1 + 200);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PosterArchive.Configuration.TitleStyleConfiguration.groupName.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*PosterArchive.Configuration.TitleStyleConfiguration.groupName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 208);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 200);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A2DFC;
  }
  return result;
}

uint64_t sub_1AD3A2DFC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD3A2E60(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[25];
  v8 = a2[26];
  swift_retain();
  sub_1AD003E48(v5, v6);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  a2[23] = v4;
  a2[24] = v3;
  a2[25] = v5;
  a2[26] = v6;
  return result;
}

void (*PosterArchive.Configuration.TitleStyleConfiguration.$groupName.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[23];
  v4 = v1[24];
  v6 = v1[25];
  v7 = v1[26];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD3A2F38;
}

void sub_1AD3A2F38(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[25];
  v9 = v4[26];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD003E48(v7, v3);
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[23] = v6;
    v4[24] = v5;
    v4[25] = v7;
    v4[26] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD003F24(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[23] = v6;
    v4[24] = v5;
    v4[25] = v7;
    v4[26] = v3;
  }
  free(v2);
}

uint64_t PosterArchive.Configuration.RenderingConfiguration.isDepthEffectDisabled.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t (*PosterArchive.Configuration.RenderingConfiguration.isDepthEffectDisabled.modify())()
{
  return nullsub_1;
}

uint64_t (*PosterArchive.Configuration.RenderingConfiguration.isParallaxEnabled.modify())()
{
  return nullsub_1;
}

_QWORD *PosterArchive.Configuration.titleStyleConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD v4[27];

  sub_1AD00FF28(v1, (uint64_t)v4, &qword_1EECD51F0);
  sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD51F0);
  return sub_1AD335B94(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD335C08);
}

uint64_t PosterArchive.Configuration.titleStyleConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[216];
  _QWORD v4[28];

  sub_1AD00FF28(a1, (uint64_t)v3, &qword_1EECD51F0);
  sub_1AD00FF28(v1, (uint64_t)v4, &qword_1EECD51F0);
  sub_1AD335B94(v4, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD28B238);
  return sub_1AD00FF28((uint64_t)v3, v1, &qword_1EECD51F0);
}

uint64_t (*PosterArchive.Configuration.titleStyleConfiguration.modify())()
{
  return nullsub_1;
}

void PosterArchive.Configuration.renderingConfiguration.getter(_WORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_WORD *)(v1 + 216);
}

_WORD *PosterArchive.Configuration.renderingConfiguration.setter(_WORD *result)
{
  uint64_t v1;

  *(_WORD *)(v1 + 216) = *result;
  return result;
}

uint64_t (*PosterArchive.Configuration.renderingConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A3124(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD4358C0(*a1, *a2);
}

uint64_t sub_1AD3A3130()
{
  return sub_1AD14BDC4();
}

uint64_t sub_1AD3A3138()
{
  return sub_1AD14C520();
}

uint64_t sub_1AD3A3140()
{
  return sub_1AD14D458();
}

uint64_t sub_1AD3A3148@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = _s9BlastDoor13PosterArchiveV24ProviderBundleIdentifierO8rawValueAESgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_1AD3A3174@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = PosterArchive.ProviderBundleIdentifier.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

_QWORD *PosterArchive.configuration.getter@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[2];

  v2 = v1[11];
  v3 = v1[9];
  v29 = v1[10];
  v30 = v2;
  v4 = v1[11];
  v31[0] = v1[12];
  *(_OWORD *)((char *)v31 + 10) = *(_OWORD *)((char *)v1 + 202);
  v5 = v1[7];
  v7 = v1[5];
  v25 = v1[6];
  v6 = v25;
  v26 = v5;
  v8 = v1[7];
  v9 = v1[9];
  v27 = v1[8];
  v10 = v27;
  v28 = v9;
  v11 = v1[3];
  v13 = v1[1];
  v21 = v1[2];
  v12 = v21;
  v22 = v11;
  v14 = v1[3];
  v15 = v1[5];
  v23 = v1[4];
  v16 = v23;
  v24 = v15;
  v17 = v1[1];
  v20[0] = *v1;
  v18 = v20[0];
  v20[1] = v17;
  a1[10] = v29;
  a1[11] = v4;
  a1[12] = v1[12];
  *(_OWORD *)((char *)a1 + 202) = *(_OWORD *)((char *)v1 + 202);
  a1[6] = v6;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v3;
  a1[2] = v12;
  a1[3] = v14;
  a1[4] = v16;
  a1[5] = v7;
  *a1 = v18;
  a1[1] = v13;
  return sub_1AD335B94(v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD335C08);
}

__n128 PosterArchive.configuration.setter(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[3];

  v3 = v1[11];
  v16[10] = v1[10];
  v16[11] = v3;
  v17[0] = v1[12];
  *(_OWORD *)((char *)v17 + 10) = *(_OWORD *)((char *)v1 + 202);
  v4 = v1[7];
  v16[6] = v1[6];
  v16[7] = v4;
  v5 = v1[9];
  v16[8] = v1[8];
  v16[9] = v5;
  v6 = v1[3];
  v16[2] = v1[2];
  v16[3] = v6;
  v7 = v1[5];
  v16[4] = v1[4];
  v16[5] = v7;
  v8 = v1[1];
  v16[0] = *v1;
  v16[1] = v8;
  sub_1AD335B94(v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD28B238);
  v9 = *(_OWORD *)(a1 + 176);
  v1[10] = *(_OWORD *)(a1 + 160);
  v1[11] = v9;
  v1[12] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 202) = *(_OWORD *)(a1 + 202);
  v10 = *(_OWORD *)(a1 + 112);
  v1[6] = *(_OWORD *)(a1 + 96);
  v1[7] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[8] = *(_OWORD *)(a1 + 128);
  v1[9] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[2] = *(_OWORD *)(a1 + 32);
  v1[3] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[4] = *(_OWORD *)(a1 + 64);
  v1[5] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  *v1 = *(_OWORD *)a1;
  v1[1] = v15;
  return result;
}

uint64_t (*PosterArchive.configuration.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.provider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD2A15B0(v1 + 224, a1);
}

unsigned __int8 *PosterArchive.provider.setter(unsigned __int8 *a1)
{
  uint64_t v1;

  return sub_1AD3AA600(a1, (unsigned __int8 *)(v1 + 224));
}

uint64_t (*PosterArchive.provider.modify())()
{
  return nullsub_1;
}

uint64_t PosterArchive.posterUUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PosterArchive() + 24);
  v4 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t PosterArchive.posterUUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for PosterArchive() + 24);
  v4 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*PosterArchive.posterUUID.modify())(_QWORD)
{
  type metadata accessor for PosterArchive();
  return nullsub_1;
}

uint64_t PosterArchive.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PosterArchive() + 28));
}

uint64_t PosterArchive.version.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PosterArchive();
  *(_QWORD *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*PosterArchive.version.modify())(_QWORD)
{
  type metadata accessor for PosterArchive();
  return nullsub_1;
}

uint64_t PosterArchive.versionSupplement.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for PosterArchive() + 32));
}

uint64_t PosterArchive.versionSupplement.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for PosterArchive();
  *(_QWORD *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*PosterArchive.versionSupplement.modify())(_QWORD)
{
  type metadata accessor for PosterArchive();
  return nullsub_1;
}

uint64_t PhotosPoster.Options.hideShowPhotoInLibraryAction.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t PhotosPoster.Options.hideShowPhotoInLibraryAction.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*PhotosPoster.Options.hideShowPhotoInLibraryAction.modify())()
{
  return nullsub_1;
}

uint64_t PhotosPoster.Options.hidePrimaryActionButton.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t PhotosPoster.Options.hidePrimaryActionButton.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*PhotosPoster.Options.hidePrimaryActionButton.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A350C()
{
  sub_1AD3CA7D4();
  return sub_1AD63B930();
}

uint64_t sub_1AD3A3568()
{
  sub_1AD3CA7D4();
  return sub_1AD63B8D0();
}

void PhotosPoster.Media.mediaType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *PhotosPoster.Media.mediaType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*PhotosPoster.Media.mediaType.modify())()
{
  return nullsub_1;
}

uint64_t PhotosPoster.Media.assetUUID.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*PhotosPoster.Media.assetUUID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 32);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 24);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A3688;
  }
  return result;
}

uint64_t sub_1AD3A3688(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

void (*PhotosPoster.Media.$assetUUID.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[1];
  v4 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD003F9C;
}

uint64_t PhotosPoster.Media.subpath.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*PhotosPoster.Media.subpath.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 64);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 56);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD044990;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*PhotosPoster.Media.$subpath.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[6];
  v6 = v1[7];
  v5 = v1[8];
  *v3 = v1[5];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD044B44;
}

uint64_t PhotosPoster.Media.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t PhotosPoster.Media.version.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*PhotosPoster.Media.version.modify())()
{
  return nullsub_1;
}

BlastDoor::PhotosPoster::Layout::ClockLayerOrder __swiftcall PhotosPoster.Layout.ClockLayerOrder.init(defaultingRawValue:)(Swift::String defaultingRawValue)
{
  BOOL *v1;
  BOOL *v2;
  uint64_t v3;
  BlastDoor::PhotosPoster::Layout::ClockLayerOrder result;

  v2 = v1;
  v3 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  *v2 = v3 == 1;
  return result;
}

BlastDoor::PhotosPoster::Layout::ClockLayerOrder_optional __swiftcall PhotosPoster.Layout.ClockLayerOrder.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  BlastDoor::PhotosPoster::Layout::ClockLayerOrder_optional result;
  char v5;

  v2 = v1;
  v3 = sub_1AD63BE94();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1)
    v5 = 1;
  else
    v5 = 2;
  if (!v3)
    v5 = 0;
  *v2 = v5;
  return result;
}

uint64_t sub_1AD3A3930(char *a1, char *a2)
{
  return sub_1AD435C60(*a1, *a2);
}

uint64_t sub_1AD3A393C()
{
  return sub_1AD14BE68();
}

uint64_t sub_1AD3A3944()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD3A399C()
{
  return sub_1AD14D5E0();
}

BlastDoor::PhotosPoster::Layout::ClockLayerOrder_optional sub_1AD3A39A4(Swift::String *a1)
{
  return PhotosPoster.Layout.ClockLayerOrder.init(rawValue:)(*a1);
}

void sub_1AD3A39B0(_QWORD *a1@<X8>)
{
  _BYTE *v1;
  unint64_t v2;

  v2 = 0x80000001AD69DC70;
  if (*v1)
    v2 = 0x80000001AD69DC90;
  *a1 = 0xD000000000000014;
  a1[1] = v2;
}

uint64_t sub_1AD3A39EC()
{
  sub_1AD3CA790();
  return sub_1AD63B924();
}

uint64_t sub_1AD3A3A48()
{
  sub_1AD3CA790();
  return sub_1AD63B8C4();
}

BlastDoor::PhotosPoster::Layout::ClockIntersection __swiftcall PhotosPoster.Layout.ClockIntersection.init(defaultingRawValue:)(Swift::UInt defaultingRawValue)
{
  _BYTE *v1;
  char v2;

  if (defaultingRawValue >= 4)
    v2 = 0;
  else
    v2 = defaultingRawValue;
  *v1 = v2;
  return (char)defaultingRawValue;
}

BlastDoor::PhotosPoster::Layout::ClockIntersection_optional __swiftcall PhotosPoster.Layout.ClockIntersection.init(rawValue:)(Swift::UInt rawValue)
{
  char *v1;
  char v2;

  v2 = 4;
  if (rawValue < 4)
    v2 = rawValue;
  *v1 = v2;
  return (BlastDoor::PhotosPoster::Layout::ClockIntersection_optional)rawValue;
}

BlastDoor::PhotosPoster::Layout::ClockIntersection_optional sub_1AD3A3AB8(Swift::UInt *a1)
{
  return PhotosPoster.Layout.ClockIntersection.init(rawValue:)(*a1);
}

uint64_t sub_1AD3A3AC0()
{
  sub_1AD3CA74C();
  return sub_1AD63B93C();
}

uint64_t sub_1AD3A3B1C()
{
  sub_1AD3CA74C();
  return sub_1AD63B8DC();
}

double PhotosPoster.Layout.imageSize.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void PhotosPoster.Layout.imageSize.setter(double a1, double a2)
{
  double *v2;

  *v2 = a1;
  v2[1] = a2;
}

uint64_t (*PhotosPoster.Layout.imageSize.modify())()
{
  return nullsub_1;
}

double PhotosPoster.Layout.deviceResolution.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void PhotosPoster.Layout.deviceResolution.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 16) = a1;
  *(double *)(v2 + 24) = a2;
}

uint64_t (*PhotosPoster.Layout.deviceResolution.modify())()
{
  return nullsub_1;
}

double PhotosPoster.Layout.parallaxPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 32);
}

void PhotosPoster.Layout.parallaxPadding.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 32) = a1;
  *(double *)(v2 + 40) = a2;
}

uint64_t (*PhotosPoster.Layout.parallaxPadding.modify())()
{
  return nullsub_1;
}

double PhotosPoster.Layout.visibleFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 48);
}

void PhotosPoster.Layout.visibleFrame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[6] = a1;
  v4[7] = a2;
  v4[8] = a3;
  v4[9] = a4;
}

uint64_t (*PhotosPoster.Layout.visibleFrame.modify())()
{
  return nullsub_1;
}

double PhotosPoster.Layout.inactiveFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 80);
}

void PhotosPoster.Layout.inactiveFrame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[10] = a1;
  v4[11] = a2;
  v4[12] = a3;
  v4[13] = a4;
}

uint64_t (*PhotosPoster.Layout.inactiveFrame.modify())()
{
  return nullsub_1;
}

double PhotosPoster.Layout.timeFrame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 112);
}

void PhotosPoster.Layout.timeFrame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[14] = a1;
  v4[15] = a2;
  v4[16] = a3;
  v4[17] = a4;
}

uint64_t (*PhotosPoster.Layout.timeFrame.modify())()
{
  return nullsub_1;
}

void PhotosPoster.Layout.clockLayerOrder.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 144);
}

_BYTE *PhotosPoster.Layout.clockLayerOrder.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 144) = *result;
  return result;
}

uint64_t (*PhotosPoster.Layout.clockLayerOrder.modify())()
{
  return nullsub_1;
}

void PhotosPoster.Layout.clockIntersection.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 145);
}

_BYTE *PhotosPoster.Layout.clockIntersection.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 145) = *result;
  return result;
}

uint64_t (*PhotosPoster.Layout.clockIntersection.modify())()
{
  return nullsub_1;
}

uint64_t PhotosPoster.ParallaxLayer.image.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v2 = v1;
  v4 = (char *)malloc(0x1F8uLL);
  *a1 = v4;
  *((_QWORD *)v4 + 62) = v2;
  result = sub_1ACFF64C0(v2, (uint64_t)(v4 + 248), &qword_1ED2E2680);
  if (*((_QWORD *)v4 + 34))
  {
    v6 = *(_OWORD *)(v4 + 456);
    *((_OWORD *)v4 + 12) = *(_OWORD *)(v4 + 440);
    *((_OWORD *)v4 + 13) = v6;
    *((_OWORD *)v4 + 14) = *(_OWORD *)(v4 + 472);
    *((_QWORD *)v4 + 30) = *((_QWORD *)v4 + 61);
    v7 = *(_OWORD *)(v4 + 392);
    *((_OWORD *)v4 + 8) = *(_OWORD *)(v4 + 376);
    *((_OWORD *)v4 + 9) = v7;
    v8 = *(_OWORD *)(v4 + 424);
    *((_OWORD *)v4 + 10) = *(_OWORD *)(v4 + 408);
    *((_OWORD *)v4 + 11) = v8;
    v9 = *(_OWORD *)(v4 + 328);
    *((_OWORD *)v4 + 4) = *(_OWORD *)(v4 + 312);
    *((_OWORD *)v4 + 5) = v9;
    v10 = *(_OWORD *)(v4 + 360);
    *((_OWORD *)v4 + 6) = *(_OWORD *)(v4 + 344);
    *((_OWORD *)v4 + 7) = v10;
    v11 = *(_OWORD *)(v4 + 264);
    *(_OWORD *)v4 = *(_OWORD *)(v4 + 248);
    *((_OWORD *)v4 + 1) = v11;
    v12 = *(_OWORD *)(v4 + 296);
    result = (uint64_t)sub_1AD146614;
    *((_OWORD *)v4 + 2) = *(_OWORD *)(v4 + 280);
    *((_OWORD *)v4 + 3) = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void (*PhotosPoster.ParallaxLayer.$image.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x530uLL);
  *a1 = v3;
  v3[165] = v1;
  sub_1ACFF64C0(v1, (uint64_t)v3, &qword_1ED2E2FE8);
  return sub_1AD146874;
}

double PhotosPoster.ParallaxLayer.frame.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 440);
}

void PhotosPoster.ParallaxLayer.frame.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[55] = a1;
  v4[56] = a2;
  v4[57] = a3;
  v4[58] = a4;
}

uint64_t (*PhotosPoster.ParallaxLayer.frame.modify())()
{
  return nullsub_1;
}

double PhotosPoster.ParallaxLayer.zPosition.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 472);
}

void PhotosPoster.ParallaxLayer.zPosition.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 472) = a1;
}

uint64_t (*PhotosPoster.ParallaxLayer.zPosition.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A3DE4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 504);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 496);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t PhotosPoster.ParallaxLayer.identifier.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*PhotosPoster.ParallaxLayer.identifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 504);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 496);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A3EF4;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD3A3EF4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD3A3F58(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[60] = v4;
  a2[61] = v3;
  a2[62] = v6;
  a2[63] = v5;
  return result;
}

void (*PhotosPoster.ParallaxLayer.$identifier.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[61];
  v6 = v1[62];
  v5 = v1[63];
  *v3 = v1[60];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD3A4028;
}

void sub_1AD3A4028(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[60] = v6;
    v4[61] = v5;
    v4[62] = v7;
    v4[63] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[60] = v6;
    v4[61] = v5;
    v4[62] = v7;
    v4[63] = v3;
  }
  free(v2);
}

uint64_t PhotosPoster.ParallaxLayerStack.layers.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t PhotosPoster.ParallaxLayerStack.layers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*PhotosPoster.ParallaxLayerStack.layers.modify())()
{
  return nullsub_1;
}

__n128 PhotosPoster.ParallaxLayerStack.layout.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_OWORD *)(v1 + 120);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(v1 + 104);
  *(_OWORD *)(a1 + 112) = v2;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(v1 + 136);
  *(_WORD *)(a1 + 144) = *(_WORD *)(v1 + 152);
  v3 = *(_OWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 40);
  *(_OWORD *)(a1 + 48) = v3;
  v4 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 72);
  *(_OWORD *)(a1 + 80) = v4;
  result = *(__n128 *)(v1 + 8);
  v6 = *(_OWORD *)(v1 + 24);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v6;
  return result;
}

__n128 PhotosPoster.ParallaxLayerStack.layout.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;

  v2 = *(_OWORD *)(a1 + 112);
  *(_OWORD *)(v1 + 104) = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 120) = v2;
  *(_OWORD *)(v1 + 136) = *(_OWORD *)(a1 + 128);
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 40) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 56) = v3;
  v4 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 72) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 88) = v4;
  result = *(__n128 *)a1;
  v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_WORD *)(v1 + 152) = *(_WORD *)(a1 + 144);
  *(_OWORD *)(v1 + 24) = v6;
  return result;
}

uint64_t (*PhotosPoster.ParallaxLayerStack.layout.modify())()
{
  return nullsub_1;
}

uint64_t PhotosPoster.ParallaxLayerStack.depthEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 154);
}

uint64_t PhotosPoster.ParallaxLayerStack.depthEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 154) = result;
  return result;
}

uint64_t (*PhotosPoster.ParallaxLayerStack.depthEnabled.modify())()
{
  return nullsub_1;
}

uint64_t PhotosPoster.ParallaxLayerStack.parallaxDisabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 155);
}

uint64_t PhotosPoster.ParallaxLayerStack.parallaxDisabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 155) = result;
  return result;
}

uint64_t (*PhotosPoster.ParallaxLayerStack.parallaxDisabled.modify())()
{
  return nullsub_1;
}

double PhotosPoster.ParallaxLayerStack.clockAreaLuminance.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 160);
}

void PhotosPoster.ParallaxLayerStack.clockAreaLuminance.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 160) = a1;
}

uint64_t (*PhotosPoster.ParallaxLayerStack.clockAreaLuminance.modify())()
{
  return nullsub_1;
}

uint64_t PhotosPoster.ParallaxLayerStack.settlingEffectEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t PhotosPoster.ParallaxLayerStack.settlingEffectEnabled.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 168) = result;
  return result;
}

uint64_t (*PhotosPoster.ParallaxLayerStack.settlingEffectEnabled.modify())()
{
  return nullsub_1;
}

double PhotosPoster.ParallaxLayoutConfiguration.screenSize.getter()
{
  uint64_t v0;

  return *(double *)v0;
}

void PhotosPoster.ParallaxLayoutConfiguration.screenSize.setter(double a1, double a2)
{
  double *v2;

  *v2 = a1;
  v2[1] = a2;
}

uint64_t (*PhotosPoster.ParallaxLayoutConfiguration.screenSize.modify())()
{
  return nullsub_1;
}

double PhotosPoster.ParallaxLayoutConfiguration.screenScale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void PhotosPoster.ParallaxLayoutConfiguration.screenScale.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*PhotosPoster.ParallaxLayoutConfiguration.screenScale.modify())()
{
  return nullsub_1;
}

double PhotosPoster.ParallaxLayoutConfiguration.timeRect.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void PhotosPoster.ParallaxLayoutConfiguration.timeRect.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[3] = a1;
  v4[4] = a2;
  v4[5] = a3;
  v4[6] = a4;
}

uint64_t (*PhotosPoster.ParallaxLayoutConfiguration.timeRect.modify())()
{
  return nullsub_1;
}

double PhotosPoster.ParallaxLayoutConfiguration.inactiveTimeRect.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 56);
}

void PhotosPoster.ParallaxLayoutConfiguration.inactiveTimeRect.setter(double a1, double a2, double a3, double a4)
{
  double *v4;

  v4[7] = a1;
  v4[8] = a2;
  v4[9] = a3;
  v4[10] = a4;
}

uint64_t (*PhotosPoster.ParallaxLayoutConfiguration.inactiveTimeRect.modify())()
{
  return nullsub_1;
}

double PhotosPoster.ParallaxLayoutConfiguration.parallaxPadding.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 88);
}

void PhotosPoster.ParallaxLayoutConfiguration.parallaxPadding.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 88) = a1;
  *(double *)(v2 + 96) = a2;
}

uint64_t (*PhotosPoster.ParallaxLayoutConfiguration.parallaxPadding.modify())()
{
  return nullsub_1;
}

double PhotosPoster.CompoundDeviceConfiguration.portraitConfiguration.getter@<D0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  result = *(double *)(v1 + 96);
  v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)v1;
  *(_OWORD *)(a1 + 16) = v3;
  v4 = *(_OWORD *)(v1 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  v5 = *(_OWORD *)(v1 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(double *)(a1 + 96) = result;
  return result;
}

double PhotosPoster.CompoundDeviceConfiguration.portraitConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  double result;
  __int128 v3;
  __int128 v4;
  __int128 v5;

  result = *(double *)(a1 + 96);
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)v1 = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 16) = v3;
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 48) = v4;
  v5 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 64) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 80) = v5;
  *(double *)(v1 + 96) = result;
  return result;
}

uint64_t (*PhotosPoster.CompoundDeviceConfiguration.portraitConfiguration.modify())()
{
  return nullsub_1;
}

__n128 PhotosPoster.CompoundDeviceConfiguration.landscapeConfiguration.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __int128 v4;
  __int128 v5;
  __n128 result;
  __int128 v7;

  v2 = *(_QWORD *)(v1 + 200);
  v3 = *(_BYTE *)(v1 + 208);
  v4 = *(_OWORD *)(v1 + 120);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 104);
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_OWORD *)(v1 + 152);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(v1 + 136);
  *(_OWORD *)(a1 + 48) = v5;
  result = *(__n128 *)(v1 + 168);
  v7 = *(_OWORD *)(v1 + 184);
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 96) = v2;
  *(_BYTE *)(a1 + 104) = v3;
  return result;
}

__n128 PhotosPoster.CompoundDeviceConfiguration.landscapeConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __n128 result;
  __int128 v5;
  uint64_t v6;
  char v7;

  v2 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 104) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 120) = v2;
  v3 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v1 + 136) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 152) = v3;
  result = *(__n128 *)(a1 + 64);
  v5 = *(_OWORD *)(a1 + 80);
  *(__n128 *)(v1 + 168) = result;
  v6 = *(_QWORD *)(a1 + 96);
  v7 = *(_BYTE *)(a1 + 104);
  *(_OWORD *)(v1 + 184) = v5;
  *(_QWORD *)(v1 + 200) = v6;
  *(_BYTE *)(v1 + 208) = v7;
  return result;
}

uint64_t (*PhotosPoster.CompoundDeviceConfiguration.landscapeConfiguration.modify())()
{
  return nullsub_1;
}

void PhotosPoster.options.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;
  char v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
}

_BYTE *PhotosPoster.options.setter(_BYTE *result)
{
  _BYTE *v1;
  char v2;

  v2 = result[1];
  *v1 = *result;
  v1[1] = v2;
  return result;
}

uint64_t (*PhotosPoster.options.modify())()
{
  return nullsub_1;
}

uint64_t PhotosPoster.identifier.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*PhotosPoster.identifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 32);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 24);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD0445AC;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*PhotosPoster.$identifier.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[2];
  v6 = v1[3];
  v5 = v1[4];
  *v3 = v1[1];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD044760;
}

uint64_t PhotosPoster.media.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD *)(v1 + 48);
  v2 = *(_QWORD *)(v1 + 56);
  v4 = *(_QWORD *)(v1 + 64);
  v5 = *(_QWORD *)(v1 + 72);
  v6 = *(_QWORD *)(v1 + 80);
  v7 = *(_QWORD *)(v1 + 88);
  v8 = *(_QWORD *)(v1 + 96);
  *(_BYTE *)a1 = *(_BYTE *)(v1 + 40);
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  *(_QWORD *)(a1 + 48) = v7;
  *(_QWORD *)(a1 + 56) = v8;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(v1 + 104);
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 PhotosPoster.media.setter(char *a1)
{
  uint64_t v1;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __n128 result;
  __n128 v10;

  v3 = *a1;
  v4 = *((_QWORD *)a1 + 3);
  v5 = *((_QWORD *)a1 + 4);
  v10 = *(__n128 *)(a1 + 56);
  v6 = *((_QWORD *)a1 + 9);
  v7 = *(_QWORD *)(v1 + 64);
  v8 = *(_QWORD *)(v1 + 72);
  swift_release();
  sub_1AD003F24(v7, v8);
  swift_release();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + 40) = v3;
  *(_OWORD *)(v1 + 48) = *(_OWORD *)(a1 + 8);
  *(_QWORD *)(v1 + 64) = v4;
  *(_QWORD *)(v1 + 72) = v5;
  result = v10;
  *(_OWORD *)(v1 + 80) = *(_OWORD *)(a1 + 40);
  *(__n128 *)(v1 + 96) = v10;
  *(_QWORD *)(v1 + 112) = v6;
  return result;
}

uint64_t (*PhotosPoster.media.modify())()
{
  return nullsub_1;
}

uint64_t PhotosPoster.layerStack.getter@<X0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  _OWORD v14[9];
  _OWORD v15[2];

  v2 = *(_OWORD *)(v1 + 232);
  v3 = *(_OWORD *)(v1 + 248);
  v4 = *(_OWORD *)(v1 + 168);
  v5 = *(_OWORD *)(v1 + 200);
  v14[4] = *(_OWORD *)(v1 + 184);
  v14[5] = v5;
  v14[6] = *(_OWORD *)(v1 + 216);
  v14[7] = v2;
  v6 = *(_OWORD *)(v1 + 136);
  v14[0] = *(_OWORD *)(v1 + 120);
  v14[1] = v6;
  v14[2] = *(_OWORD *)(v1 + 152);
  v14[3] = v4;
  v7 = *(_OWORD *)(v1 + 264);
  v14[8] = v3;
  v15[0] = v7;
  *(_OWORD *)((char *)v15 + 9) = *(_OWORD *)(v1 + 273);
  v8 = *(_OWORD *)(v1 + 232);
  v9 = *(_OWORD *)(v1 + 264);
  a1[8] = *(_OWORD *)(v1 + 248);
  a1[9] = v9;
  *(_OWORD *)((char *)a1 + 153) = *(_OWORD *)(v1 + 273);
  v10 = *(_OWORD *)(v1 + 168);
  v11 = *(_OWORD *)(v1 + 200);
  a1[4] = *(_OWORD *)(v1 + 184);
  a1[5] = v11;
  a1[6] = *(_OWORD *)(v1 + 216);
  a1[7] = v8;
  v12 = *(_OWORD *)(v1 + 136);
  *a1 = *(_OWORD *)(v1 + 120);
  a1[1] = v12;
  a1[2] = *(_OWORD *)(v1 + 152);
  a1[3] = v10;
  return sub_1AD335D58((uint64_t)v14);
}

__n128 PhotosPoster.layerStack.setter(uint64_t a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __n128 result;
  __int128 v14;
  _OWORD v15[9];
  _OWORD v16[2];

  v3 = *(_OWORD *)(v1 + 232);
  v4 = *(_OWORD *)(v1 + 248);
  v5 = *(_OWORD *)(v1 + 168);
  v6 = *(_OWORD *)(v1 + 200);
  v15[4] = *(_OWORD *)(v1 + 184);
  v15[5] = v6;
  v15[6] = *(_OWORD *)(v1 + 216);
  v15[7] = v3;
  v7 = *(_OWORD *)(v1 + 136);
  v15[0] = *(_OWORD *)(v1 + 120);
  v15[1] = v7;
  v15[2] = *(_OWORD *)(v1 + 152);
  v15[3] = v5;
  v8 = *(_OWORD *)(v1 + 264);
  v15[8] = v4;
  v16[0] = v8;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)(v1 + 273);
  sub_1AD28B63C((uint64_t)v15);
  v9 = *(_OWORD *)(a1 + 96);
  *(_OWORD *)(v1 + 232) = *(_OWORD *)(a1 + 112);
  v10 = *(_OWORD *)(a1 + 144);
  *(_OWORD *)(v1 + 248) = *(_OWORD *)(a1 + 128);
  *(_OWORD *)(v1 + 264) = v10;
  *(_OWORD *)(v1 + 273) = *(_OWORD *)(a1 + 153);
  v11 = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(v1 + 168) = *(_OWORD *)(a1 + 48);
  v12 = *(_OWORD *)(a1 + 80);
  *(_OWORD *)(v1 + 184) = *(_OWORD *)(a1 + 64);
  *(_OWORD *)(v1 + 200) = v12;
  *(_OWORD *)(v1 + 216) = v9;
  result = *(__n128 *)a1;
  v14 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 120) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 136) = v14;
  *(_OWORD *)(v1 + 152) = v11;
  return result;
}

uint64_t (*PhotosPoster.layerStack.modify())()
{
  return nullsub_1;
}

uint64_t PhotosPoster.layoutConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[216];

  sub_1AD00FF28(v1 + 296, (uint64_t)v4, &qword_1EECD3B48);
  return sub_1AD00FF28((uint64_t)v4, a1, &qword_1EECD3B48);
}

uint64_t PhotosPoster.layoutConfiguration.setter(uint64_t a1)
{
  uint64_t v1;
  _BYTE v3[224];

  sub_1AD00FF28(a1, (uint64_t)v3, &qword_1EECD3B48);
  return sub_1AD00FF28((uint64_t)v3, v1 + 296, &qword_1EECD3B48);
}

uint64_t (*PhotosPoster.layoutConfiguration.modify())()
{
  return nullsub_1;
}

uint64_t PhotosPoster.representsDeviceOwner.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 506);
}

uint64_t PhotosPoster.representsDeviceOwner.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 506) = result;
  return result;
}

uint64_t (*PhotosPoster.representsDeviceOwner.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A486C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 536);
  if (v3 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(a1 + 528);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t PhotosPoster.assetIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*PhotosPoster.assetIdentifier.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 536);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 528);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A4984;
  }
  return result;
}

uint64_t sub_1AD3A4984(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD3A49E8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[66];
  v8 = a2[67];
  swift_retain();
  sub_1AD003E48(v5, v6);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  a2[64] = v4;
  a2[65] = v3;
  a2[66] = v5;
  a2[67] = v6;
  return result;
}

void (*PhotosPoster.$assetIdentifier.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[64];
  v5 = v1[65];
  v6 = v1[66];
  v7 = v1[67];
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD3A4AD4;
}

void sub_1AD3A4AD4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[66];
  v9 = v4[67];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD003E48(v7, v3);
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[64] = v6;
    v4[65] = v5;
    v4[66] = v7;
    v4[67] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD003F24(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[64] = v6;
    v4[65] = v5;
    v4[66] = v7;
    v4[67] = v3;
  }
  free(v2);
}

uint64_t (*sub_1AD3A4BA8(_QWORD *a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A4C30;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD3A4C34(_QWORD *a1))(uint64_t **, char)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD3A4C98;
}

uint64_t (*sub_1AD3A4CA0(_QWORD *a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A4C30;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD3A4D28(_QWORD *a1))(uint64_t **, char)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD3A4C98;
}

uint64_t (*sub_1AD3A4D90(_QWORD *a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A4C30;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD3A4E18(_QWORD *a1))(uint64_t **, char)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD3A4C98;
}

uint64_t sub_1AD3A4E7C(double a1)
{
  uint64_t v1;
  uint64_t (*v3)(double *);
  uint64_t result;
  _QWORD *v5;
  double v6;

  v3 = *(uint64_t (**)(double *))(v1 + 32);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(double *)(v1 + 48) = a1;
    *(_BYTE *)(v1 + 56) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD3A4F50(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 48);
    return sub_1AD39BB4C;
  }
  return result;
}

void (*sub_1AD3A4FC4(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 56);
  *v3 = *(_QWORD *)(v1 + 32);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD39BC84;
}

uint64_t sub_1AD3A5028@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_1AD29BCAC(v2);
}

__n128 sub_1AD3A503C(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = a1[1].n128_i64[1];
  sub_1AD29A470(*v1);
  result = v5;
  *(__n128 *)v1 = v5;
  v1[2] = v2;
  v1[3] = v3;
  return result;
}

uint64_t (*sub_1AD3A5088())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A5098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 32);
  v3 = *(_QWORD *)(v1 + 40);
  v4 = *(_QWORD *)(v1 + 48);
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v7 = *(_QWORD *)(v1 + 72);
  v8 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v1 + 88);
  return sub_1AD29BCDC(v2);
}

__n128 sub_1AD3A50C4(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  sub_1AD28BA4C(*(_QWORD *)(v1 + 32));
  *(_OWORD *)(v1 + 32) = v7;
  *(_OWORD *)(v1 + 48) = v6;
  result = v5;
  *(__n128 *)(v1 + 64) = v5;
  *(_QWORD *)(v1 + 80) = v2;
  *(_BYTE *)(v1 + 88) = v3;
  return result;
}

uint64_t (*sub_1AD3A513C())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A514C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 96);
  v3 = *(_QWORD *)(v1 + 104);
  v4 = *(_QWORD *)(v1 + 112);
  v5 = *(_QWORD *)(v1 + 120);
  v6 = *(_QWORD *)(v1 + 128);
  v7 = *(_QWORD *)(v1 + 136);
  v8 = *(_QWORD *)(v1 + 144);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v1 + 152);
  return sub_1AD29BCDC(v2);
}

__n128 sub_1AD3A5178(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  sub_1AD28BA4C(*(_QWORD *)(v1 + 96));
  *(_OWORD *)(v1 + 96) = v7;
  *(_OWORD *)(v1 + 112) = v6;
  result = v5;
  *(__n128 *)(v1 + 128) = v5;
  *(_QWORD *)(v1 + 144) = v2;
  *(_BYTE *)(v1 + 152) = v3;
  return result;
}

uint64_t (*sub_1AD3A51F0())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A5200@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = *(_QWORD *)(v1 + 160);
  v3 = *(_QWORD *)(v1 + 168);
  v4 = *(_QWORD *)(v1 + 176);
  v5 = *(_QWORD *)(v1 + 184);
  v6 = *(_QWORD *)(v1 + 192);
  v7 = *(_QWORD *)(v1 + 200);
  v8 = *(_QWORD *)(v1 + 208);
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v7;
  *(_QWORD *)(a1 + 48) = v8;
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(v1 + 216);
  return sub_1AD29BCDC(v2);
}

__n128 sub_1AD3A522C(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;

  v6 = a1[1];
  v7 = *a1;
  v5 = (__n128)a1[2];
  v2 = *((_QWORD *)a1 + 6);
  v3 = *((_BYTE *)a1 + 56);
  sub_1AD28BA4C(*(_QWORD *)(v1 + 160));
  *(_OWORD *)(v1 + 160) = v7;
  *(_OWORD *)(v1 + 176) = v6;
  result = v5;
  *(__n128 *)(v1 + 192) = v5;
  *(_QWORD *)(v1 + 208) = v2;
  *(_BYTE *)(v1 + 216) = v3;
  return result;
}

uint64_t (*sub_1AD3A52A4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A52B4@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[2];

  v2 = v1[11];
  v3 = v1[9];
  v29 = v1[10];
  v30 = v2;
  v4 = v1[11];
  v31[0] = v1[12];
  *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)v1 + 201);
  v5 = v1[7];
  v7 = v1[5];
  v25 = v1[6];
  v6 = v25;
  v26 = v5;
  v8 = v1[7];
  v9 = v1[9];
  v27 = v1[8];
  v10 = v27;
  v28 = v9;
  v11 = v1[3];
  v13 = v1[1];
  v21 = v1[2];
  v12 = v21;
  v22 = v11;
  v14 = v1[3];
  v15 = v1[5];
  v23 = v1[4];
  v16 = v23;
  v24 = v15;
  v17 = v1[1];
  v20[0] = *v1;
  v18 = v20[0];
  v20[1] = v17;
  a1[10] = v29;
  a1[11] = v4;
  a1[12] = v1[12];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 201);
  a1[6] = v6;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v3;
  a1[2] = v12;
  a1[3] = v14;
  a1[4] = v16;
  a1[5] = v7;
  *a1 = v18;
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A5364(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[3];

  v3 = v1[11];
  v16[10] = v1[10];
  v16[11] = v3;
  v17[0] = v1[12];
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 201);
  v4 = v1[7];
  v16[6] = v1[6];
  v16[7] = v4;
  v5 = v1[9];
  v16[8] = v1[8];
  v16[9] = v5;
  v6 = v1[3];
  v16[2] = v1[2];
  v16[3] = v6;
  v7 = v1[5];
  v16[4] = v1[4];
  v16[5] = v7;
  v8 = v1[1];
  v16[0] = *v1;
  v16[1] = v8;
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[10] = *(_OWORD *)(a1 + 160);
  v1[11] = v9;
  v1[12] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 201) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[6] = *(_OWORD *)(a1 + 96);
  v1[7] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[8] = *(_OWORD *)(a1 + 128);
  v1[9] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[2] = *(_OWORD *)(a1 + 32);
  v1[3] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[4] = *(_OWORD *)(a1 + 64);
  v1[5] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  *v1 = *(_OWORD *)a1;
  v1[1] = v15;
  return result;
}

uint64_t (*sub_1AD3A5420())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A5430@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[2];

  v2 = v1[25];
  v3 = v1[23];
  v29 = v1[24];
  v30 = v2;
  v4 = v1[25];
  v31[0] = v1[26];
  v5 = v1[21];
  v7 = v1[19];
  v25 = v1[20];
  v6 = v25;
  v26 = v5;
  v8 = v1[21];
  v9 = v1[23];
  v27 = v1[22];
  v10 = v27;
  v28 = v9;
  v11 = v1[17];
  v13 = v1[15];
  v21 = v1[16];
  v12 = v21;
  v22 = v11;
  v14 = v1[17];
  v15 = v1[19];
  v23 = v1[18];
  v16 = v23;
  v24 = v15;
  v17 = v1[15];
  v20[0] = v1[14];
  v18 = v20[0];
  v20[1] = v17;
  *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)v1 + 425);
  a1[10] = v29;
  a1[11] = v4;
  a1[12] = v1[26];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 425);
  a1[6] = v6;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v3;
  a1[2] = v12;
  a1[3] = v14;
  a1[4] = v16;
  a1[5] = v7;
  *a1 = v18;
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A54E4(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[25];
  v16[10] = v1[24];
  v16[11] = v3;
  v17[0] = v1[26];
  v4 = v1[21];
  v16[6] = v1[20];
  v16[7] = v4;
  v5 = v1[23];
  v16[8] = v1[22];
  v16[9] = v5;
  v6 = v1[17];
  v16[2] = v1[16];
  v16[3] = v6;
  v7 = v1[19];
  v16[4] = v1[18];
  v16[5] = v7;
  v8 = v1[15];
  v16[0] = v1[14];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 425);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[24] = *(_OWORD *)(a1 + 160);
  v1[25] = v9;
  v1[26] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 425) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[20] = *(_OWORD *)(a1 + 96);
  v1[21] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[22] = *(_OWORD *)(a1 + 128);
  v1[23] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[16] = *(_OWORD *)(a1 + 32);
  v1[17] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[18] = *(_OWORD *)(a1 + 64);
  v1[19] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[14] = *(_OWORD *)a1;
  v1[15] = v15;
  return result;
}

uint64_t (*sub_1AD3A55AC())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A55BC@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[2];

  v2 = v1[39];
  v3 = v1[37];
  v29 = v1[38];
  v30 = v2;
  v4 = v1[39];
  v31[0] = v1[40];
  v5 = v1[35];
  v7 = v1[33];
  v25 = v1[34];
  v6 = v25;
  v26 = v5;
  v8 = v1[35];
  v9 = v1[37];
  v27 = v1[36];
  v10 = v27;
  v28 = v9;
  v11 = v1[31];
  v13 = v1[29];
  v21 = v1[30];
  v12 = v21;
  v22 = v11;
  v14 = v1[31];
  v15 = v1[33];
  v23 = v1[32];
  v16 = v23;
  v24 = v15;
  v17 = v1[29];
  v20[0] = v1[28];
  v18 = v20[0];
  v20[1] = v17;
  *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)v1 + 649);
  a1[10] = v29;
  a1[11] = v4;
  a1[12] = v1[40];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 649);
  a1[6] = v6;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v3;
  a1[2] = v12;
  a1[3] = v14;
  a1[4] = v16;
  a1[5] = v7;
  *a1 = v18;
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A5670(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[39];
  v16[10] = v1[38];
  v16[11] = v3;
  v17[0] = v1[40];
  v4 = v1[35];
  v16[6] = v1[34];
  v16[7] = v4;
  v5 = v1[37];
  v16[8] = v1[36];
  v16[9] = v5;
  v6 = v1[31];
  v16[2] = v1[30];
  v16[3] = v6;
  v7 = v1[33];
  v16[4] = v1[32];
  v16[5] = v7;
  v8 = v1[29];
  v16[0] = v1[28];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 649);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[38] = *(_OWORD *)(a1 + 160);
  v1[39] = v9;
  v1[40] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 649) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[34] = *(_OWORD *)(a1 + 96);
  v1[35] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[36] = *(_OWORD *)(a1 + 128);
  v1[37] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[30] = *(_OWORD *)(a1 + 32);
  v1[31] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[32] = *(_OWORD *)(a1 + 64);
  v1[33] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[28] = *(_OWORD *)a1;
  v1[29] = v15;
  return result;
}

uint64_t (*sub_1AD3A5738())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A5748@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  _OWORD v20[2];
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[2];

  v2 = v1[53];
  v3 = v1[51];
  v29 = v1[52];
  v30 = v2;
  v4 = v1[53];
  v31[0] = v1[54];
  v5 = v1[49];
  v7 = v1[47];
  v25 = v1[48];
  v6 = v25;
  v26 = v5;
  v8 = v1[49];
  v9 = v1[51];
  v27 = v1[50];
  v10 = v27;
  v28 = v9;
  v11 = v1[45];
  v13 = v1[43];
  v21 = v1[44];
  v12 = v21;
  v22 = v11;
  v14 = v1[45];
  v15 = v1[47];
  v23 = v1[46];
  v16 = v23;
  v24 = v15;
  v17 = v1[43];
  v20[0] = v1[42];
  v18 = v20[0];
  v20[1] = v17;
  *(_OWORD *)((char *)v31 + 9) = *(_OWORD *)((char *)v1 + 873);
  a1[10] = v29;
  a1[11] = v4;
  a1[12] = v1[54];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 873);
  a1[6] = v6;
  a1[7] = v8;
  a1[8] = v10;
  a1[9] = v3;
  a1[2] = v12;
  a1[3] = v14;
  a1[4] = v16;
  a1[5] = v7;
  *a1 = v18;
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v20, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A57FC(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[53];
  v16[10] = v1[52];
  v16[11] = v3;
  v17[0] = v1[54];
  v4 = v1[49];
  v16[6] = v1[48];
  v16[7] = v4;
  v5 = v1[51];
  v16[8] = v1[50];
  v16[9] = v5;
  v6 = v1[45];
  v16[2] = v1[44];
  v16[3] = v6;
  v7 = v1[47];
  v16[4] = v1[46];
  v16[5] = v7;
  v8 = v1[43];
  v16[0] = v1[42];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 873);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[52] = *(_OWORD *)(a1 + 160);
  v1[53] = v9;
  v1[54] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 873) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[48] = *(_OWORD *)(a1 + 96);
  v1[49] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[50] = *(_OWORD *)(a1 + 128);
  v1[51] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[44] = *(_OWORD *)(a1 + 32);
  v1[45] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[46] = *(_OWORD *)(a1 + 64);
  v1[47] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[42] = *(_OWORD *)a1;
  v1[43] = v15;
  return result;
}

uint64_t (*sub_1AD3A58C4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A58D4@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  _OWORD v19[2];
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v30[2];

  v2 = v1[67];
  v28 = v1[66];
  v29 = v2;
  v30[0] = v1[68];
  v3 = v1[63];
  v5 = v1[61];
  v24 = v1[62];
  v4 = v24;
  v25 = v3;
  v6 = v1[65];
  v7 = v1[63];
  v26 = v1[64];
  v27 = v6;
  v8 = v1[59];
  v10 = v1[57];
  v20 = v1[58];
  v9 = v20;
  v21 = v8;
  v11 = v1[59];
  v12 = v1[61];
  v22 = v1[60];
  v13 = v22;
  v23 = v12;
  v14 = v1[57];
  v19[0] = v1[56];
  v15 = v19[0];
  v19[1] = v14;
  *(_OWORD *)((char *)v30 + 9) = *(_OWORD *)((char *)v1 + 1097);
  v16 = v1[67];
  a1[10] = v1[66];
  a1[11] = v16;
  a1[12] = v1[68];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 1097);
  a1[6] = v4;
  a1[7] = v7;
  v17 = v1[65];
  a1[8] = v1[64];
  a1[9] = v17;
  a1[2] = v9;
  a1[3] = v11;
  a1[4] = v13;
  a1[5] = v5;
  *a1 = v15;
  a1[1] = v10;
  return sub_1AD3AA670((uint64_t)v19, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A5998(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[67];
  v16[10] = v1[66];
  v16[11] = v3;
  v17[0] = v1[68];
  v4 = v1[63];
  v16[6] = v1[62];
  v16[7] = v4;
  v5 = v1[65];
  v16[8] = v1[64];
  v16[9] = v5;
  v6 = v1[59];
  v16[2] = v1[58];
  v16[3] = v6;
  v7 = v1[61];
  v16[4] = v1[60];
  v16[5] = v7;
  v8 = v1[57];
  v16[0] = v1[56];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 1097);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[66] = *(_OWORD *)(a1 + 160);
  v1[67] = v9;
  v1[68] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 1097) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[62] = *(_OWORD *)(a1 + 96);
  v1[63] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[64] = *(_OWORD *)(a1 + 128);
  v1[65] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[58] = *(_OWORD *)(a1 + 32);
  v1[59] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[60] = *(_OWORD *)(a1 + 64);
  v1[61] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[56] = *(_OWORD *)a1;
  v1[57] = v15;
  return result;
}

uint64_t (*sub_1AD3A5A70())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A5A80@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[81];
  v15[10] = v1[80];
  v15[11] = v2;
  v16[0] = v1[82];
  v3 = v1[77];
  v15[6] = v1[76];
  v15[7] = v3;
  v4 = v1[79];
  v15[8] = v1[78];
  v15[9] = v4;
  v5 = v1[73];
  v15[2] = v1[72];
  v15[3] = v5;
  v6 = v1[75];
  v15[4] = v1[74];
  v15[5] = v6;
  v7 = v1[71];
  v15[0] = v1[70];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 1321);
  v8 = v1[81];
  a1[10] = v1[80];
  a1[11] = v8;
  a1[12] = v1[82];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 1321);
  v9 = v1[77];
  a1[6] = v1[76];
  a1[7] = v9;
  v10 = v1[79];
  a1[8] = v1[78];
  a1[9] = v10;
  v11 = v1[73];
  a1[2] = v1[72];
  a1[3] = v11;
  v12 = v1[75];
  a1[4] = v1[74];
  a1[5] = v12;
  v13 = v1[71];
  *a1 = v1[70];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A5B64(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[81];
  v16[10] = v1[80];
  v16[11] = v3;
  v17[0] = v1[82];
  v4 = v1[77];
  v16[6] = v1[76];
  v16[7] = v4;
  v5 = v1[79];
  v16[8] = v1[78];
  v16[9] = v5;
  v6 = v1[73];
  v16[2] = v1[72];
  v16[3] = v6;
  v7 = v1[75];
  v16[4] = v1[74];
  v16[5] = v7;
  v8 = v1[71];
  v16[0] = v1[70];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 1321);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[80] = *(_OWORD *)(a1 + 160);
  v1[81] = v9;
  v1[82] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 1321) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[76] = *(_OWORD *)(a1 + 96);
  v1[77] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[78] = *(_OWORD *)(a1 + 128);
  v1[79] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[72] = *(_OWORD *)(a1 + 32);
  v1[73] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[74] = *(_OWORD *)(a1 + 64);
  v1[75] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[70] = *(_OWORD *)a1;
  v1[71] = v15;
  return result;
}

uint64_t (*sub_1AD3A5C5C())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A5C6C@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[95];
  v15[10] = v1[94];
  v15[11] = v2;
  v16[0] = v1[96];
  v3 = v1[91];
  v15[6] = v1[90];
  v15[7] = v3;
  v4 = v1[93];
  v15[8] = v1[92];
  v15[9] = v4;
  v5 = v1[87];
  v15[2] = v1[86];
  v15[3] = v5;
  v6 = v1[89];
  v15[4] = v1[88];
  v15[5] = v6;
  v7 = v1[85];
  v15[0] = v1[84];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 1545);
  v8 = v1[95];
  a1[10] = v1[94];
  a1[11] = v8;
  a1[12] = v1[96];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 1545);
  v9 = v1[91];
  a1[6] = v1[90];
  a1[7] = v9;
  v10 = v1[93];
  a1[8] = v1[92];
  a1[9] = v10;
  v11 = v1[87];
  a1[2] = v1[86];
  a1[3] = v11;
  v12 = v1[89];
  a1[4] = v1[88];
  a1[5] = v12;
  v13 = v1[85];
  *a1 = v1[84];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A5D50(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[95];
  v16[10] = v1[94];
  v16[11] = v3;
  v17[0] = v1[96];
  v4 = v1[91];
  v16[6] = v1[90];
  v16[7] = v4;
  v5 = v1[93];
  v16[8] = v1[92];
  v16[9] = v5;
  v6 = v1[87];
  v16[2] = v1[86];
  v16[3] = v6;
  v7 = v1[89];
  v16[4] = v1[88];
  v16[5] = v7;
  v8 = v1[85];
  v16[0] = v1[84];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 1545);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[94] = *(_OWORD *)(a1 + 160);
  v1[95] = v9;
  v1[96] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 1545) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[90] = *(_OWORD *)(a1 + 96);
  v1[91] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[92] = *(_OWORD *)(a1 + 128);
  v1[93] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[86] = *(_OWORD *)(a1 + 32);
  v1[87] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[88] = *(_OWORD *)(a1 + 64);
  v1[89] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[84] = *(_OWORD *)a1;
  v1[85] = v15;
  return result;
}

uint64_t (*sub_1AD3A5E48())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A5E58@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[109];
  v15[10] = v1[108];
  v15[11] = v2;
  v16[0] = v1[110];
  v3 = v1[105];
  v15[6] = v1[104];
  v15[7] = v3;
  v4 = v1[107];
  v15[8] = v1[106];
  v15[9] = v4;
  v5 = v1[101];
  v15[2] = v1[100];
  v15[3] = v5;
  v6 = v1[103];
  v15[4] = v1[102];
  v15[5] = v6;
  v7 = v1[99];
  v15[0] = v1[98];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 1769);
  v8 = v1[109];
  a1[10] = v1[108];
  a1[11] = v8;
  a1[12] = v1[110];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 1769);
  v9 = v1[105];
  a1[6] = v1[104];
  a1[7] = v9;
  v10 = v1[107];
  a1[8] = v1[106];
  a1[9] = v10;
  v11 = v1[101];
  a1[2] = v1[100];
  a1[3] = v11;
  v12 = v1[103];
  a1[4] = v1[102];
  a1[5] = v12;
  v13 = v1[99];
  *a1 = v1[98];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A5F3C(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[109];
  v16[10] = v1[108];
  v16[11] = v3;
  v17[0] = v1[110];
  v4 = v1[105];
  v16[6] = v1[104];
  v16[7] = v4;
  v5 = v1[107];
  v16[8] = v1[106];
  v16[9] = v5;
  v6 = v1[101];
  v16[2] = v1[100];
  v16[3] = v6;
  v7 = v1[103];
  v16[4] = v1[102];
  v16[5] = v7;
  v8 = v1[99];
  v16[0] = v1[98];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 1769);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[108] = *(_OWORD *)(a1 + 160);
  v1[109] = v9;
  v1[110] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 1769) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[104] = *(_OWORD *)(a1 + 96);
  v1[105] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[106] = *(_OWORD *)(a1 + 128);
  v1[107] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[100] = *(_OWORD *)(a1 + 32);
  v1[101] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[102] = *(_OWORD *)(a1 + 64);
  v1[103] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[98] = *(_OWORD *)a1;
  v1[99] = v15;
  return result;
}

uint64_t (*sub_1AD3A6034())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A6044@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[123];
  v15[10] = v1[122];
  v15[11] = v2;
  v16[0] = v1[124];
  v3 = v1[119];
  v15[6] = v1[118];
  v15[7] = v3;
  v4 = v1[121];
  v15[8] = v1[120];
  v15[9] = v4;
  v5 = v1[115];
  v15[2] = v1[114];
  v15[3] = v5;
  v6 = v1[117];
  v15[4] = v1[116];
  v15[5] = v6;
  v7 = v1[113];
  v15[0] = v1[112];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 1993);
  v8 = v1[123];
  a1[10] = v1[122];
  a1[11] = v8;
  a1[12] = v1[124];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 1993);
  v9 = v1[119];
  a1[6] = v1[118];
  a1[7] = v9;
  v10 = v1[121];
  a1[8] = v1[120];
  a1[9] = v10;
  v11 = v1[115];
  a1[2] = v1[114];
  a1[3] = v11;
  v12 = v1[117];
  a1[4] = v1[116];
  a1[5] = v12;
  v13 = v1[113];
  *a1 = v1[112];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A6128(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[123];
  v16[10] = v1[122];
  v16[11] = v3;
  v17[0] = v1[124];
  v4 = v1[119];
  v16[6] = v1[118];
  v16[7] = v4;
  v5 = v1[121];
  v16[8] = v1[120];
  v16[9] = v5;
  v6 = v1[115];
  v16[2] = v1[114];
  v16[3] = v6;
  v7 = v1[117];
  v16[4] = v1[116];
  v16[5] = v7;
  v8 = v1[113];
  v16[0] = v1[112];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 1993);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[122] = *(_OWORD *)(a1 + 160);
  v1[123] = v9;
  v1[124] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 1993) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[118] = *(_OWORD *)(a1 + 96);
  v1[119] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[120] = *(_OWORD *)(a1 + 128);
  v1[121] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[114] = *(_OWORD *)(a1 + 32);
  v1[115] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[116] = *(_OWORD *)(a1 + 64);
  v1[117] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[112] = *(_OWORD *)a1;
  v1[113] = v15;
  return result;
}

uint64_t (*sub_1AD3A6220())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A6230@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[137];
  v15[10] = v1[136];
  v15[11] = v2;
  v16[0] = v1[138];
  v3 = v1[133];
  v15[6] = v1[132];
  v15[7] = v3;
  v4 = v1[135];
  v15[8] = v1[134];
  v15[9] = v4;
  v5 = v1[129];
  v15[2] = v1[128];
  v15[3] = v5;
  v6 = v1[131];
  v15[4] = v1[130];
  v15[5] = v6;
  v7 = v1[127];
  v15[0] = v1[126];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 2217);
  v8 = v1[137];
  a1[10] = v1[136];
  a1[11] = v8;
  a1[12] = v1[138];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 2217);
  v9 = v1[133];
  a1[6] = v1[132];
  a1[7] = v9;
  v10 = v1[135];
  a1[8] = v1[134];
  a1[9] = v10;
  v11 = v1[129];
  a1[2] = v1[128];
  a1[3] = v11;
  v12 = v1[131];
  a1[4] = v1[130];
  a1[5] = v12;
  v13 = v1[127];
  *a1 = v1[126];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A6314(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[137];
  v16[10] = v1[136];
  v16[11] = v3;
  v17[0] = v1[138];
  v4 = v1[133];
  v16[6] = v1[132];
  v16[7] = v4;
  v5 = v1[135];
  v16[8] = v1[134];
  v16[9] = v5;
  v6 = v1[129];
  v16[2] = v1[128];
  v16[3] = v6;
  v7 = v1[131];
  v16[4] = v1[130];
  v16[5] = v7;
  v8 = v1[127];
  v16[0] = v1[126];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 2217);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[136] = *(_OWORD *)(a1 + 160);
  v1[137] = v9;
  v1[138] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 2217) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[132] = *(_OWORD *)(a1 + 96);
  v1[133] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[134] = *(_OWORD *)(a1 + 128);
  v1[135] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[128] = *(_OWORD *)(a1 + 32);
  v1[129] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[130] = *(_OWORD *)(a1 + 64);
  v1[131] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[126] = *(_OWORD *)a1;
  v1[127] = v15;
  return result;
}

uint64_t (*sub_1AD3A640C())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A641C@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[151];
  v15[10] = v1[150];
  v15[11] = v2;
  v16[0] = v1[152];
  v3 = v1[147];
  v15[6] = v1[146];
  v15[7] = v3;
  v4 = v1[149];
  v15[8] = v1[148];
  v15[9] = v4;
  v5 = v1[143];
  v15[2] = v1[142];
  v15[3] = v5;
  v6 = v1[145];
  v15[4] = v1[144];
  v15[5] = v6;
  v7 = v1[141];
  v15[0] = v1[140];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 2441);
  v8 = v1[151];
  a1[10] = v1[150];
  a1[11] = v8;
  a1[12] = v1[152];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 2441);
  v9 = v1[147];
  a1[6] = v1[146];
  a1[7] = v9;
  v10 = v1[149];
  a1[8] = v1[148];
  a1[9] = v10;
  v11 = v1[143];
  a1[2] = v1[142];
  a1[3] = v11;
  v12 = v1[145];
  a1[4] = v1[144];
  a1[5] = v12;
  v13 = v1[141];
  *a1 = v1[140];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A6500(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[151];
  v16[10] = v1[150];
  v16[11] = v3;
  v17[0] = v1[152];
  v4 = v1[147];
  v16[6] = v1[146];
  v16[7] = v4;
  v5 = v1[149];
  v16[8] = v1[148];
  v16[9] = v5;
  v6 = v1[143];
  v16[2] = v1[142];
  v16[3] = v6;
  v7 = v1[145];
  v16[4] = v1[144];
  v16[5] = v7;
  v8 = v1[141];
  v16[0] = v1[140];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 2441);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[150] = *(_OWORD *)(a1 + 160);
  v1[151] = v9;
  v1[152] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 2441) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[146] = *(_OWORD *)(a1 + 96);
  v1[147] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[148] = *(_OWORD *)(a1 + 128);
  v1[149] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[142] = *(_OWORD *)(a1 + 32);
  v1[143] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[144] = *(_OWORD *)(a1 + 64);
  v1[145] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[140] = *(_OWORD *)a1;
  v1[141] = v15;
  return result;
}

uint64_t (*sub_1AD3A65F8())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A6608@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[165];
  v15[10] = v1[164];
  v15[11] = v2;
  v16[0] = v1[166];
  v3 = v1[161];
  v15[6] = v1[160];
  v15[7] = v3;
  v4 = v1[163];
  v15[8] = v1[162];
  v15[9] = v4;
  v5 = v1[157];
  v15[2] = v1[156];
  v15[3] = v5;
  v6 = v1[159];
  v15[4] = v1[158];
  v15[5] = v6;
  v7 = v1[155];
  v15[0] = v1[154];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 2665);
  v8 = v1[165];
  a1[10] = v1[164];
  a1[11] = v8;
  a1[12] = v1[166];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 2665);
  v9 = v1[161];
  a1[6] = v1[160];
  a1[7] = v9;
  v10 = v1[163];
  a1[8] = v1[162];
  a1[9] = v10;
  v11 = v1[157];
  a1[2] = v1[156];
  a1[3] = v11;
  v12 = v1[159];
  a1[4] = v1[158];
  a1[5] = v12;
  v13 = v1[155];
  *a1 = v1[154];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A66EC(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[165];
  v16[10] = v1[164];
  v16[11] = v3;
  v17[0] = v1[166];
  v4 = v1[161];
  v16[6] = v1[160];
  v16[7] = v4;
  v5 = v1[163];
  v16[8] = v1[162];
  v16[9] = v5;
  v6 = v1[157];
  v16[2] = v1[156];
  v16[3] = v6;
  v7 = v1[159];
  v16[4] = v1[158];
  v16[5] = v7;
  v8 = v1[155];
  v16[0] = v1[154];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 2665);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[164] = *(_OWORD *)(a1 + 160);
  v1[165] = v9;
  v1[166] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 2665) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[160] = *(_OWORD *)(a1 + 96);
  v1[161] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[162] = *(_OWORD *)(a1 + 128);
  v1[163] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[156] = *(_OWORD *)(a1 + 32);
  v1[157] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[158] = *(_OWORD *)(a1 + 64);
  v1[159] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[154] = *(_OWORD *)a1;
  v1[155] = v15;
  return result;
}

uint64_t (*sub_1AD3A67E4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A67F4@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[179];
  v15[10] = v1[178];
  v15[11] = v2;
  v16[0] = v1[180];
  v3 = v1[175];
  v15[6] = v1[174];
  v15[7] = v3;
  v4 = v1[177];
  v15[8] = v1[176];
  v15[9] = v4;
  v5 = v1[171];
  v15[2] = v1[170];
  v15[3] = v5;
  v6 = v1[173];
  v15[4] = v1[172];
  v15[5] = v6;
  v7 = v1[169];
  v15[0] = v1[168];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 2889);
  v8 = v1[179];
  a1[10] = v1[178];
  a1[11] = v8;
  a1[12] = v1[180];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 2889);
  v9 = v1[175];
  a1[6] = v1[174];
  a1[7] = v9;
  v10 = v1[177];
  a1[8] = v1[176];
  a1[9] = v10;
  v11 = v1[171];
  a1[2] = v1[170];
  a1[3] = v11;
  v12 = v1[173];
  a1[4] = v1[172];
  a1[5] = v12;
  v13 = v1[169];
  *a1 = v1[168];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A68D8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[179];
  v16[10] = v1[178];
  v16[11] = v3;
  v17[0] = v1[180];
  v4 = v1[175];
  v16[6] = v1[174];
  v16[7] = v4;
  v5 = v1[177];
  v16[8] = v1[176];
  v16[9] = v5;
  v6 = v1[171];
  v16[2] = v1[170];
  v16[3] = v6;
  v7 = v1[173];
  v16[4] = v1[172];
  v16[5] = v7;
  v8 = v1[169];
  v16[0] = v1[168];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 2889);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[178] = *(_OWORD *)(a1 + 160);
  v1[179] = v9;
  v1[180] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 2889) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[174] = *(_OWORD *)(a1 + 96);
  v1[175] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[176] = *(_OWORD *)(a1 + 128);
  v1[177] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[170] = *(_OWORD *)(a1 + 32);
  v1[171] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[172] = *(_OWORD *)(a1 + 64);
  v1[173] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[168] = *(_OWORD *)a1;
  v1[169] = v15;
  return result;
}

uint64_t (*sub_1AD3A69D0())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A69E0@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[193];
  v15[10] = v1[192];
  v15[11] = v2;
  v16[0] = v1[194];
  v3 = v1[189];
  v15[6] = v1[188];
  v15[7] = v3;
  v4 = v1[191];
  v15[8] = v1[190];
  v15[9] = v4;
  v5 = v1[185];
  v15[2] = v1[184];
  v15[3] = v5;
  v6 = v1[187];
  v15[4] = v1[186];
  v15[5] = v6;
  v7 = v1[183];
  v15[0] = v1[182];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 3113);
  v8 = v1[193];
  a1[10] = v1[192];
  a1[11] = v8;
  a1[12] = v1[194];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 3113);
  v9 = v1[189];
  a1[6] = v1[188];
  a1[7] = v9;
  v10 = v1[191];
  a1[8] = v1[190];
  a1[9] = v10;
  v11 = v1[185];
  a1[2] = v1[184];
  a1[3] = v11;
  v12 = v1[187];
  a1[4] = v1[186];
  a1[5] = v12;
  v13 = v1[183];
  *a1 = v1[182];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A6AC4(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[193];
  v16[10] = v1[192];
  v16[11] = v3;
  v17[0] = v1[194];
  v4 = v1[189];
  v16[6] = v1[188];
  v16[7] = v4;
  v5 = v1[191];
  v16[8] = v1[190];
  v16[9] = v5;
  v6 = v1[185];
  v16[2] = v1[184];
  v16[3] = v6;
  v7 = v1[187];
  v16[4] = v1[186];
  v16[5] = v7;
  v8 = v1[183];
  v16[0] = v1[182];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 3113);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[192] = *(_OWORD *)(a1 + 160);
  v1[193] = v9;
  v1[194] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 3113) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[188] = *(_OWORD *)(a1 + 96);
  v1[189] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[190] = *(_OWORD *)(a1 + 128);
  v1[191] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[184] = *(_OWORD *)(a1 + 32);
  v1[185] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[186] = *(_OWORD *)(a1 + 64);
  v1[187] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[182] = *(_OWORD *)a1;
  v1[183] = v15;
  return result;
}

uint64_t (*sub_1AD3A6BBC())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A6BCC@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[207];
  v15[10] = v1[206];
  v15[11] = v2;
  v16[0] = v1[208];
  v3 = v1[203];
  v15[6] = v1[202];
  v15[7] = v3;
  v4 = v1[205];
  v15[8] = v1[204];
  v15[9] = v4;
  v5 = v1[199];
  v15[2] = v1[198];
  v15[3] = v5;
  v6 = v1[201];
  v15[4] = v1[200];
  v15[5] = v6;
  v7 = v1[197];
  v15[0] = v1[196];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 3337);
  v8 = v1[207];
  a1[10] = v1[206];
  a1[11] = v8;
  a1[12] = v1[208];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 3337);
  v9 = v1[203];
  a1[6] = v1[202];
  a1[7] = v9;
  v10 = v1[205];
  a1[8] = v1[204];
  a1[9] = v10;
  v11 = v1[199];
  a1[2] = v1[198];
  a1[3] = v11;
  v12 = v1[201];
  a1[4] = v1[200];
  a1[5] = v12;
  v13 = v1[197];
  *a1 = v1[196];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A6CB0(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[207];
  v16[10] = v1[206];
  v16[11] = v3;
  v17[0] = v1[208];
  v4 = v1[203];
  v16[6] = v1[202];
  v16[7] = v4;
  v5 = v1[205];
  v16[8] = v1[204];
  v16[9] = v5;
  v6 = v1[199];
  v16[2] = v1[198];
  v16[3] = v6;
  v7 = v1[201];
  v16[4] = v1[200];
  v16[5] = v7;
  v8 = v1[197];
  v16[0] = v1[196];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 3337);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[206] = *(_OWORD *)(a1 + 160);
  v1[207] = v9;
  v1[208] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 3337) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[202] = *(_OWORD *)(a1 + 96);
  v1[203] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[204] = *(_OWORD *)(a1 + 128);
  v1[205] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[198] = *(_OWORD *)(a1 + 32);
  v1[199] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[200] = *(_OWORD *)(a1 + 64);
  v1[201] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[196] = *(_OWORD *)a1;
  v1[197] = v15;
  return result;
}

uint64_t (*sub_1AD3A6DA8())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A6DB8@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[221];
  v15[10] = v1[220];
  v15[11] = v2;
  v16[0] = v1[222];
  v3 = v1[217];
  v15[6] = v1[216];
  v15[7] = v3;
  v4 = v1[219];
  v15[8] = v1[218];
  v15[9] = v4;
  v5 = v1[213];
  v15[2] = v1[212];
  v15[3] = v5;
  v6 = v1[215];
  v15[4] = v1[214];
  v15[5] = v6;
  v7 = v1[211];
  v15[0] = v1[210];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 3561);
  v8 = v1[221];
  a1[10] = v1[220];
  a1[11] = v8;
  a1[12] = v1[222];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 3561);
  v9 = v1[217];
  a1[6] = v1[216];
  a1[7] = v9;
  v10 = v1[219];
  a1[8] = v1[218];
  a1[9] = v10;
  v11 = v1[213];
  a1[2] = v1[212];
  a1[3] = v11;
  v12 = v1[215];
  a1[4] = v1[214];
  a1[5] = v12;
  v13 = v1[211];
  *a1 = v1[210];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A6E9C(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[221];
  v16[10] = v1[220];
  v16[11] = v3;
  v17[0] = v1[222];
  v4 = v1[217];
  v16[6] = v1[216];
  v16[7] = v4;
  v5 = v1[219];
  v16[8] = v1[218];
  v16[9] = v5;
  v6 = v1[213];
  v16[2] = v1[212];
  v16[3] = v6;
  v7 = v1[215];
  v16[4] = v1[214];
  v16[5] = v7;
  v8 = v1[211];
  v16[0] = v1[210];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 3561);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[220] = *(_OWORD *)(a1 + 160);
  v1[221] = v9;
  v1[222] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 3561) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[216] = *(_OWORD *)(a1 + 96);
  v1[217] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[218] = *(_OWORD *)(a1 + 128);
  v1[219] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[212] = *(_OWORD *)(a1 + 32);
  v1[213] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[214] = *(_OWORD *)(a1 + 64);
  v1[215] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[210] = *(_OWORD *)a1;
  v1[211] = v15;
  return result;
}

uint64_t (*sub_1AD3A6F94())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A6FA4@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[235];
  v15[10] = v1[234];
  v15[11] = v2;
  v16[0] = v1[236];
  v3 = v1[231];
  v15[6] = v1[230];
  v15[7] = v3;
  v4 = v1[233];
  v15[8] = v1[232];
  v15[9] = v4;
  v5 = v1[227];
  v15[2] = v1[226];
  v15[3] = v5;
  v6 = v1[229];
  v15[4] = v1[228];
  v15[5] = v6;
  v7 = v1[225];
  v15[0] = v1[224];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 3785);
  v8 = v1[235];
  a1[10] = v1[234];
  a1[11] = v8;
  a1[12] = v1[236];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 3785);
  v9 = v1[231];
  a1[6] = v1[230];
  a1[7] = v9;
  v10 = v1[233];
  a1[8] = v1[232];
  a1[9] = v10;
  v11 = v1[227];
  a1[2] = v1[226];
  a1[3] = v11;
  v12 = v1[229];
  a1[4] = v1[228];
  a1[5] = v12;
  v13 = v1[225];
  *a1 = v1[224];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A7088(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[235];
  v16[10] = v1[234];
  v16[11] = v3;
  v17[0] = v1[236];
  v4 = v1[231];
  v16[6] = v1[230];
  v16[7] = v4;
  v5 = v1[233];
  v16[8] = v1[232];
  v16[9] = v5;
  v6 = v1[227];
  v16[2] = v1[226];
  v16[3] = v6;
  v7 = v1[229];
  v16[4] = v1[228];
  v16[5] = v7;
  v8 = v1[225];
  v16[0] = v1[224];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 3785);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[234] = *(_OWORD *)(a1 + 160);
  v1[235] = v9;
  v1[236] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 3785) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[230] = *(_OWORD *)(a1 + 96);
  v1[231] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[232] = *(_OWORD *)(a1 + 128);
  v1[233] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[226] = *(_OWORD *)(a1 + 32);
  v1[227] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[228] = *(_OWORD *)(a1 + 64);
  v1[229] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[224] = *(_OWORD *)a1;
  v1[225] = v15;
  return result;
}

uint64_t (*sub_1AD3A7180())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A7190@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[249];
  v15[10] = v1[248];
  v15[11] = v2;
  v16[0] = v1[250];
  v3 = v1[245];
  v15[6] = v1[244];
  v15[7] = v3;
  v4 = v1[247];
  v15[8] = v1[246];
  v15[9] = v4;
  v5 = v1[241];
  v15[2] = v1[240];
  v15[3] = v5;
  v6 = v1[243];
  v15[4] = v1[242];
  v15[5] = v6;
  v7 = v1[239];
  v15[0] = v1[238];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 4009);
  v8 = v1[249];
  a1[10] = v1[248];
  a1[11] = v8;
  a1[12] = v1[250];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 4009);
  v9 = v1[245];
  a1[6] = v1[244];
  a1[7] = v9;
  v10 = v1[247];
  a1[8] = v1[246];
  a1[9] = v10;
  v11 = v1[241];
  a1[2] = v1[240];
  a1[3] = v11;
  v12 = v1[243];
  a1[4] = v1[242];
  a1[5] = v12;
  v13 = v1[239];
  *a1 = v1[238];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A7274(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[249];
  v16[10] = v1[248];
  v16[11] = v3;
  v17[0] = v1[250];
  v4 = v1[245];
  v16[6] = v1[244];
  v16[7] = v4;
  v5 = v1[247];
  v16[8] = v1[246];
  v16[9] = v5;
  v6 = v1[241];
  v16[2] = v1[240];
  v16[3] = v6;
  v7 = v1[243];
  v16[4] = v1[242];
  v16[5] = v7;
  v8 = v1[239];
  v16[0] = v1[238];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 4009);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[248] = *(_OWORD *)(a1 + 160);
  v1[249] = v9;
  v1[250] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 4009) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[244] = *(_OWORD *)(a1 + 96);
  v1[245] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[246] = *(_OWORD *)(a1 + 128);
  v1[247] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[240] = *(_OWORD *)(a1 + 32);
  v1[241] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[242] = *(_OWORD *)(a1 + 64);
  v1[243] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[238] = *(_OWORD *)a1;
  v1[239] = v15;
  return result;
}

uint64_t (*sub_1AD3A736C())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A737C@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[263];
  v15[10] = v1[262];
  v15[11] = v2;
  v16[0] = v1[264];
  v3 = v1[259];
  v15[6] = v1[258];
  v15[7] = v3;
  v4 = v1[261];
  v15[8] = v1[260];
  v15[9] = v4;
  v5 = v1[255];
  v15[2] = v1[254];
  v15[3] = v5;
  v6 = v1[257];
  v15[4] = v1[256];
  v15[5] = v6;
  v7 = v1[253];
  v15[0] = v1[252];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 4233);
  v8 = v1[263];
  a1[10] = v1[262];
  a1[11] = v8;
  a1[12] = v1[264];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 4233);
  v9 = v1[259];
  a1[6] = v1[258];
  a1[7] = v9;
  v10 = v1[261];
  a1[8] = v1[260];
  a1[9] = v10;
  v11 = v1[255];
  a1[2] = v1[254];
  a1[3] = v11;
  v12 = v1[257];
  a1[4] = v1[256];
  a1[5] = v12;
  v13 = v1[253];
  *a1 = v1[252];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A7460(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[263];
  v16[10] = v1[262];
  v16[11] = v3;
  v17[0] = v1[264];
  v4 = v1[259];
  v16[6] = v1[258];
  v16[7] = v4;
  v5 = v1[261];
  v16[8] = v1[260];
  v16[9] = v5;
  v6 = v1[255];
  v16[2] = v1[254];
  v16[3] = v6;
  v7 = v1[257];
  v16[4] = v1[256];
  v16[5] = v7;
  v8 = v1[253];
  v16[0] = v1[252];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 4233);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[262] = *(_OWORD *)(a1 + 160);
  v1[263] = v9;
  v1[264] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 4233) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[258] = *(_OWORD *)(a1 + 96);
  v1[259] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[260] = *(_OWORD *)(a1 + 128);
  v1[261] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[254] = *(_OWORD *)(a1 + 32);
  v1[255] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[256] = *(_OWORD *)(a1 + 64);
  v1[257] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[252] = *(_OWORD *)a1;
  v1[253] = v15;
  return result;
}

uint64_t (*sub_1AD3A7558())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A7568@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[277];
  v15[10] = v1[276];
  v15[11] = v2;
  v16[0] = v1[278];
  v3 = v1[273];
  v15[6] = v1[272];
  v15[7] = v3;
  v4 = v1[275];
  v15[8] = v1[274];
  v15[9] = v4;
  v5 = v1[269];
  v15[2] = v1[268];
  v15[3] = v5;
  v6 = v1[271];
  v15[4] = v1[270];
  v15[5] = v6;
  v7 = v1[267];
  v15[0] = v1[266];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 4457);
  v8 = v1[277];
  a1[10] = v1[276];
  a1[11] = v8;
  a1[12] = v1[278];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 4457);
  v9 = v1[273];
  a1[6] = v1[272];
  a1[7] = v9;
  v10 = v1[275];
  a1[8] = v1[274];
  a1[9] = v10;
  v11 = v1[269];
  a1[2] = v1[268];
  a1[3] = v11;
  v12 = v1[271];
  a1[4] = v1[270];
  a1[5] = v12;
  v13 = v1[267];
  *a1 = v1[266];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A7650(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[277];
  v16[10] = v1[276];
  v16[11] = v3;
  v17[0] = v1[278];
  v4 = v1[273];
  v16[6] = v1[272];
  v16[7] = v4;
  v5 = v1[275];
  v16[8] = v1[274];
  v16[9] = v5;
  v6 = v1[269];
  v16[2] = v1[268];
  v16[3] = v6;
  v7 = v1[271];
  v16[4] = v1[270];
  v16[5] = v7;
  v8 = v1[267];
  v16[0] = v1[266];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 4457);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[276] = *(_OWORD *)(a1 + 160);
  v1[277] = v9;
  v1[278] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 4457) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[272] = *(_OWORD *)(a1 + 96);
  v1[273] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[274] = *(_OWORD *)(a1 + 128);
  v1[275] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[268] = *(_OWORD *)(a1 + 32);
  v1[269] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[270] = *(_OWORD *)(a1 + 64);
  v1[271] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[266] = *(_OWORD *)a1;
  v1[267] = v15;
  return result;
}

uint64_t (*sub_1AD3A774C())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A7760@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[291];
  v15[10] = v1[290];
  v15[11] = v2;
  v16[0] = v1[292];
  v3 = v1[287];
  v15[6] = v1[286];
  v15[7] = v3;
  v4 = v1[289];
  v15[8] = v1[288];
  v15[9] = v4;
  v5 = v1[283];
  v15[2] = v1[282];
  v15[3] = v5;
  v6 = v1[285];
  v15[4] = v1[284];
  v15[5] = v6;
  v7 = v1[281];
  v15[0] = v1[280];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 4681);
  v8 = v1[291];
  a1[10] = v1[290];
  a1[11] = v8;
  a1[12] = v1[292];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 4681);
  v9 = v1[287];
  a1[6] = v1[286];
  a1[7] = v9;
  v10 = v1[289];
  a1[8] = v1[288];
  a1[9] = v10;
  v11 = v1[283];
  a1[2] = v1[282];
  a1[3] = v11;
  v12 = v1[285];
  a1[4] = v1[284];
  a1[5] = v12;
  v13 = v1[281];
  *a1 = v1[280];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A7848(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[291];
  v16[10] = v1[290];
  v16[11] = v3;
  v17[0] = v1[292];
  v4 = v1[287];
  v16[6] = v1[286];
  v16[7] = v4;
  v5 = v1[289];
  v16[8] = v1[288];
  v16[9] = v5;
  v6 = v1[283];
  v16[2] = v1[282];
  v16[3] = v6;
  v7 = v1[285];
  v16[4] = v1[284];
  v16[5] = v7;
  v8 = v1[281];
  v16[0] = v1[280];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 4681);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[290] = *(_OWORD *)(a1 + 160);
  v1[291] = v9;
  v1[292] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 4681) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[286] = *(_OWORD *)(a1 + 96);
  v1[287] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[288] = *(_OWORD *)(a1 + 128);
  v1[289] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[282] = *(_OWORD *)(a1 + 32);
  v1[283] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[284] = *(_OWORD *)(a1 + 64);
  v1[285] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[280] = *(_OWORD *)a1;
  v1[281] = v15;
  return result;
}

uint64_t (*sub_1AD3A7944())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A7958@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[305];
  v15[10] = v1[304];
  v15[11] = v2;
  v16[0] = v1[306];
  v3 = v1[301];
  v15[6] = v1[300];
  v15[7] = v3;
  v4 = v1[303];
  v15[8] = v1[302];
  v15[9] = v4;
  v5 = v1[297];
  v15[2] = v1[296];
  v15[3] = v5;
  v6 = v1[299];
  v15[4] = v1[298];
  v15[5] = v6;
  v7 = v1[295];
  v15[0] = v1[294];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 4905);
  v8 = v1[305];
  a1[10] = v1[304];
  a1[11] = v8;
  a1[12] = v1[306];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 4905);
  v9 = v1[301];
  a1[6] = v1[300];
  a1[7] = v9;
  v10 = v1[303];
  a1[8] = v1[302];
  a1[9] = v10;
  v11 = v1[297];
  a1[2] = v1[296];
  a1[3] = v11;
  v12 = v1[299];
  a1[4] = v1[298];
  a1[5] = v12;
  v13 = v1[295];
  *a1 = v1[294];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A7A40(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[305];
  v16[10] = v1[304];
  v16[11] = v3;
  v17[0] = v1[306];
  v4 = v1[301];
  v16[6] = v1[300];
  v16[7] = v4;
  v5 = v1[303];
  v16[8] = v1[302];
  v16[9] = v5;
  v6 = v1[297];
  v16[2] = v1[296];
  v16[3] = v6;
  v7 = v1[299];
  v16[4] = v1[298];
  v16[5] = v7;
  v8 = v1[295];
  v16[0] = v1[294];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 4905);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[304] = *(_OWORD *)(a1 + 160);
  v1[305] = v9;
  v1[306] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 4905) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[300] = *(_OWORD *)(a1 + 96);
  v1[301] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[302] = *(_OWORD *)(a1 + 128);
  v1[303] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[296] = *(_OWORD *)(a1 + 32);
  v1[297] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[298] = *(_OWORD *)(a1 + 64);
  v1[299] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[294] = *(_OWORD *)a1;
  v1[295] = v15;
  return result;
}

uint64_t (*sub_1AD3A7B3C())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A7B50@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[319];
  v15[10] = v1[318];
  v15[11] = v2;
  v16[0] = v1[320];
  v3 = v1[315];
  v15[6] = v1[314];
  v15[7] = v3;
  v4 = v1[317];
  v15[8] = v1[316];
  v15[9] = v4;
  v5 = v1[311];
  v15[2] = v1[310];
  v15[3] = v5;
  v6 = v1[313];
  v15[4] = v1[312];
  v15[5] = v6;
  v7 = v1[309];
  v15[0] = v1[308];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 5129);
  v8 = v1[319];
  a1[10] = v1[318];
  a1[11] = v8;
  a1[12] = v1[320];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 5129);
  v9 = v1[315];
  a1[6] = v1[314];
  a1[7] = v9;
  v10 = v1[317];
  a1[8] = v1[316];
  a1[9] = v10;
  v11 = v1[311];
  a1[2] = v1[310];
  a1[3] = v11;
  v12 = v1[313];
  a1[4] = v1[312];
  a1[5] = v12;
  v13 = v1[309];
  *a1 = v1[308];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A7C38(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[319];
  v16[10] = v1[318];
  v16[11] = v3;
  v17[0] = v1[320];
  v4 = v1[315];
  v16[6] = v1[314];
  v16[7] = v4;
  v5 = v1[317];
  v16[8] = v1[316];
  v16[9] = v5;
  v6 = v1[311];
  v16[2] = v1[310];
  v16[3] = v6;
  v7 = v1[313];
  v16[4] = v1[312];
  v16[5] = v7;
  v8 = v1[309];
  v16[0] = v1[308];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 5129);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[318] = *(_OWORD *)(a1 + 160);
  v1[319] = v9;
  v1[320] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 5129) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[314] = *(_OWORD *)(a1 + 96);
  v1[315] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[316] = *(_OWORD *)(a1 + 128);
  v1[317] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[310] = *(_OWORD *)(a1 + 32);
  v1[311] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[312] = *(_OWORD *)(a1 + 64);
  v1[313] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[308] = *(_OWORD *)a1;
  v1[309] = v15;
  return result;
}

uint64_t (*sub_1AD3A7D34())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A7D48@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[333];
  v15[10] = v1[332];
  v15[11] = v2;
  v16[0] = v1[334];
  v3 = v1[329];
  v15[6] = v1[328];
  v15[7] = v3;
  v4 = v1[331];
  v15[8] = v1[330];
  v15[9] = v4;
  v5 = v1[325];
  v15[2] = v1[324];
  v15[3] = v5;
  v6 = v1[327];
  v15[4] = v1[326];
  v15[5] = v6;
  v7 = v1[323];
  v15[0] = v1[322];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 5353);
  v8 = v1[333];
  a1[10] = v1[332];
  a1[11] = v8;
  a1[12] = v1[334];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 5353);
  v9 = v1[329];
  a1[6] = v1[328];
  a1[7] = v9;
  v10 = v1[331];
  a1[8] = v1[330];
  a1[9] = v10;
  v11 = v1[325];
  a1[2] = v1[324];
  a1[3] = v11;
  v12 = v1[327];
  a1[4] = v1[326];
  a1[5] = v12;
  v13 = v1[323];
  *a1 = v1[322];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A7E30(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[333];
  v16[10] = v1[332];
  v16[11] = v3;
  v17[0] = v1[334];
  v4 = v1[329];
  v16[6] = v1[328];
  v16[7] = v4;
  v5 = v1[331];
  v16[8] = v1[330];
  v16[9] = v5;
  v6 = v1[325];
  v16[2] = v1[324];
  v16[3] = v6;
  v7 = v1[327];
  v16[4] = v1[326];
  v16[5] = v7;
  v8 = v1[323];
  v16[0] = v1[322];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 5353);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[332] = *(_OWORD *)(a1 + 160);
  v1[333] = v9;
  v1[334] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 5353) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[328] = *(_OWORD *)(a1 + 96);
  v1[329] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[330] = *(_OWORD *)(a1 + 128);
  v1[331] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[324] = *(_OWORD *)(a1 + 32);
  v1[325] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[326] = *(_OWORD *)(a1 + 64);
  v1[327] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[322] = *(_OWORD *)a1;
  v1[323] = v15;
  return result;
}

uint64_t (*sub_1AD3A7F2C())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A7F40@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[347];
  v15[10] = v1[346];
  v15[11] = v2;
  v16[0] = v1[348];
  v3 = v1[343];
  v15[6] = v1[342];
  v15[7] = v3;
  v4 = v1[345];
  v15[8] = v1[344];
  v15[9] = v4;
  v5 = v1[339];
  v15[2] = v1[338];
  v15[3] = v5;
  v6 = v1[341];
  v15[4] = v1[340];
  v15[5] = v6;
  v7 = v1[337];
  v15[0] = v1[336];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 5577);
  v8 = v1[347];
  a1[10] = v1[346];
  a1[11] = v8;
  a1[12] = v1[348];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 5577);
  v9 = v1[343];
  a1[6] = v1[342];
  a1[7] = v9;
  v10 = v1[345];
  a1[8] = v1[344];
  a1[9] = v10;
  v11 = v1[339];
  a1[2] = v1[338];
  a1[3] = v11;
  v12 = v1[341];
  a1[4] = v1[340];
  a1[5] = v12;
  v13 = v1[337];
  *a1 = v1[336];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A8028(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[347];
  v16[10] = v1[346];
  v16[11] = v3;
  v17[0] = v1[348];
  v4 = v1[343];
  v16[6] = v1[342];
  v16[7] = v4;
  v5 = v1[345];
  v16[8] = v1[344];
  v16[9] = v5;
  v6 = v1[339];
  v16[2] = v1[338];
  v16[3] = v6;
  v7 = v1[341];
  v16[4] = v1[340];
  v16[5] = v7;
  v8 = v1[337];
  v16[0] = v1[336];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 5577);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[346] = *(_OWORD *)(a1 + 160);
  v1[347] = v9;
  v1[348] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 5577) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[342] = *(_OWORD *)(a1 + 96);
  v1[343] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[344] = *(_OWORD *)(a1 + 128);
  v1[345] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[338] = *(_OWORD *)(a1 + 32);
  v1[339] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[340] = *(_OWORD *)(a1 + 64);
  v1[341] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[336] = *(_OWORD *)a1;
  v1[337] = v15;
  return result;
}

uint64_t (*sub_1AD3A8124())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A8138@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[361];
  v15[10] = v1[360];
  v15[11] = v2;
  v16[0] = v1[362];
  v3 = v1[357];
  v15[6] = v1[356];
  v15[7] = v3;
  v4 = v1[359];
  v15[8] = v1[358];
  v15[9] = v4;
  v5 = v1[353];
  v15[2] = v1[352];
  v15[3] = v5;
  v6 = v1[355];
  v15[4] = v1[354];
  v15[5] = v6;
  v7 = v1[351];
  v15[0] = v1[350];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 5801);
  v8 = v1[361];
  a1[10] = v1[360];
  a1[11] = v8;
  a1[12] = v1[362];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 5801);
  v9 = v1[357];
  a1[6] = v1[356];
  a1[7] = v9;
  v10 = v1[359];
  a1[8] = v1[358];
  a1[9] = v10;
  v11 = v1[353];
  a1[2] = v1[352];
  a1[3] = v11;
  v12 = v1[355];
  a1[4] = v1[354];
  a1[5] = v12;
  v13 = v1[351];
  *a1 = v1[350];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A8220(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[361];
  v16[10] = v1[360];
  v16[11] = v3;
  v17[0] = v1[362];
  v4 = v1[357];
  v16[6] = v1[356];
  v16[7] = v4;
  v5 = v1[359];
  v16[8] = v1[358];
  v16[9] = v5;
  v6 = v1[353];
  v16[2] = v1[352];
  v16[3] = v6;
  v7 = v1[355];
  v16[4] = v1[354];
  v16[5] = v7;
  v8 = v1[351];
  v16[0] = v1[350];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 5801);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[360] = *(_OWORD *)(a1 + 160);
  v1[361] = v9;
  v1[362] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 5801) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[356] = *(_OWORD *)(a1 + 96);
  v1[357] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[358] = *(_OWORD *)(a1 + 128);
  v1[359] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[352] = *(_OWORD *)(a1 + 32);
  v1[353] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[354] = *(_OWORD *)(a1 + 64);
  v1[355] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[350] = *(_OWORD *)a1;
  v1[351] = v15;
  return result;
}

uint64_t (*sub_1AD3A831C())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A8330@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[375];
  v15[10] = v1[374];
  v15[11] = v2;
  v16[0] = v1[376];
  v3 = v1[371];
  v15[6] = v1[370];
  v15[7] = v3;
  v4 = v1[373];
  v15[8] = v1[372];
  v15[9] = v4;
  v5 = v1[367];
  v15[2] = v1[366];
  v15[3] = v5;
  v6 = v1[369];
  v15[4] = v1[368];
  v15[5] = v6;
  v7 = v1[365];
  v15[0] = v1[364];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 6025);
  v8 = v1[375];
  a1[10] = v1[374];
  a1[11] = v8;
  a1[12] = v1[376];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 6025);
  v9 = v1[371];
  a1[6] = v1[370];
  a1[7] = v9;
  v10 = v1[373];
  a1[8] = v1[372];
  a1[9] = v10;
  v11 = v1[367];
  a1[2] = v1[366];
  a1[3] = v11;
  v12 = v1[369];
  a1[4] = v1[368];
  a1[5] = v12;
  v13 = v1[365];
  *a1 = v1[364];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A8418(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[375];
  v16[10] = v1[374];
  v16[11] = v3;
  v17[0] = v1[376];
  v4 = v1[371];
  v16[6] = v1[370];
  v16[7] = v4;
  v5 = v1[373];
  v16[8] = v1[372];
  v16[9] = v5;
  v6 = v1[367];
  v16[2] = v1[366];
  v16[3] = v6;
  v7 = v1[369];
  v16[4] = v1[368];
  v16[5] = v7;
  v8 = v1[365];
  v16[0] = v1[364];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 6025);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[374] = *(_OWORD *)(a1 + 160);
  v1[375] = v9;
  v1[376] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 6025) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[370] = *(_OWORD *)(a1 + 96);
  v1[371] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[372] = *(_OWORD *)(a1 + 128);
  v1[373] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[366] = *(_OWORD *)(a1 + 32);
  v1[367] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[368] = *(_OWORD *)(a1 + 64);
  v1[369] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[364] = *(_OWORD *)a1;
  v1[365] = v15;
  return result;
}

uint64_t (*sub_1AD3A8514())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A8528@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[389];
  v15[10] = v1[388];
  v15[11] = v2;
  v16[0] = v1[390];
  v3 = v1[385];
  v15[6] = v1[384];
  v15[7] = v3;
  v4 = v1[387];
  v15[8] = v1[386];
  v15[9] = v4;
  v5 = v1[381];
  v15[2] = v1[380];
  v15[3] = v5;
  v6 = v1[383];
  v15[4] = v1[382];
  v15[5] = v6;
  v7 = v1[379];
  v15[0] = v1[378];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 6249);
  v8 = v1[389];
  a1[10] = v1[388];
  a1[11] = v8;
  a1[12] = v1[390];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 6249);
  v9 = v1[385];
  a1[6] = v1[384];
  a1[7] = v9;
  v10 = v1[387];
  a1[8] = v1[386];
  a1[9] = v10;
  v11 = v1[381];
  a1[2] = v1[380];
  a1[3] = v11;
  v12 = v1[383];
  a1[4] = v1[382];
  a1[5] = v12;
  v13 = v1[379];
  *a1 = v1[378];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A8610(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[389];
  v16[10] = v1[388];
  v16[11] = v3;
  v17[0] = v1[390];
  v4 = v1[385];
  v16[6] = v1[384];
  v16[7] = v4;
  v5 = v1[387];
  v16[8] = v1[386];
  v16[9] = v5;
  v6 = v1[381];
  v16[2] = v1[380];
  v16[3] = v6;
  v7 = v1[383];
  v16[4] = v1[382];
  v16[5] = v7;
  v8 = v1[379];
  v16[0] = v1[378];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 6249);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[388] = *(_OWORD *)(a1 + 160);
  v1[389] = v9;
  v1[390] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 6249) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[384] = *(_OWORD *)(a1 + 96);
  v1[385] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[386] = *(_OWORD *)(a1 + 128);
  v1[387] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[380] = *(_OWORD *)(a1 + 32);
  v1[381] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[382] = *(_OWORD *)(a1 + 64);
  v1[383] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[378] = *(_OWORD *)a1;
  v1[379] = v15;
  return result;
}

uint64_t (*sub_1AD3A870C())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A8720@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[403];
  v15[10] = v1[402];
  v15[11] = v2;
  v16[0] = v1[404];
  v3 = v1[399];
  v15[6] = v1[398];
  v15[7] = v3;
  v4 = v1[401];
  v15[8] = v1[400];
  v15[9] = v4;
  v5 = v1[395];
  v15[2] = v1[394];
  v15[3] = v5;
  v6 = v1[397];
  v15[4] = v1[396];
  v15[5] = v6;
  v7 = v1[393];
  v15[0] = v1[392];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 6473);
  v8 = v1[403];
  a1[10] = v1[402];
  a1[11] = v8;
  a1[12] = v1[404];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 6473);
  v9 = v1[399];
  a1[6] = v1[398];
  a1[7] = v9;
  v10 = v1[401];
  a1[8] = v1[400];
  a1[9] = v10;
  v11 = v1[395];
  a1[2] = v1[394];
  a1[3] = v11;
  v12 = v1[397];
  a1[4] = v1[396];
  a1[5] = v12;
  v13 = v1[393];
  *a1 = v1[392];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A8808(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[403];
  v16[10] = v1[402];
  v16[11] = v3;
  v17[0] = v1[404];
  v4 = v1[399];
  v16[6] = v1[398];
  v16[7] = v4;
  v5 = v1[401];
  v16[8] = v1[400];
  v16[9] = v5;
  v6 = v1[395];
  v16[2] = v1[394];
  v16[3] = v6;
  v7 = v1[397];
  v16[4] = v1[396];
  v16[5] = v7;
  v8 = v1[393];
  v16[0] = v1[392];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 6473);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[402] = *(_OWORD *)(a1 + 160);
  v1[403] = v9;
  v1[404] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 6473) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[398] = *(_OWORD *)(a1 + 96);
  v1[399] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[400] = *(_OWORD *)(a1 + 128);
  v1[401] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[394] = *(_OWORD *)(a1 + 32);
  v1[395] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[396] = *(_OWORD *)(a1 + 64);
  v1[397] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[392] = *(_OWORD *)a1;
  v1[393] = v15;
  return result;
}

uint64_t (*sub_1AD3A8904())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A8918@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[417];
  v15[10] = v1[416];
  v15[11] = v2;
  v16[0] = v1[418];
  v3 = v1[413];
  v15[6] = v1[412];
  v15[7] = v3;
  v4 = v1[415];
  v15[8] = v1[414];
  v15[9] = v4;
  v5 = v1[409];
  v15[2] = v1[408];
  v15[3] = v5;
  v6 = v1[411];
  v15[4] = v1[410];
  v15[5] = v6;
  v7 = v1[407];
  v15[0] = v1[406];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 6697);
  v8 = v1[417];
  a1[10] = v1[416];
  a1[11] = v8;
  a1[12] = v1[418];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 6697);
  v9 = v1[413];
  a1[6] = v1[412];
  a1[7] = v9;
  v10 = v1[415];
  a1[8] = v1[414];
  a1[9] = v10;
  v11 = v1[409];
  a1[2] = v1[408];
  a1[3] = v11;
  v12 = v1[411];
  a1[4] = v1[410];
  a1[5] = v12;
  v13 = v1[407];
  *a1 = v1[406];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A8A00(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[417];
  v16[10] = v1[416];
  v16[11] = v3;
  v17[0] = v1[418];
  v4 = v1[413];
  v16[6] = v1[412];
  v16[7] = v4;
  v5 = v1[415];
  v16[8] = v1[414];
  v16[9] = v5;
  v6 = v1[409];
  v16[2] = v1[408];
  v16[3] = v6;
  v7 = v1[411];
  v16[4] = v1[410];
  v16[5] = v7;
  v8 = v1[407];
  v16[0] = v1[406];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 6697);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[416] = *(_OWORD *)(a1 + 160);
  v1[417] = v9;
  v1[418] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 6697) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[412] = *(_OWORD *)(a1 + 96);
  v1[413] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[414] = *(_OWORD *)(a1 + 128);
  v1[415] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[408] = *(_OWORD *)(a1 + 32);
  v1[409] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[410] = *(_OWORD *)(a1 + 64);
  v1[411] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[406] = *(_OWORD *)a1;
  v1[407] = v15;
  return result;
}

uint64_t (*sub_1AD3A8AFC())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A8B10@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[431];
  v15[10] = v1[430];
  v15[11] = v2;
  v16[0] = v1[432];
  v3 = v1[427];
  v15[6] = v1[426];
  v15[7] = v3;
  v4 = v1[429];
  v15[8] = v1[428];
  v15[9] = v4;
  v5 = v1[423];
  v15[2] = v1[422];
  v15[3] = v5;
  v6 = v1[425];
  v15[4] = v1[424];
  v15[5] = v6;
  v7 = v1[421];
  v15[0] = v1[420];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 6921);
  v8 = v1[431];
  a1[10] = v1[430];
  a1[11] = v8;
  a1[12] = v1[432];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 6921);
  v9 = v1[427];
  a1[6] = v1[426];
  a1[7] = v9;
  v10 = v1[429];
  a1[8] = v1[428];
  a1[9] = v10;
  v11 = v1[423];
  a1[2] = v1[422];
  a1[3] = v11;
  v12 = v1[425];
  a1[4] = v1[424];
  a1[5] = v12;
  v13 = v1[421];
  *a1 = v1[420];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A8BF8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[431];
  v16[10] = v1[430];
  v16[11] = v3;
  v17[0] = v1[432];
  v4 = v1[427];
  v16[6] = v1[426];
  v16[7] = v4;
  v5 = v1[429];
  v16[8] = v1[428];
  v16[9] = v5;
  v6 = v1[423];
  v16[2] = v1[422];
  v16[3] = v6;
  v7 = v1[425];
  v16[4] = v1[424];
  v16[5] = v7;
  v8 = v1[421];
  v16[0] = v1[420];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 6921);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[430] = *(_OWORD *)(a1 + 160);
  v1[431] = v9;
  v1[432] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 6921) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[426] = *(_OWORD *)(a1 + 96);
  v1[427] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[428] = *(_OWORD *)(a1 + 128);
  v1[429] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[422] = *(_OWORD *)(a1 + 32);
  v1[423] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[424] = *(_OWORD *)(a1 + 64);
  v1[425] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[420] = *(_OWORD *)a1;
  v1[421] = v15;
  return result;
}

uint64_t (*sub_1AD3A8CF4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A8D08@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[445];
  v15[10] = v1[444];
  v15[11] = v2;
  v16[0] = v1[446];
  v3 = v1[441];
  v15[6] = v1[440];
  v15[7] = v3;
  v4 = v1[443];
  v15[8] = v1[442];
  v15[9] = v4;
  v5 = v1[437];
  v15[2] = v1[436];
  v15[3] = v5;
  v6 = v1[439];
  v15[4] = v1[438];
  v15[5] = v6;
  v7 = v1[435];
  v15[0] = v1[434];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 7145);
  v8 = v1[445];
  a1[10] = v1[444];
  a1[11] = v8;
  a1[12] = v1[446];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 7145);
  v9 = v1[441];
  a1[6] = v1[440];
  a1[7] = v9;
  v10 = v1[443];
  a1[8] = v1[442];
  a1[9] = v10;
  v11 = v1[437];
  a1[2] = v1[436];
  a1[3] = v11;
  v12 = v1[439];
  a1[4] = v1[438];
  a1[5] = v12;
  v13 = v1[435];
  *a1 = v1[434];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A8DF0(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[445];
  v16[10] = v1[444];
  v16[11] = v3;
  v17[0] = v1[446];
  v4 = v1[441];
  v16[6] = v1[440];
  v16[7] = v4;
  v5 = v1[443];
  v16[8] = v1[442];
  v16[9] = v5;
  v6 = v1[437];
  v16[2] = v1[436];
  v16[3] = v6;
  v7 = v1[439];
  v16[4] = v1[438];
  v16[5] = v7;
  v8 = v1[435];
  v16[0] = v1[434];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 7145);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[444] = *(_OWORD *)(a1 + 160);
  v1[445] = v9;
  v1[446] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 7145) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[440] = *(_OWORD *)(a1 + 96);
  v1[441] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[442] = *(_OWORD *)(a1 + 128);
  v1[443] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[436] = *(_OWORD *)(a1 + 32);
  v1[437] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[438] = *(_OWORD *)(a1 + 64);
  v1[439] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[434] = *(_OWORD *)a1;
  v1[435] = v15;
  return result;
}

uint64_t (*sub_1AD3A8EEC())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A8F00@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[459];
  v15[10] = v1[458];
  v15[11] = v2;
  v16[0] = v1[460];
  v3 = v1[455];
  v15[6] = v1[454];
  v15[7] = v3;
  v4 = v1[457];
  v15[8] = v1[456];
  v15[9] = v4;
  v5 = v1[451];
  v15[2] = v1[450];
  v15[3] = v5;
  v6 = v1[453];
  v15[4] = v1[452];
  v15[5] = v6;
  v7 = v1[449];
  v15[0] = v1[448];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 7369);
  v8 = v1[459];
  a1[10] = v1[458];
  a1[11] = v8;
  a1[12] = v1[460];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 7369);
  v9 = v1[455];
  a1[6] = v1[454];
  a1[7] = v9;
  v10 = v1[457];
  a1[8] = v1[456];
  a1[9] = v10;
  v11 = v1[451];
  a1[2] = v1[450];
  a1[3] = v11;
  v12 = v1[453];
  a1[4] = v1[452];
  a1[5] = v12;
  v13 = v1[449];
  *a1 = v1[448];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A8FE8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[459];
  v16[10] = v1[458];
  v16[11] = v3;
  v17[0] = v1[460];
  v4 = v1[455];
  v16[6] = v1[454];
  v16[7] = v4;
  v5 = v1[457];
  v16[8] = v1[456];
  v16[9] = v5;
  v6 = v1[451];
  v16[2] = v1[450];
  v16[3] = v6;
  v7 = v1[453];
  v16[4] = v1[452];
  v16[5] = v7;
  v8 = v1[449];
  v16[0] = v1[448];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 7369);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[458] = *(_OWORD *)(a1 + 160);
  v1[459] = v9;
  v1[460] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 7369) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[454] = *(_OWORD *)(a1 + 96);
  v1[455] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[456] = *(_OWORD *)(a1 + 128);
  v1[457] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[450] = *(_OWORD *)(a1 + 32);
  v1[451] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[452] = *(_OWORD *)(a1 + 64);
  v1[453] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[448] = *(_OWORD *)a1;
  v1[449] = v15;
  return result;
}

uint64_t (*sub_1AD3A90E4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A90F8@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[473];
  v15[10] = v1[472];
  v15[11] = v2;
  v16[0] = v1[474];
  v3 = v1[469];
  v15[6] = v1[468];
  v15[7] = v3;
  v4 = v1[471];
  v15[8] = v1[470];
  v15[9] = v4;
  v5 = v1[465];
  v15[2] = v1[464];
  v15[3] = v5;
  v6 = v1[467];
  v15[4] = v1[466];
  v15[5] = v6;
  v7 = v1[463];
  v15[0] = v1[462];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 7593);
  v8 = v1[473];
  a1[10] = v1[472];
  a1[11] = v8;
  a1[12] = v1[474];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 7593);
  v9 = v1[469];
  a1[6] = v1[468];
  a1[7] = v9;
  v10 = v1[471];
  a1[8] = v1[470];
  a1[9] = v10;
  v11 = v1[465];
  a1[2] = v1[464];
  a1[3] = v11;
  v12 = v1[467];
  a1[4] = v1[466];
  a1[5] = v12;
  v13 = v1[463];
  *a1 = v1[462];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A91E0(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[473];
  v16[10] = v1[472];
  v16[11] = v3;
  v17[0] = v1[474];
  v4 = v1[469];
  v16[6] = v1[468];
  v16[7] = v4;
  v5 = v1[471];
  v16[8] = v1[470];
  v16[9] = v5;
  v6 = v1[465];
  v16[2] = v1[464];
  v16[3] = v6;
  v7 = v1[467];
  v16[4] = v1[466];
  v16[5] = v7;
  v8 = v1[463];
  v16[0] = v1[462];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 7593);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[472] = *(_OWORD *)(a1 + 160);
  v1[473] = v9;
  v1[474] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 7593) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[468] = *(_OWORD *)(a1 + 96);
  v1[469] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[470] = *(_OWORD *)(a1 + 128);
  v1[471] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[464] = *(_OWORD *)(a1 + 32);
  v1[465] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[466] = *(_OWORD *)(a1 + 64);
  v1[467] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[462] = *(_OWORD *)a1;
  v1[463] = v15;
  return result;
}

uint64_t (*sub_1AD3A92DC())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A92F0@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[487];
  v15[10] = v1[486];
  v15[11] = v2;
  v16[0] = v1[488];
  v3 = v1[483];
  v15[6] = v1[482];
  v15[7] = v3;
  v4 = v1[485];
  v15[8] = v1[484];
  v15[9] = v4;
  v5 = v1[479];
  v15[2] = v1[478];
  v15[3] = v5;
  v6 = v1[481];
  v15[4] = v1[480];
  v15[5] = v6;
  v7 = v1[477];
  v15[0] = v1[476];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 7817);
  v8 = v1[487];
  a1[10] = v1[486];
  a1[11] = v8;
  a1[12] = v1[488];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 7817);
  v9 = v1[483];
  a1[6] = v1[482];
  a1[7] = v9;
  v10 = v1[485];
  a1[8] = v1[484];
  a1[9] = v10;
  v11 = v1[479];
  a1[2] = v1[478];
  a1[3] = v11;
  v12 = v1[481];
  a1[4] = v1[480];
  a1[5] = v12;
  v13 = v1[477];
  *a1 = v1[476];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A93D8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[487];
  v16[10] = v1[486];
  v16[11] = v3;
  v17[0] = v1[488];
  v4 = v1[483];
  v16[6] = v1[482];
  v16[7] = v4;
  v5 = v1[485];
  v16[8] = v1[484];
  v16[9] = v5;
  v6 = v1[479];
  v16[2] = v1[478];
  v16[3] = v6;
  v7 = v1[481];
  v16[4] = v1[480];
  v16[5] = v7;
  v8 = v1[477];
  v16[0] = v1[476];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 7817);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[486] = *(_OWORD *)(a1 + 160);
  v1[487] = v9;
  v1[488] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 7817) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[482] = *(_OWORD *)(a1 + 96);
  v1[483] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[484] = *(_OWORD *)(a1 + 128);
  v1[485] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[478] = *(_OWORD *)(a1 + 32);
  v1[479] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[480] = *(_OWORD *)(a1 + 64);
  v1[481] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[476] = *(_OWORD *)a1;
  v1[477] = v15;
  return result;
}

uint64_t (*sub_1AD3A94D4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A94E8@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[501];
  v15[10] = v1[500];
  v15[11] = v2;
  v16[0] = v1[502];
  v3 = v1[497];
  v15[6] = v1[496];
  v15[7] = v3;
  v4 = v1[499];
  v15[8] = v1[498];
  v15[9] = v4;
  v5 = v1[493];
  v15[2] = v1[492];
  v15[3] = v5;
  v6 = v1[495];
  v15[4] = v1[494];
  v15[5] = v6;
  v7 = v1[491];
  v15[0] = v1[490];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 8041);
  v8 = v1[501];
  a1[10] = v1[500];
  a1[11] = v8;
  a1[12] = v1[502];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 8041);
  v9 = v1[497];
  a1[6] = v1[496];
  a1[7] = v9;
  v10 = v1[499];
  a1[8] = v1[498];
  a1[9] = v10;
  v11 = v1[493];
  a1[2] = v1[492];
  a1[3] = v11;
  v12 = v1[495];
  a1[4] = v1[494];
  a1[5] = v12;
  v13 = v1[491];
  *a1 = v1[490];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A95D0(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[501];
  v16[10] = v1[500];
  v16[11] = v3;
  v17[0] = v1[502];
  v4 = v1[497];
  v16[6] = v1[496];
  v16[7] = v4;
  v5 = v1[499];
  v16[8] = v1[498];
  v16[9] = v5;
  v6 = v1[493];
  v16[2] = v1[492];
  v16[3] = v6;
  v7 = v1[495];
  v16[4] = v1[494];
  v16[5] = v7;
  v8 = v1[491];
  v16[0] = v1[490];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 8041);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[500] = *(_OWORD *)(a1 + 160);
  v1[501] = v9;
  v1[502] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 8041) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[496] = *(_OWORD *)(a1 + 96);
  v1[497] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[498] = *(_OWORD *)(a1 + 128);
  v1[499] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[492] = *(_OWORD *)(a1 + 32);
  v1[493] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[494] = *(_OWORD *)(a1 + 64);
  v1[495] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[490] = *(_OWORD *)a1;
  v1[491] = v15;
  return result;
}

uint64_t (*sub_1AD3A96CC())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A96E0@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[515];
  v15[10] = v1[514];
  v15[11] = v2;
  v16[0] = v1[516];
  v3 = v1[511];
  v15[6] = v1[510];
  v15[7] = v3;
  v4 = v1[513];
  v15[8] = v1[512];
  v15[9] = v4;
  v5 = v1[507];
  v15[2] = v1[506];
  v15[3] = v5;
  v6 = v1[509];
  v15[4] = v1[508];
  v15[5] = v6;
  v7 = v1[505];
  v15[0] = v1[504];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 8265);
  v8 = v1[515];
  a1[10] = v1[514];
  a1[11] = v8;
  a1[12] = v1[516];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 8265);
  v9 = v1[511];
  a1[6] = v1[510];
  a1[7] = v9;
  v10 = v1[513];
  a1[8] = v1[512];
  a1[9] = v10;
  v11 = v1[507];
  a1[2] = v1[506];
  a1[3] = v11;
  v12 = v1[509];
  a1[4] = v1[508];
  a1[5] = v12;
  v13 = v1[505];
  *a1 = v1[504];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A97C8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[515];
  v16[10] = v1[514];
  v16[11] = v3;
  v17[0] = v1[516];
  v4 = v1[511];
  v16[6] = v1[510];
  v16[7] = v4;
  v5 = v1[513];
  v16[8] = v1[512];
  v16[9] = v5;
  v6 = v1[507];
  v16[2] = v1[506];
  v16[3] = v6;
  v7 = v1[509];
  v16[4] = v1[508];
  v16[5] = v7;
  v8 = v1[505];
  v16[0] = v1[504];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 8265);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[514] = *(_OWORD *)(a1 + 160);
  v1[515] = v9;
  v1[516] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 8265) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[510] = *(_OWORD *)(a1 + 96);
  v1[511] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[512] = *(_OWORD *)(a1 + 128);
  v1[513] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[506] = *(_OWORD *)(a1 + 32);
  v1[507] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[508] = *(_OWORD *)(a1 + 64);
  v1[509] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[504] = *(_OWORD *)a1;
  v1[505] = v15;
  return result;
}

uint64_t (*sub_1AD3A98C4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A98D8@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[529];
  v15[10] = v1[528];
  v15[11] = v2;
  v16[0] = v1[530];
  v3 = v1[525];
  v15[6] = v1[524];
  v15[7] = v3;
  v4 = v1[527];
  v15[8] = v1[526];
  v15[9] = v4;
  v5 = v1[521];
  v15[2] = v1[520];
  v15[3] = v5;
  v6 = v1[523];
  v15[4] = v1[522];
  v15[5] = v6;
  v7 = v1[519];
  v15[0] = v1[518];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 8489);
  v8 = v1[529];
  a1[10] = v1[528];
  a1[11] = v8;
  a1[12] = v1[530];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 8489);
  v9 = v1[525];
  a1[6] = v1[524];
  a1[7] = v9;
  v10 = v1[527];
  a1[8] = v1[526];
  a1[9] = v10;
  v11 = v1[521];
  a1[2] = v1[520];
  a1[3] = v11;
  v12 = v1[523];
  a1[4] = v1[522];
  a1[5] = v12;
  v13 = v1[519];
  *a1 = v1[518];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A99C0(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[529];
  v16[10] = v1[528];
  v16[11] = v3;
  v17[0] = v1[530];
  v4 = v1[525];
  v16[6] = v1[524];
  v16[7] = v4;
  v5 = v1[527];
  v16[8] = v1[526];
  v16[9] = v5;
  v6 = v1[521];
  v16[2] = v1[520];
  v16[3] = v6;
  v7 = v1[523];
  v16[4] = v1[522];
  v16[5] = v7;
  v8 = v1[519];
  v16[0] = v1[518];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 8489);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[528] = *(_OWORD *)(a1 + 160);
  v1[529] = v9;
  v1[530] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 8489) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[524] = *(_OWORD *)(a1 + 96);
  v1[525] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[526] = *(_OWORD *)(a1 + 128);
  v1[527] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[520] = *(_OWORD *)(a1 + 32);
  v1[521] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[522] = *(_OWORD *)(a1 + 64);
  v1[523] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[518] = *(_OWORD *)a1;
  v1[519] = v15;
  return result;
}

uint64_t (*sub_1AD3A9ABC())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A9AD0@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[543];
  v15[10] = v1[542];
  v15[11] = v2;
  v16[0] = v1[544];
  v3 = v1[539];
  v15[6] = v1[538];
  v15[7] = v3;
  v4 = v1[541];
  v15[8] = v1[540];
  v15[9] = v4;
  v5 = v1[535];
  v15[2] = v1[534];
  v15[3] = v5;
  v6 = v1[537];
  v15[4] = v1[536];
  v15[5] = v6;
  v7 = v1[533];
  v15[0] = v1[532];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 8713);
  v8 = v1[543];
  a1[10] = v1[542];
  a1[11] = v8;
  a1[12] = v1[544];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 8713);
  v9 = v1[539];
  a1[6] = v1[538];
  a1[7] = v9;
  v10 = v1[541];
  a1[8] = v1[540];
  a1[9] = v10;
  v11 = v1[535];
  a1[2] = v1[534];
  a1[3] = v11;
  v12 = v1[537];
  a1[4] = v1[536];
  a1[5] = v12;
  v13 = v1[533];
  *a1 = v1[532];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A9BB8(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[543];
  v16[10] = v1[542];
  v16[11] = v3;
  v17[0] = v1[544];
  v4 = v1[539];
  v16[6] = v1[538];
  v16[7] = v4;
  v5 = v1[541];
  v16[8] = v1[540];
  v16[9] = v5;
  v6 = v1[535];
  v16[2] = v1[534];
  v16[3] = v6;
  v7 = v1[537];
  v16[4] = v1[536];
  v16[5] = v7;
  v8 = v1[533];
  v16[0] = v1[532];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 8713);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[542] = *(_OWORD *)(a1 + 160);
  v1[543] = v9;
  v1[544] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 8713) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[538] = *(_OWORD *)(a1 + 96);
  v1[539] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[540] = *(_OWORD *)(a1 + 128);
  v1[541] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[534] = *(_OWORD *)(a1 + 32);
  v1[535] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[536] = *(_OWORD *)(a1 + 64);
  v1[537] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[532] = *(_OWORD *)a1;
  v1[533] = v15;
  return result;
}

uint64_t (*sub_1AD3A9CB4())()
{
  return nullsub_1;
}

uint64_t sub_1AD3A9CC8@<X0>(_OWORD *a1@<X8>)
{
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  _OWORD v15[12];
  _OWORD v16[2];

  v2 = v1[557];
  v15[10] = v1[556];
  v15[11] = v2;
  v16[0] = v1[558];
  v3 = v1[553];
  v15[6] = v1[552];
  v15[7] = v3;
  v4 = v1[555];
  v15[8] = v1[554];
  v15[9] = v4;
  v5 = v1[549];
  v15[2] = v1[548];
  v15[3] = v5;
  v6 = v1[551];
  v15[4] = v1[550];
  v15[5] = v6;
  v7 = v1[547];
  v15[0] = v1[546];
  v15[1] = v7;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)((char *)v1 + 8937);
  v8 = v1[557];
  a1[10] = v1[556];
  a1[11] = v8;
  a1[12] = v1[558];
  *(_OWORD *)((char *)a1 + 201) = *(_OWORD *)((char *)v1 + 8937);
  v9 = v1[553];
  a1[6] = v1[552];
  a1[7] = v9;
  v10 = v1[555];
  a1[8] = v1[554];
  a1[9] = v10;
  v11 = v1[549];
  a1[2] = v1[548];
  a1[3] = v11;
  v12 = v1[551];
  a1[4] = v1[550];
  a1[5] = v12;
  v13 = v1[547];
  *a1 = v1[546];
  a1[1] = v13;
  return sub_1AD3AA670((uint64_t)v15, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29BCAC, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD29BCDC);
}

__n128 sub_1AD3A9DB0(uint64_t a1)
{
  _OWORD *v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __n128 result;
  __int128 v15;
  _OWORD v16[12];
  _OWORD v17[2];

  v3 = v1[557];
  v16[10] = v1[556];
  v16[11] = v3;
  v17[0] = v1[558];
  v4 = v1[553];
  v16[6] = v1[552];
  v16[7] = v4;
  v5 = v1[555];
  v16[8] = v1[554];
  v16[9] = v5;
  v6 = v1[549];
  v16[2] = v1[548];
  v16[3] = v6;
  v7 = v1[551];
  v16[4] = v1[550];
  v16[5] = v7;
  v8 = v1[547];
  v16[0] = v1[546];
  v16[1] = v8;
  *(_OWORD *)((char *)v17 + 9) = *(_OWORD *)((char *)v1 + 8937);
  sub_1AD3AA670((uint64_t)v16, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD))sub_1AD29A470, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1AD28BA4C);
  v9 = *(_OWORD *)(a1 + 176);
  v1[556] = *(_OWORD *)(a1 + 160);
  v1[557] = v9;
  v1[558] = *(_OWORD *)(a1 + 192);
  *(_OWORD *)((char *)v1 + 8937) = *(_OWORD *)(a1 + 201);
  v10 = *(_OWORD *)(a1 + 112);
  v1[552] = *(_OWORD *)(a1 + 96);
  v1[553] = v10;
  v11 = *(_OWORD *)(a1 + 144);
  v1[554] = *(_OWORD *)(a1 + 128);
  v1[555] = v11;
  v12 = *(_OWORD *)(a1 + 48);
  v1[548] = *(_OWORD *)(a1 + 32);
  v1[549] = v12;
  v13 = *(_OWORD *)(a1 + 80);
  v1[550] = *(_OWORD *)(a1 + 64);
  v1[551] = v13;
  result = *(__n128 *)a1;
  v15 = *(_OWORD *)(a1 + 16);
  v1[546] = *(_OWORD *)a1;
  v1[547] = v15;
  return result;
}

uint64_t (*sub_1AD3A9EAC())()
{
  return nullsub_1;
}

uint64_t (*AvatarRecord.identifier.modify(_QWORD *a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A4C30;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*AvatarRecord.$identifier.modify(_QWORD *a1))(uint64_t **, char)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD3A4C98;
}

uint64_t AvatarRecord.descriptor.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 32);
  return swift_retain();
}

uint64_t AvatarRecord.descriptor.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_release();
  *(_QWORD *)(v1 + 32) = v2;
  return result;
}

uint64_t (*AvatarRecord.descriptor.modify())()
{
  return nullsub_1;
}

__n128 MemojiPoster.backgroundColor.getter@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 MemojiPoster.backgroundColor.setter(uint64_t a1)
{
  _OWORD *v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*MemojiPoster.backgroundColor.modify())()
{
  return nullsub_1;
}

_QWORD *sub_1AD3AA024(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[15];
  uint64_t v12;
  _QWORD v13[31];

  sub_1AD0CFB8C(a1, (uint64_t)v13);
  sub_1AD0CFB8C((uint64_t)v13, (uint64_t)v11);
  sub_1AD009758(a2 + 32, &qword_1ED2E2680);
  v3 = v11[13];
  *(_OWORD *)(a2 + 224) = v11[12];
  *(_OWORD *)(a2 + 240) = v3;
  *(_OWORD *)(a2 + 256) = v11[14];
  *(_QWORD *)(a2 + 272) = v12;
  v4 = v11[9];
  *(_OWORD *)(a2 + 160) = v11[8];
  *(_OWORD *)(a2 + 176) = v4;
  v5 = v11[11];
  *(_OWORD *)(a2 + 192) = v11[10];
  *(_OWORD *)(a2 + 208) = v5;
  v6 = v11[5];
  *(_OWORD *)(a2 + 96) = v11[4];
  *(_OWORD *)(a2 + 112) = v6;
  v7 = v11[7];
  *(_OWORD *)(a2 + 128) = v11[6];
  *(_OWORD *)(a2 + 144) = v7;
  v8 = v11[1];
  *(_OWORD *)(a2 + 32) = v11[0];
  *(_OWORD *)(a2 + 48) = v8;
  v9 = v11[3];
  *(_OWORD *)(a2 + 64) = v11[2];
  *(_OWORD *)(a2 + 80) = v9;
  return sub_1AD046A30(v13);
}

uint64_t MemojiPoster.avatarImage.modify(_QWORD *a1)
{
  uint64_t v1;
  char *v3;
  uint64_t result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v3 = (char *)malloc(0x1F8uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 62) = v1;
  result = sub_1ACFF64C0(v1 + 32, (uint64_t)(v3 + 248), &qword_1ED2E2680);
  if (*((_QWORD *)v3 + 34))
  {
    v5 = *(_OWORD *)(v3 + 456);
    *((_OWORD *)v3 + 12) = *(_OWORD *)(v3 + 440);
    *((_OWORD *)v3 + 13) = v5;
    *((_OWORD *)v3 + 14) = *(_OWORD *)(v3 + 472);
    *((_QWORD *)v3 + 30) = *((_QWORD *)v3 + 61);
    v6 = *(_OWORD *)(v3 + 392);
    *((_OWORD *)v3 + 8) = *(_OWORD *)(v3 + 376);
    *((_OWORD *)v3 + 9) = v6;
    v7 = *(_OWORD *)(v3 + 424);
    *((_OWORD *)v3 + 10) = *(_OWORD *)(v3 + 408);
    *((_OWORD *)v3 + 11) = v7;
    v8 = *(_OWORD *)(v3 + 328);
    *((_OWORD *)v3 + 4) = *(_OWORD *)(v3 + 312);
    *((_OWORD *)v3 + 5) = v8;
    v9 = *(_OWORD *)(v3 + 360);
    *((_OWORD *)v3 + 6) = *(_OWORD *)(v3 + 344);
    *((_OWORD *)v3 + 7) = v9;
    v10 = *(_OWORD *)(v3 + 264);
    *(_OWORD *)v3 = *(_OWORD *)(v3 + 248);
    *((_OWORD *)v3 + 1) = v10;
    v11 = *(_OWORD *)(v3 + 296);
    result = (uint64_t)sub_1AD3AA16C;
    *((_OWORD *)v3 + 2) = *(_OWORD *)(v3 + 280);
    *((_OWORD *)v3 + 3) = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_1AD3AA16C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;

  v2 = *a1;
  if ((a2 & 1) != 0)
  {
    v3 = *(_QWORD *)(v2 + 496);
    sub_1AD0CFB8C(*a1, v2 + 248);
    sub_1AD009758(v3 + 32, &qword_1ED2E2680);
    v4 = *(_OWORD *)(v2 + 264);
    v5 = *(_OWORD *)(v2 + 296);
    v6 = *(_OWORD *)(v2 + 248);
    *(_OWORD *)(v3 + 64) = *(_OWORD *)(v2 + 280);
    *(_OWORD *)(v3 + 80) = v5;
    *(_OWORD *)(v3 + 32) = v6;
    *(_OWORD *)(v3 + 48) = v4;
    v7 = *(_OWORD *)(v2 + 360);
    v9 = *(_OWORD *)(v2 + 312);
    v8 = *(_OWORD *)(v2 + 328);
    *(_OWORD *)(v3 + 128) = *(_OWORD *)(v2 + 344);
    *(_OWORD *)(v3 + 144) = v7;
    *(_OWORD *)(v3 + 96) = v9;
    *(_OWORD *)(v3 + 112) = v8;
    v10 = *(_OWORD *)(v2 + 424);
    v12 = *(_OWORD *)(v2 + 376);
    v11 = *(_OWORD *)(v2 + 392);
    *(_OWORD *)(v3 + 192) = *(_OWORD *)(v2 + 408);
    *(_OWORD *)(v3 + 208) = v10;
    *(_OWORD *)(v3 + 160) = v12;
    *(_OWORD *)(v3 + 176) = v11;
    v14 = *(_OWORD *)(v2 + 456);
    v13 = *(_OWORD *)(v2 + 472);
    v15 = *(_OWORD *)(v2 + 440);
    *(_QWORD *)(v3 + 272) = *(_QWORD *)(v2 + 488);
    *(_OWORD *)(v3 + 240) = v14;
    *(_OWORD *)(v3 + 256) = v13;
    *(_OWORD *)(v3 + 224) = v15;
    sub_1AD046A30((_QWORD *)v2);
  }
  else
  {
    v16 = *(_QWORD *)(v2 + 496);
    sub_1AD009758(v16 + 32, &qword_1ED2E2680);
    v17 = *(_OWORD *)(v2 + 48);
    v19 = *(_OWORD *)v2;
    v18 = *(_OWORD *)(v2 + 16);
    *(_OWORD *)(v16 + 64) = *(_OWORD *)(v2 + 32);
    *(_OWORD *)(v16 + 80) = v17;
    *(_OWORD *)(v16 + 32) = v19;
    *(_OWORD *)(v16 + 48) = v18;
    v20 = *(_OWORD *)(v2 + 112);
    v22 = *(_OWORD *)(v2 + 64);
    v21 = *(_OWORD *)(v2 + 80);
    *(_OWORD *)(v16 + 128) = *(_OWORD *)(v2 + 96);
    *(_OWORD *)(v16 + 144) = v20;
    *(_OWORD *)(v16 + 96) = v22;
    *(_OWORD *)(v16 + 112) = v21;
    v23 = *(_OWORD *)(v2 + 176);
    v25 = *(_OWORD *)(v2 + 128);
    v24 = *(_OWORD *)(v2 + 144);
    *(_OWORD *)(v16 + 192) = *(_OWORD *)(v2 + 160);
    *(_OWORD *)(v16 + 208) = v23;
    *(_OWORD *)(v16 + 160) = v25;
    *(_OWORD *)(v16 + 176) = v24;
    v27 = *(_OWORD *)(v2 + 208);
    v26 = *(_OWORD *)(v2 + 224);
    v28 = *(_OWORD *)(v2 + 192);
    *(_QWORD *)(v16 + 272) = *(_QWORD *)(v2 + 240);
    *(_OWORD *)(v16 + 240) = v27;
    *(_OWORD *)(v16 + 256) = v26;
    *(_OWORD *)(v16 + 224) = v28;
  }
  free((void *)v2);
}

uint64_t sub_1AD3AA274(uint64_t a1, char *a2)
{
  _BYTE v4[440];
  _BYTE v5[440];

  sub_1ACFF64C0(a1, (uint64_t)v5, &qword_1ED2E2FE8);
  sub_1ACFF64C0((uint64_t)v5, (uint64_t)v4, &qword_1ED2E2FE8);
  a2 += 32;
  sub_1AD009758((uint64_t)a2, &qword_1ED2E2FE8);
  memcpy(a2, v4, 0x1B8uLL);
  return sub_1AD009758((uint64_t)v5, &qword_1ED2E2FE8);
}

void (*MemojiPoster.$avatarImage.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x530uLL);
  *a1 = v3;
  v3[165] = v1;
  sub_1ACFF64C0(v1 + 32, (uint64_t)v3, &qword_1ED2E2FE8);
  return sub_1AD3AA348;
}

void sub_1AD3AA348(uint64_t *a1, char a2)
{
  _QWORD *v2;
  const void *v3;
  void *v4;
  void *v5;

  v2 = (_QWORD *)*a1;
  v3 = (const void *)(*a1 + 440);
  if ((a2 & 1) != 0)
  {
    v4 = (void *)(v2[165] + 32);
    sub_1ACFF64C0(*a1, (uint64_t)v3, &qword_1ED2E2FE8);
    sub_1ACFF64C0((uint64_t)v3, (uint64_t)(v2 + 110), &qword_1ED2E2FE8);
    sub_1AD009758((uint64_t)v4, &qword_1ED2E2FE8);
    memcpy(v4, v2 + 110, 0x1B8uLL);
    sub_1AD009758((uint64_t)v3, &qword_1ED2E2FE8);
  }
  else
  {
    v5 = (void *)(v2[165] + 32);
    sub_1ACFF64C0(*a1, (uint64_t)v3, &qword_1ED2E2FE8);
    sub_1AD009758((uint64_t)v5, &qword_1ED2E2FE8);
    memcpy(v5, v3, 0x1B8uLL);
  }
  sub_1AD009758((uint64_t)v2, &qword_1ED2E2FE8);
  free(v2);
}

uint64_t MemojiPoster.avatarRecord.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v1[59];
  v3 = v1[60];
  v4 = v1[61];
  v5 = v1[62];
  v6 = v1[63];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_1AD28BCA0(v2);
}

__n128 MemojiPoster.avatarRecord.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;

  v4 = (__n128)a1[1];
  v5 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  sub_1AD28BC64(*(_QWORD *)(v1 + 472));
  result = v4;
  *(_OWORD *)(v1 + 472) = v5;
  *(__n128 *)(v1 + 488) = v4;
  *(_QWORD *)(v1 + 504) = v2;
  return result;
}

uint64_t (*MemojiPoster.avatarRecord.modify())()
{
  return nullsub_1;
}

uint64_t MemojiPoster.hasBody.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 512);
}

uint64_t MemojiPoster.hasBody.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 512) = result;
  return result;
}

uint64_t (*MemojiPoster.hasBody.modify())()
{
  return nullsub_1;
}

__n128 sub_1AD3AA4D8@<Q0>(_OWORD *a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)v1;
  v3 = *(_OWORD *)(v1 + 16);
  *a1 = *(_OWORD *)v1;
  a1[1] = v3;
  return result;
}

__n128 sub_1AD3AA4E4(uint64_t a1)
{
  _OWORD *v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *v1 = *(_OWORD *)a1;
  v1[1] = v3;
  return result;
}

uint64_t (*sub_1AD3AA4F0())()
{
  return nullsub_1;
}

__n128 sub_1AD3AA500@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)(v1 + 32);
  v3 = *(_OWORD *)(v1 + 48);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 sub_1AD3AA50C(uint64_t a1)
{
  uint64_t v1;
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 48) = v3;
  return result;
}

uint64_t (*sub_1AD3AA518())()
{
  return nullsub_1;
}

uint64_t sub_1AD3AA528()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 64);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD3AA554(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 64) = a1;
  *(_QWORD *)(v2 + 72) = a2;
  return result;
}

uint64_t (*sub_1AD3AA588())()
{
  return nullsub_1;
}

uint64_t sub_1AD3AA598()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t sub_1AD3AA5A0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 80) = result;
  return result;
}

uint64_t (*sub_1AD3AA5A8())()
{
  return nullsub_1;
}

uint64_t _s9BlastDoor13PosterArchiveV24ProviderBundleIdentifierO8rawValueAESgSS_tcfC_0()
{
  unint64_t v0;

  v0 = sub_1AD63BE94();
  swift_bridgeObjectRelease();
  if (v0 >= 3)
    return 3;
  else
    return v0;
}

unsigned __int8 *sub_1AD3AA600(unsigned __int8 *a1, unsigned __int8 *a2)
{
  assignWithTake for PosterArchive.Provider(a2, a1);
  return a2;
}

uint64_t type metadata accessor for PosterArchive()
{
  uint64_t result;

  result = qword_1ED2DAAA8;
  if (!qword_1ED2DAAA8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD3AA670(uint64_t a1, void (*a2)(_QWORD, _QWORD, _QWORD, _QWORD), void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = *(_QWORD *)(a1 + 40);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  v8 = *(_QWORD *)(a1 + 64);
  v9 = *(_QWORD *)(a1 + 72);
  v10 = *(_QWORD *)(a1 + 80);
  v20 = *(_QWORD *)(a1 + 104);
  v21 = *(_QWORD *)(a1 + 96);
  v18 = *(_QWORD *)(a1 + 120);
  v19 = *(_QWORD *)(a1 + 112);
  v16 = *(_QWORD *)(a1 + 136);
  v17 = *(_QWORD *)(a1 + 128);
  v14 = *(_QWORD *)(a1 + 32);
  v15 = *(_QWORD *)(a1 + 144);
  v28 = *(_QWORD *)(a1 + 168);
  v29 = *(_QWORD *)(a1 + 160);
  v26 = *(_QWORD *)(a1 + 184);
  v27 = *(_QWORD *)(a1 + 176);
  v24 = *(_QWORD *)(a1 + 200);
  v25 = *(_QWORD *)(a1 + 192);
  v23 = *(_QWORD *)(a1 + 208);
  v11 = *(unsigned __int8 *)(a1 + 88);
  v12 = *(unsigned __int8 *)(a1 + 152);
  v22 = *(unsigned __int8 *)(a1 + 216);
  a2(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  a3(v14, v5, v6, v7, v8, v9, v10, v11);
  a3(v21, v20, v19, v18, v17, v16, v15, v12);
  a3(v29, v28, v27, v26, v25, v24, v23, v22);
  return a1;
}

unint64_t sub_1AD3AA79C()
{
  unint64_t result;

  result = qword_1EECDBC60;
  if (!qword_1EECDBC60)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier, &type metadata for PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EECDBC60);
  }
  return result;
}

uint64_t sub_1AD3AA7E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD292DF8, (uint64_t (*)(void))sub_1AD292E3C);
}

uint64_t sub_1AD3AA7F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD292F80, (uint64_t (*)(void))sub_1AD293118);
}

unint64_t sub_1AD3AA80C()
{
  unint64_t result;

  result = qword_1EECDBC68;
  if (!qword_1EECDBC68)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PosterArchive.Configuration.TitleStyleConfiguration.TitleAlignment, &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleAlignment);
    atomic_store(result, (unint64_t *)&qword_1EECDBC68);
  }
  return result;
}

uint64_t sub_1AD3AA850(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD292FC4, (uint64_t (*)(void))sub_1AD29315C);
}

unint64_t sub_1AD3AA868()
{
  unint64_t result;

  result = qword_1EECDBC70;
  if (!qword_1EECDBC70)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PosterArchive.Configuration.TitleStyleConfiguration.TitleLayout, &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleLayout);
    atomic_store(result, (unint64_t *)&qword_1EECDBC70);
  }
  return result;
}

uint64_t sub_1AD3AA8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD293008, (uint64_t (*)(void))sub_1AD2931A0);
}

unint64_t sub_1AD3AA8C4()
{
  unint64_t result;

  result = qword_1EECDBC78;
  if (!qword_1EECDBC78)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.Style, &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.Style);
    atomic_store(result, (unint64_t *)&qword_1EECDBC78);
  }
  return result;
}

uint64_t sub_1AD3AA908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2932F4, (uint64_t (*)(void))sub_1AD293338);
}

uint64_t sub_1AD3AA91C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD29304C, (uint64_t (*)(void))sub_1AD2931E4);
}

uint64_t sub_1AD3AA930(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD293428, (uint64_t (*)(void))sub_1AD293518);
}

unint64_t sub_1AD3AA948()
{
  unint64_t result;

  result = qword_1EECDBC80;
  if (!qword_1EECDBC80)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.GradientType, &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.GradientType);
    atomic_store(result, (unint64_t *)&qword_1EECDBC80);
  }
  return result;
}

uint64_t sub_1AD3AA98C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD293628, (uint64_t (*)(void))sub_1AD29366C);
}

uint64_t sub_1AD3AA9A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD29346C, (uint64_t (*)(void))sub_1AD29355C);
}

unint64_t sub_1AD3AA9B8()
{
  unint64_t result;

  result = qword_1EECDBC88;
  if (!qword_1EECDBC88)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.StyleType, &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.StyleType);
    atomic_store(result, (unint64_t *)&qword_1EECDBC88);
  }
  return result;
}

uint64_t sub_1AD3AA9FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2933C0, (uint64_t (*)(void))sub_1AD2934B0);
}

uint64_t sub_1AD3AAA10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD293090, (uint64_t (*)(void))sub_1AD293228);
}

unint64_t sub_1AD3AAA28()
{
  unint64_t result;

  result = qword_1EECDBC90;
  if (!qword_1EECDBC90)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PosterArchive.Configuration.TitleStyleConfiguration.NumberingSystem, &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.NumberingSystem);
    atomic_store(result, (unint64_t *)&qword_1EECDBC90);
  }
  return result;
}

uint64_t sub_1AD3AAA6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2930D4, (uint64_t (*)(void))sub_1AD29326C);
}

uint64_t sub_1AD3AAA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD292C34, (uint64_t (*)(void))sub_1AD292D2C);
}

uint64_t sub_1AD3AAA94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD292C78, (uint64_t (*)(void))sub_1AD292D70);
}

uint64_t sub_1AD3AAAA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28B1B0, (uint64_t (*)(void))sub_1AD28B3A0);
}

unint64_t sub_1AD3AAAC0()
{
  unint64_t result;

  result = qword_1EECDBC98;
  if (!qword_1EECDBC98)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PosterArchive.ProviderBundleIdentifier, &type metadata for PosterArchive.ProviderBundleIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EECDBC98);
  }
  return result;
}

uint64_t sub_1AD3AAB04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28B1F4, (uint64_t (*)(void))sub_1AD28B3E4);
}

uint64_t sub_1AD3AAB18(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD3AAB64(&qword_1EECD3A50, (uint64_t)&protocol conformance descriptor for PosterArchive);
  result = sub_1AD3AAB64(&qword_1EECD3A88, (uint64_t)&protocol conformance descriptor for PosterArchive);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD3AAB64(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for PosterArchive();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD3AABA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28B52C, (uint64_t (*)(void))sub_1AD28B724);
}

unint64_t sub_1AD3AABBC()
{
  unint64_t result;

  result = qword_1EECDBCA0;
  if (!qword_1EECDBCA0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PhotosPoster.MediaType, &type metadata for PhotosPoster.MediaType);
    atomic_store(result, (unint64_t *)&qword_1EECDBCA0);
  }
  return result;
}

uint64_t sub_1AD3AAC00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2937D8, (uint64_t (*)(void))sub_1AD29381C);
}

uint64_t sub_1AD3AAC14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28B570, (uint64_t (*)(void))sub_1AD28B768);
}

unint64_t sub_1AD3AAC2C()
{
  unint64_t result;

  result = qword_1EECDBCA8;
  if (!qword_1EECDBCA8)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PhotosPoster.Layout.ClockLayerOrder, &type metadata for PhotosPoster.Layout.ClockLayerOrder);
    atomic_store(result, (unint64_t *)&qword_1EECDBCA8);
  }
  return result;
}

uint64_t sub_1AD3AAC70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2938A4, (uint64_t (*)(void))sub_1AD29392C);
}

unint64_t sub_1AD3AAC88()
{
  unint64_t result;

  result = qword_1EECDBCB0;
  if (!qword_1EECDBCB0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PhotosPoster.Layout.ClockIntersection, &type metadata for PhotosPoster.Layout.ClockIntersection);
    atomic_store(result, (unint64_t *)&qword_1EECDBCB0);
  }
  return result;
}

uint64_t sub_1AD3AACCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2938E8, (uint64_t (*)(void))sub_1AD293970);
}

uint64_t sub_1AD3AACE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD293AB4, (uint64_t (*)(void))sub_1AD293B3C);
}

uint64_t sub_1AD3AACF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD293A70, (uint64_t (*)(void))sub_1AD293AF8);
}

uint64_t sub_1AD3AAD08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28B5B4, (uint64_t (*)(void))sub_1AD28B7AC);
}

uint64_t sub_1AD3AAD1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD293C08, (uint64_t (*)(void))sub_1AD293C4C);
}

uint64_t sub_1AD3AAD30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28B5F8, (uint64_t (*)(void))sub_1AD28B7F0);
}

uint64_t sub_1AD3AAD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A17FC, (uint64_t (*)(void))sub_1AD2A16EC);
}

uint64_t sub_1AD3AAD58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28BB10, (uint64_t (*)(void))sub_1AD28BB54);
}

uint64_t sub_1AD3AAD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A0788, (uint64_t (*)(void))sub_1AD29F3E0);
}

uint64_t sub_1AD3AAD80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD293CD4, (uint64_t (*)(void))sub_1AD293D5C);
}

uint64_t sub_1AD3AAD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD293D18, (uint64_t (*)(void))sub_1AD293DA0);
}

uint64_t sub_1AD3AADA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28B8E8, (uint64_t (*)(void))sub_1AD28BA88);
}

uint64_t sub_1AD3AADBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD29F468, (uint64_t (*)(void))sub_1AD29F39C);
}

uint64_t sub_1AD3AADD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28BC20, (uint64_t (*)(void))sub_1AD28BD20);
}

uint64_t sub_1AD3AADE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A17B8, (uint64_t (*)(void))sub_1AD2A16A8);
}

uint64_t sub_1AD3AADF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A1774, (uint64_t (*)(void))sub_1AD2A1630);
}

uint64_t sub_1AD3AAE10(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD3AAE4C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[24];
  v3 = a1[25];
  v4 = a1[26];
  *a2 = a1[23];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD3AAE8C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD3AAEC8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  *a2 = a1[1];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD3AAF08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD3AAF44@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[5];
  v3 = a1[6];
  v5 = a1[7];
  v4 = a1[8];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD3AAF78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(a1, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a2 + 192) = v23;
    *(_OWORD *)(a2 + 208) = v4;
    *(_OWORD *)(a2 + 224) = v25;
    *(_QWORD *)(a2 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a2 + 128) = v19;
    *(_OWORD *)(a2 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a2 + 160) = v21;
    *(_OWORD *)(a2 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD3AB020@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACFF64C0(a1, a2, &qword_1ED2E2FE8);
}

uint64_t sub_1AD3AB048(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD3AB084@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[60];
  v3 = a1[61];
  v5 = a1[62];
  v4 = a1[63];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD3AB0BC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD3AB0F8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[1];
  v3 = a1[2];
  v5 = a1[3];
  v4 = a1[4];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD3AB130(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD3AB16C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[65];
  v3 = a1[66];
  v4 = a1[67];
  *a2 = a1[64];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD3AB1B0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD34BCEC(a1, a2);
}

uint64_t sub_1AD3AB1CC(uint64_t *a1, _QWORD *a2)
{
  return sub_1AD34BE40(a1, a2);
}

uint64_t sub_1AD3AB1E0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD34BCEC(a1, a2);
}

uint64_t keypath_get_29Tm@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD3AB22C(uint64_t *a1, _QWORD *a2)
{
  return sub_1AD34BE40(a1, a2);
}

uint64_t sub_1AD3AB244(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD3AB280@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD3AB2B8(double *a1)
{
  return sub_1AD0037A8(*a1);
}

uint64_t sub_1AD3AB2DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD3AB2FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v5;
  *(_BYTE *)(a2 + 56) = v6;
  return result;
}

uint64_t sub_1AD3AB358(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD3AB394@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD3AB3C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(a1 + 32, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a2 + 192) = v23;
    *(_OWORD *)(a2 + 208) = v4;
    *(_OWORD *)(a2 + 224) = v25;
    *(_QWORD *)(a2 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a2 + 128) = v19;
    *(_OWORD *)(a2 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a2 + 160) = v21;
    *(_OWORD *)(a2 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD3AB474@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACFF64C0(a1 + 32, a2, &qword_1ED2E2FE8);
}

uint64_t initializeBufferWithCopyOfBuffer for PosterArchive(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  int v27;
  __int128 v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  uint64_t v64;
  _OWORD *v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  unint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  int *v128;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = a3;
    v7 = a2[23];
    if (v7)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_WORD *)(a1 + 16) = *((_WORD *)a2 + 8);
      *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
      v8 = (_OWORD *)(a1 + 24);
      v9 = a2[9];
      v10 = *(_OWORD *)(a2 + 5);
      *v8 = *(_OWORD *)(a2 + 3);
      *(_OWORD *)(v4 + 40) = v10;
      if (v9 == 1)
      {
        *(_OWORD *)(v4 + 56) = *(_OWORD *)(a2 + 7);
        *(_QWORD *)(v4 + 72) = a2[9];
      }
      else
      {
        *(_BYTE *)(v4 + 56) = *((_BYTE *)a2 + 56);
        *(_QWORD *)(v4 + 64) = a2[8];
        *(_QWORD *)(v4 + 72) = v9;
        swift_bridgeObjectRetain();
      }
      v18 = a2[11];
      if (v18 == 1)
      {
        v19 = *((_OWORD *)a2 + 8);
        *(_OWORD *)(v4 + 112) = *((_OWORD *)a2 + 7);
        *(_OWORD *)(v4 + 128) = v19;
        *(_OWORD *)(v4 + 144) = *((_OWORD *)a2 + 9);
        v20 = *((_OWORD *)a2 + 6);
        *(_OWORD *)(v4 + 80) = *((_OWORD *)a2 + 5);
        *(_OWORD *)(v4 + 96) = v20;
      }
      else
      {
        *(_BYTE *)(v4 + 80) = *((_BYTE *)a2 + 80);
        *(_QWORD *)(v4 + 88) = v18;
        *(_OWORD *)(v4 + 96) = *((_OWORD *)a2 + 6);
        *(_BYTE *)(v4 + 112) = *((_BYTE *)a2 + 112);
        *(_QWORD *)(v4 + 120) = a2[15];
        v21 = *((_OWORD *)a2 + 9);
        *(_OWORD *)(v4 + 128) = *((_OWORD *)a2 + 8);
        *(_OWORD *)(v4 + 144) = v21;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      *(_WORD *)(v4 + 160) = *((_WORD *)a2 + 80);
      *(_QWORD *)(v4 + 168) = a2[21];
      *(_BYTE *)(v4 + 176) = *((_BYTE *)a2 + 176);
      v22 = a2[24];
      *(_QWORD *)(v4 + 184) = v7;
      *(_QWORD *)(v4 + 192) = v22;
      v23 = a2 + 25;
      v24 = a2[26];
      swift_retain();
      if (v24 == 1)
      {
        *(_OWORD *)(v4 + 200) = *v23;
      }
      else
      {
        *(_QWORD *)(v4 + 200) = *(_QWORD *)v23;
        *(_QWORD *)(v4 + 208) = v24;
        swift_bridgeObjectRetain();
      }
    }
    else
    {
      v12 = *((_OWORD *)a2 + 11);
      *(_OWORD *)(a1 + 160) = *((_OWORD *)a2 + 10);
      *(_OWORD *)(a1 + 176) = v12;
      *(_OWORD *)(a1 + 192) = *((_OWORD *)a2 + 12);
      *(_QWORD *)(a1 + 208) = a2[26];
      v13 = *((_OWORD *)a2 + 7);
      *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
      *(_OWORD *)(a1 + 112) = v13;
      v14 = *((_OWORD *)a2 + 9);
      *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
      *(_OWORD *)(a1 + 144) = v14;
      v15 = *((_OWORD *)a2 + 3);
      *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 48) = v15;
      v16 = *((_OWORD *)a2 + 5);
      *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
      *(_OWORD *)(a1 + 80) = v16;
      v17 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v17;
    }
    *(_WORD *)(v4 + 216) = *((_WORD *)a2 + 108);
    v25 = (_OWORD *)(v4 + 224);
    v26 = a2 + 28;
    v27 = *((unsigned __int8 *)a2 + 768);
    if (v27 == 2)
    {
      v43 = *((_OWORD *)a2 + 15);
      *v25 = *v26;
      *(_OWORD *)(v4 + 240) = v43;
      v44 = *((_OWORD *)a2 + 17);
      *(_OWORD *)(v4 + 256) = *((_OWORD *)a2 + 16);
      *(_OWORD *)(v4 + 272) = v44;
      v45 = a2[37];
      *(_QWORD *)(v4 + 288) = a2[36];
      *(_QWORD *)(v4 + 296) = v45;
      *(_BYTE *)(v4 + 304) = *((_BYTE *)a2 + 304);
      *(_BYTE *)(v4 + 768) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v27 == 1)
    {
      v128 = v6;
      v28 = *((_OWORD *)a2 + 15);
      *v25 = *v26;
      *(_OWORD *)(v4 + 240) = v28;
      v29 = (_OWORD *)(v4 + 256);
      v30 = a2 + 32;
      v31 = a2[35];
      if (v31)
      {
        v32 = a2[36];
        *(_QWORD *)(v4 + 280) = v31;
        *(_QWORD *)(v4 + 288) = v32;
        (**(void (***)(_OWORD *, _OWORD *))(v31 - 8))(v29, v30);
        *(_QWORD *)(v4 + 296) = a2[37];
        *(_BYTE *)(v4 + 304) = *((_BYTE *)a2 + 304);
        v33 = a2[42];
        v34 = a2[44];
        v35 = a2[46];
        v36 = a2[56];
        if (v33 >> 1 != 0xFFFFFFFF
          || (v35 | (unint64_t)v34) > 1
          || a2[52] & 0xFFFFFFFFFFFFFEFELL | a2[48] & 0xFFFFFFFFFFFF00FELL
          || (v36 | a2[54]) >= 2)
        {
          v74 = a2[40];
          v75 = a2[41];
          v96 = a2[47];
          v104 = a2[49];
          v108 = a2[50];
          v110 = a2[51];
          v112 = a2[53];
          v114 = a2[55];
          v116 = a2[57];
          v118 = a2[58];
          v120 = a2[59];
          v122 = a2[60];
          v124 = a2[61];
          v126 = a2[62];
          v98 = a2[48];
          v100 = a2[52];
          v76 = a2[39];
          v106 = a2[54];
          v77 = a2[43];
          v102 = a2[56];
          v78 = a2[45];
          sub_1AD00FEAC(v76, v74, v75, v33, v77, v34, v78, v35, v96, v98, v104, v108, v110, v100, v112, v106, v114, v36, v116,
            v118,
            v120,
            v122,
            v124,
            v126);
          *(_QWORD *)(v4 + 312) = v76;
          *(_QWORD *)(v4 + 320) = v74;
          *(_QWORD *)(v4 + 328) = v75;
          *(_QWORD *)(v4 + 336) = v33;
          *(_QWORD *)(v4 + 344) = v77;
          *(_QWORD *)(v4 + 352) = v34;
          *(_QWORD *)(v4 + 360) = v78;
          *(_QWORD *)(v4 + 368) = v35;
          *(_QWORD *)(v4 + 376) = v96;
          *(_QWORD *)(v4 + 384) = v98;
          *(_QWORD *)(v4 + 392) = v104;
          *(_QWORD *)(v4 + 400) = v108;
          *(_QWORD *)(v4 + 408) = v110;
          *(_QWORD *)(v4 + 416) = v100;
          *(_QWORD *)(v4 + 424) = v112;
          *(_QWORD *)(v4 + 432) = v106;
          *(_QWORD *)(v4 + 440) = v114;
          *(_QWORD *)(v4 + 448) = v102;
          *(_QWORD *)(v4 + 456) = v116;
          *(_QWORD *)(v4 + 464) = v118;
          *(_QWORD *)(v4 + 472) = v120;
          *(_QWORD *)(v4 + 480) = v122;
          *(_QWORD *)(v4 + 488) = v124;
          *(_QWORD *)(v4 + 496) = v126;
        }
        else
        {
          v37 = *(_OWORD *)(a2 + 57);
          *(_OWORD *)(v4 + 440) = *(_OWORD *)(a2 + 55);
          *(_OWORD *)(v4 + 456) = v37;
          v38 = *(_OWORD *)(a2 + 61);
          *(_OWORD *)(v4 + 472) = *(_OWORD *)(a2 + 59);
          *(_OWORD *)(v4 + 488) = v38;
          v39 = *(_OWORD *)(a2 + 49);
          *(_OWORD *)(v4 + 376) = *(_OWORD *)(a2 + 47);
          *(_OWORD *)(v4 + 392) = v39;
          v40 = *(_OWORD *)(a2 + 53);
          *(_OWORD *)(v4 + 408) = *(_OWORD *)(a2 + 51);
          *(_OWORD *)(v4 + 424) = v40;
          v41 = *(_OWORD *)(a2 + 41);
          *(_OWORD *)(v4 + 312) = *(_OWORD *)(a2 + 39);
          *(_OWORD *)(v4 + 328) = v41;
          v42 = *(_OWORD *)(a2 + 45);
          *(_OWORD *)(v4 + 344) = *(_OWORD *)(a2 + 43);
          *(_OWORD *)(v4 + 360) = v42;
        }
      }
      else
      {
        v67 = *((_OWORD *)a2 + 29);
        *(_OWORD *)(v4 + 448) = *((_OWORD *)a2 + 28);
        *(_OWORD *)(v4 + 464) = v67;
        *(_OWORD *)(v4 + 480) = *((_OWORD *)a2 + 30);
        *(_QWORD *)(v4 + 496) = a2[62];
        v68 = *((_OWORD *)a2 + 25);
        *(_OWORD *)(v4 + 384) = *((_OWORD *)a2 + 24);
        *(_OWORD *)(v4 + 400) = v68;
        v69 = *((_OWORD *)a2 + 27);
        *(_OWORD *)(v4 + 416) = *((_OWORD *)a2 + 26);
        *(_OWORD *)(v4 + 432) = v69;
        v70 = *((_OWORD *)a2 + 21);
        *(_OWORD *)(v4 + 320) = *((_OWORD *)a2 + 20);
        *(_OWORD *)(v4 + 336) = v70;
        v71 = *((_OWORD *)a2 + 23);
        *(_OWORD *)(v4 + 352) = *((_OWORD *)a2 + 22);
        *(_OWORD *)(v4 + 368) = v71;
        v72 = *((_OWORD *)a2 + 17);
        *v29 = *v30;
        *(_OWORD *)(v4 + 272) = v72;
        v73 = *((_OWORD *)a2 + 19);
        *(_OWORD *)(v4 + 288) = *((_OWORD *)a2 + 18);
        *(_OWORD *)(v4 + 304) = v73;
      }
      v79 = a2[67];
      v80 = a2[68];
      v97 = a2[71];
      v99 = a2[72];
      v101 = a2[73];
      v103 = a2[74];
      v105 = a2[75];
      v107 = a2[76];
      v109 = a2[77];
      v111 = a2[78];
      v113 = a2[79];
      v115 = a2[80];
      v117 = a2[81];
      v119 = a2[82];
      v121 = a2[83];
      v123 = a2[84];
      v125 = a2[85];
      v127 = a2[86];
      v81 = a2[63];
      v82 = a2[64];
      v83 = a2[65];
      v84 = a2[66];
      v85 = a2[69];
      v86 = a2[70];
      sub_1AD00FEAC(v81, v82, v83, v84, v79, v80, v85, v86, v97, v99, v101, v103, v105, v107, v109, v111, v113, v115, v117,
        v119,
        v121,
        v123,
        v125,
        v127);
      *(_QWORD *)(v4 + 504) = v81;
      *(_QWORD *)(v4 + 512) = v82;
      *(_QWORD *)(v4 + 520) = v83;
      *(_QWORD *)(v4 + 528) = v84;
      *(_QWORD *)(v4 + 536) = v79;
      *(_QWORD *)(v4 + 544) = v80;
      *(_QWORD *)(v4 + 552) = v85;
      *(_QWORD *)(v4 + 560) = v86;
      *(_QWORD *)(v4 + 568) = v97;
      *(_QWORD *)(v4 + 576) = v99;
      *(_QWORD *)(v4 + 584) = v101;
      *(_QWORD *)(v4 + 592) = v103;
      *(_QWORD *)(v4 + 600) = v105;
      *(_QWORD *)(v4 + 608) = v107;
      *(_QWORD *)(v4 + 616) = v109;
      *(_QWORD *)(v4 + 624) = v111;
      *(_QWORD *)(v4 + 632) = v113;
      *(_QWORD *)(v4 + 640) = v115;
      *(_QWORD *)(v4 + 648) = v117;
      *(_QWORD *)(v4 + 656) = v119;
      *(_QWORD *)(v4 + 664) = v121;
      *(_QWORD *)(v4 + 672) = v123;
      *(_QWORD *)(v4 + 680) = v125;
      *(_QWORD *)(v4 + 688) = v127;
      v87 = a2[87];
      if (v87)
      {
        v88 = a2[88];
        *(_QWORD *)(v4 + 696) = v87;
        *(_QWORD *)(v4 + 704) = v88;
        *(_QWORD *)(v4 + 712) = a2[89];
        *(_QWORD *)(v4 + 720) = a2[90];
        *(_QWORD *)(v4 + 728) = a2[91];
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        v89 = *(_OWORD *)(a2 + 89);
        *(_OWORD *)(v4 + 696) = *(_OWORD *)(a2 + 87);
        *(_OWORD *)(v4 + 712) = v89;
        *(_QWORD *)(v4 + 728) = a2[91];
      }
      v6 = v128;
      *(_BYTE *)(v4 + 736) = *((_BYTE *)a2 + 736);
      *(_BYTE *)(v4 + 768) = 1;
    }
    else
    {
      *(_WORD *)(v4 + 224) = *((_WORD *)a2 + 112);
      v46 = a2[30];
      *(_QWORD *)(v4 + 232) = a2[29];
      *(_QWORD *)(v4 + 240) = v46;
      v47 = a2[32];
      *(_QWORD *)(v4 + 248) = a2[31];
      *(_QWORD *)(v4 + 256) = v47;
      *(_BYTE *)(v4 + 264) = *((_BYTE *)a2 + 264);
      v48 = a2[35];
      *(_QWORD *)(v4 + 272) = a2[34];
      *(_QWORD *)(v4 + 280) = v48;
      v49 = a2 + 36;
      v50 = a2[37];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v50 == 1)
      {
        *(_OWORD *)(v4 + 288) = *v49;
      }
      else
      {
        *(_QWORD *)(v4 + 288) = *(_QWORD *)v49;
        *(_QWORD *)(v4 + 296) = v50;
        swift_bridgeObjectRetain();
      }
      v51 = a2[39];
      *(_QWORD *)(v4 + 304) = a2[38];
      *(_QWORD *)(v4 + 312) = v51;
      v52 = a2[41];
      *(_QWORD *)(v4 + 320) = a2[40];
      *(_QWORD *)(v4 + 328) = v52;
      v53 = a2[43];
      *(_QWORD *)(v4 + 336) = a2[42];
      *(_QWORD *)(v4 + 344) = v53;
      v54 = *((_OWORD *)a2 + 29);
      *(_OWORD *)(v4 + 448) = *((_OWORD *)a2 + 28);
      *(_OWORD *)(v4 + 464) = v54;
      *(_OWORD *)(v4 + 480) = *((_OWORD *)a2 + 30);
      *(_WORD *)(v4 + 496) = *((_WORD *)a2 + 248);
      v55 = *((_OWORD *)a2 + 25);
      *(_OWORD *)(v4 + 384) = *((_OWORD *)a2 + 24);
      *(_OWORD *)(v4 + 400) = v55;
      v56 = *((_OWORD *)a2 + 27);
      *(_OWORD *)(v4 + 416) = *((_OWORD *)a2 + 26);
      *(_OWORD *)(v4 + 432) = v56;
      v57 = *((_OWORD *)a2 + 23);
      *(_OWORD *)(v4 + 352) = *((_OWORD *)a2 + 22);
      *(_OWORD *)(v4 + 368) = v57;
      *(_WORD *)(v4 + 498) = *((_WORD *)a2 + 249);
      *(_QWORD *)(v4 + 504) = a2[63];
      *(_BYTE *)(v4 + 512) = *((_BYTE *)a2 + 512);
      v58 = *(_OWORD *)(a2 + 87);
      *(_OWORD *)(v4 + 680) = *(_OWORD *)(a2 + 85);
      *(_OWORD *)(v4 + 696) = v58;
      *(_OWORD *)(v4 + 712) = *(_OWORD *)(a2 + 89);
      *(_WORD *)(v4 + 728) = *((_WORD *)a2 + 364);
      v59 = *(_OWORD *)(a2 + 79);
      *(_OWORD *)(v4 + 616) = *(_OWORD *)(a2 + 77);
      *(_OWORD *)(v4 + 632) = v59;
      v60 = *(_OWORD *)(a2 + 83);
      *(_OWORD *)(v4 + 648) = *(_OWORD *)(a2 + 81);
      *(_OWORD *)(v4 + 664) = v60;
      v61 = *(_OWORD *)(a2 + 71);
      *(_OWORD *)(v4 + 552) = *(_OWORD *)(a2 + 69);
      *(_OWORD *)(v4 + 568) = v61;
      v62 = *(_OWORD *)(a2 + 75);
      *(_OWORD *)(v4 + 584) = *(_OWORD *)(a2 + 73);
      *(_OWORD *)(v4 + 600) = v62;
      v63 = *(_OWORD *)(a2 + 67);
      *(_OWORD *)(v4 + 520) = *(_OWORD *)(a2 + 65);
      *(_OWORD *)(v4 + 536) = v63;
      *(_BYTE *)(v4 + 730) = *((_BYTE *)a2 + 730);
      v64 = a2[93];
      *(_QWORD *)(v4 + 736) = a2[92];
      *(_QWORD *)(v4 + 744) = v64;
      v65 = a2 + 94;
      v66 = a2[95];
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v66 == 1)
      {
        *(_OWORD *)(v4 + 752) = *v65;
      }
      else
      {
        *(_QWORD *)(v4 + 752) = *(_QWORD *)v65;
        *(_QWORD *)(v4 + 760) = v66;
        swift_bridgeObjectRetain();
      }
      *(_BYTE *)(v4 + 768) = 0;
    }
    v90 = v6[6];
    v91 = v4 + v90;
    v92 = (uint64_t)a2 + v90;
    v93 = sub_1AD63B084();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 16))(v91, v92, v93);
    v94 = v6[8];
    *(_QWORD *)(v4 + v6[7]) = *(uint64_t *)((char *)a2 + v6[7]);
    *(_QWORD *)(v4 + v94) = *(uint64_t *)((char *)a2 + v94);
  }
  return v4;
}

uint64_t destroy for PosterArchive(uint64_t a1, uint64_t a2)
{
  int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if (*(_QWORD *)(a1 + 184))
  {
    if (*(_QWORD *)(a1 + 72) != 1)
      swift_bridgeObjectRelease();
    if (*(_QWORD *)(a1 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    if (*(_QWORD *)(a1 + 208) != 1)
      swift_bridgeObjectRelease();
  }
  v4 = *(unsigned __int8 *)(a1 + 768);
  if (v4 == 2)
    goto LABEL_14;
  if (v4 == 1)
  {
    if (*(_QWORD *)(a1 + 280))
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + 256);
      v5 = *(_QWORD *)(a1 + 336);
      v6 = *(_QWORD *)(a1 + 352);
      v7 = *(_QWORD *)(a1 + 368);
      v8 = *(_QWORD *)(a1 + 384);
      v9 = *(_QWORD *)(a1 + 416);
      v10 = *(_QWORD *)(a1 + 432);
      v11 = *(_QWORD *)(a1 + 448);
      if (v5 >> 1 != 0xFFFFFFFF
        || (v7 | (unint64_t)v6) > 1
        || v9 & 0xFFFFFFFFFFFFFEFELL | v8 & 0xFFFFFFFFFFFF00FELL
        || (v11 | v10) >= 2)
      {
        sub_1AD00E8B0(*(_QWORD *)(a1 + 312), *(_QWORD *)(a1 + 320), *(_QWORD *)(a1 + 328), v5, *(_QWORD *)(a1 + 344), v6, *(_QWORD *)(a1 + 360), v7, *(_QWORD *)(a1 + 376), v8, *(_QWORD *)(a1 + 392), *(_QWORD *)(a1 + 400), *(_QWORD *)(a1 + 408), v9, *(_QWORD *)(a1 + 424), v10, *(_QWORD *)(a1 + 440), v11, *(_QWORD *)(a1 + 456),
          *(_QWORD *)(a1 + 464),
          *(_QWORD *)(a1 + 472),
          *(_QWORD *)(a1 + 480),
          *(_QWORD *)(a1 + 488),
          *(_QWORD *)(a1 + 496));
      }
    }
    sub_1AD00E8B0(*(_QWORD *)(a1 + 504), *(_QWORD *)(a1 + 512), *(_QWORD *)(a1 + 520), *(_QWORD *)(a1 + 528), *(_QWORD *)(a1 + 536), *(_QWORD *)(a1 + 544), *(_QWORD *)(a1 + 552), *(_QWORD *)(a1 + 560), *(_QWORD *)(a1 + 568), *(_QWORD *)(a1 + 576), *(_QWORD *)(a1 + 584), *(_QWORD *)(a1 + 592), *(_QWORD *)(a1 + 600), *(_QWORD *)(a1 + 608), *(_QWORD *)(a1 + 616), *(_QWORD *)(a1 + 624), *(_QWORD *)(a1 + 632), *(_QWORD *)(a1 + 640), *(_QWORD *)(a1 + 648),
      *(_QWORD *)(a1 + 656),
      *(_QWORD *)(a1 + 664),
      *(_QWORD *)(a1 + 672),
      *(_QWORD *)(a1 + 680),
      *(_QWORD *)(a1 + 688));
    if (*(_QWORD *)(a1 + 696))
    {
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
    }
  }
  else if (!*(_BYTE *)(a1 + 768))
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(a1 + 296) != 1)
      swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(a1 + 760) != 1)
LABEL_14:
      swift_bridgeObjectRelease();
  }
  v12 = a1 + *(int *)(a2 + 24);
  v13 = sub_1AD63B084();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
}

uint64_t initializeWithCopy for PosterArchive(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  _OWORD *v23;
  _OWORD *v24;
  int v25;
  __int128 v26;
  _OWORD *v27;
  _OWORD *v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  uint64_t v62;
  _OWORD *v63;
  uint64_t v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  unint64_t v125;
  int *v126;

  v6 = *(_QWORD *)(a2 + 184);
  if (v6)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
    *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
    v7 = (_OWORD *)(a1 + 24);
    v8 = *(_QWORD *)(a2 + 72);
    v9 = *(_OWORD *)(a2 + 40);
    *v7 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v9;
    if (v8 == 1)
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    }
    else
    {
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v8;
      swift_bridgeObjectRetain();
    }
    v16 = *(_QWORD *)(a2 + 88);
    if (v16 == 1)
    {
      v17 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v17;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      v18 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v18;
    }
    else
    {
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v16;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      v19 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    v20 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = v6;
    *(_QWORD *)(a1 + 192) = v20;
    v21 = (_OWORD *)(a2 + 200);
    v22 = *(_QWORD *)(a2 + 208);
    swift_retain();
    if (v22 == 1)
    {
      *(_OWORD *)(a1 + 200) = *v21;
    }
    else
    {
      *(_QWORD *)(a1 + 200) = *(_QWORD *)v21;
      *(_QWORD *)(a1 + 208) = v22;
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v10 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v10;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    v11 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v11;
    v12 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v12;
    v13 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v13;
    v14 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v14;
    v15 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v15;
  }
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  v23 = (_OWORD *)(a1 + 224);
  v24 = (_OWORD *)(a2 + 224);
  v25 = *(unsigned __int8 *)(a2 + 768);
  if (v25 == 2)
  {
    v41 = *(_OWORD *)(a2 + 240);
    *v23 = *v24;
    *(_OWORD *)(a1 + 240) = v41;
    v42 = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 272) = v42;
    v43 = *(_QWORD *)(a2 + 296);
    *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
    *(_QWORD *)(a1 + 296) = v43;
    *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
    *(_BYTE *)(a1 + 768) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v25 == 1)
  {
    v126 = a3;
    v26 = *(_OWORD *)(a2 + 240);
    *v23 = *v24;
    *(_OWORD *)(a1 + 240) = v26;
    v27 = (_OWORD *)(a1 + 256);
    v28 = (_OWORD *)(a2 + 256);
    v29 = *(_QWORD *)(a2 + 280);
    if (v29)
    {
      v30 = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 280) = v29;
      *(_QWORD *)(a1 + 288) = v30;
      (**(void (***)(_OWORD *, _OWORD *))(v29 - 8))(v27, v28);
      *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
      *(_BYTE *)(a1 + 304) = *(_BYTE *)(a2 + 304);
      v31 = *(_QWORD *)(a2 + 336);
      v32 = *(_QWORD *)(a2 + 352);
      v33 = *(_QWORD *)(a2 + 368);
      v34 = *(_QWORD *)(a2 + 448);
      if (v31 >> 1 != 0xFFFFFFFF
        || (v33 | (unint64_t)v32) > 1
        || *(_QWORD *)(a2 + 416) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a2 + 384) & 0xFFFFFFFFFFFF00FELL
        || (v34 | *(_QWORD *)(a2 + 432)) >= 2)
      {
        v72 = *(_QWORD *)(a2 + 320);
        v73 = *(_QWORD *)(a2 + 328);
        v94 = *(_QWORD *)(a2 + 376);
        v102 = *(_QWORD *)(a2 + 392);
        v106 = *(_QWORD *)(a2 + 400);
        v108 = *(_QWORD *)(a2 + 408);
        v110 = *(_QWORD *)(a2 + 424);
        v112 = *(_QWORD *)(a2 + 440);
        v114 = *(_QWORD *)(a2 + 456);
        v116 = *(_QWORD *)(a2 + 464);
        v118 = *(_QWORD *)(a2 + 472);
        v120 = *(_QWORD *)(a2 + 480);
        v122 = *(_QWORD *)(a2 + 488);
        v124 = *(_QWORD *)(a2 + 496);
        v96 = *(_QWORD *)(a2 + 384);
        v98 = *(_QWORD *)(a2 + 416);
        v74 = *(_QWORD *)(a2 + 312);
        v104 = *(_QWORD *)(a2 + 432);
        v75 = *(_QWORD *)(a2 + 344);
        v100 = *(_QWORD *)(a2 + 448);
        v76 = *(_QWORD *)(a2 + 360);
        sub_1AD00FEAC(v74, v72, v73, v31, v75, v32, v76, v33, v94, v96, v102, v106, v108, v98, v110, v104, v112, v34, v114,
          v116,
          v118,
          v120,
          v122,
          v124);
        *(_QWORD *)(a1 + 312) = v74;
        *(_QWORD *)(a1 + 320) = v72;
        *(_QWORD *)(a1 + 328) = v73;
        *(_QWORD *)(a1 + 336) = v31;
        *(_QWORD *)(a1 + 344) = v75;
        *(_QWORD *)(a1 + 352) = v32;
        *(_QWORD *)(a1 + 360) = v76;
        *(_QWORD *)(a1 + 368) = v33;
        *(_QWORD *)(a1 + 376) = v94;
        *(_QWORD *)(a1 + 384) = v96;
        *(_QWORD *)(a1 + 392) = v102;
        *(_QWORD *)(a1 + 400) = v106;
        *(_QWORD *)(a1 + 408) = v108;
        *(_QWORD *)(a1 + 416) = v98;
        *(_QWORD *)(a1 + 424) = v110;
        *(_QWORD *)(a1 + 432) = v104;
        *(_QWORD *)(a1 + 440) = v112;
        *(_QWORD *)(a1 + 448) = v100;
        *(_QWORD *)(a1 + 456) = v114;
        *(_QWORD *)(a1 + 464) = v116;
        *(_QWORD *)(a1 + 472) = v118;
        *(_QWORD *)(a1 + 480) = v120;
        *(_QWORD *)(a1 + 488) = v122;
        *(_QWORD *)(a1 + 496) = v124;
      }
      else
      {
        v35 = *(_OWORD *)(a2 + 456);
        *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
        *(_OWORD *)(a1 + 456) = v35;
        v36 = *(_OWORD *)(a2 + 488);
        *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
        *(_OWORD *)(a1 + 488) = v36;
        v37 = *(_OWORD *)(a2 + 392);
        *(_OWORD *)(a1 + 376) = *(_OWORD *)(a2 + 376);
        *(_OWORD *)(a1 + 392) = v37;
        v38 = *(_OWORD *)(a2 + 424);
        *(_OWORD *)(a1 + 408) = *(_OWORD *)(a2 + 408);
        *(_OWORD *)(a1 + 424) = v38;
        v39 = *(_OWORD *)(a2 + 328);
        *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
        *(_OWORD *)(a1 + 328) = v39;
        v40 = *(_OWORD *)(a2 + 360);
        *(_OWORD *)(a1 + 344) = *(_OWORD *)(a2 + 344);
        *(_OWORD *)(a1 + 360) = v40;
      }
    }
    else
    {
      v65 = *(_OWORD *)(a2 + 464);
      *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
      *(_OWORD *)(a1 + 464) = v65;
      *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
      *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
      v66 = *(_OWORD *)(a2 + 400);
      *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
      *(_OWORD *)(a1 + 400) = v66;
      v67 = *(_OWORD *)(a2 + 432);
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
      *(_OWORD *)(a1 + 432) = v67;
      v68 = *(_OWORD *)(a2 + 336);
      *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
      *(_OWORD *)(a1 + 336) = v68;
      v69 = *(_OWORD *)(a2 + 368);
      *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
      *(_OWORD *)(a1 + 368) = v69;
      v70 = *(_OWORD *)(a2 + 272);
      *v27 = *v28;
      *(_OWORD *)(a1 + 272) = v70;
      v71 = *(_OWORD *)(a2 + 304);
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(_OWORD *)(a1 + 304) = v71;
    }
    v77 = *(_QWORD *)(a2 + 536);
    v78 = *(_QWORD *)(a2 + 544);
    v95 = *(_QWORD *)(a2 + 568);
    v97 = *(_QWORD *)(a2 + 576);
    v99 = *(_QWORD *)(a2 + 584);
    v101 = *(_QWORD *)(a2 + 592);
    v103 = *(_QWORD *)(a2 + 600);
    v105 = *(_QWORD *)(a2 + 608);
    v107 = *(_QWORD *)(a2 + 616);
    v109 = *(_QWORD *)(a2 + 624);
    v111 = *(_QWORD *)(a2 + 632);
    v113 = *(_QWORD *)(a2 + 640);
    v115 = *(_QWORD *)(a2 + 648);
    v117 = *(_QWORD *)(a2 + 656);
    v119 = *(_QWORD *)(a2 + 664);
    v121 = *(_QWORD *)(a2 + 672);
    v123 = *(_QWORD *)(a2 + 680);
    v125 = *(_QWORD *)(a2 + 688);
    v79 = *(_QWORD *)(a2 + 504);
    v80 = *(_QWORD *)(a2 + 512);
    v81 = *(_QWORD *)(a2 + 520);
    v82 = *(_QWORD *)(a2 + 528);
    v83 = *(_QWORD *)(a2 + 552);
    v84 = *(_QWORD *)(a2 + 560);
    sub_1AD00FEAC(v79, v80, v81, v82, v77, v78, v83, v84, v95, v97, v99, v101, v103, v105, v107, v109, v111, v113, v115,
      v117,
      v119,
      v121,
      v123,
      v125);
    *(_QWORD *)(a1 + 504) = v79;
    *(_QWORD *)(a1 + 512) = v80;
    *(_QWORD *)(a1 + 520) = v81;
    *(_QWORD *)(a1 + 528) = v82;
    *(_QWORD *)(a1 + 536) = v77;
    *(_QWORD *)(a1 + 544) = v78;
    *(_QWORD *)(a1 + 552) = v83;
    *(_QWORD *)(a1 + 560) = v84;
    *(_QWORD *)(a1 + 568) = v95;
    *(_QWORD *)(a1 + 576) = v97;
    *(_QWORD *)(a1 + 584) = v99;
    *(_QWORD *)(a1 + 592) = v101;
    *(_QWORD *)(a1 + 600) = v103;
    *(_QWORD *)(a1 + 608) = v105;
    *(_QWORD *)(a1 + 616) = v107;
    *(_QWORD *)(a1 + 624) = v109;
    *(_QWORD *)(a1 + 632) = v111;
    *(_QWORD *)(a1 + 640) = v113;
    *(_QWORD *)(a1 + 648) = v115;
    *(_QWORD *)(a1 + 656) = v117;
    *(_QWORD *)(a1 + 664) = v119;
    *(_QWORD *)(a1 + 672) = v121;
    *(_QWORD *)(a1 + 680) = v123;
    *(_QWORD *)(a1 + 688) = v125;
    v85 = *(_QWORD *)(a2 + 696);
    if (v85)
    {
      v86 = *(_QWORD *)(a2 + 704);
      *(_QWORD *)(a1 + 696) = v85;
      *(_QWORD *)(a1 + 704) = v86;
      *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
      *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
      *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v87 = *(_OWORD *)(a2 + 712);
      *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
      *(_OWORD *)(a1 + 712) = v87;
      *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
    }
    a3 = v126;
    *(_BYTE *)(a1 + 736) = *(_BYTE *)(a2 + 736);
    *(_BYTE *)(a1 + 768) = 1;
  }
  else
  {
    *(_WORD *)(a1 + 224) = *(_WORD *)(a2 + 224);
    v44 = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
    *(_QWORD *)(a1 + 240) = v44;
    v45 = *(_QWORD *)(a2 + 256);
    *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 256) = v45;
    *(_BYTE *)(a1 + 264) = *(_BYTE *)(a2 + 264);
    v46 = *(_QWORD *)(a2 + 280);
    *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
    *(_QWORD *)(a1 + 280) = v46;
    v47 = (_OWORD *)(a2 + 288);
    v48 = *(_QWORD *)(a2 + 296);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v48 == 1)
    {
      *(_OWORD *)(a1 + 288) = *v47;
    }
    else
    {
      *(_QWORD *)(a1 + 288) = *(_QWORD *)v47;
      *(_QWORD *)(a1 + 296) = v48;
      swift_bridgeObjectRetain();
    }
    v49 = *(_QWORD *)(a2 + 312);
    *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
    *(_QWORD *)(a1 + 312) = v49;
    v50 = *(_QWORD *)(a2 + 328);
    *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
    *(_QWORD *)(a1 + 328) = v50;
    v51 = *(_QWORD *)(a2 + 344);
    *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 344) = v51;
    v52 = *(_OWORD *)(a2 + 464);
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    *(_OWORD *)(a1 + 464) = v52;
    *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
    *(_WORD *)(a1 + 496) = *(_WORD *)(a2 + 496);
    v53 = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 400) = v53;
    v54 = *(_OWORD *)(a2 + 432);
    *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 432) = v54;
    v55 = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 368) = v55;
    *(_WORD *)(a1 + 498) = *(_WORD *)(a2 + 498);
    *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
    *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
    v56 = *(_OWORD *)(a2 + 696);
    *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 680);
    *(_OWORD *)(a1 + 696) = v56;
    *(_OWORD *)(a1 + 712) = *(_OWORD *)(a2 + 712);
    *(_WORD *)(a1 + 728) = *(_WORD *)(a2 + 728);
    v57 = *(_OWORD *)(a2 + 632);
    *(_OWORD *)(a1 + 616) = *(_OWORD *)(a2 + 616);
    *(_OWORD *)(a1 + 632) = v57;
    v58 = *(_OWORD *)(a2 + 664);
    *(_OWORD *)(a1 + 648) = *(_OWORD *)(a2 + 648);
    *(_OWORD *)(a1 + 664) = v58;
    v59 = *(_OWORD *)(a2 + 568);
    *(_OWORD *)(a1 + 552) = *(_OWORD *)(a2 + 552);
    *(_OWORD *)(a1 + 568) = v59;
    v60 = *(_OWORD *)(a2 + 600);
    *(_OWORD *)(a1 + 584) = *(_OWORD *)(a2 + 584);
    *(_OWORD *)(a1 + 600) = v60;
    v61 = *(_OWORD *)(a2 + 536);
    *(_OWORD *)(a1 + 520) = *(_OWORD *)(a2 + 520);
    *(_OWORD *)(a1 + 536) = v61;
    *(_BYTE *)(a1 + 730) = *(_BYTE *)(a2 + 730);
    v62 = *(_QWORD *)(a2 + 744);
    *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
    *(_QWORD *)(a1 + 744) = v62;
    v63 = (_OWORD *)(a2 + 752);
    v64 = *(_QWORD *)(a2 + 760);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v64 == 1)
    {
      *(_OWORD *)(a1 + 752) = *v63;
    }
    else
    {
      *(_QWORD *)(a1 + 752) = *(_QWORD *)v63;
      *(_QWORD *)(a1 + 760) = v64;
      swift_bridgeObjectRetain();
    }
    *(_BYTE *)(a1 + 768) = 0;
  }
  v88 = a3[6];
  v89 = a1 + v88;
  v90 = a2 + v88;
  v91 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 16))(v89, v90, v91);
  v92 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v92) = *(_QWORD *)(a2 + v92);
  return a1;
}

uint64_t assignWithCopy for PosterArchive(uint64_t a1, __int128 *a2, int *a3)
{
  uint64_t v6;
  __int128 v7;
  __int128 *v8;
  __int128 *v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 *v15;
  __int128 *v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49;
  _OWORD *v50;
  _OWORD *v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  _OWORD *v61;
  _OWORD *v62;
  int v63;
  __int128 v64;
  _OWORD *v65;
  __int128 *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  __int128 v98;
  __int128 v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  uint64_t v105;
  uint64_t v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  __int128 v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  unint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  int *v173;

  v6 = *((_QWORD *)a2 + 23);
  if (!*(_QWORD *)(a1 + 184))
  {
    if (!v6)
    {
      v33 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v33;
      v34 = a2[2];
      v35 = a2[3];
      v36 = a2[5];
      *(_OWORD *)(a1 + 64) = a2[4];
      *(_OWORD *)(a1 + 80) = v36;
      *(_OWORD *)(a1 + 32) = v34;
      *(_OWORD *)(a1 + 48) = v35;
      v37 = a2[6];
      v38 = a2[7];
      v39 = a2[9];
      *(_OWORD *)(a1 + 128) = a2[8];
      *(_OWORD *)(a1 + 144) = v39;
      *(_OWORD *)(a1 + 96) = v37;
      *(_OWORD *)(a1 + 112) = v38;
      v40 = a2[10];
      v41 = a2[11];
      v42 = a2[12];
      *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
      *(_OWORD *)(a1 + 176) = v41;
      *(_OWORD *)(a1 + 192) = v42;
      *(_OWORD *)(a1 + 160) = v40;
      goto LABEL_35;
    }
    v14 = *a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = v14;
    *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
    *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
    v15 = (__int128 *)(a1 + 24);
    v16 = (__int128 *)((char *)a2 + 24);
    if (*((_QWORD *)a2 + 9) == 1)
    {
      v17 = *v16;
      v18 = *(__int128 *)((char *)a2 + 40);
      v19 = *(__int128 *)((char *)a2 + 56);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      *(_OWORD *)(a1 + 40) = v18;
      *(_OWORD *)(a1 + 56) = v19;
      *v15 = v17;
    }
    else
    {
      v43 = *(__int128 *)((char *)a2 + 40);
      *v15 = *v16;
      *(_OWORD *)(a1 + 40) = v43;
      *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      swift_bridgeObjectRetain();
    }
    if (*((_QWORD *)a2 + 11) == 1)
    {
      *(_OWORD *)(a1 + 80) = a2[5];
      v44 = a2[6];
      v45 = a2[7];
      v46 = a2[9];
      *(_OWORD *)(a1 + 128) = a2[8];
      *(_OWORD *)(a1 + 144) = v46;
      *(_OWORD *)(a1 + 96) = v44;
      *(_OWORD *)(a1 + 112) = v45;
    }
    else
    {
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
      *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
      *(_OWORD *)(a1 + 128) = a2[8];
      *(_OWORD *)(a1 + 144) = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
    *(_BYTE *)(a1 + 161) = *((_BYTE *)a2 + 161);
    *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
    *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
    v47 = *((_QWORD *)a2 + 24);
    *(_QWORD *)(a1 + 184) = *((_QWORD *)a2 + 23);
    *(_QWORD *)(a1 + 192) = v47;
    v48 = *((_QWORD *)a2 + 26);
    swift_retain();
    if (v48 == 1)
    {
      *(_OWORD *)(a1 + 200) = *(__int128 *)((char *)a2 + 200);
      goto LABEL_35;
    }
    goto LABEL_30;
  }
  if (!v6)
  {
    sub_1AD3AD2D8((_QWORD *)a1);
    v20 = a2[1];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v20;
    v21 = a2[5];
    v23 = a2[2];
    v22 = a2[3];
    *(_OWORD *)(a1 + 64) = a2[4];
    *(_OWORD *)(a1 + 80) = v21;
    *(_OWORD *)(a1 + 32) = v23;
    *(_OWORD *)(a1 + 48) = v22;
    v24 = a2[9];
    v26 = a2[6];
    v25 = a2[7];
    *(_OWORD *)(a1 + 128) = a2[8];
    *(_OWORD *)(a1 + 144) = v24;
    *(_OWORD *)(a1 + 96) = v26;
    *(_OWORD *)(a1 + 112) = v25;
    v28 = a2[11];
    v27 = a2[12];
    v29 = a2[10];
    *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
    *(_OWORD *)(a1 + 176) = v28;
    *(_OWORD *)(a1 + 192) = v27;
    *(_OWORD *)(a1 + 160) = v29;
    goto LABEL_35;
  }
  v7 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v7;
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
  v8 = (__int128 *)(a1 + 24);
  v9 = (__int128 *)((char *)a2 + 24);
  v10 = *((_QWORD *)a2 + 9);
  if (*(_QWORD *)(a1 + 72) == 1)
  {
    if (v10 == 1)
    {
      v11 = *v9;
      v12 = *(__int128 *)((char *)a2 + 40);
      v13 = *(__int128 *)((char *)a2 + 56);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      *(_OWORD *)(a1 + 40) = v12;
      *(_OWORD *)(a1 + 56) = v13;
      *v8 = v11;
    }
    else
    {
      v49 = *(__int128 *)((char *)a2 + 40);
      *v8 = *v9;
      *(_OWORD *)(a1 + 40) = v49;
      *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      swift_bridgeObjectRetain();
    }
  }
  else if (v10 == 1)
  {
    sub_1AD3AD280(a1 + 24);
    v31 = *(__int128 *)((char *)a2 + 40);
    v30 = *(__int128 *)((char *)a2 + 56);
    v32 = *v9;
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    *(_OWORD *)(a1 + 40) = v31;
    *(_OWORD *)(a1 + 56) = v30;
    *v8 = v32;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v50 = (_OWORD *)(a1 + 80);
  v51 = a2 + 5;
  v52 = *((_QWORD *)a2 + 11);
  if (*(_QWORD *)(a1 + 88) == 1)
  {
    if (v52 == 1)
    {
      *v50 = *v51;
      v53 = a2[6];
      v54 = a2[7];
      v55 = a2[9];
      *(_OWORD *)(a1 + 128) = a2[8];
      *(_OWORD *)(a1 + 144) = v55;
      *(_OWORD *)(a1 + 96) = v53;
      *(_OWORD *)(a1 + 112) = v54;
    }
    else
    {
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
      *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
      *(_OWORD *)(a1 + 128) = a2[8];
      *(_OWORD *)(a1 + 144) = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v52 == 1)
  {
    sub_1AD3AD2A8(a1 + 80);
    *v50 = *v51;
    v56 = a2[9];
    v58 = a2[6];
    v57 = a2[7];
    *(_OWORD *)(a1 + 128) = a2[8];
    *(_OWORD *)(a1 + 144) = v56;
    *(_OWORD *)(a1 + 96) = v58;
    *(_OWORD *)(a1 + 112) = v57;
  }
  else
  {
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
    *(_QWORD *)(a1 + 136) = *((_QWORD *)a2 + 17);
    *(_QWORD *)(a1 + 144) = *((_QWORD *)a2 + 18);
    *(_QWORD *)(a1 + 152) = *((_QWORD *)a2 + 19);
  }
  *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
  *(_BYTE *)(a1 + 161) = *((_BYTE *)a2 + 161);
  *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  v59 = *((_QWORD *)a2 + 24);
  *(_QWORD *)(a1 + 184) = *((_QWORD *)a2 + 23);
  *(_QWORD *)(a1 + 192) = v59;
  swift_retain();
  swift_release();
  v60 = *((_QWORD *)a2 + 26);
  if (*(_QWORD *)(a1 + 208) == 1)
  {
    if (v60 != 1)
    {
LABEL_30:
      *(_QWORD *)(a1 + 200) = *((_QWORD *)a2 + 25);
      *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
      swift_bridgeObjectRetain();
      goto LABEL_35;
    }
    goto LABEL_33;
  }
  if (v60 == 1)
  {
    sub_1AD009758(a1 + 200, &qword_1ED2E3198);
LABEL_33:
    *(_OWORD *)(a1 + 200) = *(__int128 *)((char *)a2 + 200);
    goto LABEL_35;
  }
  *(_QWORD *)(a1 + 200) = *((_QWORD *)a2 + 25);
  *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_35:
  *(_WORD *)(a1 + 216) = *((_WORD *)a2 + 108);
  if ((__int128 *)a1 != a2)
  {
    v61 = (_OWORD *)(a1 + 224);
    v62 = a2 + 14;
    sub_1AD28B36C(a1 + 224);
    v63 = *((unsigned __int8 *)a2 + 768);
    if (v63 == 2)
    {
      v82 = a2[15];
      *v61 = *v62;
      *(_OWORD *)(a1 + 240) = v82;
      v83 = a2[17];
      *(_OWORD *)(a1 + 256) = a2[16];
      *(_OWORD *)(a1 + 272) = v83;
      *(_QWORD *)(a1 + 288) = *((_QWORD *)a2 + 36);
      *(_QWORD *)(a1 + 296) = *((_QWORD *)a2 + 37);
      *(_BYTE *)(a1 + 304) = *((_BYTE *)a2 + 304);
      *(_BYTE *)(a1 + 768) = 2;
      swift_bridgeObjectRetain();
    }
    else if (v63 == 1)
    {
      v173 = a3;
      v64 = a2[15];
      *v61 = *v62;
      *(_OWORD *)(a1 + 240) = v64;
      v65 = (_OWORD *)(a1 + 256);
      v66 = a2 + 16;
      v67 = *((_QWORD *)a2 + 35);
      if (v67)
      {
        *(_QWORD *)(a1 + 280) = v67;
        *(_QWORD *)(a1 + 288) = *((_QWORD *)a2 + 36);
        (**(void (***)(_OWORD *, __int128 *))(v67 - 8))(v65, v66);
        v68 = *((_QWORD *)a2 + 37);
        *(_BYTE *)(a1 + 304) = *((_BYTE *)a2 + 304);
        *(_QWORD *)(a1 + 296) = v68;
        v69 = *((_QWORD *)a2 + 42);
        v70 = *((_QWORD *)a2 + 44);
        v71 = *((_QWORD *)a2 + 46);
        v72 = *((_QWORD *)a2 + 54);
        if (v69 >> 1 != 0xFFFFFFFF
          || (v71 | (unint64_t)v70) > 1
          || a2[26] & 0xFFFFFFFFFFFFFEFELL | (_QWORD)a2[24] & 0xFFFFFFFFFFFF00FELL
          || (*((_QWORD *)a2 + 56) | (unint64_t)v72) >= 2)
        {
          v119 = *((_QWORD *)a2 + 39);
          v120 = *((_QWORD *)a2 + 41);
          v145 = *((_QWORD *)a2 + 47);
          v149 = *((_QWORD *)a2 + 49);
          v151 = *((_QWORD *)a2 + 50);
          v155 = *((_QWORD *)a2 + 51);
          v157 = *((_QWORD *)a2 + 53);
          v159 = *((_QWORD *)a2 + 55);
          v161 = *((_QWORD *)a2 + 57);
          v163 = *((_QWORD *)a2 + 58);
          v165 = *((_QWORD *)a2 + 59);
          v167 = *((_QWORD *)a2 + 60);
          v169 = *((_QWORD *)a2 + 61);
          v171 = *((_QWORD *)a2 + 62);
          v141 = *((_QWORD *)a2 + 52);
          v143 = *((_QWORD *)a2 + 48);
          v121 = *((_QWORD *)a2 + 40);
          v153 = *((_QWORD *)a2 + 56);
          v122 = *((_QWORD *)a2 + 43);
          v147 = *((_QWORD *)a2 + 54);
          v123 = *((_QWORD *)a2 + 45);
          sub_1AD00FEAC(v119, v121, v120, v69, v122, v70, v123, v71, v145, v143, v149, v151, v155, v141, v157, v72, v159, v153, v161,
            v163,
            v165,
            v167,
            v169,
            v171);
          *(_QWORD *)(a1 + 312) = v119;
          *(_QWORD *)(a1 + 320) = v121;
          *(_QWORD *)(a1 + 328) = v120;
          *(_QWORD *)(a1 + 336) = v69;
          *(_QWORD *)(a1 + 344) = v122;
          *(_QWORD *)(a1 + 352) = v70;
          *(_QWORD *)(a1 + 360) = v123;
          *(_QWORD *)(a1 + 368) = v71;
          *(_QWORD *)(a1 + 376) = v145;
          *(_QWORD *)(a1 + 384) = v143;
          *(_QWORD *)(a1 + 392) = v149;
          *(_QWORD *)(a1 + 400) = v151;
          *(_QWORD *)(a1 + 408) = v155;
          *(_QWORD *)(a1 + 416) = v141;
          *(_QWORD *)(a1 + 424) = v157;
          *(_QWORD *)(a1 + 432) = v147;
          *(_QWORD *)(a1 + 440) = v159;
          *(_QWORD *)(a1 + 448) = v153;
          *(_QWORD *)(a1 + 456) = v161;
          *(_QWORD *)(a1 + 464) = v163;
          *(_QWORD *)(a1 + 472) = v165;
          *(_QWORD *)(a1 + 480) = v167;
          *(_QWORD *)(a1 + 488) = v169;
          *(_QWORD *)(a1 + 496) = v171;
        }
        else
        {
          v73 = *(__int128 *)((char *)a2 + 312);
          v74 = *(__int128 *)((char *)a2 + 328);
          v75 = *(__int128 *)((char *)a2 + 360);
          *(_OWORD *)(a1 + 344) = *(__int128 *)((char *)a2 + 344);
          *(_OWORD *)(a1 + 360) = v75;
          *(_OWORD *)(a1 + 312) = v73;
          *(_OWORD *)(a1 + 328) = v74;
          v76 = *(__int128 *)((char *)a2 + 376);
          v77 = *(__int128 *)((char *)a2 + 392);
          v78 = *(__int128 *)((char *)a2 + 424);
          *(_OWORD *)(a1 + 408) = *(__int128 *)((char *)a2 + 408);
          *(_OWORD *)(a1 + 424) = v78;
          *(_OWORD *)(a1 + 376) = v76;
          *(_OWORD *)(a1 + 392) = v77;
          v79 = *(__int128 *)((char *)a2 + 440);
          v80 = *(__int128 *)((char *)a2 + 456);
          v81 = *(__int128 *)((char *)a2 + 488);
          *(_OWORD *)(a1 + 472) = *(__int128 *)((char *)a2 + 472);
          *(_OWORD *)(a1 + 488) = v81;
          *(_OWORD *)(a1 + 440) = v79;
          *(_OWORD *)(a1 + 456) = v80;
        }
      }
      else
      {
        v107 = *v66;
        v108 = a2[17];
        v109 = a2[19];
        *(_OWORD *)(a1 + 288) = a2[18];
        *(_OWORD *)(a1 + 304) = v109;
        *v65 = v107;
        *(_OWORD *)(a1 + 272) = v108;
        v110 = a2[20];
        v111 = a2[21];
        v112 = a2[23];
        *(_OWORD *)(a1 + 352) = a2[22];
        *(_OWORD *)(a1 + 368) = v112;
        *(_OWORD *)(a1 + 320) = v110;
        *(_OWORD *)(a1 + 336) = v111;
        v113 = a2[24];
        v114 = a2[25];
        v115 = a2[27];
        *(_OWORD *)(a1 + 416) = a2[26];
        *(_OWORD *)(a1 + 432) = v115;
        *(_OWORD *)(a1 + 384) = v113;
        *(_OWORD *)(a1 + 400) = v114;
        v116 = a2[28];
        v117 = a2[29];
        v118 = a2[30];
        *(_QWORD *)(a1 + 496) = *((_QWORD *)a2 + 62);
        *(_OWORD *)(a1 + 464) = v117;
        *(_OWORD *)(a1 + 480) = v118;
        *(_OWORD *)(a1 + 448) = v116;
      }
      v124 = *((_QWORD *)a2 + 67);
      v125 = *((_QWORD *)a2 + 68);
      v142 = *((_QWORD *)a2 + 71);
      v144 = *((_QWORD *)a2 + 72);
      v146 = *((_QWORD *)a2 + 73);
      v148 = *((_QWORD *)a2 + 74);
      v150 = *((_QWORD *)a2 + 75);
      v152 = *((_QWORD *)a2 + 76);
      v154 = *((_QWORD *)a2 + 77);
      v156 = *((_QWORD *)a2 + 78);
      v158 = *((_QWORD *)a2 + 79);
      v160 = *((_QWORD *)a2 + 80);
      v162 = *((_QWORD *)a2 + 81);
      v164 = *((_QWORD *)a2 + 82);
      v166 = *((_QWORD *)a2 + 83);
      v168 = *((_QWORD *)a2 + 84);
      v170 = *((_QWORD *)a2 + 85);
      v172 = *((_QWORD *)a2 + 86);
      v126 = *((_QWORD *)a2 + 63);
      v127 = *((_QWORD *)a2 + 64);
      v128 = *((_QWORD *)a2 + 65);
      v129 = *((_QWORD *)a2 + 66);
      v130 = *((_QWORD *)a2 + 69);
      v131 = *((_QWORD *)a2 + 70);
      sub_1AD00FEAC(v126, v127, v128, v129, v124, v125, v130, v131, v142, v144, v146, v148, v150, v152, v154, v156, v158, v160, v162,
        v164,
        v166,
        v168,
        v170,
        v172);
      *(_QWORD *)(a1 + 504) = v126;
      *(_QWORD *)(a1 + 512) = v127;
      *(_QWORD *)(a1 + 520) = v128;
      *(_QWORD *)(a1 + 528) = v129;
      *(_QWORD *)(a1 + 536) = v124;
      *(_QWORD *)(a1 + 544) = v125;
      *(_QWORD *)(a1 + 552) = v130;
      *(_QWORD *)(a1 + 560) = v131;
      *(_QWORD *)(a1 + 568) = v142;
      *(_QWORD *)(a1 + 576) = v144;
      *(_QWORD *)(a1 + 584) = v146;
      *(_QWORD *)(a1 + 592) = v148;
      *(_QWORD *)(a1 + 600) = v150;
      *(_QWORD *)(a1 + 608) = v152;
      *(_QWORD *)(a1 + 616) = v154;
      *(_QWORD *)(a1 + 624) = v156;
      *(_QWORD *)(a1 + 632) = v158;
      *(_QWORD *)(a1 + 640) = v160;
      *(_QWORD *)(a1 + 648) = v162;
      *(_QWORD *)(a1 + 656) = v164;
      *(_QWORD *)(a1 + 664) = v166;
      *(_QWORD *)(a1 + 672) = v168;
      *(_QWORD *)(a1 + 680) = v170;
      *(_QWORD *)(a1 + 688) = v172;
      v132 = *((_QWORD *)a2 + 87);
      if (v132)
      {
        v133 = *((_QWORD *)a2 + 88);
        *(_QWORD *)(a1 + 696) = v132;
        *(_QWORD *)(a1 + 704) = v133;
        *(_QWORD *)(a1 + 712) = *((_QWORD *)a2 + 89);
        *(_QWORD *)(a1 + 720) = *((_QWORD *)a2 + 90);
        *(_QWORD *)(a1 + 728) = *((_QWORD *)a2 + 91);
        swift_retain();
        swift_bridgeObjectRetain();
        swift_retain();
      }
      else
      {
        v134 = *(__int128 *)((char *)a2 + 696);
        v135 = *(__int128 *)((char *)a2 + 712);
        *(_QWORD *)(a1 + 728) = *((_QWORD *)a2 + 91);
        *(_OWORD *)(a1 + 696) = v134;
        *(_OWORD *)(a1 + 712) = v135;
      }
      a3 = v173;
      *(_BYTE *)(a1 + 736) = *((_BYTE *)a2 + 736);
      *(_BYTE *)(a1 + 768) = 1;
    }
    else
    {
      *(_WORD *)(a1 + 224) = *((_WORD *)a2 + 112);
      v84 = *((_QWORD *)a2 + 30);
      *(_QWORD *)(a1 + 232) = *((_QWORD *)a2 + 29);
      *(_QWORD *)(a1 + 240) = v84;
      *(_QWORD *)(a1 + 248) = *((_QWORD *)a2 + 31);
      *(_QWORD *)(a1 + 256) = *((_QWORD *)a2 + 32);
      *(_BYTE *)(a1 + 264) = *((_BYTE *)a2 + 264);
      v85 = *((_QWORD *)a2 + 35);
      *(_QWORD *)(a1 + 272) = *((_QWORD *)a2 + 34);
      *(_QWORD *)(a1 + 280) = v85;
      v86 = *((_QWORD *)a2 + 37);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v86 == 1)
      {
        *(_OWORD *)(a1 + 288) = a2[18];
      }
      else
      {
        *(_QWORD *)(a1 + 288) = *((_QWORD *)a2 + 36);
        *(_QWORD *)(a1 + 296) = *((_QWORD *)a2 + 37);
        swift_bridgeObjectRetain();
      }
      v87 = *((_QWORD *)a2 + 39);
      *(_QWORD *)(a1 + 304) = *((_QWORD *)a2 + 38);
      *(_QWORD *)(a1 + 312) = v87;
      *(_QWORD *)(a1 + 320) = *((_QWORD *)a2 + 40);
      *(_QWORD *)(a1 + 328) = *((_QWORD *)a2 + 41);
      *(_QWORD *)(a1 + 336) = *((_QWORD *)a2 + 42);
      *(_QWORD *)(a1 + 344) = *((_QWORD *)a2 + 43);
      v88 = a2[23];
      *(_OWORD *)(a1 + 352) = a2[22];
      *(_OWORD *)(a1 + 368) = v88;
      v89 = a2[24];
      v90 = a2[25];
      v91 = a2[27];
      *(_OWORD *)(a1 + 416) = a2[26];
      *(_OWORD *)(a1 + 432) = v91;
      *(_OWORD *)(a1 + 384) = v89;
      *(_OWORD *)(a1 + 400) = v90;
      v92 = a2[28];
      v93 = a2[29];
      v94 = a2[30];
      *(_WORD *)(a1 + 496) = *((_WORD *)a2 + 248);
      *(_OWORD *)(a1 + 464) = v93;
      *(_OWORD *)(a1 + 480) = v94;
      *(_OWORD *)(a1 + 448) = v92;
      *(_BYTE *)(a1 + 498) = *((_BYTE *)a2 + 498);
      *(_BYTE *)(a1 + 499) = *((_BYTE *)a2 + 499);
      *(_QWORD *)(a1 + 504) = *((_QWORD *)a2 + 63);
      *(_BYTE *)(a1 + 512) = *((_BYTE *)a2 + 512);
      v95 = *(__int128 *)((char *)a2 + 536);
      *(_OWORD *)(a1 + 520) = *(__int128 *)((char *)a2 + 520);
      *(_OWORD *)(a1 + 536) = v95;
      v96 = *(__int128 *)((char *)a2 + 552);
      v97 = *(__int128 *)((char *)a2 + 568);
      v98 = *(__int128 *)((char *)a2 + 600);
      *(_OWORD *)(a1 + 584) = *(__int128 *)((char *)a2 + 584);
      *(_OWORD *)(a1 + 600) = v98;
      *(_OWORD *)(a1 + 552) = v96;
      *(_OWORD *)(a1 + 568) = v97;
      v99 = *(__int128 *)((char *)a2 + 616);
      v100 = *(__int128 *)((char *)a2 + 632);
      v101 = *(__int128 *)((char *)a2 + 664);
      *(_OWORD *)(a1 + 648) = *(__int128 *)((char *)a2 + 648);
      *(_OWORD *)(a1 + 664) = v101;
      *(_OWORD *)(a1 + 616) = v99;
      *(_OWORD *)(a1 + 632) = v100;
      v102 = *(__int128 *)((char *)a2 + 680);
      v103 = *(__int128 *)((char *)a2 + 696);
      v104 = *(__int128 *)((char *)a2 + 712);
      *(_WORD *)(a1 + 728) = *((_WORD *)a2 + 364);
      *(_OWORD *)(a1 + 696) = v103;
      *(_OWORD *)(a1 + 712) = v104;
      *(_OWORD *)(a1 + 680) = v102;
      *(_BYTE *)(a1 + 730) = *((_BYTE *)a2 + 730);
      v105 = *((_QWORD *)a2 + 93);
      *(_QWORD *)(a1 + 736) = *((_QWORD *)a2 + 92);
      *(_QWORD *)(a1 + 744) = v105;
      v106 = *((_QWORD *)a2 + 95);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      if (v106 == 1)
      {
        *(_OWORD *)(a1 + 752) = a2[47];
      }
      else
      {
        *(_QWORD *)(a1 + 752) = *((_QWORD *)a2 + 94);
        *(_QWORD *)(a1 + 760) = *((_QWORD *)a2 + 95);
        swift_bridgeObjectRetain();
      }
      *(_BYTE *)(a1 + 768) = 0;
    }
  }
  v136 = a3[6];
  v137 = a1 + v136;
  v138 = (uint64_t)a2 + v136;
  v139 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v139 - 8) + 24))(v137, v138, v139);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)((char *)a2 + a3[8]);
  return a1;
}

uint64_t sub_1AD3AD280(uint64_t a1)
{
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD3AD2A8(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *sub_1AD3AD2D8(_QWORD *a1)
{
  destroy for PosterArchive.Configuration.TitleStyleConfiguration(a1);
  return a1;
}

_OWORD *initializeWithTake for PosterArchive(_OWORD *a1, _OWORD *a2, int *a3)
{
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = a2[11];
  a1[10] = a2[10];
  a1[11] = v6;
  a1[12] = a2[12];
  *(_OWORD *)((char *)a1 + 202) = *(_OWORD *)((char *)a2 + 202);
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  v9 = a2[3];
  a1[2] = a2[2];
  a1[3] = v9;
  v10 = a2[5];
  a1[4] = a2[4];
  a1[5] = v10;
  v11 = a2[1];
  *a1 = *a2;
  a1[1] = v11;
  memcpy(a1 + 14, a2 + 14, 0x221uLL);
  v12 = a3[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_1AD63B084();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  v16 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_QWORD *)((char *)a1 + v16) = *(_QWORD *)((char *)a2 + v16);
  return a1;
}

uint64_t assignWithTake for PosterArchive(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  if (!*(_QWORD *)(a1 + 184))
    goto LABEL_8;
  v6 = *(_QWORD *)(a2 + 184);
  if (!v6)
  {
    sub_1AD3AD2D8((_QWORD *)a1);
LABEL_8:
    v11 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v11;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    v12 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v12;
    v13 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v13;
    v14 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v14;
    v15 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v15;
    v16 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v16;
    goto LABEL_20;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v7 = (_OWORD *)(a1 + 24);
  v8 = (_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 72) == 1)
  {
LABEL_6:
    v10 = *(_OWORD *)(a2 + 40);
    *v7 = *v8;
    *(_OWORD *)(a1 + 40) = v10;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    goto LABEL_10;
  }
  v9 = *(_QWORD *)(a2 + 72);
  if (v9 == 1)
  {
    sub_1AD3AD280(a1 + 24);
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v9;
  swift_bridgeObjectRelease();
LABEL_10:
  if (*(_QWORD *)(a1 + 88) == 1)
  {
LABEL_13:
    v18 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v18;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    v19 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v19;
    goto LABEL_15;
  }
  v17 = *(_QWORD *)(a2 + 88);
  if (v17 == 1)
  {
    sub_1AD3AD2A8(a1 + 80);
    goto LABEL_13;
  }
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v17;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  v20 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v20;
LABEL_15:
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  v21 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v6;
  *(_QWORD *)(a1 + 192) = v21;
  swift_release();
  v22 = (_OWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 208) == 1)
  {
LABEL_18:
    *(_OWORD *)(a1 + 200) = *v22;
    goto LABEL_20;
  }
  v23 = *(_QWORD *)(a2 + 208);
  if (v23 == 1)
  {
    sub_1AD009758(a1 + 200, &qword_1ED2E3198);
    goto LABEL_18;
  }
  *(_QWORD *)(a1 + 200) = *(_QWORD *)v22;
  *(_QWORD *)(a1 + 208) = v23;
  swift_bridgeObjectRelease();
LABEL_20:
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  if (a1 != a2)
  {
    sub_1AD28B36C(a1 + 224);
    memcpy((void *)(a1 + 224), (const void *)(a2 + 224), 0x221uLL);
  }
  v24 = a3[6];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
  v28 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v28) = *(_QWORD *)(a2 + v28);
  return a1;
}

uint64_t getEnumTagSinglePayload for PosterArchive()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3AD64C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)(a1 + 184);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_1AD63B084();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for PosterArchive()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD3AD6E0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)(result + 184) = a2;
  }
  else
  {
    v7 = sub_1AD63B084();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AD3AD754()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B084();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for PosterArchive.Configuration(uint64_t result)
{
  uint64_t v1;

  if (*(_QWORD *)(result + 184))
  {
    v1 = result;
    if (*(_QWORD *)(result + 72) != 1)
      swift_bridgeObjectRelease();
    if (*(_QWORD *)(v1 + 88) != 1)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_release();
    result = *(_QWORD *)(v1 + 208);
    if (result != 1)
      return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for PosterArchive.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  _OWORD *v19;
  uint64_t v20;

  v4 = *(_QWORD *)(a2 + 184);
  if (v4)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
    *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
    v5 = (_OWORD *)(a1 + 24);
    v6 = *(_QWORD *)(a2 + 72);
    v7 = *(_OWORD *)(a2 + 40);
    *v5 = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 40) = v7;
    if (v6 == 1)
    {
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    }
    else
    {
      *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = v6;
      swift_bridgeObjectRetain();
    }
    v14 = *(_QWORD *)(a2 + 88);
    if (v14 == 1)
    {
      v15 = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 128) = v15;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      v16 = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 96) = v16;
    }
    else
    {
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v14;
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      v17 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v17;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
    *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
    *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
    v18 = *(_QWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 184) = v4;
    *(_QWORD *)(a1 + 192) = v18;
    v19 = (_OWORD *)(a2 + 200);
    v20 = *(_QWORD *)(a2 + 208);
    swift_retain();
    if (v20 == 1)
    {
      *(_OWORD *)(a1 + 200) = *v19;
    }
    else
    {
      *(_QWORD *)(a1 + 200) = *(_QWORD *)v19;
      *(_QWORD *)(a1 + 208) = v20;
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v8 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v8;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    v9 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v9;
    v10 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v10;
    v11 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v11;
    v12 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v12;
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
  }
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  return a1;
}

uint64_t assignWithCopy for PosterArchive.Configuration(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  __int128 v5;
  __int128 *v6;
  __int128 *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 *v13;
  __int128 *v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  _OWORD *v48;
  _OWORD *v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;

  v4 = *((_QWORD *)a2 + 23);
  if (*(_QWORD *)(a1 + 184))
  {
    if (v4)
    {
      v5 = *a2;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)a1 = v5;
      *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
      *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
      v6 = (__int128 *)(a1 + 24);
      v7 = (__int128 *)((char *)a2 + 24);
      v8 = *((_QWORD *)a2 + 9);
      if (*(_QWORD *)(a1 + 72) == 1)
      {
        if (v8 == 1)
        {
          v9 = *v7;
          v10 = *(__int128 *)((char *)a2 + 40);
          v11 = *(__int128 *)((char *)a2 + 56);
          *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
          *(_OWORD *)(a1 + 40) = v10;
          *(_OWORD *)(a1 + 56) = v11;
          *v6 = v9;
        }
        else
        {
          v47 = *(__int128 *)((char *)a2 + 40);
          *v6 = *v7;
          *(_OWORD *)(a1 + 40) = v47;
          *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
          *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
          *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
          swift_bridgeObjectRetain();
        }
      }
      else if (v8 == 1)
      {
        sub_1AD3AD280(a1 + 24);
        v29 = *(__int128 *)((char *)a2 + 40);
        v28 = *(__int128 *)((char *)a2 + 56);
        v30 = *v7;
        *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
        *(_OWORD *)(a1 + 40) = v29;
        *(_OWORD *)(a1 + 56) = v28;
        *v6 = v30;
      }
      else
      {
        *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
        *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
        *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
        *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
        *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
        *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
        *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      v48 = (_OWORD *)(a1 + 80);
      v49 = a2 + 5;
      v50 = *((_QWORD *)a2 + 11);
      if (*(_QWORD *)(a1 + 88) == 1)
      {
        if (v50 == 1)
        {
          *v48 = *v49;
          v51 = a2[6];
          v52 = a2[7];
          v53 = a2[9];
          *(_OWORD *)(a1 + 128) = a2[8];
          *(_OWORD *)(a1 + 144) = v53;
          *(_OWORD *)(a1 + 96) = v51;
          *(_OWORD *)(a1 + 112) = v52;
        }
        else
        {
          *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
          *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
          *(_OWORD *)(a1 + 96) = a2[6];
          *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
          *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
          *(_OWORD *)(a1 + 128) = a2[8];
          *(_OWORD *)(a1 + 144) = a2[9];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
      }
      else if (v50 == 1)
      {
        sub_1AD3AD2A8(a1 + 80);
        *v48 = *v49;
        v54 = a2[9];
        v56 = a2[6];
        v55 = a2[7];
        *(_OWORD *)(a1 + 128) = a2[8];
        *(_OWORD *)(a1 + 144) = v54;
        *(_OWORD *)(a1 + 96) = v56;
        *(_OWORD *)(a1 + 112) = v55;
      }
      else
      {
        *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
        *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_OWORD *)(a1 + 96) = a2[6];
        *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
        *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
        *(_QWORD *)(a1 + 136) = *((_QWORD *)a2 + 17);
        *(_QWORD *)(a1 + 144) = *((_QWORD *)a2 + 18);
        *(_QWORD *)(a1 + 152) = *((_QWORD *)a2 + 19);
      }
      *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
      *(_BYTE *)(a1 + 161) = *((_BYTE *)a2 + 161);
      *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
      *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
      v57 = *((_QWORD *)a2 + 24);
      *(_QWORD *)(a1 + 184) = *((_QWORD *)a2 + 23);
      *(_QWORD *)(a1 + 192) = v57;
      swift_retain();
      swift_release();
      v58 = *((_QWORD *)a2 + 26);
      if (*(_QWORD *)(a1 + 208) == 1)
      {
        if (v58 != 1)
        {
LABEL_30:
          *(_QWORD *)(a1 + 200) = *((_QWORD *)a2 + 25);
          *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
          swift_bridgeObjectRetain();
          goto LABEL_35;
        }
      }
      else
      {
        if (v58 != 1)
        {
          *(_QWORD *)(a1 + 200) = *((_QWORD *)a2 + 25);
          *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          goto LABEL_35;
        }
        sub_1AD009758(a1 + 200, &qword_1ED2E3198);
      }
      *(_OWORD *)(a1 + 200) = *(__int128 *)((char *)a2 + 200);
      goto LABEL_35;
    }
    sub_1AD3AD2D8((_QWORD *)a1);
    v18 = a2[1];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v18;
    v19 = a2[5];
    v21 = a2[2];
    v20 = a2[3];
    *(_OWORD *)(a1 + 64) = a2[4];
    *(_OWORD *)(a1 + 80) = v19;
    *(_OWORD *)(a1 + 32) = v21;
    *(_OWORD *)(a1 + 48) = v20;
    v22 = a2[9];
    v24 = a2[6];
    v23 = a2[7];
    *(_OWORD *)(a1 + 128) = a2[8];
    *(_OWORD *)(a1 + 144) = v22;
    *(_OWORD *)(a1 + 96) = v24;
    *(_OWORD *)(a1 + 112) = v23;
    v26 = a2[11];
    v25 = a2[12];
    v27 = a2[10];
    *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
    *(_OWORD *)(a1 + 176) = v26;
    *(_OWORD *)(a1 + 192) = v25;
    *(_OWORD *)(a1 + 160) = v27;
  }
  else if (v4)
  {
    v12 = *a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = v12;
    *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
    *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
    v13 = (__int128 *)(a1 + 24);
    v14 = (__int128 *)((char *)a2 + 24);
    if (*((_QWORD *)a2 + 9) == 1)
    {
      v15 = *v14;
      v16 = *(__int128 *)((char *)a2 + 40);
      v17 = *(__int128 *)((char *)a2 + 56);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      *(_OWORD *)(a1 + 40) = v16;
      *(_OWORD *)(a1 + 56) = v17;
      *v13 = v15;
    }
    else
    {
      v41 = *(__int128 *)((char *)a2 + 40);
      *v13 = *v14;
      *(_OWORD *)(a1 + 40) = v41;
      *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      swift_bridgeObjectRetain();
    }
    if (*((_QWORD *)a2 + 11) == 1)
    {
      *(_OWORD *)(a1 + 80) = a2[5];
      v42 = a2[6];
      v43 = a2[7];
      v44 = a2[9];
      *(_OWORD *)(a1 + 128) = a2[8];
      *(_OWORD *)(a1 + 144) = v44;
      *(_OWORD *)(a1 + 96) = v42;
      *(_OWORD *)(a1 + 112) = v43;
    }
    else
    {
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
      *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
      *(_OWORD *)(a1 + 128) = a2[8];
      *(_OWORD *)(a1 + 144) = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
    *(_BYTE *)(a1 + 161) = *((_BYTE *)a2 + 161);
    *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
    *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
    v45 = *((_QWORD *)a2 + 24);
    *(_QWORD *)(a1 + 184) = *((_QWORD *)a2 + 23);
    *(_QWORD *)(a1 + 192) = v45;
    v46 = *((_QWORD *)a2 + 26);
    swift_retain();
    if (v46 != 1)
      goto LABEL_30;
    *(_OWORD *)(a1 + 200) = *(__int128 *)((char *)a2 + 200);
  }
  else
  {
    v31 = a2[1];
    *(_OWORD *)a1 = *a2;
    *(_OWORD *)(a1 + 16) = v31;
    v32 = a2[2];
    v33 = a2[3];
    v34 = a2[5];
    *(_OWORD *)(a1 + 64) = a2[4];
    *(_OWORD *)(a1 + 80) = v34;
    *(_OWORD *)(a1 + 32) = v32;
    *(_OWORD *)(a1 + 48) = v33;
    v35 = a2[6];
    v36 = a2[7];
    v37 = a2[9];
    *(_OWORD *)(a1 + 128) = a2[8];
    *(_OWORD *)(a1 + 144) = v37;
    *(_OWORD *)(a1 + 96) = v35;
    *(_OWORD *)(a1 + 112) = v36;
    v38 = a2[10];
    v39 = a2[11];
    v40 = a2[12];
    *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
    *(_OWORD *)(a1 + 176) = v39;
    *(_OWORD *)(a1 + 192) = v40;
    *(_OWORD *)(a1 + 160) = v38;
  }
LABEL_35:
  *(_WORD *)(a1 + 216) = *((_WORD *)a2 + 108);
  return a1;
}

__n128 __swift_memcpy218_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 202) = *(_OWORD *)(a2 + 202);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for PosterArchive.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  _OWORD *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  uint64_t v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;

  if (!*(_QWORD *)(a1 + 184))
    goto LABEL_8;
  v4 = *(_QWORD *)(a2 + 184);
  if (!v4)
  {
    sub_1AD3AD2D8((_QWORD *)a1);
LABEL_8:
    v9 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v9;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
    v10 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v10;
    v11 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v11;
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    v13 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v13;
    v14 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v14;
    goto LABEL_20;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v5 = (_OWORD *)(a1 + 24);
  v6 = (_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 72) == 1)
  {
LABEL_6:
    v8 = *(_OWORD *)(a2 + 40);
    *v5 = *v6;
    *(_OWORD *)(a1 + 40) = v8;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    goto LABEL_10;
  }
  v7 = *(_QWORD *)(a2 + 72);
  if (v7 == 1)
  {
    sub_1AD3AD280(a1 + 24);
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
LABEL_10:
  if (*(_QWORD *)(a1 + 88) != 1)
  {
    v15 = *(_QWORD *)(a2 + 88);
    if (v15 != 1)
    {
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 88) = v15;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
      swift_bridgeObjectRelease();
      v18 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v18;
      goto LABEL_15;
    }
    sub_1AD3AD2A8(a1 + 80);
  }
  v16 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v16;
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  v17 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v17;
LABEL_15:
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  v19 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v4;
  *(_QWORD *)(a1 + 192) = v19;
  swift_release();
  v20 = (_QWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 208) != 1)
  {
    v21 = *(_QWORD *)(a2 + 208);
    if (v21 != 1)
    {
      *(_QWORD *)(a1 + 200) = *v20;
      *(_QWORD *)(a1 + 208) = v21;
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    sub_1AD009758(a1 + 200, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 200) = *(_OWORD *)v20;
LABEL_20:
  *(_WORD *)(a1 + 216) = *(_WORD *)(a2 + 216);
  return a1;
}

uint64_t getEnumTagSinglePayload for PosterArchive.Configuration(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 218))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 184);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PosterArchive.Configuration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 216) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 218) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 218) = 0;
    if (a2)
      *(_QWORD *)(result + 184) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration()
{
  return &type metadata for PosterArchive.Configuration;
}

uint64_t getEnumTagSinglePayload for PosterArchive.Configuration.SystemTimeFontConfiguration(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PosterArchive.Configuration.SystemTimeFontConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.SystemTimeFontConfiguration()
{
  return &type metadata for PosterArchive.Configuration.SystemTimeFontConfiguration;
}

uint64_t storeEnumTagSinglePayload for PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 15 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 15) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF1)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF0)
    return ((uint64_t (*)(void))((char *)&loc_1AD3AE2F4 + 4 * byte_1AD67E685[v4]))();
  *a1 = a2 + 15;
  return ((uint64_t (*)(void))((char *)sub_1AD3AE328 + 4 * byte_1AD67E680[v4]))();
}

uint64_t sub_1AD3AE328(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3AE330(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3AE338);
  return result;
}

uint64_t sub_1AD3AE344(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD3AE34CLL);
  *(_BYTE *)result = a2 + 15;
  return result;
}

uint64_t sub_1AD3AE350(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3AE358(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier()
{
  return &type metadata for PosterArchive.Configuration.SystemTimeFontConfiguration.TimeFontIdentifier;
}

uint64_t destroy for PosterArchive.Configuration.TitleStyleConfiguration(_QWORD *a1)
{
  uint64_t result;

  if (a1[9] != 1)
    swift_bridgeObjectRelease();
  if (a1[11] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  result = a1[26];
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for PosterArchive.Configuration.TitleStyleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v4 = a1 + 24;
  v5 = *(_QWORD *)(a2 + 72);
  v6 = *(_OWORD *)(a2 + 40);
  *(_OWORD *)v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(v4 + 16) = v6;
  if (v5 == 1)
  {
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(a2 + 56);
    *(_QWORD *)(v4 + 48) = *(_QWORD *)(a2 + 72);
  }
  else
  {
    *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v5;
    swift_bridgeObjectRetain();
  }
  v7 = *(_QWORD *)(a2 + 88);
  if (v7 == 1)
  {
    v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    v9 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v9;
  }
  else
  {
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v7;
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v10 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  *(_WORD *)(a1 + 160) = *(_WORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  v11 = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = v11;
  v12 = (_OWORD *)(a2 + 200);
  v13 = *(_QWORD *)(a2 + 208);
  swift_retain();
  if (v13 == 1)
  {
    *(_OWORD *)(a1 + 200) = *v12;
  }
  else
  {
    *(_QWORD *)(a1 + 200) = *(_QWORD *)v12;
    *(_QWORD *)(a1 + 208) = v13;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PosterArchive.Configuration.TitleStyleConfiguration(uint64_t a1, __int128 *a2)
{
  __int128 v4;
  uint64_t v5;
  __int128 *v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  _OWORD *v15;
  _OWORD *v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;

  v4 = *a2;
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 17) = *((_BYTE *)a2 + 17);
  *(_BYTE *)(a1 + 18) = *((_BYTE *)a2 + 18);
  v5 = a1 + 24;
  v6 = (__int128 *)((char *)a2 + 24);
  v7 = *((_QWORD *)a2 + 9);
  if (*(_QWORD *)(a1 + 72) == 1)
  {
    if (v7 == 1)
    {
      v8 = *v6;
      v9 = *(__int128 *)((char *)a2 + 40);
      v10 = *(__int128 *)((char *)a2 + 56);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      *(_OWORD *)(a1 + 40) = v9;
      *(_OWORD *)(a1 + 56) = v10;
      *(_OWORD *)v5 = v8;
    }
    else
    {
      v14 = *(__int128 *)((char *)a2 + 40);
      *(_OWORD *)v5 = *v6;
      *(_OWORD *)(a1 + 40) = v14;
      *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
      *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
      *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 1)
  {
    sub_1AD3AD280(a1 + 24);
    v12 = v6[1];
    v11 = v6[2];
    v13 = *v6;
    *(_QWORD *)(v5 + 48) = *((_QWORD *)v6 + 6);
    *(_OWORD *)(v5 + 16) = v12;
    *(_OWORD *)(v5 + 32) = v11;
    *(_OWORD *)v5 = v13;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = *((_QWORD *)a2 + 3);
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    *(_QWORD *)(a1 + 40) = *((_QWORD *)a2 + 5);
    *(_QWORD *)(a1 + 48) = *((_QWORD *)a2 + 6);
    *(_BYTE *)(a1 + 56) = *((_BYTE *)a2 + 56);
    *(_QWORD *)(a1 + 64) = *((_QWORD *)a2 + 8);
    *(_QWORD *)(a1 + 72) = *((_QWORD *)a2 + 9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v15 = (_OWORD *)(a1 + 80);
  v16 = a2 + 5;
  v17 = *((_QWORD *)a2 + 11);
  if (*(_QWORD *)(a1 + 88) == 1)
  {
    if (v17 == 1)
    {
      *v15 = *v16;
      v18 = a2[6];
      v19 = a2[7];
      v20 = a2[9];
      *(_OWORD *)(a1 + 128) = a2[8];
      *(_OWORD *)(a1 + 144) = v20;
      *(_OWORD *)(a1 + 96) = v18;
      *(_OWORD *)(a1 + 112) = v19;
    }
    else
    {
      *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
      *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
      *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
      *(_OWORD *)(a1 + 128) = a2[8];
      *(_OWORD *)(a1 + 144) = a2[9];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v17 == 1)
  {
    sub_1AD3AD2A8(a1 + 80);
    *v15 = *v16;
    v21 = a2[9];
    v23 = a2[6];
    v22 = a2[7];
    *(_OWORD *)(a1 + 128) = a2[8];
    *(_OWORD *)(a1 + 144) = v21;
    *(_OWORD *)(a1 + 96) = v23;
    *(_OWORD *)(a1 + 112) = v22;
  }
  else
  {
    *(_BYTE *)(a1 + 80) = *((_BYTE *)a2 + 80);
    *(_QWORD *)(a1 + 88) = *((_QWORD *)a2 + 11);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_BYTE *)(a1 + 112) = *((_BYTE *)a2 + 112);
    *(_QWORD *)(a1 + 120) = *((_QWORD *)a2 + 15);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 128) = *((_QWORD *)a2 + 16);
    *(_QWORD *)(a1 + 136) = *((_QWORD *)a2 + 17);
    *(_QWORD *)(a1 + 144) = *((_QWORD *)a2 + 18);
    *(_QWORD *)(a1 + 152) = *((_QWORD *)a2 + 19);
  }
  *(_BYTE *)(a1 + 160) = *((_BYTE *)a2 + 160);
  *(_BYTE *)(a1 + 161) = *((_BYTE *)a2 + 161);
  *(_QWORD *)(a1 + 168) = *((_QWORD *)a2 + 21);
  *(_BYTE *)(a1 + 176) = *((_BYTE *)a2 + 176);
  v24 = *((_QWORD *)a2 + 24);
  *(_QWORD *)(a1 + 184) = *((_QWORD *)a2 + 23);
  *(_QWORD *)(a1 + 192) = v24;
  swift_retain();
  swift_release();
  v25 = *((_QWORD *)a2 + 26);
  if (*(_QWORD *)(a1 + 208) != 1)
  {
    if (v25 != 1)
    {
      *(_QWORD *)(a1 + 200) = *((_QWORD *)a2 + 25);
      *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(a1 + 200, &qword_1ED2E3198);
    goto LABEL_20;
  }
  if (v25 == 1)
  {
LABEL_20:
    *(_OWORD *)(a1 + 200) = *(__int128 *)((char *)a2 + 200);
    return a1;
  }
  *(_QWORD *)(a1 + 200) = *((_QWORD *)a2 + 25);
  *(_QWORD *)(a1 + 208) = *((_QWORD *)a2 + 26);
  swift_bridgeObjectRetain();
  return a1;
}

__n128 __swift_memcpy216_8(uint64_t a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __n128 result;
  __int128 v10;
  __int128 v11;

  v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  v3 = *(_OWORD *)(a2 + 32);
  v4 = *(_OWORD *)(a2 + 48);
  v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  v6 = *(_OWORD *)(a2 + 96);
  v7 = *(_OWORD *)(a2 + 112);
  v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v8;
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 112) = v7;
  result = *(__n128 *)(a2 + 160);
  v10 = *(_OWORD *)(a2 + 176);
  v11 = *(_OWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 176) = v10;
  *(_OWORD *)(a1 + 192) = v11;
  *(__n128 *)(a1 + 160) = result;
  return result;
}

uint64_t assignWithTake for PosterArchive.Configuration.TitleStyleConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  _QWORD *v12;
  uint64_t v13;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  v4 = a1 + 24;
  v5 = a2 + 24;
  if (*(_QWORD *)(a1 + 72) == 1)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 72);
  if (v6 == 1)
  {
    sub_1AD3AD280(v4);
LABEL_4:
    v7 = *(_OWORD *)(v5 + 16);
    *(_OWORD *)v4 = *(_OWORD *)v5;
    *(_OWORD *)(v4 + 16) = v7;
    *(_OWORD *)(v4 + 32) = *(_OWORD *)(v5 + 32);
    *(_QWORD *)(v4 + 48) = *(_QWORD *)(v5 + 48);
    goto LABEL_6;
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v6;
  swift_bridgeObjectRelease();
LABEL_6:
  if (*(_QWORD *)(a1 + 88) == 1)
  {
LABEL_9:
    v9 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v9;
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    v10 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 96) = v10;
    goto LABEL_11;
  }
  v8 = *(_QWORD *)(a2 + 88);
  if (v8 == 1)
  {
    sub_1AD3AD2A8(a1 + 80);
    goto LABEL_9;
  }
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 112) = *(_BYTE *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRelease();
  v11 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v11;
LABEL_11:
  *(_BYTE *)(a1 + 160) = *(_BYTE *)(a2 + 160);
  *(_BYTE *)(a1 + 161) = *(_BYTE *)(a2 + 161);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_BYTE *)(a1 + 176) = *(_BYTE *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  swift_release();
  v12 = (_QWORD *)(a2 + 200);
  if (*(_QWORD *)(a1 + 208) != 1)
  {
    v13 = *(_QWORD *)(a2 + 208);
    if (v13 != 1)
    {
      *(_QWORD *)(a1 + 200) = *v12;
      *(_QWORD *)(a1 + 208) = v13;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(a1 + 200, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 200) = *(_OWORD *)v12;
  return a1;
}

uint64_t getEnumTagSinglePayload for PosterArchive.Configuration.TitleStyleConfiguration(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 216))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 184);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PosterArchive.Configuration.TitleStyleConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 216) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 184) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 216) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration;
}

uint64_t storeEnumTagSinglePayload for PosterArchive.Configuration.TitleStyleConfiguration.TitleAlignment(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1AD3AEB0C + 4 * byte_1AD67E68F[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1AD3AEB40 + 4 * byte_1AD67E68A[v4]))();
}

uint64_t sub_1AD3AEB40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3AEB48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3AEB50);
  return result;
}

uint64_t sub_1AD3AEB5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD3AEB64);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1AD3AEB68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3AEB70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration.TitleAlignment()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleAlignment;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration.TitleLayout()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleLayout;
}

uint64_t destroy for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor(uint64_t a1, uint64_t a2)
{
  __int128 v3;
  uint64_t v4;

  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 56))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 48);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 56) = 0;
    if (a2)
      *(_QWORD *)(result + 48) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.Style()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleColor.Style;
}

uint64_t destroy for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v3 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 80))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 80) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle;
}

uint64_t getEnumTagSinglePayload for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties(unsigned __int8 *a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && a1[16])
    return (*(_DWORD *)a1 + 255);
  v3 = *a1;
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleDiscreteColorContentStyleProperties;
}

uint64_t initializeWithCopy for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties(uint64_t a1, uint64_t a2)
{
  __int128 v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  return a1;
}

uint64_t assignWithTake for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties(uint64_t a1, uint64_t a2)
{
  __int128 v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  return a1;
}

uint64_t getEnumTagSinglePayload for Explosion(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Explosion(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.GradientType()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.TitleGradientContentStyleProperties.GradientType;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.StyleType()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.TitleContentStyle.StyleType;
}

uint64_t storeEnumTagSinglePayload for PosterArchive.Configuration.TitleStyleConfiguration.NumberingSystem(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD3AF260 + 4 * byte_1AD67E699[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD3AF294 + 4 * byte_1AD67E694[v4]))();
}

uint64_t sub_1AD3AF294(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3AF29C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3AF2A4);
  return result;
}

uint64_t sub_1AD3AF2B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD3AF2B8);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD3AF2BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3AF2C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.TitleStyleConfiguration.NumberingSystem()
{
  return &type metadata for PosterArchive.Configuration.TitleStyleConfiguration.NumberingSystem;
}

ValueMetadata *type metadata accessor for PosterArchive.Configuration.RenderingConfiguration()
{
  return &type metadata for PosterArchive.Configuration.RenderingConfiguration;
}

uint64_t _s9BlastDoor13PosterArchiveV13ConfigurationV23TitleStyleConfigurationV10TitleColorV5StyleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD3AF344 + 4 * byte_1AD67E6A3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD3AF378 + 4 * byte_1AD67E69E[v4]))();
}

uint64_t sub_1AD3AF378(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3AF380(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3AF388);
  return result;
}

uint64_t sub_1AD3AF394(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD3AF39CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD3AF3A0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3AF3A8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PosterArchive.ProviderBundleIdentifier()
{
  return &type metadata for PosterArchive.ProviderBundleIdentifier;
}

uint64_t destroy for PosterArchive.Provider(uint64_t a1)
{
  unsigned int v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;

  v2 = *(unsigned __int8 *)(a1 + 544);
  if (v2 >= 3)
    v2 = *(_DWORD *)a1 + 3;
  if (v2 == 2)
    return swift_bridgeObjectRelease();
  if (v2 == 1)
  {
    if (*(_QWORD *)(a1 + 56))
    {
      __swift_destroy_boxed_opaque_existential_1(a1 + 32);
      v3 = *(_QWORD *)(a1 + 112);
      v4 = *(_QWORD *)(a1 + 128);
      v5 = *(_QWORD *)(a1 + 144);
      v6 = *(_QWORD *)(a1 + 160);
      v7 = *(_QWORD *)(a1 + 192);
      v8 = *(_QWORD *)(a1 + 208);
      v9 = *(_QWORD *)(a1 + 224);
      if (v3 >> 1 != 0xFFFFFFFF
        || (v5 | (unint64_t)v4) > 1
        || v7 & 0xFFFFFFFFFFFFFEFELL | v6 & 0xFFFFFFFFFFFF00FELL
        || (v9 | v8) >= 2)
      {
        sub_1AD00E8B0(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), v3, *(_QWORD *)(a1 + 120), v4, *(_QWORD *)(a1 + 136), v5, *(_QWORD *)(a1 + 152), v6, *(_QWORD *)(a1 + 168), *(_QWORD *)(a1 + 176), *(_QWORD *)(a1 + 184), v7, *(_QWORD *)(a1 + 200), v8, *(_QWORD *)(a1 + 216), v9, *(_QWORD *)(a1 + 232),
          *(_QWORD *)(a1 + 240),
          *(_QWORD *)(a1 + 248),
          *(_QWORD *)(a1 + 256),
          *(_QWORD *)(a1 + 264),
          *(_QWORD *)(a1 + 272));
      }
    }
    result = sub_1AD00E8B0(*(_QWORD *)(a1 + 280), *(_QWORD *)(a1 + 288), *(_QWORD *)(a1 + 296), *(_QWORD *)(a1 + 304), *(_QWORD *)(a1 + 312), *(_QWORD *)(a1 + 320), *(_QWORD *)(a1 + 328), *(_QWORD *)(a1 + 336), *(_QWORD *)(a1 + 344), *(_QWORD *)(a1 + 352), *(_QWORD *)(a1 + 360), *(_QWORD *)(a1 + 368), *(_QWORD *)(a1 + 376), *(_QWORD *)(a1 + 384), *(_QWORD *)(a1 + 392), *(_QWORD *)(a1 + 400), *(_QWORD *)(a1 + 408), *(_QWORD *)(a1 + 416), *(_QWORD *)(a1 + 424),
               *(_QWORD *)(a1 + 432),
               *(_QWORD *)(a1 + 440),
               *(_QWORD *)(a1 + 448),
               *(_QWORD *)(a1 + 456),
               *(_QWORD *)(a1 + 464));
    if (*(_QWORD *)(a1 + 472))
    {
      swift_release();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    return result;
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 72) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  result = *(_QWORD *)(a1 + 536);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for PosterArchive.Provider(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  __int128 v5;
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  uint64_t v41;
  _OWORD *v42;
  uint64_t v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;

  v4 = *(unsigned __int8 *)(a2 + 544);
  if (v4 >= 3)
    v4 = *(_DWORD *)a2 + 3;
  if (v4 == 2)
  {
    v20 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v20;
    v21 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v21;
    v22 = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = v22;
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_BYTE *)(a1 + 544) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v4 == 1)
  {
    v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    v6 = (_OWORD *)(a1 + 32);
    v7 = (_OWORD *)(a2 + 32);
    v8 = *(_QWORD *)(a2 + 56);
    if (v8)
    {
      v9 = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 56) = v8;
      *(_QWORD *)(a1 + 64) = v9;
      (**(void (***)(_OWORD *, _OWORD *))(v8 - 8))(v6, v7);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      v10 = *(_QWORD *)(a2 + 112);
      v11 = *(_QWORD *)(a2 + 128);
      v12 = *(_QWORD *)(a2 + 144);
      v13 = *(_QWORD *)(a2 + 224);
      if (v10 >> 1 != 0xFFFFFFFF
        || (v12 | (unint64_t)v11) > 1
        || *(_QWORD *)(a2 + 192) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a2 + 160) & 0xFFFFFFFFFFFF00FELL
        || (v13 | *(_QWORD *)(a2 + 208)) >= 2)
      {
        v51 = *(_QWORD *)(a2 + 96);
        v52 = *(_QWORD *)(a2 + 120);
        v73 = *(_QWORD *)(a2 + 152);
        v77 = *(_QWORD *)(a2 + 168);
        v83 = *(_QWORD *)(a2 + 176);
        v85 = *(_QWORD *)(a2 + 184);
        v87 = *(_QWORD *)(a2 + 200);
        v89 = *(_QWORD *)(a2 + 216);
        v91 = *(_QWORD *)(a2 + 232);
        v93 = *(_QWORD *)(a2 + 240);
        v95 = *(_QWORD *)(a2 + 248);
        v97 = *(_QWORD *)(a2 + 256);
        v99 = *(_QWORD *)(a2 + 264);
        v101 = *(_QWORD *)(a2 + 272);
        v79 = *(_QWORD *)(a2 + 192);
        v81 = *(_QWORD *)(a2 + 208);
        v53 = *(_QWORD *)(a2 + 88);
        v71 = *(_QWORD *)(a2 + 160);
        v54 = *(_QWORD *)(a2 + 104);
        v75 = *(_QWORD *)(a2 + 224);
        v55 = *(_QWORD *)(a2 + 136);
        sub_1AD00FEAC(v53, v51, v54, v10, v52, v11, v55, v12, v73, v71, v77, v83, v85, v79, v87, v81, v89, v13, v91,
          v93,
          v95,
          v97,
          v99,
          v101);
        *(_QWORD *)(a1 + 88) = v53;
        *(_QWORD *)(a1 + 96) = v51;
        *(_QWORD *)(a1 + 104) = v54;
        *(_QWORD *)(a1 + 112) = v10;
        *(_QWORD *)(a1 + 120) = v52;
        *(_QWORD *)(a1 + 128) = v11;
        *(_QWORD *)(a1 + 136) = v55;
        *(_QWORD *)(a1 + 144) = v12;
        *(_QWORD *)(a1 + 152) = v73;
        *(_QWORD *)(a1 + 160) = v71;
        *(_QWORD *)(a1 + 168) = v77;
        *(_QWORD *)(a1 + 176) = v83;
        *(_QWORD *)(a1 + 184) = v85;
        *(_QWORD *)(a1 + 192) = v79;
        *(_QWORD *)(a1 + 200) = v87;
        *(_QWORD *)(a1 + 208) = v81;
        *(_QWORD *)(a1 + 216) = v89;
        *(_QWORD *)(a1 + 224) = v75;
        *(_QWORD *)(a1 + 232) = v91;
        *(_QWORD *)(a1 + 240) = v93;
        *(_QWORD *)(a1 + 248) = v95;
        *(_QWORD *)(a1 + 256) = v97;
        *(_QWORD *)(a1 + 264) = v99;
        *(_QWORD *)(a1 + 272) = v101;
      }
      else
      {
        v14 = *(_OWORD *)(a2 + 232);
        *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
        *(_OWORD *)(a1 + 232) = v14;
        v15 = *(_OWORD *)(a2 + 264);
        *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
        *(_OWORD *)(a1 + 264) = v15;
        v16 = *(_OWORD *)(a2 + 168);
        *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
        *(_OWORD *)(a1 + 168) = v16;
        v17 = *(_OWORD *)(a2 + 200);
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
        *(_OWORD *)(a1 + 200) = v17;
        v18 = *(_OWORD *)(a2 + 104);
        *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
        *(_OWORD *)(a1 + 104) = v18;
        v19 = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = v19;
      }
    }
    else
    {
      v44 = *(_OWORD *)(a2 + 240);
      *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
      *(_OWORD *)(a1 + 240) = v44;
      *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      v45 = *(_OWORD *)(a2 + 176);
      *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
      *(_OWORD *)(a1 + 176) = v45;
      v46 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v46;
      v47 = *(_OWORD *)(a2 + 112);
      *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
      *(_OWORD *)(a1 + 112) = v47;
      v48 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v48;
      v49 = *(_OWORD *)(a2 + 48);
      *v6 = *v7;
      *(_OWORD *)(a1 + 48) = v49;
      v50 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v50;
    }
    v56 = *(_QWORD *)(a2 + 320);
    v57 = *(_QWORD *)(a2 + 328);
    v72 = *(_QWORD *)(a2 + 344);
    v74 = *(_QWORD *)(a2 + 352);
    v76 = *(_QWORD *)(a2 + 360);
    v78 = *(_QWORD *)(a2 + 368);
    v80 = *(_QWORD *)(a2 + 376);
    v82 = *(_QWORD *)(a2 + 384);
    v84 = *(_QWORD *)(a2 + 392);
    v86 = *(_QWORD *)(a2 + 400);
    v88 = *(_QWORD *)(a2 + 408);
    v90 = *(_QWORD *)(a2 + 416);
    v92 = *(_QWORD *)(a2 + 424);
    v94 = *(_QWORD *)(a2 + 432);
    v96 = *(_QWORD *)(a2 + 440);
    v98 = *(_QWORD *)(a2 + 448);
    v100 = *(_QWORD *)(a2 + 456);
    v102 = *(_QWORD *)(a2 + 464);
    v58 = *(_QWORD *)(a2 + 280);
    v59 = *(_QWORD *)(a2 + 288);
    v60 = *(_QWORD *)(a2 + 296);
    v61 = *(_QWORD *)(a2 + 304);
    v62 = *(_QWORD *)(a2 + 312);
    v63 = *(_QWORD *)(a2 + 336);
    sub_1AD00FEAC(v58, v59, v60, v61, v62, v56, v57, v63, v72, v74, v76, v78, v80, v82, v84, v86, v88, v90, v92,
      v94,
      v96,
      v98,
      v100,
      v102);
    *(_QWORD *)(a1 + 280) = v58;
    *(_QWORD *)(a1 + 288) = v59;
    *(_QWORD *)(a1 + 296) = v60;
    *(_QWORD *)(a1 + 304) = v61;
    *(_QWORD *)(a1 + 312) = v62;
    *(_QWORD *)(a1 + 320) = v56;
    *(_QWORD *)(a1 + 328) = v57;
    *(_QWORD *)(a1 + 336) = v63;
    *(_QWORD *)(a1 + 344) = v72;
    *(_QWORD *)(a1 + 352) = v74;
    *(_QWORD *)(a1 + 360) = v76;
    *(_QWORD *)(a1 + 368) = v78;
    *(_QWORD *)(a1 + 376) = v80;
    *(_QWORD *)(a1 + 384) = v82;
    *(_QWORD *)(a1 + 392) = v84;
    *(_QWORD *)(a1 + 400) = v86;
    *(_QWORD *)(a1 + 408) = v88;
    *(_QWORD *)(a1 + 416) = v90;
    *(_QWORD *)(a1 + 424) = v92;
    *(_QWORD *)(a1 + 432) = v94;
    *(_QWORD *)(a1 + 440) = v96;
    *(_QWORD *)(a1 + 448) = v98;
    *(_QWORD *)(a1 + 456) = v100;
    *(_QWORD *)(a1 + 464) = v102;
    v64 = *(_QWORD *)(a2 + 472);
    if (v64)
    {
      v65 = *(_QWORD *)(a2 + 480);
      v66 = *(_QWORD *)(a2 + 488);
      *(_QWORD *)(a1 + 472) = v64;
      *(_QWORD *)(a1 + 480) = v65;
      v68 = *(_QWORD *)(a2 + 496);
      v67 = *(_QWORD *)(a2 + 504);
      *(_QWORD *)(a1 + 488) = v66;
      *(_QWORD *)(a1 + 496) = v68;
      *(_QWORD *)(a1 + 504) = v67;
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v69 = *(_OWORD *)(a2 + 488);
      *(_OWORD *)(a1 + 472) = *(_OWORD *)(a2 + 472);
      *(_OWORD *)(a1 + 488) = v69;
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
    }
    *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
    *(_BYTE *)(a1 + 544) = 1;
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v23 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v23;
    v24 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = v24;
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v25 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v25;
    v26 = (_OWORD *)(a2 + 64);
    v27 = *(_QWORD *)(a2 + 72);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v27 == 1)
    {
      *(_OWORD *)(a1 + 64) = *v26;
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)v26;
      *(_QWORD *)(a1 + 72) = v27;
      swift_bridgeObjectRetain();
    }
    v28 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v28;
    v29 = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = v29;
    v30 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = v30;
    v31 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v31;
    *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
    *(_WORD *)(a1 + 272) = *(_WORD *)(a2 + 272);
    v32 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v32;
    v33 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v33;
    v34 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v34;
    *(_WORD *)(a1 + 274) = *(_WORD *)(a2 + 274);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    v35 = *(_OWORD *)(a2 + 472);
    *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
    *(_OWORD *)(a1 + 472) = v35;
    *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
    *(_WORD *)(a1 + 504) = *(_WORD *)(a2 + 504);
    v36 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v36;
    v37 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v37;
    v38 = *(_OWORD *)(a2 + 344);
    *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
    *(_OWORD *)(a1 + 344) = v38;
    v39 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v39;
    v40 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v40;
    *(_BYTE *)(a1 + 506) = *(_BYTE *)(a2 + 506);
    v41 = *(_QWORD *)(a2 + 520);
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 520) = v41;
    v42 = (_OWORD *)(a2 + 528);
    v43 = *(_QWORD *)(a2 + 536);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v43 == 1)
    {
      *(_OWORD *)(a1 + 528) = *v42;
    }
    else
    {
      *(_QWORD *)(a1 + 528) = *(_QWORD *)v42;
      *(_QWORD *)(a1 + 536) = v43;
      swift_bridgeObjectRetain();
    }
    *(_BYTE *)(a1 + 544) = 0;
  }
  return a1;
}

uint64_t assignWithCopy for PosterArchive.Provider(uint64_t a1, uint64_t a2)
{
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  __int128 v13;
  _OWORD *v14;
  __int128 *v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  __int128 v83;
  __int128 v84;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  unint64_t v117;

  if (a1 == a2)
    return a1;
  v4 = *(unsigned __int8 *)(a1 + 544);
  if (v4 >= 3)
    v4 = *(_DWORD *)a1 + 3;
  if (v4 != 2)
  {
    if (v4 == 1)
    {
      if (*(_QWORD *)(a1 + 56))
      {
        __swift_destroy_boxed_opaque_existential_1(a1 + 32);
        v5 = *(_QWORD *)(a1 + 112);
        v6 = *(_QWORD *)(a1 + 128);
        v7 = *(_QWORD *)(a1 + 144);
        v8 = *(_QWORD *)(a1 + 160);
        v9 = *(_QWORD *)(a1 + 192);
        v10 = *(_QWORD *)(a1 + 208);
        v11 = *(_QWORD *)(a1 + 224);
        if (v5 >> 1 != 0xFFFFFFFF
          || (v7 | (unint64_t)v6) > 1
          || v9 & 0xFFFFFFFFFFFFFEFELL | v8 & 0xFFFFFFFFFFFF00FELL
          || (v11 | v10) >= 2)
        {
          sub_1AD00E8B0(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), v5, *(_QWORD *)(a1 + 120), v6, *(_QWORD *)(a1 + 136), v7, *(_QWORD *)(a1 + 152), v8, *(_QWORD *)(a1 + 168), *(_QWORD *)(a1 + 176), *(_QWORD *)(a1 + 184), v9, *(_QWORD *)(a1 + 200), v10, *(_QWORD *)(a1 + 216), v11, *(_QWORD *)(a1 + 232),
            *(_QWORD *)(a1 + 240),
            *(_QWORD *)(a1 + 248),
            *(_QWORD *)(a1 + 256),
            *(_QWORD *)(a1 + 264),
            *(_QWORD *)(a1 + 272));
        }
      }
      sub_1AD00E8B0(*(_QWORD *)(a1 + 280), *(_QWORD *)(a1 + 288), *(_QWORD *)(a1 + 296), *(_QWORD *)(a1 + 304), *(_QWORD *)(a1 + 312), *(_QWORD *)(a1 + 320), *(_QWORD *)(a1 + 328), *(_QWORD *)(a1 + 336), *(_QWORD *)(a1 + 344), *(_QWORD *)(a1 + 352), *(_QWORD *)(a1 + 360), *(_QWORD *)(a1 + 368), *(_QWORD *)(a1 + 376), *(_QWORD *)(a1 + 384), *(_QWORD *)(a1 + 392), *(_QWORD *)(a1 + 400), *(_QWORD *)(a1 + 408), *(_QWORD *)(a1 + 416), *(_QWORD *)(a1 + 424),
        *(_QWORD *)(a1 + 432),
        *(_QWORD *)(a1 + 440),
        *(_QWORD *)(a1 + 448),
        *(_QWORD *)(a1 + 456),
        *(_QWORD *)(a1 + 464));
      if (*(_QWORD *)(a1 + 472))
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      goto LABEL_19;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(a1 + 72) != 1)
      swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (*(_QWORD *)(a1 + 536) == 1)
      goto LABEL_19;
  }
  swift_bridgeObjectRelease();
LABEL_19:
  v12 = *(unsigned __int8 *)(a2 + 544);
  if (v12 >= 3)
    v12 = *(_DWORD *)a2 + 3;
  if (v12 == 2)
  {
    v31 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v31;
    v32 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v32;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
    *(_BYTE *)(a1 + 544) = 2;
    swift_bridgeObjectRetain();
  }
  else if (v12 == 1)
  {
    v13 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v13;
    v14 = (_OWORD *)(a1 + 32);
    v15 = (__int128 *)(a2 + 32);
    v16 = *(_QWORD *)(a2 + 56);
    if (v16)
    {
      *(_QWORD *)(a1 + 56) = v16;
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      (**(void (***)(_OWORD *, __int128 *))(v16 - 8))(v14, v15);
      v17 = *(_QWORD *)(a2 + 72);
      *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
      *(_QWORD *)(a1 + 72) = v17;
      v18 = *(_QWORD *)(a2 + 112);
      v19 = *(_QWORD *)(a2 + 128);
      v20 = *(_QWORD *)(a2 + 144);
      v21 = *(_QWORD *)(a2 + 208);
      if (v18 >> 1 != 0xFFFFFFFF
        || (v20 | (unint64_t)v19) > 1
        || *(_QWORD *)(a2 + 192) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a2 + 160) & 0xFFFFFFFFFFFF00FELL
        || (*(_QWORD *)(a2 + 224) | (unint64_t)v21) >= 2)
      {
        v68 = *(_QWORD *)(a2 + 88);
        v69 = *(_QWORD *)(a2 + 136);
        v88 = *(_QWORD *)(a2 + 152);
        v94 = *(_QWORD *)(a2 + 168);
        v96 = *(_QWORD *)(a2 + 176);
        v100 = *(_QWORD *)(a2 + 184);
        v102 = *(_QWORD *)(a2 + 200);
        v104 = *(_QWORD *)(a2 + 216);
        v106 = *(_QWORD *)(a2 + 232);
        v108 = *(_QWORD *)(a2 + 240);
        v110 = *(_QWORD *)(a2 + 248);
        v112 = *(_QWORD *)(a2 + 256);
        v114 = *(_QWORD *)(a2 + 264);
        v116 = *(_QWORD *)(a2 + 272);
        v92 = *(_QWORD *)(a2 + 192);
        v70 = *(_QWORD *)(a2 + 96);
        v98 = *(_QWORD *)(a2 + 224);
        v86 = *(_QWORD *)(a2 + 160);
        v71 = *(_QWORD *)(a2 + 104);
        v72 = *(_QWORD *)(a2 + 120);
        v90 = *(_QWORD *)(a2 + 208);
        sub_1AD00FEAC(v68, v70, v71, v18, v72, v19, v69, v20, v88, v86, v94, v96, v100, v92, v102, v21, v104, v98, v106,
          v108,
          v110,
          v112,
          v114,
          v116);
        *(_QWORD *)(a1 + 88) = v68;
        *(_QWORD *)(a1 + 96) = v70;
        *(_QWORD *)(a1 + 104) = v71;
        *(_QWORD *)(a1 + 112) = v18;
        *(_QWORD *)(a1 + 120) = v72;
        *(_QWORD *)(a1 + 128) = v19;
        *(_QWORD *)(a1 + 136) = v69;
        *(_QWORD *)(a1 + 144) = v20;
        *(_QWORD *)(a1 + 152) = v88;
        *(_QWORD *)(a1 + 160) = v86;
        *(_QWORD *)(a1 + 168) = v94;
        *(_QWORD *)(a1 + 176) = v96;
        *(_QWORD *)(a1 + 184) = v100;
        *(_QWORD *)(a1 + 192) = v92;
        *(_QWORD *)(a1 + 200) = v102;
        *(_QWORD *)(a1 + 208) = v90;
        *(_QWORD *)(a1 + 216) = v104;
        *(_QWORD *)(a1 + 224) = v98;
        *(_QWORD *)(a1 + 232) = v106;
        *(_QWORD *)(a1 + 240) = v108;
        *(_QWORD *)(a1 + 248) = v110;
        *(_QWORD *)(a1 + 256) = v112;
        *(_QWORD *)(a1 + 264) = v114;
        *(_QWORD *)(a1 + 272) = v116;
      }
      else
      {
        v22 = *(_OWORD *)(a2 + 88);
        v23 = *(_OWORD *)(a2 + 104);
        v24 = *(_OWORD *)(a2 + 136);
        *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
        *(_OWORD *)(a1 + 136) = v24;
        *(_OWORD *)(a1 + 88) = v22;
        *(_OWORD *)(a1 + 104) = v23;
        v25 = *(_OWORD *)(a2 + 152);
        v26 = *(_OWORD *)(a2 + 168);
        v27 = *(_OWORD *)(a2 + 200);
        *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
        *(_OWORD *)(a1 + 200) = v27;
        *(_OWORD *)(a1 + 152) = v25;
        *(_OWORD *)(a1 + 168) = v26;
        v28 = *(_OWORD *)(a2 + 216);
        v29 = *(_OWORD *)(a2 + 232);
        v30 = *(_OWORD *)(a2 + 264);
        *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
        *(_OWORD *)(a1 + 264) = v30;
        *(_OWORD *)(a1 + 216) = v28;
        *(_OWORD *)(a1 + 232) = v29;
      }
    }
    else
    {
      v56 = *v15;
      v57 = *(_OWORD *)(a2 + 48);
      v58 = *(_OWORD *)(a2 + 80);
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      *(_OWORD *)(a1 + 80) = v58;
      *v14 = v56;
      *(_OWORD *)(a1 + 48) = v57;
      v59 = *(_OWORD *)(a2 + 96);
      v60 = *(_OWORD *)(a2 + 112);
      v61 = *(_OWORD *)(a2 + 144);
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      *(_OWORD *)(a1 + 144) = v61;
      *(_OWORD *)(a1 + 96) = v59;
      *(_OWORD *)(a1 + 112) = v60;
      v62 = *(_OWORD *)(a2 + 160);
      v63 = *(_OWORD *)(a2 + 176);
      v64 = *(_OWORD *)(a2 + 208);
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      *(_OWORD *)(a1 + 208) = v64;
      *(_OWORD *)(a1 + 160) = v62;
      *(_OWORD *)(a1 + 176) = v63;
      v65 = *(_OWORD *)(a2 + 224);
      v66 = *(_OWORD *)(a2 + 240);
      v67 = *(_OWORD *)(a2 + 256);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_OWORD *)(a1 + 240) = v66;
      *(_OWORD *)(a1 + 256) = v67;
      *(_OWORD *)(a1 + 224) = v65;
    }
    v73 = *(_QWORD *)(a2 + 320);
    v74 = *(_QWORD *)(a2 + 328);
    v87 = *(_QWORD *)(a2 + 344);
    v89 = *(_QWORD *)(a2 + 352);
    v91 = *(_QWORD *)(a2 + 360);
    v93 = *(_QWORD *)(a2 + 368);
    v95 = *(_QWORD *)(a2 + 376);
    v97 = *(_QWORD *)(a2 + 384);
    v99 = *(_QWORD *)(a2 + 392);
    v101 = *(_QWORD *)(a2 + 400);
    v103 = *(_QWORD *)(a2 + 408);
    v105 = *(_QWORD *)(a2 + 416);
    v107 = *(_QWORD *)(a2 + 424);
    v109 = *(_QWORD *)(a2 + 432);
    v111 = *(_QWORD *)(a2 + 440);
    v113 = *(_QWORD *)(a2 + 448);
    v115 = *(_QWORD *)(a2 + 456);
    v117 = *(_QWORD *)(a2 + 464);
    v75 = *(_QWORD *)(a2 + 280);
    v76 = *(_QWORD *)(a2 + 288);
    v77 = *(_QWORD *)(a2 + 296);
    v78 = *(_QWORD *)(a2 + 304);
    v79 = *(_QWORD *)(a2 + 312);
    v80 = *(_QWORD *)(a2 + 336);
    sub_1AD00FEAC(v75, v76, v77, v78, v79, v73, v74, v80, v87, v89, v91, v93, v95, v97, v99, v101, v103, v105, v107,
      v109,
      v111,
      v113,
      v115,
      v117);
    *(_QWORD *)(a1 + 280) = v75;
    *(_QWORD *)(a1 + 288) = v76;
    *(_QWORD *)(a1 + 296) = v77;
    *(_QWORD *)(a1 + 304) = v78;
    *(_QWORD *)(a1 + 312) = v79;
    *(_QWORD *)(a1 + 320) = v73;
    *(_QWORD *)(a1 + 328) = v74;
    *(_QWORD *)(a1 + 336) = v80;
    *(_QWORD *)(a1 + 344) = v87;
    *(_QWORD *)(a1 + 352) = v89;
    *(_QWORD *)(a1 + 360) = v91;
    *(_QWORD *)(a1 + 368) = v93;
    *(_QWORD *)(a1 + 376) = v95;
    *(_QWORD *)(a1 + 384) = v97;
    *(_QWORD *)(a1 + 392) = v99;
    *(_QWORD *)(a1 + 400) = v101;
    *(_QWORD *)(a1 + 408) = v103;
    *(_QWORD *)(a1 + 416) = v105;
    *(_QWORD *)(a1 + 424) = v107;
    *(_QWORD *)(a1 + 432) = v109;
    *(_QWORD *)(a1 + 440) = v111;
    *(_QWORD *)(a1 + 448) = v113;
    *(_QWORD *)(a1 + 456) = v115;
    *(_QWORD *)(a1 + 464) = v117;
    v81 = *(_QWORD *)(a2 + 472);
    if (v81)
    {
      v82 = *(_QWORD *)(a2 + 480);
      *(_QWORD *)(a1 + 472) = v81;
      *(_QWORD *)(a1 + 480) = v82;
      *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
      *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
    }
    else
    {
      v83 = *(_OWORD *)(a2 + 472);
      v84 = *(_OWORD *)(a2 + 488);
      *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
      *(_OWORD *)(a1 + 472) = v83;
      *(_OWORD *)(a1 + 488) = v84;
    }
    *(_BYTE *)(a1 + 512) = *(_BYTE *)(a2 + 512);
    *(_BYTE *)(a1 + 544) = 1;
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    v33 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
    *(_QWORD *)(a1 + 16) = v33;
    *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
    *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
    v34 = *(_QWORD *)(a2 + 56);
    *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 56) = v34;
    v35 = *(_QWORD *)(a2 + 72);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v35 == 1)
    {
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    }
    else
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
    }
    v36 = *(_QWORD *)(a2 + 88);
    *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 88) = v36;
    *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
    *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    v37 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v37;
    v38 = *(_OWORD *)(a2 + 160);
    v39 = *(_OWORD *)(a2 + 176);
    v40 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v40;
    *(_OWORD *)(a1 + 160) = v38;
    *(_OWORD *)(a1 + 176) = v39;
    v41 = *(_OWORD *)(a2 + 224);
    v42 = *(_OWORD *)(a2 + 240);
    v43 = *(_OWORD *)(a2 + 256);
    *(_WORD *)(a1 + 272) = *(_WORD *)(a2 + 272);
    *(_OWORD *)(a1 + 240) = v42;
    *(_OWORD *)(a1 + 256) = v43;
    *(_OWORD *)(a1 + 224) = v41;
    *(_BYTE *)(a1 + 274) = *(_BYTE *)(a2 + 274);
    *(_BYTE *)(a1 + 275) = *(_BYTE *)(a2 + 275);
    *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
    *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
    v44 = *(_OWORD *)(a2 + 312);
    *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
    *(_OWORD *)(a1 + 312) = v44;
    v45 = *(_OWORD *)(a2 + 328);
    v46 = *(_OWORD *)(a2 + 344);
    v47 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v47;
    *(_OWORD *)(a1 + 328) = v45;
    *(_OWORD *)(a1 + 344) = v46;
    v48 = *(_OWORD *)(a2 + 392);
    v49 = *(_OWORD *)(a2 + 408);
    v50 = *(_OWORD *)(a2 + 440);
    *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
    *(_OWORD *)(a1 + 440) = v50;
    *(_OWORD *)(a1 + 392) = v48;
    *(_OWORD *)(a1 + 408) = v49;
    v51 = *(_OWORD *)(a2 + 456);
    v52 = *(_OWORD *)(a2 + 472);
    v53 = *(_OWORD *)(a2 + 488);
    *(_WORD *)(a1 + 504) = *(_WORD *)(a2 + 504);
    *(_OWORD *)(a1 + 472) = v52;
    *(_OWORD *)(a1 + 488) = v53;
    *(_OWORD *)(a1 + 456) = v51;
    *(_BYTE *)(a1 + 506) = *(_BYTE *)(a2 + 506);
    v54 = *(_QWORD *)(a2 + 520);
    *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 520) = v54;
    v55 = *(_QWORD *)(a2 + 536);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v55 == 1)
    {
      *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    }
    else
    {
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      swift_bridgeObjectRetain();
    }
    *(_BYTE *)(a1 + 544) = 0;
  }
  return a1;
}

void *__swift_memcpy545_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x221uLL);
}

unsigned __int8 *assignWithTake for PosterArchive.Provider(unsigned __int8 *a1, unsigned __int8 *a2)
{
  unsigned int v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unsigned int v12;
  char v13;
  __int128 v14;
  __int128 v15;

  if (a1 == a2)
    return a1;
  v4 = a1[544];
  if (v4 >= 3)
    v4 = *(_DWORD *)a1 + 3;
  if (v4 != 2)
  {
    if (v4 == 1)
    {
      if (*((_QWORD *)a1 + 7))
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 32));
        v5 = *((_QWORD *)a1 + 14);
        v6 = *((_QWORD *)a1 + 16);
        v7 = *((_QWORD *)a1 + 18);
        v8 = *((_QWORD *)a1 + 20);
        v9 = *((_QWORD *)a1 + 24);
        v10 = *((_QWORD *)a1 + 26);
        v11 = *((_QWORD *)a1 + 28);
        if (v5 >> 1 != 0xFFFFFFFF
          || (v7 | (unint64_t)v6) > 1
          || v9 & 0xFFFFFFFFFFFFFEFELL | v8 & 0xFFFFFFFFFFFF00FELL
          || (v11 | v10) >= 2)
        {
          sub_1AD00E8B0(*((_QWORD *)a1 + 11), *((_QWORD *)a1 + 12), *((_QWORD *)a1 + 13), v5, *((_QWORD *)a1 + 15), v6, *((_QWORD *)a1 + 17), v7, *((_QWORD *)a1 + 19), v8, *((_QWORD *)a1 + 21), *((_QWORD *)a1 + 22), *((_QWORD *)a1 + 23), v9, *((_QWORD *)a1 + 25), v10, *((_QWORD *)a1 + 27), v11, *((_QWORD *)a1 + 29),
            *((_QWORD *)a1 + 30),
            *((_QWORD *)a1 + 31),
            *((_QWORD *)a1 + 32),
            *((_QWORD *)a1 + 33),
            *((_QWORD *)a1 + 34));
        }
      }
      sub_1AD00E8B0(*((_QWORD *)a1 + 35), *((_QWORD *)a1 + 36), *((_QWORD *)a1 + 37), *((_QWORD *)a1 + 38), *((_QWORD *)a1 + 39), *((_QWORD *)a1 + 40), *((_QWORD *)a1 + 41), *((_QWORD *)a1 + 42), *((_QWORD *)a1 + 43), *((_QWORD *)a1 + 44), *((_QWORD *)a1 + 45), *((_QWORD *)a1 + 46), *((_QWORD *)a1 + 47), *((_QWORD *)a1 + 48), *((_QWORD *)a1 + 49), *((_QWORD *)a1 + 50), *((_QWORD *)a1 + 51), *((_QWORD *)a1 + 52), *((_QWORD *)a1 + 53),
        *((_QWORD *)a1 + 54),
        *((_QWORD *)a1 + 55),
        *((_QWORD *)a1 + 56),
        *((_QWORD *)a1 + 57),
        *((_QWORD *)a1 + 58));
      if (*((_QWORD *)a1 + 59))
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
      }
      goto LABEL_19;
    }
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    if (*((_QWORD *)a1 + 9) != 1)
      swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    if (*((_QWORD *)a1 + 67) == 1)
      goto LABEL_19;
  }
  swift_bridgeObjectRelease();
LABEL_19:
  v12 = a2[544];
  if (v12 >= 3)
    v12 = *(_DWORD *)a2 + 3;
  if (v12 == 2)
  {
    v14 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v14;
    *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
    a1[80] = a2[80];
    v15 = *((_OWORD *)a2 + 1);
    v13 = 2;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *((_OWORD *)a1 + 1) = v15;
  }
  else if (v12 == 1)
  {
    memcpy(a1, a2, 0x201uLL);
    v13 = 1;
  }
  else
  {
    memcpy(a1, a2, 0x220uLL);
    v13 = 0;
  }
  a1[544] = v13;
  return a1;
}

uint64_t getEnumTagSinglePayload for PosterArchive.Provider(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 545))
    return (*(_DWORD *)a1 + 254);
  v3 = *(unsigned __int8 *)(a1 + 544);
  if (v3 >= 3)
    return (v3 ^ 0xFF) + 1;
  else
    return 0;
}

void storeEnumTagSinglePayload for PosterArchive.Provider(unsigned int *a1, unsigned int a2, unsigned int a3)
{
  unsigned int v5;

  if (a2 > 0xFD)
  {
    v5 = a2 - 254;
    bzero(a1, 0x221uLL);
    *a1 = v5;
    if (a3 >= 0xFE)
      *((_BYTE *)a1 + 545) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *((_BYTE *)a1 + 545) = 0;
    if (a2)
      *((_BYTE *)a1 + 544) = -(char)a2;
  }
}

uint64_t sub_1AD3B0674(uint64_t a1)
{
  uint64_t result;

  result = *(unsigned __int8 *)(a1 + 544);
  if (result >= 3)
    return (*(_DWORD *)a1 + 3);
  return result;
}

void sub_1AD3B0690(unsigned int *a1, unsigned int a2)
{
  unsigned int v3;

  if (a2 > 2)
  {
    v3 = a2 - 3;
    bzero(a1, 0x220uLL);
    *a1 = v3;
    LOBYTE(a2) = 3;
  }
  *((_BYTE *)a1 + 544) = a2;
}

ValueMetadata *type metadata accessor for PosterArchive.Provider()
{
  return &type metadata for PosterArchive.Provider;
}

uint64_t destroy for PhotosPoster(uint64_t a1)
{
  uint64_t result;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 72) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  result = *(_QWORD *)(a1 + 536);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for PhotosPoster(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  _OWORD *v23;
  uint64_t v24;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  v7 = (_OWORD *)(a2 + 64);
  v8 = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v8 == 1)
  {
    *(_OWORD *)(a1 + 64) = *v7;
  }
  else
  {
    *(_QWORD *)(a1 + 64) = *(_QWORD *)v7;
    *(_QWORD *)(a1 + 72) = v8;
    swift_bridgeObjectRetain();
  }
  v9 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v9;
  v10 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v10;
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  v12 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v12;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_WORD *)(a1 + 272) = *(_WORD *)(a2 + 272);
  v13 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v13;
  v14 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v14;
  v15 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v15;
  *(_WORD *)(a1 + 274) = *(_WORD *)(a2 + 274);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = *(_BYTE *)(a2 + 288);
  v16 = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 472) = v16;
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  *(_WORD *)(a1 + 504) = *(_WORD *)(a2 + 504);
  v17 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v17;
  v18 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v18;
  v19 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v19;
  v20 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v20;
  v21 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v21;
  *(_BYTE *)(a1 + 506) = *(_BYTE *)(a2 + 506);
  v22 = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = v22;
  v23 = (_OWORD *)(a2 + 528);
  v24 = *(_QWORD *)(a2 + 536);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v24 == 1)
  {
    *(_OWORD *)(a1 + 528) = *v23;
  }
  else
  {
    *(_QWORD *)(a1 + 528) = *(_QWORD *)v23;
    *(_QWORD *)(a1 + 536) = v24;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for PhotosPoster(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;

  v4 = (_BYTE *)(a2 + 274);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v5 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v5;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v6 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) == 1)
  {
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == 1)
  {
    sub_1AD009758(a1 + 64, &qword_1ED2E3198);
LABEL_6:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v8 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v8;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_BYTE *)(a1 + 273) = *(_BYTE *)(a2 + 273);
  *(_BYTE *)(a1 + 274) = *v4;
  *(_BYTE *)(a1 + 275) = v4[1];
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = v4[14];
  v9 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v9;
  v10 = *(_OWORD *)(a2 + 328);
  v11 = *(_OWORD *)(a2 + 344);
  v12 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v12;
  *(_OWORD *)(a1 + 328) = v10;
  *(_OWORD *)(a1 + 344) = v11;
  v13 = *(_OWORD *)(a2 + 392);
  v14 = *(_OWORD *)(a2 + 408);
  v15 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v15;
  *(_OWORD *)(a1 + 392) = v13;
  *(_OWORD *)(a1 + 408) = v14;
  v16 = *(_OWORD *)(a2 + 456);
  v17 = *(_OWORD *)(a2 + 472);
  v18 = *(_OWORD *)(a2 + 488);
  *(_WORD *)(a1 + 504) = *(_WORD *)(a2 + 504);
  *(_OWORD *)(a1 + 472) = v17;
  *(_OWORD *)(a1 + 488) = v18;
  *(_OWORD *)(a1 + 456) = v16;
  *(_BYTE *)(a1 + 506) = *(_BYTE *)(a2 + 506);
  v19 = *(_QWORD *)(a2 + 520);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  *(_QWORD *)(a1 + 520) = v19;
  swift_retain();
  swift_release();
  v20 = *(_QWORD *)(a2 + 536);
  if (*(_QWORD *)(a1 + 536) != 1)
  {
    if (v20 != 1)
    {
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(a1 + 528, &qword_1ED2E3198);
    goto LABEL_13;
  }
  if (v20 == 1)
  {
LABEL_13:
    *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
    return a1;
  }
  *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
  *(_QWORD *)(a1 + 536) = *(_QWORD *)(a2 + 536);
  swift_bridgeObjectRetain();
  return a1;
}

void *__swift_memcpy544_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x220uLL);
}

uint64_t assignWithTake for PhotosPoster(uint64_t a1, uint64_t a2)
{
  _BYTE *v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  _QWORD *v20;
  uint64_t v21;

  v4 = (_BYTE *)(a2 + 274);
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  v6 = (_OWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 72) == 1)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 72);
  if (v7 == 1)
  {
    sub_1AD009758(a1 + 64, &qword_1ED2E3198);
LABEL_4:
    *(_OWORD *)(a1 + 64) = *v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 64) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  v8 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v10;
  v11 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v11;
  v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  v13 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v13;
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_BYTE *)(a1 + 272) = *(_BYTE *)(a2 + 272);
  *(_BYTE *)(a1 + 273) = *(_BYTE *)(a2 + 273);
  *(_BYTE *)(a1 + 274) = *v4;
  *(_BYTE *)(a1 + 275) = v4[1];
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_BYTE *)(a1 + 288) = v4[14];
  v14 = *(_OWORD *)(a2 + 472);
  *(_OWORD *)(a1 + 456) = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 472) = v14;
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  *(_WORD *)(a1 + 504) = *(_WORD *)(a2 + 504);
  v15 = *(_OWORD *)(a2 + 408);
  *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
  *(_OWORD *)(a1 + 408) = v15;
  v16 = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 424) = *(_OWORD *)(a2 + 424);
  *(_OWORD *)(a1 + 440) = v16;
  v17 = *(_OWORD *)(a2 + 344);
  *(_OWORD *)(a1 + 328) = *(_OWORD *)(a2 + 328);
  *(_OWORD *)(a1 + 344) = v17;
  v18 = *(_OWORD *)(a2 + 376);
  *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
  *(_OWORD *)(a1 + 376) = v18;
  v19 = *(_OWORD *)(a2 + 312);
  *(_OWORD *)(a1 + 296) = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 312) = v19;
  *(_BYTE *)(a1 + 506) = *(_BYTE *)(a2 + 506);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  swift_release();
  v20 = (_QWORD *)(a2 + 528);
  if (*(_QWORD *)(a1 + 536) != 1)
  {
    v21 = *(_QWORD *)(a2 + 536);
    if (v21 != 1)
    {
      *(_QWORD *)(a1 + 528) = *v20;
      *(_QWORD *)(a1 + 536) = v21;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(a1 + 528, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 528) = *(_OWORD *)v20;
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotosPoster(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 544))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotosPoster(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 536) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 544) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 544) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotosPoster()
{
  return &type metadata for PhotosPoster;
}

uint64_t _s9BlastDoor13PosterArchiveV13ConfigurationV22RenderingConfigurationVwst_0(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD3B0F9C + 4 * byte_1AD67E6AD[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1AD3B0FD0 + 4 * byte_1AD67E6A8[v4]))();
}

uint64_t sub_1AD3B0FD0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AD3B0FD8(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1AD3B0FE0);
  return result;
}

uint64_t sub_1AD3B0FEC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1AD3B0FF4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD3B0FF8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AD3B1000(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhotosPoster.Options()
{
  return &type metadata for PhotosPoster.Options;
}

ValueMetadata *type metadata accessor for PhotosPoster.MediaType()
{
  return &type metadata for PhotosPoster.MediaType;
}

uint64_t destroy for PhotosPoster.Media(uint64_t a1)
{
  swift_release();
  if (*(_QWORD *)(a1 + 32) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PhotosPoster.Media(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  swift_retain();
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 24) = *v5;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)v5;
    *(_QWORD *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
  }
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PhotosPoster.Media(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1AD009758(a1 + 24, &qword_1ED2E3198);
    goto LABEL_6;
  }
  if (v5 == 1)
  {
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
LABEL_8:
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t assignWithTake for PhotosPoster.Media(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = (_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 32) != 1)
  {
    v5 = *(_QWORD *)(a2 + 32);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 24) = *v4;
      *(_QWORD *)(a1 + 32) = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AD009758(a1 + 24, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v4;
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotosPoster.Media(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 80))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotosPoster.Media(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 80) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 80) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotosPoster.Media()
{
  return &type metadata for PhotosPoster.Media;
}

uint64_t getEnumTagSinglePayload for PhotosPoster.Layout(uint64_t a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFE && *(_BYTE *)(a1 + 146))
    return (*(_DWORD *)a1 + 254);
  if (*(unsigned __int8 *)(a1 + 144) <= 2u)
    v3 = 2;
  else
    v3 = *(unsigned __int8 *)(a1 + 144);
  v4 = v3 - 3;
  if (*(unsigned __int8 *)(a1 + 144) < 2u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotosPoster.Layout(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 144) = 0;
    *(_QWORD *)result = a2 - 254;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 146) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 146) = 0;
    if (a2)
      *(_BYTE *)(result + 144) = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotosPoster.Layout()
{
  return &type metadata for PhotosPoster.Layout;
}

uint64_t _s9BlastDoor13PosterArchiveV13ConfigurationV23TitleStyleConfigurationV11TitleLayoutOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD3B1488 + 4 * byte_1AD67E6B7[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD3B14BC + 4 * byte_1AD67E6B2[v4]))();
}

uint64_t sub_1AD3B14BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3B14C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3B14CCLL);
  return result;
}

uint64_t sub_1AD3B14D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD3B14E0);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD3B14E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3B14EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhotosPoster.Layout.ClockLayerOrder()
{
  return &type metadata for PhotosPoster.Layout.ClockLayerOrder;
}

uint64_t _s9BlastDoor13PosterArchiveV13ConfigurationV23TitleStyleConfigurationV17TitleContentStyleV9StyleTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD3B1554 + 4 * byte_1AD67E6C1[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD3B1588 + 4 * byte_1AD67E6BC[v4]))();
}

uint64_t sub_1AD3B1588(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3B1590(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD3B1598);
  return result;
}

uint64_t sub_1AD3B15A4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD3B15ACLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD3B15B0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD3B15B8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PhotosPoster.Layout.ClockIntersection()
{
  return &type metadata for PhotosPoster.Layout.ClockIntersection;
}

uint64_t destroy for PhotosPoster.ParallaxLayer(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  if (a1[3])
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v2 = a1[10];
    v3 = a1[12];
    v4 = a1[14];
    v5 = a1[16];
    v6 = a1[20];
    v7 = a1[22];
    v8 = a1[24];
    if (v2 >> 1 != 0xFFFFFFFF
      || (v4 | (unint64_t)v3) > 1
      || (v6 & 0xFFFFFFFFFFFFFEFELL | v5 & 0xFFFFFFFFFFFF00FELL) != 0
      || (v8 | v7) >= 2)
    {
      sub_1AD00E8B0(a1[7], a1[8], a1[9], v2, a1[11], v3, a1[13], v4, a1[15], v5, a1[17], a1[18], a1[19], v6, a1[21], v7, a1[23], v8, a1[25],
        a1[26],
        a1[27],
        a1[28],
        a1[29],
        a1[30]);
    }
  }
  v12 = a1[31];
  v13 = a1[32];
  v14 = a1 + 31;
  sub_1AD00E8B0(v12, v13, v14[2], v14[3], v14[4], v14[5], v14[6], v14[7], v14[8], v14[9], v14[10], v14[11], v14[12], v14[13], v14[14], v14[15], v14[16], v14[17], v14[18],
    v14[19],
    v14[20],
    v14[21],
    v14[22],
    v14[23]);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PhotosPoster.ParallaxLayer(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v6 = *(_QWORD *)(a2 + 80);
    v7 = *(_QWORD *)(a2 + 96);
    v8 = *(_QWORD *)(a2 + 112);
    v9 = *(_QWORD *)(a2 + 192);
    if (v6 >> 1 != 0xFFFFFFFF
      || (v8 | (unint64_t)v7) > 1
      || *(_QWORD *)(a2 + 160) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a2 + 128) & 0xFFFFFFFFFFFF00FELL
      || (v9 | *(_QWORD *)(a2 + 176)) >= 2)
    {
      v23 = *(_QWORD *)(a2 + 64);
      v24 = *(_QWORD *)(a2 + 88);
      v42 = *(_QWORD *)(a2 + 120);
      v46 = *(_QWORD *)(a2 + 136);
      v52 = *(_QWORD *)(a2 + 144);
      v54 = *(_QWORD *)(a2 + 152);
      v56 = *(_QWORD *)(a2 + 168);
      v58 = *(_QWORD *)(a2 + 184);
      v60 = *(_QWORD *)(a2 + 200);
      v62 = *(_QWORD *)(a2 + 208);
      v64 = *(_QWORD *)(a2 + 216);
      v66 = *(_QWORD *)(a2 + 224);
      v68 = *(_QWORD *)(a2 + 232);
      v70 = *(_QWORD *)(a2 + 240);
      v48 = *(_QWORD *)(a2 + 160);
      v50 = *(_QWORD *)(a2 + 176);
      v25 = *(_QWORD *)(a2 + 56);
      v40 = *(_QWORD *)(a2 + 128);
      v26 = *(_QWORD *)(a2 + 72);
      v44 = *(_QWORD *)(a2 + 192);
      v27 = *(_QWORD *)(a2 + 104);
      sub_1AD00FEAC(v25, v23, v26, v6, v24, v7, v27, v8, v42, v40, v46, v52, v54, v48, v56, v50, v58, v9, v60,
        v62,
        v64,
        v66,
        v68,
        v70);
      *(_QWORD *)(a1 + 56) = v25;
      *(_QWORD *)(a1 + 64) = v23;
      *(_QWORD *)(a1 + 72) = v26;
      *(_QWORD *)(a1 + 80) = v6;
      *(_QWORD *)(a1 + 88) = v24;
      *(_QWORD *)(a1 + 96) = v7;
      *(_QWORD *)(a1 + 104) = v27;
      *(_QWORD *)(a1 + 112) = v8;
      *(_QWORD *)(a1 + 120) = v42;
      *(_QWORD *)(a1 + 128) = v40;
      *(_QWORD *)(a1 + 136) = v46;
      *(_QWORD *)(a1 + 144) = v52;
      *(_QWORD *)(a1 + 152) = v54;
      *(_QWORD *)(a1 + 160) = v48;
      *(_QWORD *)(a1 + 168) = v56;
      *(_QWORD *)(a1 + 176) = v50;
      *(_QWORD *)(a1 + 184) = v58;
      *(_QWORD *)(a1 + 192) = v44;
      *(_QWORD *)(a1 + 200) = v60;
      *(_QWORD *)(a1 + 208) = v62;
      *(_QWORD *)(a1 + 216) = v64;
      *(_QWORD *)(a1 + 224) = v66;
      *(_QWORD *)(a1 + 232) = v68;
      *(_QWORD *)(a1 + 240) = v70;
    }
    else
    {
      v10 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v10;
      v11 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v11;
      v12 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v12;
      v13 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v13;
      v14 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v14;
      v15 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v15;
    }
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v16;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v17 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v17;
    v18 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v18;
    v19 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v19;
    v20 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v20;
    v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v21;
    v22 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v22;
  }
  v28 = *(_QWORD *)(a2 + 288);
  v29 = *(_QWORD *)(a2 + 296);
  v41 = *(_QWORD *)(a2 + 312);
  v43 = *(_QWORD *)(a2 + 320);
  v45 = *(_QWORD *)(a2 + 328);
  v47 = *(_QWORD *)(a2 + 336);
  v49 = *(_QWORD *)(a2 + 344);
  v51 = *(_QWORD *)(a2 + 352);
  v53 = *(_QWORD *)(a2 + 360);
  v55 = *(_QWORD *)(a2 + 368);
  v57 = *(_QWORD *)(a2 + 376);
  v59 = *(_QWORD *)(a2 + 384);
  v61 = *(_QWORD *)(a2 + 392);
  v63 = *(_QWORD *)(a2 + 400);
  v65 = *(_QWORD *)(a2 + 408);
  v67 = *(_QWORD *)(a2 + 416);
  v69 = *(_QWORD *)(a2 + 424);
  v71 = *(_QWORD *)(a2 + 432);
  v30 = *(_QWORD *)(a2 + 248);
  v31 = *(_QWORD *)(a2 + 256);
  v32 = *(_QWORD *)(a2 + 264);
  v33 = *(_QWORD *)(a2 + 272);
  v34 = *(_QWORD *)(a2 + 280);
  v35 = *(_QWORD *)(a2 + 304);
  sub_1AD00FEAC(v30, v31, v32, v33, v34, v28, v29, v35, v41, v43, v45, v47, v49, v51, v53, v55, v57, v59, v61,
    v63,
    v65,
    v67,
    v69,
    v71);
  *(_QWORD *)(a1 + 248) = v30;
  *(_QWORD *)(a1 + 256) = v31;
  *(_QWORD *)(a1 + 264) = v32;
  *(_QWORD *)(a1 + 272) = v33;
  *(_QWORD *)(a1 + 280) = v34;
  *(_QWORD *)(a1 + 288) = v28;
  *(_QWORD *)(a1 + 296) = v29;
  *(_QWORD *)(a1 + 304) = v35;
  *(_QWORD *)(a1 + 312) = v41;
  *(_QWORD *)(a1 + 320) = v43;
  *(_QWORD *)(a1 + 328) = v45;
  *(_QWORD *)(a1 + 336) = v47;
  *(_QWORD *)(a1 + 344) = v49;
  *(_QWORD *)(a1 + 352) = v51;
  *(_QWORD *)(a1 + 360) = v53;
  *(_QWORD *)(a1 + 368) = v55;
  *(_QWORD *)(a1 + 376) = v57;
  *(_QWORD *)(a1 + 384) = v59;
  *(_QWORD *)(a1 + 392) = v61;
  *(_QWORD *)(a1 + 400) = v63;
  *(_QWORD *)(a1 + 408) = v65;
  *(_QWORD *)(a1 + 416) = v67;
  *(_QWORD *)(a1 + 424) = v69;
  *(_QWORD *)(a1 + 432) = v71;
  v36 = *(_OWORD *)(a2 + 456);
  *(_OWORD *)(a1 + 440) = *(_OWORD *)(a2 + 440);
  *(_OWORD *)(a1 + 456) = v36;
  v37 = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 472) = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = v37;
  v38 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v38;
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PhotosPoster.ParallaxLayer(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;

  v4 = *((_QWORD *)a2 + 3);
  if (!*(_QWORD *)(a1 + 24))
  {
    if (!v4)
    {
      v63 = *a2;
      v64 = a2[1];
      v65 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v65;
      *(_OWORD *)a1 = v63;
      *(_OWORD *)(a1 + 16) = v64;
      v66 = a2[4];
      v67 = a2[5];
      v68 = a2[7];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v68;
      *(_OWORD *)(a1 + 64) = v66;
      *(_OWORD *)(a1 + 80) = v67;
      v69 = a2[8];
      v70 = a2[9];
      v71 = a2[11];
      *(_OWORD *)(a1 + 160) = a2[10];
      *(_OWORD *)(a1 + 176) = v71;
      *(_OWORD *)(a1 + 128) = v69;
      *(_OWORD *)(a1 + 144) = v70;
      v72 = a2[12];
      v73 = a2[13];
      v74 = a2[14];
      *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
      *(_OWORD *)(a1 + 208) = v73;
      *(_OWORD *)(a1 + 224) = v74;
      *(_OWORD *)(a1 + 192) = v72;
      goto LABEL_35;
    }
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
    v28 = *((_QWORD *)a2 + 5);
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_QWORD *)(a1 + 40) = v28;
    v29 = *((_QWORD *)a2 + 10);
    v30 = *((_QWORD *)a2 + 12);
    v31 = *((_QWORD *)a2 + 14);
    v32 = *((_QWORD *)a2 + 22);
    if (v29 >> 1 == 0xFFFFFFFF
      && (v31 | (unint64_t)v30) <= 1
      && !(a2[10] & 0xFFFFFFFFFFFFFEFELL | (_QWORD)a2[8] & 0xFFFFFFFFFFFF00FELL)
      && (*((_QWORD *)a2 + 24) | (unint64_t)v32) < 2)
    {
      v33 = *(__int128 *)((char *)a2 + 56);
      v34 = *(__int128 *)((char *)a2 + 72);
      v35 = *(__int128 *)((char *)a2 + 104);
      *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
      *(_OWORD *)(a1 + 104) = v35;
      *(_OWORD *)(a1 + 56) = v33;
      *(_OWORD *)(a1 + 72) = v34;
      v36 = *(__int128 *)((char *)a2 + 120);
      v37 = *(__int128 *)((char *)a2 + 136);
      v38 = *(__int128 *)((char *)a2 + 168);
      *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
      *(_OWORD *)(a1 + 168) = v38;
      *(_OWORD *)(a1 + 120) = v36;
      *(_OWORD *)(a1 + 136) = v37;
      v39 = *(__int128 *)((char *)a2 + 184);
      v40 = *(__int128 *)((char *)a2 + 200);
      v41 = *(__int128 *)((char *)a2 + 232);
      *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
      *(_OWORD *)(a1 + 232) = v41;
      *(_OWORD *)(a1 + 184) = v39;
      *(_OWORD *)(a1 + 200) = v40;
      goto LABEL_35;
    }
    v75 = *((_QWORD *)a2 + 7);
    v76 = *((_QWORD *)a2 + 11);
    v133 = *((_QWORD *)a2 + 15);
    v145 = *((_QWORD *)a2 + 17);
    v149 = *((_QWORD *)a2 + 18);
    v157 = *((_QWORD *)a2 + 19);
    v161 = *((_QWORD *)a2 + 21);
    v165 = *((_QWORD *)a2 + 23);
    v169 = *((_QWORD *)a2 + 25);
    v173 = *((_QWORD *)a2 + 26);
    v177 = *((_QWORD *)a2 + 27);
    v181 = *((_QWORD *)a2 + 28);
    v185 = *((_QWORD *)a2 + 29);
    v189 = *((_QWORD *)a2 + 30);
    v141 = *((_QWORD *)a2 + 20);
    v77 = *((_QWORD *)a2 + 8);
    v153 = *((_QWORD *)a2 + 24);
    v129 = *((_QWORD *)a2 + 16);
    v78 = *((_QWORD *)a2 + 9);
    v137 = *((_QWORD *)a2 + 22);
    v79 = *((_QWORD *)a2 + 13);
    sub_1AD00FEAC(v75, v77, v78, v29, v76, v30, v79, v31, v133, v129, v145, v149, v157, v141, v161, v32, v165, v153, v169,
      v173,
      v177,
      v181,
      v185,
      v189);
    *(_QWORD *)(a1 + 56) = v75;
    *(_QWORD *)(a1 + 64) = v77;
    *(_QWORD *)(a1 + 72) = v78;
    *(_QWORD *)(a1 + 80) = v29;
    *(_QWORD *)(a1 + 88) = v76;
    *(_QWORD *)(a1 + 96) = v30;
    *(_QWORD *)(a1 + 104) = v79;
    *(_QWORD *)(a1 + 112) = v31;
    *(_QWORD *)(a1 + 120) = v133;
    *(_QWORD *)(a1 + 128) = v129;
    *(_QWORD *)(a1 + 136) = v145;
    *(_QWORD *)(a1 + 144) = v149;
    *(_QWORD *)(a1 + 152) = v157;
    *(_QWORD *)(a1 + 160) = v141;
    *(_QWORD *)(a1 + 168) = v161;
    *(_QWORD *)(a1 + 176) = v137;
    *(_QWORD *)(a1 + 184) = v165;
    *(_QWORD *)(a1 + 192) = v153;
    *(_QWORD *)(a1 + 200) = v169;
    *(_QWORD *)(a1 + 208) = v173;
    *(_QWORD *)(a1 + 216) = v177;
    *(_QWORD *)(a1 + 224) = v181;
    *(_QWORD *)(a1 + 232) = v185;
    v80 = v189;
    goto LABEL_34;
  }
  if (!v4)
  {
    sub_1AD046A30((_QWORD *)a1);
    v42 = a2[3];
    v44 = *a2;
    v43 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v42;
    *(_OWORD *)a1 = v44;
    *(_OWORD *)(a1 + 16) = v43;
    v45 = a2[7];
    v47 = a2[4];
    v46 = a2[5];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v45;
    *(_OWORD *)(a1 + 64) = v47;
    *(_OWORD *)(a1 + 80) = v46;
    v48 = a2[11];
    v50 = a2[8];
    v49 = a2[9];
    *(_OWORD *)(a1 + 160) = a2[10];
    *(_OWORD *)(a1 + 176) = v48;
    *(_OWORD *)(a1 + 128) = v50;
    *(_OWORD *)(a1 + 144) = v49;
    v52 = a2[13];
    v51 = a2[14];
    v53 = a2[12];
    *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
    *(_OWORD *)(a1 + 208) = v52;
    *(_OWORD *)(a1 + 224) = v51;
    *(_OWORD *)(a1 + 192) = v53;
    goto LABEL_35;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v5 = *((_QWORD *)a2 + 5);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = (_OWORD *)(a1 + 56);
  v7 = (__int128 *)((char *)a2 + 56);
  v8 = *((_QWORD *)a2 + 10);
  v9 = *((_QWORD *)a2 + 12);
  v10 = *((_QWORD *)a2 + 14);
  v11 = *((_QWORD *)a2 + 16);
  v12 = *((_QWORD *)a2 + 20);
  v13 = *((_QWORD *)a2 + 22);
  v14 = *((_QWORD *)a2 + 24);
  v18 = v8 >> 1 == 0xFFFFFFFF
     && (v10 | (unint64_t)v9) < 2
     && (v12 & 0xFFFFFFFFFFFFFEFELL | v11 & 0xFFFFFFFFFFFF00FELL) == 0
     && (v14 | v13) < 2;
  if (*(_QWORD *)(a1 + 80) >> 1 == 0xFFFFFFFFLL
    && (*(_QWORD *)(a1 + 112) | *(_QWORD *)(a1 + 96)) <= 1
    && !(*(_QWORD *)(a1 + 160) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a1 + 128) & 0xFFFFFFFFFFFF00FELL)
    && (*(_QWORD *)(a1 + 192) | *(_QWORD *)(a1 + 176)) < 2)
  {
    if (v18)
    {
      v19 = *v7;
      v20 = *(__int128 *)((char *)a2 + 72);
      v21 = *(__int128 *)((char *)a2 + 104);
      *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
      *(_OWORD *)(a1 + 104) = v21;
      *v6 = v19;
      *(_OWORD *)(a1 + 72) = v20;
      v22 = *(__int128 *)((char *)a2 + 120);
      v23 = *(__int128 *)((char *)a2 + 136);
      v24 = *(__int128 *)((char *)a2 + 168);
      *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
      *(_OWORD *)(a1 + 168) = v24;
      *(_OWORD *)(a1 + 120) = v22;
      *(_OWORD *)(a1 + 136) = v23;
      v25 = *(__int128 *)((char *)a2 + 184);
      v26 = *(__int128 *)((char *)a2 + 200);
      v27 = *(__int128 *)((char *)a2 + 232);
      *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
      *(_OWORD *)(a1 + 232) = v27;
      *(_OWORD *)(a1 + 184) = v25;
      *(_OWORD *)(a1 + 200) = v26;
      goto LABEL_35;
    }
    v135 = *((_QWORD *)a2 + 8);
    v139 = *((_QWORD *)a2 + 7);
    v131 = *((_QWORD *)a2 + 9);
    v100 = *((_QWORD *)a2 + 11);
    v101 = *((_QWORD *)a2 + 13);
    v143 = *((_QWORD *)a2 + 15);
    v147 = *((_QWORD *)a2 + 17);
    v151 = *((_QWORD *)a2 + 18);
    v155 = *((_QWORD *)a2 + 19);
    v159 = *((_QWORD *)a2 + 21);
    v163 = *((_QWORD *)a2 + 23);
    v167 = *((_QWORD *)a2 + 25);
    v171 = *((_QWORD *)a2 + 26);
    v175 = *((_QWORD *)a2 + 27);
    v179 = *((_QWORD *)a2 + 28);
    v183 = *((_QWORD *)a2 + 29);
    v187 = *((_QWORD *)a2 + 30);
    v191 = *((_QWORD *)a2 + 24);
    sub_1AD00FEAC(v139, v135, v131, v8, v100, v9, v101, v10, v143, v11, v147, v151, v155, v12, v159, v13, v163, v14, v167,
      v171,
      v175,
      v179,
      v183,
      v187);
    *(_QWORD *)(a1 + 56) = v139;
    *(_QWORD *)(a1 + 64) = v135;
    *(_QWORD *)(a1 + 72) = v131;
    *(_QWORD *)(a1 + 80) = v8;
    *(_QWORD *)(a1 + 88) = v100;
    *(_QWORD *)(a1 + 96) = v9;
    *(_QWORD *)(a1 + 104) = v101;
    *(_QWORD *)(a1 + 112) = v10;
    *(_QWORD *)(a1 + 120) = v143;
    *(_QWORD *)(a1 + 128) = v11;
    *(_QWORD *)(a1 + 136) = v147;
    *(_QWORD *)(a1 + 144) = v151;
    *(_QWORD *)(a1 + 152) = v155;
    *(_QWORD *)(a1 + 160) = v12;
    *(_QWORD *)(a1 + 168) = v159;
    *(_QWORD *)(a1 + 176) = v13;
    *(_QWORD *)(a1 + 184) = v163;
    *(_QWORD *)(a1 + 192) = v191;
    *(_QWORD *)(a1 + 200) = v167;
    *(_QWORD *)(a1 + 208) = v171;
    *(_QWORD *)(a1 + 216) = v175;
    *(_QWORD *)(a1 + 224) = v179;
    *(_QWORD *)(a1 + 232) = v183;
    v80 = v187;
LABEL_34:
    *(_QWORD *)(a1 + 240) = v80;
    goto LABEL_35;
  }
  if (v18)
  {
    sub_1AD148B34(a1 + 56);
    v54 = *(__int128 *)((char *)a2 + 104);
    v56 = *v7;
    v55 = *(__int128 *)((char *)a2 + 72);
    *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
    *(_OWORD *)(a1 + 104) = v54;
    *v6 = v56;
    *(_OWORD *)(a1 + 72) = v55;
    v57 = *(__int128 *)((char *)a2 + 168);
    v59 = *(__int128 *)((char *)a2 + 120);
    v58 = *(__int128 *)((char *)a2 + 136);
    *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
    *(_OWORD *)(a1 + 168) = v57;
    *(_OWORD *)(a1 + 120) = v59;
    *(_OWORD *)(a1 + 136) = v58;
    v60 = *(__int128 *)((char *)a2 + 232);
    v62 = *(__int128 *)((char *)a2 + 184);
    v61 = *(__int128 *)((char *)a2 + 200);
    *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
    *(_OWORD *)(a1 + 232) = v60;
    *(_OWORD *)(a1 + 184) = v62;
    *(_OWORD *)(a1 + 200) = v61;
  }
  else
  {
    v134 = *((_QWORD *)a2 + 8);
    v138 = *((_QWORD *)a2 + 7);
    v130 = *((_QWORD *)a2 + 9);
    v81 = *((_QWORD *)a2 + 11);
    v82 = *((_QWORD *)a2 + 13);
    v142 = *((_QWORD *)a2 + 15);
    v146 = *((_QWORD *)a2 + 17);
    v150 = *((_QWORD *)a2 + 18);
    v154 = *((_QWORD *)a2 + 19);
    v158 = *((_QWORD *)a2 + 21);
    v162 = *((_QWORD *)a2 + 23);
    v166 = *((_QWORD *)a2 + 25);
    v170 = *((_QWORD *)a2 + 26);
    v174 = *((_QWORD *)a2 + 27);
    v178 = *((_QWORD *)a2 + 28);
    v182 = *((_QWORD *)a2 + 29);
    v186 = *((_QWORD *)a2 + 30);
    v190 = *((_QWORD *)a2 + 24);
    sub_1AD00FEAC(v138, v134, v130, v8, v81, v9, v82, v10, v142, v11, v146, v150, v154, v12, v158, v13, v162, v14, v166,
      v170,
      v174,
      v178,
      v182,
      v186);
    v83 = *(_QWORD *)(a1 + 56);
    v84 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v138;
    *(_QWORD *)(a1 + 64) = v134;
    v85 = *(_QWORD *)(a1 + 72);
    v86 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = v130;
    *(_QWORD *)(a1 + 80) = v8;
    v87 = *(_QWORD *)(a1 + 88);
    v88 = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = v81;
    *(_QWORD *)(a1 + 96) = v9;
    v89 = *(_QWORD *)(a1 + 104);
    v90 = *(_QWORD *)(a1 + 112);
    *(_QWORD *)(a1 + 104) = v82;
    *(_QWORD *)(a1 + 112) = v10;
    v91 = *(_OWORD *)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v142;
    *(_QWORD *)(a1 + 128) = v11;
    v92 = *(_OWORD *)(a1 + 136);
    *(_QWORD *)(a1 + 136) = v146;
    *(_QWORD *)(a1 + 144) = v150;
    v93 = *(_OWORD *)(a1 + 152);
    *(_QWORD *)(a1 + 152) = v154;
    *(_QWORD *)(a1 + 160) = v12;
    v94 = *(_OWORD *)(a1 + 168);
    *(_QWORD *)(a1 + 168) = v158;
    *(_QWORD *)(a1 + 176) = v13;
    v95 = *(_OWORD *)(a1 + 184);
    *(_QWORD *)(a1 + 184) = v162;
    *(_QWORD *)(a1 + 192) = v190;
    v96 = *(_OWORD *)(a1 + 200);
    *(_QWORD *)(a1 + 200) = v166;
    *(_QWORD *)(a1 + 208) = v170;
    v97 = *(_OWORD *)(a1 + 216);
    *(_QWORD *)(a1 + 216) = v174;
    *(_QWORD *)(a1 + 224) = v178;
    v98 = *(_QWORD *)(a1 + 232);
    v99 = *(_QWORD *)(a1 + 240);
    *(_QWORD *)(a1 + 232) = v182;
    *(_QWORD *)(a1 + 240) = v186;
    sub_1AD00E8B0(v83, v84, v85, v86, v87, v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92, *((uint64_t *)&v92 + 1), v93, *((uint64_t *)&v93 + 1), v94, *((uint64_t *)&v94 + 1), v95, *((unint64_t *)&v95 + 1), v96,
      *((uint64_t *)&v96 + 1),
      v97,
      *((uint64_t *)&v97 + 1),
      v98,
      v99);
  }
LABEL_35:
  v102 = *((_QWORD *)a2 + 36);
  v103 = *((_QWORD *)a2 + 37);
  v132 = *((_QWORD *)a2 + 39);
  v136 = *((_QWORD *)a2 + 40);
  v140 = *((_QWORD *)a2 + 41);
  v144 = *((_QWORD *)a2 + 42);
  v148 = *((_QWORD *)a2 + 43);
  v152 = *((_QWORD *)a2 + 44);
  v156 = *((_QWORD *)a2 + 45);
  v160 = *((_QWORD *)a2 + 46);
  v164 = *((_QWORD *)a2 + 47);
  v168 = *((_QWORD *)a2 + 48);
  v172 = *((_QWORD *)a2 + 49);
  v176 = *((_QWORD *)a2 + 50);
  v180 = *((_QWORD *)a2 + 51);
  v184 = *((_QWORD *)a2 + 52);
  v188 = *((_QWORD *)a2 + 53);
  v192 = *((_QWORD *)a2 + 54);
  v104 = *((_QWORD *)a2 + 31);
  v105 = *((_QWORD *)a2 + 32);
  v106 = *((_QWORD *)a2 + 33);
  v107 = *((_QWORD *)a2 + 34);
  v108 = *((_QWORD *)a2 + 35);
  v109 = *((_QWORD *)a2 + 38);
  sub_1AD00FEAC(v104, v105, v106, v107, v108, v102, v103, v109, v132, v136, v140, v144, v148, v152, v156, v160, v164, v168, v172,
    v176,
    v180,
    v184,
    v188,
    v192);
  v110 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v104;
  v111 = *(_QWORD *)(a1 + 256);
  v112 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = v105;
  *(_QWORD *)(a1 + 264) = v106;
  v113 = *(_QWORD *)(a1 + 272);
  v114 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 272) = v107;
  *(_QWORD *)(a1 + 280) = v108;
  v115 = *(_QWORD *)(a1 + 288);
  v116 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 288) = v102;
  *(_QWORD *)(a1 + 296) = v103;
  v117 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 304) = v109;
  v118 = *(_OWORD *)(a1 + 312);
  v119 = *(_OWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 312) = v132;
  *(_QWORD *)(a1 + 320) = v136;
  *(_QWORD *)(a1 + 328) = v140;
  *(_QWORD *)(a1 + 336) = v144;
  v120 = *(_OWORD *)(a1 + 344);
  v121 = *(_OWORD *)(a1 + 360);
  *(_QWORD *)(a1 + 344) = v148;
  *(_QWORD *)(a1 + 352) = v152;
  *(_QWORD *)(a1 + 360) = v156;
  *(_QWORD *)(a1 + 368) = v160;
  v122 = *(_OWORD *)(a1 + 376);
  v123 = *(_OWORD *)(a1 + 392);
  *(_QWORD *)(a1 + 376) = v164;
  *(_QWORD *)(a1 + 384) = v168;
  *(_QWORD *)(a1 + 392) = v172;
  *(_QWORD *)(a1 + 400) = v176;
  v124 = *(_OWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 408) = v180;
  v125 = *(_QWORD *)(a1 + 424);
  v126 = *(_QWORD *)(a1 + 432);
  *(_QWORD *)(a1 + 416) = v184;
  *(_QWORD *)(a1 + 424) = v188;
  *(_QWORD *)(a1 + 432) = v192;
  sub_1AD00E8B0(v110, v111, v112, v113, v114, v115, v116, v117, v118, *((uint64_t *)&v118 + 1), v119, *((uint64_t *)&v119 + 1), v120, *((uint64_t *)&v120 + 1), v121, *((uint64_t *)&v121 + 1), v122, *((unint64_t *)&v122 + 1), v123,
    *((uint64_t *)&v123 + 1),
    v124,
    *((uint64_t *)&v124 + 1),
    v125,
    v126);
  *(_QWORD *)(a1 + 440) = *((_QWORD *)a2 + 55);
  *(_QWORD *)(a1 + 448) = *((_QWORD *)a2 + 56);
  *(_QWORD *)(a1 + 456) = *((_QWORD *)a2 + 57);
  *(_QWORD *)(a1 + 464) = *((_QWORD *)a2 + 58);
  *(_QWORD *)(a1 + 472) = *((_QWORD *)a2 + 59);
  v127 = *((_QWORD *)a2 + 61);
  *(_QWORD *)(a1 + 480) = *((_QWORD *)a2 + 60);
  *(_QWORD *)(a1 + 488) = v127;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 496) = *((_QWORD *)a2 + 62);
  *(_QWORD *)(a1 + 504) = *((_QWORD *)a2 + 63);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy512_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x200uLL);
}

uint64_t assignWithTake for PhotosPoster.ParallaxLayer(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  v4 = (_OWORD *)(a1 + 264);
  v5 = (_OWORD *)(a2 + 264);
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_14;
  if (!*(_QWORD *)(a2 + 24))
  {
    sub_1AD046A30((_QWORD *)a1);
LABEL_14:
    v28 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v28;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v29 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v29;
    v30 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v30;
    v31 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v31;
    v32 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v32;
    v33 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v33;
    v34 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v34;
    goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 112);
  v11 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 160);
  v13 = *(_QWORD *)(a1 + 176);
  v14 = *(_QWORD *)(a1 + 192);
  v15 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 128);
  v19 = *(_QWORD *)(a2 + 160);
  v20 = *(_QWORD *)(a2 + 176);
  v21 = *(_QWORD *)(a2 + 192);
  if (v8 >> 1 != 0xFFFFFFFF
    || (v10 | (unint64_t)v9) > 1
    || v12 & 0xFFFFFFFFFFFFFEFELL | v11 & 0xFFFFFFFFFFFF00FELL
    || (v14 | v13) >= 2)
  {
    if (v15 >> 1 != 0xFFFFFFFF
      || (v17 | v16) > 1
      || v19 & 0xFFFFFFFFFFFFFEFELL | v18 & 0xFFFFFFFFFFFF00FELL
      || (v21 | v20) >= 2)
    {
      v60 = *(_QWORD *)(a2 + 72);
      v61 = *(_QWORD *)(a2 + 88);
      v62 = *(_QWORD *)(a2 + 104);
      v63 = *(_QWORD *)(a2 + 120);
      v64 = *(_QWORD *)(a2 + 152);
      v65 = *(_QWORD *)(a2 + 168);
      v66 = *(_QWORD *)(a2 + 184);
      v77 = *(_QWORD *)(a1 + 64);
      v78 = *(_QWORD *)(a1 + 56);
      v76 = *(_QWORD *)(a1 + 72);
      v79 = *(_QWORD *)(a1 + 88);
      v80 = *(_QWORD *)(a1 + 104);
      v67 = *(_OWORD *)(a1 + 136);
      v74 = *(_QWORD *)(a1 + 152);
      v75 = *(_QWORD *)(a1 + 120);
      v68 = *(_QWORD *)(a1 + 168);
      v69 = *(_QWORD *)(a1 + 184);
      v70 = *(_OWORD *)(a1 + 200);
      v71 = *(_OWORD *)(a1 + 216);
      v73 = *(_QWORD *)(a1 + 232);
      v72 = *(_QWORD *)(a1 + 240);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = v60;
      *(_QWORD *)(a1 + 80) = v15;
      *(_QWORD *)(a1 + 88) = v61;
      *(_QWORD *)(a1 + 96) = v16;
      *(_QWORD *)(a1 + 104) = v62;
      *(_QWORD *)(a1 + 112) = v17;
      *(_QWORD *)(a1 + 120) = v63;
      *(_QWORD *)(a1 + 128) = v18;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = v64;
      *(_QWORD *)(a1 + 160) = v19;
      *(_QWORD *)(a1 + 168) = v65;
      *(_QWORD *)(a1 + 176) = v20;
      *(_QWORD *)(a1 + 184) = v66;
      *(_QWORD *)(a1 + 192) = v21;
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      sub_1AD00E8B0(v78, v77, v76, v8, v79, v9, v80, v10, v75, v11, v67, *((uint64_t *)&v67 + 1), v74, v12, v68, v13, v69, v14, v70,
        *((uint64_t *)&v70 + 1),
        v71,
        *((uint64_t *)&v71 + 1),
        v73,
        v72);
      goto LABEL_15;
    }
    sub_1AD148B34(a1 + 56);
  }
  v22 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v22;
  v23 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v23;
  v24 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v24;
  v25 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v25;
  v26 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v26;
  v27 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v27;
LABEL_15:
  v35 = *(_QWORD *)(a1 + 248);
  v36 = *(_QWORD *)(a1 + 256);
  v37 = *(_QWORD *)(a1 + 264);
  v38 = *(_QWORD *)(a1 + 272);
  v39 = *(_QWORD *)(a1 + 280);
  v40 = *(_QWORD *)(a1 + 288);
  v41 = *(_QWORD *)(a1 + 296);
  v42 = *(_QWORD *)(a1 + 304);
  v43 = *(_OWORD *)(a1 + 312);
  v44 = *(_OWORD *)(a1 + 328);
  v45 = *(_OWORD *)(a1 + 344);
  v46 = *(_OWORD *)(a1 + 360);
  v47 = *(_OWORD *)(a1 + 376);
  v48 = *(_OWORD *)(a1 + 392);
  v49 = *(_OWORD *)(a1 + 408);
  v50 = *(_QWORD *)(a1 + 424);
  v51 = *(_QWORD *)(a1 + 432);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v52 = v5[1];
  *v4 = *v5;
  v4[1] = v52;
  v53 = v5[3];
  v4[2] = v5[2];
  v4[3] = v53;
  v54 = v5[5];
  v4[4] = v5[4];
  v4[5] = v54;
  v55 = v5[7];
  v4[6] = v5[6];
  v4[7] = v55;
  v56 = v5[9];
  v4[8] = v5[8];
  v4[9] = v56;
  v4[10] = v5[10];
  sub_1AD00E8B0(v35, v36, v37, v38, v39, v40, v41, v42, v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((unint64_t *)&v47 + 1), v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    v51);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  v57 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v57;
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  swift_release();
  v58 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v58;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotosPoster.ParallaxLayer(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 512))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 272) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for PhotosPoster.ParallaxLayer(uint64_t a1, int a2, int a3)
{
  double result;
  uint64_t v4;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 504) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 512) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(a1 + 248) = 0;
      *(_QWORD *)(a1 + 256) = 0;
      v4 = a1 + 248;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 2 * -a2;
      result = 0.0;
      *(_OWORD *)(v4 + 32) = 0u;
      *(_OWORD *)(v4 + 48) = 0u;
      *(_OWORD *)(v4 + 64) = 0u;
      *(_OWORD *)(v4 + 80) = 0u;
      *(_OWORD *)(v4 + 96) = 0u;
      *(_OWORD *)(v4 + 112) = 0u;
      *(_OWORD *)(v4 + 128) = 0u;
      *(_OWORD *)(v4 + 144) = 0u;
      *(_OWORD *)(v4 + 160) = 0u;
      *(_OWORD *)(v4 + 176) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 512) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotosPoster.ParallaxLayer()
{
  return &type metadata for PhotosPoster.ParallaxLayer;
}

uint64_t initializeWithCopy for PhotosPoster.ParallaxLayerStack(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_WORD *)(a1 + 152) = *(_WORD *)(a2 + 152);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_WORD *)(a1 + 154) = *(_WORD *)(a2 + 154);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PhotosPoster.ParallaxLayerStack(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  *(_BYTE *)(a1 + 155) = *(_BYTE *)(a2 + 155);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  return a1;
}

uint64_t assignWithTake for PhotosPoster.ParallaxLayerStack(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
  *(_BYTE *)(a1 + 153) = *(_BYTE *)(a2 + 153);
  *(_BYTE *)(a1 + 154) = *(_BYTE *)(a2 + 154);
  *(_BYTE *)(a1 + 155) = *(_BYTE *)(a2 + 155);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_BYTE *)(a1 + 168) = *(_BYTE *)(a2 + 168);
  return a1;
}

uint64_t getEnumTagSinglePayload for PhotosPoster.ParallaxLayerStack(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 169))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PhotosPoster.ParallaxLayerStack(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 168) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 169) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 169) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PhotosPoster.ParallaxLayerStack()
{
  return &type metadata for PhotosPoster.ParallaxLayerStack;
}

uint64_t getEnumTagSinglePayload for PhotosPoster.ParallaxLayoutConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 104))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PhotosPoster.ParallaxLayoutConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 104) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PhotosPoster.ParallaxLayoutConfiguration()
{
  return &type metadata for PhotosPoster.ParallaxLayoutConfiguration;
}

uint64_t getEnumTagSinglePayload for PhotosPoster.CompoundDeviceConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 209))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for PhotosPoster.CompoundDeviceConfiguration(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 208) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 209) = v3;
  return result;
}

ValueMetadata *type metadata accessor for PhotosPoster.CompoundDeviceConfiguration()
{
  return &type metadata for PhotosPoster.CompoundDeviceConfiguration;
}

_QWORD *initializeBufferWithCopyOfBuffer for AvatarDescriptor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for AvatarDescriptor()
{
  return swift_release();
}

_QWORD *assignWithCopy for AvatarDescriptor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for AvatarDescriptor(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for AvatarDescriptor(uint64_t a1, unsigned int a2)
{
  unsigned int v3;

  if (!a2)
    return 0;
  if (a2 >= 0x7F && *(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 127);
  v3 = (((*(_QWORD *)a1 >> 57) >> 6) | (2 * ((*(_QWORD *)a1 >> 57) & 0x38 | *(_QWORD *)a1 & 7))) ^ 0x7F;
  if (v3 >= 0x7E)
    v3 = -1;
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for AvatarDescriptor(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7E)
  {
    *(_QWORD *)result = a2 - 127;
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7F)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 1) & 0x3F | ((-a2 & 0x7F) << 6);
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_1AD3B2D64(_QWORD *a1)
{
  return *a1 >> 63;
}

_QWORD *sub_1AD3B2D70(_QWORD *result)
{
  *result &= ~0x8000000000000000;
  return result;
}

uint64_t *sub_1AD3B2D80(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 63);
  return result;
}

ValueMetadata *type metadata accessor for AvatarDescriptor()
{
  return &type metadata for AvatarDescriptor;
}

ValueMetadata *type metadata accessor for AnimojiDescriptor()
{
  return &type metadata for AnimojiDescriptor;
}

_QWORD *destroy for MemojiDescriptor(_QWORD *result)
{
  _QWORD *v1;

  v1 = result;
  if (*result)
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[4])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[12])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[20])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[28])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[32])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[40])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[48])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[56])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[60])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[68])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[76])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[84])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[88])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[96])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[104])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[112])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[116])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[124])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[132])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[140])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[144])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[152])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[160])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[168])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[172])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[180])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[188])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[196])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[200])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[208])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[216])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[224])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[228])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[236])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[244])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[252])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[256])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[264])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[272])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[280])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[284])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[292])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[300])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[308])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[312])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[320])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[328])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[336])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[340])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[348])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[356])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[364])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[368])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[376])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[384])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[392])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[396])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[404])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[412])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[420])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[424])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[432])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[440])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[448])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[452])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[460])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[468])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[476])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[480])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[488])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[496])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[504])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[508])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[516])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[524])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[532])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[536])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[544])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[552])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[560])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[564])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[572])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[580])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[588])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[592])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[600])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[608])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[616])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[620])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[628])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[636])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[644])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[648])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[656])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[664])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[672])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[676])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[684])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[692])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[700])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[704])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[712])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[720])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[728])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[732])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[740])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[748])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[756])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[760])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[768])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[776])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[784])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[788])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[796])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[804])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[812])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[816])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[824])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[832])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[840])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[844])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[852])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[860])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[868])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[872])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[880])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[888])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[896])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[900])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[908])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[916])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[924])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[928])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[936])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[944])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[952])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[956])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[964])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[972])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[980])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[984])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[992])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1000])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1008])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[1012])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1020])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1028])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1036])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[1040])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1048])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1056])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1064])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[1068])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1076])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1084])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1092])
  {
    swift_release();
    result = (_QWORD *)swift_bridgeObjectRelease();
  }
  if (v1[1096])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1104])
  {
    swift_release();
    swift_bridgeObjectRelease();
    result = (_QWORD *)swift_release();
  }
  if (v1[1112])
  {
    swift_release();
    swift_bridgeObjectRelease();
    return (_QWORD *)swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for MemojiDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  uint64_t v449;
  uint64_t v450;
  uint64_t v451;
  uint64_t v452;
  uint64_t v453;
  uint64_t v454;
  uint64_t v455;
  uint64_t v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  uint64_t v465;
  uint64_t v466;
  uint64_t v467;
  uint64_t v468;
  uint64_t v469;
  uint64_t v470;
  __int128 v471;
  __int128 v472;
  __int128 v473;
  __int128 v474;
  __int128 v475;
  __int128 v476;
  __int128 v477;
  __int128 v478;
  __int128 v479;
  __int128 v480;
  __int128 v481;
  __int128 v482;
  __int128 v483;
  __int128 v484;
  __int128 v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  __int128 v492;
  __int128 v493;
  __int128 v494;
  __int128 v495;
  __int128 v496;
  __int128 v497;
  __int128 v498;
  __int128 v499;
  __int128 v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  __int128 v507;
  __int128 v508;
  __int128 v509;
  __int128 v510;
  __int128 v511;
  __int128 v512;
  __int128 v513;
  __int128 v514;
  __int128 v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  __int128 v522;
  __int128 v523;
  __int128 v524;
  __int128 v525;
  __int128 v526;
  __int128 v527;
  __int128 v528;
  __int128 v529;
  __int128 v530;
  __int128 v531;
  __int128 v532;
  __int128 v533;
  __int128 v534;
  __int128 v535;
  __int128 v536;
  __int128 v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  __int128 v544;
  __int128 v545;
  __int128 v546;
  __int128 v547;
  __int128 v548;
  __int128 v549;
  __int128 v550;
  __int128 v551;
  __int128 v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  __int128 v559;
  __int128 v560;
  __int128 v561;
  __int128 v562;
  __int128 v563;
  __int128 v564;
  __int128 v565;
  __int128 v566;
  __int128 v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  __int128 v574;
  __int128 v575;
  __int128 v576;
  __int128 v577;
  __int128 v578;
  __int128 v579;
  __int128 v580;
  __int128 v581;
  __int128 v582;
  __int128 v583;
  __int128 v584;
  __int128 v585;
  __int128 v586;
  __int128 v587;
  __int128 v588;
  __int128 v589;
  __int128 v590;
  __int128 v591;
  __int128 v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  __int128 v596;
  __int128 v597;
  __int128 v598;
  __int128 v599;
  __int128 v600;
  __int128 v601;
  __int128 v602;
  __int128 v603;
  __int128 v604;
  __int128 v605;
  __int128 v606;
  __int128 v607;
  __int128 v608;
  __int128 v609;
  __int128 v610;
  __int128 v611;
  __int128 v612;
  __int128 v613;
  __int128 v614;
  __int128 v615;
  __int128 v616;
  __int128 v617;
  __int128 v618;
  __int128 v619;
  __int128 v620;
  __int128 v621;
  __int128 v622;
  __int128 v623;
  __int128 v624;
  __int128 v625;
  __int128 v626;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    v5 = *(_QWORD *)(a2 + 16);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
    v6 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 16) = v5;
    *(_QWORD *)(a1 + 24) = v6;
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v7 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v7;
  }
  v8 = *(_QWORD *)(a2 + 32);
  if (v8)
  {
    v9 = *(_QWORD *)(a2 + 40);
    v10 = *(_QWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 32) = v8;
    *(_QWORD *)(a1 + 40) = v9;
    *(_QWORD *)(a1 + 48) = v10;
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    v11 = *(_QWORD *)(a2 + 80);
    *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
    *(_QWORD *)(a1 + 80) = v11;
    *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v12;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  }
  v13 = *(_QWORD *)(a2 + 96);
  if (v13)
  {
    v14 = *(_QWORD *)(a2 + 104);
    v15 = *(_QWORD *)(a2 + 112);
    *(_QWORD *)(a1 + 96) = v13;
    *(_QWORD *)(a1 + 104) = v14;
    *(_QWORD *)(a1 + 112) = v15;
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    v16 = *(_QWORD *)(a2 + 144);
    *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
    *(_QWORD *)(a1 + 144) = v16;
    *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v17 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v17;
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
  }
  v18 = *(_QWORD *)(a2 + 160);
  if (v18)
  {
    v19 = *(_QWORD *)(a2 + 168);
    v20 = *(_QWORD *)(a2 + 176);
    *(_QWORD *)(a1 + 160) = v18;
    *(_QWORD *)(a1 + 168) = v19;
    *(_QWORD *)(a1 + 176) = v20;
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    v21 = *(_QWORD *)(a2 + 208);
    *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
    *(_QWORD *)(a1 + 208) = v21;
    *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v22 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v22;
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
  }
  v23 = *(_QWORD *)(a2 + 224);
  if (v23)
  {
    v24 = *(_QWORD *)(a2 + 232);
    v25 = *(_QWORD *)(a2 + 240);
    *(_QWORD *)(a1 + 224) = v23;
    *(_QWORD *)(a1 + 232) = v24;
    v26 = *(_QWORD *)(a2 + 248);
    *(_QWORD *)(a1 + 240) = v25;
    *(_QWORD *)(a1 + 248) = v26;
    swift_retain();
    swift_bridgeObjectRetain();
    v27 = *(_QWORD *)(a2 + 256);
    if (v27)
      goto LABEL_15;
  }
  else
  {
    v471 = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 240) = v471;
    v27 = *(_QWORD *)(a2 + 256);
    if (v27)
    {
LABEL_15:
      v28 = *(_QWORD *)(a2 + 264);
      v29 = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 256) = v27;
      *(_QWORD *)(a1 + 264) = v28;
      v31 = *(_QWORD *)(a2 + 280);
      v30 = *(_QWORD *)(a2 + 288);
      *(_QWORD *)(a1 + 272) = v29;
      *(_QWORD *)(a1 + 280) = v31;
      v33 = *(_QWORD *)(a2 + 296);
      v32 = *(_QWORD *)(a2 + 304);
      *(_QWORD *)(a1 + 288) = v30;
      *(_QWORD *)(a1 + 296) = v33;
      *(_QWORD *)(a1 + 304) = v32;
      *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
      swift_retain();
      swift_bridgeObjectRetain();
      swift_retain();
      v34 = *(_QWORD *)(a2 + 320);
      if (v34)
        goto LABEL_16;
      goto LABEL_172;
    }
  }
  v472 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v472;
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 297) = *(_OWORD *)(a2 + 297);
  v34 = *(_QWORD *)(a2 + 320);
  if (v34)
  {
LABEL_16:
    v35 = *(_QWORD *)(a2 + 328);
    v36 = *(_QWORD *)(a2 + 336);
    *(_QWORD *)(a1 + 320) = v34;
    *(_QWORD *)(a1 + 328) = v35;
    v38 = *(_QWORD *)(a2 + 344);
    v37 = *(_QWORD *)(a2 + 352);
    *(_QWORD *)(a1 + 336) = v36;
    *(_QWORD *)(a1 + 344) = v38;
    v40 = *(_QWORD *)(a2 + 360);
    v39 = *(_QWORD *)(a2 + 368);
    *(_QWORD *)(a1 + 352) = v37;
    *(_QWORD *)(a1 + 360) = v40;
    *(_QWORD *)(a1 + 368) = v39;
    *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v41 = *(_QWORD *)(a2 + 384);
    if (v41)
      goto LABEL_17;
    goto LABEL_173;
  }
LABEL_172:
  v473 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v473;
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 361) = *(_OWORD *)(a2 + 361);
  v41 = *(_QWORD *)(a2 + 384);
  if (v41)
  {
LABEL_17:
    v42 = *(_QWORD *)(a2 + 392);
    v43 = *(_QWORD *)(a2 + 400);
    *(_QWORD *)(a1 + 384) = v41;
    *(_QWORD *)(a1 + 392) = v42;
    v45 = *(_QWORD *)(a2 + 408);
    v44 = *(_QWORD *)(a2 + 416);
    *(_QWORD *)(a1 + 400) = v43;
    *(_QWORD *)(a1 + 408) = v45;
    v47 = *(_QWORD *)(a2 + 424);
    v46 = *(_QWORD *)(a2 + 432);
    *(_QWORD *)(a1 + 416) = v44;
    *(_QWORD *)(a1 + 424) = v47;
    *(_QWORD *)(a1 + 432) = v46;
    *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v48 = *(_QWORD *)(a2 + 448);
    if (v48)
      goto LABEL_18;
    goto LABEL_174;
  }
LABEL_173:
  v474 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v474;
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 425) = *(_OWORD *)(a2 + 425);
  v48 = *(_QWORD *)(a2 + 448);
  if (v48)
  {
LABEL_18:
    v49 = *(_QWORD *)(a2 + 456);
    v50 = *(_QWORD *)(a2 + 464);
    *(_QWORD *)(a1 + 448) = v48;
    *(_QWORD *)(a1 + 456) = v49;
    v51 = *(_QWORD *)(a2 + 472);
    *(_QWORD *)(a1 + 464) = v50;
    *(_QWORD *)(a1 + 472) = v51;
    swift_retain();
    swift_bridgeObjectRetain();
    v52 = *(_QWORD *)(a2 + 480);
    if (v52)
      goto LABEL_19;
    goto LABEL_175;
  }
LABEL_174:
  v475 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v475;
  v52 = *(_QWORD *)(a2 + 480);
  if (v52)
  {
LABEL_19:
    v53 = *(_QWORD *)(a2 + 488);
    v54 = *(_QWORD *)(a2 + 496);
    *(_QWORD *)(a1 + 480) = v52;
    *(_QWORD *)(a1 + 488) = v53;
    v56 = *(_QWORD *)(a2 + 504);
    v55 = *(_QWORD *)(a2 + 512);
    *(_QWORD *)(a1 + 496) = v54;
    *(_QWORD *)(a1 + 504) = v56;
    v57 = *(_QWORD *)(a2 + 520);
    *(_QWORD *)(a1 + 512) = v55;
    *(_QWORD *)(a1 + 520) = v57;
    *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
    *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v58 = *(_QWORD *)(a2 + 544);
    if (v58)
      goto LABEL_20;
    goto LABEL_176;
  }
LABEL_175:
  v476 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v476;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 521) = *(_OWORD *)(a2 + 521);
  v58 = *(_QWORD *)(a2 + 544);
  if (v58)
  {
LABEL_20:
    v59 = *(_QWORD *)(a2 + 552);
    *(_QWORD *)(a1 + 544) = v58;
    *(_QWORD *)(a1 + 552) = v59;
    *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
    *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
    v60 = *(_QWORD *)(a2 + 584);
    *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
    *(_QWORD *)(a1 + 584) = v60;
    *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
    *(_BYTE *)(a1 + 600) = *(_BYTE *)(a2 + 600);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v61 = *(_QWORD *)(a2 + 608);
    if (v61)
      goto LABEL_21;
    goto LABEL_177;
  }
LABEL_176:
  v477 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v477;
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 585) = *(_OWORD *)(a2 + 585);
  v61 = *(_QWORD *)(a2 + 608);
  if (v61)
  {
LABEL_21:
    v62 = *(_QWORD *)(a2 + 616);
    *(_QWORD *)(a1 + 608) = v61;
    *(_QWORD *)(a1 + 616) = v62;
    *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
    *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
    v63 = *(_QWORD *)(a2 + 648);
    *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
    *(_QWORD *)(a1 + 648) = v63;
    *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
    *(_BYTE *)(a1 + 664) = *(_BYTE *)(a2 + 664);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v64 = *(_QWORD *)(a2 + 672);
    if (v64)
      goto LABEL_22;
    goto LABEL_178;
  }
LABEL_177:
  v478 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v478;
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 649) = *(_OWORD *)(a2 + 649);
  v64 = *(_QWORD *)(a2 + 672);
  if (v64)
  {
LABEL_22:
    v65 = *(_QWORD *)(a2 + 680);
    *(_QWORD *)(a1 + 672) = v64;
    *(_QWORD *)(a1 + 680) = v65;
    *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
    *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
    swift_retain();
    swift_bridgeObjectRetain();
    v66 = *(_QWORD *)(a2 + 704);
    if (v66)
      goto LABEL_23;
    goto LABEL_179;
  }
LABEL_178:
  v479 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v479;
  v66 = *(_QWORD *)(a2 + 704);
  if (v66)
  {
LABEL_23:
    v67 = *(_QWORD *)(a2 + 712);
    *(_QWORD *)(a1 + 704) = v66;
    *(_QWORD *)(a1 + 712) = v67;
    *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
    *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
    v68 = *(_QWORD *)(a2 + 744);
    *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
    *(_QWORD *)(a1 + 744) = v68;
    *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
    *(_BYTE *)(a1 + 760) = *(_BYTE *)(a2 + 760);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v69 = *(_QWORD *)(a2 + 768);
    if (v69)
      goto LABEL_24;
    goto LABEL_180;
  }
LABEL_179:
  v480 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 720) = v480;
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 745) = *(_OWORD *)(a2 + 745);
  v69 = *(_QWORD *)(a2 + 768);
  if (v69)
  {
LABEL_24:
    v70 = *(_QWORD *)(a2 + 776);
    *(_QWORD *)(a1 + 768) = v69;
    *(_QWORD *)(a1 + 776) = v70;
    *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
    *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
    v71 = *(_QWORD *)(a2 + 808);
    *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
    *(_QWORD *)(a1 + 808) = v71;
    *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
    *(_BYTE *)(a1 + 824) = *(_BYTE *)(a2 + 824);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v72 = *(_QWORD *)(a2 + 832);
    if (v72)
      goto LABEL_25;
    goto LABEL_181;
  }
LABEL_180:
  v481 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v481;
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 809) = *(_OWORD *)(a2 + 809);
  v72 = *(_QWORD *)(a2 + 832);
  if (v72)
  {
LABEL_25:
    v73 = *(_QWORD *)(a2 + 840);
    *(_QWORD *)(a1 + 832) = v72;
    *(_QWORD *)(a1 + 840) = v73;
    *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
    *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
    v74 = *(_QWORD *)(a2 + 872);
    *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
    *(_QWORD *)(a1 + 872) = v74;
    *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
    *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v75 = *(_QWORD *)(a2 + 896);
    if (v75)
      goto LABEL_26;
    goto LABEL_182;
  }
LABEL_181:
  v482 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v482;
  *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 873) = *(_OWORD *)(a2 + 873);
  v75 = *(_QWORD *)(a2 + 896);
  if (v75)
  {
LABEL_26:
    v76 = *(_QWORD *)(a2 + 904);
    *(_QWORD *)(a1 + 896) = v75;
    *(_QWORD *)(a1 + 904) = v76;
    *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
    *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
    swift_retain();
    swift_bridgeObjectRetain();
    v77 = *(_QWORD *)(a2 + 928);
    if (v77)
      goto LABEL_27;
    goto LABEL_183;
  }
LABEL_182:
  v483 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v483;
  v77 = *(_QWORD *)(a2 + 928);
  if (v77)
  {
LABEL_27:
    v78 = *(_QWORD *)(a2 + 936);
    *(_QWORD *)(a1 + 928) = v77;
    *(_QWORD *)(a1 + 936) = v78;
    *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
    *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
    v79 = *(_QWORD *)(a2 + 968);
    *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
    *(_QWORD *)(a1 + 968) = v79;
    *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
    *(_BYTE *)(a1 + 984) = *(_BYTE *)(a2 + 984);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v80 = *(_QWORD *)(a2 + 992);
    if (v80)
      goto LABEL_28;
    goto LABEL_184;
  }
LABEL_183:
  v484 = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 928) = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 944) = v484;
  *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 969) = *(_OWORD *)(a2 + 969);
  v80 = *(_QWORD *)(a2 + 992);
  if (v80)
  {
LABEL_28:
    v81 = *(_QWORD *)(a2 + 1000);
    *(_QWORD *)(a1 + 992) = v80;
    *(_QWORD *)(a1 + 1000) = v81;
    *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
    *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
    v82 = *(_QWORD *)(a2 + 1032);
    *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
    *(_QWORD *)(a1 + 1032) = v82;
    *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
    *(_BYTE *)(a1 + 1048) = *(_BYTE *)(a2 + 1048);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v83 = *(_QWORD *)(a2 + 1056);
    if (v83)
      goto LABEL_29;
    goto LABEL_185;
  }
LABEL_184:
  v485 = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
  *(_OWORD *)(a1 + 1008) = v485;
  *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1033) = *(_OWORD *)(a2 + 1033);
  v83 = *(_QWORD *)(a2 + 1056);
  if (v83)
  {
LABEL_29:
    v84 = *(_QWORD *)(a2 + 1064);
    *(_QWORD *)(a1 + 1056) = v83;
    *(_QWORD *)(a1 + 1064) = v84;
    *(_QWORD *)(a1 + 1072) = *(_QWORD *)(a2 + 1072);
    *(_QWORD *)(a1 + 1080) = *(_QWORD *)(a2 + 1080);
    v85 = *(_QWORD *)(a2 + 1096);
    *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
    *(_QWORD *)(a1 + 1096) = v85;
    *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
    *(_BYTE *)(a1 + 1112) = *(_BYTE *)(a2 + 1112);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v86 = *(_QWORD *)(a2 + 1120);
    if (v86)
      goto LABEL_30;
    goto LABEL_186;
  }
LABEL_185:
  v486 = *(_OWORD *)(a2 + 1072);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = v486;
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1097) = *(_OWORD *)(a2 + 1097);
  v86 = *(_QWORD *)(a2 + 1120);
  if (v86)
  {
LABEL_30:
    v87 = *(_QWORD *)(a2 + 1128);
    *(_QWORD *)(a1 + 1120) = v86;
    *(_QWORD *)(a1 + 1128) = v87;
    *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
    *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
    swift_retain();
    swift_bridgeObjectRetain();
    v88 = *(_QWORD *)(a2 + 1152);
    if (v88)
      goto LABEL_31;
    goto LABEL_187;
  }
LABEL_186:
  v487 = *(_OWORD *)(a2 + 1136);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(_OWORD *)(a1 + 1136) = v487;
  v88 = *(_QWORD *)(a2 + 1152);
  if (v88)
  {
LABEL_31:
    v89 = *(_QWORD *)(a2 + 1160);
    *(_QWORD *)(a1 + 1152) = v88;
    *(_QWORD *)(a1 + 1160) = v89;
    *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
    *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
    v90 = *(_QWORD *)(a2 + 1192);
    *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
    *(_QWORD *)(a1 + 1192) = v90;
    *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
    *(_BYTE *)(a1 + 1208) = *(_BYTE *)(a2 + 1208);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v91 = *(_QWORD *)(a2 + 1216);
    if (v91)
      goto LABEL_32;
    goto LABEL_188;
  }
LABEL_187:
  v488 = *(_OWORD *)(a2 + 1168);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = v488;
  *(_OWORD *)(a1 + 1184) = *(_OWORD *)(a2 + 1184);
  *(_OWORD *)(a1 + 1193) = *(_OWORD *)(a2 + 1193);
  v91 = *(_QWORD *)(a2 + 1216);
  if (v91)
  {
LABEL_32:
    v92 = *(_QWORD *)(a2 + 1224);
    *(_QWORD *)(a1 + 1216) = v91;
    *(_QWORD *)(a1 + 1224) = v92;
    *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
    *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
    v93 = *(_QWORD *)(a2 + 1256);
    *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
    *(_QWORD *)(a1 + 1256) = v93;
    *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
    *(_BYTE *)(a1 + 1272) = *(_BYTE *)(a2 + 1272);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v94 = *(_QWORD *)(a2 + 1280);
    if (v94)
      goto LABEL_33;
    goto LABEL_189;
  }
LABEL_188:
  v489 = *(_OWORD *)(a2 + 1232);
  *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
  *(_OWORD *)(a1 + 1232) = v489;
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(_OWORD *)(a1 + 1257) = *(_OWORD *)(a2 + 1257);
  v94 = *(_QWORD *)(a2 + 1280);
  if (v94)
  {
LABEL_33:
    v95 = *(_QWORD *)(a2 + 1288);
    *(_QWORD *)(a1 + 1280) = v94;
    *(_QWORD *)(a1 + 1288) = v95;
    *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
    *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
    v96 = *(_QWORD *)(a2 + 1320);
    *(_QWORD *)(a1 + 1312) = *(_QWORD *)(a2 + 1312);
    *(_QWORD *)(a1 + 1320) = v96;
    *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
    *(_BYTE *)(a1 + 1336) = *(_BYTE *)(a2 + 1336);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v97 = *(_QWORD *)(a2 + 1344);
    if (v97)
      goto LABEL_34;
    goto LABEL_190;
  }
LABEL_189:
  v490 = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
  *(_OWORD *)(a1 + 1296) = v490;
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(_OWORD *)(a1 + 1321) = *(_OWORD *)(a2 + 1321);
  v97 = *(_QWORD *)(a2 + 1344);
  if (v97)
  {
LABEL_34:
    v98 = *(_QWORD *)(a2 + 1352);
    *(_QWORD *)(a1 + 1344) = v97;
    *(_QWORD *)(a1 + 1352) = v98;
    *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
    *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
    swift_retain();
    swift_bridgeObjectRetain();
    v99 = *(_QWORD *)(a2 + 1376);
    if (v99)
      goto LABEL_35;
    goto LABEL_191;
  }
LABEL_190:
  v491 = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1360) = v491;
  v99 = *(_QWORD *)(a2 + 1376);
  if (v99)
  {
LABEL_35:
    v100 = *(_QWORD *)(a2 + 1384);
    *(_QWORD *)(a1 + 1376) = v99;
    *(_QWORD *)(a1 + 1384) = v100;
    *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
    *(_QWORD *)(a1 + 1400) = *(_QWORD *)(a2 + 1400);
    v101 = *(_QWORD *)(a2 + 1416);
    *(_QWORD *)(a1 + 1408) = *(_QWORD *)(a2 + 1408);
    *(_QWORD *)(a1 + 1416) = v101;
    *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
    *(_BYTE *)(a1 + 1432) = *(_BYTE *)(a2 + 1432);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v102 = *(_QWORD *)(a2 + 1440);
    if (v102)
      goto LABEL_36;
    goto LABEL_192;
  }
LABEL_191:
  v492 = *(_OWORD *)(a2 + 1392);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1392) = v492;
  *(_OWORD *)(a1 + 1408) = *(_OWORD *)(a2 + 1408);
  *(_OWORD *)(a1 + 1417) = *(_OWORD *)(a2 + 1417);
  v102 = *(_QWORD *)(a2 + 1440);
  if (v102)
  {
LABEL_36:
    v103 = *(_QWORD *)(a2 + 1448);
    *(_QWORD *)(a1 + 1440) = v102;
    *(_QWORD *)(a1 + 1448) = v103;
    *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
    *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
    v104 = *(_QWORD *)(a2 + 1480);
    *(_QWORD *)(a1 + 1472) = *(_QWORD *)(a2 + 1472);
    *(_QWORD *)(a1 + 1480) = v104;
    *(_QWORD *)(a1 + 1488) = *(_QWORD *)(a2 + 1488);
    *(_BYTE *)(a1 + 1496) = *(_BYTE *)(a2 + 1496);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v105 = *(_QWORD *)(a2 + 1504);
    if (v105)
      goto LABEL_37;
    goto LABEL_193;
  }
LABEL_192:
  v493 = *(_OWORD *)(a2 + 1456);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = v493;
  *(_OWORD *)(a1 + 1472) = *(_OWORD *)(a2 + 1472);
  *(_OWORD *)(a1 + 1481) = *(_OWORD *)(a2 + 1481);
  v105 = *(_QWORD *)(a2 + 1504);
  if (v105)
  {
LABEL_37:
    v106 = *(_QWORD *)(a2 + 1512);
    *(_QWORD *)(a1 + 1504) = v105;
    *(_QWORD *)(a1 + 1512) = v106;
    *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
    *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
    v107 = *(_QWORD *)(a2 + 1544);
    *(_QWORD *)(a1 + 1536) = *(_QWORD *)(a2 + 1536);
    *(_QWORD *)(a1 + 1544) = v107;
    *(_QWORD *)(a1 + 1552) = *(_QWORD *)(a2 + 1552);
    *(_BYTE *)(a1 + 1560) = *(_BYTE *)(a2 + 1560);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v108 = *(_QWORD *)(a2 + 1568);
    if (v108)
      goto LABEL_38;
    goto LABEL_194;
  }
LABEL_193:
  v494 = *(_OWORD *)(a2 + 1520);
  *(_OWORD *)(a1 + 1504) = *(_OWORD *)(a2 + 1504);
  *(_OWORD *)(a1 + 1520) = v494;
  *(_OWORD *)(a1 + 1536) = *(_OWORD *)(a2 + 1536);
  *(_OWORD *)(a1 + 1545) = *(_OWORD *)(a2 + 1545);
  v108 = *(_QWORD *)(a2 + 1568);
  if (v108)
  {
LABEL_38:
    v109 = *(_QWORD *)(a2 + 1576);
    *(_QWORD *)(a1 + 1568) = v108;
    *(_QWORD *)(a1 + 1576) = v109;
    *(_QWORD *)(a1 + 1584) = *(_QWORD *)(a2 + 1584);
    *(_QWORD *)(a1 + 1592) = *(_QWORD *)(a2 + 1592);
    swift_retain();
    swift_bridgeObjectRetain();
    v110 = *(_QWORD *)(a2 + 1600);
    if (v110)
      goto LABEL_39;
    goto LABEL_195;
  }
LABEL_194:
  v495 = *(_OWORD *)(a2 + 1584);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1584) = v495;
  v110 = *(_QWORD *)(a2 + 1600);
  if (v110)
  {
LABEL_39:
    v111 = *(_QWORD *)(a2 + 1608);
    *(_QWORD *)(a1 + 1600) = v110;
    *(_QWORD *)(a1 + 1608) = v111;
    *(_QWORD *)(a1 + 1616) = *(_QWORD *)(a2 + 1616);
    *(_QWORD *)(a1 + 1624) = *(_QWORD *)(a2 + 1624);
    v112 = *(_QWORD *)(a2 + 1640);
    *(_QWORD *)(a1 + 1632) = *(_QWORD *)(a2 + 1632);
    *(_QWORD *)(a1 + 1640) = v112;
    *(_QWORD *)(a1 + 1648) = *(_QWORD *)(a2 + 1648);
    *(_BYTE *)(a1 + 1656) = *(_BYTE *)(a2 + 1656);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v113 = *(_QWORD *)(a2 + 1664);
    if (v113)
      goto LABEL_40;
    goto LABEL_196;
  }
LABEL_195:
  v496 = *(_OWORD *)(a2 + 1616);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  *(_OWORD *)(a1 + 1616) = v496;
  *(_OWORD *)(a1 + 1632) = *(_OWORD *)(a2 + 1632);
  *(_OWORD *)(a1 + 1641) = *(_OWORD *)(a2 + 1641);
  v113 = *(_QWORD *)(a2 + 1664);
  if (v113)
  {
LABEL_40:
    v114 = *(_QWORD *)(a2 + 1672);
    *(_QWORD *)(a1 + 1664) = v113;
    *(_QWORD *)(a1 + 1672) = v114;
    *(_QWORD *)(a1 + 1680) = *(_QWORD *)(a2 + 1680);
    *(_QWORD *)(a1 + 1688) = *(_QWORD *)(a2 + 1688);
    v115 = *(_QWORD *)(a2 + 1704);
    *(_QWORD *)(a1 + 1696) = *(_QWORD *)(a2 + 1696);
    *(_QWORD *)(a1 + 1704) = v115;
    *(_QWORD *)(a1 + 1712) = *(_QWORD *)(a2 + 1712);
    *(_BYTE *)(a1 + 1720) = *(_BYTE *)(a2 + 1720);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v116 = *(_QWORD *)(a2 + 1728);
    if (v116)
      goto LABEL_41;
    goto LABEL_197;
  }
LABEL_196:
  v497 = *(_OWORD *)(a2 + 1680);
  *(_OWORD *)(a1 + 1664) = *(_OWORD *)(a2 + 1664);
  *(_OWORD *)(a1 + 1680) = v497;
  *(_OWORD *)(a1 + 1696) = *(_OWORD *)(a2 + 1696);
  *(_OWORD *)(a1 + 1705) = *(_OWORD *)(a2 + 1705);
  v116 = *(_QWORD *)(a2 + 1728);
  if (v116)
  {
LABEL_41:
    v117 = *(_QWORD *)(a2 + 1736);
    *(_QWORD *)(a1 + 1728) = v116;
    *(_QWORD *)(a1 + 1736) = v117;
    *(_QWORD *)(a1 + 1744) = *(_QWORD *)(a2 + 1744);
    *(_QWORD *)(a1 + 1752) = *(_QWORD *)(a2 + 1752);
    v118 = *(_QWORD *)(a2 + 1768);
    *(_QWORD *)(a1 + 1760) = *(_QWORD *)(a2 + 1760);
    *(_QWORD *)(a1 + 1768) = v118;
    *(_QWORD *)(a1 + 1776) = *(_QWORD *)(a2 + 1776);
    *(_BYTE *)(a1 + 1784) = *(_BYTE *)(a2 + 1784);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v119 = *(_QWORD *)(a2 + 1792);
    if (v119)
      goto LABEL_42;
    goto LABEL_198;
  }
LABEL_197:
  v498 = *(_OWORD *)(a2 + 1744);
  *(_OWORD *)(a1 + 1728) = *(_OWORD *)(a2 + 1728);
  *(_OWORD *)(a1 + 1744) = v498;
  *(_OWORD *)(a1 + 1760) = *(_OWORD *)(a2 + 1760);
  *(_OWORD *)(a1 + 1769) = *(_OWORD *)(a2 + 1769);
  v119 = *(_QWORD *)(a2 + 1792);
  if (v119)
  {
LABEL_42:
    v120 = *(_QWORD *)(a2 + 1800);
    *(_QWORD *)(a1 + 1792) = v119;
    *(_QWORD *)(a1 + 1800) = v120;
    *(_QWORD *)(a1 + 1808) = *(_QWORD *)(a2 + 1808);
    *(_QWORD *)(a1 + 1816) = *(_QWORD *)(a2 + 1816);
    swift_retain();
    swift_bridgeObjectRetain();
    v121 = *(_QWORD *)(a2 + 1824);
    if (v121)
      goto LABEL_43;
    goto LABEL_199;
  }
LABEL_198:
  v499 = *(_OWORD *)(a2 + 1808);
  *(_OWORD *)(a1 + 1792) = *(_OWORD *)(a2 + 1792);
  *(_OWORD *)(a1 + 1808) = v499;
  v121 = *(_QWORD *)(a2 + 1824);
  if (v121)
  {
LABEL_43:
    v122 = *(_QWORD *)(a2 + 1832);
    *(_QWORD *)(a1 + 1824) = v121;
    *(_QWORD *)(a1 + 1832) = v122;
    *(_QWORD *)(a1 + 1840) = *(_QWORD *)(a2 + 1840);
    *(_QWORD *)(a1 + 1848) = *(_QWORD *)(a2 + 1848);
    v123 = *(_QWORD *)(a2 + 1864);
    *(_QWORD *)(a1 + 1856) = *(_QWORD *)(a2 + 1856);
    *(_QWORD *)(a1 + 1864) = v123;
    *(_QWORD *)(a1 + 1872) = *(_QWORD *)(a2 + 1872);
    *(_BYTE *)(a1 + 1880) = *(_BYTE *)(a2 + 1880);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v124 = *(_QWORD *)(a2 + 1888);
    if (v124)
      goto LABEL_44;
    goto LABEL_200;
  }
LABEL_199:
  v500 = *(_OWORD *)(a2 + 1840);
  *(_OWORD *)(a1 + 1824) = *(_OWORD *)(a2 + 1824);
  *(_OWORD *)(a1 + 1840) = v500;
  *(_OWORD *)(a1 + 1856) = *(_OWORD *)(a2 + 1856);
  *(_OWORD *)(a1 + 1865) = *(_OWORD *)(a2 + 1865);
  v124 = *(_QWORD *)(a2 + 1888);
  if (v124)
  {
LABEL_44:
    v125 = *(_QWORD *)(a2 + 1896);
    *(_QWORD *)(a1 + 1888) = v124;
    *(_QWORD *)(a1 + 1896) = v125;
    *(_QWORD *)(a1 + 1904) = *(_QWORD *)(a2 + 1904);
    *(_QWORD *)(a1 + 1912) = *(_QWORD *)(a2 + 1912);
    v126 = *(_QWORD *)(a2 + 1928);
    *(_QWORD *)(a1 + 1920) = *(_QWORD *)(a2 + 1920);
    *(_QWORD *)(a1 + 1928) = v126;
    *(_QWORD *)(a1 + 1936) = *(_QWORD *)(a2 + 1936);
    *(_BYTE *)(a1 + 1944) = *(_BYTE *)(a2 + 1944);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v127 = *(_QWORD *)(a2 + 1952);
    if (v127)
      goto LABEL_45;
    goto LABEL_201;
  }
LABEL_200:
  v501 = *(_OWORD *)(a2 + 1904);
  *(_OWORD *)(a1 + 1888) = *(_OWORD *)(a2 + 1888);
  *(_OWORD *)(a1 + 1904) = v501;
  *(_OWORD *)(a1 + 1920) = *(_OWORD *)(a2 + 1920);
  *(_OWORD *)(a1 + 1929) = *(_OWORD *)(a2 + 1929);
  v127 = *(_QWORD *)(a2 + 1952);
  if (v127)
  {
LABEL_45:
    v128 = *(_QWORD *)(a2 + 1960);
    *(_QWORD *)(a1 + 1952) = v127;
    *(_QWORD *)(a1 + 1960) = v128;
    *(_QWORD *)(a1 + 1968) = *(_QWORD *)(a2 + 1968);
    *(_QWORD *)(a1 + 1976) = *(_QWORD *)(a2 + 1976);
    v129 = *(_QWORD *)(a2 + 1992);
    *(_QWORD *)(a1 + 1984) = *(_QWORD *)(a2 + 1984);
    *(_QWORD *)(a1 + 1992) = v129;
    *(_QWORD *)(a1 + 2000) = *(_QWORD *)(a2 + 2000);
    *(_BYTE *)(a1 + 2008) = *(_BYTE *)(a2 + 2008);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v130 = *(_QWORD *)(a2 + 2016);
    if (v130)
      goto LABEL_46;
    goto LABEL_202;
  }
LABEL_201:
  v502 = *(_OWORD *)(a2 + 1968);
  *(_OWORD *)(a1 + 1952) = *(_OWORD *)(a2 + 1952);
  *(_OWORD *)(a1 + 1968) = v502;
  *(_OWORD *)(a1 + 1984) = *(_OWORD *)(a2 + 1984);
  *(_OWORD *)(a1 + 1993) = *(_OWORD *)(a2 + 1993);
  v130 = *(_QWORD *)(a2 + 2016);
  if (v130)
  {
LABEL_46:
    v131 = *(_QWORD *)(a2 + 2024);
    *(_QWORD *)(a1 + 2016) = v130;
    *(_QWORD *)(a1 + 2024) = v131;
    *(_QWORD *)(a1 + 2032) = *(_QWORD *)(a2 + 2032);
    *(_QWORD *)(a1 + 2040) = *(_QWORD *)(a2 + 2040);
    swift_retain();
    swift_bridgeObjectRetain();
    v132 = *(_QWORD *)(a2 + 2048);
    if (v132)
      goto LABEL_47;
    goto LABEL_203;
  }
LABEL_202:
  v503 = *(_OWORD *)(a2 + 2032);
  *(_OWORD *)(a1 + 2016) = *(_OWORD *)(a2 + 2016);
  *(_OWORD *)(a1 + 2032) = v503;
  v132 = *(_QWORD *)(a2 + 2048);
  if (v132)
  {
LABEL_47:
    v133 = *(_QWORD *)(a2 + 2056);
    *(_QWORD *)(a1 + 2048) = v132;
    *(_QWORD *)(a1 + 2056) = v133;
    *(_QWORD *)(a1 + 2064) = *(_QWORD *)(a2 + 2064);
    *(_QWORD *)(a1 + 2072) = *(_QWORD *)(a2 + 2072);
    v134 = *(_QWORD *)(a2 + 2088);
    *(_QWORD *)(a1 + 2080) = *(_QWORD *)(a2 + 2080);
    *(_QWORD *)(a1 + 2088) = v134;
    *(_QWORD *)(a1 + 2096) = *(_QWORD *)(a2 + 2096);
    *(_BYTE *)(a1 + 2104) = *(_BYTE *)(a2 + 2104);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v135 = *(_QWORD *)(a2 + 2112);
    if (v135)
      goto LABEL_48;
    goto LABEL_204;
  }
LABEL_203:
  v504 = *(_OWORD *)(a2 + 2064);
  *(_OWORD *)(a1 + 2048) = *(_OWORD *)(a2 + 2048);
  *(_OWORD *)(a1 + 2064) = v504;
  *(_OWORD *)(a1 + 2080) = *(_OWORD *)(a2 + 2080);
  *(_OWORD *)(a1 + 2089) = *(_OWORD *)(a2 + 2089);
  v135 = *(_QWORD *)(a2 + 2112);
  if (v135)
  {
LABEL_48:
    v136 = *(_QWORD *)(a2 + 2120);
    *(_QWORD *)(a1 + 2112) = v135;
    *(_QWORD *)(a1 + 2120) = v136;
    *(_QWORD *)(a1 + 2128) = *(_QWORD *)(a2 + 2128);
    *(_QWORD *)(a1 + 2136) = *(_QWORD *)(a2 + 2136);
    v137 = *(_QWORD *)(a2 + 2152);
    *(_QWORD *)(a1 + 2144) = *(_QWORD *)(a2 + 2144);
    *(_QWORD *)(a1 + 2152) = v137;
    *(_QWORD *)(a1 + 2160) = *(_QWORD *)(a2 + 2160);
    *(_BYTE *)(a1 + 2168) = *(_BYTE *)(a2 + 2168);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v138 = *(_QWORD *)(a2 + 2176);
    if (v138)
      goto LABEL_49;
    goto LABEL_205;
  }
LABEL_204:
  v505 = *(_OWORD *)(a2 + 2128);
  *(_OWORD *)(a1 + 2112) = *(_OWORD *)(a2 + 2112);
  *(_OWORD *)(a1 + 2128) = v505;
  *(_OWORD *)(a1 + 2144) = *(_OWORD *)(a2 + 2144);
  *(_OWORD *)(a1 + 2153) = *(_OWORD *)(a2 + 2153);
  v138 = *(_QWORD *)(a2 + 2176);
  if (v138)
  {
LABEL_49:
    v139 = *(_QWORD *)(a2 + 2184);
    *(_QWORD *)(a1 + 2176) = v138;
    *(_QWORD *)(a1 + 2184) = v139;
    *(_QWORD *)(a1 + 2192) = *(_QWORD *)(a2 + 2192);
    *(_QWORD *)(a1 + 2200) = *(_QWORD *)(a2 + 2200);
    v140 = *(_QWORD *)(a2 + 2216);
    *(_QWORD *)(a1 + 2208) = *(_QWORD *)(a2 + 2208);
    *(_QWORD *)(a1 + 2216) = v140;
    *(_QWORD *)(a1 + 2224) = *(_QWORD *)(a2 + 2224);
    *(_BYTE *)(a1 + 2232) = *(_BYTE *)(a2 + 2232);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v141 = *(_QWORD *)(a2 + 2240);
    if (v141)
      goto LABEL_50;
    goto LABEL_206;
  }
LABEL_205:
  v506 = *(_OWORD *)(a2 + 2192);
  *(_OWORD *)(a1 + 2176) = *(_OWORD *)(a2 + 2176);
  *(_OWORD *)(a1 + 2192) = v506;
  *(_OWORD *)(a1 + 2208) = *(_OWORD *)(a2 + 2208);
  *(_OWORD *)(a1 + 2217) = *(_OWORD *)(a2 + 2217);
  v141 = *(_QWORD *)(a2 + 2240);
  if (v141)
  {
LABEL_50:
    v142 = *(_QWORD *)(a2 + 2248);
    *(_QWORD *)(a1 + 2240) = v141;
    *(_QWORD *)(a1 + 2248) = v142;
    *(_QWORD *)(a1 + 2256) = *(_QWORD *)(a2 + 2256);
    *(_QWORD *)(a1 + 2264) = *(_QWORD *)(a2 + 2264);
    swift_retain();
    swift_bridgeObjectRetain();
    v143 = *(_QWORD *)(a2 + 2272);
    if (v143)
      goto LABEL_51;
    goto LABEL_207;
  }
LABEL_206:
  v507 = *(_OWORD *)(a2 + 2256);
  *(_OWORD *)(a1 + 2240) = *(_OWORD *)(a2 + 2240);
  *(_OWORD *)(a1 + 2256) = v507;
  v143 = *(_QWORD *)(a2 + 2272);
  if (v143)
  {
LABEL_51:
    v144 = *(_QWORD *)(a2 + 2280);
    *(_QWORD *)(a1 + 2272) = v143;
    *(_QWORD *)(a1 + 2280) = v144;
    *(_QWORD *)(a1 + 2288) = *(_QWORD *)(a2 + 2288);
    *(_QWORD *)(a1 + 2296) = *(_QWORD *)(a2 + 2296);
    v145 = *(_QWORD *)(a2 + 2312);
    *(_QWORD *)(a1 + 2304) = *(_QWORD *)(a2 + 2304);
    *(_QWORD *)(a1 + 2312) = v145;
    *(_QWORD *)(a1 + 2320) = *(_QWORD *)(a2 + 2320);
    *(_BYTE *)(a1 + 2328) = *(_BYTE *)(a2 + 2328);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v146 = *(_QWORD *)(a2 + 2336);
    if (v146)
      goto LABEL_52;
    goto LABEL_208;
  }
LABEL_207:
  v508 = *(_OWORD *)(a2 + 2288);
  *(_OWORD *)(a1 + 2272) = *(_OWORD *)(a2 + 2272);
  *(_OWORD *)(a1 + 2288) = v508;
  *(_OWORD *)(a1 + 2304) = *(_OWORD *)(a2 + 2304);
  *(_OWORD *)(a1 + 2313) = *(_OWORD *)(a2 + 2313);
  v146 = *(_QWORD *)(a2 + 2336);
  if (v146)
  {
LABEL_52:
    v147 = *(_QWORD *)(a2 + 2344);
    *(_QWORD *)(a1 + 2336) = v146;
    *(_QWORD *)(a1 + 2344) = v147;
    *(_QWORD *)(a1 + 2352) = *(_QWORD *)(a2 + 2352);
    *(_QWORD *)(a1 + 2360) = *(_QWORD *)(a2 + 2360);
    v148 = *(_QWORD *)(a2 + 2376);
    *(_QWORD *)(a1 + 2368) = *(_QWORD *)(a2 + 2368);
    *(_QWORD *)(a1 + 2376) = v148;
    *(_QWORD *)(a1 + 2384) = *(_QWORD *)(a2 + 2384);
    *(_BYTE *)(a1 + 2392) = *(_BYTE *)(a2 + 2392);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v149 = *(_QWORD *)(a2 + 2400);
    if (v149)
      goto LABEL_53;
    goto LABEL_209;
  }
LABEL_208:
  v509 = *(_OWORD *)(a2 + 2352);
  *(_OWORD *)(a1 + 2336) = *(_OWORD *)(a2 + 2336);
  *(_OWORD *)(a1 + 2352) = v509;
  *(_OWORD *)(a1 + 2368) = *(_OWORD *)(a2 + 2368);
  *(_OWORD *)(a1 + 2377) = *(_OWORD *)(a2 + 2377);
  v149 = *(_QWORD *)(a2 + 2400);
  if (v149)
  {
LABEL_53:
    v150 = *(_QWORD *)(a2 + 2408);
    *(_QWORD *)(a1 + 2400) = v149;
    *(_QWORD *)(a1 + 2408) = v150;
    *(_QWORD *)(a1 + 2416) = *(_QWORD *)(a2 + 2416);
    *(_QWORD *)(a1 + 2424) = *(_QWORD *)(a2 + 2424);
    v151 = *(_QWORD *)(a2 + 2440);
    *(_QWORD *)(a1 + 2432) = *(_QWORD *)(a2 + 2432);
    *(_QWORD *)(a1 + 2440) = v151;
    *(_QWORD *)(a1 + 2448) = *(_QWORD *)(a2 + 2448);
    *(_BYTE *)(a1 + 2456) = *(_BYTE *)(a2 + 2456);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v152 = *(_QWORD *)(a2 + 2464);
    if (v152)
      goto LABEL_54;
    goto LABEL_210;
  }
LABEL_209:
  v510 = *(_OWORD *)(a2 + 2416);
  *(_OWORD *)(a1 + 2400) = *(_OWORD *)(a2 + 2400);
  *(_OWORD *)(a1 + 2416) = v510;
  *(_OWORD *)(a1 + 2432) = *(_OWORD *)(a2 + 2432);
  *(_OWORD *)(a1 + 2441) = *(_OWORD *)(a2 + 2441);
  v152 = *(_QWORD *)(a2 + 2464);
  if (v152)
  {
LABEL_54:
    v153 = *(_QWORD *)(a2 + 2472);
    *(_QWORD *)(a1 + 2464) = v152;
    *(_QWORD *)(a1 + 2472) = v153;
    *(_QWORD *)(a1 + 2480) = *(_QWORD *)(a2 + 2480);
    *(_QWORD *)(a1 + 2488) = *(_QWORD *)(a2 + 2488);
    swift_retain();
    swift_bridgeObjectRetain();
    v154 = *(_QWORD *)(a2 + 2496);
    if (v154)
      goto LABEL_55;
    goto LABEL_211;
  }
LABEL_210:
  v511 = *(_OWORD *)(a2 + 2480);
  *(_OWORD *)(a1 + 2464) = *(_OWORD *)(a2 + 2464);
  *(_OWORD *)(a1 + 2480) = v511;
  v154 = *(_QWORD *)(a2 + 2496);
  if (v154)
  {
LABEL_55:
    v155 = *(_QWORD *)(a2 + 2504);
    *(_QWORD *)(a1 + 2496) = v154;
    *(_QWORD *)(a1 + 2504) = v155;
    *(_QWORD *)(a1 + 2512) = *(_QWORD *)(a2 + 2512);
    *(_QWORD *)(a1 + 2520) = *(_QWORD *)(a2 + 2520);
    v156 = *(_QWORD *)(a2 + 2536);
    *(_QWORD *)(a1 + 2528) = *(_QWORD *)(a2 + 2528);
    *(_QWORD *)(a1 + 2536) = v156;
    *(_QWORD *)(a1 + 2544) = *(_QWORD *)(a2 + 2544);
    *(_BYTE *)(a1 + 2552) = *(_BYTE *)(a2 + 2552);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v157 = *(_QWORD *)(a2 + 2560);
    if (v157)
      goto LABEL_56;
    goto LABEL_212;
  }
LABEL_211:
  v512 = *(_OWORD *)(a2 + 2512);
  *(_OWORD *)(a1 + 2496) = *(_OWORD *)(a2 + 2496);
  *(_OWORD *)(a1 + 2512) = v512;
  *(_OWORD *)(a1 + 2528) = *(_OWORD *)(a2 + 2528);
  *(_OWORD *)(a1 + 2537) = *(_OWORD *)(a2 + 2537);
  v157 = *(_QWORD *)(a2 + 2560);
  if (v157)
  {
LABEL_56:
    v158 = *(_QWORD *)(a2 + 2568);
    *(_QWORD *)(a1 + 2560) = v157;
    *(_QWORD *)(a1 + 2568) = v158;
    *(_QWORD *)(a1 + 2576) = *(_QWORD *)(a2 + 2576);
    *(_QWORD *)(a1 + 2584) = *(_QWORD *)(a2 + 2584);
    v159 = *(_QWORD *)(a2 + 2600);
    *(_QWORD *)(a1 + 2592) = *(_QWORD *)(a2 + 2592);
    *(_QWORD *)(a1 + 2600) = v159;
    *(_QWORD *)(a1 + 2608) = *(_QWORD *)(a2 + 2608);
    *(_BYTE *)(a1 + 2616) = *(_BYTE *)(a2 + 2616);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v160 = *(_QWORD *)(a2 + 2624);
    if (v160)
      goto LABEL_57;
    goto LABEL_213;
  }
LABEL_212:
  v513 = *(_OWORD *)(a2 + 2576);
  *(_OWORD *)(a1 + 2560) = *(_OWORD *)(a2 + 2560);
  *(_OWORD *)(a1 + 2576) = v513;
  *(_OWORD *)(a1 + 2592) = *(_OWORD *)(a2 + 2592);
  *(_OWORD *)(a1 + 2601) = *(_OWORD *)(a2 + 2601);
  v160 = *(_QWORD *)(a2 + 2624);
  if (v160)
  {
LABEL_57:
    v161 = *(_QWORD *)(a2 + 2632);
    *(_QWORD *)(a1 + 2624) = v160;
    *(_QWORD *)(a1 + 2632) = v161;
    *(_QWORD *)(a1 + 2640) = *(_QWORD *)(a2 + 2640);
    *(_QWORD *)(a1 + 2648) = *(_QWORD *)(a2 + 2648);
    v162 = *(_QWORD *)(a2 + 2664);
    *(_QWORD *)(a1 + 2656) = *(_QWORD *)(a2 + 2656);
    *(_QWORD *)(a1 + 2664) = v162;
    *(_QWORD *)(a1 + 2672) = *(_QWORD *)(a2 + 2672);
    *(_BYTE *)(a1 + 2680) = *(_BYTE *)(a2 + 2680);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v163 = *(_QWORD *)(a2 + 2688);
    if (v163)
      goto LABEL_58;
    goto LABEL_214;
  }
LABEL_213:
  v514 = *(_OWORD *)(a2 + 2640);
  *(_OWORD *)(a1 + 2624) = *(_OWORD *)(a2 + 2624);
  *(_OWORD *)(a1 + 2640) = v514;
  *(_OWORD *)(a1 + 2656) = *(_OWORD *)(a2 + 2656);
  *(_OWORD *)(a1 + 2665) = *(_OWORD *)(a2 + 2665);
  v163 = *(_QWORD *)(a2 + 2688);
  if (v163)
  {
LABEL_58:
    v164 = *(_QWORD *)(a2 + 2696);
    *(_QWORD *)(a1 + 2688) = v163;
    *(_QWORD *)(a1 + 2696) = v164;
    *(_QWORD *)(a1 + 2704) = *(_QWORD *)(a2 + 2704);
    *(_QWORD *)(a1 + 2712) = *(_QWORD *)(a2 + 2712);
    swift_retain();
    swift_bridgeObjectRetain();
    v165 = *(_QWORD *)(a2 + 2720);
    if (v165)
      goto LABEL_59;
    goto LABEL_215;
  }
LABEL_214:
  v515 = *(_OWORD *)(a2 + 2704);
  *(_OWORD *)(a1 + 2688) = *(_OWORD *)(a2 + 2688);
  *(_OWORD *)(a1 + 2704) = v515;
  v165 = *(_QWORD *)(a2 + 2720);
  if (v165)
  {
LABEL_59:
    v166 = *(_QWORD *)(a2 + 2728);
    *(_QWORD *)(a1 + 2720) = v165;
    *(_QWORD *)(a1 + 2728) = v166;
    *(_QWORD *)(a1 + 2736) = *(_QWORD *)(a2 + 2736);
    *(_QWORD *)(a1 + 2744) = *(_QWORD *)(a2 + 2744);
    v167 = *(_QWORD *)(a2 + 2760);
    *(_QWORD *)(a1 + 2752) = *(_QWORD *)(a2 + 2752);
    *(_QWORD *)(a1 + 2760) = v167;
    *(_QWORD *)(a1 + 2768) = *(_QWORD *)(a2 + 2768);
    *(_BYTE *)(a1 + 2776) = *(_BYTE *)(a2 + 2776);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v168 = *(_QWORD *)(a2 + 2784);
    if (v168)
      goto LABEL_60;
    goto LABEL_216;
  }
LABEL_215:
  v516 = *(_OWORD *)(a2 + 2736);
  *(_OWORD *)(a1 + 2720) = *(_OWORD *)(a2 + 2720);
  *(_OWORD *)(a1 + 2736) = v516;
  *(_OWORD *)(a1 + 2752) = *(_OWORD *)(a2 + 2752);
  *(_OWORD *)(a1 + 2761) = *(_OWORD *)(a2 + 2761);
  v168 = *(_QWORD *)(a2 + 2784);
  if (v168)
  {
LABEL_60:
    v169 = *(_QWORD *)(a2 + 2792);
    *(_QWORD *)(a1 + 2784) = v168;
    *(_QWORD *)(a1 + 2792) = v169;
    *(_QWORD *)(a1 + 2800) = *(_QWORD *)(a2 + 2800);
    *(_QWORD *)(a1 + 2808) = *(_QWORD *)(a2 + 2808);
    v170 = *(_QWORD *)(a2 + 2824);
    *(_QWORD *)(a1 + 2816) = *(_QWORD *)(a2 + 2816);
    *(_QWORD *)(a1 + 2824) = v170;
    *(_QWORD *)(a1 + 2832) = *(_QWORD *)(a2 + 2832);
    *(_BYTE *)(a1 + 2840) = *(_BYTE *)(a2 + 2840);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v171 = *(_QWORD *)(a2 + 2848);
    if (v171)
      goto LABEL_61;
    goto LABEL_217;
  }
LABEL_216:
  v517 = *(_OWORD *)(a2 + 2800);
  *(_OWORD *)(a1 + 2784) = *(_OWORD *)(a2 + 2784);
  *(_OWORD *)(a1 + 2800) = v517;
  *(_OWORD *)(a1 + 2816) = *(_OWORD *)(a2 + 2816);
  *(_OWORD *)(a1 + 2825) = *(_OWORD *)(a2 + 2825);
  v171 = *(_QWORD *)(a2 + 2848);
  if (v171)
  {
LABEL_61:
    v172 = *(_QWORD *)(a2 + 2856);
    *(_QWORD *)(a1 + 2848) = v171;
    *(_QWORD *)(a1 + 2856) = v172;
    *(_QWORD *)(a1 + 2864) = *(_QWORD *)(a2 + 2864);
    *(_QWORD *)(a1 + 2872) = *(_QWORD *)(a2 + 2872);
    v173 = *(_QWORD *)(a2 + 2888);
    *(_QWORD *)(a1 + 2880) = *(_QWORD *)(a2 + 2880);
    *(_QWORD *)(a1 + 2888) = v173;
    *(_QWORD *)(a1 + 2896) = *(_QWORD *)(a2 + 2896);
    *(_BYTE *)(a1 + 2904) = *(_BYTE *)(a2 + 2904);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v174 = *(_QWORD *)(a2 + 2912);
    if (v174)
      goto LABEL_62;
    goto LABEL_218;
  }
LABEL_217:
  v518 = *(_OWORD *)(a2 + 2864);
  *(_OWORD *)(a1 + 2848) = *(_OWORD *)(a2 + 2848);
  *(_OWORD *)(a1 + 2864) = v518;
  *(_OWORD *)(a1 + 2880) = *(_OWORD *)(a2 + 2880);
  *(_OWORD *)(a1 + 2889) = *(_OWORD *)(a2 + 2889);
  v174 = *(_QWORD *)(a2 + 2912);
  if (v174)
  {
LABEL_62:
    v175 = *(_QWORD *)(a2 + 2920);
    *(_QWORD *)(a1 + 2912) = v174;
    *(_QWORD *)(a1 + 2920) = v175;
    *(_QWORD *)(a1 + 2928) = *(_QWORD *)(a2 + 2928);
    *(_QWORD *)(a1 + 2936) = *(_QWORD *)(a2 + 2936);
    swift_retain();
    swift_bridgeObjectRetain();
    v176 = *(_QWORD *)(a2 + 2944);
    if (v176)
      goto LABEL_63;
    goto LABEL_219;
  }
LABEL_218:
  v519 = *(_OWORD *)(a2 + 2928);
  *(_OWORD *)(a1 + 2912) = *(_OWORD *)(a2 + 2912);
  *(_OWORD *)(a1 + 2928) = v519;
  v176 = *(_QWORD *)(a2 + 2944);
  if (v176)
  {
LABEL_63:
    v177 = *(_QWORD *)(a2 + 2952);
    *(_QWORD *)(a1 + 2944) = v176;
    *(_QWORD *)(a1 + 2952) = v177;
    *(_QWORD *)(a1 + 2960) = *(_QWORD *)(a2 + 2960);
    *(_QWORD *)(a1 + 2968) = *(_QWORD *)(a2 + 2968);
    v178 = *(_QWORD *)(a2 + 2984);
    *(_QWORD *)(a1 + 2976) = *(_QWORD *)(a2 + 2976);
    *(_QWORD *)(a1 + 2984) = v178;
    *(_QWORD *)(a1 + 2992) = *(_QWORD *)(a2 + 2992);
    *(_BYTE *)(a1 + 3000) = *(_BYTE *)(a2 + 3000);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v179 = *(_QWORD *)(a2 + 3008);
    if (v179)
      goto LABEL_64;
    goto LABEL_220;
  }
LABEL_219:
  v520 = *(_OWORD *)(a2 + 2960);
  *(_OWORD *)(a1 + 2944) = *(_OWORD *)(a2 + 2944);
  *(_OWORD *)(a1 + 2960) = v520;
  *(_OWORD *)(a1 + 2976) = *(_OWORD *)(a2 + 2976);
  *(_OWORD *)(a1 + 2985) = *(_OWORD *)(a2 + 2985);
  v179 = *(_QWORD *)(a2 + 3008);
  if (v179)
  {
LABEL_64:
    v180 = *(_QWORD *)(a2 + 3016);
    *(_QWORD *)(a1 + 3008) = v179;
    *(_QWORD *)(a1 + 3016) = v180;
    *(_QWORD *)(a1 + 3024) = *(_QWORD *)(a2 + 3024);
    *(_QWORD *)(a1 + 3032) = *(_QWORD *)(a2 + 3032);
    v181 = *(_QWORD *)(a2 + 3048);
    *(_QWORD *)(a1 + 3040) = *(_QWORD *)(a2 + 3040);
    *(_QWORD *)(a1 + 3048) = v181;
    *(_QWORD *)(a1 + 3056) = *(_QWORD *)(a2 + 3056);
    *(_BYTE *)(a1 + 3064) = *(_BYTE *)(a2 + 3064);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v182 = *(_QWORD *)(a2 + 3072);
    if (v182)
      goto LABEL_65;
    goto LABEL_221;
  }
LABEL_220:
  v521 = *(_OWORD *)(a2 + 3024);
  *(_OWORD *)(a1 + 3008) = *(_OWORD *)(a2 + 3008);
  *(_OWORD *)(a1 + 3024) = v521;
  *(_OWORD *)(a1 + 3040) = *(_OWORD *)(a2 + 3040);
  *(_OWORD *)(a1 + 3049) = *(_OWORD *)(a2 + 3049);
  v182 = *(_QWORD *)(a2 + 3072);
  if (v182)
  {
LABEL_65:
    v183 = *(_QWORD *)(a2 + 3080);
    *(_QWORD *)(a1 + 3072) = v182;
    *(_QWORD *)(a1 + 3080) = v183;
    *(_QWORD *)(a1 + 3088) = *(_QWORD *)(a2 + 3088);
    *(_QWORD *)(a1 + 3096) = *(_QWORD *)(a2 + 3096);
    v184 = *(_QWORD *)(a2 + 3112);
    *(_QWORD *)(a1 + 3104) = *(_QWORD *)(a2 + 3104);
    *(_QWORD *)(a1 + 3112) = v184;
    *(_QWORD *)(a1 + 3120) = *(_QWORD *)(a2 + 3120);
    *(_BYTE *)(a1 + 3128) = *(_BYTE *)(a2 + 3128);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v185 = *(_QWORD *)(a2 + 3136);
    if (v185)
      goto LABEL_66;
    goto LABEL_222;
  }
LABEL_221:
  v522 = *(_OWORD *)(a2 + 3088);
  *(_OWORD *)(a1 + 3072) = *(_OWORD *)(a2 + 3072);
  *(_OWORD *)(a1 + 3088) = v522;
  *(_OWORD *)(a1 + 3104) = *(_OWORD *)(a2 + 3104);
  *(_OWORD *)(a1 + 3113) = *(_OWORD *)(a2 + 3113);
  v185 = *(_QWORD *)(a2 + 3136);
  if (v185)
  {
LABEL_66:
    v186 = *(_QWORD *)(a2 + 3144);
    *(_QWORD *)(a1 + 3136) = v185;
    *(_QWORD *)(a1 + 3144) = v186;
    *(_QWORD *)(a1 + 3152) = *(_QWORD *)(a2 + 3152);
    *(_QWORD *)(a1 + 3160) = *(_QWORD *)(a2 + 3160);
    swift_retain();
    swift_bridgeObjectRetain();
    v187 = *(_QWORD *)(a2 + 3168);
    if (v187)
      goto LABEL_67;
    goto LABEL_223;
  }
LABEL_222:
  v523 = *(_OWORD *)(a2 + 3152);
  *(_OWORD *)(a1 + 3136) = *(_OWORD *)(a2 + 3136);
  *(_OWORD *)(a1 + 3152) = v523;
  v187 = *(_QWORD *)(a2 + 3168);
  if (v187)
  {
LABEL_67:
    v188 = *(_QWORD *)(a2 + 3176);
    *(_QWORD *)(a1 + 3168) = v187;
    *(_QWORD *)(a1 + 3176) = v188;
    *(_QWORD *)(a1 + 3184) = *(_QWORD *)(a2 + 3184);
    *(_QWORD *)(a1 + 3192) = *(_QWORD *)(a2 + 3192);
    v189 = *(_QWORD *)(a2 + 3208);
    *(_QWORD *)(a1 + 3200) = *(_QWORD *)(a2 + 3200);
    *(_QWORD *)(a1 + 3208) = v189;
    *(_QWORD *)(a1 + 3216) = *(_QWORD *)(a2 + 3216);
    *(_BYTE *)(a1 + 3224) = *(_BYTE *)(a2 + 3224);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v190 = *(_QWORD *)(a2 + 3232);
    if (v190)
      goto LABEL_68;
    goto LABEL_224;
  }
LABEL_223:
  v524 = *(_OWORD *)(a2 + 3184);
  *(_OWORD *)(a1 + 3168) = *(_OWORD *)(a2 + 3168);
  *(_OWORD *)(a1 + 3184) = v524;
  *(_OWORD *)(a1 + 3200) = *(_OWORD *)(a2 + 3200);
  *(_OWORD *)(a1 + 3209) = *(_OWORD *)(a2 + 3209);
  v190 = *(_QWORD *)(a2 + 3232);
  if (v190)
  {
LABEL_68:
    v191 = *(_QWORD *)(a2 + 3240);
    *(_QWORD *)(a1 + 3232) = v190;
    *(_QWORD *)(a1 + 3240) = v191;
    *(_QWORD *)(a1 + 3248) = *(_QWORD *)(a2 + 3248);
    *(_QWORD *)(a1 + 3256) = *(_QWORD *)(a2 + 3256);
    v192 = *(_QWORD *)(a2 + 3272);
    *(_QWORD *)(a1 + 3264) = *(_QWORD *)(a2 + 3264);
    *(_QWORD *)(a1 + 3272) = v192;
    *(_QWORD *)(a1 + 3280) = *(_QWORD *)(a2 + 3280);
    *(_BYTE *)(a1 + 3288) = *(_BYTE *)(a2 + 3288);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v193 = *(_QWORD *)(a2 + 3296);
    if (v193)
      goto LABEL_69;
    goto LABEL_225;
  }
LABEL_224:
  v525 = *(_OWORD *)(a2 + 3248);
  *(_OWORD *)(a1 + 3232) = *(_OWORD *)(a2 + 3232);
  *(_OWORD *)(a1 + 3248) = v525;
  *(_OWORD *)(a1 + 3264) = *(_OWORD *)(a2 + 3264);
  *(_OWORD *)(a1 + 3273) = *(_OWORD *)(a2 + 3273);
  v193 = *(_QWORD *)(a2 + 3296);
  if (v193)
  {
LABEL_69:
    v194 = *(_QWORD *)(a2 + 3304);
    *(_QWORD *)(a1 + 3296) = v193;
    *(_QWORD *)(a1 + 3304) = v194;
    *(_QWORD *)(a1 + 3312) = *(_QWORD *)(a2 + 3312);
    *(_QWORD *)(a1 + 3320) = *(_QWORD *)(a2 + 3320);
    v195 = *(_QWORD *)(a2 + 3336);
    *(_QWORD *)(a1 + 3328) = *(_QWORD *)(a2 + 3328);
    *(_QWORD *)(a1 + 3336) = v195;
    *(_QWORD *)(a1 + 3344) = *(_QWORD *)(a2 + 3344);
    *(_BYTE *)(a1 + 3352) = *(_BYTE *)(a2 + 3352);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v196 = *(_QWORD *)(a2 + 3360);
    if (v196)
      goto LABEL_70;
    goto LABEL_226;
  }
LABEL_225:
  v526 = *(_OWORD *)(a2 + 3312);
  *(_OWORD *)(a1 + 3296) = *(_OWORD *)(a2 + 3296);
  *(_OWORD *)(a1 + 3312) = v526;
  *(_OWORD *)(a1 + 3328) = *(_OWORD *)(a2 + 3328);
  *(_OWORD *)(a1 + 3337) = *(_OWORD *)(a2 + 3337);
  v196 = *(_QWORD *)(a2 + 3360);
  if (v196)
  {
LABEL_70:
    v197 = *(_QWORD *)(a2 + 3368);
    *(_QWORD *)(a1 + 3360) = v196;
    *(_QWORD *)(a1 + 3368) = v197;
    *(_QWORD *)(a1 + 3376) = *(_QWORD *)(a2 + 3376);
    *(_QWORD *)(a1 + 3384) = *(_QWORD *)(a2 + 3384);
    swift_retain();
    swift_bridgeObjectRetain();
    v198 = *(_QWORD *)(a2 + 3392);
    if (v198)
      goto LABEL_71;
    goto LABEL_227;
  }
LABEL_226:
  v527 = *(_OWORD *)(a2 + 3376);
  *(_OWORD *)(a1 + 3360) = *(_OWORD *)(a2 + 3360);
  *(_OWORD *)(a1 + 3376) = v527;
  v198 = *(_QWORD *)(a2 + 3392);
  if (v198)
  {
LABEL_71:
    v199 = *(_QWORD *)(a2 + 3400);
    *(_QWORD *)(a1 + 3392) = v198;
    *(_QWORD *)(a1 + 3400) = v199;
    *(_QWORD *)(a1 + 3408) = *(_QWORD *)(a2 + 3408);
    *(_QWORD *)(a1 + 3416) = *(_QWORD *)(a2 + 3416);
    v200 = *(_QWORD *)(a2 + 3432);
    *(_QWORD *)(a1 + 3424) = *(_QWORD *)(a2 + 3424);
    *(_QWORD *)(a1 + 3432) = v200;
    *(_QWORD *)(a1 + 3440) = *(_QWORD *)(a2 + 3440);
    *(_BYTE *)(a1 + 3448) = *(_BYTE *)(a2 + 3448);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v201 = *(_QWORD *)(a2 + 3456);
    if (v201)
      goto LABEL_72;
    goto LABEL_228;
  }
LABEL_227:
  v528 = *(_OWORD *)(a2 + 3408);
  *(_OWORD *)(a1 + 3392) = *(_OWORD *)(a2 + 3392);
  *(_OWORD *)(a1 + 3408) = v528;
  *(_OWORD *)(a1 + 3424) = *(_OWORD *)(a2 + 3424);
  *(_OWORD *)(a1 + 3433) = *(_OWORD *)(a2 + 3433);
  v201 = *(_QWORD *)(a2 + 3456);
  if (v201)
  {
LABEL_72:
    v202 = *(_QWORD *)(a2 + 3464);
    *(_QWORD *)(a1 + 3456) = v201;
    *(_QWORD *)(a1 + 3464) = v202;
    *(_QWORD *)(a1 + 3472) = *(_QWORD *)(a2 + 3472);
    *(_QWORD *)(a1 + 3480) = *(_QWORD *)(a2 + 3480);
    v203 = *(_QWORD *)(a2 + 3496);
    *(_QWORD *)(a1 + 3488) = *(_QWORD *)(a2 + 3488);
    *(_QWORD *)(a1 + 3496) = v203;
    *(_QWORD *)(a1 + 3504) = *(_QWORD *)(a2 + 3504);
    *(_BYTE *)(a1 + 3512) = *(_BYTE *)(a2 + 3512);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v204 = *(_QWORD *)(a2 + 3520);
    if (v204)
      goto LABEL_73;
    goto LABEL_229;
  }
LABEL_228:
  v529 = *(_OWORD *)(a2 + 3472);
  *(_OWORD *)(a1 + 3456) = *(_OWORD *)(a2 + 3456);
  *(_OWORD *)(a1 + 3472) = v529;
  *(_OWORD *)(a1 + 3488) = *(_OWORD *)(a2 + 3488);
  *(_OWORD *)(a1 + 3497) = *(_OWORD *)(a2 + 3497);
  v204 = *(_QWORD *)(a2 + 3520);
  if (v204)
  {
LABEL_73:
    v205 = *(_QWORD *)(a2 + 3528);
    *(_QWORD *)(a1 + 3520) = v204;
    *(_QWORD *)(a1 + 3528) = v205;
    *(_QWORD *)(a1 + 3536) = *(_QWORD *)(a2 + 3536);
    *(_QWORD *)(a1 + 3544) = *(_QWORD *)(a2 + 3544);
    v206 = *(_QWORD *)(a2 + 3560);
    *(_QWORD *)(a1 + 3552) = *(_QWORD *)(a2 + 3552);
    *(_QWORD *)(a1 + 3560) = v206;
    *(_QWORD *)(a1 + 3568) = *(_QWORD *)(a2 + 3568);
    *(_BYTE *)(a1 + 3576) = *(_BYTE *)(a2 + 3576);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v207 = *(_QWORD *)(a2 + 3584);
    if (v207)
      goto LABEL_74;
    goto LABEL_230;
  }
LABEL_229:
  v530 = *(_OWORD *)(a2 + 3536);
  *(_OWORD *)(a1 + 3520) = *(_OWORD *)(a2 + 3520);
  *(_OWORD *)(a1 + 3536) = v530;
  *(_OWORD *)(a1 + 3552) = *(_OWORD *)(a2 + 3552);
  *(_OWORD *)(a1 + 3561) = *(_OWORD *)(a2 + 3561);
  v207 = *(_QWORD *)(a2 + 3584);
  if (v207)
  {
LABEL_74:
    v208 = *(_QWORD *)(a2 + 3592);
    *(_QWORD *)(a1 + 3584) = v207;
    *(_QWORD *)(a1 + 3592) = v208;
    *(_QWORD *)(a1 + 3600) = *(_QWORD *)(a2 + 3600);
    *(_QWORD *)(a1 + 3608) = *(_QWORD *)(a2 + 3608);
    swift_retain();
    swift_bridgeObjectRetain();
    v209 = *(_QWORD *)(a2 + 3616);
    if (v209)
      goto LABEL_75;
    goto LABEL_231;
  }
LABEL_230:
  v531 = *(_OWORD *)(a2 + 3600);
  *(_OWORD *)(a1 + 3584) = *(_OWORD *)(a2 + 3584);
  *(_OWORD *)(a1 + 3600) = v531;
  v209 = *(_QWORD *)(a2 + 3616);
  if (v209)
  {
LABEL_75:
    v210 = *(_QWORD *)(a2 + 3624);
    *(_QWORD *)(a1 + 3616) = v209;
    *(_QWORD *)(a1 + 3624) = v210;
    *(_QWORD *)(a1 + 3632) = *(_QWORD *)(a2 + 3632);
    *(_QWORD *)(a1 + 3640) = *(_QWORD *)(a2 + 3640);
    v211 = *(_QWORD *)(a2 + 3656);
    *(_QWORD *)(a1 + 3648) = *(_QWORD *)(a2 + 3648);
    *(_QWORD *)(a1 + 3656) = v211;
    *(_QWORD *)(a1 + 3664) = *(_QWORD *)(a2 + 3664);
    *(_BYTE *)(a1 + 3672) = *(_BYTE *)(a2 + 3672);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v212 = *(_QWORD *)(a2 + 3680);
    if (v212)
      goto LABEL_76;
    goto LABEL_232;
  }
LABEL_231:
  v532 = *(_OWORD *)(a2 + 3632);
  *(_OWORD *)(a1 + 3616) = *(_OWORD *)(a2 + 3616);
  *(_OWORD *)(a1 + 3632) = v532;
  *(_OWORD *)(a1 + 3648) = *(_OWORD *)(a2 + 3648);
  *(_OWORD *)(a1 + 3657) = *(_OWORD *)(a2 + 3657);
  v212 = *(_QWORD *)(a2 + 3680);
  if (v212)
  {
LABEL_76:
    v213 = *(_QWORD *)(a2 + 3688);
    *(_QWORD *)(a1 + 3680) = v212;
    *(_QWORD *)(a1 + 3688) = v213;
    *(_QWORD *)(a1 + 3696) = *(_QWORD *)(a2 + 3696);
    *(_QWORD *)(a1 + 3704) = *(_QWORD *)(a2 + 3704);
    v214 = *(_QWORD *)(a2 + 3720);
    *(_QWORD *)(a1 + 3712) = *(_QWORD *)(a2 + 3712);
    *(_QWORD *)(a1 + 3720) = v214;
    *(_QWORD *)(a1 + 3728) = *(_QWORD *)(a2 + 3728);
    *(_BYTE *)(a1 + 3736) = *(_BYTE *)(a2 + 3736);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v215 = *(_QWORD *)(a2 + 3744);
    if (v215)
      goto LABEL_77;
    goto LABEL_233;
  }
LABEL_232:
  v533 = *(_OWORD *)(a2 + 3696);
  *(_OWORD *)(a1 + 3680) = *(_OWORD *)(a2 + 3680);
  *(_OWORD *)(a1 + 3696) = v533;
  *(_OWORD *)(a1 + 3712) = *(_OWORD *)(a2 + 3712);
  *(_OWORD *)(a1 + 3721) = *(_OWORD *)(a2 + 3721);
  v215 = *(_QWORD *)(a2 + 3744);
  if (v215)
  {
LABEL_77:
    v216 = *(_QWORD *)(a2 + 3752);
    *(_QWORD *)(a1 + 3744) = v215;
    *(_QWORD *)(a1 + 3752) = v216;
    *(_QWORD *)(a1 + 3760) = *(_QWORD *)(a2 + 3760);
    *(_QWORD *)(a1 + 3768) = *(_QWORD *)(a2 + 3768);
    v217 = *(_QWORD *)(a2 + 3784);
    *(_QWORD *)(a1 + 3776) = *(_QWORD *)(a2 + 3776);
    *(_QWORD *)(a1 + 3784) = v217;
    *(_QWORD *)(a1 + 3792) = *(_QWORD *)(a2 + 3792);
    *(_BYTE *)(a1 + 3800) = *(_BYTE *)(a2 + 3800);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v218 = *(_QWORD *)(a2 + 3808);
    if (v218)
      goto LABEL_78;
    goto LABEL_234;
  }
LABEL_233:
  v534 = *(_OWORD *)(a2 + 3760);
  *(_OWORD *)(a1 + 3744) = *(_OWORD *)(a2 + 3744);
  *(_OWORD *)(a1 + 3760) = v534;
  *(_OWORD *)(a1 + 3776) = *(_OWORD *)(a2 + 3776);
  *(_OWORD *)(a1 + 3785) = *(_OWORD *)(a2 + 3785);
  v218 = *(_QWORD *)(a2 + 3808);
  if (v218)
  {
LABEL_78:
    v219 = *(_QWORD *)(a2 + 3816);
    *(_QWORD *)(a1 + 3808) = v218;
    *(_QWORD *)(a1 + 3816) = v219;
    *(_QWORD *)(a1 + 3824) = *(_QWORD *)(a2 + 3824);
    *(_QWORD *)(a1 + 3832) = *(_QWORD *)(a2 + 3832);
    swift_retain();
    swift_bridgeObjectRetain();
    v220 = *(_QWORD *)(a2 + 3840);
    if (v220)
      goto LABEL_79;
    goto LABEL_235;
  }
LABEL_234:
  v535 = *(_OWORD *)(a2 + 3824);
  *(_OWORD *)(a1 + 3808) = *(_OWORD *)(a2 + 3808);
  *(_OWORD *)(a1 + 3824) = v535;
  v220 = *(_QWORD *)(a2 + 3840);
  if (v220)
  {
LABEL_79:
    v221 = *(_QWORD *)(a2 + 3848);
    *(_QWORD *)(a1 + 3840) = v220;
    *(_QWORD *)(a1 + 3848) = v221;
    *(_QWORD *)(a1 + 3856) = *(_QWORD *)(a2 + 3856);
    *(_QWORD *)(a1 + 3864) = *(_QWORD *)(a2 + 3864);
    v222 = *(_QWORD *)(a2 + 3880);
    *(_QWORD *)(a1 + 3872) = *(_QWORD *)(a2 + 3872);
    *(_QWORD *)(a1 + 3880) = v222;
    *(_QWORD *)(a1 + 3888) = *(_QWORD *)(a2 + 3888);
    *(_BYTE *)(a1 + 3896) = *(_BYTE *)(a2 + 3896);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v223 = *(_QWORD *)(a2 + 3904);
    if (v223)
      goto LABEL_80;
    goto LABEL_236;
  }
LABEL_235:
  v536 = *(_OWORD *)(a2 + 3856);
  *(_OWORD *)(a1 + 3840) = *(_OWORD *)(a2 + 3840);
  *(_OWORD *)(a1 + 3856) = v536;
  *(_OWORD *)(a1 + 3872) = *(_OWORD *)(a2 + 3872);
  *(_OWORD *)(a1 + 3881) = *(_OWORD *)(a2 + 3881);
  v223 = *(_QWORD *)(a2 + 3904);
  if (v223)
  {
LABEL_80:
    v224 = *(_QWORD *)(a2 + 3912);
    *(_QWORD *)(a1 + 3904) = v223;
    *(_QWORD *)(a1 + 3912) = v224;
    *(_QWORD *)(a1 + 3920) = *(_QWORD *)(a2 + 3920);
    *(_QWORD *)(a1 + 3928) = *(_QWORD *)(a2 + 3928);
    v225 = *(_QWORD *)(a2 + 3944);
    *(_QWORD *)(a1 + 3936) = *(_QWORD *)(a2 + 3936);
    *(_QWORD *)(a1 + 3944) = v225;
    *(_QWORD *)(a1 + 3952) = *(_QWORD *)(a2 + 3952);
    *(_BYTE *)(a1 + 3960) = *(_BYTE *)(a2 + 3960);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v226 = *(_QWORD *)(a2 + 3968);
    if (v226)
      goto LABEL_81;
    goto LABEL_237;
  }
LABEL_236:
  v537 = *(_OWORD *)(a2 + 3920);
  *(_OWORD *)(a1 + 3904) = *(_OWORD *)(a2 + 3904);
  *(_OWORD *)(a1 + 3920) = v537;
  *(_OWORD *)(a1 + 3936) = *(_OWORD *)(a2 + 3936);
  *(_OWORD *)(a1 + 3945) = *(_OWORD *)(a2 + 3945);
  v226 = *(_QWORD *)(a2 + 3968);
  if (v226)
  {
LABEL_81:
    v227 = *(_QWORD *)(a2 + 3976);
    *(_QWORD *)(a1 + 3968) = v226;
    *(_QWORD *)(a1 + 3976) = v227;
    *(_QWORD *)(a1 + 3984) = *(_QWORD *)(a2 + 3984);
    *(_QWORD *)(a1 + 3992) = *(_QWORD *)(a2 + 3992);
    v228 = *(_QWORD *)(a2 + 4008);
    *(_QWORD *)(a1 + 4000) = *(_QWORD *)(a2 + 4000);
    *(_QWORD *)(a1 + 4008) = v228;
    *(_QWORD *)(a1 + 4016) = *(_QWORD *)(a2 + 4016);
    *(_BYTE *)(a1 + 4024) = *(_BYTE *)(a2 + 4024);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v229 = *(_QWORD *)(a2 + 4032);
    if (v229)
      goto LABEL_82;
    goto LABEL_238;
  }
LABEL_237:
  v538 = *(_OWORD *)(a2 + 3984);
  *(_OWORD *)(a1 + 3968) = *(_OWORD *)(a2 + 3968);
  *(_OWORD *)(a1 + 3984) = v538;
  *(_OWORD *)(a1 + 4000) = *(_OWORD *)(a2 + 4000);
  *(_OWORD *)(a1 + 4009) = *(_OWORD *)(a2 + 4009);
  v229 = *(_QWORD *)(a2 + 4032);
  if (v229)
  {
LABEL_82:
    v230 = *(_QWORD *)(a2 + 4040);
    *(_QWORD *)(a1 + 4032) = v229;
    *(_QWORD *)(a1 + 4040) = v230;
    *(_QWORD *)(a1 + 4048) = *(_QWORD *)(a2 + 4048);
    *(_QWORD *)(a1 + 4056) = *(_QWORD *)(a2 + 4056);
    swift_retain();
    swift_bridgeObjectRetain();
    v231 = *(_QWORD *)(a2 + 4064);
    if (v231)
      goto LABEL_83;
    goto LABEL_239;
  }
LABEL_238:
  v539 = *(_OWORD *)(a2 + 4048);
  *(_OWORD *)(a1 + 4032) = *(_OWORD *)(a2 + 4032);
  *(_OWORD *)(a1 + 4048) = v539;
  v231 = *(_QWORD *)(a2 + 4064);
  if (v231)
  {
LABEL_83:
    v232 = *(_QWORD *)(a2 + 4072);
    *(_QWORD *)(a1 + 4064) = v231;
    *(_QWORD *)(a1 + 4072) = v232;
    *(_QWORD *)(a1 + 4080) = *(_QWORD *)(a2 + 4080);
    *(_QWORD *)(a1 + 4088) = *(_QWORD *)(a2 + 4088);
    v233 = *(_QWORD *)(a2 + 4104);
    *(_QWORD *)(a1 + 4096) = *(_QWORD *)(a2 + 4096);
    *(_QWORD *)(a1 + 4104) = v233;
    *(_BYTE *)(a1 + 4120) = *(_BYTE *)(a2 + 4120);
    *(_QWORD *)(a1 + 4112) = *(_QWORD *)(a2 + 4112);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v234 = *(_QWORD *)(a2 + 4128);
    if (v234)
      goto LABEL_84;
    goto LABEL_240;
  }
LABEL_239:
  v540 = *(_OWORD *)(a2 + 4080);
  *(_OWORD *)(a1 + 4064) = *(_OWORD *)(a2 + 4064);
  *(_OWORD *)(a1 + 4080) = v540;
  *(_OWORD *)(a1 + 4096) = *(_OWORD *)(a2 + 4096);
  *(_OWORD *)(a1 + 4105) = *(_OWORD *)(a2 + 4105);
  v234 = *(_QWORD *)(a2 + 4128);
  if (v234)
  {
LABEL_84:
    v235 = *(_QWORD *)(a2 + 4136);
    *(_QWORD *)(a1 + 4128) = v234;
    *(_QWORD *)(a1 + 4136) = v235;
    *(_QWORD *)(a1 + 4144) = *(_QWORD *)(a2 + 4144);
    *(_QWORD *)(a1 + 4152) = *(_QWORD *)(a2 + 4152);
    v236 = *(_QWORD *)(a2 + 4168);
    *(_QWORD *)(a1 + 4160) = *(_QWORD *)(a2 + 4160);
    *(_QWORD *)(a1 + 4168) = v236;
    *(_BYTE *)(a1 + 4184) = *(_BYTE *)(a2 + 4184);
    *(_QWORD *)(a1 + 4176) = *(_QWORD *)(a2 + 4176);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v237 = *(_QWORD *)(a2 + 4192);
    if (v237)
      goto LABEL_85;
    goto LABEL_241;
  }
LABEL_240:
  v541 = *(_OWORD *)(a2 + 4144);
  *(_OWORD *)(a1 + 4128) = *(_OWORD *)(a2 + 4128);
  *(_OWORD *)(a1 + 4144) = v541;
  *(_OWORD *)(a1 + 4160) = *(_OWORD *)(a2 + 4160);
  *(_OWORD *)(a1 + 4169) = *(_OWORD *)(a2 + 4169);
  v237 = *(_QWORD *)(a2 + 4192);
  if (v237)
  {
LABEL_85:
    v238 = *(_QWORD *)(a2 + 4200);
    *(_QWORD *)(a1 + 4192) = v237;
    *(_QWORD *)(a1 + 4200) = v238;
    *(_QWORD *)(a1 + 4208) = *(_QWORD *)(a2 + 4208);
    *(_QWORD *)(a1 + 4216) = *(_QWORD *)(a2 + 4216);
    v239 = *(_QWORD *)(a2 + 4232);
    *(_QWORD *)(a1 + 4224) = *(_QWORD *)(a2 + 4224);
    *(_QWORD *)(a1 + 4232) = v239;
    *(_BYTE *)(a1 + 4248) = *(_BYTE *)(a2 + 4248);
    *(_QWORD *)(a1 + 4240) = *(_QWORD *)(a2 + 4240);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v240 = *(_QWORD *)(a2 + 4256);
    if (v240)
      goto LABEL_86;
    goto LABEL_242;
  }
LABEL_241:
  v542 = *(_OWORD *)(a2 + 4208);
  *(_OWORD *)(a1 + 4192) = *(_OWORD *)(a2 + 4192);
  *(_OWORD *)(a1 + 4208) = v542;
  *(_OWORD *)(a1 + 4224) = *(_OWORD *)(a2 + 4224);
  *(_OWORD *)(a1 + 4233) = *(_OWORD *)(a2 + 4233);
  v240 = *(_QWORD *)(a2 + 4256);
  if (v240)
  {
LABEL_86:
    v241 = *(_QWORD *)(a2 + 4264);
    *(_QWORD *)(a1 + 4256) = v240;
    *(_QWORD *)(a1 + 4264) = v241;
    *(_QWORD *)(a1 + 4272) = *(_QWORD *)(a2 + 4272);
    *(_QWORD *)(a1 + 4280) = *(_QWORD *)(a2 + 4280);
    swift_retain();
    swift_bridgeObjectRetain();
    v242 = *(_QWORD *)(a2 + 4288);
    if (v242)
      goto LABEL_87;
    goto LABEL_243;
  }
LABEL_242:
  v543 = *(_OWORD *)(a2 + 4272);
  *(_OWORD *)(a1 + 4256) = *(_OWORD *)(a2 + 4256);
  *(_OWORD *)(a1 + 4272) = v543;
  v242 = *(_QWORD *)(a2 + 4288);
  if (v242)
  {
LABEL_87:
    v243 = *(_QWORD *)(a2 + 4296);
    *(_QWORD *)(a1 + 4288) = v242;
    *(_QWORD *)(a1 + 4296) = v243;
    *(_QWORD *)(a1 + 4304) = *(_QWORD *)(a2 + 4304);
    *(_QWORD *)(a1 + 4312) = *(_QWORD *)(a2 + 4312);
    v244 = *(_QWORD *)(a2 + 4328);
    *(_QWORD *)(a1 + 4320) = *(_QWORD *)(a2 + 4320);
    *(_QWORD *)(a1 + 4328) = v244;
    *(_BYTE *)(a1 + 4344) = *(_BYTE *)(a2 + 4344);
    *(_QWORD *)(a1 + 4336) = *(_QWORD *)(a2 + 4336);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v245 = *(_QWORD *)(a2 + 4352);
    if (v245)
      goto LABEL_88;
    goto LABEL_244;
  }
LABEL_243:
  v544 = *(_OWORD *)(a2 + 4304);
  *(_OWORD *)(a1 + 4288) = *(_OWORD *)(a2 + 4288);
  *(_OWORD *)(a1 + 4304) = v544;
  *(_OWORD *)(a1 + 4320) = *(_OWORD *)(a2 + 4320);
  *(_OWORD *)(a1 + 4329) = *(_OWORD *)(a2 + 4329);
  v245 = *(_QWORD *)(a2 + 4352);
  if (v245)
  {
LABEL_88:
    v246 = *(_QWORD *)(a2 + 4360);
    *(_QWORD *)(a1 + 4352) = v245;
    *(_QWORD *)(a1 + 4360) = v246;
    *(_QWORD *)(a1 + 4368) = *(_QWORD *)(a2 + 4368);
    *(_QWORD *)(a1 + 4376) = *(_QWORD *)(a2 + 4376);
    v247 = *(_QWORD *)(a2 + 4392);
    *(_QWORD *)(a1 + 4384) = *(_QWORD *)(a2 + 4384);
    *(_QWORD *)(a1 + 4392) = v247;
    *(_BYTE *)(a1 + 4408) = *(_BYTE *)(a2 + 4408);
    *(_QWORD *)(a1 + 4400) = *(_QWORD *)(a2 + 4400);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v248 = *(_QWORD *)(a2 + 4416);
    if (v248)
      goto LABEL_89;
    goto LABEL_245;
  }
LABEL_244:
  v545 = *(_OWORD *)(a2 + 4368);
  *(_OWORD *)(a1 + 4352) = *(_OWORD *)(a2 + 4352);
  *(_OWORD *)(a1 + 4368) = v545;
  *(_OWORD *)(a1 + 4384) = *(_OWORD *)(a2 + 4384);
  *(_OWORD *)(a1 + 4393) = *(_OWORD *)(a2 + 4393);
  v248 = *(_QWORD *)(a2 + 4416);
  if (v248)
  {
LABEL_89:
    v249 = *(_QWORD *)(a2 + 4424);
    *(_QWORD *)(a1 + 4416) = v248;
    *(_QWORD *)(a1 + 4424) = v249;
    *(_QWORD *)(a1 + 4432) = *(_QWORD *)(a2 + 4432);
    *(_QWORD *)(a1 + 4440) = *(_QWORD *)(a2 + 4440);
    v250 = *(_QWORD *)(a2 + 4456);
    *(_QWORD *)(a1 + 4448) = *(_QWORD *)(a2 + 4448);
    *(_QWORD *)(a1 + 4456) = v250;
    *(_BYTE *)(a1 + 4472) = *(_BYTE *)(a2 + 4472);
    *(_QWORD *)(a1 + 4464) = *(_QWORD *)(a2 + 4464);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v251 = *(_QWORD *)(a2 + 4480);
    if (v251)
      goto LABEL_90;
    goto LABEL_246;
  }
LABEL_245:
  v546 = *(_OWORD *)(a2 + 4432);
  *(_OWORD *)(a1 + 4416) = *(_OWORD *)(a2 + 4416);
  *(_OWORD *)(a1 + 4432) = v546;
  *(_OWORD *)(a1 + 4448) = *(_OWORD *)(a2 + 4448);
  *(_OWORD *)(a1 + 4457) = *(_OWORD *)(a2 + 4457);
  v251 = *(_QWORD *)(a2 + 4480);
  if (v251)
  {
LABEL_90:
    v252 = *(_QWORD *)(a2 + 4488);
    *(_QWORD *)(a1 + 4480) = v251;
    *(_QWORD *)(a1 + 4488) = v252;
    *(_QWORD *)(a1 + 4496) = *(_QWORD *)(a2 + 4496);
    *(_QWORD *)(a1 + 4504) = *(_QWORD *)(a2 + 4504);
    swift_retain();
    swift_bridgeObjectRetain();
    v253 = *(_QWORD *)(a2 + 4512);
    if (v253)
      goto LABEL_91;
    goto LABEL_247;
  }
LABEL_246:
  v547 = *(_OWORD *)(a2 + 4496);
  *(_OWORD *)(a1 + 4480) = *(_OWORD *)(a2 + 4480);
  *(_OWORD *)(a1 + 4496) = v547;
  v253 = *(_QWORD *)(a2 + 4512);
  if (v253)
  {
LABEL_91:
    v254 = *(_QWORD *)(a2 + 4520);
    *(_QWORD *)(a1 + 4512) = v253;
    *(_QWORD *)(a1 + 4520) = v254;
    *(_QWORD *)(a1 + 4528) = *(_QWORD *)(a2 + 4528);
    *(_QWORD *)(a1 + 4536) = *(_QWORD *)(a2 + 4536);
    v255 = *(_QWORD *)(a2 + 4552);
    *(_QWORD *)(a1 + 4544) = *(_QWORD *)(a2 + 4544);
    *(_QWORD *)(a1 + 4552) = v255;
    *(_BYTE *)(a1 + 4568) = *(_BYTE *)(a2 + 4568);
    *(_QWORD *)(a1 + 4560) = *(_QWORD *)(a2 + 4560);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v256 = *(_QWORD *)(a2 + 4576);
    if (v256)
      goto LABEL_92;
    goto LABEL_248;
  }
LABEL_247:
  v548 = *(_OWORD *)(a2 + 4528);
  *(_OWORD *)(a1 + 4512) = *(_OWORD *)(a2 + 4512);
  *(_OWORD *)(a1 + 4528) = v548;
  *(_OWORD *)(a1 + 4544) = *(_OWORD *)(a2 + 4544);
  *(_OWORD *)(a1 + 4553) = *(_OWORD *)(a2 + 4553);
  v256 = *(_QWORD *)(a2 + 4576);
  if (v256)
  {
LABEL_92:
    v257 = *(_QWORD *)(a2 + 4584);
    *(_QWORD *)(a1 + 4576) = v256;
    *(_QWORD *)(a1 + 4584) = v257;
    *(_QWORD *)(a1 + 4592) = *(_QWORD *)(a2 + 4592);
    *(_QWORD *)(a1 + 4600) = *(_QWORD *)(a2 + 4600);
    v258 = *(_QWORD *)(a2 + 4616);
    *(_QWORD *)(a1 + 4608) = *(_QWORD *)(a2 + 4608);
    *(_QWORD *)(a1 + 4616) = v258;
    *(_BYTE *)(a1 + 4632) = *(_BYTE *)(a2 + 4632);
    *(_QWORD *)(a1 + 4624) = *(_QWORD *)(a2 + 4624);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v259 = *(_QWORD *)(a2 + 4640);
    if (v259)
      goto LABEL_93;
    goto LABEL_249;
  }
LABEL_248:
  v549 = *(_OWORD *)(a2 + 4592);
  *(_OWORD *)(a1 + 4576) = *(_OWORD *)(a2 + 4576);
  *(_OWORD *)(a1 + 4592) = v549;
  *(_OWORD *)(a1 + 4608) = *(_OWORD *)(a2 + 4608);
  *(_OWORD *)(a1 + 4617) = *(_OWORD *)(a2 + 4617);
  v259 = *(_QWORD *)(a2 + 4640);
  if (v259)
  {
LABEL_93:
    v260 = *(_QWORD *)(a2 + 4648);
    *(_QWORD *)(a1 + 4640) = v259;
    *(_QWORD *)(a1 + 4648) = v260;
    *(_QWORD *)(a1 + 4656) = *(_QWORD *)(a2 + 4656);
    *(_QWORD *)(a1 + 4664) = *(_QWORD *)(a2 + 4664);
    v261 = *(_QWORD *)(a2 + 4680);
    *(_QWORD *)(a1 + 4672) = *(_QWORD *)(a2 + 4672);
    *(_QWORD *)(a1 + 4680) = v261;
    *(_BYTE *)(a1 + 4696) = *(_BYTE *)(a2 + 4696);
    *(_QWORD *)(a1 + 4688) = *(_QWORD *)(a2 + 4688);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v262 = *(_QWORD *)(a2 + 4704);
    if (v262)
      goto LABEL_94;
    goto LABEL_250;
  }
LABEL_249:
  v550 = *(_OWORD *)(a2 + 4656);
  *(_OWORD *)(a1 + 4640) = *(_OWORD *)(a2 + 4640);
  *(_OWORD *)(a1 + 4656) = v550;
  *(_OWORD *)(a1 + 4672) = *(_OWORD *)(a2 + 4672);
  *(_OWORD *)(a1 + 4681) = *(_OWORD *)(a2 + 4681);
  v262 = *(_QWORD *)(a2 + 4704);
  if (v262)
  {
LABEL_94:
    v263 = *(_QWORD *)(a2 + 4712);
    *(_QWORD *)(a1 + 4704) = v262;
    *(_QWORD *)(a1 + 4712) = v263;
    *(_QWORD *)(a1 + 4720) = *(_QWORD *)(a2 + 4720);
    *(_QWORD *)(a1 + 4728) = *(_QWORD *)(a2 + 4728);
    swift_retain();
    swift_bridgeObjectRetain();
    v264 = *(_QWORD *)(a2 + 4736);
    if (v264)
      goto LABEL_95;
    goto LABEL_251;
  }
LABEL_250:
  v551 = *(_OWORD *)(a2 + 4720);
  *(_OWORD *)(a1 + 4704) = *(_OWORD *)(a2 + 4704);
  *(_OWORD *)(a1 + 4720) = v551;
  v264 = *(_QWORD *)(a2 + 4736);
  if (v264)
  {
LABEL_95:
    v265 = *(_QWORD *)(a2 + 4744);
    *(_QWORD *)(a1 + 4736) = v264;
    *(_QWORD *)(a1 + 4744) = v265;
    *(_QWORD *)(a1 + 4752) = *(_QWORD *)(a2 + 4752);
    *(_QWORD *)(a1 + 4760) = *(_QWORD *)(a2 + 4760);
    v266 = *(_QWORD *)(a2 + 4776);
    *(_QWORD *)(a1 + 4768) = *(_QWORD *)(a2 + 4768);
    *(_QWORD *)(a1 + 4776) = v266;
    *(_BYTE *)(a1 + 4792) = *(_BYTE *)(a2 + 4792);
    *(_QWORD *)(a1 + 4784) = *(_QWORD *)(a2 + 4784);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v267 = *(_QWORD *)(a2 + 4800);
    if (v267)
      goto LABEL_96;
    goto LABEL_252;
  }
LABEL_251:
  v552 = *(_OWORD *)(a2 + 4752);
  *(_OWORD *)(a1 + 4736) = *(_OWORD *)(a2 + 4736);
  *(_OWORD *)(a1 + 4752) = v552;
  *(_OWORD *)(a1 + 4768) = *(_OWORD *)(a2 + 4768);
  *(_OWORD *)(a1 + 4777) = *(_OWORD *)(a2 + 4777);
  v267 = *(_QWORD *)(a2 + 4800);
  if (v267)
  {
LABEL_96:
    v268 = *(_QWORD *)(a2 + 4808);
    *(_QWORD *)(a1 + 4800) = v267;
    *(_QWORD *)(a1 + 4808) = v268;
    *(_QWORD *)(a1 + 4816) = *(_QWORD *)(a2 + 4816);
    *(_QWORD *)(a1 + 4824) = *(_QWORD *)(a2 + 4824);
    v269 = *(_QWORD *)(a2 + 4840);
    *(_QWORD *)(a1 + 4832) = *(_QWORD *)(a2 + 4832);
    *(_QWORD *)(a1 + 4840) = v269;
    *(_BYTE *)(a1 + 4856) = *(_BYTE *)(a2 + 4856);
    *(_QWORD *)(a1 + 4848) = *(_QWORD *)(a2 + 4848);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v270 = *(_QWORD *)(a2 + 4864);
    if (v270)
      goto LABEL_97;
    goto LABEL_253;
  }
LABEL_252:
  v553 = *(_OWORD *)(a2 + 4816);
  *(_OWORD *)(a1 + 4800) = *(_OWORD *)(a2 + 4800);
  *(_OWORD *)(a1 + 4816) = v553;
  *(_OWORD *)(a1 + 4832) = *(_OWORD *)(a2 + 4832);
  *(_OWORD *)(a1 + 4841) = *(_OWORD *)(a2 + 4841);
  v270 = *(_QWORD *)(a2 + 4864);
  if (v270)
  {
LABEL_97:
    v271 = *(_QWORD *)(a2 + 4872);
    *(_QWORD *)(a1 + 4864) = v270;
    *(_QWORD *)(a1 + 4872) = v271;
    *(_QWORD *)(a1 + 4880) = *(_QWORD *)(a2 + 4880);
    *(_QWORD *)(a1 + 4888) = *(_QWORD *)(a2 + 4888);
    v272 = *(_QWORD *)(a2 + 4904);
    *(_QWORD *)(a1 + 4896) = *(_QWORD *)(a2 + 4896);
    *(_QWORD *)(a1 + 4904) = v272;
    *(_BYTE *)(a1 + 4920) = *(_BYTE *)(a2 + 4920);
    *(_QWORD *)(a1 + 4912) = *(_QWORD *)(a2 + 4912);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v273 = *(_QWORD *)(a2 + 4928);
    if (v273)
      goto LABEL_98;
    goto LABEL_254;
  }
LABEL_253:
  v554 = *(_OWORD *)(a2 + 4880);
  *(_OWORD *)(a1 + 4864) = *(_OWORD *)(a2 + 4864);
  *(_OWORD *)(a1 + 4880) = v554;
  *(_OWORD *)(a1 + 4896) = *(_OWORD *)(a2 + 4896);
  *(_OWORD *)(a1 + 4905) = *(_OWORD *)(a2 + 4905);
  v273 = *(_QWORD *)(a2 + 4928);
  if (v273)
  {
LABEL_98:
    v274 = *(_QWORD *)(a2 + 4936);
    *(_QWORD *)(a1 + 4928) = v273;
    *(_QWORD *)(a1 + 4936) = v274;
    *(_QWORD *)(a1 + 4944) = *(_QWORD *)(a2 + 4944);
    *(_QWORD *)(a1 + 4952) = *(_QWORD *)(a2 + 4952);
    swift_retain();
    swift_bridgeObjectRetain();
    v275 = *(_QWORD *)(a2 + 4960);
    if (v275)
      goto LABEL_99;
    goto LABEL_255;
  }
LABEL_254:
  v555 = *(_OWORD *)(a2 + 4944);
  *(_OWORD *)(a1 + 4928) = *(_OWORD *)(a2 + 4928);
  *(_OWORD *)(a1 + 4944) = v555;
  v275 = *(_QWORD *)(a2 + 4960);
  if (v275)
  {
LABEL_99:
    v276 = *(_QWORD *)(a2 + 4968);
    *(_QWORD *)(a1 + 4960) = v275;
    *(_QWORD *)(a1 + 4968) = v276;
    *(_QWORD *)(a1 + 4976) = *(_QWORD *)(a2 + 4976);
    *(_QWORD *)(a1 + 4984) = *(_QWORD *)(a2 + 4984);
    v277 = *(_QWORD *)(a2 + 5000);
    *(_QWORD *)(a1 + 4992) = *(_QWORD *)(a2 + 4992);
    *(_QWORD *)(a1 + 5000) = v277;
    *(_BYTE *)(a1 + 5016) = *(_BYTE *)(a2 + 5016);
    *(_QWORD *)(a1 + 5008) = *(_QWORD *)(a2 + 5008);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v278 = *(_QWORD *)(a2 + 5024);
    if (v278)
      goto LABEL_100;
    goto LABEL_256;
  }
LABEL_255:
  v556 = *(_OWORD *)(a2 + 4976);
  *(_OWORD *)(a1 + 4960) = *(_OWORD *)(a2 + 4960);
  *(_OWORD *)(a1 + 4976) = v556;
  *(_OWORD *)(a1 + 4992) = *(_OWORD *)(a2 + 4992);
  *(_OWORD *)(a1 + 5001) = *(_OWORD *)(a2 + 5001);
  v278 = *(_QWORD *)(a2 + 5024);
  if (v278)
  {
LABEL_100:
    v279 = *(_QWORD *)(a2 + 5032);
    *(_QWORD *)(a1 + 5024) = v278;
    *(_QWORD *)(a1 + 5032) = v279;
    *(_QWORD *)(a1 + 5040) = *(_QWORD *)(a2 + 5040);
    *(_QWORD *)(a1 + 5048) = *(_QWORD *)(a2 + 5048);
    v280 = *(_QWORD *)(a2 + 5064);
    *(_QWORD *)(a1 + 5056) = *(_QWORD *)(a2 + 5056);
    *(_QWORD *)(a1 + 5064) = v280;
    *(_BYTE *)(a1 + 5080) = *(_BYTE *)(a2 + 5080);
    *(_QWORD *)(a1 + 5072) = *(_QWORD *)(a2 + 5072);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v281 = *(_QWORD *)(a2 + 5088);
    if (v281)
      goto LABEL_101;
    goto LABEL_257;
  }
LABEL_256:
  v557 = *(_OWORD *)(a2 + 5040);
  *(_OWORD *)(a1 + 5024) = *(_OWORD *)(a2 + 5024);
  *(_OWORD *)(a1 + 5040) = v557;
  *(_OWORD *)(a1 + 5056) = *(_OWORD *)(a2 + 5056);
  *(_OWORD *)(a1 + 5065) = *(_OWORD *)(a2 + 5065);
  v281 = *(_QWORD *)(a2 + 5088);
  if (v281)
  {
LABEL_101:
    v282 = *(_QWORD *)(a2 + 5096);
    *(_QWORD *)(a1 + 5088) = v281;
    *(_QWORD *)(a1 + 5096) = v282;
    *(_QWORD *)(a1 + 5104) = *(_QWORD *)(a2 + 5104);
    *(_QWORD *)(a1 + 5112) = *(_QWORD *)(a2 + 5112);
    v283 = *(_QWORD *)(a2 + 5128);
    *(_QWORD *)(a1 + 5120) = *(_QWORD *)(a2 + 5120);
    *(_QWORD *)(a1 + 5128) = v283;
    *(_BYTE *)(a1 + 5144) = *(_BYTE *)(a2 + 5144);
    *(_QWORD *)(a1 + 5136) = *(_QWORD *)(a2 + 5136);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v284 = *(_QWORD *)(a2 + 5152);
    if (v284)
      goto LABEL_102;
    goto LABEL_258;
  }
LABEL_257:
  v558 = *(_OWORD *)(a2 + 5104);
  *(_OWORD *)(a1 + 5088) = *(_OWORD *)(a2 + 5088);
  *(_OWORD *)(a1 + 5104) = v558;
  *(_OWORD *)(a1 + 5120) = *(_OWORD *)(a2 + 5120);
  *(_OWORD *)(a1 + 5129) = *(_OWORD *)(a2 + 5129);
  v284 = *(_QWORD *)(a2 + 5152);
  if (v284)
  {
LABEL_102:
    v285 = *(_QWORD *)(a2 + 5160);
    *(_QWORD *)(a1 + 5152) = v284;
    *(_QWORD *)(a1 + 5160) = v285;
    *(_QWORD *)(a1 + 5168) = *(_QWORD *)(a2 + 5168);
    *(_QWORD *)(a1 + 5176) = *(_QWORD *)(a2 + 5176);
    swift_retain();
    swift_bridgeObjectRetain();
    v286 = *(_QWORD *)(a2 + 5184);
    if (v286)
      goto LABEL_103;
    goto LABEL_259;
  }
LABEL_258:
  v559 = *(_OWORD *)(a2 + 5168);
  *(_OWORD *)(a1 + 5152) = *(_OWORD *)(a2 + 5152);
  *(_OWORD *)(a1 + 5168) = v559;
  v286 = *(_QWORD *)(a2 + 5184);
  if (v286)
  {
LABEL_103:
    v287 = *(_QWORD *)(a2 + 5192);
    *(_QWORD *)(a1 + 5184) = v286;
    *(_QWORD *)(a1 + 5192) = v287;
    *(_QWORD *)(a1 + 5200) = *(_QWORD *)(a2 + 5200);
    *(_QWORD *)(a1 + 5208) = *(_QWORD *)(a2 + 5208);
    v288 = *(_QWORD *)(a2 + 5224);
    *(_QWORD *)(a1 + 5216) = *(_QWORD *)(a2 + 5216);
    *(_QWORD *)(a1 + 5224) = v288;
    *(_BYTE *)(a1 + 5240) = *(_BYTE *)(a2 + 5240);
    *(_QWORD *)(a1 + 5232) = *(_QWORD *)(a2 + 5232);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v289 = *(_QWORD *)(a2 + 5248);
    if (v289)
      goto LABEL_104;
    goto LABEL_260;
  }
LABEL_259:
  v560 = *(_OWORD *)(a2 + 5200);
  *(_OWORD *)(a1 + 5184) = *(_OWORD *)(a2 + 5184);
  *(_OWORD *)(a1 + 5200) = v560;
  *(_OWORD *)(a1 + 5216) = *(_OWORD *)(a2 + 5216);
  *(_OWORD *)(a1 + 5225) = *(_OWORD *)(a2 + 5225);
  v289 = *(_QWORD *)(a2 + 5248);
  if (v289)
  {
LABEL_104:
    v290 = *(_QWORD *)(a2 + 5256);
    *(_QWORD *)(a1 + 5248) = v289;
    *(_QWORD *)(a1 + 5256) = v290;
    *(_QWORD *)(a1 + 5264) = *(_QWORD *)(a2 + 5264);
    *(_QWORD *)(a1 + 5272) = *(_QWORD *)(a2 + 5272);
    v291 = *(_QWORD *)(a2 + 5288);
    *(_QWORD *)(a1 + 5280) = *(_QWORD *)(a2 + 5280);
    *(_QWORD *)(a1 + 5288) = v291;
    *(_BYTE *)(a1 + 5304) = *(_BYTE *)(a2 + 5304);
    *(_QWORD *)(a1 + 5296) = *(_QWORD *)(a2 + 5296);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v292 = *(_QWORD *)(a2 + 5312);
    if (v292)
      goto LABEL_105;
    goto LABEL_261;
  }
LABEL_260:
  v561 = *(_OWORD *)(a2 + 5264);
  *(_OWORD *)(a1 + 5248) = *(_OWORD *)(a2 + 5248);
  *(_OWORD *)(a1 + 5264) = v561;
  *(_OWORD *)(a1 + 5280) = *(_OWORD *)(a2 + 5280);
  *(_OWORD *)(a1 + 5289) = *(_OWORD *)(a2 + 5289);
  v292 = *(_QWORD *)(a2 + 5312);
  if (v292)
  {
LABEL_105:
    v293 = *(_QWORD *)(a2 + 5320);
    *(_QWORD *)(a1 + 5312) = v292;
    *(_QWORD *)(a1 + 5320) = v293;
    *(_QWORD *)(a1 + 5328) = *(_QWORD *)(a2 + 5328);
    *(_QWORD *)(a1 + 5336) = *(_QWORD *)(a2 + 5336);
    v294 = *(_QWORD *)(a2 + 5352);
    *(_QWORD *)(a1 + 5344) = *(_QWORD *)(a2 + 5344);
    *(_QWORD *)(a1 + 5352) = v294;
    *(_BYTE *)(a1 + 5368) = *(_BYTE *)(a2 + 5368);
    *(_QWORD *)(a1 + 5360) = *(_QWORD *)(a2 + 5360);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v295 = *(_QWORD *)(a2 + 5376);
    if (v295)
      goto LABEL_106;
    goto LABEL_262;
  }
LABEL_261:
  v562 = *(_OWORD *)(a2 + 5328);
  *(_OWORD *)(a1 + 5312) = *(_OWORD *)(a2 + 5312);
  *(_OWORD *)(a1 + 5328) = v562;
  *(_OWORD *)(a1 + 5344) = *(_OWORD *)(a2 + 5344);
  *(_OWORD *)(a1 + 5353) = *(_OWORD *)(a2 + 5353);
  v295 = *(_QWORD *)(a2 + 5376);
  if (v295)
  {
LABEL_106:
    v296 = *(_QWORD *)(a2 + 5384);
    *(_QWORD *)(a1 + 5376) = v295;
    *(_QWORD *)(a1 + 5384) = v296;
    *(_QWORD *)(a1 + 5392) = *(_QWORD *)(a2 + 5392);
    *(_QWORD *)(a1 + 5400) = *(_QWORD *)(a2 + 5400);
    swift_retain();
    swift_bridgeObjectRetain();
    v297 = *(_QWORD *)(a2 + 5408);
    if (v297)
      goto LABEL_107;
    goto LABEL_263;
  }
LABEL_262:
  v563 = *(_OWORD *)(a2 + 5392);
  *(_OWORD *)(a1 + 5376) = *(_OWORD *)(a2 + 5376);
  *(_OWORD *)(a1 + 5392) = v563;
  v297 = *(_QWORD *)(a2 + 5408);
  if (v297)
  {
LABEL_107:
    v298 = *(_QWORD *)(a2 + 5416);
    *(_QWORD *)(a1 + 5408) = v297;
    *(_QWORD *)(a1 + 5416) = v298;
    *(_QWORD *)(a1 + 5424) = *(_QWORD *)(a2 + 5424);
    *(_QWORD *)(a1 + 5432) = *(_QWORD *)(a2 + 5432);
    v299 = *(_QWORD *)(a2 + 5448);
    *(_QWORD *)(a1 + 5440) = *(_QWORD *)(a2 + 5440);
    *(_QWORD *)(a1 + 5448) = v299;
    *(_BYTE *)(a1 + 5464) = *(_BYTE *)(a2 + 5464);
    *(_QWORD *)(a1 + 5456) = *(_QWORD *)(a2 + 5456);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v300 = *(_QWORD *)(a2 + 5472);
    if (v300)
      goto LABEL_108;
    goto LABEL_264;
  }
LABEL_263:
  v564 = *(_OWORD *)(a2 + 5424);
  *(_OWORD *)(a1 + 5408) = *(_OWORD *)(a2 + 5408);
  *(_OWORD *)(a1 + 5424) = v564;
  *(_OWORD *)(a1 + 5440) = *(_OWORD *)(a2 + 5440);
  *(_OWORD *)(a1 + 5449) = *(_OWORD *)(a2 + 5449);
  v300 = *(_QWORD *)(a2 + 5472);
  if (v300)
  {
LABEL_108:
    v301 = *(_QWORD *)(a2 + 5480);
    *(_QWORD *)(a1 + 5472) = v300;
    *(_QWORD *)(a1 + 5480) = v301;
    *(_QWORD *)(a1 + 5488) = *(_QWORD *)(a2 + 5488);
    *(_QWORD *)(a1 + 5496) = *(_QWORD *)(a2 + 5496);
    v302 = *(_QWORD *)(a2 + 5512);
    *(_QWORD *)(a1 + 5504) = *(_QWORD *)(a2 + 5504);
    *(_QWORD *)(a1 + 5512) = v302;
    *(_BYTE *)(a1 + 5528) = *(_BYTE *)(a2 + 5528);
    *(_QWORD *)(a1 + 5520) = *(_QWORD *)(a2 + 5520);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v303 = *(_QWORD *)(a2 + 5536);
    if (v303)
      goto LABEL_109;
    goto LABEL_265;
  }
LABEL_264:
  v565 = *(_OWORD *)(a2 + 5488);
  *(_OWORD *)(a1 + 5472) = *(_OWORD *)(a2 + 5472);
  *(_OWORD *)(a1 + 5488) = v565;
  *(_OWORD *)(a1 + 5504) = *(_OWORD *)(a2 + 5504);
  *(_OWORD *)(a1 + 5513) = *(_OWORD *)(a2 + 5513);
  v303 = *(_QWORD *)(a2 + 5536);
  if (v303)
  {
LABEL_109:
    v304 = *(_QWORD *)(a2 + 5544);
    *(_QWORD *)(a1 + 5536) = v303;
    *(_QWORD *)(a1 + 5544) = v304;
    *(_QWORD *)(a1 + 5552) = *(_QWORD *)(a2 + 5552);
    *(_QWORD *)(a1 + 5560) = *(_QWORD *)(a2 + 5560);
    v305 = *(_QWORD *)(a2 + 5576);
    *(_QWORD *)(a1 + 5568) = *(_QWORD *)(a2 + 5568);
    *(_QWORD *)(a1 + 5576) = v305;
    *(_BYTE *)(a1 + 5592) = *(_BYTE *)(a2 + 5592);
    *(_QWORD *)(a1 + 5584) = *(_QWORD *)(a2 + 5584);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v306 = *(_QWORD *)(a2 + 5600);
    if (v306)
      goto LABEL_110;
    goto LABEL_266;
  }
LABEL_265:
  v566 = *(_OWORD *)(a2 + 5552);
  *(_OWORD *)(a1 + 5536) = *(_OWORD *)(a2 + 5536);
  *(_OWORD *)(a1 + 5552) = v566;
  *(_OWORD *)(a1 + 5568) = *(_OWORD *)(a2 + 5568);
  *(_OWORD *)(a1 + 5577) = *(_OWORD *)(a2 + 5577);
  v306 = *(_QWORD *)(a2 + 5600);
  if (v306)
  {
LABEL_110:
    v307 = *(_QWORD *)(a2 + 5608);
    *(_QWORD *)(a1 + 5600) = v306;
    *(_QWORD *)(a1 + 5608) = v307;
    *(_QWORD *)(a1 + 5616) = *(_QWORD *)(a2 + 5616);
    *(_QWORD *)(a1 + 5624) = *(_QWORD *)(a2 + 5624);
    swift_retain();
    swift_bridgeObjectRetain();
    v308 = *(_QWORD *)(a2 + 5632);
    if (v308)
      goto LABEL_111;
    goto LABEL_267;
  }
LABEL_266:
  v567 = *(_OWORD *)(a2 + 5616);
  *(_OWORD *)(a1 + 5600) = *(_OWORD *)(a2 + 5600);
  *(_OWORD *)(a1 + 5616) = v567;
  v308 = *(_QWORD *)(a2 + 5632);
  if (v308)
  {
LABEL_111:
    v309 = *(_QWORD *)(a2 + 5640);
    *(_QWORD *)(a1 + 5632) = v308;
    *(_QWORD *)(a1 + 5640) = v309;
    *(_QWORD *)(a1 + 5648) = *(_QWORD *)(a2 + 5648);
    *(_QWORD *)(a1 + 5656) = *(_QWORD *)(a2 + 5656);
    v310 = *(_QWORD *)(a2 + 5672);
    *(_QWORD *)(a1 + 5664) = *(_QWORD *)(a2 + 5664);
    *(_QWORD *)(a1 + 5672) = v310;
    *(_BYTE *)(a1 + 5688) = *(_BYTE *)(a2 + 5688);
    *(_QWORD *)(a1 + 5680) = *(_QWORD *)(a2 + 5680);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v311 = *(_QWORD *)(a2 + 5696);
    if (v311)
      goto LABEL_112;
    goto LABEL_268;
  }
LABEL_267:
  v568 = *(_OWORD *)(a2 + 5648);
  *(_OWORD *)(a1 + 5632) = *(_OWORD *)(a2 + 5632);
  *(_OWORD *)(a1 + 5648) = v568;
  *(_OWORD *)(a1 + 5664) = *(_OWORD *)(a2 + 5664);
  *(_OWORD *)(a1 + 5673) = *(_OWORD *)(a2 + 5673);
  v311 = *(_QWORD *)(a2 + 5696);
  if (v311)
  {
LABEL_112:
    v312 = *(_QWORD *)(a2 + 5704);
    *(_QWORD *)(a1 + 5696) = v311;
    *(_QWORD *)(a1 + 5704) = v312;
    *(_QWORD *)(a1 + 5712) = *(_QWORD *)(a2 + 5712);
    *(_QWORD *)(a1 + 5720) = *(_QWORD *)(a2 + 5720);
    v313 = *(_QWORD *)(a2 + 5736);
    *(_QWORD *)(a1 + 5728) = *(_QWORD *)(a2 + 5728);
    *(_QWORD *)(a1 + 5736) = v313;
    *(_BYTE *)(a1 + 5752) = *(_BYTE *)(a2 + 5752);
    *(_QWORD *)(a1 + 5744) = *(_QWORD *)(a2 + 5744);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v314 = *(_QWORD *)(a2 + 5760);
    if (v314)
      goto LABEL_113;
    goto LABEL_269;
  }
LABEL_268:
  v569 = *(_OWORD *)(a2 + 5712);
  *(_OWORD *)(a1 + 5696) = *(_OWORD *)(a2 + 5696);
  *(_OWORD *)(a1 + 5712) = v569;
  *(_OWORD *)(a1 + 5728) = *(_OWORD *)(a2 + 5728);
  *(_OWORD *)(a1 + 5737) = *(_OWORD *)(a2 + 5737);
  v314 = *(_QWORD *)(a2 + 5760);
  if (v314)
  {
LABEL_113:
    v315 = *(_QWORD *)(a2 + 5768);
    *(_QWORD *)(a1 + 5760) = v314;
    *(_QWORD *)(a1 + 5768) = v315;
    *(_QWORD *)(a1 + 5776) = *(_QWORD *)(a2 + 5776);
    *(_QWORD *)(a1 + 5784) = *(_QWORD *)(a2 + 5784);
    v316 = *(_QWORD *)(a2 + 5800);
    *(_QWORD *)(a1 + 5792) = *(_QWORD *)(a2 + 5792);
    *(_QWORD *)(a1 + 5800) = v316;
    *(_BYTE *)(a1 + 5816) = *(_BYTE *)(a2 + 5816);
    *(_QWORD *)(a1 + 5808) = *(_QWORD *)(a2 + 5808);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v317 = *(_QWORD *)(a2 + 5824);
    if (v317)
      goto LABEL_114;
    goto LABEL_270;
  }
LABEL_269:
  v570 = *(_OWORD *)(a2 + 5776);
  *(_OWORD *)(a1 + 5760) = *(_OWORD *)(a2 + 5760);
  *(_OWORD *)(a1 + 5776) = v570;
  *(_OWORD *)(a1 + 5792) = *(_OWORD *)(a2 + 5792);
  *(_OWORD *)(a1 + 5801) = *(_OWORD *)(a2 + 5801);
  v317 = *(_QWORD *)(a2 + 5824);
  if (v317)
  {
LABEL_114:
    v318 = *(_QWORD *)(a2 + 5832);
    *(_QWORD *)(a1 + 5824) = v317;
    *(_QWORD *)(a1 + 5832) = v318;
    *(_QWORD *)(a1 + 5840) = *(_QWORD *)(a2 + 5840);
    *(_QWORD *)(a1 + 5848) = *(_QWORD *)(a2 + 5848);
    swift_retain();
    swift_bridgeObjectRetain();
    v319 = *(_QWORD *)(a2 + 5856);
    if (v319)
      goto LABEL_115;
    goto LABEL_271;
  }
LABEL_270:
  v571 = *(_OWORD *)(a2 + 5840);
  *(_OWORD *)(a1 + 5824) = *(_OWORD *)(a2 + 5824);
  *(_OWORD *)(a1 + 5840) = v571;
  v319 = *(_QWORD *)(a2 + 5856);
  if (v319)
  {
LABEL_115:
    v320 = *(_QWORD *)(a2 + 5864);
    *(_QWORD *)(a1 + 5856) = v319;
    *(_QWORD *)(a1 + 5864) = v320;
    *(_QWORD *)(a1 + 5872) = *(_QWORD *)(a2 + 5872);
    *(_QWORD *)(a1 + 5880) = *(_QWORD *)(a2 + 5880);
    v321 = *(_QWORD *)(a2 + 5896);
    *(_QWORD *)(a1 + 5888) = *(_QWORD *)(a2 + 5888);
    *(_QWORD *)(a1 + 5896) = v321;
    *(_BYTE *)(a1 + 5912) = *(_BYTE *)(a2 + 5912);
    *(_QWORD *)(a1 + 5904) = *(_QWORD *)(a2 + 5904);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v322 = *(_QWORD *)(a2 + 5920);
    if (v322)
      goto LABEL_116;
    goto LABEL_272;
  }
LABEL_271:
  v572 = *(_OWORD *)(a2 + 5872);
  *(_OWORD *)(a1 + 5856) = *(_OWORD *)(a2 + 5856);
  *(_OWORD *)(a1 + 5872) = v572;
  *(_OWORD *)(a1 + 5888) = *(_OWORD *)(a2 + 5888);
  *(_OWORD *)(a1 + 5897) = *(_OWORD *)(a2 + 5897);
  v322 = *(_QWORD *)(a2 + 5920);
  if (v322)
  {
LABEL_116:
    v323 = *(_QWORD *)(a2 + 5928);
    *(_QWORD *)(a1 + 5920) = v322;
    *(_QWORD *)(a1 + 5928) = v323;
    *(_QWORD *)(a1 + 5936) = *(_QWORD *)(a2 + 5936);
    *(_QWORD *)(a1 + 5944) = *(_QWORD *)(a2 + 5944);
    v324 = *(_QWORD *)(a2 + 5960);
    *(_QWORD *)(a1 + 5952) = *(_QWORD *)(a2 + 5952);
    *(_QWORD *)(a1 + 5960) = v324;
    *(_BYTE *)(a1 + 5976) = *(_BYTE *)(a2 + 5976);
    *(_QWORD *)(a1 + 5968) = *(_QWORD *)(a2 + 5968);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v325 = *(_QWORD *)(a2 + 5984);
    if (v325)
      goto LABEL_117;
    goto LABEL_273;
  }
LABEL_272:
  v573 = *(_OWORD *)(a2 + 5936);
  *(_OWORD *)(a1 + 5920) = *(_OWORD *)(a2 + 5920);
  *(_OWORD *)(a1 + 5936) = v573;
  *(_OWORD *)(a1 + 5952) = *(_OWORD *)(a2 + 5952);
  *(_OWORD *)(a1 + 5961) = *(_OWORD *)(a2 + 5961);
  v325 = *(_QWORD *)(a2 + 5984);
  if (v325)
  {
LABEL_117:
    v326 = *(_QWORD *)(a2 + 5992);
    *(_QWORD *)(a1 + 5984) = v325;
    *(_QWORD *)(a1 + 5992) = v326;
    *(_QWORD *)(a1 + 6000) = *(_QWORD *)(a2 + 6000);
    *(_QWORD *)(a1 + 6008) = *(_QWORD *)(a2 + 6008);
    v327 = *(_QWORD *)(a2 + 6024);
    *(_QWORD *)(a1 + 6016) = *(_QWORD *)(a2 + 6016);
    *(_QWORD *)(a1 + 6024) = v327;
    *(_BYTE *)(a1 + 6040) = *(_BYTE *)(a2 + 6040);
    *(_QWORD *)(a1 + 6032) = *(_QWORD *)(a2 + 6032);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v328 = *(_QWORD *)(a2 + 6048);
    if (v328)
      goto LABEL_118;
    goto LABEL_274;
  }
LABEL_273:
  v574 = *(_OWORD *)(a2 + 6000);
  *(_OWORD *)(a1 + 5984) = *(_OWORD *)(a2 + 5984);
  *(_OWORD *)(a1 + 6000) = v574;
  *(_OWORD *)(a1 + 6016) = *(_OWORD *)(a2 + 6016);
  *(_OWORD *)(a1 + 6025) = *(_OWORD *)(a2 + 6025);
  v328 = *(_QWORD *)(a2 + 6048);
  if (v328)
  {
LABEL_118:
    v329 = *(_QWORD *)(a2 + 6056);
    *(_QWORD *)(a1 + 6048) = v328;
    *(_QWORD *)(a1 + 6056) = v329;
    *(_QWORD *)(a1 + 6064) = *(_QWORD *)(a2 + 6064);
    *(_QWORD *)(a1 + 6072) = *(_QWORD *)(a2 + 6072);
    swift_retain();
    swift_bridgeObjectRetain();
    v330 = *(_QWORD *)(a2 + 6080);
    if (v330)
      goto LABEL_119;
    goto LABEL_275;
  }
LABEL_274:
  v575 = *(_OWORD *)(a2 + 6064);
  *(_OWORD *)(a1 + 6048) = *(_OWORD *)(a2 + 6048);
  *(_OWORD *)(a1 + 6064) = v575;
  v330 = *(_QWORD *)(a2 + 6080);
  if (v330)
  {
LABEL_119:
    v331 = *(_QWORD *)(a2 + 6088);
    *(_QWORD *)(a1 + 6080) = v330;
    *(_QWORD *)(a1 + 6088) = v331;
    *(_QWORD *)(a1 + 6096) = *(_QWORD *)(a2 + 6096);
    *(_QWORD *)(a1 + 6104) = *(_QWORD *)(a2 + 6104);
    v332 = *(_QWORD *)(a2 + 6120);
    *(_QWORD *)(a1 + 6112) = *(_QWORD *)(a2 + 6112);
    *(_QWORD *)(a1 + 6120) = v332;
    *(_BYTE *)(a1 + 6136) = *(_BYTE *)(a2 + 6136);
    *(_QWORD *)(a1 + 6128) = *(_QWORD *)(a2 + 6128);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v333 = *(_QWORD *)(a2 + 6144);
    if (v333)
      goto LABEL_120;
    goto LABEL_276;
  }
LABEL_275:
  v576 = *(_OWORD *)(a2 + 6096);
  *(_OWORD *)(a1 + 6080) = *(_OWORD *)(a2 + 6080);
  *(_OWORD *)(a1 + 6096) = v576;
  *(_OWORD *)(a1 + 6112) = *(_OWORD *)(a2 + 6112);
  *(_OWORD *)(a1 + 6121) = *(_OWORD *)(a2 + 6121);
  v333 = *(_QWORD *)(a2 + 6144);
  if (v333)
  {
LABEL_120:
    v334 = *(_QWORD *)(a2 + 6152);
    *(_QWORD *)(a1 + 6144) = v333;
    *(_QWORD *)(a1 + 6152) = v334;
    *(_QWORD *)(a1 + 6160) = *(_QWORD *)(a2 + 6160);
    *(_QWORD *)(a1 + 6168) = *(_QWORD *)(a2 + 6168);
    v335 = *(_QWORD *)(a2 + 6184);
    *(_QWORD *)(a1 + 6176) = *(_QWORD *)(a2 + 6176);
    *(_QWORD *)(a1 + 6184) = v335;
    *(_BYTE *)(a1 + 6200) = *(_BYTE *)(a2 + 6200);
    *(_QWORD *)(a1 + 6192) = *(_QWORD *)(a2 + 6192);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v336 = *(_QWORD *)(a2 + 6208);
    if (v336)
      goto LABEL_121;
    goto LABEL_277;
  }
LABEL_276:
  v577 = *(_OWORD *)(a2 + 6160);
  *(_OWORD *)(a1 + 6144) = *(_OWORD *)(a2 + 6144);
  *(_OWORD *)(a1 + 6160) = v577;
  *(_OWORD *)(a1 + 6176) = *(_OWORD *)(a2 + 6176);
  *(_OWORD *)(a1 + 6185) = *(_OWORD *)(a2 + 6185);
  v336 = *(_QWORD *)(a2 + 6208);
  if (v336)
  {
LABEL_121:
    v337 = *(_QWORD *)(a2 + 6216);
    *(_QWORD *)(a1 + 6208) = v336;
    *(_QWORD *)(a1 + 6216) = v337;
    *(_QWORD *)(a1 + 6224) = *(_QWORD *)(a2 + 6224);
    *(_QWORD *)(a1 + 6232) = *(_QWORD *)(a2 + 6232);
    v338 = *(_QWORD *)(a2 + 6248);
    *(_QWORD *)(a1 + 6240) = *(_QWORD *)(a2 + 6240);
    *(_QWORD *)(a1 + 6248) = v338;
    *(_BYTE *)(a1 + 6264) = *(_BYTE *)(a2 + 6264);
    *(_QWORD *)(a1 + 6256) = *(_QWORD *)(a2 + 6256);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v339 = *(_QWORD *)(a2 + 6272);
    if (v339)
      goto LABEL_122;
    goto LABEL_278;
  }
LABEL_277:
  v578 = *(_OWORD *)(a2 + 6224);
  *(_OWORD *)(a1 + 6208) = *(_OWORD *)(a2 + 6208);
  *(_OWORD *)(a1 + 6224) = v578;
  *(_OWORD *)(a1 + 6240) = *(_OWORD *)(a2 + 6240);
  *(_OWORD *)(a1 + 6249) = *(_OWORD *)(a2 + 6249);
  v339 = *(_QWORD *)(a2 + 6272);
  if (v339)
  {
LABEL_122:
    v340 = *(_QWORD *)(a2 + 6280);
    *(_QWORD *)(a1 + 6272) = v339;
    *(_QWORD *)(a1 + 6280) = v340;
    *(_QWORD *)(a1 + 6288) = *(_QWORD *)(a2 + 6288);
    *(_QWORD *)(a1 + 6296) = *(_QWORD *)(a2 + 6296);
    swift_retain();
    swift_bridgeObjectRetain();
    v341 = *(_QWORD *)(a2 + 6304);
    if (v341)
      goto LABEL_123;
    goto LABEL_279;
  }
LABEL_278:
  v579 = *(_OWORD *)(a2 + 6288);
  *(_OWORD *)(a1 + 6272) = *(_OWORD *)(a2 + 6272);
  *(_OWORD *)(a1 + 6288) = v579;
  v341 = *(_QWORD *)(a2 + 6304);
  if (v341)
  {
LABEL_123:
    v342 = *(_QWORD *)(a2 + 6312);
    *(_QWORD *)(a1 + 6304) = v341;
    *(_QWORD *)(a1 + 6312) = v342;
    *(_QWORD *)(a1 + 6320) = *(_QWORD *)(a2 + 6320);
    *(_QWORD *)(a1 + 6328) = *(_QWORD *)(a2 + 6328);
    v343 = *(_QWORD *)(a2 + 6344);
    *(_QWORD *)(a1 + 6336) = *(_QWORD *)(a2 + 6336);
    *(_QWORD *)(a1 + 6344) = v343;
    *(_BYTE *)(a1 + 6360) = *(_BYTE *)(a2 + 6360);
    *(_QWORD *)(a1 + 6352) = *(_QWORD *)(a2 + 6352);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v344 = *(_QWORD *)(a2 + 6368);
    if (v344)
      goto LABEL_124;
    goto LABEL_280;
  }
LABEL_279:
  v580 = *(_OWORD *)(a2 + 6320);
  *(_OWORD *)(a1 + 6304) = *(_OWORD *)(a2 + 6304);
  *(_OWORD *)(a1 + 6320) = v580;
  *(_OWORD *)(a1 + 6336) = *(_OWORD *)(a2 + 6336);
  *(_OWORD *)(a1 + 6345) = *(_OWORD *)(a2 + 6345);
  v344 = *(_QWORD *)(a2 + 6368);
  if (v344)
  {
LABEL_124:
    v345 = *(_QWORD *)(a2 + 6376);
    *(_QWORD *)(a1 + 6368) = v344;
    *(_QWORD *)(a1 + 6376) = v345;
    *(_QWORD *)(a1 + 6384) = *(_QWORD *)(a2 + 6384);
    *(_QWORD *)(a1 + 6392) = *(_QWORD *)(a2 + 6392);
    v346 = *(_QWORD *)(a2 + 6408);
    *(_QWORD *)(a1 + 6400) = *(_QWORD *)(a2 + 6400);
    *(_QWORD *)(a1 + 6408) = v346;
    *(_BYTE *)(a1 + 6424) = *(_BYTE *)(a2 + 6424);
    *(_QWORD *)(a1 + 6416) = *(_QWORD *)(a2 + 6416);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v347 = *(_QWORD *)(a2 + 6432);
    if (v347)
      goto LABEL_125;
    goto LABEL_281;
  }
LABEL_280:
  v581 = *(_OWORD *)(a2 + 6384);
  *(_OWORD *)(a1 + 6368) = *(_OWORD *)(a2 + 6368);
  *(_OWORD *)(a1 + 6384) = v581;
  *(_OWORD *)(a1 + 6400) = *(_OWORD *)(a2 + 6400);
  *(_OWORD *)(a1 + 6409) = *(_OWORD *)(a2 + 6409);
  v347 = *(_QWORD *)(a2 + 6432);
  if (v347)
  {
LABEL_125:
    v348 = *(_QWORD *)(a2 + 6440);
    *(_QWORD *)(a1 + 6432) = v347;
    *(_QWORD *)(a1 + 6440) = v348;
    *(_QWORD *)(a1 + 6448) = *(_QWORD *)(a2 + 6448);
    *(_QWORD *)(a1 + 6456) = *(_QWORD *)(a2 + 6456);
    v349 = *(_QWORD *)(a2 + 6472);
    *(_QWORD *)(a1 + 6464) = *(_QWORD *)(a2 + 6464);
    *(_QWORD *)(a1 + 6472) = v349;
    *(_BYTE *)(a1 + 6488) = *(_BYTE *)(a2 + 6488);
    *(_QWORD *)(a1 + 6480) = *(_QWORD *)(a2 + 6480);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v350 = *(_QWORD *)(a2 + 6496);
    if (v350)
      goto LABEL_126;
    goto LABEL_282;
  }
LABEL_281:
  v582 = *(_OWORD *)(a2 + 6448);
  *(_OWORD *)(a1 + 6432) = *(_OWORD *)(a2 + 6432);
  *(_OWORD *)(a1 + 6448) = v582;
  *(_OWORD *)(a1 + 6464) = *(_OWORD *)(a2 + 6464);
  *(_OWORD *)(a1 + 6473) = *(_OWORD *)(a2 + 6473);
  v350 = *(_QWORD *)(a2 + 6496);
  if (v350)
  {
LABEL_126:
    v351 = *(_QWORD *)(a2 + 6504);
    *(_QWORD *)(a1 + 6496) = v350;
    *(_QWORD *)(a1 + 6504) = v351;
    *(_QWORD *)(a1 + 6512) = *(_QWORD *)(a2 + 6512);
    *(_QWORD *)(a1 + 6520) = *(_QWORD *)(a2 + 6520);
    swift_retain();
    swift_bridgeObjectRetain();
    v352 = *(_QWORD *)(a2 + 6528);
    if (v352)
      goto LABEL_127;
    goto LABEL_283;
  }
LABEL_282:
  v583 = *(_OWORD *)(a2 + 6512);
  *(_OWORD *)(a1 + 6496) = *(_OWORD *)(a2 + 6496);
  *(_OWORD *)(a1 + 6512) = v583;
  v352 = *(_QWORD *)(a2 + 6528);
  if (v352)
  {
LABEL_127:
    v353 = *(_QWORD *)(a2 + 6536);
    *(_QWORD *)(a1 + 6528) = v352;
    *(_QWORD *)(a1 + 6536) = v353;
    *(_QWORD *)(a1 + 6544) = *(_QWORD *)(a2 + 6544);
    *(_QWORD *)(a1 + 6552) = *(_QWORD *)(a2 + 6552);
    v354 = *(_QWORD *)(a2 + 6568);
    *(_QWORD *)(a1 + 6560) = *(_QWORD *)(a2 + 6560);
    *(_QWORD *)(a1 + 6568) = v354;
    *(_BYTE *)(a1 + 6584) = *(_BYTE *)(a2 + 6584);
    *(_QWORD *)(a1 + 6576) = *(_QWORD *)(a2 + 6576);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v355 = *(_QWORD *)(a2 + 6592);
    if (v355)
      goto LABEL_128;
    goto LABEL_284;
  }
LABEL_283:
  v584 = *(_OWORD *)(a2 + 6544);
  *(_OWORD *)(a1 + 6528) = *(_OWORD *)(a2 + 6528);
  *(_OWORD *)(a1 + 6544) = v584;
  *(_OWORD *)(a1 + 6560) = *(_OWORD *)(a2 + 6560);
  *(_OWORD *)(a1 + 6569) = *(_OWORD *)(a2 + 6569);
  v355 = *(_QWORD *)(a2 + 6592);
  if (v355)
  {
LABEL_128:
    v356 = *(_QWORD *)(a2 + 6600);
    *(_QWORD *)(a1 + 6592) = v355;
    *(_QWORD *)(a1 + 6600) = v356;
    *(_QWORD *)(a1 + 6608) = *(_QWORD *)(a2 + 6608);
    *(_QWORD *)(a1 + 6616) = *(_QWORD *)(a2 + 6616);
    v357 = *(_QWORD *)(a2 + 6632);
    *(_QWORD *)(a1 + 6624) = *(_QWORD *)(a2 + 6624);
    *(_QWORD *)(a1 + 6632) = v357;
    *(_BYTE *)(a1 + 6648) = *(_BYTE *)(a2 + 6648);
    *(_QWORD *)(a1 + 6640) = *(_QWORD *)(a2 + 6640);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v358 = *(_QWORD *)(a2 + 6656);
    if (v358)
      goto LABEL_129;
    goto LABEL_285;
  }
LABEL_284:
  v585 = *(_OWORD *)(a2 + 6608);
  *(_OWORD *)(a1 + 6592) = *(_OWORD *)(a2 + 6592);
  *(_OWORD *)(a1 + 6608) = v585;
  *(_OWORD *)(a1 + 6624) = *(_OWORD *)(a2 + 6624);
  *(_OWORD *)(a1 + 6633) = *(_OWORD *)(a2 + 6633);
  v358 = *(_QWORD *)(a2 + 6656);
  if (v358)
  {
LABEL_129:
    v359 = *(_QWORD *)(a2 + 6664);
    *(_QWORD *)(a1 + 6656) = v358;
    *(_QWORD *)(a1 + 6664) = v359;
    *(_QWORD *)(a1 + 6672) = *(_QWORD *)(a2 + 6672);
    *(_QWORD *)(a1 + 6680) = *(_QWORD *)(a2 + 6680);
    v360 = *(_QWORD *)(a2 + 6696);
    *(_QWORD *)(a1 + 6688) = *(_QWORD *)(a2 + 6688);
    *(_QWORD *)(a1 + 6696) = v360;
    *(_BYTE *)(a1 + 6712) = *(_BYTE *)(a2 + 6712);
    *(_QWORD *)(a1 + 6704) = *(_QWORD *)(a2 + 6704);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v361 = *(_QWORD *)(a2 + 6720);
    if (v361)
      goto LABEL_130;
    goto LABEL_286;
  }
LABEL_285:
  v586 = *(_OWORD *)(a2 + 6672);
  *(_OWORD *)(a1 + 6656) = *(_OWORD *)(a2 + 6656);
  *(_OWORD *)(a1 + 6672) = v586;
  *(_OWORD *)(a1 + 6688) = *(_OWORD *)(a2 + 6688);
  *(_OWORD *)(a1 + 6697) = *(_OWORD *)(a2 + 6697);
  v361 = *(_QWORD *)(a2 + 6720);
  if (v361)
  {
LABEL_130:
    v362 = *(_QWORD *)(a2 + 6728);
    *(_QWORD *)(a1 + 6720) = v361;
    *(_QWORD *)(a1 + 6728) = v362;
    *(_QWORD *)(a1 + 6736) = *(_QWORD *)(a2 + 6736);
    *(_QWORD *)(a1 + 6744) = *(_QWORD *)(a2 + 6744);
    swift_retain();
    swift_bridgeObjectRetain();
    v363 = *(_QWORD *)(a2 + 6752);
    if (v363)
      goto LABEL_131;
    goto LABEL_287;
  }
LABEL_286:
  v587 = *(_OWORD *)(a2 + 6736);
  *(_OWORD *)(a1 + 6720) = *(_OWORD *)(a2 + 6720);
  *(_OWORD *)(a1 + 6736) = v587;
  v363 = *(_QWORD *)(a2 + 6752);
  if (v363)
  {
LABEL_131:
    v364 = *(_QWORD *)(a2 + 6760);
    *(_QWORD *)(a1 + 6752) = v363;
    *(_QWORD *)(a1 + 6760) = v364;
    *(_QWORD *)(a1 + 6768) = *(_QWORD *)(a2 + 6768);
    *(_QWORD *)(a1 + 6776) = *(_QWORD *)(a2 + 6776);
    v365 = *(_QWORD *)(a2 + 6792);
    *(_QWORD *)(a1 + 6784) = *(_QWORD *)(a2 + 6784);
    *(_QWORD *)(a1 + 6792) = v365;
    *(_BYTE *)(a1 + 6808) = *(_BYTE *)(a2 + 6808);
    *(_QWORD *)(a1 + 6800) = *(_QWORD *)(a2 + 6800);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v366 = *(_QWORD *)(a2 + 6816);
    if (v366)
      goto LABEL_132;
    goto LABEL_288;
  }
LABEL_287:
  v588 = *(_OWORD *)(a2 + 6768);
  *(_OWORD *)(a1 + 6752) = *(_OWORD *)(a2 + 6752);
  *(_OWORD *)(a1 + 6768) = v588;
  *(_OWORD *)(a1 + 6784) = *(_OWORD *)(a2 + 6784);
  *(_OWORD *)(a1 + 6793) = *(_OWORD *)(a2 + 6793);
  v366 = *(_QWORD *)(a2 + 6816);
  if (v366)
  {
LABEL_132:
    v367 = *(_QWORD *)(a2 + 6824);
    *(_QWORD *)(a1 + 6816) = v366;
    *(_QWORD *)(a1 + 6824) = v367;
    *(_QWORD *)(a1 + 6832) = *(_QWORD *)(a2 + 6832);
    *(_QWORD *)(a1 + 6840) = *(_QWORD *)(a2 + 6840);
    v368 = *(_QWORD *)(a2 + 6856);
    *(_QWORD *)(a1 + 6848) = *(_QWORD *)(a2 + 6848);
    *(_QWORD *)(a1 + 6856) = v368;
    *(_BYTE *)(a1 + 6872) = *(_BYTE *)(a2 + 6872);
    *(_QWORD *)(a1 + 6864) = *(_QWORD *)(a2 + 6864);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v369 = *(_QWORD *)(a2 + 6880);
    if (v369)
      goto LABEL_133;
    goto LABEL_289;
  }
LABEL_288:
  v589 = *(_OWORD *)(a2 + 6832);
  *(_OWORD *)(a1 + 6816) = *(_OWORD *)(a2 + 6816);
  *(_OWORD *)(a1 + 6832) = v589;
  *(_OWORD *)(a1 + 6848) = *(_OWORD *)(a2 + 6848);
  *(_OWORD *)(a1 + 6857) = *(_OWORD *)(a2 + 6857);
  v369 = *(_QWORD *)(a2 + 6880);
  if (v369)
  {
LABEL_133:
    v370 = *(_QWORD *)(a2 + 6888);
    *(_QWORD *)(a1 + 6880) = v369;
    *(_QWORD *)(a1 + 6888) = v370;
    *(_QWORD *)(a1 + 6896) = *(_QWORD *)(a2 + 6896);
    *(_QWORD *)(a1 + 6904) = *(_QWORD *)(a2 + 6904);
    v371 = *(_QWORD *)(a2 + 6920);
    *(_QWORD *)(a1 + 6912) = *(_QWORD *)(a2 + 6912);
    *(_QWORD *)(a1 + 6920) = v371;
    *(_BYTE *)(a1 + 6936) = *(_BYTE *)(a2 + 6936);
    *(_QWORD *)(a1 + 6928) = *(_QWORD *)(a2 + 6928);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v372 = *(_QWORD *)(a2 + 6944);
    if (v372)
      goto LABEL_134;
    goto LABEL_290;
  }
LABEL_289:
  v590 = *(_OWORD *)(a2 + 6896);
  *(_OWORD *)(a1 + 6880) = *(_OWORD *)(a2 + 6880);
  *(_OWORD *)(a1 + 6896) = v590;
  *(_OWORD *)(a1 + 6912) = *(_OWORD *)(a2 + 6912);
  *(_OWORD *)(a1 + 6921) = *(_OWORD *)(a2 + 6921);
  v372 = *(_QWORD *)(a2 + 6944);
  if (v372)
  {
LABEL_134:
    v373 = *(_QWORD *)(a2 + 6952);
    *(_QWORD *)(a1 + 6944) = v372;
    *(_QWORD *)(a1 + 6952) = v373;
    *(_QWORD *)(a1 + 6960) = *(_QWORD *)(a2 + 6960);
    *(_QWORD *)(a1 + 6968) = *(_QWORD *)(a2 + 6968);
    swift_retain();
    swift_bridgeObjectRetain();
    v374 = *(_QWORD *)(a2 + 6976);
    if (v374)
      goto LABEL_135;
    goto LABEL_291;
  }
LABEL_290:
  v591 = *(_OWORD *)(a2 + 6960);
  *(_OWORD *)(a1 + 6944) = *(_OWORD *)(a2 + 6944);
  *(_OWORD *)(a1 + 6960) = v591;
  v374 = *(_QWORD *)(a2 + 6976);
  if (v374)
  {
LABEL_135:
    v375 = *(_QWORD *)(a2 + 6984);
    *(_QWORD *)(a1 + 6976) = v374;
    *(_QWORD *)(a1 + 6984) = v375;
    *(_QWORD *)(a1 + 6992) = *(_QWORD *)(a2 + 6992);
    *(_QWORD *)(a1 + 7000) = *(_QWORD *)(a2 + 7000);
    v376 = *(_QWORD *)(a2 + 7016);
    *(_QWORD *)(a1 + 7008) = *(_QWORD *)(a2 + 7008);
    *(_QWORD *)(a1 + 7016) = v376;
    *(_BYTE *)(a1 + 7032) = *(_BYTE *)(a2 + 7032);
    *(_QWORD *)(a1 + 7024) = *(_QWORD *)(a2 + 7024);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v377 = *(_QWORD *)(a2 + 7040);
    if (v377)
      goto LABEL_136;
    goto LABEL_292;
  }
LABEL_291:
  v592 = *(_OWORD *)(a2 + 6992);
  *(_OWORD *)(a1 + 6976) = *(_OWORD *)(a2 + 6976);
  *(_OWORD *)(a1 + 6992) = v592;
  *(_OWORD *)(a1 + 7008) = *(_OWORD *)(a2 + 7008);
  *(_OWORD *)(a1 + 7017) = *(_OWORD *)(a2 + 7017);
  v377 = *(_QWORD *)(a2 + 7040);
  if (v377)
  {
LABEL_136:
    v378 = *(_QWORD *)(a2 + 7048);
    *(_QWORD *)(a1 + 7040) = v377;
    *(_QWORD *)(a1 + 7048) = v378;
    *(_QWORD *)(a1 + 7056) = *(_QWORD *)(a2 + 7056);
    *(_QWORD *)(a1 + 7064) = *(_QWORD *)(a2 + 7064);
    v379 = *(_QWORD *)(a2 + 7080);
    *(_QWORD *)(a1 + 7072) = *(_QWORD *)(a2 + 7072);
    *(_QWORD *)(a1 + 7080) = v379;
    *(_BYTE *)(a1 + 7096) = *(_BYTE *)(a2 + 7096);
    *(_QWORD *)(a1 + 7088) = *(_QWORD *)(a2 + 7088);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v380 = *(_QWORD *)(a2 + 7104);
    if (v380)
      goto LABEL_137;
    goto LABEL_293;
  }
LABEL_292:
  v593 = *(_OWORD *)(a2 + 7056);
  *(_OWORD *)(a1 + 7040) = *(_OWORD *)(a2 + 7040);
  *(_OWORD *)(a1 + 7056) = v593;
  *(_OWORD *)(a1 + 7072) = *(_OWORD *)(a2 + 7072);
  *(_OWORD *)(a1 + 7081) = *(_OWORD *)(a2 + 7081);
  v380 = *(_QWORD *)(a2 + 7104);
  if (v380)
  {
LABEL_137:
    v381 = *(_QWORD *)(a2 + 7112);
    *(_QWORD *)(a1 + 7104) = v380;
    *(_QWORD *)(a1 + 7112) = v381;
    *(_QWORD *)(a1 + 7120) = *(_QWORD *)(a2 + 7120);
    *(_QWORD *)(a1 + 7128) = *(_QWORD *)(a2 + 7128);
    v382 = *(_QWORD *)(a2 + 7144);
    *(_QWORD *)(a1 + 7136) = *(_QWORD *)(a2 + 7136);
    *(_QWORD *)(a1 + 7144) = v382;
    *(_BYTE *)(a1 + 7160) = *(_BYTE *)(a2 + 7160);
    *(_QWORD *)(a1 + 7152) = *(_QWORD *)(a2 + 7152);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v383 = *(_QWORD *)(a2 + 7168);
    if (v383)
      goto LABEL_138;
    goto LABEL_294;
  }
LABEL_293:
  v594 = *(_OWORD *)(a2 + 7120);
  *(_OWORD *)(a1 + 7104) = *(_OWORD *)(a2 + 7104);
  *(_OWORD *)(a1 + 7120) = v594;
  *(_OWORD *)(a1 + 7136) = *(_OWORD *)(a2 + 7136);
  *(_OWORD *)(a1 + 7145) = *(_OWORD *)(a2 + 7145);
  v383 = *(_QWORD *)(a2 + 7168);
  if (v383)
  {
LABEL_138:
    v384 = *(_QWORD *)(a2 + 7176);
    *(_QWORD *)(a1 + 7168) = v383;
    *(_QWORD *)(a1 + 7176) = v384;
    *(_QWORD *)(a1 + 7184) = *(_QWORD *)(a2 + 7184);
    *(_QWORD *)(a1 + 7192) = *(_QWORD *)(a2 + 7192);
    swift_retain();
    swift_bridgeObjectRetain();
    v385 = *(_QWORD *)(a2 + 7200);
    if (v385)
      goto LABEL_139;
    goto LABEL_295;
  }
LABEL_294:
  v595 = *(_OWORD *)(a2 + 7184);
  *(_OWORD *)(a1 + 7168) = *(_OWORD *)(a2 + 7168);
  *(_OWORD *)(a1 + 7184) = v595;
  v385 = *(_QWORD *)(a2 + 7200);
  if (v385)
  {
LABEL_139:
    v386 = *(_QWORD *)(a2 + 7208);
    *(_QWORD *)(a1 + 7200) = v385;
    *(_QWORD *)(a1 + 7208) = v386;
    *(_QWORD *)(a1 + 7216) = *(_QWORD *)(a2 + 7216);
    *(_QWORD *)(a1 + 7224) = *(_QWORD *)(a2 + 7224);
    v387 = *(_QWORD *)(a2 + 7240);
    *(_QWORD *)(a1 + 7232) = *(_QWORD *)(a2 + 7232);
    *(_QWORD *)(a1 + 7240) = v387;
    *(_BYTE *)(a1 + 7256) = *(_BYTE *)(a2 + 7256);
    *(_QWORD *)(a1 + 7248) = *(_QWORD *)(a2 + 7248);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v388 = *(_QWORD *)(a2 + 7264);
    if (v388)
      goto LABEL_140;
    goto LABEL_296;
  }
LABEL_295:
  v596 = *(_OWORD *)(a2 + 7216);
  *(_OWORD *)(a1 + 7200) = *(_OWORD *)(a2 + 7200);
  *(_OWORD *)(a1 + 7216) = v596;
  *(_OWORD *)(a1 + 7232) = *(_OWORD *)(a2 + 7232);
  *(_OWORD *)(a1 + 7241) = *(_OWORD *)(a2 + 7241);
  v388 = *(_QWORD *)(a2 + 7264);
  if (v388)
  {
LABEL_140:
    v389 = *(_QWORD *)(a2 + 7272);
    *(_QWORD *)(a1 + 7264) = v388;
    *(_QWORD *)(a1 + 7272) = v389;
    *(_QWORD *)(a1 + 7280) = *(_QWORD *)(a2 + 7280);
    *(_QWORD *)(a1 + 7288) = *(_QWORD *)(a2 + 7288);
    v390 = *(_QWORD *)(a2 + 7304);
    *(_QWORD *)(a1 + 7296) = *(_QWORD *)(a2 + 7296);
    *(_QWORD *)(a1 + 7304) = v390;
    *(_BYTE *)(a1 + 7320) = *(_BYTE *)(a2 + 7320);
    *(_QWORD *)(a1 + 7312) = *(_QWORD *)(a2 + 7312);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v391 = *(_QWORD *)(a2 + 7328);
    if (v391)
      goto LABEL_141;
    goto LABEL_297;
  }
LABEL_296:
  v597 = *(_OWORD *)(a2 + 7280);
  *(_OWORD *)(a1 + 7264) = *(_OWORD *)(a2 + 7264);
  *(_OWORD *)(a1 + 7280) = v597;
  *(_OWORD *)(a1 + 7296) = *(_OWORD *)(a2 + 7296);
  *(_OWORD *)(a1 + 7305) = *(_OWORD *)(a2 + 7305);
  v391 = *(_QWORD *)(a2 + 7328);
  if (v391)
  {
LABEL_141:
    v392 = *(_QWORD *)(a2 + 7336);
    *(_QWORD *)(a1 + 7328) = v391;
    *(_QWORD *)(a1 + 7336) = v392;
    *(_QWORD *)(a1 + 7344) = *(_QWORD *)(a2 + 7344);
    *(_QWORD *)(a1 + 7352) = *(_QWORD *)(a2 + 7352);
    v393 = *(_QWORD *)(a2 + 7368);
    *(_QWORD *)(a1 + 7360) = *(_QWORD *)(a2 + 7360);
    *(_QWORD *)(a1 + 7368) = v393;
    *(_BYTE *)(a1 + 7384) = *(_BYTE *)(a2 + 7384);
    *(_QWORD *)(a1 + 7376) = *(_QWORD *)(a2 + 7376);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v394 = *(_QWORD *)(a2 + 7392);
    if (v394)
      goto LABEL_142;
    goto LABEL_298;
  }
LABEL_297:
  v598 = *(_OWORD *)(a2 + 7344);
  *(_OWORD *)(a1 + 7328) = *(_OWORD *)(a2 + 7328);
  *(_OWORD *)(a1 + 7344) = v598;
  *(_OWORD *)(a1 + 7360) = *(_OWORD *)(a2 + 7360);
  *(_OWORD *)(a1 + 7369) = *(_OWORD *)(a2 + 7369);
  v394 = *(_QWORD *)(a2 + 7392);
  if (v394)
  {
LABEL_142:
    v395 = *(_QWORD *)(a2 + 7400);
    *(_QWORD *)(a1 + 7392) = v394;
    *(_QWORD *)(a1 + 7400) = v395;
    *(_QWORD *)(a1 + 7408) = *(_QWORD *)(a2 + 7408);
    *(_QWORD *)(a1 + 7416) = *(_QWORD *)(a2 + 7416);
    swift_retain();
    swift_bridgeObjectRetain();
    v396 = *(_QWORD *)(a2 + 7424);
    if (v396)
      goto LABEL_143;
    goto LABEL_299;
  }
LABEL_298:
  v599 = *(_OWORD *)(a2 + 7408);
  *(_OWORD *)(a1 + 7392) = *(_OWORD *)(a2 + 7392);
  *(_OWORD *)(a1 + 7408) = v599;
  v396 = *(_QWORD *)(a2 + 7424);
  if (v396)
  {
LABEL_143:
    v397 = *(_QWORD *)(a2 + 7432);
    *(_QWORD *)(a1 + 7424) = v396;
    *(_QWORD *)(a1 + 7432) = v397;
    *(_QWORD *)(a1 + 7440) = *(_QWORD *)(a2 + 7440);
    *(_QWORD *)(a1 + 7448) = *(_QWORD *)(a2 + 7448);
    v398 = *(_QWORD *)(a2 + 7464);
    *(_QWORD *)(a1 + 7456) = *(_QWORD *)(a2 + 7456);
    *(_QWORD *)(a1 + 7464) = v398;
    *(_BYTE *)(a1 + 7480) = *(_BYTE *)(a2 + 7480);
    *(_QWORD *)(a1 + 7472) = *(_QWORD *)(a2 + 7472);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v399 = *(_QWORD *)(a2 + 7488);
    if (v399)
      goto LABEL_144;
    goto LABEL_300;
  }
LABEL_299:
  v600 = *(_OWORD *)(a2 + 7440);
  *(_OWORD *)(a1 + 7424) = *(_OWORD *)(a2 + 7424);
  *(_OWORD *)(a1 + 7440) = v600;
  *(_OWORD *)(a1 + 7456) = *(_OWORD *)(a2 + 7456);
  *(_OWORD *)(a1 + 7465) = *(_OWORD *)(a2 + 7465);
  v399 = *(_QWORD *)(a2 + 7488);
  if (v399)
  {
LABEL_144:
    v400 = *(_QWORD *)(a2 + 7496);
    *(_QWORD *)(a1 + 7488) = v399;
    *(_QWORD *)(a1 + 7496) = v400;
    *(_QWORD *)(a1 + 7504) = *(_QWORD *)(a2 + 7504);
    *(_QWORD *)(a1 + 7512) = *(_QWORD *)(a2 + 7512);
    v401 = *(_QWORD *)(a2 + 7528);
    *(_QWORD *)(a1 + 7520) = *(_QWORD *)(a2 + 7520);
    *(_QWORD *)(a1 + 7528) = v401;
    *(_BYTE *)(a1 + 7544) = *(_BYTE *)(a2 + 7544);
    *(_QWORD *)(a1 + 7536) = *(_QWORD *)(a2 + 7536);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v402 = *(_QWORD *)(a2 + 7552);
    if (v402)
      goto LABEL_145;
    goto LABEL_301;
  }
LABEL_300:
  v601 = *(_OWORD *)(a2 + 7504);
  *(_OWORD *)(a1 + 7488) = *(_OWORD *)(a2 + 7488);
  *(_OWORD *)(a1 + 7504) = v601;
  *(_OWORD *)(a1 + 7520) = *(_OWORD *)(a2 + 7520);
  *(_OWORD *)(a1 + 7529) = *(_OWORD *)(a2 + 7529);
  v402 = *(_QWORD *)(a2 + 7552);
  if (v402)
  {
LABEL_145:
    v403 = *(_QWORD *)(a2 + 7560);
    *(_QWORD *)(a1 + 7552) = v402;
    *(_QWORD *)(a1 + 7560) = v403;
    *(_QWORD *)(a1 + 7568) = *(_QWORD *)(a2 + 7568);
    *(_QWORD *)(a1 + 7576) = *(_QWORD *)(a2 + 7576);
    v404 = *(_QWORD *)(a2 + 7592);
    *(_QWORD *)(a1 + 7584) = *(_QWORD *)(a2 + 7584);
    *(_QWORD *)(a1 + 7592) = v404;
    *(_BYTE *)(a1 + 7608) = *(_BYTE *)(a2 + 7608);
    *(_QWORD *)(a1 + 7600) = *(_QWORD *)(a2 + 7600);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v405 = *(_QWORD *)(a2 + 7616);
    if (v405)
      goto LABEL_146;
    goto LABEL_302;
  }
LABEL_301:
  v602 = *(_OWORD *)(a2 + 7568);
  *(_OWORD *)(a1 + 7552) = *(_OWORD *)(a2 + 7552);
  *(_OWORD *)(a1 + 7568) = v602;
  *(_OWORD *)(a1 + 7584) = *(_OWORD *)(a2 + 7584);
  *(_OWORD *)(a1 + 7593) = *(_OWORD *)(a2 + 7593);
  v405 = *(_QWORD *)(a2 + 7616);
  if (v405)
  {
LABEL_146:
    v406 = *(_QWORD *)(a2 + 7624);
    *(_QWORD *)(a1 + 7616) = v405;
    *(_QWORD *)(a1 + 7624) = v406;
    *(_QWORD *)(a1 + 7632) = *(_QWORD *)(a2 + 7632);
    *(_QWORD *)(a1 + 7640) = *(_QWORD *)(a2 + 7640);
    swift_retain();
    swift_bridgeObjectRetain();
    v407 = *(_QWORD *)(a2 + 7648);
    if (v407)
      goto LABEL_147;
    goto LABEL_303;
  }
LABEL_302:
  v603 = *(_OWORD *)(a2 + 7632);
  *(_OWORD *)(a1 + 7616) = *(_OWORD *)(a2 + 7616);
  *(_OWORD *)(a1 + 7632) = v603;
  v407 = *(_QWORD *)(a2 + 7648);
  if (v407)
  {
LABEL_147:
    v408 = *(_QWORD *)(a2 + 7656);
    *(_QWORD *)(a1 + 7648) = v407;
    *(_QWORD *)(a1 + 7656) = v408;
    *(_QWORD *)(a1 + 7664) = *(_QWORD *)(a2 + 7664);
    *(_QWORD *)(a1 + 7672) = *(_QWORD *)(a2 + 7672);
    v409 = *(_QWORD *)(a2 + 7688);
    *(_QWORD *)(a1 + 7680) = *(_QWORD *)(a2 + 7680);
    *(_QWORD *)(a1 + 7688) = v409;
    *(_BYTE *)(a1 + 7704) = *(_BYTE *)(a2 + 7704);
    *(_QWORD *)(a1 + 7696) = *(_QWORD *)(a2 + 7696);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v410 = *(_QWORD *)(a2 + 7712);
    if (v410)
      goto LABEL_148;
    goto LABEL_304;
  }
LABEL_303:
  v604 = *(_OWORD *)(a2 + 7664);
  *(_OWORD *)(a1 + 7648) = *(_OWORD *)(a2 + 7648);
  *(_OWORD *)(a1 + 7664) = v604;
  *(_OWORD *)(a1 + 7680) = *(_OWORD *)(a2 + 7680);
  *(_OWORD *)(a1 + 7689) = *(_OWORD *)(a2 + 7689);
  v410 = *(_QWORD *)(a2 + 7712);
  if (v410)
  {
LABEL_148:
    v411 = *(_QWORD *)(a2 + 7720);
    *(_QWORD *)(a1 + 7712) = v410;
    *(_QWORD *)(a1 + 7720) = v411;
    *(_QWORD *)(a1 + 7728) = *(_QWORD *)(a2 + 7728);
    *(_QWORD *)(a1 + 7736) = *(_QWORD *)(a2 + 7736);
    v412 = *(_QWORD *)(a2 + 7752);
    *(_QWORD *)(a1 + 7744) = *(_QWORD *)(a2 + 7744);
    *(_QWORD *)(a1 + 7752) = v412;
    *(_BYTE *)(a1 + 7768) = *(_BYTE *)(a2 + 7768);
    *(_QWORD *)(a1 + 7760) = *(_QWORD *)(a2 + 7760);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v413 = *(_QWORD *)(a2 + 7776);
    if (v413)
      goto LABEL_149;
    goto LABEL_305;
  }
LABEL_304:
  v605 = *(_OWORD *)(a2 + 7728);
  *(_OWORD *)(a1 + 7712) = *(_OWORD *)(a2 + 7712);
  *(_OWORD *)(a1 + 7728) = v605;
  *(_OWORD *)(a1 + 7744) = *(_OWORD *)(a2 + 7744);
  *(_OWORD *)(a1 + 7753) = *(_OWORD *)(a2 + 7753);
  v413 = *(_QWORD *)(a2 + 7776);
  if (v413)
  {
LABEL_149:
    v414 = *(_QWORD *)(a2 + 7784);
    *(_QWORD *)(a1 + 7776) = v413;
    *(_QWORD *)(a1 + 7784) = v414;
    *(_QWORD *)(a1 + 7792) = *(_QWORD *)(a2 + 7792);
    *(_QWORD *)(a1 + 7800) = *(_QWORD *)(a2 + 7800);
    v415 = *(_QWORD *)(a2 + 7816);
    *(_QWORD *)(a1 + 7808) = *(_QWORD *)(a2 + 7808);
    *(_QWORD *)(a1 + 7816) = v415;
    *(_BYTE *)(a1 + 7832) = *(_BYTE *)(a2 + 7832);
    *(_QWORD *)(a1 + 7824) = *(_QWORD *)(a2 + 7824);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v416 = *(_QWORD *)(a2 + 7840);
    if (v416)
      goto LABEL_150;
    goto LABEL_306;
  }
LABEL_305:
  v606 = *(_OWORD *)(a2 + 7792);
  *(_OWORD *)(a1 + 7776) = *(_OWORD *)(a2 + 7776);
  *(_OWORD *)(a1 + 7792) = v606;
  *(_OWORD *)(a1 + 7808) = *(_OWORD *)(a2 + 7808);
  *(_OWORD *)(a1 + 7817) = *(_OWORD *)(a2 + 7817);
  v416 = *(_QWORD *)(a2 + 7840);
  if (v416)
  {
LABEL_150:
    v417 = *(_QWORD *)(a2 + 7848);
    *(_QWORD *)(a1 + 7840) = v416;
    *(_QWORD *)(a1 + 7848) = v417;
    *(_QWORD *)(a1 + 7856) = *(_QWORD *)(a2 + 7856);
    *(_QWORD *)(a1 + 7864) = *(_QWORD *)(a2 + 7864);
    swift_retain();
    swift_bridgeObjectRetain();
    v418 = *(_QWORD *)(a2 + 7872);
    if (v418)
      goto LABEL_151;
    goto LABEL_307;
  }
LABEL_306:
  v607 = *(_OWORD *)(a2 + 7856);
  *(_OWORD *)(a1 + 7840) = *(_OWORD *)(a2 + 7840);
  *(_OWORD *)(a1 + 7856) = v607;
  v418 = *(_QWORD *)(a2 + 7872);
  if (v418)
  {
LABEL_151:
    v419 = *(_QWORD *)(a2 + 7880);
    *(_QWORD *)(a1 + 7872) = v418;
    *(_QWORD *)(a1 + 7880) = v419;
    *(_QWORD *)(a1 + 7888) = *(_QWORD *)(a2 + 7888);
    *(_QWORD *)(a1 + 7896) = *(_QWORD *)(a2 + 7896);
    v420 = *(_QWORD *)(a2 + 7912);
    *(_QWORD *)(a1 + 7904) = *(_QWORD *)(a2 + 7904);
    *(_QWORD *)(a1 + 7912) = v420;
    *(_BYTE *)(a1 + 7928) = *(_BYTE *)(a2 + 7928);
    *(_QWORD *)(a1 + 7920) = *(_QWORD *)(a2 + 7920);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v421 = *(_QWORD *)(a2 + 7936);
    if (v421)
      goto LABEL_152;
    goto LABEL_308;
  }
LABEL_307:
  v608 = *(_OWORD *)(a2 + 7888);
  *(_OWORD *)(a1 + 7872) = *(_OWORD *)(a2 + 7872);
  *(_OWORD *)(a1 + 7888) = v608;
  *(_OWORD *)(a1 + 7904) = *(_OWORD *)(a2 + 7904);
  *(_OWORD *)(a1 + 7913) = *(_OWORD *)(a2 + 7913);
  v421 = *(_QWORD *)(a2 + 7936);
  if (v421)
  {
LABEL_152:
    v422 = *(_QWORD *)(a2 + 7944);
    *(_QWORD *)(a1 + 7936) = v421;
    *(_QWORD *)(a1 + 7944) = v422;
    *(_QWORD *)(a1 + 7952) = *(_QWORD *)(a2 + 7952);
    *(_QWORD *)(a1 + 7960) = *(_QWORD *)(a2 + 7960);
    v423 = *(_QWORD *)(a2 + 7976);
    *(_QWORD *)(a1 + 7968) = *(_QWORD *)(a2 + 7968);
    *(_QWORD *)(a1 + 7976) = v423;
    *(_BYTE *)(a1 + 7992) = *(_BYTE *)(a2 + 7992);
    *(_QWORD *)(a1 + 7984) = *(_QWORD *)(a2 + 7984);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v424 = *(_QWORD *)(a2 + 8000);
    if (v424)
      goto LABEL_153;
    goto LABEL_309;
  }
LABEL_308:
  v609 = *(_OWORD *)(a2 + 7952);
  *(_OWORD *)(a1 + 7936) = *(_OWORD *)(a2 + 7936);
  *(_OWORD *)(a1 + 7952) = v609;
  *(_OWORD *)(a1 + 7968) = *(_OWORD *)(a2 + 7968);
  *(_OWORD *)(a1 + 7977) = *(_OWORD *)(a2 + 7977);
  v424 = *(_QWORD *)(a2 + 8000);
  if (v424)
  {
LABEL_153:
    v425 = *(_QWORD *)(a2 + 8008);
    *(_QWORD *)(a1 + 8000) = v424;
    *(_QWORD *)(a1 + 8008) = v425;
    *(_QWORD *)(a1 + 8016) = *(_QWORD *)(a2 + 8016);
    *(_QWORD *)(a1 + 8024) = *(_QWORD *)(a2 + 8024);
    v426 = *(_QWORD *)(a2 + 8040);
    *(_QWORD *)(a1 + 8032) = *(_QWORD *)(a2 + 8032);
    *(_QWORD *)(a1 + 8040) = v426;
    *(_BYTE *)(a1 + 8056) = *(_BYTE *)(a2 + 8056);
    *(_QWORD *)(a1 + 8048) = *(_QWORD *)(a2 + 8048);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v427 = *(_QWORD *)(a2 + 8064);
    if (v427)
      goto LABEL_154;
    goto LABEL_310;
  }
LABEL_309:
  v610 = *(_OWORD *)(a2 + 8016);
  *(_OWORD *)(a1 + 8000) = *(_OWORD *)(a2 + 8000);
  *(_OWORD *)(a1 + 8016) = v610;
  *(_OWORD *)(a1 + 8032) = *(_OWORD *)(a2 + 8032);
  *(_OWORD *)(a1 + 8041) = *(_OWORD *)(a2 + 8041);
  v427 = *(_QWORD *)(a2 + 8064);
  if (v427)
  {
LABEL_154:
    v428 = *(_QWORD *)(a2 + 8072);
    *(_QWORD *)(a1 + 8064) = v427;
    *(_QWORD *)(a1 + 8072) = v428;
    *(_QWORD *)(a1 + 8080) = *(_QWORD *)(a2 + 8080);
    *(_QWORD *)(a1 + 8088) = *(_QWORD *)(a2 + 8088);
    swift_retain();
    swift_bridgeObjectRetain();
    v429 = *(_QWORD *)(a2 + 8096);
    if (v429)
      goto LABEL_155;
    goto LABEL_311;
  }
LABEL_310:
  v611 = *(_OWORD *)(a2 + 8080);
  *(_OWORD *)(a1 + 8064) = *(_OWORD *)(a2 + 8064);
  *(_OWORD *)(a1 + 8080) = v611;
  v429 = *(_QWORD *)(a2 + 8096);
  if (v429)
  {
LABEL_155:
    v430 = *(_QWORD *)(a2 + 8104);
    *(_QWORD *)(a1 + 8096) = v429;
    *(_QWORD *)(a1 + 8104) = v430;
    *(_QWORD *)(a1 + 8112) = *(_QWORD *)(a2 + 8112);
    *(_QWORD *)(a1 + 8120) = *(_QWORD *)(a2 + 8120);
    v431 = *(_QWORD *)(a2 + 8136);
    *(_QWORD *)(a1 + 8128) = *(_QWORD *)(a2 + 8128);
    *(_QWORD *)(a1 + 8136) = v431;
    *(_BYTE *)(a1 + 8152) = *(_BYTE *)(a2 + 8152);
    *(_QWORD *)(a1 + 8144) = *(_QWORD *)(a2 + 8144);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v432 = *(_QWORD *)(a2 + 8160);
    if (v432)
      goto LABEL_156;
    goto LABEL_312;
  }
LABEL_311:
  v612 = *(_OWORD *)(a2 + 8112);
  *(_OWORD *)(a1 + 8096) = *(_OWORD *)(a2 + 8096);
  *(_OWORD *)(a1 + 8112) = v612;
  *(_OWORD *)(a1 + 8128) = *(_OWORD *)(a2 + 8128);
  *(_OWORD *)(a1 + 8137) = *(_OWORD *)(a2 + 8137);
  v432 = *(_QWORD *)(a2 + 8160);
  if (v432)
  {
LABEL_156:
    v433 = *(_QWORD *)(a2 + 8168);
    *(_QWORD *)(a1 + 8160) = v432;
    *(_QWORD *)(a1 + 8168) = v433;
    *(_QWORD *)(a1 + 8176) = *(_QWORD *)(a2 + 8176);
    *(_QWORD *)(a1 + 8184) = *(_QWORD *)(a2 + 8184);
    v434 = *(_QWORD *)(a2 + 8200);
    *(_QWORD *)(a1 + 0x2000) = *(_QWORD *)(a2 + 0x2000);
    *(_QWORD *)(a1 + 8200) = v434;
    *(_BYTE *)(a1 + 8216) = *(_BYTE *)(a2 + 8216);
    *(_QWORD *)(a1 + 8208) = *(_QWORD *)(a2 + 8208);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v435 = *(_QWORD *)(a2 + 8224);
    if (v435)
      goto LABEL_157;
    goto LABEL_313;
  }
LABEL_312:
  v613 = *(_OWORD *)(a2 + 8176);
  *(_OWORD *)(a1 + 8160) = *(_OWORD *)(a2 + 8160);
  *(_OWORD *)(a1 + 8176) = v613;
  *(_OWORD *)(a1 + 0x2000) = *(_OWORD *)(a2 + 0x2000);
  *(_OWORD *)(a1 + 8201) = *(_OWORD *)(a2 + 8201);
  v435 = *(_QWORD *)(a2 + 8224);
  if (v435)
  {
LABEL_157:
    v436 = *(_QWORD *)(a2 + 8232);
    *(_QWORD *)(a1 + 8224) = v435;
    *(_QWORD *)(a1 + 8232) = v436;
    *(_QWORD *)(a1 + 8240) = *(_QWORD *)(a2 + 8240);
    *(_QWORD *)(a1 + 8248) = *(_QWORD *)(a2 + 8248);
    v437 = *(_QWORD *)(a2 + 8264);
    *(_QWORD *)(a1 + 8256) = *(_QWORD *)(a2 + 8256);
    *(_QWORD *)(a1 + 8264) = v437;
    *(_BYTE *)(a1 + 8280) = *(_BYTE *)(a2 + 8280);
    *(_QWORD *)(a1 + 8272) = *(_QWORD *)(a2 + 8272);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v438 = *(_QWORD *)(a2 + 8288);
    if (v438)
      goto LABEL_158;
    goto LABEL_314;
  }
LABEL_313:
  v614 = *(_OWORD *)(a2 + 8240);
  *(_OWORD *)(a1 + 8224) = *(_OWORD *)(a2 + 8224);
  *(_OWORD *)(a1 + 8240) = v614;
  *(_OWORD *)(a1 + 8256) = *(_OWORD *)(a2 + 8256);
  *(_OWORD *)(a1 + 8265) = *(_OWORD *)(a2 + 8265);
  v438 = *(_QWORD *)(a2 + 8288);
  if (v438)
  {
LABEL_158:
    v439 = *(_QWORD *)(a2 + 8296);
    *(_QWORD *)(a1 + 8288) = v438;
    *(_QWORD *)(a1 + 8296) = v439;
    *(_QWORD *)(a1 + 8304) = *(_QWORD *)(a2 + 8304);
    *(_QWORD *)(a1 + 8312) = *(_QWORD *)(a2 + 8312);
    swift_retain();
    swift_bridgeObjectRetain();
    v440 = *(_QWORD *)(a2 + 8320);
    if (v440)
      goto LABEL_159;
    goto LABEL_315;
  }
LABEL_314:
  v615 = *(_OWORD *)(a2 + 8304);
  *(_OWORD *)(a1 + 8288) = *(_OWORD *)(a2 + 8288);
  *(_OWORD *)(a1 + 8304) = v615;
  v440 = *(_QWORD *)(a2 + 8320);
  if (v440)
  {
LABEL_159:
    v441 = *(_QWORD *)(a2 + 8328);
    *(_QWORD *)(a1 + 8320) = v440;
    *(_QWORD *)(a1 + 8328) = v441;
    *(_QWORD *)(a1 + 8336) = *(_QWORD *)(a2 + 8336);
    *(_QWORD *)(a1 + 8344) = *(_QWORD *)(a2 + 8344);
    v442 = *(_QWORD *)(a2 + 8360);
    *(_QWORD *)(a1 + 8352) = *(_QWORD *)(a2 + 8352);
    *(_QWORD *)(a1 + 8360) = v442;
    *(_BYTE *)(a1 + 8376) = *(_BYTE *)(a2 + 8376);
    *(_QWORD *)(a1 + 8368) = *(_QWORD *)(a2 + 8368);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v443 = *(_QWORD *)(a2 + 8384);
    if (v443)
      goto LABEL_160;
    goto LABEL_316;
  }
LABEL_315:
  v616 = *(_OWORD *)(a2 + 8336);
  *(_OWORD *)(a1 + 8320) = *(_OWORD *)(a2 + 8320);
  *(_OWORD *)(a1 + 8336) = v616;
  *(_OWORD *)(a1 + 8352) = *(_OWORD *)(a2 + 8352);
  *(_OWORD *)(a1 + 8361) = *(_OWORD *)(a2 + 8361);
  v443 = *(_QWORD *)(a2 + 8384);
  if (v443)
  {
LABEL_160:
    v444 = *(_QWORD *)(a2 + 8392);
    *(_QWORD *)(a1 + 8384) = v443;
    *(_QWORD *)(a1 + 8392) = v444;
    *(_QWORD *)(a1 + 8400) = *(_QWORD *)(a2 + 8400);
    *(_QWORD *)(a1 + 8408) = *(_QWORD *)(a2 + 8408);
    v445 = *(_QWORD *)(a2 + 8424);
    *(_QWORD *)(a1 + 8416) = *(_QWORD *)(a2 + 8416);
    *(_QWORD *)(a1 + 8424) = v445;
    *(_BYTE *)(a1 + 8440) = *(_BYTE *)(a2 + 8440);
    *(_QWORD *)(a1 + 8432) = *(_QWORD *)(a2 + 8432);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v446 = *(_QWORD *)(a2 + 8448);
    if (v446)
      goto LABEL_161;
    goto LABEL_317;
  }
LABEL_316:
  v617 = *(_OWORD *)(a2 + 8400);
  *(_OWORD *)(a1 + 8384) = *(_OWORD *)(a2 + 8384);
  *(_OWORD *)(a1 + 8400) = v617;
  *(_OWORD *)(a1 + 8416) = *(_OWORD *)(a2 + 8416);
  *(_OWORD *)(a1 + 8425) = *(_OWORD *)(a2 + 8425);
  v446 = *(_QWORD *)(a2 + 8448);
  if (v446)
  {
LABEL_161:
    v447 = *(_QWORD *)(a2 + 8456);
    *(_QWORD *)(a1 + 8448) = v446;
    *(_QWORD *)(a1 + 8456) = v447;
    *(_QWORD *)(a1 + 8464) = *(_QWORD *)(a2 + 8464);
    *(_QWORD *)(a1 + 8472) = *(_QWORD *)(a2 + 8472);
    v448 = *(_QWORD *)(a2 + 8488);
    *(_QWORD *)(a1 + 8480) = *(_QWORD *)(a2 + 8480);
    *(_QWORD *)(a1 + 8488) = v448;
    *(_BYTE *)(a1 + 8504) = *(_BYTE *)(a2 + 8504);
    *(_QWORD *)(a1 + 8496) = *(_QWORD *)(a2 + 8496);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v449 = *(_QWORD *)(a2 + 8512);
    if (v449)
      goto LABEL_162;
    goto LABEL_318;
  }
LABEL_317:
  v618 = *(_OWORD *)(a2 + 8464);
  *(_OWORD *)(a1 + 8448) = *(_OWORD *)(a2 + 8448);
  *(_OWORD *)(a1 + 8464) = v618;
  *(_OWORD *)(a1 + 8480) = *(_OWORD *)(a2 + 8480);
  *(_OWORD *)(a1 + 8489) = *(_OWORD *)(a2 + 8489);
  v449 = *(_QWORD *)(a2 + 8512);
  if (v449)
  {
LABEL_162:
    v450 = *(_QWORD *)(a2 + 8520);
    *(_QWORD *)(a1 + 8512) = v449;
    *(_QWORD *)(a1 + 8520) = v450;
    *(_QWORD *)(a1 + 8528) = *(_QWORD *)(a2 + 8528);
    *(_QWORD *)(a1 + 8536) = *(_QWORD *)(a2 + 8536);
    swift_retain();
    swift_bridgeObjectRetain();
    v451 = *(_QWORD *)(a2 + 8544);
    if (v451)
      goto LABEL_163;
    goto LABEL_319;
  }
LABEL_318:
  v619 = *(_OWORD *)(a2 + 8528);
  *(_OWORD *)(a1 + 8512) = *(_OWORD *)(a2 + 8512);
  *(_OWORD *)(a1 + 8528) = v619;
  v451 = *(_QWORD *)(a2 + 8544);
  if (v451)
  {
LABEL_163:
    v452 = *(_QWORD *)(a2 + 8552);
    *(_QWORD *)(a1 + 8544) = v451;
    *(_QWORD *)(a1 + 8552) = v452;
    *(_QWORD *)(a1 + 8560) = *(_QWORD *)(a2 + 8560);
    *(_QWORD *)(a1 + 8568) = *(_QWORD *)(a2 + 8568);
    v453 = *(_QWORD *)(a2 + 8584);
    *(_QWORD *)(a1 + 8576) = *(_QWORD *)(a2 + 8576);
    *(_QWORD *)(a1 + 8584) = v453;
    *(_BYTE *)(a1 + 8600) = *(_BYTE *)(a2 + 8600);
    *(_QWORD *)(a1 + 8592) = *(_QWORD *)(a2 + 8592);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v454 = *(_QWORD *)(a2 + 8608);
    if (v454)
      goto LABEL_164;
    goto LABEL_320;
  }
LABEL_319:
  v620 = *(_OWORD *)(a2 + 8560);
  *(_OWORD *)(a1 + 8544) = *(_OWORD *)(a2 + 8544);
  *(_OWORD *)(a1 + 8560) = v620;
  *(_OWORD *)(a1 + 8576) = *(_OWORD *)(a2 + 8576);
  *(_OWORD *)(a1 + 8585) = *(_OWORD *)(a2 + 8585);
  v454 = *(_QWORD *)(a2 + 8608);
  if (v454)
  {
LABEL_164:
    v455 = *(_QWORD *)(a2 + 8616);
    *(_QWORD *)(a1 + 8608) = v454;
    *(_QWORD *)(a1 + 8616) = v455;
    *(_QWORD *)(a1 + 8624) = *(_QWORD *)(a2 + 8624);
    *(_QWORD *)(a1 + 8632) = *(_QWORD *)(a2 + 8632);
    v456 = *(_QWORD *)(a2 + 8648);
    *(_QWORD *)(a1 + 8640) = *(_QWORD *)(a2 + 8640);
    *(_QWORD *)(a1 + 8648) = v456;
    *(_BYTE *)(a1 + 8664) = *(_BYTE *)(a2 + 8664);
    *(_QWORD *)(a1 + 8656) = *(_QWORD *)(a2 + 8656);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v457 = *(_QWORD *)(a2 + 8672);
    if (v457)
      goto LABEL_165;
    goto LABEL_321;
  }
LABEL_320:
  v621 = *(_OWORD *)(a2 + 8624);
  *(_OWORD *)(a1 + 8608) = *(_OWORD *)(a2 + 8608);
  *(_OWORD *)(a1 + 8624) = v621;
  *(_OWORD *)(a1 + 8640) = *(_OWORD *)(a2 + 8640);
  *(_OWORD *)(a1 + 8649) = *(_OWORD *)(a2 + 8649);
  v457 = *(_QWORD *)(a2 + 8672);
  if (v457)
  {
LABEL_165:
    v458 = *(_QWORD *)(a2 + 8680);
    *(_QWORD *)(a1 + 8672) = v457;
    *(_QWORD *)(a1 + 8680) = v458;
    *(_QWORD *)(a1 + 8688) = *(_QWORD *)(a2 + 8688);
    *(_QWORD *)(a1 + 8696) = *(_QWORD *)(a2 + 8696);
    v459 = *(_QWORD *)(a2 + 8712);
    *(_QWORD *)(a1 + 8704) = *(_QWORD *)(a2 + 8704);
    *(_QWORD *)(a1 + 8712) = v459;
    *(_BYTE *)(a1 + 8728) = *(_BYTE *)(a2 + 8728);
    *(_QWORD *)(a1 + 8720) = *(_QWORD *)(a2 + 8720);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v460 = *(_QWORD *)(a2 + 8736);
    if (v460)
      goto LABEL_166;
    goto LABEL_322;
  }
LABEL_321:
  v622 = *(_OWORD *)(a2 + 8688);
  *(_OWORD *)(a1 + 8672) = *(_OWORD *)(a2 + 8672);
  *(_OWORD *)(a1 + 8688) = v622;
  *(_OWORD *)(a1 + 8704) = *(_OWORD *)(a2 + 8704);
  *(_OWORD *)(a1 + 8713) = *(_OWORD *)(a2 + 8713);
  v460 = *(_QWORD *)(a2 + 8736);
  if (v460)
  {
LABEL_166:
    v461 = *(_QWORD *)(a2 + 8744);
    *(_QWORD *)(a1 + 8736) = v460;
    *(_QWORD *)(a1 + 8744) = v461;
    *(_QWORD *)(a1 + 8752) = *(_QWORD *)(a2 + 8752);
    *(_QWORD *)(a1 + 8760) = *(_QWORD *)(a2 + 8760);
    swift_retain();
    swift_bridgeObjectRetain();
    v462 = *(_QWORD *)(a2 + 8768);
    if (v462)
      goto LABEL_167;
    goto LABEL_323;
  }
LABEL_322:
  v623 = *(_OWORD *)(a2 + 8752);
  *(_OWORD *)(a1 + 8736) = *(_OWORD *)(a2 + 8736);
  *(_OWORD *)(a1 + 8752) = v623;
  v462 = *(_QWORD *)(a2 + 8768);
  if (v462)
  {
LABEL_167:
    v463 = *(_QWORD *)(a2 + 8776);
    *(_QWORD *)(a1 + 8768) = v462;
    *(_QWORD *)(a1 + 8776) = v463;
    *(_QWORD *)(a1 + 8784) = *(_QWORD *)(a2 + 8784);
    *(_QWORD *)(a1 + 8792) = *(_QWORD *)(a2 + 8792);
    v464 = *(_QWORD *)(a2 + 8808);
    *(_QWORD *)(a1 + 8800) = *(_QWORD *)(a2 + 8800);
    *(_QWORD *)(a1 + 8808) = v464;
    *(_BYTE *)(a1 + 8824) = *(_BYTE *)(a2 + 8824);
    *(_QWORD *)(a1 + 8816) = *(_QWORD *)(a2 + 8816);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v465 = *(_QWORD *)(a2 + 8832);
    if (v465)
      goto LABEL_168;
LABEL_324:
    v625 = *(_OWORD *)(a2 + 8848);
    *(_OWORD *)(a1 + 8832) = *(_OWORD *)(a2 + 8832);
    *(_OWORD *)(a1 + 8848) = v625;
    *(_OWORD *)(a1 + 8864) = *(_OWORD *)(a2 + 8864);
    *(_OWORD *)(a1 + 8873) = *(_OWORD *)(a2 + 8873);
    v468 = *(_QWORD *)(a2 + 8896);
    if (v468)
      goto LABEL_169;
LABEL_325:
    v626 = *(_OWORD *)(a2 + 8912);
    *(_OWORD *)(a1 + 8896) = *(_OWORD *)(a2 + 8896);
    *(_OWORD *)(a1 + 8912) = v626;
    *(_OWORD *)(a1 + 8928) = *(_OWORD *)(a2 + 8928);
    *(_OWORD *)(a1 + 8937) = *(_OWORD *)(a2 + 8937);
    return a1;
  }
LABEL_323:
  v624 = *(_OWORD *)(a2 + 8784);
  *(_OWORD *)(a1 + 8768) = *(_OWORD *)(a2 + 8768);
  *(_OWORD *)(a1 + 8784) = v624;
  *(_OWORD *)(a1 + 8800) = *(_OWORD *)(a2 + 8800);
  *(_OWORD *)(a1 + 8809) = *(_OWORD *)(a2 + 8809);
  v465 = *(_QWORD *)(a2 + 8832);
  if (!v465)
    goto LABEL_324;
LABEL_168:
  v466 = *(_QWORD *)(a2 + 8840);
  *(_QWORD *)(a1 + 8832) = v465;
  *(_QWORD *)(a1 + 8840) = v466;
  *(_QWORD *)(a1 + 8848) = *(_QWORD *)(a2 + 8848);
  *(_QWORD *)(a1 + 8856) = *(_QWORD *)(a2 + 8856);
  v467 = *(_QWORD *)(a2 + 8872);
  *(_QWORD *)(a1 + 8864) = *(_QWORD *)(a2 + 8864);
  *(_QWORD *)(a1 + 8872) = v467;
  *(_BYTE *)(a1 + 8888) = *(_BYTE *)(a2 + 8888);
  *(_QWORD *)(a1 + 8880) = *(_QWORD *)(a2 + 8880);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v468 = *(_QWORD *)(a2 + 8896);
  if (!v468)
    goto LABEL_325;
LABEL_169:
  v469 = *(_QWORD *)(a2 + 8904);
  *(_QWORD *)(a1 + 8896) = v468;
  *(_QWORD *)(a1 + 8904) = v469;
  *(_QWORD *)(a1 + 8912) = *(_QWORD *)(a2 + 8912);
  *(_QWORD *)(a1 + 8920) = *(_QWORD *)(a2 + 8920);
  v470 = *(_QWORD *)(a2 + 8936);
  *(_QWORD *)(a1 + 8928) = *(_QWORD *)(a2 + 8928);
  *(_QWORD *)(a1 + 8936) = v470;
  *(_BYTE *)(a1 + 8952) = *(_BYTE *)(a2 + 8952);
  *(_QWORD *)(a1 + 8944) = *(_QWORD *)(a2 + 8944);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for MemojiDescriptor(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  __int128 v8;
  _OWORD *v9;
  uint64_t v10;
  __int128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  _OWORD *v24;
  uint64_t v25;
  __int128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  _OWORD *v39;
  uint64_t v40;
  __int128 *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  _OWORD *v54;
  uint64_t v55;
  _OWORD *v56;
  uint64_t v57;
  uint64_t v58;
  __int128 v59;
  __int128 v60;
  _OWORD *v61;
  __int128 *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  _OWORD *v76;
  __int128 *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  _OWORD *v91;
  __int128 *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  __int128 v100;
  __int128 v101;
  __int128 v102;
  __int128 v103;
  __int128 v104;
  __int128 v105;
  _OWORD *v106;
  _OWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  _OWORD *v113;
  __int128 *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  _OWORD *v128;
  __int128 *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  __int128 v141;
  __int128 v142;
  _OWORD *v143;
  __int128 *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  _OWORD *v158;
  _OWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  __int128 v163;
  __int128 v164;
  _OWORD *v165;
  __int128 *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  __int128 v179;
  _OWORD *v180;
  __int128 *v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  __int128 v189;
  __int128 v190;
  __int128 v191;
  __int128 v192;
  __int128 v193;
  __int128 v194;
  _OWORD *v195;
  __int128 *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  __int128 v204;
  __int128 v205;
  __int128 v206;
  __int128 v207;
  __int128 v208;
  __int128 v209;
  _OWORD *v210;
  _OWORD *v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  __int128 v215;
  __int128 v216;
  _OWORD *v217;
  __int128 *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  __int128 v226;
  __int128 v227;
  __int128 v228;
  __int128 v229;
  __int128 v230;
  __int128 v231;
  _OWORD *v232;
  __int128 *v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  __int128 v241;
  __int128 v242;
  __int128 v243;
  __int128 v244;
  __int128 v245;
  __int128 v246;
  _OWORD *v247;
  __int128 *v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  __int128 v256;
  __int128 v257;
  __int128 v258;
  __int128 v259;
  __int128 v260;
  __int128 v261;
  _OWORD *v262;
  _OWORD *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  __int128 v267;
  __int128 v268;
  _OWORD *v269;
  __int128 *v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  __int128 v278;
  __int128 v279;
  __int128 v280;
  __int128 v281;
  __int128 v282;
  __int128 v283;
  _OWORD *v284;
  __int128 *v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  __int128 v293;
  __int128 v294;
  __int128 v295;
  __int128 v296;
  __int128 v297;
  __int128 v298;
  _OWORD *v299;
  __int128 *v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  __int128 v308;
  __int128 v309;
  __int128 v310;
  __int128 v311;
  __int128 v312;
  __int128 v313;
  _OWORD *v314;
  _OWORD *v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  __int128 v319;
  __int128 v320;
  _OWORD *v321;
  __int128 *v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  __int128 v330;
  __int128 v331;
  __int128 v332;
  __int128 v333;
  __int128 v334;
  __int128 v335;
  _OWORD *v336;
  __int128 *v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  __int128 v345;
  __int128 v346;
  __int128 v347;
  __int128 v348;
  __int128 v349;
  __int128 v350;
  _OWORD *v351;
  __int128 *v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  __int128 v360;
  __int128 v361;
  __int128 v362;
  __int128 v363;
  __int128 v364;
  __int128 v365;
  _OWORD *v366;
  _OWORD *v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  __int128 v371;
  __int128 v372;
  _OWORD *v373;
  __int128 *v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  __int128 v382;
  __int128 v383;
  __int128 v384;
  __int128 v385;
  __int128 v386;
  __int128 v387;
  _OWORD *v388;
  __int128 *v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  __int128 v397;
  __int128 v398;
  __int128 v399;
  __int128 v400;
  __int128 v401;
  __int128 v402;
  _OWORD *v403;
  __int128 *v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  __int128 v412;
  __int128 v413;
  __int128 v414;
  __int128 v415;
  __int128 v416;
  __int128 v417;
  _OWORD *v418;
  _OWORD *v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  __int128 v423;
  __int128 v424;
  _OWORD *v425;
  __int128 *v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  __int128 v434;
  __int128 v435;
  __int128 v436;
  __int128 v437;
  __int128 v438;
  __int128 v439;
  _OWORD *v440;
  __int128 *v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  uint64_t v446;
  uint64_t v447;
  uint64_t v448;
  __int128 v449;
  __int128 v450;
  __int128 v451;
  __int128 v452;
  __int128 v453;
  __int128 v454;
  _OWORD *v455;
  __int128 *v456;
  uint64_t v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  __int128 v464;
  __int128 v465;
  __int128 v466;
  __int128 v467;
  __int128 v468;
  __int128 v469;
  _OWORD *v470;
  _OWORD *v471;
  uint64_t v472;
  uint64_t v473;
  uint64_t v474;
  __int128 v475;
  __int128 v476;
  _OWORD *v477;
  __int128 *v478;
  uint64_t v479;
  uint64_t v480;
  uint64_t v481;
  uint64_t v482;
  uint64_t v483;
  uint64_t v484;
  uint64_t v485;
  __int128 v486;
  __int128 v487;
  __int128 v488;
  __int128 v489;
  __int128 v490;
  __int128 v491;
  _OWORD *v492;
  __int128 *v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  uint64_t v500;
  __int128 v501;
  __int128 v502;
  __int128 v503;
  __int128 v504;
  __int128 v505;
  __int128 v506;
  _OWORD *v507;
  __int128 *v508;
  uint64_t v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  uint64_t v513;
  uint64_t v514;
  uint64_t v515;
  __int128 v516;
  __int128 v517;
  __int128 v518;
  __int128 v519;
  __int128 v520;
  __int128 v521;
  _OWORD *v522;
  _OWORD *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  __int128 v527;
  __int128 v528;
  _OWORD *v529;
  __int128 *v530;
  uint64_t v531;
  uint64_t v532;
  uint64_t v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  __int128 v538;
  __int128 v539;
  __int128 v540;
  __int128 v541;
  __int128 v542;
  __int128 v543;
  _OWORD *v544;
  __int128 *v545;
  uint64_t v546;
  uint64_t v547;
  uint64_t v548;
  uint64_t v549;
  uint64_t v550;
  uint64_t v551;
  uint64_t v552;
  __int128 v553;
  __int128 v554;
  __int128 v555;
  __int128 v556;
  __int128 v557;
  __int128 v558;
  _OWORD *v559;
  __int128 *v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  __int128 v568;
  __int128 v569;
  __int128 v570;
  __int128 v571;
  __int128 v572;
  __int128 v573;
  _OWORD *v574;
  _OWORD *v575;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  __int128 v579;
  __int128 v580;
  _OWORD *v581;
  __int128 *v582;
  uint64_t v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  uint64_t v589;
  __int128 v590;
  __int128 v591;
  __int128 v592;
  __int128 v593;
  __int128 v594;
  __int128 v595;
  _OWORD *v596;
  __int128 *v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  __int128 v605;
  __int128 v606;
  __int128 v607;
  __int128 v608;
  __int128 v609;
  __int128 v610;
  _OWORD *v611;
  __int128 *v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t v618;
  uint64_t v619;
  __int128 v620;
  __int128 v621;
  __int128 v622;
  __int128 v623;
  __int128 v624;
  __int128 v625;
  _OWORD *v626;
  _OWORD *v627;
  uint64_t v628;
  uint64_t v629;
  uint64_t v630;
  __int128 v631;
  __int128 v632;
  _OWORD *v633;
  __int128 *v634;
  uint64_t v635;
  uint64_t v636;
  uint64_t v637;
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  uint64_t v641;
  __int128 v642;
  __int128 v643;
  __int128 v644;
  __int128 v645;
  __int128 v646;
  __int128 v647;
  _OWORD *v648;
  __int128 *v649;
  uint64_t v650;
  uint64_t v651;
  uint64_t v652;
  uint64_t v653;
  uint64_t v654;
  uint64_t v655;
  uint64_t v656;
  __int128 v657;
  __int128 v658;
  __int128 v659;
  __int128 v660;
  __int128 v661;
  __int128 v662;
  _OWORD *v663;
  __int128 *v664;
  uint64_t v665;
  uint64_t v666;
  uint64_t v667;
  uint64_t v668;
  uint64_t v669;
  uint64_t v670;
  uint64_t v671;
  __int128 v672;
  __int128 v673;
  __int128 v674;
  __int128 v675;
  __int128 v676;
  __int128 v677;
  _OWORD *v678;
  _OWORD *v679;
  uint64_t v680;
  uint64_t v681;
  uint64_t v682;
  __int128 v683;
  __int128 v684;
  _OWORD *v685;
  __int128 *v686;
  uint64_t v687;
  uint64_t v688;
  uint64_t v689;
  uint64_t v690;
  uint64_t v691;
  uint64_t v692;
  uint64_t v693;
  __int128 v694;
  __int128 v695;
  __int128 v696;
  __int128 v697;
  __int128 v698;
  __int128 v699;
  _OWORD *v700;
  __int128 *v701;
  uint64_t v702;
  uint64_t v703;
  uint64_t v704;
  uint64_t v705;
  uint64_t v706;
  uint64_t v707;
  uint64_t v708;
  __int128 v709;
  __int128 v710;
  __int128 v711;
  __int128 v712;
  __int128 v713;
  __int128 v714;
  _OWORD *v715;
  __int128 *v716;
  uint64_t v717;
  uint64_t v718;
  uint64_t v719;
  uint64_t v720;
  uint64_t v721;
  uint64_t v722;
  uint64_t v723;
  __int128 v724;
  __int128 v725;
  __int128 v726;
  __int128 v727;
  __int128 v728;
  __int128 v729;
  _OWORD *v730;
  _OWORD *v731;
  uint64_t v732;
  uint64_t v733;
  uint64_t v734;
  __int128 v735;
  __int128 v736;
  _OWORD *v737;
  __int128 *v738;
  uint64_t v739;
  uint64_t v740;
  uint64_t v741;
  uint64_t v742;
  uint64_t v743;
  uint64_t v744;
  uint64_t v745;
  __int128 v746;
  __int128 v747;
  __int128 v748;
  __int128 v749;
  __int128 v750;
  __int128 v751;
  _OWORD *v752;
  __int128 *v753;
  uint64_t v754;
  uint64_t v755;
  uint64_t v756;
  uint64_t v757;
  uint64_t v758;
  uint64_t v759;
  uint64_t v760;
  __int128 v761;
  __int128 v762;
  __int128 v763;
  __int128 v764;
  __int128 v765;
  __int128 v766;
  _OWORD *v767;
  __int128 *v768;
  uint64_t v769;
  uint64_t v770;
  uint64_t v771;
  uint64_t v772;
  uint64_t v773;
  uint64_t v774;
  uint64_t v775;
  __int128 v776;
  __int128 v777;
  __int128 v778;
  __int128 v779;
  __int128 v780;
  __int128 v781;
  _OWORD *v782;
  _OWORD *v783;
  uint64_t v784;
  uint64_t v785;
  uint64_t v786;
  __int128 v787;
  __int128 v788;
  _OWORD *v789;
  __int128 *v790;
  uint64_t v791;
  uint64_t v792;
  uint64_t v793;
  uint64_t v794;
  uint64_t v795;
  uint64_t v796;
  uint64_t v797;
  __int128 v798;
  __int128 v799;
  __int128 v800;
  __int128 v801;
  __int128 v802;
  __int128 v803;
  _OWORD *v804;
  __int128 *v805;
  uint64_t v806;
  uint64_t v807;
  uint64_t v808;
  uint64_t v809;
  uint64_t v810;
  uint64_t v811;
  uint64_t v812;
  __int128 v813;
  __int128 v814;
  __int128 v815;
  __int128 v816;
  __int128 v817;
  __int128 v818;
  _OWORD *v819;
  __int128 *v820;
  uint64_t v821;
  uint64_t v822;
  uint64_t v823;
  uint64_t v824;
  uint64_t v825;
  uint64_t v826;
  uint64_t v827;
  __int128 v828;
  __int128 v829;
  __int128 v830;
  __int128 v831;
  __int128 v832;
  __int128 v833;
  _OWORD *v834;
  _OWORD *v835;
  uint64_t v836;
  uint64_t v837;
  uint64_t v838;
  __int128 v839;
  __int128 v840;
  _OWORD *v841;
  __int128 *v842;
  uint64_t v843;
  uint64_t v844;
  uint64_t v845;
  uint64_t v846;
  uint64_t v847;
  uint64_t v848;
  uint64_t v849;
  __int128 v850;
  __int128 v851;
  __int128 v852;
  __int128 v853;
  __int128 v854;
  __int128 v855;
  _OWORD *v856;
  __int128 *v857;
  uint64_t v858;
  uint64_t v859;
  uint64_t v860;
  uint64_t v861;
  uint64_t v862;
  uint64_t v863;
  uint64_t v864;
  __int128 v865;
  __int128 v866;
  __int128 v867;
  __int128 v868;
  __int128 v869;
  __int128 v870;
  _OWORD *v871;
  __int128 *v872;
  uint64_t v873;
  uint64_t v874;
  uint64_t v875;
  uint64_t v876;
  uint64_t v877;
  uint64_t v878;
  uint64_t v879;
  __int128 v880;
  __int128 v881;
  __int128 v882;
  __int128 v883;
  __int128 v884;
  __int128 v885;
  _OWORD *v886;
  _OWORD *v887;
  uint64_t v888;
  uint64_t v889;
  uint64_t v890;
  __int128 v891;
  __int128 v892;
  _OWORD *v893;
  __int128 *v894;
  uint64_t v895;
  uint64_t v896;
  uint64_t v897;
  uint64_t v898;
  uint64_t v899;
  uint64_t v900;
  uint64_t v901;
  __int128 v902;
  __int128 v903;
  __int128 v904;
  __int128 v905;
  __int128 v906;
  __int128 v907;
  _OWORD *v908;
  __int128 *v909;
  uint64_t v910;
  uint64_t v911;
  uint64_t v912;
  uint64_t v913;
  uint64_t v914;
  uint64_t v915;
  uint64_t v916;
  __int128 v917;
  __int128 v918;
  __int128 v919;
  __int128 v920;
  __int128 v921;
  __int128 v922;
  _OWORD *v923;
  __int128 *v924;
  uint64_t v925;
  uint64_t v926;
  uint64_t v927;
  uint64_t v928;
  uint64_t v929;
  uint64_t v930;
  uint64_t v931;
  __int128 v932;
  __int128 v933;
  __int128 v934;
  __int128 v935;
  __int128 v936;
  __int128 v937;
  _OWORD *v938;
  _OWORD *v939;
  uint64_t v940;
  uint64_t v941;
  uint64_t v942;
  __int128 v943;
  __int128 v944;
  _OWORD *v945;
  __int128 *v946;
  uint64_t v947;
  uint64_t v948;
  uint64_t v949;
  uint64_t v950;
  uint64_t v951;
  uint64_t v952;
  uint64_t v953;
  __int128 v954;
  __int128 v955;
  __int128 v956;
  __int128 v957;
  __int128 v958;
  __int128 v959;
  _OWORD *v960;
  __int128 *v961;
  uint64_t v962;
  uint64_t v963;
  uint64_t v964;
  uint64_t v965;
  uint64_t v966;
  uint64_t v967;
  uint64_t v968;
  __int128 v969;
  __int128 v970;
  __int128 v971;
  __int128 v972;
  __int128 v973;
  __int128 v974;
  _OWORD *v975;
  __int128 *v976;
  uint64_t v977;
  uint64_t v978;
  uint64_t v979;
  uint64_t v980;
  uint64_t v981;
  uint64_t v982;
  uint64_t v983;
  __int128 v984;
  __int128 v985;
  __int128 v986;
  __int128 v987;
  __int128 v988;
  __int128 v989;
  _OWORD *v990;
  _OWORD *v991;
  uint64_t v992;
  uint64_t v993;
  uint64_t v994;
  __int128 v995;
  __int128 v996;
  _OWORD *v997;
  __int128 *v998;
  uint64_t v999;
  uint64_t v1000;
  uint64_t v1001;
  uint64_t v1002;
  uint64_t v1003;
  uint64_t v1004;
  uint64_t v1005;
  __int128 v1006;
  __int128 v1007;
  __int128 v1008;
  __int128 v1009;
  __int128 v1010;
  __int128 v1011;
  _OWORD *v1012;
  __int128 *v1013;
  uint64_t v1014;
  uint64_t v1015;
  uint64_t v1016;
  uint64_t v1017;
  uint64_t v1018;
  uint64_t v1019;
  uint64_t v1020;
  __int128 v1021;
  __int128 v1022;
  __int128 v1023;
  __int128 v1024;
  __int128 v1025;
  __int128 v1026;
  _OWORD *v1027;
  __int128 *v1028;
  uint64_t v1029;
  uint64_t v1030;
  uint64_t v1031;
  uint64_t v1032;
  uint64_t v1033;
  uint64_t v1034;
  uint64_t v1035;
  __int128 v1036;
  __int128 v1037;
  __int128 v1038;
  __int128 v1039;
  __int128 v1040;
  __int128 v1041;
  _OWORD *v1042;
  _OWORD *v1043;
  uint64_t v1044;
  uint64_t v1045;
  uint64_t v1046;
  __int128 v1047;
  __int128 v1048;
  _OWORD *v1049;
  __int128 *v1050;
  uint64_t v1051;
  uint64_t v1052;
  uint64_t v1053;
  uint64_t v1054;
  uint64_t v1055;
  uint64_t v1056;
  uint64_t v1057;
  __int128 v1058;
  __int128 v1059;
  __int128 v1060;
  __int128 v1061;
  __int128 v1062;
  __int128 v1063;
  _OWORD *v1064;
  __int128 *v1065;
  uint64_t v1066;
  uint64_t v1067;
  uint64_t v1068;
  uint64_t v1069;
  uint64_t v1070;
  uint64_t v1071;
  uint64_t v1072;
  __int128 v1073;
  __int128 v1074;
  __int128 v1075;
  __int128 v1076;
  __int128 v1077;
  __int128 v1078;
  _OWORD *v1079;
  __int128 *v1080;
  uint64_t v1081;
  uint64_t v1082;
  uint64_t v1083;
  uint64_t v1084;
  uint64_t v1085;
  uint64_t v1086;
  uint64_t v1087;
  __int128 v1088;
  __int128 v1089;
  __int128 v1090;
  __int128 v1091;
  __int128 v1092;
  __int128 v1093;
  _OWORD *v1094;
  _OWORD *v1095;
  uint64_t v1096;
  uint64_t v1097;
  uint64_t v1098;
  __int128 v1099;
  __int128 v1100;
  _OWORD *v1101;
  __int128 *v1102;
  uint64_t v1103;
  uint64_t v1104;
  uint64_t v1105;
  uint64_t v1106;
  uint64_t v1107;
  uint64_t v1108;
  uint64_t v1109;
  __int128 v1110;
  __int128 v1111;
  __int128 v1112;
  __int128 v1113;
  __int128 v1114;
  __int128 v1115;
  _OWORD *v1116;
  __int128 *v1117;
  uint64_t v1118;
  uint64_t v1119;
  uint64_t v1120;
  uint64_t v1121;
  uint64_t v1122;
  uint64_t v1123;
  uint64_t v1124;
  __int128 v1125;
  __int128 v1126;
  __int128 v1127;
  __int128 v1128;
  __int128 v1129;
  __int128 v1130;
  _OWORD *v1131;
  __int128 *v1132;
  uint64_t v1133;
  uint64_t v1134;
  uint64_t v1135;
  uint64_t v1136;
  uint64_t v1137;
  uint64_t v1138;
  uint64_t v1139;
  __int128 v1140;
  __int128 v1141;
  __int128 v1142;
  __int128 v1143;
  __int128 v1144;
  __int128 v1145;
  _OWORD *v1146;
  _OWORD *v1147;
  uint64_t v1148;
  uint64_t v1149;
  uint64_t v1150;
  __int128 v1151;
  __int128 v1152;
  _OWORD *v1153;
  __int128 *v1154;
  uint64_t v1155;
  uint64_t v1156;
  uint64_t v1157;
  uint64_t v1158;
  uint64_t v1159;
  uint64_t v1160;
  uint64_t v1161;
  __int128 v1162;
  __int128 v1163;
  __int128 v1164;
  __int128 v1165;
  __int128 v1166;
  __int128 v1167;
  _OWORD *v1168;
  __int128 *v1169;
  uint64_t v1170;
  uint64_t v1171;
  uint64_t v1172;
  uint64_t v1173;
  uint64_t v1174;
  uint64_t v1175;
  uint64_t v1176;
  __int128 v1177;
  __int128 v1178;
  __int128 v1179;
  __int128 v1180;
  __int128 v1181;
  __int128 v1182;
  _OWORD *v1183;
  __int128 *v1184;
  uint64_t v1185;
  uint64_t v1186;
  uint64_t v1187;
  uint64_t v1188;
  uint64_t v1189;
  uint64_t v1190;
  uint64_t v1191;
  __int128 v1192;
  __int128 v1193;
  __int128 v1194;
  __int128 v1195;
  __int128 v1196;
  __int128 v1197;
  _OWORD *v1198;
  _OWORD *v1199;
  uint64_t v1200;
  uint64_t v1201;
  uint64_t v1202;
  __int128 v1203;
  __int128 v1204;
  _OWORD *v1205;
  __int128 *v1206;
  uint64_t v1207;
  uint64_t v1208;
  uint64_t v1209;
  uint64_t v1210;
  uint64_t v1211;
  uint64_t v1212;
  uint64_t v1213;
  __int128 v1214;
  __int128 v1215;
  __int128 v1216;
  __int128 v1217;
  __int128 v1218;
  __int128 v1219;
  _OWORD *v1220;
  __int128 *v1221;
  uint64_t v1222;
  uint64_t v1223;
  uint64_t v1224;
  uint64_t v1225;
  uint64_t v1226;
  uint64_t v1227;
  uint64_t v1228;
  __int128 v1229;
  __int128 v1230;
  __int128 v1231;
  __int128 v1232;
  __int128 v1233;
  __int128 v1234;
  _OWORD *v1235;
  __int128 *v1236;
  uint64_t v1237;
  uint64_t v1238;
  uint64_t v1239;
  uint64_t v1240;
  uint64_t v1241;
  uint64_t v1242;
  uint64_t v1243;
  __int128 v1244;
  __int128 v1245;
  __int128 v1246;
  __int128 v1247;
  __int128 v1248;
  __int128 v1249;
  _OWORD *v1250;
  _OWORD *v1251;
  uint64_t v1252;
  uint64_t v1253;
  uint64_t v1254;
  __int128 v1255;
  __int128 v1256;
  _OWORD *v1257;
  __int128 *v1258;
  uint64_t v1259;
  uint64_t v1260;
  uint64_t v1261;
  uint64_t v1262;
  uint64_t v1263;
  uint64_t v1264;
  uint64_t v1265;
  __int128 v1266;
  __int128 v1267;
  __int128 v1268;
  __int128 v1269;
  __int128 v1270;
  __int128 v1271;
  _OWORD *v1272;
  __int128 *v1273;
  uint64_t v1274;
  uint64_t v1275;
  uint64_t v1276;
  uint64_t v1277;
  uint64_t v1278;
  uint64_t v1279;
  uint64_t v1280;
  __int128 v1281;
  __int128 v1282;
  __int128 v1283;
  __int128 v1284;
  __int128 v1285;
  __int128 v1286;
  _OWORD *v1287;
  __int128 *v1288;
  uint64_t v1289;
  uint64_t v1290;
  uint64_t v1291;
  uint64_t v1292;
  uint64_t v1293;
  uint64_t v1294;
  uint64_t v1295;
  __int128 v1296;
  __int128 v1297;
  __int128 v1298;
  __int128 v1299;
  __int128 v1300;
  __int128 v1301;
  _OWORD *v1302;
  _OWORD *v1303;
  uint64_t v1304;
  uint64_t v1305;
  uint64_t v1306;
  __int128 v1307;
  __int128 v1308;
  _OWORD *v1309;
  __int128 *v1310;
  uint64_t v1311;
  uint64_t v1312;
  uint64_t v1313;
  uint64_t v1314;
  uint64_t v1315;
  uint64_t v1316;
  uint64_t v1317;
  __int128 v1318;
  __int128 v1319;
  __int128 v1320;
  __int128 v1321;
  __int128 v1322;
  __int128 v1323;
  _OWORD *v1324;
  __int128 *v1325;
  uint64_t v1326;
  uint64_t v1327;
  uint64_t v1328;
  uint64_t v1329;
  uint64_t v1330;
  uint64_t v1331;
  uint64_t v1332;
  __int128 v1333;
  __int128 v1334;
  __int128 v1335;
  __int128 v1336;
  __int128 v1337;
  __int128 v1338;
  _OWORD *v1339;
  __int128 *v1340;
  uint64_t v1341;
  uint64_t v1342;
  uint64_t v1343;
  uint64_t v1344;
  uint64_t v1345;
  uint64_t v1346;
  uint64_t v1347;
  __int128 v1348;
  __int128 v1349;
  __int128 v1350;
  __int128 v1351;
  __int128 v1352;
  __int128 v1353;
  _OWORD *v1354;
  _OWORD *v1355;
  uint64_t v1356;
  uint64_t v1357;
  uint64_t v1358;
  __int128 v1359;
  __int128 v1360;
  _OWORD *v1361;
  __int128 *v1362;
  uint64_t v1363;
  uint64_t v1364;
  uint64_t v1365;
  uint64_t v1366;
  uint64_t v1367;
  uint64_t v1368;
  uint64_t v1369;
  __int128 v1370;
  __int128 v1371;
  __int128 v1372;
  __int128 v1373;
  __int128 v1374;
  __int128 v1375;
  _OWORD *v1376;
  __int128 *v1377;
  uint64_t v1378;
  uint64_t v1379;
  uint64_t v1380;
  uint64_t v1381;
  uint64_t v1382;
  uint64_t v1383;
  uint64_t v1384;
  __int128 v1385;
  __int128 v1386;
  __int128 v1387;
  __int128 v1388;
  __int128 v1389;
  __int128 v1390;
  _OWORD *v1391;
  __int128 *v1392;
  uint64_t v1393;
  uint64_t v1394;
  uint64_t v1395;
  uint64_t v1396;
  uint64_t v1397;
  uint64_t v1398;
  uint64_t v1399;
  __int128 v1400;
  __int128 v1401;
  __int128 v1402;
  __int128 v1403;
  __int128 v1404;
  __int128 v1405;
  _OWORD *v1406;
  _OWORD *v1407;
  uint64_t v1408;
  uint64_t v1409;
  uint64_t v1410;
  __int128 v1411;
  __int128 v1412;
  _OWORD *v1413;
  __int128 *v1414;
  uint64_t v1415;
  uint64_t v1416;
  uint64_t v1417;
  uint64_t v1418;
  uint64_t v1419;
  uint64_t v1420;
  uint64_t v1421;
  __int128 v1422;
  __int128 v1423;
  __int128 v1424;
  __int128 v1425;
  __int128 v1426;
  __int128 v1427;
  _OWORD *v1428;
  __int128 *v1429;
  uint64_t v1430;
  uint64_t v1431;
  uint64_t v1432;
  uint64_t v1433;
  uint64_t v1434;
  uint64_t v1435;
  uint64_t v1436;
  __int128 v1437;
  __int128 v1438;
  __int128 v1439;
  __int128 v1440;
  __int128 v1441;
  __int128 v1442;
  _OWORD *v1443;
  __int128 *v1444;
  uint64_t v1445;
  uint64_t v1446;
  uint64_t v1447;
  uint64_t v1448;
  uint64_t v1449;
  uint64_t v1450;
  uint64_t v1451;
  __int128 v1452;
  __int128 v1453;
  __int128 v1454;
  __int128 v1455;
  __int128 v1456;
  __int128 v1457;
  _OWORD *v1458;
  _OWORD *v1459;
  uint64_t v1460;
  uint64_t v1461;
  uint64_t v1462;
  __int128 v1463;
  __int128 v1464;
  _OWORD *v1465;
  __int128 *v1466;
  uint64_t v1467;
  uint64_t v1468;
  uint64_t v1469;
  uint64_t v1470;
  uint64_t v1471;
  uint64_t v1472;
  uint64_t v1473;
  __int128 v1474;
  __int128 v1475;
  __int128 v1476;
  __int128 v1477;
  __int128 v1478;
  __int128 v1479;
  _OWORD *v1480;
  __int128 *v1481;
  uint64_t v1482;
  uint64_t v1483;
  uint64_t v1484;
  uint64_t v1485;
  uint64_t v1486;
  uint64_t v1487;
  uint64_t v1488;
  __int128 v1489;
  __int128 v1490;
  __int128 v1491;
  __int128 v1492;
  __int128 v1493;
  __int128 v1494;
  _OWORD *v1495;
  __int128 *v1496;
  uint64_t v1497;
  uint64_t v1498;
  uint64_t v1499;
  uint64_t v1500;
  uint64_t v1501;
  uint64_t v1502;
  uint64_t v1503;
  __int128 v1504;
  __int128 v1505;
  __int128 v1506;
  __int128 v1507;
  __int128 v1508;
  __int128 v1509;
  _OWORD *v1510;
  _OWORD *v1511;
  uint64_t v1512;
  uint64_t v1513;
  uint64_t v1514;
  __int128 v1515;
  __int128 v1516;
  _OWORD *v1517;
  __int128 *v1518;
  uint64_t v1519;
  uint64_t v1520;
  uint64_t v1521;
  uint64_t v1522;
  uint64_t v1523;
  uint64_t v1524;
  uint64_t v1525;
  __int128 v1526;
  __int128 v1527;
  __int128 v1528;
  __int128 v1529;
  __int128 v1530;
  __int128 v1531;
  _OWORD *v1532;
  __int128 *v1533;
  uint64_t v1534;
  uint64_t v1535;
  uint64_t v1536;
  uint64_t v1537;
  uint64_t v1538;
  uint64_t v1539;
  uint64_t v1540;
  __int128 v1541;
  __int128 v1542;
  __int128 v1543;
  __int128 v1544;
  __int128 v1545;
  __int128 v1546;
  _OWORD *v1547;
  __int128 *v1548;
  uint64_t v1549;
  uint64_t v1550;
  uint64_t v1551;
  uint64_t v1552;
  uint64_t v1553;
  uint64_t v1554;
  uint64_t v1555;
  __int128 v1556;
  __int128 v1557;
  __int128 v1558;
  __int128 v1559;
  __int128 v1560;
  __int128 v1561;
  _OWORD *v1562;
  _OWORD *v1563;
  uint64_t v1564;
  uint64_t v1565;
  uint64_t v1566;
  __int128 v1567;
  __int128 v1568;
  _OWORD *v1569;
  __int128 *v1570;
  uint64_t v1571;
  uint64_t v1572;
  uint64_t v1573;
  uint64_t v1574;
  uint64_t v1575;
  uint64_t v1576;
  uint64_t v1577;
  __int128 v1578;
  __int128 v1579;
  __int128 v1580;
  __int128 v1581;
  __int128 v1582;
  __int128 v1583;
  _OWORD *v1584;
  __int128 *v1585;
  uint64_t v1586;
  uint64_t v1587;
  uint64_t v1588;
  uint64_t v1589;
  uint64_t v1590;
  uint64_t v1591;
  uint64_t v1592;
  __int128 v1593;
  __int128 v1594;
  __int128 v1595;
  __int128 v1596;
  __int128 v1597;
  __int128 v1598;
  _OWORD *v1599;
  __int128 *v1600;
  uint64_t v1601;
  uint64_t v1602;
  uint64_t v1603;
  uint64_t v1604;
  uint64_t v1605;
  uint64_t v1606;
  uint64_t v1607;
  __int128 v1608;
  __int128 v1609;
  __int128 v1610;
  __int128 v1611;
  __int128 v1612;
  __int128 v1613;
  _OWORD *v1614;
  _OWORD *v1615;
  uint64_t v1616;
  uint64_t v1617;
  uint64_t v1618;
  __int128 v1619;
  __int128 v1620;
  _OWORD *v1621;
  __int128 *v1622;
  uint64_t v1623;
  uint64_t v1624;
  uint64_t v1625;
  uint64_t v1626;
  uint64_t v1627;
  uint64_t v1628;
  uint64_t v1629;
  __int128 v1630;
  __int128 v1631;
  __int128 v1632;
  __int128 v1633;
  __int128 v1634;
  __int128 v1635;
  _OWORD *v1636;
  __int128 *v1637;
  uint64_t v1638;
  uint64_t v1639;
  uint64_t v1640;
  uint64_t v1641;
  uint64_t v1642;
  uint64_t v1643;
  uint64_t v1644;
  __int128 v1645;
  __int128 v1646;
  __int128 v1647;
  __int128 v1648;
  __int128 v1649;
  __int128 v1650;
  _OWORD *v1651;
  __int128 *v1652;
  uint64_t v1653;
  uint64_t v1654;
  uint64_t v1655;
  uint64_t v1656;
  uint64_t v1657;
  uint64_t v1658;
  uint64_t v1659;
  __int128 v1660;
  __int128 v1661;
  __int128 v1662;
  __int128 v1663;
  __int128 v1664;
  __int128 v1665;
  _OWORD *v1666;
  _OWORD *v1667;
  uint64_t v1668;
  uint64_t v1669;
  uint64_t v1670;
  __int128 v1671;
  __int128 v1672;
  _OWORD *v1673;
  __int128 *v1674;
  uint64_t v1675;
  uint64_t v1676;
  uint64_t v1677;
  uint64_t v1678;
  uint64_t v1679;
  uint64_t v1680;
  uint64_t v1681;
  __int128 v1682;
  __int128 v1683;
  __int128 v1684;
  __int128 v1685;
  __int128 v1686;
  __int128 v1687;
  _OWORD *v1688;
  __int128 *v1689;
  uint64_t v1690;
  uint64_t v1691;
  uint64_t v1692;
  uint64_t v1693;
  uint64_t v1694;
  uint64_t v1695;
  uint64_t v1696;
  __int128 v1697;
  __int128 v1698;
  __int128 v1699;
  __int128 v1700;
  __int128 v1701;
  __int128 v1702;
  _OWORD *v1703;
  __int128 *v1704;
  uint64_t v1705;
  uint64_t v1706;
  uint64_t v1707;
  uint64_t v1708;
  uint64_t v1709;
  uint64_t v1710;
  uint64_t v1711;
  __int128 v1712;
  __int128 v1713;
  __int128 v1714;
  __int128 v1715;
  __int128 v1716;
  __int128 v1717;
  _OWORD *v1718;
  _OWORD *v1719;
  uint64_t v1720;
  uint64_t v1721;
  uint64_t v1722;
  __int128 v1723;
  __int128 v1724;
  _OWORD *v1725;
  __int128 *v1726;
  uint64_t v1727;
  uint64_t v1728;
  uint64_t v1729;
  uint64_t v1730;
  uint64_t v1731;
  uint64_t v1732;
  uint64_t v1733;
  __int128 v1734;
  __int128 v1735;
  __int128 v1736;
  __int128 v1737;
  __int128 v1738;
  __int128 v1739;
  _OWORD *v1740;
  __int128 *v1741;
  uint64_t v1742;
  uint64_t v1743;
  uint64_t v1744;
  uint64_t v1745;
  uint64_t v1746;
  uint64_t v1747;
  uint64_t v1748;
  __int128 v1749;
  __int128 v1750;
  __int128 v1751;
  __int128 v1752;
  __int128 v1753;
  __int128 v1754;
  _OWORD *v1755;
  __int128 *v1756;
  uint64_t v1757;
  uint64_t v1758;
  uint64_t v1759;
  uint64_t v1760;
  uint64_t v1761;
  uint64_t v1762;
  uint64_t v1763;
  __int128 v1764;
  __int128 v1765;
  __int128 v1766;
  __int128 v1767;
  __int128 v1768;
  __int128 v1769;
  _OWORD *v1770;
  _OWORD *v1771;
  uint64_t v1772;
  uint64_t v1773;
  uint64_t v1774;
  __int128 v1775;
  __int128 v1776;
  _OWORD *v1777;
  __int128 *v1778;
  uint64_t v1779;
  uint64_t v1780;
  uint64_t v1781;
  uint64_t v1782;
  uint64_t v1783;
  uint64_t v1784;
  uint64_t v1785;
  __int128 v1786;
  __int128 v1787;
  __int128 v1788;
  __int128 v1789;
  __int128 v1790;
  __int128 v1791;
  _OWORD *v1792;
  __int128 *v1793;
  uint64_t v1794;
  uint64_t v1795;
  uint64_t v1796;
  uint64_t v1797;
  uint64_t v1798;
  uint64_t v1799;
  uint64_t v1800;
  __int128 v1801;
  __int128 v1802;
  __int128 v1803;
  __int128 v1804;
  __int128 v1805;
  __int128 v1806;
  _OWORD *v1807;
  __int128 *v1808;
  uint64_t v1809;
  uint64_t v1810;
  uint64_t v1811;
  uint64_t v1812;
  uint64_t v1813;
  uint64_t v1814;
  uint64_t v1815;
  __int128 v1816;
  __int128 v1817;
  __int128 v1818;
  __int128 v1819;
  __int128 v1820;
  __int128 v1821;
  _OWORD *v1822;
  _OWORD *v1823;
  uint64_t v1824;
  uint64_t v1825;
  uint64_t v1826;
  __int128 v1827;
  __int128 v1828;
  _OWORD *v1829;
  __int128 *v1830;
  uint64_t v1831;
  uint64_t v1832;
  uint64_t v1833;
  uint64_t v1834;
  uint64_t v1835;
  uint64_t v1836;
  uint64_t v1837;
  __int128 v1838;
  __int128 v1839;
  __int128 v1840;
  __int128 v1841;
  __int128 v1842;
  __int128 v1843;
  _OWORD *v1844;
  __int128 *v1845;
  uint64_t v1846;
  uint64_t v1847;
  uint64_t v1848;
  uint64_t v1849;
  uint64_t v1850;
  uint64_t v1851;
  uint64_t v1852;
  __int128 v1853;
  __int128 v1854;
  __int128 v1855;
  __int128 v1856;
  __int128 v1857;
  __int128 v1858;
  _OWORD *v1859;
  __int128 *v1860;
  uint64_t v1861;
  uint64_t v1862;
  uint64_t v1863;
  uint64_t v1864;
  uint64_t v1865;
  uint64_t v1866;
  uint64_t v1867;
  __int128 v1868;
  __int128 v1869;
  __int128 v1870;
  __int128 v1871;
  __int128 v1872;
  __int128 v1873;
  _OWORD *v1874;
  _OWORD *v1875;
  uint64_t v1876;
  uint64_t v1877;
  uint64_t v1878;
  __int128 v1879;
  __int128 v1880;
  _OWORD *v1881;
  __int128 *v1882;
  uint64_t v1883;
  uint64_t v1884;
  uint64_t v1885;
  uint64_t v1886;
  uint64_t v1887;
  uint64_t v1888;
  uint64_t v1889;
  __int128 v1890;
  __int128 v1891;
  __int128 v1892;
  __int128 v1893;
  __int128 v1894;
  __int128 v1895;
  _OWORD *v1896;
  __int128 *v1897;
  uint64_t v1898;
  uint64_t v1899;
  uint64_t v1900;
  uint64_t v1901;
  uint64_t v1902;
  uint64_t v1903;
  uint64_t v1904;
  __int128 v1905;
  __int128 v1906;
  __int128 v1907;
  __int128 v1908;
  __int128 v1909;
  __int128 v1910;
  _OWORD *v1911;
  __int128 *v1912;
  uint64_t v1913;
  uint64_t v1914;
  uint64_t v1915;
  uint64_t v1916;
  uint64_t v1917;
  uint64_t v1918;
  uint64_t v1919;
  __int128 v1920;
  __int128 v1921;
  __int128 v1922;
  __int128 v1923;
  __int128 v1924;
  __int128 v1925;
  _OWORD *v1926;
  _OWORD *v1927;
  uint64_t v1928;
  uint64_t v1929;
  uint64_t v1930;
  __int128 v1931;
  __int128 v1932;
  _OWORD *v1933;
  __int128 *v1934;
  uint64_t v1935;
  uint64_t v1936;
  uint64_t v1937;
  uint64_t v1938;
  uint64_t v1939;
  uint64_t v1940;
  uint64_t v1941;
  __int128 v1942;
  __int128 v1943;
  __int128 v1944;
  __int128 v1945;
  __int128 v1946;
  __int128 v1947;
  _OWORD *v1948;
  __int128 *v1949;
  uint64_t v1950;
  uint64_t v1951;
  uint64_t v1952;
  uint64_t v1953;
  uint64_t v1954;
  uint64_t v1955;
  uint64_t v1956;
  __int128 v1957;
  __int128 v1958;
  __int128 v1959;
  __int128 v1960;
  __int128 v1961;
  __int128 v1962;
  _OWORD *v1963;
  __int128 *v1964;
  uint64_t v1965;
  uint64_t v1966;
  uint64_t v1967;
  uint64_t v1968;
  uint64_t v1969;
  uint64_t v1970;
  uint64_t v1971;
  __int128 v1972;
  __int128 v1973;
  __int128 v1974;
  __int128 v1975;
  __int128 v1976;
  __int128 v1977;
  _OWORD *v1978;
  _OWORD *v1979;
  uint64_t v1980;
  uint64_t v1981;
  uint64_t v1982;
  __int128 v1983;
  __int128 v1984;
  _OWORD *v1985;
  __int128 *v1986;
  uint64_t v1987;
  uint64_t v1988;
  uint64_t v1989;
  uint64_t v1990;
  uint64_t v1991;
  uint64_t v1992;
  uint64_t v1993;
  __int128 v1994;
  __int128 v1995;
  __int128 v1996;
  __int128 v1997;
  __int128 v1998;
  __int128 v1999;
  _OWORD *v2000;
  __int128 *v2001;
  uint64_t v2002;
  uint64_t v2003;
  uint64_t v2004;
  uint64_t v2005;
  uint64_t v2006;
  uint64_t v2007;
  uint64_t v2008;
  __int128 v2009;
  __int128 v2010;
  __int128 v2011;
  __int128 v2012;
  __int128 v2013;
  __int128 v2014;
  _OWORD *v2015;
  __int128 *v2016;
  uint64_t v2017;
  uint64_t v2018;
  uint64_t v2019;
  uint64_t v2020;
  uint64_t v2021;
  uint64_t v2022;
  uint64_t v2023;
  __int128 v2024;
  __int128 v2025;
  __int128 v2026;
  __int128 v2027;
  __int128 v2028;
  __int128 v2029;
  _OWORD *v2030;
  _OWORD *v2031;
  uint64_t v2032;
  uint64_t v2033;
  uint64_t v2034;
  __int128 v2035;
  __int128 v2036;
  _OWORD *v2037;
  __int128 *v2038;
  uint64_t v2039;
  uint64_t v2040;
  uint64_t v2041;
  uint64_t v2042;
  uint64_t v2043;
  uint64_t v2044;
  uint64_t v2045;
  __int128 v2046;
  __int128 v2047;
  __int128 v2048;
  __int128 v2049;
  __int128 v2050;
  __int128 v2051;
  _OWORD *v2052;
  __int128 *v2053;
  uint64_t v2054;
  uint64_t v2055;
  uint64_t v2056;
  uint64_t v2057;
  uint64_t v2058;
  uint64_t v2059;
  uint64_t v2060;
  __int128 v2061;
  __int128 v2062;
  __int128 v2063;
  __int128 v2064;
  __int128 v2065;
  __int128 v2066;
  _OWORD *v2067;
  __int128 *v2068;
  uint64_t v2069;
  uint64_t v2070;
  uint64_t v2071;
  uint64_t v2072;
  uint64_t v2073;
  uint64_t v2074;
  uint64_t v2075;
  __int128 v2076;
  __int128 v2077;
  __int128 v2078;
  __int128 v2079;
  __int128 v2080;
  __int128 v2081;

  v4 = *a2;
  if (*(_QWORD *)a1)
  {
    if (v4)
    {
      v5 = a2[1];
      *(_QWORD *)a1 = v4;
      *(_QWORD *)(a1 + 8) = v5;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 16) = a2[2];
      *(_QWORD *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1);
      v7 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_OWORD *)(a1 + 16) = v7;
    }
  }
  else if (v4)
  {
    v6 = a2[1];
    *(_QWORD *)a1 = v4;
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = a2[3];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v8 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v8;
  }
  v9 = (_OWORD *)(a1 + 32);
  v11 = (__int128 *)(a2 + 4);
  v10 = a2[4];
  if (*(_QWORD *)(a1 + 32))
  {
    if (v10)
    {
      v12 = a2[5];
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v12;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 48) = a2[6];
      *(_QWORD *)(a1 + 56) = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = a2[9];
      *(_QWORD *)(a1 + 64) = a2[8];
      *(_QWORD *)(a1 + 72) = v13;
      swift_retain();
      swift_release();
      v14 = a2[10];
      *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
      *(_QWORD *)(a1 + 80) = v14;
    }
    else
    {
      sub_1AD3C2B88(a1 + 32);
      v19 = *((_OWORD *)a2 + 3);
      v18 = *((_OWORD *)a2 + 4);
      v20 = *v11;
      *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
      *(_OWORD *)(a1 + 48) = v19;
      *(_OWORD *)(a1 + 64) = v18;
      *v9 = v20;
    }
  }
  else if (v10)
  {
    v15 = a2[5];
    *(_QWORD *)(a1 + 32) = v10;
    *(_QWORD *)(a1 + 40) = v15;
    *(_QWORD *)(a1 + 48) = a2[6];
    *(_QWORD *)(a1 + 56) = a2[7];
    v16 = a2[9];
    *(_QWORD *)(a1 + 64) = a2[8];
    *(_QWORD *)(a1 + 72) = v16;
    v17 = a2[10];
    *(_BYTE *)(a1 + 88) = *((_BYTE *)a2 + 88);
    *(_QWORD *)(a1 + 80) = v17;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v21 = *v11;
    v22 = *((_OWORD *)a2 + 3);
    v23 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(a1 + 73) = *(_OWORD *)((char *)a2 + 73);
    *(_OWORD *)(a1 + 48) = v22;
    *(_OWORD *)(a1 + 64) = v23;
    *v9 = v21;
  }
  v24 = (_OWORD *)(a1 + 96);
  v26 = (__int128 *)(a2 + 12);
  v25 = a2[12];
  if (*(_QWORD *)(a1 + 96))
  {
    if (v25)
    {
      v27 = a2[13];
      *(_QWORD *)(a1 + 96) = v25;
      *(_QWORD *)(a1 + 104) = v27;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 112) = a2[14];
      *(_QWORD *)(a1 + 120) = a2[15];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v28 = a2[17];
      *(_QWORD *)(a1 + 128) = a2[16];
      *(_QWORD *)(a1 + 136) = v28;
      swift_retain();
      swift_release();
      v29 = a2[18];
      *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
      *(_QWORD *)(a1 + 144) = v29;
    }
    else
    {
      sub_1AD3C2B88(a1 + 96);
      v34 = *((_OWORD *)a2 + 7);
      v33 = *((_OWORD *)a2 + 8);
      v35 = *v26;
      *(_OWORD *)(a1 + 137) = *(_OWORD *)((char *)a2 + 137);
      *(_OWORD *)(a1 + 112) = v34;
      *(_OWORD *)(a1 + 128) = v33;
      *v24 = v35;
    }
  }
  else if (v25)
  {
    v30 = a2[13];
    *(_QWORD *)(a1 + 96) = v25;
    *(_QWORD *)(a1 + 104) = v30;
    *(_QWORD *)(a1 + 112) = a2[14];
    *(_QWORD *)(a1 + 120) = a2[15];
    v31 = a2[17];
    *(_QWORD *)(a1 + 128) = a2[16];
    *(_QWORD *)(a1 + 136) = v31;
    v32 = a2[18];
    *(_BYTE *)(a1 + 152) = *((_BYTE *)a2 + 152);
    *(_QWORD *)(a1 + 144) = v32;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v36 = *v26;
    v37 = *((_OWORD *)a2 + 7);
    v38 = *((_OWORD *)a2 + 8);
    *(_OWORD *)(a1 + 137) = *(_OWORD *)((char *)a2 + 137);
    *(_OWORD *)(a1 + 112) = v37;
    *(_OWORD *)(a1 + 128) = v38;
    *v24 = v36;
  }
  v39 = (_OWORD *)(a1 + 160);
  v41 = (__int128 *)(a2 + 20);
  v40 = a2[20];
  if (*(_QWORD *)(a1 + 160))
  {
    if (v40)
    {
      v42 = a2[21];
      *(_QWORD *)(a1 + 160) = v40;
      *(_QWORD *)(a1 + 168) = v42;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 176) = a2[22];
      *(_QWORD *)(a1 + 184) = a2[23];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v43 = a2[25];
      *(_QWORD *)(a1 + 192) = a2[24];
      *(_QWORD *)(a1 + 200) = v43;
      swift_retain();
      swift_release();
      v44 = a2[26];
      *(_BYTE *)(a1 + 216) = *((_BYTE *)a2 + 216);
      *(_QWORD *)(a1 + 208) = v44;
    }
    else
    {
      sub_1AD3C2B88(a1 + 160);
      v49 = *((_OWORD *)a2 + 11);
      v48 = *((_OWORD *)a2 + 12);
      v50 = *v41;
      *(_OWORD *)(a1 + 201) = *(_OWORD *)((char *)a2 + 201);
      *(_OWORD *)(a1 + 176) = v49;
      *(_OWORD *)(a1 + 192) = v48;
      *v39 = v50;
    }
  }
  else if (v40)
  {
    v45 = a2[21];
    *(_QWORD *)(a1 + 160) = v40;
    *(_QWORD *)(a1 + 168) = v45;
    *(_QWORD *)(a1 + 176) = a2[22];
    *(_QWORD *)(a1 + 184) = a2[23];
    v46 = a2[25];
    *(_QWORD *)(a1 + 192) = a2[24];
    *(_QWORD *)(a1 + 200) = v46;
    v47 = a2[26];
    *(_BYTE *)(a1 + 216) = *((_BYTE *)a2 + 216);
    *(_QWORD *)(a1 + 208) = v47;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v51 = *v41;
    v52 = *((_OWORD *)a2 + 11);
    v53 = *((_OWORD *)a2 + 12);
    *(_OWORD *)(a1 + 201) = *(_OWORD *)((char *)a2 + 201);
    *(_OWORD *)(a1 + 176) = v52;
    *(_OWORD *)(a1 + 192) = v53;
    *v39 = v51;
  }
  v54 = (_OWORD *)(a1 + 224);
  v56 = a2 + 28;
  v55 = a2[28];
  if (*(_QWORD *)(a1 + 224))
  {
    if (v55)
    {
      v57 = a2[29];
      *(_QWORD *)(a1 + 224) = v55;
      *(_QWORD *)(a1 + 232) = v57;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 240) = a2[30];
      *(_QWORD *)(a1 + 248) = a2[31];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 224);
      v59 = *((_OWORD *)a2 + 15);
      *v54 = *v56;
      *(_OWORD *)(a1 + 240) = v59;
    }
  }
  else if (v55)
  {
    v58 = a2[29];
    *(_QWORD *)(a1 + 224) = v55;
    *(_QWORD *)(a1 + 232) = v58;
    *(_QWORD *)(a1 + 240) = a2[30];
    *(_QWORD *)(a1 + 248) = a2[31];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v60 = *((_OWORD *)a2 + 15);
    *v54 = *v56;
    *(_OWORD *)(a1 + 240) = v60;
  }
  v61 = (_OWORD *)(a1 + 256);
  v62 = (__int128 *)(a2 + 32);
  v63 = a2[32];
  if (*(_QWORD *)(a1 + 256))
  {
    if (v63)
    {
      v64 = a2[33];
      *(_QWORD *)(a1 + 256) = v63;
      *(_QWORD *)(a1 + 264) = v64;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 272) = a2[34];
      *(_QWORD *)(a1 + 280) = a2[35];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v65 = a2[37];
      *(_QWORD *)(a1 + 288) = a2[36];
      *(_QWORD *)(a1 + 296) = v65;
      swift_retain();
      swift_release();
      v66 = a2[38];
      *(_BYTE *)(a1 + 312) = *((_BYTE *)a2 + 312);
      *(_QWORD *)(a1 + 304) = v66;
    }
    else
    {
      sub_1AD3C2B88(a1 + 256);
      v71 = *((_OWORD *)a2 + 17);
      v70 = *((_OWORD *)a2 + 18);
      v72 = *v62;
      *(_OWORD *)(a1 + 297) = *(_OWORD *)((char *)a2 + 297);
      *(_OWORD *)(a1 + 272) = v71;
      *(_OWORD *)(a1 + 288) = v70;
      *v61 = v72;
    }
  }
  else if (v63)
  {
    v67 = a2[33];
    *(_QWORD *)(a1 + 256) = v63;
    *(_QWORD *)(a1 + 264) = v67;
    *(_QWORD *)(a1 + 272) = a2[34];
    *(_QWORD *)(a1 + 280) = a2[35];
    v68 = a2[37];
    *(_QWORD *)(a1 + 288) = a2[36];
    *(_QWORD *)(a1 + 296) = v68;
    v69 = a2[38];
    *(_BYTE *)(a1 + 312) = *((_BYTE *)a2 + 312);
    *(_QWORD *)(a1 + 304) = v69;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v73 = *v62;
    v74 = *((_OWORD *)a2 + 17);
    v75 = *((_OWORD *)a2 + 18);
    *(_OWORD *)(a1 + 297) = *(_OWORD *)((char *)a2 + 297);
    *(_OWORD *)(a1 + 272) = v74;
    *(_OWORD *)(a1 + 288) = v75;
    *v61 = v73;
  }
  v76 = (_OWORD *)(a1 + 320);
  v77 = (__int128 *)(a2 + 40);
  v78 = a2[40];
  if (*(_QWORD *)(a1 + 320))
  {
    if (v78)
    {
      v79 = a2[41];
      *(_QWORD *)(a1 + 320) = v78;
      *(_QWORD *)(a1 + 328) = v79;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 336) = a2[42];
      *(_QWORD *)(a1 + 344) = a2[43];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v80 = a2[45];
      *(_QWORD *)(a1 + 352) = a2[44];
      *(_QWORD *)(a1 + 360) = v80;
      swift_retain();
      swift_release();
      v81 = a2[46];
      *(_BYTE *)(a1 + 376) = *((_BYTE *)a2 + 376);
      *(_QWORD *)(a1 + 368) = v81;
    }
    else
    {
      sub_1AD3C2B88(a1 + 320);
      v86 = *((_OWORD *)a2 + 21);
      v85 = *((_OWORD *)a2 + 22);
      v87 = *v77;
      *(_OWORD *)(a1 + 361) = *(_OWORD *)((char *)a2 + 361);
      *(_OWORD *)(a1 + 336) = v86;
      *(_OWORD *)(a1 + 352) = v85;
      *v76 = v87;
    }
  }
  else if (v78)
  {
    v82 = a2[41];
    *(_QWORD *)(a1 + 320) = v78;
    *(_QWORD *)(a1 + 328) = v82;
    *(_QWORD *)(a1 + 336) = a2[42];
    *(_QWORD *)(a1 + 344) = a2[43];
    v83 = a2[45];
    *(_QWORD *)(a1 + 352) = a2[44];
    *(_QWORD *)(a1 + 360) = v83;
    v84 = a2[46];
    *(_BYTE *)(a1 + 376) = *((_BYTE *)a2 + 376);
    *(_QWORD *)(a1 + 368) = v84;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v88 = *v77;
    v89 = *((_OWORD *)a2 + 21);
    v90 = *((_OWORD *)a2 + 22);
    *(_OWORD *)(a1 + 361) = *(_OWORD *)((char *)a2 + 361);
    *(_OWORD *)(a1 + 336) = v89;
    *(_OWORD *)(a1 + 352) = v90;
    *v76 = v88;
  }
  v91 = (_OWORD *)(a1 + 384);
  v92 = (__int128 *)(a2 + 48);
  v93 = a2[48];
  if (*(_QWORD *)(a1 + 384))
  {
    if (v93)
    {
      v94 = a2[49];
      *(_QWORD *)(a1 + 384) = v93;
      *(_QWORD *)(a1 + 392) = v94;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 400) = a2[50];
      *(_QWORD *)(a1 + 408) = a2[51];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v95 = a2[53];
      *(_QWORD *)(a1 + 416) = a2[52];
      *(_QWORD *)(a1 + 424) = v95;
      swift_retain();
      swift_release();
      v96 = a2[54];
      *(_BYTE *)(a1 + 440) = *((_BYTE *)a2 + 440);
      *(_QWORD *)(a1 + 432) = v96;
    }
    else
    {
      sub_1AD3C2B88(a1 + 384);
      v101 = *((_OWORD *)a2 + 25);
      v100 = *((_OWORD *)a2 + 26);
      v102 = *v92;
      *(_OWORD *)(a1 + 425) = *(_OWORD *)((char *)a2 + 425);
      *(_OWORD *)(a1 + 400) = v101;
      *(_OWORD *)(a1 + 416) = v100;
      *v91 = v102;
    }
  }
  else if (v93)
  {
    v97 = a2[49];
    *(_QWORD *)(a1 + 384) = v93;
    *(_QWORD *)(a1 + 392) = v97;
    *(_QWORD *)(a1 + 400) = a2[50];
    *(_QWORD *)(a1 + 408) = a2[51];
    v98 = a2[53];
    *(_QWORD *)(a1 + 416) = a2[52];
    *(_QWORD *)(a1 + 424) = v98;
    v99 = a2[54];
    *(_BYTE *)(a1 + 440) = *((_BYTE *)a2 + 440);
    *(_QWORD *)(a1 + 432) = v99;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v103 = *v92;
    v104 = *((_OWORD *)a2 + 25);
    v105 = *((_OWORD *)a2 + 26);
    *(_OWORD *)(a1 + 425) = *(_OWORD *)((char *)a2 + 425);
    *(_OWORD *)(a1 + 400) = v104;
    *(_OWORD *)(a1 + 416) = v105;
    *v91 = v103;
  }
  v106 = (_OWORD *)(a1 + 448);
  v107 = a2 + 56;
  v108 = a2[56];
  if (*(_QWORD *)(a1 + 448))
  {
    if (v108)
    {
      v109 = a2[57];
      *(_QWORD *)(a1 + 448) = v108;
      *(_QWORD *)(a1 + 456) = v109;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 464) = a2[58];
      *(_QWORD *)(a1 + 472) = a2[59];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 448);
      v111 = *((_OWORD *)a2 + 29);
      *v106 = *v107;
      *(_OWORD *)(a1 + 464) = v111;
    }
  }
  else if (v108)
  {
    v110 = a2[57];
    *(_QWORD *)(a1 + 448) = v108;
    *(_QWORD *)(a1 + 456) = v110;
    *(_QWORD *)(a1 + 464) = a2[58];
    *(_QWORD *)(a1 + 472) = a2[59];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v112 = *((_OWORD *)a2 + 29);
    *v106 = *v107;
    *(_OWORD *)(a1 + 464) = v112;
  }
  v113 = (_OWORD *)(a1 + 480);
  v114 = (__int128 *)(a2 + 60);
  v115 = a2[60];
  if (*(_QWORD *)(a1 + 480))
  {
    if (v115)
    {
      v116 = a2[61];
      *(_QWORD *)(a1 + 480) = v115;
      *(_QWORD *)(a1 + 488) = v116;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 496) = a2[62];
      *(_QWORD *)(a1 + 504) = a2[63];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v117 = a2[65];
      *(_QWORD *)(a1 + 512) = a2[64];
      *(_QWORD *)(a1 + 520) = v117;
      swift_retain();
      swift_release();
      v118 = a2[66];
      *(_BYTE *)(a1 + 536) = *((_BYTE *)a2 + 536);
      *(_QWORD *)(a1 + 528) = v118;
    }
    else
    {
      sub_1AD3C2B88(a1 + 480);
      v123 = *((_OWORD *)a2 + 31);
      v122 = *((_OWORD *)a2 + 32);
      v124 = *v114;
      *(_OWORD *)(a1 + 521) = *(_OWORD *)((char *)a2 + 521);
      *(_OWORD *)(a1 + 496) = v123;
      *(_OWORD *)(a1 + 512) = v122;
      *v113 = v124;
    }
  }
  else if (v115)
  {
    v119 = a2[61];
    *(_QWORD *)(a1 + 480) = v115;
    *(_QWORD *)(a1 + 488) = v119;
    *(_QWORD *)(a1 + 496) = a2[62];
    *(_QWORD *)(a1 + 504) = a2[63];
    v120 = a2[65];
    *(_QWORD *)(a1 + 512) = a2[64];
    *(_QWORD *)(a1 + 520) = v120;
    v121 = a2[66];
    *(_BYTE *)(a1 + 536) = *((_BYTE *)a2 + 536);
    *(_QWORD *)(a1 + 528) = v121;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v125 = *v114;
    v126 = *((_OWORD *)a2 + 31);
    v127 = *((_OWORD *)a2 + 32);
    *(_OWORD *)(a1 + 521) = *(_OWORD *)((char *)a2 + 521);
    *(_OWORD *)(a1 + 496) = v126;
    *(_OWORD *)(a1 + 512) = v127;
    *v113 = v125;
  }
  v128 = (_OWORD *)(a1 + 544);
  v129 = (__int128 *)(a2 + 68);
  v130 = a2[68];
  if (*(_QWORD *)(a1 + 544))
  {
    if (v130)
    {
      v131 = a2[69];
      *(_QWORD *)(a1 + 544) = v130;
      *(_QWORD *)(a1 + 552) = v131;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 560) = a2[70];
      *(_QWORD *)(a1 + 568) = a2[71];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v132 = a2[73];
      *(_QWORD *)(a1 + 576) = a2[72];
      *(_QWORD *)(a1 + 584) = v132;
      swift_retain();
      swift_release();
      v133 = a2[74];
      *(_BYTE *)(a1 + 600) = *((_BYTE *)a2 + 600);
      *(_QWORD *)(a1 + 592) = v133;
    }
    else
    {
      sub_1AD3C2B88(a1 + 544);
      v138 = *((_OWORD *)a2 + 35);
      v137 = *((_OWORD *)a2 + 36);
      v139 = *v129;
      *(_OWORD *)(a1 + 585) = *(_OWORD *)((char *)a2 + 585);
      *(_OWORD *)(a1 + 560) = v138;
      *(_OWORD *)(a1 + 576) = v137;
      *v128 = v139;
    }
  }
  else if (v130)
  {
    v134 = a2[69];
    *(_QWORD *)(a1 + 544) = v130;
    *(_QWORD *)(a1 + 552) = v134;
    *(_QWORD *)(a1 + 560) = a2[70];
    *(_QWORD *)(a1 + 568) = a2[71];
    v135 = a2[73];
    *(_QWORD *)(a1 + 576) = a2[72];
    *(_QWORD *)(a1 + 584) = v135;
    v136 = a2[74];
    *(_BYTE *)(a1 + 600) = *((_BYTE *)a2 + 600);
    *(_QWORD *)(a1 + 592) = v136;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v140 = *v129;
    v141 = *((_OWORD *)a2 + 35);
    v142 = *((_OWORD *)a2 + 36);
    *(_OWORD *)(a1 + 585) = *(_OWORD *)((char *)a2 + 585);
    *(_OWORD *)(a1 + 560) = v141;
    *(_OWORD *)(a1 + 576) = v142;
    *v128 = v140;
  }
  v143 = (_OWORD *)(a1 + 608);
  v144 = (__int128 *)(a2 + 76);
  v145 = a2[76];
  if (*(_QWORD *)(a1 + 608))
  {
    if (v145)
    {
      v146 = a2[77];
      *(_QWORD *)(a1 + 608) = v145;
      *(_QWORD *)(a1 + 616) = v146;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 624) = a2[78];
      *(_QWORD *)(a1 + 632) = a2[79];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v147 = a2[81];
      *(_QWORD *)(a1 + 640) = a2[80];
      *(_QWORD *)(a1 + 648) = v147;
      swift_retain();
      swift_release();
      v148 = a2[82];
      *(_BYTE *)(a1 + 664) = *((_BYTE *)a2 + 664);
      *(_QWORD *)(a1 + 656) = v148;
    }
    else
    {
      sub_1AD3C2B88(a1 + 608);
      v153 = *((_OWORD *)a2 + 39);
      v152 = *((_OWORD *)a2 + 40);
      v154 = *v144;
      *(_OWORD *)(a1 + 649) = *(_OWORD *)((char *)a2 + 649);
      *(_OWORD *)(a1 + 624) = v153;
      *(_OWORD *)(a1 + 640) = v152;
      *v143 = v154;
    }
  }
  else if (v145)
  {
    v149 = a2[77];
    *(_QWORD *)(a1 + 608) = v145;
    *(_QWORD *)(a1 + 616) = v149;
    *(_QWORD *)(a1 + 624) = a2[78];
    *(_QWORD *)(a1 + 632) = a2[79];
    v150 = a2[81];
    *(_QWORD *)(a1 + 640) = a2[80];
    *(_QWORD *)(a1 + 648) = v150;
    v151 = a2[82];
    *(_BYTE *)(a1 + 664) = *((_BYTE *)a2 + 664);
    *(_QWORD *)(a1 + 656) = v151;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v155 = *v144;
    v156 = *((_OWORD *)a2 + 39);
    v157 = *((_OWORD *)a2 + 40);
    *(_OWORD *)(a1 + 649) = *(_OWORD *)((char *)a2 + 649);
    *(_OWORD *)(a1 + 624) = v156;
    *(_OWORD *)(a1 + 640) = v157;
    *v143 = v155;
  }
  v158 = (_OWORD *)(a1 + 672);
  v159 = a2 + 84;
  v160 = a2[84];
  if (*(_QWORD *)(a1 + 672))
  {
    if (v160)
    {
      v161 = a2[85];
      *(_QWORD *)(a1 + 672) = v160;
      *(_QWORD *)(a1 + 680) = v161;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 688) = a2[86];
      *(_QWORD *)(a1 + 696) = a2[87];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 672);
      v163 = *((_OWORD *)a2 + 43);
      *v158 = *v159;
      *(_OWORD *)(a1 + 688) = v163;
    }
  }
  else if (v160)
  {
    v162 = a2[85];
    *(_QWORD *)(a1 + 672) = v160;
    *(_QWORD *)(a1 + 680) = v162;
    *(_QWORD *)(a1 + 688) = a2[86];
    *(_QWORD *)(a1 + 696) = a2[87];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v164 = *((_OWORD *)a2 + 43);
    *v158 = *v159;
    *(_OWORD *)(a1 + 688) = v164;
  }
  v165 = (_OWORD *)(a1 + 704);
  v166 = (__int128 *)(a2 + 88);
  v167 = a2[88];
  if (*(_QWORD *)(a1 + 704))
  {
    if (v167)
    {
      v168 = a2[89];
      *(_QWORD *)(a1 + 704) = v167;
      *(_QWORD *)(a1 + 712) = v168;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 720) = a2[90];
      *(_QWORD *)(a1 + 728) = a2[91];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v169 = a2[93];
      *(_QWORD *)(a1 + 736) = a2[92];
      *(_QWORD *)(a1 + 744) = v169;
      swift_retain();
      swift_release();
      v170 = a2[94];
      *(_BYTE *)(a1 + 760) = *((_BYTE *)a2 + 760);
      *(_QWORD *)(a1 + 752) = v170;
    }
    else
    {
      sub_1AD3C2B88(a1 + 704);
      v175 = *((_OWORD *)a2 + 45);
      v174 = *((_OWORD *)a2 + 46);
      v176 = *v166;
      *(_OWORD *)(a1 + 745) = *(_OWORD *)((char *)a2 + 745);
      *(_OWORD *)(a1 + 720) = v175;
      *(_OWORD *)(a1 + 736) = v174;
      *v165 = v176;
    }
  }
  else if (v167)
  {
    v171 = a2[89];
    *(_QWORD *)(a1 + 704) = v167;
    *(_QWORD *)(a1 + 712) = v171;
    *(_QWORD *)(a1 + 720) = a2[90];
    *(_QWORD *)(a1 + 728) = a2[91];
    v172 = a2[93];
    *(_QWORD *)(a1 + 736) = a2[92];
    *(_QWORD *)(a1 + 744) = v172;
    v173 = a2[94];
    *(_BYTE *)(a1 + 760) = *((_BYTE *)a2 + 760);
    *(_QWORD *)(a1 + 752) = v173;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v177 = *v166;
    v178 = *((_OWORD *)a2 + 45);
    v179 = *((_OWORD *)a2 + 46);
    *(_OWORD *)(a1 + 745) = *(_OWORD *)((char *)a2 + 745);
    *(_OWORD *)(a1 + 720) = v178;
    *(_OWORD *)(a1 + 736) = v179;
    *v165 = v177;
  }
  v180 = (_OWORD *)(a1 + 768);
  v181 = (__int128 *)(a2 + 96);
  v182 = a2[96];
  if (*(_QWORD *)(a1 + 768))
  {
    if (v182)
    {
      v183 = a2[97];
      *(_QWORD *)(a1 + 768) = v182;
      *(_QWORD *)(a1 + 776) = v183;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 784) = a2[98];
      *(_QWORD *)(a1 + 792) = a2[99];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v184 = a2[101];
      *(_QWORD *)(a1 + 800) = a2[100];
      *(_QWORD *)(a1 + 808) = v184;
      swift_retain();
      swift_release();
      v185 = a2[102];
      *(_BYTE *)(a1 + 824) = *((_BYTE *)a2 + 824);
      *(_QWORD *)(a1 + 816) = v185;
    }
    else
    {
      sub_1AD3C2B88(a1 + 768);
      v190 = *((_OWORD *)a2 + 49);
      v189 = *((_OWORD *)a2 + 50);
      v191 = *v181;
      *(_OWORD *)(a1 + 809) = *(_OWORD *)((char *)a2 + 809);
      *(_OWORD *)(a1 + 784) = v190;
      *(_OWORD *)(a1 + 800) = v189;
      *v180 = v191;
    }
  }
  else if (v182)
  {
    v186 = a2[97];
    *(_QWORD *)(a1 + 768) = v182;
    *(_QWORD *)(a1 + 776) = v186;
    *(_QWORD *)(a1 + 784) = a2[98];
    *(_QWORD *)(a1 + 792) = a2[99];
    v187 = a2[101];
    *(_QWORD *)(a1 + 800) = a2[100];
    *(_QWORD *)(a1 + 808) = v187;
    v188 = a2[102];
    *(_BYTE *)(a1 + 824) = *((_BYTE *)a2 + 824);
    *(_QWORD *)(a1 + 816) = v188;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v192 = *v181;
    v193 = *((_OWORD *)a2 + 49);
    v194 = *((_OWORD *)a2 + 50);
    *(_OWORD *)(a1 + 809) = *(_OWORD *)((char *)a2 + 809);
    *(_OWORD *)(a1 + 784) = v193;
    *(_OWORD *)(a1 + 800) = v194;
    *v180 = v192;
  }
  v195 = (_OWORD *)(a1 + 832);
  v196 = (__int128 *)(a2 + 104);
  v197 = a2[104];
  if (*(_QWORD *)(a1 + 832))
  {
    if (v197)
    {
      v198 = a2[105];
      *(_QWORD *)(a1 + 832) = v197;
      *(_QWORD *)(a1 + 840) = v198;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 848) = a2[106];
      *(_QWORD *)(a1 + 856) = a2[107];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v199 = a2[109];
      *(_QWORD *)(a1 + 864) = a2[108];
      *(_QWORD *)(a1 + 872) = v199;
      swift_retain();
      swift_release();
      v200 = a2[110];
      *(_BYTE *)(a1 + 888) = *((_BYTE *)a2 + 888);
      *(_QWORD *)(a1 + 880) = v200;
    }
    else
    {
      sub_1AD3C2B88(a1 + 832);
      v205 = *((_OWORD *)a2 + 53);
      v204 = *((_OWORD *)a2 + 54);
      v206 = *v196;
      *(_OWORD *)(a1 + 873) = *(_OWORD *)((char *)a2 + 873);
      *(_OWORD *)(a1 + 848) = v205;
      *(_OWORD *)(a1 + 864) = v204;
      *v195 = v206;
    }
  }
  else if (v197)
  {
    v201 = a2[105];
    *(_QWORD *)(a1 + 832) = v197;
    *(_QWORD *)(a1 + 840) = v201;
    *(_QWORD *)(a1 + 848) = a2[106];
    *(_QWORD *)(a1 + 856) = a2[107];
    v202 = a2[109];
    *(_QWORD *)(a1 + 864) = a2[108];
    *(_QWORD *)(a1 + 872) = v202;
    v203 = a2[110];
    *(_BYTE *)(a1 + 888) = *((_BYTE *)a2 + 888);
    *(_QWORD *)(a1 + 880) = v203;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v207 = *v196;
    v208 = *((_OWORD *)a2 + 53);
    v209 = *((_OWORD *)a2 + 54);
    *(_OWORD *)(a1 + 873) = *(_OWORD *)((char *)a2 + 873);
    *(_OWORD *)(a1 + 848) = v208;
    *(_OWORD *)(a1 + 864) = v209;
    *v195 = v207;
  }
  v210 = (_OWORD *)(a1 + 896);
  v211 = a2 + 112;
  v212 = a2[112];
  if (*(_QWORD *)(a1 + 896))
  {
    if (v212)
    {
      v213 = a2[113];
      *(_QWORD *)(a1 + 896) = v212;
      *(_QWORD *)(a1 + 904) = v213;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 912) = a2[114];
      *(_QWORD *)(a1 + 920) = a2[115];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 896);
      v215 = *((_OWORD *)a2 + 57);
      *v210 = *v211;
      *(_OWORD *)(a1 + 912) = v215;
    }
  }
  else if (v212)
  {
    v214 = a2[113];
    *(_QWORD *)(a1 + 896) = v212;
    *(_QWORD *)(a1 + 904) = v214;
    *(_QWORD *)(a1 + 912) = a2[114];
    *(_QWORD *)(a1 + 920) = a2[115];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v216 = *((_OWORD *)a2 + 57);
    *v210 = *v211;
    *(_OWORD *)(a1 + 912) = v216;
  }
  v217 = (_OWORD *)(a1 + 928);
  v218 = (__int128 *)(a2 + 116);
  v219 = a2[116];
  if (*(_QWORD *)(a1 + 928))
  {
    if (v219)
    {
      v220 = a2[117];
      *(_QWORD *)(a1 + 928) = v219;
      *(_QWORD *)(a1 + 936) = v220;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 944) = a2[118];
      *(_QWORD *)(a1 + 952) = a2[119];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v221 = a2[121];
      *(_QWORD *)(a1 + 960) = a2[120];
      *(_QWORD *)(a1 + 968) = v221;
      swift_retain();
      swift_release();
      v222 = a2[122];
      *(_BYTE *)(a1 + 984) = *((_BYTE *)a2 + 984);
      *(_QWORD *)(a1 + 976) = v222;
    }
    else
    {
      sub_1AD3C2B88(a1 + 928);
      v227 = *((_OWORD *)a2 + 59);
      v226 = *((_OWORD *)a2 + 60);
      v228 = *v218;
      *(_OWORD *)(a1 + 969) = *(_OWORD *)((char *)a2 + 969);
      *(_OWORD *)(a1 + 944) = v227;
      *(_OWORD *)(a1 + 960) = v226;
      *v217 = v228;
    }
  }
  else if (v219)
  {
    v223 = a2[117];
    *(_QWORD *)(a1 + 928) = v219;
    *(_QWORD *)(a1 + 936) = v223;
    *(_QWORD *)(a1 + 944) = a2[118];
    *(_QWORD *)(a1 + 952) = a2[119];
    v224 = a2[121];
    *(_QWORD *)(a1 + 960) = a2[120];
    *(_QWORD *)(a1 + 968) = v224;
    v225 = a2[122];
    *(_BYTE *)(a1 + 984) = *((_BYTE *)a2 + 984);
    *(_QWORD *)(a1 + 976) = v225;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v229 = *v218;
    v230 = *((_OWORD *)a2 + 59);
    v231 = *((_OWORD *)a2 + 60);
    *(_OWORD *)(a1 + 969) = *(_OWORD *)((char *)a2 + 969);
    *(_OWORD *)(a1 + 944) = v230;
    *(_OWORD *)(a1 + 960) = v231;
    *v217 = v229;
  }
  v232 = (_OWORD *)(a1 + 992);
  v233 = (__int128 *)(a2 + 124);
  v234 = a2[124];
  if (*(_QWORD *)(a1 + 992))
  {
    if (v234)
    {
      v235 = a2[125];
      *(_QWORD *)(a1 + 992) = v234;
      *(_QWORD *)(a1 + 1000) = v235;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1008) = a2[126];
      *(_QWORD *)(a1 + 1016) = a2[127];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v236 = a2[129];
      *(_QWORD *)(a1 + 1024) = a2[128];
      *(_QWORD *)(a1 + 1032) = v236;
      swift_retain();
      swift_release();
      v237 = a2[130];
      *(_BYTE *)(a1 + 1048) = *((_BYTE *)a2 + 1048);
      *(_QWORD *)(a1 + 1040) = v237;
    }
    else
    {
      sub_1AD3C2B88(a1 + 992);
      v242 = *((_OWORD *)a2 + 63);
      v241 = *((_OWORD *)a2 + 64);
      v243 = *v233;
      *(_OWORD *)(a1 + 1033) = *(_OWORD *)((char *)a2 + 1033);
      *(_OWORD *)(a1 + 1008) = v242;
      *(_OWORD *)(a1 + 1024) = v241;
      *v232 = v243;
    }
  }
  else if (v234)
  {
    v238 = a2[125];
    *(_QWORD *)(a1 + 992) = v234;
    *(_QWORD *)(a1 + 1000) = v238;
    *(_QWORD *)(a1 + 1008) = a2[126];
    *(_QWORD *)(a1 + 1016) = a2[127];
    v239 = a2[129];
    *(_QWORD *)(a1 + 1024) = a2[128];
    *(_QWORD *)(a1 + 1032) = v239;
    v240 = a2[130];
    *(_BYTE *)(a1 + 1048) = *((_BYTE *)a2 + 1048);
    *(_QWORD *)(a1 + 1040) = v240;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v244 = *v233;
    v245 = *((_OWORD *)a2 + 63);
    v246 = *((_OWORD *)a2 + 64);
    *(_OWORD *)(a1 + 1033) = *(_OWORD *)((char *)a2 + 1033);
    *(_OWORD *)(a1 + 1008) = v245;
    *(_OWORD *)(a1 + 1024) = v246;
    *v232 = v244;
  }
  v247 = (_OWORD *)(a1 + 1056);
  v248 = (__int128 *)(a2 + 132);
  v249 = a2[132];
  if (*(_QWORD *)(a1 + 1056))
  {
    if (v249)
    {
      v250 = a2[133];
      *(_QWORD *)(a1 + 1056) = v249;
      *(_QWORD *)(a1 + 1064) = v250;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1072) = a2[134];
      *(_QWORD *)(a1 + 1080) = a2[135];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v251 = a2[137];
      *(_QWORD *)(a1 + 1088) = a2[136];
      *(_QWORD *)(a1 + 1096) = v251;
      swift_retain();
      swift_release();
      v252 = a2[138];
      *(_BYTE *)(a1 + 1112) = *((_BYTE *)a2 + 1112);
      *(_QWORD *)(a1 + 1104) = v252;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1056);
      v257 = *((_OWORD *)a2 + 67);
      v256 = *((_OWORD *)a2 + 68);
      v258 = *v248;
      *(_OWORD *)(a1 + 1097) = *(_OWORD *)((char *)a2 + 1097);
      *(_OWORD *)(a1 + 1072) = v257;
      *(_OWORD *)(a1 + 1088) = v256;
      *v247 = v258;
    }
  }
  else if (v249)
  {
    v253 = a2[133];
    *(_QWORD *)(a1 + 1056) = v249;
    *(_QWORD *)(a1 + 1064) = v253;
    *(_QWORD *)(a1 + 1072) = a2[134];
    *(_QWORD *)(a1 + 1080) = a2[135];
    v254 = a2[137];
    *(_QWORD *)(a1 + 1088) = a2[136];
    *(_QWORD *)(a1 + 1096) = v254;
    v255 = a2[138];
    *(_BYTE *)(a1 + 1112) = *((_BYTE *)a2 + 1112);
    *(_QWORD *)(a1 + 1104) = v255;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v259 = *v248;
    v260 = *((_OWORD *)a2 + 67);
    v261 = *((_OWORD *)a2 + 68);
    *(_OWORD *)(a1 + 1097) = *(_OWORD *)((char *)a2 + 1097);
    *(_OWORD *)(a1 + 1072) = v260;
    *(_OWORD *)(a1 + 1088) = v261;
    *v247 = v259;
  }
  v262 = (_OWORD *)(a1 + 1120);
  v263 = a2 + 140;
  v264 = a2[140];
  if (*(_QWORD *)(a1 + 1120))
  {
    if (v264)
    {
      v265 = a2[141];
      *(_QWORD *)(a1 + 1120) = v264;
      *(_QWORD *)(a1 + 1128) = v265;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1136) = a2[142];
      *(_QWORD *)(a1 + 1144) = a2[143];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 1120);
      v267 = *((_OWORD *)a2 + 71);
      *v262 = *v263;
      *(_OWORD *)(a1 + 1136) = v267;
    }
  }
  else if (v264)
  {
    v266 = a2[141];
    *(_QWORD *)(a1 + 1120) = v264;
    *(_QWORD *)(a1 + 1128) = v266;
    *(_QWORD *)(a1 + 1136) = a2[142];
    *(_QWORD *)(a1 + 1144) = a2[143];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v268 = *((_OWORD *)a2 + 71);
    *v262 = *v263;
    *(_OWORD *)(a1 + 1136) = v268;
  }
  v269 = (_OWORD *)(a1 + 1152);
  v270 = (__int128 *)(a2 + 144);
  v271 = a2[144];
  if (*(_QWORD *)(a1 + 1152))
  {
    if (v271)
    {
      v272 = a2[145];
      *(_QWORD *)(a1 + 1152) = v271;
      *(_QWORD *)(a1 + 1160) = v272;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1168) = a2[146];
      *(_QWORD *)(a1 + 1176) = a2[147];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v273 = a2[149];
      *(_QWORD *)(a1 + 1184) = a2[148];
      *(_QWORD *)(a1 + 1192) = v273;
      swift_retain();
      swift_release();
      v274 = a2[150];
      *(_BYTE *)(a1 + 1208) = *((_BYTE *)a2 + 1208);
      *(_QWORD *)(a1 + 1200) = v274;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1152);
      v279 = *((_OWORD *)a2 + 73);
      v278 = *((_OWORD *)a2 + 74);
      v280 = *v270;
      *(_OWORD *)(a1 + 1193) = *(_OWORD *)((char *)a2 + 1193);
      *(_OWORD *)(a1 + 1168) = v279;
      *(_OWORD *)(a1 + 1184) = v278;
      *v269 = v280;
    }
  }
  else if (v271)
  {
    v275 = a2[145];
    *(_QWORD *)(a1 + 1152) = v271;
    *(_QWORD *)(a1 + 1160) = v275;
    *(_QWORD *)(a1 + 1168) = a2[146];
    *(_QWORD *)(a1 + 1176) = a2[147];
    v276 = a2[149];
    *(_QWORD *)(a1 + 1184) = a2[148];
    *(_QWORD *)(a1 + 1192) = v276;
    v277 = a2[150];
    *(_BYTE *)(a1 + 1208) = *((_BYTE *)a2 + 1208);
    *(_QWORD *)(a1 + 1200) = v277;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v281 = *v270;
    v282 = *((_OWORD *)a2 + 73);
    v283 = *((_OWORD *)a2 + 74);
    *(_OWORD *)(a1 + 1193) = *(_OWORD *)((char *)a2 + 1193);
    *(_OWORD *)(a1 + 1168) = v282;
    *(_OWORD *)(a1 + 1184) = v283;
    *v269 = v281;
  }
  v284 = (_OWORD *)(a1 + 1216);
  v285 = (__int128 *)(a2 + 152);
  v286 = a2[152];
  if (*(_QWORD *)(a1 + 1216))
  {
    if (v286)
    {
      v287 = a2[153];
      *(_QWORD *)(a1 + 1216) = v286;
      *(_QWORD *)(a1 + 1224) = v287;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1232) = a2[154];
      *(_QWORD *)(a1 + 1240) = a2[155];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v288 = a2[157];
      *(_QWORD *)(a1 + 1248) = a2[156];
      *(_QWORD *)(a1 + 1256) = v288;
      swift_retain();
      swift_release();
      v289 = a2[158];
      *(_BYTE *)(a1 + 1272) = *((_BYTE *)a2 + 1272);
      *(_QWORD *)(a1 + 1264) = v289;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1216);
      v294 = *((_OWORD *)a2 + 77);
      v293 = *((_OWORD *)a2 + 78);
      v295 = *v285;
      *(_OWORD *)(a1 + 1257) = *(_OWORD *)((char *)a2 + 1257);
      *(_OWORD *)(a1 + 1232) = v294;
      *(_OWORD *)(a1 + 1248) = v293;
      *v284 = v295;
    }
  }
  else if (v286)
  {
    v290 = a2[153];
    *(_QWORD *)(a1 + 1216) = v286;
    *(_QWORD *)(a1 + 1224) = v290;
    *(_QWORD *)(a1 + 1232) = a2[154];
    *(_QWORD *)(a1 + 1240) = a2[155];
    v291 = a2[157];
    *(_QWORD *)(a1 + 1248) = a2[156];
    *(_QWORD *)(a1 + 1256) = v291;
    v292 = a2[158];
    *(_BYTE *)(a1 + 1272) = *((_BYTE *)a2 + 1272);
    *(_QWORD *)(a1 + 1264) = v292;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v296 = *v285;
    v297 = *((_OWORD *)a2 + 77);
    v298 = *((_OWORD *)a2 + 78);
    *(_OWORD *)(a1 + 1257) = *(_OWORD *)((char *)a2 + 1257);
    *(_OWORD *)(a1 + 1232) = v297;
    *(_OWORD *)(a1 + 1248) = v298;
    *v284 = v296;
  }
  v299 = (_OWORD *)(a1 + 1280);
  v300 = (__int128 *)(a2 + 160);
  v301 = a2[160];
  if (*(_QWORD *)(a1 + 1280))
  {
    if (v301)
    {
      v302 = a2[161];
      *(_QWORD *)(a1 + 1280) = v301;
      *(_QWORD *)(a1 + 1288) = v302;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1296) = a2[162];
      *(_QWORD *)(a1 + 1304) = a2[163];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v303 = a2[165];
      *(_QWORD *)(a1 + 1312) = a2[164];
      *(_QWORD *)(a1 + 1320) = v303;
      swift_retain();
      swift_release();
      v304 = a2[166];
      *(_BYTE *)(a1 + 1336) = *((_BYTE *)a2 + 1336);
      *(_QWORD *)(a1 + 1328) = v304;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1280);
      v309 = *((_OWORD *)a2 + 81);
      v308 = *((_OWORD *)a2 + 82);
      v310 = *v300;
      *(_OWORD *)(a1 + 1321) = *(_OWORD *)((char *)a2 + 1321);
      *(_OWORD *)(a1 + 1296) = v309;
      *(_OWORD *)(a1 + 1312) = v308;
      *v299 = v310;
    }
  }
  else if (v301)
  {
    v305 = a2[161];
    *(_QWORD *)(a1 + 1280) = v301;
    *(_QWORD *)(a1 + 1288) = v305;
    *(_QWORD *)(a1 + 1296) = a2[162];
    *(_QWORD *)(a1 + 1304) = a2[163];
    v306 = a2[165];
    *(_QWORD *)(a1 + 1312) = a2[164];
    *(_QWORD *)(a1 + 1320) = v306;
    v307 = a2[166];
    *(_BYTE *)(a1 + 1336) = *((_BYTE *)a2 + 1336);
    *(_QWORD *)(a1 + 1328) = v307;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v311 = *v300;
    v312 = *((_OWORD *)a2 + 81);
    v313 = *((_OWORD *)a2 + 82);
    *(_OWORD *)(a1 + 1321) = *(_OWORD *)((char *)a2 + 1321);
    *(_OWORD *)(a1 + 1296) = v312;
    *(_OWORD *)(a1 + 1312) = v313;
    *v299 = v311;
  }
  v314 = (_OWORD *)(a1 + 1344);
  v315 = a2 + 168;
  v316 = a2[168];
  if (*(_QWORD *)(a1 + 1344))
  {
    if (v316)
    {
      v317 = a2[169];
      *(_QWORD *)(a1 + 1344) = v316;
      *(_QWORD *)(a1 + 1352) = v317;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1360) = a2[170];
      *(_QWORD *)(a1 + 1368) = a2[171];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 1344);
      v319 = *((_OWORD *)a2 + 85);
      *v314 = *v315;
      *(_OWORD *)(a1 + 1360) = v319;
    }
  }
  else if (v316)
  {
    v318 = a2[169];
    *(_QWORD *)(a1 + 1344) = v316;
    *(_QWORD *)(a1 + 1352) = v318;
    *(_QWORD *)(a1 + 1360) = a2[170];
    *(_QWORD *)(a1 + 1368) = a2[171];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v320 = *((_OWORD *)a2 + 85);
    *v314 = *v315;
    *(_OWORD *)(a1 + 1360) = v320;
  }
  v321 = (_OWORD *)(a1 + 1376);
  v322 = (__int128 *)(a2 + 172);
  v323 = a2[172];
  if (*(_QWORD *)(a1 + 1376))
  {
    if (v323)
    {
      v324 = a2[173];
      *(_QWORD *)(a1 + 1376) = v323;
      *(_QWORD *)(a1 + 1384) = v324;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1392) = a2[174];
      *(_QWORD *)(a1 + 1400) = a2[175];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v325 = a2[177];
      *(_QWORD *)(a1 + 1408) = a2[176];
      *(_QWORD *)(a1 + 1416) = v325;
      swift_retain();
      swift_release();
      v326 = a2[178];
      *(_BYTE *)(a1 + 1432) = *((_BYTE *)a2 + 1432);
      *(_QWORD *)(a1 + 1424) = v326;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1376);
      v331 = *((_OWORD *)a2 + 87);
      v330 = *((_OWORD *)a2 + 88);
      v332 = *v322;
      *(_OWORD *)(a1 + 1417) = *(_OWORD *)((char *)a2 + 1417);
      *(_OWORD *)(a1 + 1392) = v331;
      *(_OWORD *)(a1 + 1408) = v330;
      *v321 = v332;
    }
  }
  else if (v323)
  {
    v327 = a2[173];
    *(_QWORD *)(a1 + 1376) = v323;
    *(_QWORD *)(a1 + 1384) = v327;
    *(_QWORD *)(a1 + 1392) = a2[174];
    *(_QWORD *)(a1 + 1400) = a2[175];
    v328 = a2[177];
    *(_QWORD *)(a1 + 1408) = a2[176];
    *(_QWORD *)(a1 + 1416) = v328;
    v329 = a2[178];
    *(_BYTE *)(a1 + 1432) = *((_BYTE *)a2 + 1432);
    *(_QWORD *)(a1 + 1424) = v329;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v333 = *v322;
    v334 = *((_OWORD *)a2 + 87);
    v335 = *((_OWORD *)a2 + 88);
    *(_OWORD *)(a1 + 1417) = *(_OWORD *)((char *)a2 + 1417);
    *(_OWORD *)(a1 + 1392) = v334;
    *(_OWORD *)(a1 + 1408) = v335;
    *v321 = v333;
  }
  v336 = (_OWORD *)(a1 + 1440);
  v337 = (__int128 *)(a2 + 180);
  v338 = a2[180];
  if (*(_QWORD *)(a1 + 1440))
  {
    if (v338)
    {
      v339 = a2[181];
      *(_QWORD *)(a1 + 1440) = v338;
      *(_QWORD *)(a1 + 1448) = v339;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1456) = a2[182];
      *(_QWORD *)(a1 + 1464) = a2[183];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v340 = a2[185];
      *(_QWORD *)(a1 + 1472) = a2[184];
      *(_QWORD *)(a1 + 1480) = v340;
      swift_retain();
      swift_release();
      v341 = a2[186];
      *(_BYTE *)(a1 + 1496) = *((_BYTE *)a2 + 1496);
      *(_QWORD *)(a1 + 1488) = v341;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1440);
      v346 = *((_OWORD *)a2 + 91);
      v345 = *((_OWORD *)a2 + 92);
      v347 = *v337;
      *(_OWORD *)(a1 + 1481) = *(_OWORD *)((char *)a2 + 1481);
      *(_OWORD *)(a1 + 1456) = v346;
      *(_OWORD *)(a1 + 1472) = v345;
      *v336 = v347;
    }
  }
  else if (v338)
  {
    v342 = a2[181];
    *(_QWORD *)(a1 + 1440) = v338;
    *(_QWORD *)(a1 + 1448) = v342;
    *(_QWORD *)(a1 + 1456) = a2[182];
    *(_QWORD *)(a1 + 1464) = a2[183];
    v343 = a2[185];
    *(_QWORD *)(a1 + 1472) = a2[184];
    *(_QWORD *)(a1 + 1480) = v343;
    v344 = a2[186];
    *(_BYTE *)(a1 + 1496) = *((_BYTE *)a2 + 1496);
    *(_QWORD *)(a1 + 1488) = v344;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v348 = *v337;
    v349 = *((_OWORD *)a2 + 91);
    v350 = *((_OWORD *)a2 + 92);
    *(_OWORD *)(a1 + 1481) = *(_OWORD *)((char *)a2 + 1481);
    *(_OWORD *)(a1 + 1456) = v349;
    *(_OWORD *)(a1 + 1472) = v350;
    *v336 = v348;
  }
  v351 = (_OWORD *)(a1 + 1504);
  v352 = (__int128 *)(a2 + 188);
  v353 = a2[188];
  if (*(_QWORD *)(a1 + 1504))
  {
    if (v353)
    {
      v354 = a2[189];
      *(_QWORD *)(a1 + 1504) = v353;
      *(_QWORD *)(a1 + 1512) = v354;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1520) = a2[190];
      *(_QWORD *)(a1 + 1528) = a2[191];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v355 = a2[193];
      *(_QWORD *)(a1 + 1536) = a2[192];
      *(_QWORD *)(a1 + 1544) = v355;
      swift_retain();
      swift_release();
      v356 = a2[194];
      *(_BYTE *)(a1 + 1560) = *((_BYTE *)a2 + 1560);
      *(_QWORD *)(a1 + 1552) = v356;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1504);
      v361 = *((_OWORD *)a2 + 95);
      v360 = *((_OWORD *)a2 + 96);
      v362 = *v352;
      *(_OWORD *)(a1 + 1545) = *(_OWORD *)((char *)a2 + 1545);
      *(_OWORD *)(a1 + 1520) = v361;
      *(_OWORD *)(a1 + 1536) = v360;
      *v351 = v362;
    }
  }
  else if (v353)
  {
    v357 = a2[189];
    *(_QWORD *)(a1 + 1504) = v353;
    *(_QWORD *)(a1 + 1512) = v357;
    *(_QWORD *)(a1 + 1520) = a2[190];
    *(_QWORD *)(a1 + 1528) = a2[191];
    v358 = a2[193];
    *(_QWORD *)(a1 + 1536) = a2[192];
    *(_QWORD *)(a1 + 1544) = v358;
    v359 = a2[194];
    *(_BYTE *)(a1 + 1560) = *((_BYTE *)a2 + 1560);
    *(_QWORD *)(a1 + 1552) = v359;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v363 = *v352;
    v364 = *((_OWORD *)a2 + 95);
    v365 = *((_OWORD *)a2 + 96);
    *(_OWORD *)(a1 + 1545) = *(_OWORD *)((char *)a2 + 1545);
    *(_OWORD *)(a1 + 1520) = v364;
    *(_OWORD *)(a1 + 1536) = v365;
    *v351 = v363;
  }
  v366 = (_OWORD *)(a1 + 1568);
  v367 = a2 + 196;
  v368 = a2[196];
  if (*(_QWORD *)(a1 + 1568))
  {
    if (v368)
    {
      v369 = a2[197];
      *(_QWORD *)(a1 + 1568) = v368;
      *(_QWORD *)(a1 + 1576) = v369;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1584) = a2[198];
      *(_QWORD *)(a1 + 1592) = a2[199];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 1568);
      v371 = *((_OWORD *)a2 + 99);
      *v366 = *v367;
      *(_OWORD *)(a1 + 1584) = v371;
    }
  }
  else if (v368)
  {
    v370 = a2[197];
    *(_QWORD *)(a1 + 1568) = v368;
    *(_QWORD *)(a1 + 1576) = v370;
    *(_QWORD *)(a1 + 1584) = a2[198];
    *(_QWORD *)(a1 + 1592) = a2[199];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v372 = *((_OWORD *)a2 + 99);
    *v366 = *v367;
    *(_OWORD *)(a1 + 1584) = v372;
  }
  v373 = (_OWORD *)(a1 + 1600);
  v374 = (__int128 *)(a2 + 200);
  v375 = a2[200];
  if (*(_QWORD *)(a1 + 1600))
  {
    if (v375)
    {
      v376 = a2[201];
      *(_QWORD *)(a1 + 1600) = v375;
      *(_QWORD *)(a1 + 1608) = v376;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1616) = a2[202];
      *(_QWORD *)(a1 + 1624) = a2[203];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v377 = a2[205];
      *(_QWORD *)(a1 + 1632) = a2[204];
      *(_QWORD *)(a1 + 1640) = v377;
      swift_retain();
      swift_release();
      v378 = a2[206];
      *(_BYTE *)(a1 + 1656) = *((_BYTE *)a2 + 1656);
      *(_QWORD *)(a1 + 1648) = v378;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1600);
      v383 = *((_OWORD *)a2 + 101);
      v382 = *((_OWORD *)a2 + 102);
      v384 = *v374;
      *(_OWORD *)(a1 + 1641) = *(_OWORD *)((char *)a2 + 1641);
      *(_OWORD *)(a1 + 1616) = v383;
      *(_OWORD *)(a1 + 1632) = v382;
      *v373 = v384;
    }
  }
  else if (v375)
  {
    v379 = a2[201];
    *(_QWORD *)(a1 + 1600) = v375;
    *(_QWORD *)(a1 + 1608) = v379;
    *(_QWORD *)(a1 + 1616) = a2[202];
    *(_QWORD *)(a1 + 1624) = a2[203];
    v380 = a2[205];
    *(_QWORD *)(a1 + 1632) = a2[204];
    *(_QWORD *)(a1 + 1640) = v380;
    v381 = a2[206];
    *(_BYTE *)(a1 + 1656) = *((_BYTE *)a2 + 1656);
    *(_QWORD *)(a1 + 1648) = v381;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v385 = *v374;
    v386 = *((_OWORD *)a2 + 101);
    v387 = *((_OWORD *)a2 + 102);
    *(_OWORD *)(a1 + 1641) = *(_OWORD *)((char *)a2 + 1641);
    *(_OWORD *)(a1 + 1616) = v386;
    *(_OWORD *)(a1 + 1632) = v387;
    *v373 = v385;
  }
  v388 = (_OWORD *)(a1 + 1664);
  v389 = (__int128 *)(a2 + 208);
  v390 = a2[208];
  if (*(_QWORD *)(a1 + 1664))
  {
    if (v390)
    {
      v391 = a2[209];
      *(_QWORD *)(a1 + 1664) = v390;
      *(_QWORD *)(a1 + 1672) = v391;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1680) = a2[210];
      *(_QWORD *)(a1 + 1688) = a2[211];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v392 = a2[213];
      *(_QWORD *)(a1 + 1696) = a2[212];
      *(_QWORD *)(a1 + 1704) = v392;
      swift_retain();
      swift_release();
      v393 = a2[214];
      *(_BYTE *)(a1 + 1720) = *((_BYTE *)a2 + 1720);
      *(_QWORD *)(a1 + 1712) = v393;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1664);
      v398 = *((_OWORD *)a2 + 105);
      v397 = *((_OWORD *)a2 + 106);
      v399 = *v389;
      *(_OWORD *)(a1 + 1705) = *(_OWORD *)((char *)a2 + 1705);
      *(_OWORD *)(a1 + 1680) = v398;
      *(_OWORD *)(a1 + 1696) = v397;
      *v388 = v399;
    }
  }
  else if (v390)
  {
    v394 = a2[209];
    *(_QWORD *)(a1 + 1664) = v390;
    *(_QWORD *)(a1 + 1672) = v394;
    *(_QWORD *)(a1 + 1680) = a2[210];
    *(_QWORD *)(a1 + 1688) = a2[211];
    v395 = a2[213];
    *(_QWORD *)(a1 + 1696) = a2[212];
    *(_QWORD *)(a1 + 1704) = v395;
    v396 = a2[214];
    *(_BYTE *)(a1 + 1720) = *((_BYTE *)a2 + 1720);
    *(_QWORD *)(a1 + 1712) = v396;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v400 = *v389;
    v401 = *((_OWORD *)a2 + 105);
    v402 = *((_OWORD *)a2 + 106);
    *(_OWORD *)(a1 + 1705) = *(_OWORD *)((char *)a2 + 1705);
    *(_OWORD *)(a1 + 1680) = v401;
    *(_OWORD *)(a1 + 1696) = v402;
    *v388 = v400;
  }
  v403 = (_OWORD *)(a1 + 1728);
  v404 = (__int128 *)(a2 + 216);
  v405 = a2[216];
  if (*(_QWORD *)(a1 + 1728))
  {
    if (v405)
    {
      v406 = a2[217];
      *(_QWORD *)(a1 + 1728) = v405;
      *(_QWORD *)(a1 + 1736) = v406;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1744) = a2[218];
      *(_QWORD *)(a1 + 1752) = a2[219];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v407 = a2[221];
      *(_QWORD *)(a1 + 1760) = a2[220];
      *(_QWORD *)(a1 + 1768) = v407;
      swift_retain();
      swift_release();
      v408 = a2[222];
      *(_BYTE *)(a1 + 1784) = *((_BYTE *)a2 + 1784);
      *(_QWORD *)(a1 + 1776) = v408;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1728);
      v413 = *((_OWORD *)a2 + 109);
      v412 = *((_OWORD *)a2 + 110);
      v414 = *v404;
      *(_OWORD *)(a1 + 1769) = *(_OWORD *)((char *)a2 + 1769);
      *(_OWORD *)(a1 + 1744) = v413;
      *(_OWORD *)(a1 + 1760) = v412;
      *v403 = v414;
    }
  }
  else if (v405)
  {
    v409 = a2[217];
    *(_QWORD *)(a1 + 1728) = v405;
    *(_QWORD *)(a1 + 1736) = v409;
    *(_QWORD *)(a1 + 1744) = a2[218];
    *(_QWORD *)(a1 + 1752) = a2[219];
    v410 = a2[221];
    *(_QWORD *)(a1 + 1760) = a2[220];
    *(_QWORD *)(a1 + 1768) = v410;
    v411 = a2[222];
    *(_BYTE *)(a1 + 1784) = *((_BYTE *)a2 + 1784);
    *(_QWORD *)(a1 + 1776) = v411;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v415 = *v404;
    v416 = *((_OWORD *)a2 + 109);
    v417 = *((_OWORD *)a2 + 110);
    *(_OWORD *)(a1 + 1769) = *(_OWORD *)((char *)a2 + 1769);
    *(_OWORD *)(a1 + 1744) = v416;
    *(_OWORD *)(a1 + 1760) = v417;
    *v403 = v415;
  }
  v418 = (_OWORD *)(a1 + 1792);
  v419 = a2 + 224;
  v420 = a2[224];
  if (*(_QWORD *)(a1 + 1792))
  {
    if (v420)
    {
      v421 = a2[225];
      *(_QWORD *)(a1 + 1792) = v420;
      *(_QWORD *)(a1 + 1800) = v421;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1808) = a2[226];
      *(_QWORD *)(a1 + 1816) = a2[227];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 1792);
      v423 = *((_OWORD *)a2 + 113);
      *v418 = *v419;
      *(_OWORD *)(a1 + 1808) = v423;
    }
  }
  else if (v420)
  {
    v422 = a2[225];
    *(_QWORD *)(a1 + 1792) = v420;
    *(_QWORD *)(a1 + 1800) = v422;
    *(_QWORD *)(a1 + 1808) = a2[226];
    *(_QWORD *)(a1 + 1816) = a2[227];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v424 = *((_OWORD *)a2 + 113);
    *v418 = *v419;
    *(_OWORD *)(a1 + 1808) = v424;
  }
  v425 = (_OWORD *)(a1 + 1824);
  v426 = (__int128 *)(a2 + 228);
  v427 = a2[228];
  if (*(_QWORD *)(a1 + 1824))
  {
    if (v427)
    {
      v428 = a2[229];
      *(_QWORD *)(a1 + 1824) = v427;
      *(_QWORD *)(a1 + 1832) = v428;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1840) = a2[230];
      *(_QWORD *)(a1 + 1848) = a2[231];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v429 = a2[233];
      *(_QWORD *)(a1 + 1856) = a2[232];
      *(_QWORD *)(a1 + 1864) = v429;
      swift_retain();
      swift_release();
      v430 = a2[234];
      *(_BYTE *)(a1 + 1880) = *((_BYTE *)a2 + 1880);
      *(_QWORD *)(a1 + 1872) = v430;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1824);
      v435 = *((_OWORD *)a2 + 115);
      v434 = *((_OWORD *)a2 + 116);
      v436 = *v426;
      *(_OWORD *)(a1 + 1865) = *(_OWORD *)((char *)a2 + 1865);
      *(_OWORD *)(a1 + 1840) = v435;
      *(_OWORD *)(a1 + 1856) = v434;
      *v425 = v436;
    }
  }
  else if (v427)
  {
    v431 = a2[229];
    *(_QWORD *)(a1 + 1824) = v427;
    *(_QWORD *)(a1 + 1832) = v431;
    *(_QWORD *)(a1 + 1840) = a2[230];
    *(_QWORD *)(a1 + 1848) = a2[231];
    v432 = a2[233];
    *(_QWORD *)(a1 + 1856) = a2[232];
    *(_QWORD *)(a1 + 1864) = v432;
    v433 = a2[234];
    *(_BYTE *)(a1 + 1880) = *((_BYTE *)a2 + 1880);
    *(_QWORD *)(a1 + 1872) = v433;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v437 = *v426;
    v438 = *((_OWORD *)a2 + 115);
    v439 = *((_OWORD *)a2 + 116);
    *(_OWORD *)(a1 + 1865) = *(_OWORD *)((char *)a2 + 1865);
    *(_OWORD *)(a1 + 1840) = v438;
    *(_OWORD *)(a1 + 1856) = v439;
    *v425 = v437;
  }
  v440 = (_OWORD *)(a1 + 1888);
  v441 = (__int128 *)(a2 + 236);
  v442 = a2[236];
  if (*(_QWORD *)(a1 + 1888))
  {
    if (v442)
    {
      v443 = a2[237];
      *(_QWORD *)(a1 + 1888) = v442;
      *(_QWORD *)(a1 + 1896) = v443;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1904) = a2[238];
      *(_QWORD *)(a1 + 1912) = a2[239];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v444 = a2[241];
      *(_QWORD *)(a1 + 1920) = a2[240];
      *(_QWORD *)(a1 + 1928) = v444;
      swift_retain();
      swift_release();
      v445 = a2[242];
      *(_BYTE *)(a1 + 1944) = *((_BYTE *)a2 + 1944);
      *(_QWORD *)(a1 + 1936) = v445;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1888);
      v450 = *((_OWORD *)a2 + 119);
      v449 = *((_OWORD *)a2 + 120);
      v451 = *v441;
      *(_OWORD *)(a1 + 1929) = *(_OWORD *)((char *)a2 + 1929);
      *(_OWORD *)(a1 + 1904) = v450;
      *(_OWORD *)(a1 + 1920) = v449;
      *v440 = v451;
    }
  }
  else if (v442)
  {
    v446 = a2[237];
    *(_QWORD *)(a1 + 1888) = v442;
    *(_QWORD *)(a1 + 1896) = v446;
    *(_QWORD *)(a1 + 1904) = a2[238];
    *(_QWORD *)(a1 + 1912) = a2[239];
    v447 = a2[241];
    *(_QWORD *)(a1 + 1920) = a2[240];
    *(_QWORD *)(a1 + 1928) = v447;
    v448 = a2[242];
    *(_BYTE *)(a1 + 1944) = *((_BYTE *)a2 + 1944);
    *(_QWORD *)(a1 + 1936) = v448;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v452 = *v441;
    v453 = *((_OWORD *)a2 + 119);
    v454 = *((_OWORD *)a2 + 120);
    *(_OWORD *)(a1 + 1929) = *(_OWORD *)((char *)a2 + 1929);
    *(_OWORD *)(a1 + 1904) = v453;
    *(_OWORD *)(a1 + 1920) = v454;
    *v440 = v452;
  }
  v455 = (_OWORD *)(a1 + 1952);
  v456 = (__int128 *)(a2 + 244);
  v457 = a2[244];
  if (*(_QWORD *)(a1 + 1952))
  {
    if (v457)
    {
      v458 = a2[245];
      *(_QWORD *)(a1 + 1952) = v457;
      *(_QWORD *)(a1 + 1960) = v458;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 1968) = a2[246];
      *(_QWORD *)(a1 + 1976) = a2[247];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v459 = a2[249];
      *(_QWORD *)(a1 + 1984) = a2[248];
      *(_QWORD *)(a1 + 1992) = v459;
      swift_retain();
      swift_release();
      v460 = a2[250];
      *(_BYTE *)(a1 + 2008) = *((_BYTE *)a2 + 2008);
      *(_QWORD *)(a1 + 2000) = v460;
    }
    else
    {
      sub_1AD3C2B88(a1 + 1952);
      v465 = *((_OWORD *)a2 + 123);
      v464 = *((_OWORD *)a2 + 124);
      v466 = *v456;
      *(_OWORD *)(a1 + 1993) = *(_OWORD *)((char *)a2 + 1993);
      *(_OWORD *)(a1 + 1968) = v465;
      *(_OWORD *)(a1 + 1984) = v464;
      *v455 = v466;
    }
  }
  else if (v457)
  {
    v461 = a2[245];
    *(_QWORD *)(a1 + 1952) = v457;
    *(_QWORD *)(a1 + 1960) = v461;
    *(_QWORD *)(a1 + 1968) = a2[246];
    *(_QWORD *)(a1 + 1976) = a2[247];
    v462 = a2[249];
    *(_QWORD *)(a1 + 1984) = a2[248];
    *(_QWORD *)(a1 + 1992) = v462;
    v463 = a2[250];
    *(_BYTE *)(a1 + 2008) = *((_BYTE *)a2 + 2008);
    *(_QWORD *)(a1 + 2000) = v463;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v467 = *v456;
    v468 = *((_OWORD *)a2 + 123);
    v469 = *((_OWORD *)a2 + 124);
    *(_OWORD *)(a1 + 1993) = *(_OWORD *)((char *)a2 + 1993);
    *(_OWORD *)(a1 + 1968) = v468;
    *(_OWORD *)(a1 + 1984) = v469;
    *v455 = v467;
  }
  v470 = (_OWORD *)(a1 + 2016);
  v471 = a2 + 252;
  v472 = a2[252];
  if (*(_QWORD *)(a1 + 2016))
  {
    if (v472)
    {
      v473 = a2[253];
      *(_QWORD *)(a1 + 2016) = v472;
      *(_QWORD *)(a1 + 2024) = v473;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2032) = a2[254];
      *(_QWORD *)(a1 + 2040) = a2[255];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 2016);
      v475 = *((_OWORD *)a2 + 127);
      *v470 = *v471;
      *(_OWORD *)(a1 + 2032) = v475;
    }
  }
  else if (v472)
  {
    v474 = a2[253];
    *(_QWORD *)(a1 + 2016) = v472;
    *(_QWORD *)(a1 + 2024) = v474;
    *(_QWORD *)(a1 + 2032) = a2[254];
    *(_QWORD *)(a1 + 2040) = a2[255];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v476 = *((_OWORD *)a2 + 127);
    *v470 = *v471;
    *(_OWORD *)(a1 + 2032) = v476;
  }
  v477 = (_OWORD *)(a1 + 2048);
  v478 = (__int128 *)(a2 + 256);
  v479 = a2[256];
  if (*(_QWORD *)(a1 + 2048))
  {
    if (v479)
    {
      v480 = a2[257];
      *(_QWORD *)(a1 + 2048) = v479;
      *(_QWORD *)(a1 + 2056) = v480;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2064) = a2[258];
      *(_QWORD *)(a1 + 2072) = a2[259];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v481 = a2[261];
      *(_QWORD *)(a1 + 2080) = a2[260];
      *(_QWORD *)(a1 + 2088) = v481;
      swift_retain();
      swift_release();
      v482 = a2[262];
      *(_BYTE *)(a1 + 2104) = *((_BYTE *)a2 + 2104);
      *(_QWORD *)(a1 + 2096) = v482;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2048);
      v487 = *((_OWORD *)a2 + 129);
      v486 = *((_OWORD *)a2 + 130);
      v488 = *v478;
      *(_OWORD *)(a1 + 2089) = *(_OWORD *)((char *)a2 + 2089);
      *(_OWORD *)(a1 + 2064) = v487;
      *(_OWORD *)(a1 + 2080) = v486;
      *v477 = v488;
    }
  }
  else if (v479)
  {
    v483 = a2[257];
    *(_QWORD *)(a1 + 2048) = v479;
    *(_QWORD *)(a1 + 2056) = v483;
    *(_QWORD *)(a1 + 2064) = a2[258];
    *(_QWORD *)(a1 + 2072) = a2[259];
    v484 = a2[261];
    *(_QWORD *)(a1 + 2080) = a2[260];
    *(_QWORD *)(a1 + 2088) = v484;
    v485 = a2[262];
    *(_BYTE *)(a1 + 2104) = *((_BYTE *)a2 + 2104);
    *(_QWORD *)(a1 + 2096) = v485;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v489 = *v478;
    v490 = *((_OWORD *)a2 + 129);
    v491 = *((_OWORD *)a2 + 130);
    *(_OWORD *)(a1 + 2089) = *(_OWORD *)((char *)a2 + 2089);
    *(_OWORD *)(a1 + 2064) = v490;
    *(_OWORD *)(a1 + 2080) = v491;
    *v477 = v489;
  }
  v492 = (_OWORD *)(a1 + 2112);
  v493 = (__int128 *)(a2 + 264);
  v494 = a2[264];
  if (*(_QWORD *)(a1 + 2112))
  {
    if (v494)
    {
      v495 = a2[265];
      *(_QWORD *)(a1 + 2112) = v494;
      *(_QWORD *)(a1 + 2120) = v495;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2128) = a2[266];
      *(_QWORD *)(a1 + 2136) = a2[267];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v496 = a2[269];
      *(_QWORD *)(a1 + 2144) = a2[268];
      *(_QWORD *)(a1 + 2152) = v496;
      swift_retain();
      swift_release();
      v497 = a2[270];
      *(_BYTE *)(a1 + 2168) = *((_BYTE *)a2 + 2168);
      *(_QWORD *)(a1 + 2160) = v497;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2112);
      v502 = *((_OWORD *)a2 + 133);
      v501 = *((_OWORD *)a2 + 134);
      v503 = *v493;
      *(_OWORD *)(a1 + 2153) = *(_OWORD *)((char *)a2 + 2153);
      *(_OWORD *)(a1 + 2128) = v502;
      *(_OWORD *)(a1 + 2144) = v501;
      *v492 = v503;
    }
  }
  else if (v494)
  {
    v498 = a2[265];
    *(_QWORD *)(a1 + 2112) = v494;
    *(_QWORD *)(a1 + 2120) = v498;
    *(_QWORD *)(a1 + 2128) = a2[266];
    *(_QWORD *)(a1 + 2136) = a2[267];
    v499 = a2[269];
    *(_QWORD *)(a1 + 2144) = a2[268];
    *(_QWORD *)(a1 + 2152) = v499;
    v500 = a2[270];
    *(_BYTE *)(a1 + 2168) = *((_BYTE *)a2 + 2168);
    *(_QWORD *)(a1 + 2160) = v500;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v504 = *v493;
    v505 = *((_OWORD *)a2 + 133);
    v506 = *((_OWORD *)a2 + 134);
    *(_OWORD *)(a1 + 2153) = *(_OWORD *)((char *)a2 + 2153);
    *(_OWORD *)(a1 + 2128) = v505;
    *(_OWORD *)(a1 + 2144) = v506;
    *v492 = v504;
  }
  v507 = (_OWORD *)(a1 + 2176);
  v508 = (__int128 *)(a2 + 272);
  v509 = a2[272];
  if (*(_QWORD *)(a1 + 2176))
  {
    if (v509)
    {
      v510 = a2[273];
      *(_QWORD *)(a1 + 2176) = v509;
      *(_QWORD *)(a1 + 2184) = v510;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2192) = a2[274];
      *(_QWORD *)(a1 + 2200) = a2[275];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v511 = a2[277];
      *(_QWORD *)(a1 + 2208) = a2[276];
      *(_QWORD *)(a1 + 2216) = v511;
      swift_retain();
      swift_release();
      v512 = a2[278];
      *(_BYTE *)(a1 + 2232) = *((_BYTE *)a2 + 2232);
      *(_QWORD *)(a1 + 2224) = v512;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2176);
      v517 = *((_OWORD *)a2 + 137);
      v516 = *((_OWORD *)a2 + 138);
      v518 = *v508;
      *(_OWORD *)(a1 + 2217) = *(_OWORD *)((char *)a2 + 2217);
      *(_OWORD *)(a1 + 2192) = v517;
      *(_OWORD *)(a1 + 2208) = v516;
      *v507 = v518;
    }
  }
  else if (v509)
  {
    v513 = a2[273];
    *(_QWORD *)(a1 + 2176) = v509;
    *(_QWORD *)(a1 + 2184) = v513;
    *(_QWORD *)(a1 + 2192) = a2[274];
    *(_QWORD *)(a1 + 2200) = a2[275];
    v514 = a2[277];
    *(_QWORD *)(a1 + 2208) = a2[276];
    *(_QWORD *)(a1 + 2216) = v514;
    v515 = a2[278];
    *(_BYTE *)(a1 + 2232) = *((_BYTE *)a2 + 2232);
    *(_QWORD *)(a1 + 2224) = v515;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v519 = *v508;
    v520 = *((_OWORD *)a2 + 137);
    v521 = *((_OWORD *)a2 + 138);
    *(_OWORD *)(a1 + 2217) = *(_OWORD *)((char *)a2 + 2217);
    *(_OWORD *)(a1 + 2192) = v520;
    *(_OWORD *)(a1 + 2208) = v521;
    *v507 = v519;
  }
  v522 = (_OWORD *)(a1 + 2240);
  v523 = a2 + 280;
  v524 = a2[280];
  if (*(_QWORD *)(a1 + 2240))
  {
    if (v524)
    {
      v525 = a2[281];
      *(_QWORD *)(a1 + 2240) = v524;
      *(_QWORD *)(a1 + 2248) = v525;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2256) = a2[282];
      *(_QWORD *)(a1 + 2264) = a2[283];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 2240);
      v527 = *((_OWORD *)a2 + 141);
      *v522 = *v523;
      *(_OWORD *)(a1 + 2256) = v527;
    }
  }
  else if (v524)
  {
    v526 = a2[281];
    *(_QWORD *)(a1 + 2240) = v524;
    *(_QWORD *)(a1 + 2248) = v526;
    *(_QWORD *)(a1 + 2256) = a2[282];
    *(_QWORD *)(a1 + 2264) = a2[283];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v528 = *((_OWORD *)a2 + 141);
    *v522 = *v523;
    *(_OWORD *)(a1 + 2256) = v528;
  }
  v529 = (_OWORD *)(a1 + 2272);
  v530 = (__int128 *)(a2 + 284);
  v531 = a2[284];
  if (*(_QWORD *)(a1 + 2272))
  {
    if (v531)
    {
      v532 = a2[285];
      *(_QWORD *)(a1 + 2272) = v531;
      *(_QWORD *)(a1 + 2280) = v532;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2288) = a2[286];
      *(_QWORD *)(a1 + 2296) = a2[287];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v533 = a2[289];
      *(_QWORD *)(a1 + 2304) = a2[288];
      *(_QWORD *)(a1 + 2312) = v533;
      swift_retain();
      swift_release();
      v534 = a2[290];
      *(_BYTE *)(a1 + 2328) = *((_BYTE *)a2 + 2328);
      *(_QWORD *)(a1 + 2320) = v534;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2272);
      v539 = *((_OWORD *)a2 + 143);
      v538 = *((_OWORD *)a2 + 144);
      v540 = *v530;
      *(_OWORD *)(a1 + 2313) = *(_OWORD *)((char *)a2 + 2313);
      *(_OWORD *)(a1 + 2288) = v539;
      *(_OWORD *)(a1 + 2304) = v538;
      *v529 = v540;
    }
  }
  else if (v531)
  {
    v535 = a2[285];
    *(_QWORD *)(a1 + 2272) = v531;
    *(_QWORD *)(a1 + 2280) = v535;
    *(_QWORD *)(a1 + 2288) = a2[286];
    *(_QWORD *)(a1 + 2296) = a2[287];
    v536 = a2[289];
    *(_QWORD *)(a1 + 2304) = a2[288];
    *(_QWORD *)(a1 + 2312) = v536;
    v537 = a2[290];
    *(_BYTE *)(a1 + 2328) = *((_BYTE *)a2 + 2328);
    *(_QWORD *)(a1 + 2320) = v537;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v541 = *v530;
    v542 = *((_OWORD *)a2 + 143);
    v543 = *((_OWORD *)a2 + 144);
    *(_OWORD *)(a1 + 2313) = *(_OWORD *)((char *)a2 + 2313);
    *(_OWORD *)(a1 + 2288) = v542;
    *(_OWORD *)(a1 + 2304) = v543;
    *v529 = v541;
  }
  v544 = (_OWORD *)(a1 + 2336);
  v545 = (__int128 *)(a2 + 292);
  v546 = a2[292];
  if (*(_QWORD *)(a1 + 2336))
  {
    if (v546)
    {
      v547 = a2[293];
      *(_QWORD *)(a1 + 2336) = v546;
      *(_QWORD *)(a1 + 2344) = v547;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2352) = a2[294];
      *(_QWORD *)(a1 + 2360) = a2[295];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v548 = a2[297];
      *(_QWORD *)(a1 + 2368) = a2[296];
      *(_QWORD *)(a1 + 2376) = v548;
      swift_retain();
      swift_release();
      v549 = a2[298];
      *(_BYTE *)(a1 + 2392) = *((_BYTE *)a2 + 2392);
      *(_QWORD *)(a1 + 2384) = v549;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2336);
      v554 = *((_OWORD *)a2 + 147);
      v553 = *((_OWORD *)a2 + 148);
      v555 = *v545;
      *(_OWORD *)(a1 + 2377) = *(_OWORD *)((char *)a2 + 2377);
      *(_OWORD *)(a1 + 2352) = v554;
      *(_OWORD *)(a1 + 2368) = v553;
      *v544 = v555;
    }
  }
  else if (v546)
  {
    v550 = a2[293];
    *(_QWORD *)(a1 + 2336) = v546;
    *(_QWORD *)(a1 + 2344) = v550;
    *(_QWORD *)(a1 + 2352) = a2[294];
    *(_QWORD *)(a1 + 2360) = a2[295];
    v551 = a2[297];
    *(_QWORD *)(a1 + 2368) = a2[296];
    *(_QWORD *)(a1 + 2376) = v551;
    v552 = a2[298];
    *(_BYTE *)(a1 + 2392) = *((_BYTE *)a2 + 2392);
    *(_QWORD *)(a1 + 2384) = v552;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v556 = *v545;
    v557 = *((_OWORD *)a2 + 147);
    v558 = *((_OWORD *)a2 + 148);
    *(_OWORD *)(a1 + 2377) = *(_OWORD *)((char *)a2 + 2377);
    *(_OWORD *)(a1 + 2352) = v557;
    *(_OWORD *)(a1 + 2368) = v558;
    *v544 = v556;
  }
  v559 = (_OWORD *)(a1 + 2400);
  v560 = (__int128 *)(a2 + 300);
  v561 = a2[300];
  if (*(_QWORD *)(a1 + 2400))
  {
    if (v561)
    {
      v562 = a2[301];
      *(_QWORD *)(a1 + 2400) = v561;
      *(_QWORD *)(a1 + 2408) = v562;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2416) = a2[302];
      *(_QWORD *)(a1 + 2424) = a2[303];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v563 = a2[305];
      *(_QWORD *)(a1 + 2432) = a2[304];
      *(_QWORD *)(a1 + 2440) = v563;
      swift_retain();
      swift_release();
      v564 = a2[306];
      *(_BYTE *)(a1 + 2456) = *((_BYTE *)a2 + 2456);
      *(_QWORD *)(a1 + 2448) = v564;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2400);
      v569 = *((_OWORD *)a2 + 151);
      v568 = *((_OWORD *)a2 + 152);
      v570 = *v560;
      *(_OWORD *)(a1 + 2441) = *(_OWORD *)((char *)a2 + 2441);
      *(_OWORD *)(a1 + 2416) = v569;
      *(_OWORD *)(a1 + 2432) = v568;
      *v559 = v570;
    }
  }
  else if (v561)
  {
    v565 = a2[301];
    *(_QWORD *)(a1 + 2400) = v561;
    *(_QWORD *)(a1 + 2408) = v565;
    *(_QWORD *)(a1 + 2416) = a2[302];
    *(_QWORD *)(a1 + 2424) = a2[303];
    v566 = a2[305];
    *(_QWORD *)(a1 + 2432) = a2[304];
    *(_QWORD *)(a1 + 2440) = v566;
    v567 = a2[306];
    *(_BYTE *)(a1 + 2456) = *((_BYTE *)a2 + 2456);
    *(_QWORD *)(a1 + 2448) = v567;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v571 = *v560;
    v572 = *((_OWORD *)a2 + 151);
    v573 = *((_OWORD *)a2 + 152);
    *(_OWORD *)(a1 + 2441) = *(_OWORD *)((char *)a2 + 2441);
    *(_OWORD *)(a1 + 2416) = v572;
    *(_OWORD *)(a1 + 2432) = v573;
    *v559 = v571;
  }
  v574 = (_OWORD *)(a1 + 2464);
  v575 = a2 + 308;
  v576 = a2[308];
  if (*(_QWORD *)(a1 + 2464))
  {
    if (v576)
    {
      v577 = a2[309];
      *(_QWORD *)(a1 + 2464) = v576;
      *(_QWORD *)(a1 + 2472) = v577;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2480) = a2[310];
      *(_QWORD *)(a1 + 2488) = a2[311];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 2464);
      v579 = *((_OWORD *)a2 + 155);
      *v574 = *v575;
      *(_OWORD *)(a1 + 2480) = v579;
    }
  }
  else if (v576)
  {
    v578 = a2[309];
    *(_QWORD *)(a1 + 2464) = v576;
    *(_QWORD *)(a1 + 2472) = v578;
    *(_QWORD *)(a1 + 2480) = a2[310];
    *(_QWORD *)(a1 + 2488) = a2[311];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v580 = *((_OWORD *)a2 + 155);
    *v574 = *v575;
    *(_OWORD *)(a1 + 2480) = v580;
  }
  v581 = (_OWORD *)(a1 + 2496);
  v582 = (__int128 *)(a2 + 312);
  v583 = a2[312];
  if (*(_QWORD *)(a1 + 2496))
  {
    if (v583)
    {
      v584 = a2[313];
      *(_QWORD *)(a1 + 2496) = v583;
      *(_QWORD *)(a1 + 2504) = v584;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2512) = a2[314];
      *(_QWORD *)(a1 + 2520) = a2[315];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v585 = a2[317];
      *(_QWORD *)(a1 + 2528) = a2[316];
      *(_QWORD *)(a1 + 2536) = v585;
      swift_retain();
      swift_release();
      v586 = a2[318];
      *(_BYTE *)(a1 + 2552) = *((_BYTE *)a2 + 2552);
      *(_QWORD *)(a1 + 2544) = v586;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2496);
      v591 = *((_OWORD *)a2 + 157);
      v590 = *((_OWORD *)a2 + 158);
      v592 = *v582;
      *(_OWORD *)(a1 + 2537) = *(_OWORD *)((char *)a2 + 2537);
      *(_OWORD *)(a1 + 2512) = v591;
      *(_OWORD *)(a1 + 2528) = v590;
      *v581 = v592;
    }
  }
  else if (v583)
  {
    v587 = a2[313];
    *(_QWORD *)(a1 + 2496) = v583;
    *(_QWORD *)(a1 + 2504) = v587;
    *(_QWORD *)(a1 + 2512) = a2[314];
    *(_QWORD *)(a1 + 2520) = a2[315];
    v588 = a2[317];
    *(_QWORD *)(a1 + 2528) = a2[316];
    *(_QWORD *)(a1 + 2536) = v588;
    v589 = a2[318];
    *(_BYTE *)(a1 + 2552) = *((_BYTE *)a2 + 2552);
    *(_QWORD *)(a1 + 2544) = v589;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v593 = *v582;
    v594 = *((_OWORD *)a2 + 157);
    v595 = *((_OWORD *)a2 + 158);
    *(_OWORD *)(a1 + 2537) = *(_OWORD *)((char *)a2 + 2537);
    *(_OWORD *)(a1 + 2512) = v594;
    *(_OWORD *)(a1 + 2528) = v595;
    *v581 = v593;
  }
  v596 = (_OWORD *)(a1 + 2560);
  v597 = (__int128 *)(a2 + 320);
  v598 = a2[320];
  if (*(_QWORD *)(a1 + 2560))
  {
    if (v598)
    {
      v599 = a2[321];
      *(_QWORD *)(a1 + 2560) = v598;
      *(_QWORD *)(a1 + 2568) = v599;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2576) = a2[322];
      *(_QWORD *)(a1 + 2584) = a2[323];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v600 = a2[325];
      *(_QWORD *)(a1 + 2592) = a2[324];
      *(_QWORD *)(a1 + 2600) = v600;
      swift_retain();
      swift_release();
      v601 = a2[326];
      *(_BYTE *)(a1 + 2616) = *((_BYTE *)a2 + 2616);
      *(_QWORD *)(a1 + 2608) = v601;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2560);
      v606 = *((_OWORD *)a2 + 161);
      v605 = *((_OWORD *)a2 + 162);
      v607 = *v597;
      *(_OWORD *)(a1 + 2601) = *(_OWORD *)((char *)a2 + 2601);
      *(_OWORD *)(a1 + 2576) = v606;
      *(_OWORD *)(a1 + 2592) = v605;
      *v596 = v607;
    }
  }
  else if (v598)
  {
    v602 = a2[321];
    *(_QWORD *)(a1 + 2560) = v598;
    *(_QWORD *)(a1 + 2568) = v602;
    *(_QWORD *)(a1 + 2576) = a2[322];
    *(_QWORD *)(a1 + 2584) = a2[323];
    v603 = a2[325];
    *(_QWORD *)(a1 + 2592) = a2[324];
    *(_QWORD *)(a1 + 2600) = v603;
    v604 = a2[326];
    *(_BYTE *)(a1 + 2616) = *((_BYTE *)a2 + 2616);
    *(_QWORD *)(a1 + 2608) = v604;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v608 = *v597;
    v609 = *((_OWORD *)a2 + 161);
    v610 = *((_OWORD *)a2 + 162);
    *(_OWORD *)(a1 + 2601) = *(_OWORD *)((char *)a2 + 2601);
    *(_OWORD *)(a1 + 2576) = v609;
    *(_OWORD *)(a1 + 2592) = v610;
    *v596 = v608;
  }
  v611 = (_OWORD *)(a1 + 2624);
  v612 = (__int128 *)(a2 + 328);
  v613 = a2[328];
  if (*(_QWORD *)(a1 + 2624))
  {
    if (v613)
    {
      v614 = a2[329];
      *(_QWORD *)(a1 + 2624) = v613;
      *(_QWORD *)(a1 + 2632) = v614;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2640) = a2[330];
      *(_QWORD *)(a1 + 2648) = a2[331];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v615 = a2[333];
      *(_QWORD *)(a1 + 2656) = a2[332];
      *(_QWORD *)(a1 + 2664) = v615;
      swift_retain();
      swift_release();
      v616 = a2[334];
      *(_BYTE *)(a1 + 2680) = *((_BYTE *)a2 + 2680);
      *(_QWORD *)(a1 + 2672) = v616;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2624);
      v621 = *((_OWORD *)a2 + 165);
      v620 = *((_OWORD *)a2 + 166);
      v622 = *v612;
      *(_OWORD *)(a1 + 2665) = *(_OWORD *)((char *)a2 + 2665);
      *(_OWORD *)(a1 + 2640) = v621;
      *(_OWORD *)(a1 + 2656) = v620;
      *v611 = v622;
    }
  }
  else if (v613)
  {
    v617 = a2[329];
    *(_QWORD *)(a1 + 2624) = v613;
    *(_QWORD *)(a1 + 2632) = v617;
    *(_QWORD *)(a1 + 2640) = a2[330];
    *(_QWORD *)(a1 + 2648) = a2[331];
    v618 = a2[333];
    *(_QWORD *)(a1 + 2656) = a2[332];
    *(_QWORD *)(a1 + 2664) = v618;
    v619 = a2[334];
    *(_BYTE *)(a1 + 2680) = *((_BYTE *)a2 + 2680);
    *(_QWORD *)(a1 + 2672) = v619;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v623 = *v612;
    v624 = *((_OWORD *)a2 + 165);
    v625 = *((_OWORD *)a2 + 166);
    *(_OWORD *)(a1 + 2665) = *(_OWORD *)((char *)a2 + 2665);
    *(_OWORD *)(a1 + 2640) = v624;
    *(_OWORD *)(a1 + 2656) = v625;
    *v611 = v623;
  }
  v626 = (_OWORD *)(a1 + 2688);
  v627 = a2 + 336;
  v628 = a2[336];
  if (*(_QWORD *)(a1 + 2688))
  {
    if (v628)
    {
      v629 = a2[337];
      *(_QWORD *)(a1 + 2688) = v628;
      *(_QWORD *)(a1 + 2696) = v629;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2704) = a2[338];
      *(_QWORD *)(a1 + 2712) = a2[339];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 2688);
      v631 = *((_OWORD *)a2 + 169);
      *v626 = *v627;
      *(_OWORD *)(a1 + 2704) = v631;
    }
  }
  else if (v628)
  {
    v630 = a2[337];
    *(_QWORD *)(a1 + 2688) = v628;
    *(_QWORD *)(a1 + 2696) = v630;
    *(_QWORD *)(a1 + 2704) = a2[338];
    *(_QWORD *)(a1 + 2712) = a2[339];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v632 = *((_OWORD *)a2 + 169);
    *v626 = *v627;
    *(_OWORD *)(a1 + 2704) = v632;
  }
  v633 = (_OWORD *)(a1 + 2720);
  v634 = (__int128 *)(a2 + 340);
  v635 = a2[340];
  if (*(_QWORD *)(a1 + 2720))
  {
    if (v635)
    {
      v636 = a2[341];
      *(_QWORD *)(a1 + 2720) = v635;
      *(_QWORD *)(a1 + 2728) = v636;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2736) = a2[342];
      *(_QWORD *)(a1 + 2744) = a2[343];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v637 = a2[345];
      *(_QWORD *)(a1 + 2752) = a2[344];
      *(_QWORD *)(a1 + 2760) = v637;
      swift_retain();
      swift_release();
      v638 = a2[346];
      *(_BYTE *)(a1 + 2776) = *((_BYTE *)a2 + 2776);
      *(_QWORD *)(a1 + 2768) = v638;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2720);
      v643 = *((_OWORD *)a2 + 171);
      v642 = *((_OWORD *)a2 + 172);
      v644 = *v634;
      *(_OWORD *)(a1 + 2761) = *(_OWORD *)((char *)a2 + 2761);
      *(_OWORD *)(a1 + 2736) = v643;
      *(_OWORD *)(a1 + 2752) = v642;
      *v633 = v644;
    }
  }
  else if (v635)
  {
    v639 = a2[341];
    *(_QWORD *)(a1 + 2720) = v635;
    *(_QWORD *)(a1 + 2728) = v639;
    *(_QWORD *)(a1 + 2736) = a2[342];
    *(_QWORD *)(a1 + 2744) = a2[343];
    v640 = a2[345];
    *(_QWORD *)(a1 + 2752) = a2[344];
    *(_QWORD *)(a1 + 2760) = v640;
    v641 = a2[346];
    *(_BYTE *)(a1 + 2776) = *((_BYTE *)a2 + 2776);
    *(_QWORD *)(a1 + 2768) = v641;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v645 = *v634;
    v646 = *((_OWORD *)a2 + 171);
    v647 = *((_OWORD *)a2 + 172);
    *(_OWORD *)(a1 + 2761) = *(_OWORD *)((char *)a2 + 2761);
    *(_OWORD *)(a1 + 2736) = v646;
    *(_OWORD *)(a1 + 2752) = v647;
    *v633 = v645;
  }
  v648 = (_OWORD *)(a1 + 2784);
  v649 = (__int128 *)(a2 + 348);
  v650 = a2[348];
  if (*(_QWORD *)(a1 + 2784))
  {
    if (v650)
    {
      v651 = a2[349];
      *(_QWORD *)(a1 + 2784) = v650;
      *(_QWORD *)(a1 + 2792) = v651;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2800) = a2[350];
      *(_QWORD *)(a1 + 2808) = a2[351];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v652 = a2[353];
      *(_QWORD *)(a1 + 2816) = a2[352];
      *(_QWORD *)(a1 + 2824) = v652;
      swift_retain();
      swift_release();
      v653 = a2[354];
      *(_BYTE *)(a1 + 2840) = *((_BYTE *)a2 + 2840);
      *(_QWORD *)(a1 + 2832) = v653;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2784);
      v658 = *((_OWORD *)a2 + 175);
      v657 = *((_OWORD *)a2 + 176);
      v659 = *v649;
      *(_OWORD *)(a1 + 2825) = *(_OWORD *)((char *)a2 + 2825);
      *(_OWORD *)(a1 + 2800) = v658;
      *(_OWORD *)(a1 + 2816) = v657;
      *v648 = v659;
    }
  }
  else if (v650)
  {
    v654 = a2[349];
    *(_QWORD *)(a1 + 2784) = v650;
    *(_QWORD *)(a1 + 2792) = v654;
    *(_QWORD *)(a1 + 2800) = a2[350];
    *(_QWORD *)(a1 + 2808) = a2[351];
    v655 = a2[353];
    *(_QWORD *)(a1 + 2816) = a2[352];
    *(_QWORD *)(a1 + 2824) = v655;
    v656 = a2[354];
    *(_BYTE *)(a1 + 2840) = *((_BYTE *)a2 + 2840);
    *(_QWORD *)(a1 + 2832) = v656;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v660 = *v649;
    v661 = *((_OWORD *)a2 + 175);
    v662 = *((_OWORD *)a2 + 176);
    *(_OWORD *)(a1 + 2825) = *(_OWORD *)((char *)a2 + 2825);
    *(_OWORD *)(a1 + 2800) = v661;
    *(_OWORD *)(a1 + 2816) = v662;
    *v648 = v660;
  }
  v663 = (_OWORD *)(a1 + 2848);
  v664 = (__int128 *)(a2 + 356);
  v665 = a2[356];
  if (*(_QWORD *)(a1 + 2848))
  {
    if (v665)
    {
      v666 = a2[357];
      *(_QWORD *)(a1 + 2848) = v665;
      *(_QWORD *)(a1 + 2856) = v666;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2864) = a2[358];
      *(_QWORD *)(a1 + 2872) = a2[359];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v667 = a2[361];
      *(_QWORD *)(a1 + 2880) = a2[360];
      *(_QWORD *)(a1 + 2888) = v667;
      swift_retain();
      swift_release();
      v668 = a2[362];
      *(_BYTE *)(a1 + 2904) = *((_BYTE *)a2 + 2904);
      *(_QWORD *)(a1 + 2896) = v668;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2848);
      v673 = *((_OWORD *)a2 + 179);
      v672 = *((_OWORD *)a2 + 180);
      v674 = *v664;
      *(_OWORD *)(a1 + 2889) = *(_OWORD *)((char *)a2 + 2889);
      *(_OWORD *)(a1 + 2864) = v673;
      *(_OWORD *)(a1 + 2880) = v672;
      *v663 = v674;
    }
  }
  else if (v665)
  {
    v669 = a2[357];
    *(_QWORD *)(a1 + 2848) = v665;
    *(_QWORD *)(a1 + 2856) = v669;
    *(_QWORD *)(a1 + 2864) = a2[358];
    *(_QWORD *)(a1 + 2872) = a2[359];
    v670 = a2[361];
    *(_QWORD *)(a1 + 2880) = a2[360];
    *(_QWORD *)(a1 + 2888) = v670;
    v671 = a2[362];
    *(_BYTE *)(a1 + 2904) = *((_BYTE *)a2 + 2904);
    *(_QWORD *)(a1 + 2896) = v671;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v675 = *v664;
    v676 = *((_OWORD *)a2 + 179);
    v677 = *((_OWORD *)a2 + 180);
    *(_OWORD *)(a1 + 2889) = *(_OWORD *)((char *)a2 + 2889);
    *(_OWORD *)(a1 + 2864) = v676;
    *(_OWORD *)(a1 + 2880) = v677;
    *v663 = v675;
  }
  v678 = (_OWORD *)(a1 + 2912);
  v679 = a2 + 364;
  v680 = a2[364];
  if (*(_QWORD *)(a1 + 2912))
  {
    if (v680)
    {
      v681 = a2[365];
      *(_QWORD *)(a1 + 2912) = v680;
      *(_QWORD *)(a1 + 2920) = v681;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2928) = a2[366];
      *(_QWORD *)(a1 + 2936) = a2[367];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 2912);
      v683 = *((_OWORD *)a2 + 183);
      *v678 = *v679;
      *(_OWORD *)(a1 + 2928) = v683;
    }
  }
  else if (v680)
  {
    v682 = a2[365];
    *(_QWORD *)(a1 + 2912) = v680;
    *(_QWORD *)(a1 + 2920) = v682;
    *(_QWORD *)(a1 + 2928) = a2[366];
    *(_QWORD *)(a1 + 2936) = a2[367];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v684 = *((_OWORD *)a2 + 183);
    *v678 = *v679;
    *(_OWORD *)(a1 + 2928) = v684;
  }
  v685 = (_OWORD *)(a1 + 2944);
  v686 = (__int128 *)(a2 + 368);
  v687 = a2[368];
  if (*(_QWORD *)(a1 + 2944))
  {
    if (v687)
    {
      v688 = a2[369];
      *(_QWORD *)(a1 + 2944) = v687;
      *(_QWORD *)(a1 + 2952) = v688;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 2960) = a2[370];
      *(_QWORD *)(a1 + 2968) = a2[371];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v689 = a2[373];
      *(_QWORD *)(a1 + 2976) = a2[372];
      *(_QWORD *)(a1 + 2984) = v689;
      swift_retain();
      swift_release();
      v690 = a2[374];
      *(_BYTE *)(a1 + 3000) = *((_BYTE *)a2 + 3000);
      *(_QWORD *)(a1 + 2992) = v690;
    }
    else
    {
      sub_1AD3C2B88(a1 + 2944);
      v695 = *((_OWORD *)a2 + 185);
      v694 = *((_OWORD *)a2 + 186);
      v696 = *v686;
      *(_OWORD *)(a1 + 2985) = *(_OWORD *)((char *)a2 + 2985);
      *(_OWORD *)(a1 + 2960) = v695;
      *(_OWORD *)(a1 + 2976) = v694;
      *v685 = v696;
    }
  }
  else if (v687)
  {
    v691 = a2[369];
    *(_QWORD *)(a1 + 2944) = v687;
    *(_QWORD *)(a1 + 2952) = v691;
    *(_QWORD *)(a1 + 2960) = a2[370];
    *(_QWORD *)(a1 + 2968) = a2[371];
    v692 = a2[373];
    *(_QWORD *)(a1 + 2976) = a2[372];
    *(_QWORD *)(a1 + 2984) = v692;
    v693 = a2[374];
    *(_BYTE *)(a1 + 3000) = *((_BYTE *)a2 + 3000);
    *(_QWORD *)(a1 + 2992) = v693;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v697 = *v686;
    v698 = *((_OWORD *)a2 + 185);
    v699 = *((_OWORD *)a2 + 186);
    *(_OWORD *)(a1 + 2985) = *(_OWORD *)((char *)a2 + 2985);
    *(_OWORD *)(a1 + 2960) = v698;
    *(_OWORD *)(a1 + 2976) = v699;
    *v685 = v697;
  }
  v700 = (_OWORD *)(a1 + 3008);
  v701 = (__int128 *)(a2 + 376);
  v702 = a2[376];
  if (*(_QWORD *)(a1 + 3008))
  {
    if (v702)
    {
      v703 = a2[377];
      *(_QWORD *)(a1 + 3008) = v702;
      *(_QWORD *)(a1 + 3016) = v703;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3024) = a2[378];
      *(_QWORD *)(a1 + 3032) = a2[379];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v704 = a2[381];
      *(_QWORD *)(a1 + 3040) = a2[380];
      *(_QWORD *)(a1 + 3048) = v704;
      swift_retain();
      swift_release();
      v705 = a2[382];
      *(_BYTE *)(a1 + 3064) = *((_BYTE *)a2 + 3064);
      *(_QWORD *)(a1 + 3056) = v705;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3008);
      v710 = *((_OWORD *)a2 + 189);
      v709 = *((_OWORD *)a2 + 190);
      v711 = *v701;
      *(_OWORD *)(a1 + 3049) = *(_OWORD *)((char *)a2 + 3049);
      *(_OWORD *)(a1 + 3024) = v710;
      *(_OWORD *)(a1 + 3040) = v709;
      *v700 = v711;
    }
  }
  else if (v702)
  {
    v706 = a2[377];
    *(_QWORD *)(a1 + 3008) = v702;
    *(_QWORD *)(a1 + 3016) = v706;
    *(_QWORD *)(a1 + 3024) = a2[378];
    *(_QWORD *)(a1 + 3032) = a2[379];
    v707 = a2[381];
    *(_QWORD *)(a1 + 3040) = a2[380];
    *(_QWORD *)(a1 + 3048) = v707;
    v708 = a2[382];
    *(_BYTE *)(a1 + 3064) = *((_BYTE *)a2 + 3064);
    *(_QWORD *)(a1 + 3056) = v708;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v712 = *v701;
    v713 = *((_OWORD *)a2 + 189);
    v714 = *((_OWORD *)a2 + 190);
    *(_OWORD *)(a1 + 3049) = *(_OWORD *)((char *)a2 + 3049);
    *(_OWORD *)(a1 + 3024) = v713;
    *(_OWORD *)(a1 + 3040) = v714;
    *v700 = v712;
  }
  v715 = (_OWORD *)(a1 + 3072);
  v716 = (__int128 *)(a2 + 384);
  v717 = a2[384];
  if (*(_QWORD *)(a1 + 3072))
  {
    if (v717)
    {
      v718 = a2[385];
      *(_QWORD *)(a1 + 3072) = v717;
      *(_QWORD *)(a1 + 3080) = v718;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3088) = a2[386];
      *(_QWORD *)(a1 + 3096) = a2[387];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v719 = a2[389];
      *(_QWORD *)(a1 + 3104) = a2[388];
      *(_QWORD *)(a1 + 3112) = v719;
      swift_retain();
      swift_release();
      v720 = a2[390];
      *(_BYTE *)(a1 + 3128) = *((_BYTE *)a2 + 3128);
      *(_QWORD *)(a1 + 3120) = v720;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3072);
      v725 = *((_OWORD *)a2 + 193);
      v724 = *((_OWORD *)a2 + 194);
      v726 = *v716;
      *(_OWORD *)(a1 + 3113) = *(_OWORD *)((char *)a2 + 3113);
      *(_OWORD *)(a1 + 3088) = v725;
      *(_OWORD *)(a1 + 3104) = v724;
      *v715 = v726;
    }
  }
  else if (v717)
  {
    v721 = a2[385];
    *(_QWORD *)(a1 + 3072) = v717;
    *(_QWORD *)(a1 + 3080) = v721;
    *(_QWORD *)(a1 + 3088) = a2[386];
    *(_QWORD *)(a1 + 3096) = a2[387];
    v722 = a2[389];
    *(_QWORD *)(a1 + 3104) = a2[388];
    *(_QWORD *)(a1 + 3112) = v722;
    v723 = a2[390];
    *(_BYTE *)(a1 + 3128) = *((_BYTE *)a2 + 3128);
    *(_QWORD *)(a1 + 3120) = v723;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v727 = *v716;
    v728 = *((_OWORD *)a2 + 193);
    v729 = *((_OWORD *)a2 + 194);
    *(_OWORD *)(a1 + 3113) = *(_OWORD *)((char *)a2 + 3113);
    *(_OWORD *)(a1 + 3088) = v728;
    *(_OWORD *)(a1 + 3104) = v729;
    *v715 = v727;
  }
  v730 = (_OWORD *)(a1 + 3136);
  v731 = a2 + 392;
  v732 = a2[392];
  if (*(_QWORD *)(a1 + 3136))
  {
    if (v732)
    {
      v733 = a2[393];
      *(_QWORD *)(a1 + 3136) = v732;
      *(_QWORD *)(a1 + 3144) = v733;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3152) = a2[394];
      *(_QWORD *)(a1 + 3160) = a2[395];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 3136);
      v735 = *((_OWORD *)a2 + 197);
      *v730 = *v731;
      *(_OWORD *)(a1 + 3152) = v735;
    }
  }
  else if (v732)
  {
    v734 = a2[393];
    *(_QWORD *)(a1 + 3136) = v732;
    *(_QWORD *)(a1 + 3144) = v734;
    *(_QWORD *)(a1 + 3152) = a2[394];
    *(_QWORD *)(a1 + 3160) = a2[395];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v736 = *((_OWORD *)a2 + 197);
    *v730 = *v731;
    *(_OWORD *)(a1 + 3152) = v736;
  }
  v737 = (_OWORD *)(a1 + 3168);
  v738 = (__int128 *)(a2 + 396);
  v739 = a2[396];
  if (*(_QWORD *)(a1 + 3168))
  {
    if (v739)
    {
      v740 = a2[397];
      *(_QWORD *)(a1 + 3168) = v739;
      *(_QWORD *)(a1 + 3176) = v740;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3184) = a2[398];
      *(_QWORD *)(a1 + 3192) = a2[399];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v741 = a2[401];
      *(_QWORD *)(a1 + 3200) = a2[400];
      *(_QWORD *)(a1 + 3208) = v741;
      swift_retain();
      swift_release();
      v742 = a2[402];
      *(_BYTE *)(a1 + 3224) = *((_BYTE *)a2 + 3224);
      *(_QWORD *)(a1 + 3216) = v742;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3168);
      v747 = *((_OWORD *)a2 + 199);
      v746 = *((_OWORD *)a2 + 200);
      v748 = *v738;
      *(_OWORD *)(a1 + 3209) = *(_OWORD *)((char *)a2 + 3209);
      *(_OWORD *)(a1 + 3184) = v747;
      *(_OWORD *)(a1 + 3200) = v746;
      *v737 = v748;
    }
  }
  else if (v739)
  {
    v743 = a2[397];
    *(_QWORD *)(a1 + 3168) = v739;
    *(_QWORD *)(a1 + 3176) = v743;
    *(_QWORD *)(a1 + 3184) = a2[398];
    *(_QWORD *)(a1 + 3192) = a2[399];
    v744 = a2[401];
    *(_QWORD *)(a1 + 3200) = a2[400];
    *(_QWORD *)(a1 + 3208) = v744;
    v745 = a2[402];
    *(_BYTE *)(a1 + 3224) = *((_BYTE *)a2 + 3224);
    *(_QWORD *)(a1 + 3216) = v745;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v749 = *v738;
    v750 = *((_OWORD *)a2 + 199);
    v751 = *((_OWORD *)a2 + 200);
    *(_OWORD *)(a1 + 3209) = *(_OWORD *)((char *)a2 + 3209);
    *(_OWORD *)(a1 + 3184) = v750;
    *(_OWORD *)(a1 + 3200) = v751;
    *v737 = v749;
  }
  v752 = (_OWORD *)(a1 + 3232);
  v753 = (__int128 *)(a2 + 404);
  v754 = a2[404];
  if (*(_QWORD *)(a1 + 3232))
  {
    if (v754)
    {
      v755 = a2[405];
      *(_QWORD *)(a1 + 3232) = v754;
      *(_QWORD *)(a1 + 3240) = v755;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3248) = a2[406];
      *(_QWORD *)(a1 + 3256) = a2[407];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v756 = a2[409];
      *(_QWORD *)(a1 + 3264) = a2[408];
      *(_QWORD *)(a1 + 3272) = v756;
      swift_retain();
      swift_release();
      v757 = a2[410];
      *(_BYTE *)(a1 + 3288) = *((_BYTE *)a2 + 3288);
      *(_QWORD *)(a1 + 3280) = v757;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3232);
      v762 = *((_OWORD *)a2 + 203);
      v761 = *((_OWORD *)a2 + 204);
      v763 = *v753;
      *(_OWORD *)(a1 + 3273) = *(_OWORD *)((char *)a2 + 3273);
      *(_OWORD *)(a1 + 3248) = v762;
      *(_OWORD *)(a1 + 3264) = v761;
      *v752 = v763;
    }
  }
  else if (v754)
  {
    v758 = a2[405];
    *(_QWORD *)(a1 + 3232) = v754;
    *(_QWORD *)(a1 + 3240) = v758;
    *(_QWORD *)(a1 + 3248) = a2[406];
    *(_QWORD *)(a1 + 3256) = a2[407];
    v759 = a2[409];
    *(_QWORD *)(a1 + 3264) = a2[408];
    *(_QWORD *)(a1 + 3272) = v759;
    v760 = a2[410];
    *(_BYTE *)(a1 + 3288) = *((_BYTE *)a2 + 3288);
    *(_QWORD *)(a1 + 3280) = v760;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v764 = *v753;
    v765 = *((_OWORD *)a2 + 203);
    v766 = *((_OWORD *)a2 + 204);
    *(_OWORD *)(a1 + 3273) = *(_OWORD *)((char *)a2 + 3273);
    *(_OWORD *)(a1 + 3248) = v765;
    *(_OWORD *)(a1 + 3264) = v766;
    *v752 = v764;
  }
  v767 = (_OWORD *)(a1 + 3296);
  v768 = (__int128 *)(a2 + 412);
  v769 = a2[412];
  if (*(_QWORD *)(a1 + 3296))
  {
    if (v769)
    {
      v770 = a2[413];
      *(_QWORD *)(a1 + 3296) = v769;
      *(_QWORD *)(a1 + 3304) = v770;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3312) = a2[414];
      *(_QWORD *)(a1 + 3320) = a2[415];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v771 = a2[417];
      *(_QWORD *)(a1 + 3328) = a2[416];
      *(_QWORD *)(a1 + 3336) = v771;
      swift_retain();
      swift_release();
      v772 = a2[418];
      *(_BYTE *)(a1 + 3352) = *((_BYTE *)a2 + 3352);
      *(_QWORD *)(a1 + 3344) = v772;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3296);
      v777 = *((_OWORD *)a2 + 207);
      v776 = *((_OWORD *)a2 + 208);
      v778 = *v768;
      *(_OWORD *)(a1 + 3337) = *(_OWORD *)((char *)a2 + 3337);
      *(_OWORD *)(a1 + 3312) = v777;
      *(_OWORD *)(a1 + 3328) = v776;
      *v767 = v778;
    }
  }
  else if (v769)
  {
    v773 = a2[413];
    *(_QWORD *)(a1 + 3296) = v769;
    *(_QWORD *)(a1 + 3304) = v773;
    *(_QWORD *)(a1 + 3312) = a2[414];
    *(_QWORD *)(a1 + 3320) = a2[415];
    v774 = a2[417];
    *(_QWORD *)(a1 + 3328) = a2[416];
    *(_QWORD *)(a1 + 3336) = v774;
    v775 = a2[418];
    *(_BYTE *)(a1 + 3352) = *((_BYTE *)a2 + 3352);
    *(_QWORD *)(a1 + 3344) = v775;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v779 = *v768;
    v780 = *((_OWORD *)a2 + 207);
    v781 = *((_OWORD *)a2 + 208);
    *(_OWORD *)(a1 + 3337) = *(_OWORD *)((char *)a2 + 3337);
    *(_OWORD *)(a1 + 3312) = v780;
    *(_OWORD *)(a1 + 3328) = v781;
    *v767 = v779;
  }
  v782 = (_OWORD *)(a1 + 3360);
  v783 = a2 + 420;
  v784 = a2[420];
  if (*(_QWORD *)(a1 + 3360))
  {
    if (v784)
    {
      v785 = a2[421];
      *(_QWORD *)(a1 + 3360) = v784;
      *(_QWORD *)(a1 + 3368) = v785;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3376) = a2[422];
      *(_QWORD *)(a1 + 3384) = a2[423];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 3360);
      v787 = *((_OWORD *)a2 + 211);
      *v782 = *v783;
      *(_OWORD *)(a1 + 3376) = v787;
    }
  }
  else if (v784)
  {
    v786 = a2[421];
    *(_QWORD *)(a1 + 3360) = v784;
    *(_QWORD *)(a1 + 3368) = v786;
    *(_QWORD *)(a1 + 3376) = a2[422];
    *(_QWORD *)(a1 + 3384) = a2[423];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v788 = *((_OWORD *)a2 + 211);
    *v782 = *v783;
    *(_OWORD *)(a1 + 3376) = v788;
  }
  v789 = (_OWORD *)(a1 + 3392);
  v790 = (__int128 *)(a2 + 424);
  v791 = a2[424];
  if (*(_QWORD *)(a1 + 3392))
  {
    if (v791)
    {
      v792 = a2[425];
      *(_QWORD *)(a1 + 3392) = v791;
      *(_QWORD *)(a1 + 3400) = v792;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3408) = a2[426];
      *(_QWORD *)(a1 + 3416) = a2[427];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v793 = a2[429];
      *(_QWORD *)(a1 + 3424) = a2[428];
      *(_QWORD *)(a1 + 3432) = v793;
      swift_retain();
      swift_release();
      v794 = a2[430];
      *(_BYTE *)(a1 + 3448) = *((_BYTE *)a2 + 3448);
      *(_QWORD *)(a1 + 3440) = v794;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3392);
      v799 = *((_OWORD *)a2 + 213);
      v798 = *((_OWORD *)a2 + 214);
      v800 = *v790;
      *(_OWORD *)(a1 + 3433) = *(_OWORD *)((char *)a2 + 3433);
      *(_OWORD *)(a1 + 3408) = v799;
      *(_OWORD *)(a1 + 3424) = v798;
      *v789 = v800;
    }
  }
  else if (v791)
  {
    v795 = a2[425];
    *(_QWORD *)(a1 + 3392) = v791;
    *(_QWORD *)(a1 + 3400) = v795;
    *(_QWORD *)(a1 + 3408) = a2[426];
    *(_QWORD *)(a1 + 3416) = a2[427];
    v796 = a2[429];
    *(_QWORD *)(a1 + 3424) = a2[428];
    *(_QWORD *)(a1 + 3432) = v796;
    v797 = a2[430];
    *(_BYTE *)(a1 + 3448) = *((_BYTE *)a2 + 3448);
    *(_QWORD *)(a1 + 3440) = v797;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v801 = *v790;
    v802 = *((_OWORD *)a2 + 213);
    v803 = *((_OWORD *)a2 + 214);
    *(_OWORD *)(a1 + 3433) = *(_OWORD *)((char *)a2 + 3433);
    *(_OWORD *)(a1 + 3408) = v802;
    *(_OWORD *)(a1 + 3424) = v803;
    *v789 = v801;
  }
  v804 = (_OWORD *)(a1 + 3456);
  v805 = (__int128 *)(a2 + 432);
  v806 = a2[432];
  if (*(_QWORD *)(a1 + 3456))
  {
    if (v806)
    {
      v807 = a2[433];
      *(_QWORD *)(a1 + 3456) = v806;
      *(_QWORD *)(a1 + 3464) = v807;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3472) = a2[434];
      *(_QWORD *)(a1 + 3480) = a2[435];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v808 = a2[437];
      *(_QWORD *)(a1 + 3488) = a2[436];
      *(_QWORD *)(a1 + 3496) = v808;
      swift_retain();
      swift_release();
      v809 = a2[438];
      *(_BYTE *)(a1 + 3512) = *((_BYTE *)a2 + 3512);
      *(_QWORD *)(a1 + 3504) = v809;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3456);
      v814 = *((_OWORD *)a2 + 217);
      v813 = *((_OWORD *)a2 + 218);
      v815 = *v805;
      *(_OWORD *)(a1 + 3497) = *(_OWORD *)((char *)a2 + 3497);
      *(_OWORD *)(a1 + 3472) = v814;
      *(_OWORD *)(a1 + 3488) = v813;
      *v804 = v815;
    }
  }
  else if (v806)
  {
    v810 = a2[433];
    *(_QWORD *)(a1 + 3456) = v806;
    *(_QWORD *)(a1 + 3464) = v810;
    *(_QWORD *)(a1 + 3472) = a2[434];
    *(_QWORD *)(a1 + 3480) = a2[435];
    v811 = a2[437];
    *(_QWORD *)(a1 + 3488) = a2[436];
    *(_QWORD *)(a1 + 3496) = v811;
    v812 = a2[438];
    *(_BYTE *)(a1 + 3512) = *((_BYTE *)a2 + 3512);
    *(_QWORD *)(a1 + 3504) = v812;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v816 = *v805;
    v817 = *((_OWORD *)a2 + 217);
    v818 = *((_OWORD *)a2 + 218);
    *(_OWORD *)(a1 + 3497) = *(_OWORD *)((char *)a2 + 3497);
    *(_OWORD *)(a1 + 3472) = v817;
    *(_OWORD *)(a1 + 3488) = v818;
    *v804 = v816;
  }
  v819 = (_OWORD *)(a1 + 3520);
  v820 = (__int128 *)(a2 + 440);
  v821 = a2[440];
  if (*(_QWORD *)(a1 + 3520))
  {
    if (v821)
    {
      v822 = a2[441];
      *(_QWORD *)(a1 + 3520) = v821;
      *(_QWORD *)(a1 + 3528) = v822;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3536) = a2[442];
      *(_QWORD *)(a1 + 3544) = a2[443];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v823 = a2[445];
      *(_QWORD *)(a1 + 3552) = a2[444];
      *(_QWORD *)(a1 + 3560) = v823;
      swift_retain();
      swift_release();
      v824 = a2[446];
      *(_BYTE *)(a1 + 3576) = *((_BYTE *)a2 + 3576);
      *(_QWORD *)(a1 + 3568) = v824;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3520);
      v829 = *((_OWORD *)a2 + 221);
      v828 = *((_OWORD *)a2 + 222);
      v830 = *v820;
      *(_OWORD *)(a1 + 3561) = *(_OWORD *)((char *)a2 + 3561);
      *(_OWORD *)(a1 + 3536) = v829;
      *(_OWORD *)(a1 + 3552) = v828;
      *v819 = v830;
    }
  }
  else if (v821)
  {
    v825 = a2[441];
    *(_QWORD *)(a1 + 3520) = v821;
    *(_QWORD *)(a1 + 3528) = v825;
    *(_QWORD *)(a1 + 3536) = a2[442];
    *(_QWORD *)(a1 + 3544) = a2[443];
    v826 = a2[445];
    *(_QWORD *)(a1 + 3552) = a2[444];
    *(_QWORD *)(a1 + 3560) = v826;
    v827 = a2[446];
    *(_BYTE *)(a1 + 3576) = *((_BYTE *)a2 + 3576);
    *(_QWORD *)(a1 + 3568) = v827;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v831 = *v820;
    v832 = *((_OWORD *)a2 + 221);
    v833 = *((_OWORD *)a2 + 222);
    *(_OWORD *)(a1 + 3561) = *(_OWORD *)((char *)a2 + 3561);
    *(_OWORD *)(a1 + 3536) = v832;
    *(_OWORD *)(a1 + 3552) = v833;
    *v819 = v831;
  }
  v834 = (_OWORD *)(a1 + 3584);
  v835 = a2 + 448;
  v836 = a2[448];
  if (*(_QWORD *)(a1 + 3584))
  {
    if (v836)
    {
      v837 = a2[449];
      *(_QWORD *)(a1 + 3584) = v836;
      *(_QWORD *)(a1 + 3592) = v837;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3600) = a2[450];
      *(_QWORD *)(a1 + 3608) = a2[451];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 3584);
      v839 = *((_OWORD *)a2 + 225);
      *v834 = *v835;
      *(_OWORD *)(a1 + 3600) = v839;
    }
  }
  else if (v836)
  {
    v838 = a2[449];
    *(_QWORD *)(a1 + 3584) = v836;
    *(_QWORD *)(a1 + 3592) = v838;
    *(_QWORD *)(a1 + 3600) = a2[450];
    *(_QWORD *)(a1 + 3608) = a2[451];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v840 = *((_OWORD *)a2 + 225);
    *v834 = *v835;
    *(_OWORD *)(a1 + 3600) = v840;
  }
  v841 = (_OWORD *)(a1 + 3616);
  v842 = (__int128 *)(a2 + 452);
  v843 = a2[452];
  if (*(_QWORD *)(a1 + 3616))
  {
    if (v843)
    {
      v844 = a2[453];
      *(_QWORD *)(a1 + 3616) = v843;
      *(_QWORD *)(a1 + 3624) = v844;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3632) = a2[454];
      *(_QWORD *)(a1 + 3640) = a2[455];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v845 = a2[457];
      *(_QWORD *)(a1 + 3648) = a2[456];
      *(_QWORD *)(a1 + 3656) = v845;
      swift_retain();
      swift_release();
      v846 = a2[458];
      *(_BYTE *)(a1 + 3672) = *((_BYTE *)a2 + 3672);
      *(_QWORD *)(a1 + 3664) = v846;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3616);
      v851 = *((_OWORD *)a2 + 227);
      v850 = *((_OWORD *)a2 + 228);
      v852 = *v842;
      *(_OWORD *)(a1 + 3657) = *(_OWORD *)((char *)a2 + 3657);
      *(_OWORD *)(a1 + 3632) = v851;
      *(_OWORD *)(a1 + 3648) = v850;
      *v841 = v852;
    }
  }
  else if (v843)
  {
    v847 = a2[453];
    *(_QWORD *)(a1 + 3616) = v843;
    *(_QWORD *)(a1 + 3624) = v847;
    *(_QWORD *)(a1 + 3632) = a2[454];
    *(_QWORD *)(a1 + 3640) = a2[455];
    v848 = a2[457];
    *(_QWORD *)(a1 + 3648) = a2[456];
    *(_QWORD *)(a1 + 3656) = v848;
    v849 = a2[458];
    *(_BYTE *)(a1 + 3672) = *((_BYTE *)a2 + 3672);
    *(_QWORD *)(a1 + 3664) = v849;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v853 = *v842;
    v854 = *((_OWORD *)a2 + 227);
    v855 = *((_OWORD *)a2 + 228);
    *(_OWORD *)(a1 + 3657) = *(_OWORD *)((char *)a2 + 3657);
    *(_OWORD *)(a1 + 3632) = v854;
    *(_OWORD *)(a1 + 3648) = v855;
    *v841 = v853;
  }
  v856 = (_OWORD *)(a1 + 3680);
  v857 = (__int128 *)(a2 + 460);
  v858 = a2[460];
  if (*(_QWORD *)(a1 + 3680))
  {
    if (v858)
    {
      v859 = a2[461];
      *(_QWORD *)(a1 + 3680) = v858;
      *(_QWORD *)(a1 + 3688) = v859;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3696) = a2[462];
      *(_QWORD *)(a1 + 3704) = a2[463];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v860 = a2[465];
      *(_QWORD *)(a1 + 3712) = a2[464];
      *(_QWORD *)(a1 + 3720) = v860;
      swift_retain();
      swift_release();
      v861 = a2[466];
      *(_BYTE *)(a1 + 3736) = *((_BYTE *)a2 + 3736);
      *(_QWORD *)(a1 + 3728) = v861;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3680);
      v866 = *((_OWORD *)a2 + 231);
      v865 = *((_OWORD *)a2 + 232);
      v867 = *v857;
      *(_OWORD *)(a1 + 3721) = *(_OWORD *)((char *)a2 + 3721);
      *(_OWORD *)(a1 + 3696) = v866;
      *(_OWORD *)(a1 + 3712) = v865;
      *v856 = v867;
    }
  }
  else if (v858)
  {
    v862 = a2[461];
    *(_QWORD *)(a1 + 3680) = v858;
    *(_QWORD *)(a1 + 3688) = v862;
    *(_QWORD *)(a1 + 3696) = a2[462];
    *(_QWORD *)(a1 + 3704) = a2[463];
    v863 = a2[465];
    *(_QWORD *)(a1 + 3712) = a2[464];
    *(_QWORD *)(a1 + 3720) = v863;
    v864 = a2[466];
    *(_BYTE *)(a1 + 3736) = *((_BYTE *)a2 + 3736);
    *(_QWORD *)(a1 + 3728) = v864;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v868 = *v857;
    v869 = *((_OWORD *)a2 + 231);
    v870 = *((_OWORD *)a2 + 232);
    *(_OWORD *)(a1 + 3721) = *(_OWORD *)((char *)a2 + 3721);
    *(_OWORD *)(a1 + 3696) = v869;
    *(_OWORD *)(a1 + 3712) = v870;
    *v856 = v868;
  }
  v871 = (_OWORD *)(a1 + 3744);
  v872 = (__int128 *)(a2 + 468);
  v873 = a2[468];
  if (*(_QWORD *)(a1 + 3744))
  {
    if (v873)
    {
      v874 = a2[469];
      *(_QWORD *)(a1 + 3744) = v873;
      *(_QWORD *)(a1 + 3752) = v874;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3760) = a2[470];
      *(_QWORD *)(a1 + 3768) = a2[471];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v875 = a2[473];
      *(_QWORD *)(a1 + 3776) = a2[472];
      *(_QWORD *)(a1 + 3784) = v875;
      swift_retain();
      swift_release();
      v876 = a2[474];
      *(_BYTE *)(a1 + 3800) = *((_BYTE *)a2 + 3800);
      *(_QWORD *)(a1 + 3792) = v876;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3744);
      v881 = *((_OWORD *)a2 + 235);
      v880 = *((_OWORD *)a2 + 236);
      v882 = *v872;
      *(_OWORD *)(a1 + 3785) = *(_OWORD *)((char *)a2 + 3785);
      *(_OWORD *)(a1 + 3760) = v881;
      *(_OWORD *)(a1 + 3776) = v880;
      *v871 = v882;
    }
  }
  else if (v873)
  {
    v877 = a2[469];
    *(_QWORD *)(a1 + 3744) = v873;
    *(_QWORD *)(a1 + 3752) = v877;
    *(_QWORD *)(a1 + 3760) = a2[470];
    *(_QWORD *)(a1 + 3768) = a2[471];
    v878 = a2[473];
    *(_QWORD *)(a1 + 3776) = a2[472];
    *(_QWORD *)(a1 + 3784) = v878;
    v879 = a2[474];
    *(_BYTE *)(a1 + 3800) = *((_BYTE *)a2 + 3800);
    *(_QWORD *)(a1 + 3792) = v879;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v883 = *v872;
    v884 = *((_OWORD *)a2 + 235);
    v885 = *((_OWORD *)a2 + 236);
    *(_OWORD *)(a1 + 3785) = *(_OWORD *)((char *)a2 + 3785);
    *(_OWORD *)(a1 + 3760) = v884;
    *(_OWORD *)(a1 + 3776) = v885;
    *v871 = v883;
  }
  v886 = (_OWORD *)(a1 + 3808);
  v887 = a2 + 476;
  v888 = a2[476];
  if (*(_QWORD *)(a1 + 3808))
  {
    if (v888)
    {
      v889 = a2[477];
      *(_QWORD *)(a1 + 3808) = v888;
      *(_QWORD *)(a1 + 3816) = v889;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3824) = a2[478];
      *(_QWORD *)(a1 + 3832) = a2[479];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 3808);
      v891 = *((_OWORD *)a2 + 239);
      *v886 = *v887;
      *(_OWORD *)(a1 + 3824) = v891;
    }
  }
  else if (v888)
  {
    v890 = a2[477];
    *(_QWORD *)(a1 + 3808) = v888;
    *(_QWORD *)(a1 + 3816) = v890;
    *(_QWORD *)(a1 + 3824) = a2[478];
    *(_QWORD *)(a1 + 3832) = a2[479];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v892 = *((_OWORD *)a2 + 239);
    *v886 = *v887;
    *(_OWORD *)(a1 + 3824) = v892;
  }
  v893 = (_OWORD *)(a1 + 3840);
  v894 = (__int128 *)(a2 + 480);
  v895 = a2[480];
  if (*(_QWORD *)(a1 + 3840))
  {
    if (v895)
    {
      v896 = a2[481];
      *(_QWORD *)(a1 + 3840) = v895;
      *(_QWORD *)(a1 + 3848) = v896;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3856) = a2[482];
      *(_QWORD *)(a1 + 3864) = a2[483];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v897 = a2[485];
      *(_QWORD *)(a1 + 3872) = a2[484];
      *(_QWORD *)(a1 + 3880) = v897;
      swift_retain();
      swift_release();
      v898 = a2[486];
      *(_BYTE *)(a1 + 3896) = *((_BYTE *)a2 + 3896);
      *(_QWORD *)(a1 + 3888) = v898;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3840);
      v903 = *((_OWORD *)a2 + 241);
      v902 = *((_OWORD *)a2 + 242);
      v904 = *v894;
      *(_OWORD *)(a1 + 3881) = *(_OWORD *)((char *)a2 + 3881);
      *(_OWORD *)(a1 + 3856) = v903;
      *(_OWORD *)(a1 + 3872) = v902;
      *v893 = v904;
    }
  }
  else if (v895)
  {
    v899 = a2[481];
    *(_QWORD *)(a1 + 3840) = v895;
    *(_QWORD *)(a1 + 3848) = v899;
    *(_QWORD *)(a1 + 3856) = a2[482];
    *(_QWORD *)(a1 + 3864) = a2[483];
    v900 = a2[485];
    *(_QWORD *)(a1 + 3872) = a2[484];
    *(_QWORD *)(a1 + 3880) = v900;
    v901 = a2[486];
    *(_BYTE *)(a1 + 3896) = *((_BYTE *)a2 + 3896);
    *(_QWORD *)(a1 + 3888) = v901;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v905 = *v894;
    v906 = *((_OWORD *)a2 + 241);
    v907 = *((_OWORD *)a2 + 242);
    *(_OWORD *)(a1 + 3881) = *(_OWORD *)((char *)a2 + 3881);
    *(_OWORD *)(a1 + 3856) = v906;
    *(_OWORD *)(a1 + 3872) = v907;
    *v893 = v905;
  }
  v908 = (_OWORD *)(a1 + 3904);
  v909 = (__int128 *)(a2 + 488);
  v910 = a2[488];
  if (*(_QWORD *)(a1 + 3904))
  {
    if (v910)
    {
      v911 = a2[489];
      *(_QWORD *)(a1 + 3904) = v910;
      *(_QWORD *)(a1 + 3912) = v911;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3920) = a2[490];
      *(_QWORD *)(a1 + 3928) = a2[491];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v912 = a2[493];
      *(_QWORD *)(a1 + 3936) = a2[492];
      *(_QWORD *)(a1 + 3944) = v912;
      swift_retain();
      swift_release();
      v913 = a2[494];
      *(_BYTE *)(a1 + 3960) = *((_BYTE *)a2 + 3960);
      *(_QWORD *)(a1 + 3952) = v913;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3904);
      v918 = *((_OWORD *)a2 + 245);
      v917 = *((_OWORD *)a2 + 246);
      v919 = *v909;
      *(_OWORD *)(a1 + 3945) = *(_OWORD *)((char *)a2 + 3945);
      *(_OWORD *)(a1 + 3920) = v918;
      *(_OWORD *)(a1 + 3936) = v917;
      *v908 = v919;
    }
  }
  else if (v910)
  {
    v914 = a2[489];
    *(_QWORD *)(a1 + 3904) = v910;
    *(_QWORD *)(a1 + 3912) = v914;
    *(_QWORD *)(a1 + 3920) = a2[490];
    *(_QWORD *)(a1 + 3928) = a2[491];
    v915 = a2[493];
    *(_QWORD *)(a1 + 3936) = a2[492];
    *(_QWORD *)(a1 + 3944) = v915;
    v916 = a2[494];
    *(_BYTE *)(a1 + 3960) = *((_BYTE *)a2 + 3960);
    *(_QWORD *)(a1 + 3952) = v916;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v920 = *v909;
    v921 = *((_OWORD *)a2 + 245);
    v922 = *((_OWORD *)a2 + 246);
    *(_OWORD *)(a1 + 3945) = *(_OWORD *)((char *)a2 + 3945);
    *(_OWORD *)(a1 + 3920) = v921;
    *(_OWORD *)(a1 + 3936) = v922;
    *v908 = v920;
  }
  v923 = (_OWORD *)(a1 + 3968);
  v924 = (__int128 *)(a2 + 496);
  v925 = a2[496];
  if (*(_QWORD *)(a1 + 3968))
  {
    if (v925)
    {
      v926 = a2[497];
      *(_QWORD *)(a1 + 3968) = v925;
      *(_QWORD *)(a1 + 3976) = v926;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 3984) = a2[498];
      *(_QWORD *)(a1 + 3992) = a2[499];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v927 = a2[501];
      *(_QWORD *)(a1 + 4000) = a2[500];
      *(_QWORD *)(a1 + 4008) = v927;
      swift_retain();
      swift_release();
      v928 = a2[502];
      *(_BYTE *)(a1 + 4024) = *((_BYTE *)a2 + 4024);
      *(_QWORD *)(a1 + 4016) = v928;
    }
    else
    {
      sub_1AD3C2B88(a1 + 3968);
      v933 = *((_OWORD *)a2 + 249);
      v932 = *((_OWORD *)a2 + 250);
      v934 = *v924;
      *(_OWORD *)(a1 + 4009) = *(_OWORD *)((char *)a2 + 4009);
      *(_OWORD *)(a1 + 3984) = v933;
      *(_OWORD *)(a1 + 4000) = v932;
      *v923 = v934;
    }
  }
  else if (v925)
  {
    v929 = a2[497];
    *(_QWORD *)(a1 + 3968) = v925;
    *(_QWORD *)(a1 + 3976) = v929;
    *(_QWORD *)(a1 + 3984) = a2[498];
    *(_QWORD *)(a1 + 3992) = a2[499];
    v930 = a2[501];
    *(_QWORD *)(a1 + 4000) = a2[500];
    *(_QWORD *)(a1 + 4008) = v930;
    v931 = a2[502];
    *(_BYTE *)(a1 + 4024) = *((_BYTE *)a2 + 4024);
    *(_QWORD *)(a1 + 4016) = v931;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v935 = *v924;
    v936 = *((_OWORD *)a2 + 249);
    v937 = *((_OWORD *)a2 + 250);
    *(_OWORD *)(a1 + 4009) = *(_OWORD *)((char *)a2 + 4009);
    *(_OWORD *)(a1 + 3984) = v936;
    *(_OWORD *)(a1 + 4000) = v937;
    *v923 = v935;
  }
  v938 = (_OWORD *)(a1 + 4032);
  v939 = a2 + 504;
  v940 = a2[504];
  if (*(_QWORD *)(a1 + 4032))
  {
    if (v940)
    {
      v941 = a2[505];
      *(_QWORD *)(a1 + 4032) = v940;
      *(_QWORD *)(a1 + 4040) = v941;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4048) = a2[506];
      *(_QWORD *)(a1 + 4056) = a2[507];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 4032);
      v943 = *((_OWORD *)a2 + 253);
      *v938 = *v939;
      *(_OWORD *)(a1 + 4048) = v943;
    }
  }
  else if (v940)
  {
    v942 = a2[505];
    *(_QWORD *)(a1 + 4032) = v940;
    *(_QWORD *)(a1 + 4040) = v942;
    *(_QWORD *)(a1 + 4048) = a2[506];
    *(_QWORD *)(a1 + 4056) = a2[507];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v944 = *((_OWORD *)a2 + 253);
    *v938 = *v939;
    *(_OWORD *)(a1 + 4048) = v944;
  }
  v945 = (_OWORD *)(a1 + 4064);
  v946 = (__int128 *)(a2 + 508);
  v947 = a2[508];
  if (*(_QWORD *)(a1 + 4064))
  {
    if (v947)
    {
      v948 = a2[509];
      *(_QWORD *)(a1 + 4064) = v947;
      *(_QWORD *)(a1 + 4072) = v948;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4080) = a2[510];
      *(_QWORD *)(a1 + 4088) = a2[511];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v949 = a2[513];
      *(_QWORD *)(a1 + 4096) = a2[512];
      *(_QWORD *)(a1 + 4104) = v949;
      swift_retain();
      swift_release();
      v950 = a2[514];
      *(_BYTE *)(a1 + 4120) = *((_BYTE *)a2 + 4120);
      *(_QWORD *)(a1 + 4112) = v950;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4064);
      v955 = *((_OWORD *)a2 + 255);
      v954 = *((_OWORD *)a2 + 256);
      v956 = *v946;
      *(_OWORD *)(a1 + 4105) = *(_OWORD *)((char *)a2 + 4105);
      *(_OWORD *)(a1 + 4080) = v955;
      *(_OWORD *)(a1 + 4096) = v954;
      *v945 = v956;
    }
  }
  else if (v947)
  {
    v951 = a2[509];
    *(_QWORD *)(a1 + 4064) = v947;
    *(_QWORD *)(a1 + 4072) = v951;
    *(_QWORD *)(a1 + 4080) = a2[510];
    *(_QWORD *)(a1 + 4088) = a2[511];
    v952 = a2[513];
    *(_QWORD *)(a1 + 4096) = a2[512];
    *(_QWORD *)(a1 + 4104) = v952;
    v953 = a2[514];
    *(_BYTE *)(a1 + 4120) = *((_BYTE *)a2 + 4120);
    *(_QWORD *)(a1 + 4112) = v953;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v957 = *v946;
    v958 = *((_OWORD *)a2 + 255);
    v959 = *((_OWORD *)a2 + 256);
    *(_OWORD *)(a1 + 4105) = *(_OWORD *)((char *)a2 + 4105);
    *(_OWORD *)(a1 + 4080) = v958;
    *(_OWORD *)(a1 + 4096) = v959;
    *v945 = v957;
  }
  v960 = (_OWORD *)(a1 + 4128);
  v961 = (__int128 *)(a2 + 516);
  v962 = a2[516];
  if (*(_QWORD *)(a1 + 4128))
  {
    if (v962)
    {
      v963 = a2[517];
      *(_QWORD *)(a1 + 4128) = v962;
      *(_QWORD *)(a1 + 4136) = v963;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4144) = a2[518];
      *(_QWORD *)(a1 + 4152) = a2[519];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v964 = a2[521];
      *(_QWORD *)(a1 + 4160) = a2[520];
      *(_QWORD *)(a1 + 4168) = v964;
      swift_retain();
      swift_release();
      v965 = a2[522];
      *(_BYTE *)(a1 + 4184) = *((_BYTE *)a2 + 4184);
      *(_QWORD *)(a1 + 4176) = v965;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4128);
      v970 = *((_OWORD *)a2 + 259);
      v969 = *((_OWORD *)a2 + 260);
      v971 = *v961;
      *(_OWORD *)(a1 + 4169) = *(_OWORD *)((char *)a2 + 4169);
      *(_OWORD *)(a1 + 4144) = v970;
      *(_OWORD *)(a1 + 4160) = v969;
      *v960 = v971;
    }
  }
  else if (v962)
  {
    v966 = a2[517];
    *(_QWORD *)(a1 + 4128) = v962;
    *(_QWORD *)(a1 + 4136) = v966;
    *(_QWORD *)(a1 + 4144) = a2[518];
    *(_QWORD *)(a1 + 4152) = a2[519];
    v967 = a2[521];
    *(_QWORD *)(a1 + 4160) = a2[520];
    *(_QWORD *)(a1 + 4168) = v967;
    v968 = a2[522];
    *(_BYTE *)(a1 + 4184) = *((_BYTE *)a2 + 4184);
    *(_QWORD *)(a1 + 4176) = v968;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v972 = *v961;
    v973 = *((_OWORD *)a2 + 259);
    v974 = *((_OWORD *)a2 + 260);
    *(_OWORD *)(a1 + 4169) = *(_OWORD *)((char *)a2 + 4169);
    *(_OWORD *)(a1 + 4144) = v973;
    *(_OWORD *)(a1 + 4160) = v974;
    *v960 = v972;
  }
  v975 = (_OWORD *)(a1 + 4192);
  v976 = (__int128 *)(a2 + 524);
  v977 = a2[524];
  if (*(_QWORD *)(a1 + 4192))
  {
    if (v977)
    {
      v978 = a2[525];
      *(_QWORD *)(a1 + 4192) = v977;
      *(_QWORD *)(a1 + 4200) = v978;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4208) = a2[526];
      *(_QWORD *)(a1 + 4216) = a2[527];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v979 = a2[529];
      *(_QWORD *)(a1 + 4224) = a2[528];
      *(_QWORD *)(a1 + 4232) = v979;
      swift_retain();
      swift_release();
      v980 = a2[530];
      *(_BYTE *)(a1 + 4248) = *((_BYTE *)a2 + 4248);
      *(_QWORD *)(a1 + 4240) = v980;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4192);
      v985 = *((_OWORD *)a2 + 263);
      v984 = *((_OWORD *)a2 + 264);
      v986 = *v976;
      *(_OWORD *)(a1 + 4233) = *(_OWORD *)((char *)a2 + 4233);
      *(_OWORD *)(a1 + 4208) = v985;
      *(_OWORD *)(a1 + 4224) = v984;
      *v975 = v986;
    }
  }
  else if (v977)
  {
    v981 = a2[525];
    *(_QWORD *)(a1 + 4192) = v977;
    *(_QWORD *)(a1 + 4200) = v981;
    *(_QWORD *)(a1 + 4208) = a2[526];
    *(_QWORD *)(a1 + 4216) = a2[527];
    v982 = a2[529];
    *(_QWORD *)(a1 + 4224) = a2[528];
    *(_QWORD *)(a1 + 4232) = v982;
    v983 = a2[530];
    *(_BYTE *)(a1 + 4248) = *((_BYTE *)a2 + 4248);
    *(_QWORD *)(a1 + 4240) = v983;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v987 = *v976;
    v988 = *((_OWORD *)a2 + 263);
    v989 = *((_OWORD *)a2 + 264);
    *(_OWORD *)(a1 + 4233) = *(_OWORD *)((char *)a2 + 4233);
    *(_OWORD *)(a1 + 4208) = v988;
    *(_OWORD *)(a1 + 4224) = v989;
    *v975 = v987;
  }
  v990 = (_OWORD *)(a1 + 4256);
  v991 = a2 + 532;
  v992 = a2[532];
  if (*(_QWORD *)(a1 + 4256))
  {
    if (v992)
    {
      v993 = a2[533];
      *(_QWORD *)(a1 + 4256) = v992;
      *(_QWORD *)(a1 + 4264) = v993;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4272) = a2[534];
      *(_QWORD *)(a1 + 4280) = a2[535];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 4256);
      v995 = *((_OWORD *)a2 + 267);
      *v990 = *v991;
      *(_OWORD *)(a1 + 4272) = v995;
    }
  }
  else if (v992)
  {
    v994 = a2[533];
    *(_QWORD *)(a1 + 4256) = v992;
    *(_QWORD *)(a1 + 4264) = v994;
    *(_QWORD *)(a1 + 4272) = a2[534];
    *(_QWORD *)(a1 + 4280) = a2[535];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v996 = *((_OWORD *)a2 + 267);
    *v990 = *v991;
    *(_OWORD *)(a1 + 4272) = v996;
  }
  v997 = (_OWORD *)(a1 + 4288);
  v998 = (__int128 *)(a2 + 536);
  v999 = a2[536];
  if (*(_QWORD *)(a1 + 4288))
  {
    if (v999)
    {
      v1000 = a2[537];
      *(_QWORD *)(a1 + 4288) = v999;
      *(_QWORD *)(a1 + 4296) = v1000;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4304) = a2[538];
      *(_QWORD *)(a1 + 4312) = a2[539];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1001 = a2[541];
      *(_QWORD *)(a1 + 4320) = a2[540];
      *(_QWORD *)(a1 + 4328) = v1001;
      swift_retain();
      swift_release();
      v1002 = a2[542];
      *(_BYTE *)(a1 + 4344) = *((_BYTE *)a2 + 4344);
      *(_QWORD *)(a1 + 4336) = v1002;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4288);
      v1007 = *((_OWORD *)a2 + 269);
      v1006 = *((_OWORD *)a2 + 270);
      v1008 = *v998;
      *(_OWORD *)(a1 + 4329) = *(_OWORD *)((char *)a2 + 4329);
      *(_OWORD *)(a1 + 4304) = v1007;
      *(_OWORD *)(a1 + 4320) = v1006;
      *v997 = v1008;
    }
  }
  else if (v999)
  {
    v1003 = a2[537];
    *(_QWORD *)(a1 + 4288) = v999;
    *(_QWORD *)(a1 + 4296) = v1003;
    *(_QWORD *)(a1 + 4304) = a2[538];
    *(_QWORD *)(a1 + 4312) = a2[539];
    v1004 = a2[541];
    *(_QWORD *)(a1 + 4320) = a2[540];
    *(_QWORD *)(a1 + 4328) = v1004;
    v1005 = a2[542];
    *(_BYTE *)(a1 + 4344) = *((_BYTE *)a2 + 4344);
    *(_QWORD *)(a1 + 4336) = v1005;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1009 = *v998;
    v1010 = *((_OWORD *)a2 + 269);
    v1011 = *((_OWORD *)a2 + 270);
    *(_OWORD *)(a1 + 4329) = *(_OWORD *)((char *)a2 + 4329);
    *(_OWORD *)(a1 + 4304) = v1010;
    *(_OWORD *)(a1 + 4320) = v1011;
    *v997 = v1009;
  }
  v1012 = (_OWORD *)(a1 + 4352);
  v1013 = (__int128 *)(a2 + 544);
  v1014 = a2[544];
  if (*(_QWORD *)(a1 + 4352))
  {
    if (v1014)
    {
      v1015 = a2[545];
      *(_QWORD *)(a1 + 4352) = v1014;
      *(_QWORD *)(a1 + 4360) = v1015;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4368) = a2[546];
      *(_QWORD *)(a1 + 4376) = a2[547];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1016 = a2[549];
      *(_QWORD *)(a1 + 4384) = a2[548];
      *(_QWORD *)(a1 + 4392) = v1016;
      swift_retain();
      swift_release();
      v1017 = a2[550];
      *(_BYTE *)(a1 + 4408) = *((_BYTE *)a2 + 4408);
      *(_QWORD *)(a1 + 4400) = v1017;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4352);
      v1022 = *((_OWORD *)a2 + 273);
      v1021 = *((_OWORD *)a2 + 274);
      v1023 = *v1013;
      *(_OWORD *)(a1 + 4393) = *(_OWORD *)((char *)a2 + 4393);
      *(_OWORD *)(a1 + 4368) = v1022;
      *(_OWORD *)(a1 + 4384) = v1021;
      *v1012 = v1023;
    }
  }
  else if (v1014)
  {
    v1018 = a2[545];
    *(_QWORD *)(a1 + 4352) = v1014;
    *(_QWORD *)(a1 + 4360) = v1018;
    *(_QWORD *)(a1 + 4368) = a2[546];
    *(_QWORD *)(a1 + 4376) = a2[547];
    v1019 = a2[549];
    *(_QWORD *)(a1 + 4384) = a2[548];
    *(_QWORD *)(a1 + 4392) = v1019;
    v1020 = a2[550];
    *(_BYTE *)(a1 + 4408) = *((_BYTE *)a2 + 4408);
    *(_QWORD *)(a1 + 4400) = v1020;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1024 = *v1013;
    v1025 = *((_OWORD *)a2 + 273);
    v1026 = *((_OWORD *)a2 + 274);
    *(_OWORD *)(a1 + 4393) = *(_OWORD *)((char *)a2 + 4393);
    *(_OWORD *)(a1 + 4368) = v1025;
    *(_OWORD *)(a1 + 4384) = v1026;
    *v1012 = v1024;
  }
  v1027 = (_OWORD *)(a1 + 4416);
  v1028 = (__int128 *)(a2 + 552);
  v1029 = a2[552];
  if (*(_QWORD *)(a1 + 4416))
  {
    if (v1029)
    {
      v1030 = a2[553];
      *(_QWORD *)(a1 + 4416) = v1029;
      *(_QWORD *)(a1 + 4424) = v1030;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4432) = a2[554];
      *(_QWORD *)(a1 + 4440) = a2[555];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1031 = a2[557];
      *(_QWORD *)(a1 + 4448) = a2[556];
      *(_QWORD *)(a1 + 4456) = v1031;
      swift_retain();
      swift_release();
      v1032 = a2[558];
      *(_BYTE *)(a1 + 4472) = *((_BYTE *)a2 + 4472);
      *(_QWORD *)(a1 + 4464) = v1032;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4416);
      v1037 = *((_OWORD *)a2 + 277);
      v1036 = *((_OWORD *)a2 + 278);
      v1038 = *v1028;
      *(_OWORD *)(a1 + 4457) = *(_OWORD *)((char *)a2 + 4457);
      *(_OWORD *)(a1 + 4432) = v1037;
      *(_OWORD *)(a1 + 4448) = v1036;
      *v1027 = v1038;
    }
  }
  else if (v1029)
  {
    v1033 = a2[553];
    *(_QWORD *)(a1 + 4416) = v1029;
    *(_QWORD *)(a1 + 4424) = v1033;
    *(_QWORD *)(a1 + 4432) = a2[554];
    *(_QWORD *)(a1 + 4440) = a2[555];
    v1034 = a2[557];
    *(_QWORD *)(a1 + 4448) = a2[556];
    *(_QWORD *)(a1 + 4456) = v1034;
    v1035 = a2[558];
    *(_BYTE *)(a1 + 4472) = *((_BYTE *)a2 + 4472);
    *(_QWORD *)(a1 + 4464) = v1035;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1039 = *v1028;
    v1040 = *((_OWORD *)a2 + 277);
    v1041 = *((_OWORD *)a2 + 278);
    *(_OWORD *)(a1 + 4457) = *(_OWORD *)((char *)a2 + 4457);
    *(_OWORD *)(a1 + 4432) = v1040;
    *(_OWORD *)(a1 + 4448) = v1041;
    *v1027 = v1039;
  }
  v1042 = (_OWORD *)(a1 + 4480);
  v1043 = a2 + 560;
  v1044 = a2[560];
  if (*(_QWORD *)(a1 + 4480))
  {
    if (v1044)
    {
      v1045 = a2[561];
      *(_QWORD *)(a1 + 4480) = v1044;
      *(_QWORD *)(a1 + 4488) = v1045;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4496) = a2[562];
      *(_QWORD *)(a1 + 4504) = a2[563];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 4480);
      v1047 = *((_OWORD *)a2 + 281);
      *v1042 = *v1043;
      *(_OWORD *)(a1 + 4496) = v1047;
    }
  }
  else if (v1044)
  {
    v1046 = a2[561];
    *(_QWORD *)(a1 + 4480) = v1044;
    *(_QWORD *)(a1 + 4488) = v1046;
    *(_QWORD *)(a1 + 4496) = a2[562];
    *(_QWORD *)(a1 + 4504) = a2[563];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1048 = *((_OWORD *)a2 + 281);
    *v1042 = *v1043;
    *(_OWORD *)(a1 + 4496) = v1048;
  }
  v1049 = (_OWORD *)(a1 + 4512);
  v1050 = (__int128 *)(a2 + 564);
  v1051 = a2[564];
  if (*(_QWORD *)(a1 + 4512))
  {
    if (v1051)
    {
      v1052 = a2[565];
      *(_QWORD *)(a1 + 4512) = v1051;
      *(_QWORD *)(a1 + 4520) = v1052;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4528) = a2[566];
      *(_QWORD *)(a1 + 4536) = a2[567];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1053 = a2[569];
      *(_QWORD *)(a1 + 4544) = a2[568];
      *(_QWORD *)(a1 + 4552) = v1053;
      swift_retain();
      swift_release();
      v1054 = a2[570];
      *(_BYTE *)(a1 + 4568) = *((_BYTE *)a2 + 4568);
      *(_QWORD *)(a1 + 4560) = v1054;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4512);
      v1059 = *((_OWORD *)a2 + 283);
      v1058 = *((_OWORD *)a2 + 284);
      v1060 = *v1050;
      *(_OWORD *)(a1 + 4553) = *(_OWORD *)((char *)a2 + 4553);
      *(_OWORD *)(a1 + 4528) = v1059;
      *(_OWORD *)(a1 + 4544) = v1058;
      *v1049 = v1060;
    }
  }
  else if (v1051)
  {
    v1055 = a2[565];
    *(_QWORD *)(a1 + 4512) = v1051;
    *(_QWORD *)(a1 + 4520) = v1055;
    *(_QWORD *)(a1 + 4528) = a2[566];
    *(_QWORD *)(a1 + 4536) = a2[567];
    v1056 = a2[569];
    *(_QWORD *)(a1 + 4544) = a2[568];
    *(_QWORD *)(a1 + 4552) = v1056;
    v1057 = a2[570];
    *(_BYTE *)(a1 + 4568) = *((_BYTE *)a2 + 4568);
    *(_QWORD *)(a1 + 4560) = v1057;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1061 = *v1050;
    v1062 = *((_OWORD *)a2 + 283);
    v1063 = *((_OWORD *)a2 + 284);
    *(_OWORD *)(a1 + 4553) = *(_OWORD *)((char *)a2 + 4553);
    *(_OWORD *)(a1 + 4528) = v1062;
    *(_OWORD *)(a1 + 4544) = v1063;
    *v1049 = v1061;
  }
  v1064 = (_OWORD *)(a1 + 4576);
  v1065 = (__int128 *)(a2 + 572);
  v1066 = a2[572];
  if (*(_QWORD *)(a1 + 4576))
  {
    if (v1066)
    {
      v1067 = a2[573];
      *(_QWORD *)(a1 + 4576) = v1066;
      *(_QWORD *)(a1 + 4584) = v1067;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4592) = a2[574];
      *(_QWORD *)(a1 + 4600) = a2[575];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1068 = a2[577];
      *(_QWORD *)(a1 + 4608) = a2[576];
      *(_QWORD *)(a1 + 4616) = v1068;
      swift_retain();
      swift_release();
      v1069 = a2[578];
      *(_BYTE *)(a1 + 4632) = *((_BYTE *)a2 + 4632);
      *(_QWORD *)(a1 + 4624) = v1069;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4576);
      v1074 = *((_OWORD *)a2 + 287);
      v1073 = *((_OWORD *)a2 + 288);
      v1075 = *v1065;
      *(_OWORD *)(a1 + 4617) = *(_OWORD *)((char *)a2 + 4617);
      *(_OWORD *)(a1 + 4592) = v1074;
      *(_OWORD *)(a1 + 4608) = v1073;
      *v1064 = v1075;
    }
  }
  else if (v1066)
  {
    v1070 = a2[573];
    *(_QWORD *)(a1 + 4576) = v1066;
    *(_QWORD *)(a1 + 4584) = v1070;
    *(_QWORD *)(a1 + 4592) = a2[574];
    *(_QWORD *)(a1 + 4600) = a2[575];
    v1071 = a2[577];
    *(_QWORD *)(a1 + 4608) = a2[576];
    *(_QWORD *)(a1 + 4616) = v1071;
    v1072 = a2[578];
    *(_BYTE *)(a1 + 4632) = *((_BYTE *)a2 + 4632);
    *(_QWORD *)(a1 + 4624) = v1072;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1076 = *v1065;
    v1077 = *((_OWORD *)a2 + 287);
    v1078 = *((_OWORD *)a2 + 288);
    *(_OWORD *)(a1 + 4617) = *(_OWORD *)((char *)a2 + 4617);
    *(_OWORD *)(a1 + 4592) = v1077;
    *(_OWORD *)(a1 + 4608) = v1078;
    *v1064 = v1076;
  }
  v1079 = (_OWORD *)(a1 + 4640);
  v1080 = (__int128 *)(a2 + 580);
  v1081 = a2[580];
  if (*(_QWORD *)(a1 + 4640))
  {
    if (v1081)
    {
      v1082 = a2[581];
      *(_QWORD *)(a1 + 4640) = v1081;
      *(_QWORD *)(a1 + 4648) = v1082;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4656) = a2[582];
      *(_QWORD *)(a1 + 4664) = a2[583];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1083 = a2[585];
      *(_QWORD *)(a1 + 4672) = a2[584];
      *(_QWORD *)(a1 + 4680) = v1083;
      swift_retain();
      swift_release();
      v1084 = a2[586];
      *(_BYTE *)(a1 + 4696) = *((_BYTE *)a2 + 4696);
      *(_QWORD *)(a1 + 4688) = v1084;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4640);
      v1089 = *((_OWORD *)a2 + 291);
      v1088 = *((_OWORD *)a2 + 292);
      v1090 = *v1080;
      *(_OWORD *)(a1 + 4681) = *(_OWORD *)((char *)a2 + 4681);
      *(_OWORD *)(a1 + 4656) = v1089;
      *(_OWORD *)(a1 + 4672) = v1088;
      *v1079 = v1090;
    }
  }
  else if (v1081)
  {
    v1085 = a2[581];
    *(_QWORD *)(a1 + 4640) = v1081;
    *(_QWORD *)(a1 + 4648) = v1085;
    *(_QWORD *)(a1 + 4656) = a2[582];
    *(_QWORD *)(a1 + 4664) = a2[583];
    v1086 = a2[585];
    *(_QWORD *)(a1 + 4672) = a2[584];
    *(_QWORD *)(a1 + 4680) = v1086;
    v1087 = a2[586];
    *(_BYTE *)(a1 + 4696) = *((_BYTE *)a2 + 4696);
    *(_QWORD *)(a1 + 4688) = v1087;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1091 = *v1080;
    v1092 = *((_OWORD *)a2 + 291);
    v1093 = *((_OWORD *)a2 + 292);
    *(_OWORD *)(a1 + 4681) = *(_OWORD *)((char *)a2 + 4681);
    *(_OWORD *)(a1 + 4656) = v1092;
    *(_OWORD *)(a1 + 4672) = v1093;
    *v1079 = v1091;
  }
  v1094 = (_OWORD *)(a1 + 4704);
  v1095 = a2 + 588;
  v1096 = a2[588];
  if (*(_QWORD *)(a1 + 4704))
  {
    if (v1096)
    {
      v1097 = a2[589];
      *(_QWORD *)(a1 + 4704) = v1096;
      *(_QWORD *)(a1 + 4712) = v1097;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4720) = a2[590];
      *(_QWORD *)(a1 + 4728) = a2[591];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 4704);
      v1099 = *((_OWORD *)a2 + 295);
      *v1094 = *v1095;
      *(_OWORD *)(a1 + 4720) = v1099;
    }
  }
  else if (v1096)
  {
    v1098 = a2[589];
    *(_QWORD *)(a1 + 4704) = v1096;
    *(_QWORD *)(a1 + 4712) = v1098;
    *(_QWORD *)(a1 + 4720) = a2[590];
    *(_QWORD *)(a1 + 4728) = a2[591];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1100 = *((_OWORD *)a2 + 295);
    *v1094 = *v1095;
    *(_OWORD *)(a1 + 4720) = v1100;
  }
  v1101 = (_OWORD *)(a1 + 4736);
  v1102 = (__int128 *)(a2 + 592);
  v1103 = a2[592];
  if (*(_QWORD *)(a1 + 4736))
  {
    if (v1103)
    {
      v1104 = a2[593];
      *(_QWORD *)(a1 + 4736) = v1103;
      *(_QWORD *)(a1 + 4744) = v1104;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4752) = a2[594];
      *(_QWORD *)(a1 + 4760) = a2[595];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1105 = a2[597];
      *(_QWORD *)(a1 + 4768) = a2[596];
      *(_QWORD *)(a1 + 4776) = v1105;
      swift_retain();
      swift_release();
      v1106 = a2[598];
      *(_BYTE *)(a1 + 4792) = *((_BYTE *)a2 + 4792);
      *(_QWORD *)(a1 + 4784) = v1106;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4736);
      v1111 = *((_OWORD *)a2 + 297);
      v1110 = *((_OWORD *)a2 + 298);
      v1112 = *v1102;
      *(_OWORD *)(a1 + 4777) = *(_OWORD *)((char *)a2 + 4777);
      *(_OWORD *)(a1 + 4752) = v1111;
      *(_OWORD *)(a1 + 4768) = v1110;
      *v1101 = v1112;
    }
  }
  else if (v1103)
  {
    v1107 = a2[593];
    *(_QWORD *)(a1 + 4736) = v1103;
    *(_QWORD *)(a1 + 4744) = v1107;
    *(_QWORD *)(a1 + 4752) = a2[594];
    *(_QWORD *)(a1 + 4760) = a2[595];
    v1108 = a2[597];
    *(_QWORD *)(a1 + 4768) = a2[596];
    *(_QWORD *)(a1 + 4776) = v1108;
    v1109 = a2[598];
    *(_BYTE *)(a1 + 4792) = *((_BYTE *)a2 + 4792);
    *(_QWORD *)(a1 + 4784) = v1109;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1113 = *v1102;
    v1114 = *((_OWORD *)a2 + 297);
    v1115 = *((_OWORD *)a2 + 298);
    *(_OWORD *)(a1 + 4777) = *(_OWORD *)((char *)a2 + 4777);
    *(_OWORD *)(a1 + 4752) = v1114;
    *(_OWORD *)(a1 + 4768) = v1115;
    *v1101 = v1113;
  }
  v1116 = (_OWORD *)(a1 + 4800);
  v1117 = (__int128 *)(a2 + 600);
  v1118 = a2[600];
  if (*(_QWORD *)(a1 + 4800))
  {
    if (v1118)
    {
      v1119 = a2[601];
      *(_QWORD *)(a1 + 4800) = v1118;
      *(_QWORD *)(a1 + 4808) = v1119;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4816) = a2[602];
      *(_QWORD *)(a1 + 4824) = a2[603];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1120 = a2[605];
      *(_QWORD *)(a1 + 4832) = a2[604];
      *(_QWORD *)(a1 + 4840) = v1120;
      swift_retain();
      swift_release();
      v1121 = a2[606];
      *(_BYTE *)(a1 + 4856) = *((_BYTE *)a2 + 4856);
      *(_QWORD *)(a1 + 4848) = v1121;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4800);
      v1126 = *((_OWORD *)a2 + 301);
      v1125 = *((_OWORD *)a2 + 302);
      v1127 = *v1117;
      *(_OWORD *)(a1 + 4841) = *(_OWORD *)((char *)a2 + 4841);
      *(_OWORD *)(a1 + 4816) = v1126;
      *(_OWORD *)(a1 + 4832) = v1125;
      *v1116 = v1127;
    }
  }
  else if (v1118)
  {
    v1122 = a2[601];
    *(_QWORD *)(a1 + 4800) = v1118;
    *(_QWORD *)(a1 + 4808) = v1122;
    *(_QWORD *)(a1 + 4816) = a2[602];
    *(_QWORD *)(a1 + 4824) = a2[603];
    v1123 = a2[605];
    *(_QWORD *)(a1 + 4832) = a2[604];
    *(_QWORD *)(a1 + 4840) = v1123;
    v1124 = a2[606];
    *(_BYTE *)(a1 + 4856) = *((_BYTE *)a2 + 4856);
    *(_QWORD *)(a1 + 4848) = v1124;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1128 = *v1117;
    v1129 = *((_OWORD *)a2 + 301);
    v1130 = *((_OWORD *)a2 + 302);
    *(_OWORD *)(a1 + 4841) = *(_OWORD *)((char *)a2 + 4841);
    *(_OWORD *)(a1 + 4816) = v1129;
    *(_OWORD *)(a1 + 4832) = v1130;
    *v1116 = v1128;
  }
  v1131 = (_OWORD *)(a1 + 4864);
  v1132 = (__int128 *)(a2 + 608);
  v1133 = a2[608];
  if (*(_QWORD *)(a1 + 4864))
  {
    if (v1133)
    {
      v1134 = a2[609];
      *(_QWORD *)(a1 + 4864) = v1133;
      *(_QWORD *)(a1 + 4872) = v1134;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4880) = a2[610];
      *(_QWORD *)(a1 + 4888) = a2[611];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1135 = a2[613];
      *(_QWORD *)(a1 + 4896) = a2[612];
      *(_QWORD *)(a1 + 4904) = v1135;
      swift_retain();
      swift_release();
      v1136 = a2[614];
      *(_BYTE *)(a1 + 4920) = *((_BYTE *)a2 + 4920);
      *(_QWORD *)(a1 + 4912) = v1136;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4864);
      v1141 = *((_OWORD *)a2 + 305);
      v1140 = *((_OWORD *)a2 + 306);
      v1142 = *v1132;
      *(_OWORD *)(a1 + 4905) = *(_OWORD *)((char *)a2 + 4905);
      *(_OWORD *)(a1 + 4880) = v1141;
      *(_OWORD *)(a1 + 4896) = v1140;
      *v1131 = v1142;
    }
  }
  else if (v1133)
  {
    v1137 = a2[609];
    *(_QWORD *)(a1 + 4864) = v1133;
    *(_QWORD *)(a1 + 4872) = v1137;
    *(_QWORD *)(a1 + 4880) = a2[610];
    *(_QWORD *)(a1 + 4888) = a2[611];
    v1138 = a2[613];
    *(_QWORD *)(a1 + 4896) = a2[612];
    *(_QWORD *)(a1 + 4904) = v1138;
    v1139 = a2[614];
    *(_BYTE *)(a1 + 4920) = *((_BYTE *)a2 + 4920);
    *(_QWORD *)(a1 + 4912) = v1139;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1143 = *v1132;
    v1144 = *((_OWORD *)a2 + 305);
    v1145 = *((_OWORD *)a2 + 306);
    *(_OWORD *)(a1 + 4905) = *(_OWORD *)((char *)a2 + 4905);
    *(_OWORD *)(a1 + 4880) = v1144;
    *(_OWORD *)(a1 + 4896) = v1145;
    *v1131 = v1143;
  }
  v1146 = (_OWORD *)(a1 + 4928);
  v1147 = a2 + 616;
  v1148 = a2[616];
  if (*(_QWORD *)(a1 + 4928))
  {
    if (v1148)
    {
      v1149 = a2[617];
      *(_QWORD *)(a1 + 4928) = v1148;
      *(_QWORD *)(a1 + 4936) = v1149;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4944) = a2[618];
      *(_QWORD *)(a1 + 4952) = a2[619];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 4928);
      v1151 = *((_OWORD *)a2 + 309);
      *v1146 = *v1147;
      *(_OWORD *)(a1 + 4944) = v1151;
    }
  }
  else if (v1148)
  {
    v1150 = a2[617];
    *(_QWORD *)(a1 + 4928) = v1148;
    *(_QWORD *)(a1 + 4936) = v1150;
    *(_QWORD *)(a1 + 4944) = a2[618];
    *(_QWORD *)(a1 + 4952) = a2[619];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1152 = *((_OWORD *)a2 + 309);
    *v1146 = *v1147;
    *(_OWORD *)(a1 + 4944) = v1152;
  }
  v1153 = (_OWORD *)(a1 + 4960);
  v1154 = (__int128 *)(a2 + 620);
  v1155 = a2[620];
  if (*(_QWORD *)(a1 + 4960))
  {
    if (v1155)
    {
      v1156 = a2[621];
      *(_QWORD *)(a1 + 4960) = v1155;
      *(_QWORD *)(a1 + 4968) = v1156;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 4976) = a2[622];
      *(_QWORD *)(a1 + 4984) = a2[623];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1157 = a2[625];
      *(_QWORD *)(a1 + 4992) = a2[624];
      *(_QWORD *)(a1 + 5000) = v1157;
      swift_retain();
      swift_release();
      v1158 = a2[626];
      *(_BYTE *)(a1 + 5016) = *((_BYTE *)a2 + 5016);
      *(_QWORD *)(a1 + 5008) = v1158;
    }
    else
    {
      sub_1AD3C2B88(a1 + 4960);
      v1163 = *((_OWORD *)a2 + 311);
      v1162 = *((_OWORD *)a2 + 312);
      v1164 = *v1154;
      *(_OWORD *)(a1 + 5001) = *(_OWORD *)((char *)a2 + 5001);
      *(_OWORD *)(a1 + 4976) = v1163;
      *(_OWORD *)(a1 + 4992) = v1162;
      *v1153 = v1164;
    }
  }
  else if (v1155)
  {
    v1159 = a2[621];
    *(_QWORD *)(a1 + 4960) = v1155;
    *(_QWORD *)(a1 + 4968) = v1159;
    *(_QWORD *)(a1 + 4976) = a2[622];
    *(_QWORD *)(a1 + 4984) = a2[623];
    v1160 = a2[625];
    *(_QWORD *)(a1 + 4992) = a2[624];
    *(_QWORD *)(a1 + 5000) = v1160;
    v1161 = a2[626];
    *(_BYTE *)(a1 + 5016) = *((_BYTE *)a2 + 5016);
    *(_QWORD *)(a1 + 5008) = v1161;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1165 = *v1154;
    v1166 = *((_OWORD *)a2 + 311);
    v1167 = *((_OWORD *)a2 + 312);
    *(_OWORD *)(a1 + 5001) = *(_OWORD *)((char *)a2 + 5001);
    *(_OWORD *)(a1 + 4976) = v1166;
    *(_OWORD *)(a1 + 4992) = v1167;
    *v1153 = v1165;
  }
  v1168 = (_OWORD *)(a1 + 5024);
  v1169 = (__int128 *)(a2 + 628);
  v1170 = a2[628];
  if (*(_QWORD *)(a1 + 5024))
  {
    if (v1170)
    {
      v1171 = a2[629];
      *(_QWORD *)(a1 + 5024) = v1170;
      *(_QWORD *)(a1 + 5032) = v1171;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5040) = a2[630];
      *(_QWORD *)(a1 + 5048) = a2[631];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1172 = a2[633];
      *(_QWORD *)(a1 + 5056) = a2[632];
      *(_QWORD *)(a1 + 5064) = v1172;
      swift_retain();
      swift_release();
      v1173 = a2[634];
      *(_BYTE *)(a1 + 5080) = *((_BYTE *)a2 + 5080);
      *(_QWORD *)(a1 + 5072) = v1173;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5024);
      v1178 = *((_OWORD *)a2 + 315);
      v1177 = *((_OWORD *)a2 + 316);
      v1179 = *v1169;
      *(_OWORD *)(a1 + 5065) = *(_OWORD *)((char *)a2 + 5065);
      *(_OWORD *)(a1 + 5040) = v1178;
      *(_OWORD *)(a1 + 5056) = v1177;
      *v1168 = v1179;
    }
  }
  else if (v1170)
  {
    v1174 = a2[629];
    *(_QWORD *)(a1 + 5024) = v1170;
    *(_QWORD *)(a1 + 5032) = v1174;
    *(_QWORD *)(a1 + 5040) = a2[630];
    *(_QWORD *)(a1 + 5048) = a2[631];
    v1175 = a2[633];
    *(_QWORD *)(a1 + 5056) = a2[632];
    *(_QWORD *)(a1 + 5064) = v1175;
    v1176 = a2[634];
    *(_BYTE *)(a1 + 5080) = *((_BYTE *)a2 + 5080);
    *(_QWORD *)(a1 + 5072) = v1176;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1180 = *v1169;
    v1181 = *((_OWORD *)a2 + 315);
    v1182 = *((_OWORD *)a2 + 316);
    *(_OWORD *)(a1 + 5065) = *(_OWORD *)((char *)a2 + 5065);
    *(_OWORD *)(a1 + 5040) = v1181;
    *(_OWORD *)(a1 + 5056) = v1182;
    *v1168 = v1180;
  }
  v1183 = (_OWORD *)(a1 + 5088);
  v1184 = (__int128 *)(a2 + 636);
  v1185 = a2[636];
  if (*(_QWORD *)(a1 + 5088))
  {
    if (v1185)
    {
      v1186 = a2[637];
      *(_QWORD *)(a1 + 5088) = v1185;
      *(_QWORD *)(a1 + 5096) = v1186;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5104) = a2[638];
      *(_QWORD *)(a1 + 5112) = a2[639];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1187 = a2[641];
      *(_QWORD *)(a1 + 5120) = a2[640];
      *(_QWORD *)(a1 + 5128) = v1187;
      swift_retain();
      swift_release();
      v1188 = a2[642];
      *(_BYTE *)(a1 + 5144) = *((_BYTE *)a2 + 5144);
      *(_QWORD *)(a1 + 5136) = v1188;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5088);
      v1193 = *((_OWORD *)a2 + 319);
      v1192 = *((_OWORD *)a2 + 320);
      v1194 = *v1184;
      *(_OWORD *)(a1 + 5129) = *(_OWORD *)((char *)a2 + 5129);
      *(_OWORD *)(a1 + 5104) = v1193;
      *(_OWORD *)(a1 + 5120) = v1192;
      *v1183 = v1194;
    }
  }
  else if (v1185)
  {
    v1189 = a2[637];
    *(_QWORD *)(a1 + 5088) = v1185;
    *(_QWORD *)(a1 + 5096) = v1189;
    *(_QWORD *)(a1 + 5104) = a2[638];
    *(_QWORD *)(a1 + 5112) = a2[639];
    v1190 = a2[641];
    *(_QWORD *)(a1 + 5120) = a2[640];
    *(_QWORD *)(a1 + 5128) = v1190;
    v1191 = a2[642];
    *(_BYTE *)(a1 + 5144) = *((_BYTE *)a2 + 5144);
    *(_QWORD *)(a1 + 5136) = v1191;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1195 = *v1184;
    v1196 = *((_OWORD *)a2 + 319);
    v1197 = *((_OWORD *)a2 + 320);
    *(_OWORD *)(a1 + 5129) = *(_OWORD *)((char *)a2 + 5129);
    *(_OWORD *)(a1 + 5104) = v1196;
    *(_OWORD *)(a1 + 5120) = v1197;
    *v1183 = v1195;
  }
  v1198 = (_OWORD *)(a1 + 5152);
  v1199 = a2 + 644;
  v1200 = a2[644];
  if (*(_QWORD *)(a1 + 5152))
  {
    if (v1200)
    {
      v1201 = a2[645];
      *(_QWORD *)(a1 + 5152) = v1200;
      *(_QWORD *)(a1 + 5160) = v1201;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5168) = a2[646];
      *(_QWORD *)(a1 + 5176) = a2[647];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 5152);
      v1203 = *((_OWORD *)a2 + 323);
      *v1198 = *v1199;
      *(_OWORD *)(a1 + 5168) = v1203;
    }
  }
  else if (v1200)
  {
    v1202 = a2[645];
    *(_QWORD *)(a1 + 5152) = v1200;
    *(_QWORD *)(a1 + 5160) = v1202;
    *(_QWORD *)(a1 + 5168) = a2[646];
    *(_QWORD *)(a1 + 5176) = a2[647];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1204 = *((_OWORD *)a2 + 323);
    *v1198 = *v1199;
    *(_OWORD *)(a1 + 5168) = v1204;
  }
  v1205 = (_OWORD *)(a1 + 5184);
  v1206 = (__int128 *)(a2 + 648);
  v1207 = a2[648];
  if (*(_QWORD *)(a1 + 5184))
  {
    if (v1207)
    {
      v1208 = a2[649];
      *(_QWORD *)(a1 + 5184) = v1207;
      *(_QWORD *)(a1 + 5192) = v1208;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5200) = a2[650];
      *(_QWORD *)(a1 + 5208) = a2[651];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1209 = a2[653];
      *(_QWORD *)(a1 + 5216) = a2[652];
      *(_QWORD *)(a1 + 5224) = v1209;
      swift_retain();
      swift_release();
      v1210 = a2[654];
      *(_BYTE *)(a1 + 5240) = *((_BYTE *)a2 + 5240);
      *(_QWORD *)(a1 + 5232) = v1210;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5184);
      v1215 = *((_OWORD *)a2 + 325);
      v1214 = *((_OWORD *)a2 + 326);
      v1216 = *v1206;
      *(_OWORD *)(a1 + 5225) = *(_OWORD *)((char *)a2 + 5225);
      *(_OWORD *)(a1 + 5200) = v1215;
      *(_OWORD *)(a1 + 5216) = v1214;
      *v1205 = v1216;
    }
  }
  else if (v1207)
  {
    v1211 = a2[649];
    *(_QWORD *)(a1 + 5184) = v1207;
    *(_QWORD *)(a1 + 5192) = v1211;
    *(_QWORD *)(a1 + 5200) = a2[650];
    *(_QWORD *)(a1 + 5208) = a2[651];
    v1212 = a2[653];
    *(_QWORD *)(a1 + 5216) = a2[652];
    *(_QWORD *)(a1 + 5224) = v1212;
    v1213 = a2[654];
    *(_BYTE *)(a1 + 5240) = *((_BYTE *)a2 + 5240);
    *(_QWORD *)(a1 + 5232) = v1213;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1217 = *v1206;
    v1218 = *((_OWORD *)a2 + 325);
    v1219 = *((_OWORD *)a2 + 326);
    *(_OWORD *)(a1 + 5225) = *(_OWORD *)((char *)a2 + 5225);
    *(_OWORD *)(a1 + 5200) = v1218;
    *(_OWORD *)(a1 + 5216) = v1219;
    *v1205 = v1217;
  }
  v1220 = (_OWORD *)(a1 + 5248);
  v1221 = (__int128 *)(a2 + 656);
  v1222 = a2[656];
  if (*(_QWORD *)(a1 + 5248))
  {
    if (v1222)
    {
      v1223 = a2[657];
      *(_QWORD *)(a1 + 5248) = v1222;
      *(_QWORD *)(a1 + 5256) = v1223;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5264) = a2[658];
      *(_QWORD *)(a1 + 5272) = a2[659];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1224 = a2[661];
      *(_QWORD *)(a1 + 5280) = a2[660];
      *(_QWORD *)(a1 + 5288) = v1224;
      swift_retain();
      swift_release();
      v1225 = a2[662];
      *(_BYTE *)(a1 + 5304) = *((_BYTE *)a2 + 5304);
      *(_QWORD *)(a1 + 5296) = v1225;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5248);
      v1230 = *((_OWORD *)a2 + 329);
      v1229 = *((_OWORD *)a2 + 330);
      v1231 = *v1221;
      *(_OWORD *)(a1 + 5289) = *(_OWORD *)((char *)a2 + 5289);
      *(_OWORD *)(a1 + 5264) = v1230;
      *(_OWORD *)(a1 + 5280) = v1229;
      *v1220 = v1231;
    }
  }
  else if (v1222)
  {
    v1226 = a2[657];
    *(_QWORD *)(a1 + 5248) = v1222;
    *(_QWORD *)(a1 + 5256) = v1226;
    *(_QWORD *)(a1 + 5264) = a2[658];
    *(_QWORD *)(a1 + 5272) = a2[659];
    v1227 = a2[661];
    *(_QWORD *)(a1 + 5280) = a2[660];
    *(_QWORD *)(a1 + 5288) = v1227;
    v1228 = a2[662];
    *(_BYTE *)(a1 + 5304) = *((_BYTE *)a2 + 5304);
    *(_QWORD *)(a1 + 5296) = v1228;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1232 = *v1221;
    v1233 = *((_OWORD *)a2 + 329);
    v1234 = *((_OWORD *)a2 + 330);
    *(_OWORD *)(a1 + 5289) = *(_OWORD *)((char *)a2 + 5289);
    *(_OWORD *)(a1 + 5264) = v1233;
    *(_OWORD *)(a1 + 5280) = v1234;
    *v1220 = v1232;
  }
  v1235 = (_OWORD *)(a1 + 5312);
  v1236 = (__int128 *)(a2 + 664);
  v1237 = a2[664];
  if (*(_QWORD *)(a1 + 5312))
  {
    if (v1237)
    {
      v1238 = a2[665];
      *(_QWORD *)(a1 + 5312) = v1237;
      *(_QWORD *)(a1 + 5320) = v1238;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5328) = a2[666];
      *(_QWORD *)(a1 + 5336) = a2[667];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1239 = a2[669];
      *(_QWORD *)(a1 + 5344) = a2[668];
      *(_QWORD *)(a1 + 5352) = v1239;
      swift_retain();
      swift_release();
      v1240 = a2[670];
      *(_BYTE *)(a1 + 5368) = *((_BYTE *)a2 + 5368);
      *(_QWORD *)(a1 + 5360) = v1240;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5312);
      v1245 = *((_OWORD *)a2 + 333);
      v1244 = *((_OWORD *)a2 + 334);
      v1246 = *v1236;
      *(_OWORD *)(a1 + 5353) = *(_OWORD *)((char *)a2 + 5353);
      *(_OWORD *)(a1 + 5328) = v1245;
      *(_OWORD *)(a1 + 5344) = v1244;
      *v1235 = v1246;
    }
  }
  else if (v1237)
  {
    v1241 = a2[665];
    *(_QWORD *)(a1 + 5312) = v1237;
    *(_QWORD *)(a1 + 5320) = v1241;
    *(_QWORD *)(a1 + 5328) = a2[666];
    *(_QWORD *)(a1 + 5336) = a2[667];
    v1242 = a2[669];
    *(_QWORD *)(a1 + 5344) = a2[668];
    *(_QWORD *)(a1 + 5352) = v1242;
    v1243 = a2[670];
    *(_BYTE *)(a1 + 5368) = *((_BYTE *)a2 + 5368);
    *(_QWORD *)(a1 + 5360) = v1243;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1247 = *v1236;
    v1248 = *((_OWORD *)a2 + 333);
    v1249 = *((_OWORD *)a2 + 334);
    *(_OWORD *)(a1 + 5353) = *(_OWORD *)((char *)a2 + 5353);
    *(_OWORD *)(a1 + 5328) = v1248;
    *(_OWORD *)(a1 + 5344) = v1249;
    *v1235 = v1247;
  }
  v1250 = (_OWORD *)(a1 + 5376);
  v1251 = a2 + 672;
  v1252 = a2[672];
  if (*(_QWORD *)(a1 + 5376))
  {
    if (v1252)
    {
      v1253 = a2[673];
      *(_QWORD *)(a1 + 5376) = v1252;
      *(_QWORD *)(a1 + 5384) = v1253;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5392) = a2[674];
      *(_QWORD *)(a1 + 5400) = a2[675];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 5376);
      v1255 = *((_OWORD *)a2 + 337);
      *v1250 = *v1251;
      *(_OWORD *)(a1 + 5392) = v1255;
    }
  }
  else if (v1252)
  {
    v1254 = a2[673];
    *(_QWORD *)(a1 + 5376) = v1252;
    *(_QWORD *)(a1 + 5384) = v1254;
    *(_QWORD *)(a1 + 5392) = a2[674];
    *(_QWORD *)(a1 + 5400) = a2[675];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1256 = *((_OWORD *)a2 + 337);
    *v1250 = *v1251;
    *(_OWORD *)(a1 + 5392) = v1256;
  }
  v1257 = (_OWORD *)(a1 + 5408);
  v1258 = (__int128 *)(a2 + 676);
  v1259 = a2[676];
  if (*(_QWORD *)(a1 + 5408))
  {
    if (v1259)
    {
      v1260 = a2[677];
      *(_QWORD *)(a1 + 5408) = v1259;
      *(_QWORD *)(a1 + 5416) = v1260;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5424) = a2[678];
      *(_QWORD *)(a1 + 5432) = a2[679];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1261 = a2[681];
      *(_QWORD *)(a1 + 5440) = a2[680];
      *(_QWORD *)(a1 + 5448) = v1261;
      swift_retain();
      swift_release();
      v1262 = a2[682];
      *(_BYTE *)(a1 + 5464) = *((_BYTE *)a2 + 5464);
      *(_QWORD *)(a1 + 5456) = v1262;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5408);
      v1267 = *((_OWORD *)a2 + 339);
      v1266 = *((_OWORD *)a2 + 340);
      v1268 = *v1258;
      *(_OWORD *)(a1 + 5449) = *(_OWORD *)((char *)a2 + 5449);
      *(_OWORD *)(a1 + 5424) = v1267;
      *(_OWORD *)(a1 + 5440) = v1266;
      *v1257 = v1268;
    }
  }
  else if (v1259)
  {
    v1263 = a2[677];
    *(_QWORD *)(a1 + 5408) = v1259;
    *(_QWORD *)(a1 + 5416) = v1263;
    *(_QWORD *)(a1 + 5424) = a2[678];
    *(_QWORD *)(a1 + 5432) = a2[679];
    v1264 = a2[681];
    *(_QWORD *)(a1 + 5440) = a2[680];
    *(_QWORD *)(a1 + 5448) = v1264;
    v1265 = a2[682];
    *(_BYTE *)(a1 + 5464) = *((_BYTE *)a2 + 5464);
    *(_QWORD *)(a1 + 5456) = v1265;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1269 = *v1258;
    v1270 = *((_OWORD *)a2 + 339);
    v1271 = *((_OWORD *)a2 + 340);
    *(_OWORD *)(a1 + 5449) = *(_OWORD *)((char *)a2 + 5449);
    *(_OWORD *)(a1 + 5424) = v1270;
    *(_OWORD *)(a1 + 5440) = v1271;
    *v1257 = v1269;
  }
  v1272 = (_OWORD *)(a1 + 5472);
  v1273 = (__int128 *)(a2 + 684);
  v1274 = a2[684];
  if (*(_QWORD *)(a1 + 5472))
  {
    if (v1274)
    {
      v1275 = a2[685];
      *(_QWORD *)(a1 + 5472) = v1274;
      *(_QWORD *)(a1 + 5480) = v1275;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5488) = a2[686];
      *(_QWORD *)(a1 + 5496) = a2[687];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1276 = a2[689];
      *(_QWORD *)(a1 + 5504) = a2[688];
      *(_QWORD *)(a1 + 5512) = v1276;
      swift_retain();
      swift_release();
      v1277 = a2[690];
      *(_BYTE *)(a1 + 5528) = *((_BYTE *)a2 + 5528);
      *(_QWORD *)(a1 + 5520) = v1277;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5472);
      v1282 = *((_OWORD *)a2 + 343);
      v1281 = *((_OWORD *)a2 + 344);
      v1283 = *v1273;
      *(_OWORD *)(a1 + 5513) = *(_OWORD *)((char *)a2 + 5513);
      *(_OWORD *)(a1 + 5488) = v1282;
      *(_OWORD *)(a1 + 5504) = v1281;
      *v1272 = v1283;
    }
  }
  else if (v1274)
  {
    v1278 = a2[685];
    *(_QWORD *)(a1 + 5472) = v1274;
    *(_QWORD *)(a1 + 5480) = v1278;
    *(_QWORD *)(a1 + 5488) = a2[686];
    *(_QWORD *)(a1 + 5496) = a2[687];
    v1279 = a2[689];
    *(_QWORD *)(a1 + 5504) = a2[688];
    *(_QWORD *)(a1 + 5512) = v1279;
    v1280 = a2[690];
    *(_BYTE *)(a1 + 5528) = *((_BYTE *)a2 + 5528);
    *(_QWORD *)(a1 + 5520) = v1280;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1284 = *v1273;
    v1285 = *((_OWORD *)a2 + 343);
    v1286 = *((_OWORD *)a2 + 344);
    *(_OWORD *)(a1 + 5513) = *(_OWORD *)((char *)a2 + 5513);
    *(_OWORD *)(a1 + 5488) = v1285;
    *(_OWORD *)(a1 + 5504) = v1286;
    *v1272 = v1284;
  }
  v1287 = (_OWORD *)(a1 + 5536);
  v1288 = (__int128 *)(a2 + 692);
  v1289 = a2[692];
  if (*(_QWORD *)(a1 + 5536))
  {
    if (v1289)
    {
      v1290 = a2[693];
      *(_QWORD *)(a1 + 5536) = v1289;
      *(_QWORD *)(a1 + 5544) = v1290;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5552) = a2[694];
      *(_QWORD *)(a1 + 5560) = a2[695];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1291 = a2[697];
      *(_QWORD *)(a1 + 5568) = a2[696];
      *(_QWORD *)(a1 + 5576) = v1291;
      swift_retain();
      swift_release();
      v1292 = a2[698];
      *(_BYTE *)(a1 + 5592) = *((_BYTE *)a2 + 5592);
      *(_QWORD *)(a1 + 5584) = v1292;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5536);
      v1297 = *((_OWORD *)a2 + 347);
      v1296 = *((_OWORD *)a2 + 348);
      v1298 = *v1288;
      *(_OWORD *)(a1 + 5577) = *(_OWORD *)((char *)a2 + 5577);
      *(_OWORD *)(a1 + 5552) = v1297;
      *(_OWORD *)(a1 + 5568) = v1296;
      *v1287 = v1298;
    }
  }
  else if (v1289)
  {
    v1293 = a2[693];
    *(_QWORD *)(a1 + 5536) = v1289;
    *(_QWORD *)(a1 + 5544) = v1293;
    *(_QWORD *)(a1 + 5552) = a2[694];
    *(_QWORD *)(a1 + 5560) = a2[695];
    v1294 = a2[697];
    *(_QWORD *)(a1 + 5568) = a2[696];
    *(_QWORD *)(a1 + 5576) = v1294;
    v1295 = a2[698];
    *(_BYTE *)(a1 + 5592) = *((_BYTE *)a2 + 5592);
    *(_QWORD *)(a1 + 5584) = v1295;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1299 = *v1288;
    v1300 = *((_OWORD *)a2 + 347);
    v1301 = *((_OWORD *)a2 + 348);
    *(_OWORD *)(a1 + 5577) = *(_OWORD *)((char *)a2 + 5577);
    *(_OWORD *)(a1 + 5552) = v1300;
    *(_OWORD *)(a1 + 5568) = v1301;
    *v1287 = v1299;
  }
  v1302 = (_OWORD *)(a1 + 5600);
  v1303 = a2 + 700;
  v1304 = a2[700];
  if (*(_QWORD *)(a1 + 5600))
  {
    if (v1304)
    {
      v1305 = a2[701];
      *(_QWORD *)(a1 + 5600) = v1304;
      *(_QWORD *)(a1 + 5608) = v1305;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5616) = a2[702];
      *(_QWORD *)(a1 + 5624) = a2[703];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 5600);
      v1307 = *((_OWORD *)a2 + 351);
      *v1302 = *v1303;
      *(_OWORD *)(a1 + 5616) = v1307;
    }
  }
  else if (v1304)
  {
    v1306 = a2[701];
    *(_QWORD *)(a1 + 5600) = v1304;
    *(_QWORD *)(a1 + 5608) = v1306;
    *(_QWORD *)(a1 + 5616) = a2[702];
    *(_QWORD *)(a1 + 5624) = a2[703];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1308 = *((_OWORD *)a2 + 351);
    *v1302 = *v1303;
    *(_OWORD *)(a1 + 5616) = v1308;
  }
  v1309 = (_OWORD *)(a1 + 5632);
  v1310 = (__int128 *)(a2 + 704);
  v1311 = a2[704];
  if (*(_QWORD *)(a1 + 5632))
  {
    if (v1311)
    {
      v1312 = a2[705];
      *(_QWORD *)(a1 + 5632) = v1311;
      *(_QWORD *)(a1 + 5640) = v1312;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5648) = a2[706];
      *(_QWORD *)(a1 + 5656) = a2[707];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1313 = a2[709];
      *(_QWORD *)(a1 + 5664) = a2[708];
      *(_QWORD *)(a1 + 5672) = v1313;
      swift_retain();
      swift_release();
      v1314 = a2[710];
      *(_BYTE *)(a1 + 5688) = *((_BYTE *)a2 + 5688);
      *(_QWORD *)(a1 + 5680) = v1314;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5632);
      v1319 = *((_OWORD *)a2 + 353);
      v1318 = *((_OWORD *)a2 + 354);
      v1320 = *v1310;
      *(_OWORD *)(a1 + 5673) = *(_OWORD *)((char *)a2 + 5673);
      *(_OWORD *)(a1 + 5648) = v1319;
      *(_OWORD *)(a1 + 5664) = v1318;
      *v1309 = v1320;
    }
  }
  else if (v1311)
  {
    v1315 = a2[705];
    *(_QWORD *)(a1 + 5632) = v1311;
    *(_QWORD *)(a1 + 5640) = v1315;
    *(_QWORD *)(a1 + 5648) = a2[706];
    *(_QWORD *)(a1 + 5656) = a2[707];
    v1316 = a2[709];
    *(_QWORD *)(a1 + 5664) = a2[708];
    *(_QWORD *)(a1 + 5672) = v1316;
    v1317 = a2[710];
    *(_BYTE *)(a1 + 5688) = *((_BYTE *)a2 + 5688);
    *(_QWORD *)(a1 + 5680) = v1317;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1321 = *v1310;
    v1322 = *((_OWORD *)a2 + 353);
    v1323 = *((_OWORD *)a2 + 354);
    *(_OWORD *)(a1 + 5673) = *(_OWORD *)((char *)a2 + 5673);
    *(_OWORD *)(a1 + 5648) = v1322;
    *(_OWORD *)(a1 + 5664) = v1323;
    *v1309 = v1321;
  }
  v1324 = (_OWORD *)(a1 + 5696);
  v1325 = (__int128 *)(a2 + 712);
  v1326 = a2[712];
  if (*(_QWORD *)(a1 + 5696))
  {
    if (v1326)
    {
      v1327 = a2[713];
      *(_QWORD *)(a1 + 5696) = v1326;
      *(_QWORD *)(a1 + 5704) = v1327;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5712) = a2[714];
      *(_QWORD *)(a1 + 5720) = a2[715];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1328 = a2[717];
      *(_QWORD *)(a1 + 5728) = a2[716];
      *(_QWORD *)(a1 + 5736) = v1328;
      swift_retain();
      swift_release();
      v1329 = a2[718];
      *(_BYTE *)(a1 + 5752) = *((_BYTE *)a2 + 5752);
      *(_QWORD *)(a1 + 5744) = v1329;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5696);
      v1334 = *((_OWORD *)a2 + 357);
      v1333 = *((_OWORD *)a2 + 358);
      v1335 = *v1325;
      *(_OWORD *)(a1 + 5737) = *(_OWORD *)((char *)a2 + 5737);
      *(_OWORD *)(a1 + 5712) = v1334;
      *(_OWORD *)(a1 + 5728) = v1333;
      *v1324 = v1335;
    }
  }
  else if (v1326)
  {
    v1330 = a2[713];
    *(_QWORD *)(a1 + 5696) = v1326;
    *(_QWORD *)(a1 + 5704) = v1330;
    *(_QWORD *)(a1 + 5712) = a2[714];
    *(_QWORD *)(a1 + 5720) = a2[715];
    v1331 = a2[717];
    *(_QWORD *)(a1 + 5728) = a2[716];
    *(_QWORD *)(a1 + 5736) = v1331;
    v1332 = a2[718];
    *(_BYTE *)(a1 + 5752) = *((_BYTE *)a2 + 5752);
    *(_QWORD *)(a1 + 5744) = v1332;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1336 = *v1325;
    v1337 = *((_OWORD *)a2 + 357);
    v1338 = *((_OWORD *)a2 + 358);
    *(_OWORD *)(a1 + 5737) = *(_OWORD *)((char *)a2 + 5737);
    *(_OWORD *)(a1 + 5712) = v1337;
    *(_OWORD *)(a1 + 5728) = v1338;
    *v1324 = v1336;
  }
  v1339 = (_OWORD *)(a1 + 5760);
  v1340 = (__int128 *)(a2 + 720);
  v1341 = a2[720];
  if (*(_QWORD *)(a1 + 5760))
  {
    if (v1341)
    {
      v1342 = a2[721];
      *(_QWORD *)(a1 + 5760) = v1341;
      *(_QWORD *)(a1 + 5768) = v1342;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5776) = a2[722];
      *(_QWORD *)(a1 + 5784) = a2[723];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1343 = a2[725];
      *(_QWORD *)(a1 + 5792) = a2[724];
      *(_QWORD *)(a1 + 5800) = v1343;
      swift_retain();
      swift_release();
      v1344 = a2[726];
      *(_BYTE *)(a1 + 5816) = *((_BYTE *)a2 + 5816);
      *(_QWORD *)(a1 + 5808) = v1344;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5760);
      v1349 = *((_OWORD *)a2 + 361);
      v1348 = *((_OWORD *)a2 + 362);
      v1350 = *v1340;
      *(_OWORD *)(a1 + 5801) = *(_OWORD *)((char *)a2 + 5801);
      *(_OWORD *)(a1 + 5776) = v1349;
      *(_OWORD *)(a1 + 5792) = v1348;
      *v1339 = v1350;
    }
  }
  else if (v1341)
  {
    v1345 = a2[721];
    *(_QWORD *)(a1 + 5760) = v1341;
    *(_QWORD *)(a1 + 5768) = v1345;
    *(_QWORD *)(a1 + 5776) = a2[722];
    *(_QWORD *)(a1 + 5784) = a2[723];
    v1346 = a2[725];
    *(_QWORD *)(a1 + 5792) = a2[724];
    *(_QWORD *)(a1 + 5800) = v1346;
    v1347 = a2[726];
    *(_BYTE *)(a1 + 5816) = *((_BYTE *)a2 + 5816);
    *(_QWORD *)(a1 + 5808) = v1347;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1351 = *v1340;
    v1352 = *((_OWORD *)a2 + 361);
    v1353 = *((_OWORD *)a2 + 362);
    *(_OWORD *)(a1 + 5801) = *(_OWORD *)((char *)a2 + 5801);
    *(_OWORD *)(a1 + 5776) = v1352;
    *(_OWORD *)(a1 + 5792) = v1353;
    *v1339 = v1351;
  }
  v1354 = (_OWORD *)(a1 + 5824);
  v1355 = a2 + 728;
  v1356 = a2[728];
  if (*(_QWORD *)(a1 + 5824))
  {
    if (v1356)
    {
      v1357 = a2[729];
      *(_QWORD *)(a1 + 5824) = v1356;
      *(_QWORD *)(a1 + 5832) = v1357;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5840) = a2[730];
      *(_QWORD *)(a1 + 5848) = a2[731];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 5824);
      v1359 = *((_OWORD *)a2 + 365);
      *v1354 = *v1355;
      *(_OWORD *)(a1 + 5840) = v1359;
    }
  }
  else if (v1356)
  {
    v1358 = a2[729];
    *(_QWORD *)(a1 + 5824) = v1356;
    *(_QWORD *)(a1 + 5832) = v1358;
    *(_QWORD *)(a1 + 5840) = a2[730];
    *(_QWORD *)(a1 + 5848) = a2[731];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1360 = *((_OWORD *)a2 + 365);
    *v1354 = *v1355;
    *(_OWORD *)(a1 + 5840) = v1360;
  }
  v1361 = (_OWORD *)(a1 + 5856);
  v1362 = (__int128 *)(a2 + 732);
  v1363 = a2[732];
  if (*(_QWORD *)(a1 + 5856))
  {
    if (v1363)
    {
      v1364 = a2[733];
      *(_QWORD *)(a1 + 5856) = v1363;
      *(_QWORD *)(a1 + 5864) = v1364;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5872) = a2[734];
      *(_QWORD *)(a1 + 5880) = a2[735];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1365 = a2[737];
      *(_QWORD *)(a1 + 5888) = a2[736];
      *(_QWORD *)(a1 + 5896) = v1365;
      swift_retain();
      swift_release();
      v1366 = a2[738];
      *(_BYTE *)(a1 + 5912) = *((_BYTE *)a2 + 5912);
      *(_QWORD *)(a1 + 5904) = v1366;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5856);
      v1371 = *((_OWORD *)a2 + 367);
      v1370 = *((_OWORD *)a2 + 368);
      v1372 = *v1362;
      *(_OWORD *)(a1 + 5897) = *(_OWORD *)((char *)a2 + 5897);
      *(_OWORD *)(a1 + 5872) = v1371;
      *(_OWORD *)(a1 + 5888) = v1370;
      *v1361 = v1372;
    }
  }
  else if (v1363)
  {
    v1367 = a2[733];
    *(_QWORD *)(a1 + 5856) = v1363;
    *(_QWORD *)(a1 + 5864) = v1367;
    *(_QWORD *)(a1 + 5872) = a2[734];
    *(_QWORD *)(a1 + 5880) = a2[735];
    v1368 = a2[737];
    *(_QWORD *)(a1 + 5888) = a2[736];
    *(_QWORD *)(a1 + 5896) = v1368;
    v1369 = a2[738];
    *(_BYTE *)(a1 + 5912) = *((_BYTE *)a2 + 5912);
    *(_QWORD *)(a1 + 5904) = v1369;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1373 = *v1362;
    v1374 = *((_OWORD *)a2 + 367);
    v1375 = *((_OWORD *)a2 + 368);
    *(_OWORD *)(a1 + 5897) = *(_OWORD *)((char *)a2 + 5897);
    *(_OWORD *)(a1 + 5872) = v1374;
    *(_OWORD *)(a1 + 5888) = v1375;
    *v1361 = v1373;
  }
  v1376 = (_OWORD *)(a1 + 5920);
  v1377 = (__int128 *)(a2 + 740);
  v1378 = a2[740];
  if (*(_QWORD *)(a1 + 5920))
  {
    if (v1378)
    {
      v1379 = a2[741];
      *(_QWORD *)(a1 + 5920) = v1378;
      *(_QWORD *)(a1 + 5928) = v1379;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 5936) = a2[742];
      *(_QWORD *)(a1 + 5944) = a2[743];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1380 = a2[745];
      *(_QWORD *)(a1 + 5952) = a2[744];
      *(_QWORD *)(a1 + 5960) = v1380;
      swift_retain();
      swift_release();
      v1381 = a2[746];
      *(_BYTE *)(a1 + 5976) = *((_BYTE *)a2 + 5976);
      *(_QWORD *)(a1 + 5968) = v1381;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5920);
      v1386 = *((_OWORD *)a2 + 371);
      v1385 = *((_OWORD *)a2 + 372);
      v1387 = *v1377;
      *(_OWORD *)(a1 + 5961) = *(_OWORD *)((char *)a2 + 5961);
      *(_OWORD *)(a1 + 5936) = v1386;
      *(_OWORD *)(a1 + 5952) = v1385;
      *v1376 = v1387;
    }
  }
  else if (v1378)
  {
    v1382 = a2[741];
    *(_QWORD *)(a1 + 5920) = v1378;
    *(_QWORD *)(a1 + 5928) = v1382;
    *(_QWORD *)(a1 + 5936) = a2[742];
    *(_QWORD *)(a1 + 5944) = a2[743];
    v1383 = a2[745];
    *(_QWORD *)(a1 + 5952) = a2[744];
    *(_QWORD *)(a1 + 5960) = v1383;
    v1384 = a2[746];
    *(_BYTE *)(a1 + 5976) = *((_BYTE *)a2 + 5976);
    *(_QWORD *)(a1 + 5968) = v1384;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1388 = *v1377;
    v1389 = *((_OWORD *)a2 + 371);
    v1390 = *((_OWORD *)a2 + 372);
    *(_OWORD *)(a1 + 5961) = *(_OWORD *)((char *)a2 + 5961);
    *(_OWORD *)(a1 + 5936) = v1389;
    *(_OWORD *)(a1 + 5952) = v1390;
    *v1376 = v1388;
  }
  v1391 = (_OWORD *)(a1 + 5984);
  v1392 = (__int128 *)(a2 + 748);
  v1393 = a2[748];
  if (*(_QWORD *)(a1 + 5984))
  {
    if (v1393)
    {
      v1394 = a2[749];
      *(_QWORD *)(a1 + 5984) = v1393;
      *(_QWORD *)(a1 + 5992) = v1394;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6000) = a2[750];
      *(_QWORD *)(a1 + 6008) = a2[751];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1395 = a2[753];
      *(_QWORD *)(a1 + 6016) = a2[752];
      *(_QWORD *)(a1 + 6024) = v1395;
      swift_retain();
      swift_release();
      v1396 = a2[754];
      *(_BYTE *)(a1 + 6040) = *((_BYTE *)a2 + 6040);
      *(_QWORD *)(a1 + 6032) = v1396;
    }
    else
    {
      sub_1AD3C2B88(a1 + 5984);
      v1401 = *((_OWORD *)a2 + 375);
      v1400 = *((_OWORD *)a2 + 376);
      v1402 = *v1392;
      *(_OWORD *)(a1 + 6025) = *(_OWORD *)((char *)a2 + 6025);
      *(_OWORD *)(a1 + 6000) = v1401;
      *(_OWORD *)(a1 + 6016) = v1400;
      *v1391 = v1402;
    }
  }
  else if (v1393)
  {
    v1397 = a2[749];
    *(_QWORD *)(a1 + 5984) = v1393;
    *(_QWORD *)(a1 + 5992) = v1397;
    *(_QWORD *)(a1 + 6000) = a2[750];
    *(_QWORD *)(a1 + 6008) = a2[751];
    v1398 = a2[753];
    *(_QWORD *)(a1 + 6016) = a2[752];
    *(_QWORD *)(a1 + 6024) = v1398;
    v1399 = a2[754];
    *(_BYTE *)(a1 + 6040) = *((_BYTE *)a2 + 6040);
    *(_QWORD *)(a1 + 6032) = v1399;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1403 = *v1392;
    v1404 = *((_OWORD *)a2 + 375);
    v1405 = *((_OWORD *)a2 + 376);
    *(_OWORD *)(a1 + 6025) = *(_OWORD *)((char *)a2 + 6025);
    *(_OWORD *)(a1 + 6000) = v1404;
    *(_OWORD *)(a1 + 6016) = v1405;
    *v1391 = v1403;
  }
  v1406 = (_OWORD *)(a1 + 6048);
  v1407 = a2 + 756;
  v1408 = a2[756];
  if (*(_QWORD *)(a1 + 6048))
  {
    if (v1408)
    {
      v1409 = a2[757];
      *(_QWORD *)(a1 + 6048) = v1408;
      *(_QWORD *)(a1 + 6056) = v1409;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6064) = a2[758];
      *(_QWORD *)(a1 + 6072) = a2[759];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 6048);
      v1411 = *((_OWORD *)a2 + 379);
      *v1406 = *v1407;
      *(_OWORD *)(a1 + 6064) = v1411;
    }
  }
  else if (v1408)
  {
    v1410 = a2[757];
    *(_QWORD *)(a1 + 6048) = v1408;
    *(_QWORD *)(a1 + 6056) = v1410;
    *(_QWORD *)(a1 + 6064) = a2[758];
    *(_QWORD *)(a1 + 6072) = a2[759];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1412 = *((_OWORD *)a2 + 379);
    *v1406 = *v1407;
    *(_OWORD *)(a1 + 6064) = v1412;
  }
  v1413 = (_OWORD *)(a1 + 6080);
  v1414 = (__int128 *)(a2 + 760);
  v1415 = a2[760];
  if (*(_QWORD *)(a1 + 6080))
  {
    if (v1415)
    {
      v1416 = a2[761];
      *(_QWORD *)(a1 + 6080) = v1415;
      *(_QWORD *)(a1 + 6088) = v1416;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6096) = a2[762];
      *(_QWORD *)(a1 + 6104) = a2[763];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1417 = a2[765];
      *(_QWORD *)(a1 + 6112) = a2[764];
      *(_QWORD *)(a1 + 6120) = v1417;
      swift_retain();
      swift_release();
      v1418 = a2[766];
      *(_BYTE *)(a1 + 6136) = *((_BYTE *)a2 + 6136);
      *(_QWORD *)(a1 + 6128) = v1418;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6080);
      v1423 = *((_OWORD *)a2 + 381);
      v1422 = *((_OWORD *)a2 + 382);
      v1424 = *v1414;
      *(_OWORD *)(a1 + 6121) = *(_OWORD *)((char *)a2 + 6121);
      *(_OWORD *)(a1 + 6096) = v1423;
      *(_OWORD *)(a1 + 6112) = v1422;
      *v1413 = v1424;
    }
  }
  else if (v1415)
  {
    v1419 = a2[761];
    *(_QWORD *)(a1 + 6080) = v1415;
    *(_QWORD *)(a1 + 6088) = v1419;
    *(_QWORD *)(a1 + 6096) = a2[762];
    *(_QWORD *)(a1 + 6104) = a2[763];
    v1420 = a2[765];
    *(_QWORD *)(a1 + 6112) = a2[764];
    *(_QWORD *)(a1 + 6120) = v1420;
    v1421 = a2[766];
    *(_BYTE *)(a1 + 6136) = *((_BYTE *)a2 + 6136);
    *(_QWORD *)(a1 + 6128) = v1421;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1425 = *v1414;
    v1426 = *((_OWORD *)a2 + 381);
    v1427 = *((_OWORD *)a2 + 382);
    *(_OWORD *)(a1 + 6121) = *(_OWORD *)((char *)a2 + 6121);
    *(_OWORD *)(a1 + 6096) = v1426;
    *(_OWORD *)(a1 + 6112) = v1427;
    *v1413 = v1425;
  }
  v1428 = (_OWORD *)(a1 + 6144);
  v1429 = (__int128 *)(a2 + 768);
  v1430 = a2[768];
  if (*(_QWORD *)(a1 + 6144))
  {
    if (v1430)
    {
      v1431 = a2[769];
      *(_QWORD *)(a1 + 6144) = v1430;
      *(_QWORD *)(a1 + 6152) = v1431;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6160) = a2[770];
      *(_QWORD *)(a1 + 6168) = a2[771];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1432 = a2[773];
      *(_QWORD *)(a1 + 6176) = a2[772];
      *(_QWORD *)(a1 + 6184) = v1432;
      swift_retain();
      swift_release();
      v1433 = a2[774];
      *(_BYTE *)(a1 + 6200) = *((_BYTE *)a2 + 6200);
      *(_QWORD *)(a1 + 6192) = v1433;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6144);
      v1438 = *((_OWORD *)a2 + 385);
      v1437 = *((_OWORD *)a2 + 386);
      v1439 = *v1429;
      *(_OWORD *)(a1 + 6185) = *(_OWORD *)((char *)a2 + 6185);
      *(_OWORD *)(a1 + 6160) = v1438;
      *(_OWORD *)(a1 + 6176) = v1437;
      *v1428 = v1439;
    }
  }
  else if (v1430)
  {
    v1434 = a2[769];
    *(_QWORD *)(a1 + 6144) = v1430;
    *(_QWORD *)(a1 + 6152) = v1434;
    *(_QWORD *)(a1 + 6160) = a2[770];
    *(_QWORD *)(a1 + 6168) = a2[771];
    v1435 = a2[773];
    *(_QWORD *)(a1 + 6176) = a2[772];
    *(_QWORD *)(a1 + 6184) = v1435;
    v1436 = a2[774];
    *(_BYTE *)(a1 + 6200) = *((_BYTE *)a2 + 6200);
    *(_QWORD *)(a1 + 6192) = v1436;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1440 = *v1429;
    v1441 = *((_OWORD *)a2 + 385);
    v1442 = *((_OWORD *)a2 + 386);
    *(_OWORD *)(a1 + 6185) = *(_OWORD *)((char *)a2 + 6185);
    *(_OWORD *)(a1 + 6160) = v1441;
    *(_OWORD *)(a1 + 6176) = v1442;
    *v1428 = v1440;
  }
  v1443 = (_OWORD *)(a1 + 6208);
  v1444 = (__int128 *)(a2 + 776);
  v1445 = a2[776];
  if (*(_QWORD *)(a1 + 6208))
  {
    if (v1445)
    {
      v1446 = a2[777];
      *(_QWORD *)(a1 + 6208) = v1445;
      *(_QWORD *)(a1 + 6216) = v1446;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6224) = a2[778];
      *(_QWORD *)(a1 + 6232) = a2[779];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1447 = a2[781];
      *(_QWORD *)(a1 + 6240) = a2[780];
      *(_QWORD *)(a1 + 6248) = v1447;
      swift_retain();
      swift_release();
      v1448 = a2[782];
      *(_BYTE *)(a1 + 6264) = *((_BYTE *)a2 + 6264);
      *(_QWORD *)(a1 + 6256) = v1448;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6208);
      v1453 = *((_OWORD *)a2 + 389);
      v1452 = *((_OWORD *)a2 + 390);
      v1454 = *v1444;
      *(_OWORD *)(a1 + 6249) = *(_OWORD *)((char *)a2 + 6249);
      *(_OWORD *)(a1 + 6224) = v1453;
      *(_OWORD *)(a1 + 6240) = v1452;
      *v1443 = v1454;
    }
  }
  else if (v1445)
  {
    v1449 = a2[777];
    *(_QWORD *)(a1 + 6208) = v1445;
    *(_QWORD *)(a1 + 6216) = v1449;
    *(_QWORD *)(a1 + 6224) = a2[778];
    *(_QWORD *)(a1 + 6232) = a2[779];
    v1450 = a2[781];
    *(_QWORD *)(a1 + 6240) = a2[780];
    *(_QWORD *)(a1 + 6248) = v1450;
    v1451 = a2[782];
    *(_BYTE *)(a1 + 6264) = *((_BYTE *)a2 + 6264);
    *(_QWORD *)(a1 + 6256) = v1451;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1455 = *v1444;
    v1456 = *((_OWORD *)a2 + 389);
    v1457 = *((_OWORD *)a2 + 390);
    *(_OWORD *)(a1 + 6249) = *(_OWORD *)((char *)a2 + 6249);
    *(_OWORD *)(a1 + 6224) = v1456;
    *(_OWORD *)(a1 + 6240) = v1457;
    *v1443 = v1455;
  }
  v1458 = (_OWORD *)(a1 + 6272);
  v1459 = a2 + 784;
  v1460 = a2[784];
  if (*(_QWORD *)(a1 + 6272))
  {
    if (v1460)
    {
      v1461 = a2[785];
      *(_QWORD *)(a1 + 6272) = v1460;
      *(_QWORD *)(a1 + 6280) = v1461;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6288) = a2[786];
      *(_QWORD *)(a1 + 6296) = a2[787];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 6272);
      v1463 = *((_OWORD *)a2 + 393);
      *v1458 = *v1459;
      *(_OWORD *)(a1 + 6288) = v1463;
    }
  }
  else if (v1460)
  {
    v1462 = a2[785];
    *(_QWORD *)(a1 + 6272) = v1460;
    *(_QWORD *)(a1 + 6280) = v1462;
    *(_QWORD *)(a1 + 6288) = a2[786];
    *(_QWORD *)(a1 + 6296) = a2[787];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1464 = *((_OWORD *)a2 + 393);
    *v1458 = *v1459;
    *(_OWORD *)(a1 + 6288) = v1464;
  }
  v1465 = (_OWORD *)(a1 + 6304);
  v1466 = (__int128 *)(a2 + 788);
  v1467 = a2[788];
  if (*(_QWORD *)(a1 + 6304))
  {
    if (v1467)
    {
      v1468 = a2[789];
      *(_QWORD *)(a1 + 6304) = v1467;
      *(_QWORD *)(a1 + 6312) = v1468;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6320) = a2[790];
      *(_QWORD *)(a1 + 6328) = a2[791];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1469 = a2[793];
      *(_QWORD *)(a1 + 6336) = a2[792];
      *(_QWORD *)(a1 + 6344) = v1469;
      swift_retain();
      swift_release();
      v1470 = a2[794];
      *(_BYTE *)(a1 + 6360) = *((_BYTE *)a2 + 6360);
      *(_QWORD *)(a1 + 6352) = v1470;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6304);
      v1475 = *((_OWORD *)a2 + 395);
      v1474 = *((_OWORD *)a2 + 396);
      v1476 = *v1466;
      *(_OWORD *)(a1 + 6345) = *(_OWORD *)((char *)a2 + 6345);
      *(_OWORD *)(a1 + 6320) = v1475;
      *(_OWORD *)(a1 + 6336) = v1474;
      *v1465 = v1476;
    }
  }
  else if (v1467)
  {
    v1471 = a2[789];
    *(_QWORD *)(a1 + 6304) = v1467;
    *(_QWORD *)(a1 + 6312) = v1471;
    *(_QWORD *)(a1 + 6320) = a2[790];
    *(_QWORD *)(a1 + 6328) = a2[791];
    v1472 = a2[793];
    *(_QWORD *)(a1 + 6336) = a2[792];
    *(_QWORD *)(a1 + 6344) = v1472;
    v1473 = a2[794];
    *(_BYTE *)(a1 + 6360) = *((_BYTE *)a2 + 6360);
    *(_QWORD *)(a1 + 6352) = v1473;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1477 = *v1466;
    v1478 = *((_OWORD *)a2 + 395);
    v1479 = *((_OWORD *)a2 + 396);
    *(_OWORD *)(a1 + 6345) = *(_OWORD *)((char *)a2 + 6345);
    *(_OWORD *)(a1 + 6320) = v1478;
    *(_OWORD *)(a1 + 6336) = v1479;
    *v1465 = v1477;
  }
  v1480 = (_OWORD *)(a1 + 6368);
  v1481 = (__int128 *)(a2 + 796);
  v1482 = a2[796];
  if (*(_QWORD *)(a1 + 6368))
  {
    if (v1482)
    {
      v1483 = a2[797];
      *(_QWORD *)(a1 + 6368) = v1482;
      *(_QWORD *)(a1 + 6376) = v1483;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6384) = a2[798];
      *(_QWORD *)(a1 + 6392) = a2[799];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1484 = a2[801];
      *(_QWORD *)(a1 + 6400) = a2[800];
      *(_QWORD *)(a1 + 6408) = v1484;
      swift_retain();
      swift_release();
      v1485 = a2[802];
      *(_BYTE *)(a1 + 6424) = *((_BYTE *)a2 + 6424);
      *(_QWORD *)(a1 + 6416) = v1485;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6368);
      v1490 = *((_OWORD *)a2 + 399);
      v1489 = *((_OWORD *)a2 + 400);
      v1491 = *v1481;
      *(_OWORD *)(a1 + 6409) = *(_OWORD *)((char *)a2 + 6409);
      *(_OWORD *)(a1 + 6384) = v1490;
      *(_OWORD *)(a1 + 6400) = v1489;
      *v1480 = v1491;
    }
  }
  else if (v1482)
  {
    v1486 = a2[797];
    *(_QWORD *)(a1 + 6368) = v1482;
    *(_QWORD *)(a1 + 6376) = v1486;
    *(_QWORD *)(a1 + 6384) = a2[798];
    *(_QWORD *)(a1 + 6392) = a2[799];
    v1487 = a2[801];
    *(_QWORD *)(a1 + 6400) = a2[800];
    *(_QWORD *)(a1 + 6408) = v1487;
    v1488 = a2[802];
    *(_BYTE *)(a1 + 6424) = *((_BYTE *)a2 + 6424);
    *(_QWORD *)(a1 + 6416) = v1488;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1492 = *v1481;
    v1493 = *((_OWORD *)a2 + 399);
    v1494 = *((_OWORD *)a2 + 400);
    *(_OWORD *)(a1 + 6409) = *(_OWORD *)((char *)a2 + 6409);
    *(_OWORD *)(a1 + 6384) = v1493;
    *(_OWORD *)(a1 + 6400) = v1494;
    *v1480 = v1492;
  }
  v1495 = (_OWORD *)(a1 + 6432);
  v1496 = (__int128 *)(a2 + 804);
  v1497 = a2[804];
  if (*(_QWORD *)(a1 + 6432))
  {
    if (v1497)
    {
      v1498 = a2[805];
      *(_QWORD *)(a1 + 6432) = v1497;
      *(_QWORD *)(a1 + 6440) = v1498;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6448) = a2[806];
      *(_QWORD *)(a1 + 6456) = a2[807];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1499 = a2[809];
      *(_QWORD *)(a1 + 6464) = a2[808];
      *(_QWORD *)(a1 + 6472) = v1499;
      swift_retain();
      swift_release();
      v1500 = a2[810];
      *(_BYTE *)(a1 + 6488) = *((_BYTE *)a2 + 6488);
      *(_QWORD *)(a1 + 6480) = v1500;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6432);
      v1505 = *((_OWORD *)a2 + 403);
      v1504 = *((_OWORD *)a2 + 404);
      v1506 = *v1496;
      *(_OWORD *)(a1 + 6473) = *(_OWORD *)((char *)a2 + 6473);
      *(_OWORD *)(a1 + 6448) = v1505;
      *(_OWORD *)(a1 + 6464) = v1504;
      *v1495 = v1506;
    }
  }
  else if (v1497)
  {
    v1501 = a2[805];
    *(_QWORD *)(a1 + 6432) = v1497;
    *(_QWORD *)(a1 + 6440) = v1501;
    *(_QWORD *)(a1 + 6448) = a2[806];
    *(_QWORD *)(a1 + 6456) = a2[807];
    v1502 = a2[809];
    *(_QWORD *)(a1 + 6464) = a2[808];
    *(_QWORD *)(a1 + 6472) = v1502;
    v1503 = a2[810];
    *(_BYTE *)(a1 + 6488) = *((_BYTE *)a2 + 6488);
    *(_QWORD *)(a1 + 6480) = v1503;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1507 = *v1496;
    v1508 = *((_OWORD *)a2 + 403);
    v1509 = *((_OWORD *)a2 + 404);
    *(_OWORD *)(a1 + 6473) = *(_OWORD *)((char *)a2 + 6473);
    *(_OWORD *)(a1 + 6448) = v1508;
    *(_OWORD *)(a1 + 6464) = v1509;
    *v1495 = v1507;
  }
  v1510 = (_OWORD *)(a1 + 6496);
  v1511 = a2 + 812;
  v1512 = a2[812];
  if (*(_QWORD *)(a1 + 6496))
  {
    if (v1512)
    {
      v1513 = a2[813];
      *(_QWORD *)(a1 + 6496) = v1512;
      *(_QWORD *)(a1 + 6504) = v1513;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6512) = a2[814];
      *(_QWORD *)(a1 + 6520) = a2[815];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 6496);
      v1515 = *((_OWORD *)a2 + 407);
      *v1510 = *v1511;
      *(_OWORD *)(a1 + 6512) = v1515;
    }
  }
  else if (v1512)
  {
    v1514 = a2[813];
    *(_QWORD *)(a1 + 6496) = v1512;
    *(_QWORD *)(a1 + 6504) = v1514;
    *(_QWORD *)(a1 + 6512) = a2[814];
    *(_QWORD *)(a1 + 6520) = a2[815];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1516 = *((_OWORD *)a2 + 407);
    *v1510 = *v1511;
    *(_OWORD *)(a1 + 6512) = v1516;
  }
  v1517 = (_OWORD *)(a1 + 6528);
  v1518 = (__int128 *)(a2 + 816);
  v1519 = a2[816];
  if (*(_QWORD *)(a1 + 6528))
  {
    if (v1519)
    {
      v1520 = a2[817];
      *(_QWORD *)(a1 + 6528) = v1519;
      *(_QWORD *)(a1 + 6536) = v1520;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6544) = a2[818];
      *(_QWORD *)(a1 + 6552) = a2[819];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1521 = a2[821];
      *(_QWORD *)(a1 + 6560) = a2[820];
      *(_QWORD *)(a1 + 6568) = v1521;
      swift_retain();
      swift_release();
      v1522 = a2[822];
      *(_BYTE *)(a1 + 6584) = *((_BYTE *)a2 + 6584);
      *(_QWORD *)(a1 + 6576) = v1522;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6528);
      v1527 = *((_OWORD *)a2 + 409);
      v1526 = *((_OWORD *)a2 + 410);
      v1528 = *v1518;
      *(_OWORD *)(a1 + 6569) = *(_OWORD *)((char *)a2 + 6569);
      *(_OWORD *)(a1 + 6544) = v1527;
      *(_OWORD *)(a1 + 6560) = v1526;
      *v1517 = v1528;
    }
  }
  else if (v1519)
  {
    v1523 = a2[817];
    *(_QWORD *)(a1 + 6528) = v1519;
    *(_QWORD *)(a1 + 6536) = v1523;
    *(_QWORD *)(a1 + 6544) = a2[818];
    *(_QWORD *)(a1 + 6552) = a2[819];
    v1524 = a2[821];
    *(_QWORD *)(a1 + 6560) = a2[820];
    *(_QWORD *)(a1 + 6568) = v1524;
    v1525 = a2[822];
    *(_BYTE *)(a1 + 6584) = *((_BYTE *)a2 + 6584);
    *(_QWORD *)(a1 + 6576) = v1525;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1529 = *v1518;
    v1530 = *((_OWORD *)a2 + 409);
    v1531 = *((_OWORD *)a2 + 410);
    *(_OWORD *)(a1 + 6569) = *(_OWORD *)((char *)a2 + 6569);
    *(_OWORD *)(a1 + 6544) = v1530;
    *(_OWORD *)(a1 + 6560) = v1531;
    *v1517 = v1529;
  }
  v1532 = (_OWORD *)(a1 + 6592);
  v1533 = (__int128 *)(a2 + 824);
  v1534 = a2[824];
  if (*(_QWORD *)(a1 + 6592))
  {
    if (v1534)
    {
      v1535 = a2[825];
      *(_QWORD *)(a1 + 6592) = v1534;
      *(_QWORD *)(a1 + 6600) = v1535;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6608) = a2[826];
      *(_QWORD *)(a1 + 6616) = a2[827];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1536 = a2[829];
      *(_QWORD *)(a1 + 6624) = a2[828];
      *(_QWORD *)(a1 + 6632) = v1536;
      swift_retain();
      swift_release();
      v1537 = a2[830];
      *(_BYTE *)(a1 + 6648) = *((_BYTE *)a2 + 6648);
      *(_QWORD *)(a1 + 6640) = v1537;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6592);
      v1542 = *((_OWORD *)a2 + 413);
      v1541 = *((_OWORD *)a2 + 414);
      v1543 = *v1533;
      *(_OWORD *)(a1 + 6633) = *(_OWORD *)((char *)a2 + 6633);
      *(_OWORD *)(a1 + 6608) = v1542;
      *(_OWORD *)(a1 + 6624) = v1541;
      *v1532 = v1543;
    }
  }
  else if (v1534)
  {
    v1538 = a2[825];
    *(_QWORD *)(a1 + 6592) = v1534;
    *(_QWORD *)(a1 + 6600) = v1538;
    *(_QWORD *)(a1 + 6608) = a2[826];
    *(_QWORD *)(a1 + 6616) = a2[827];
    v1539 = a2[829];
    *(_QWORD *)(a1 + 6624) = a2[828];
    *(_QWORD *)(a1 + 6632) = v1539;
    v1540 = a2[830];
    *(_BYTE *)(a1 + 6648) = *((_BYTE *)a2 + 6648);
    *(_QWORD *)(a1 + 6640) = v1540;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1544 = *v1533;
    v1545 = *((_OWORD *)a2 + 413);
    v1546 = *((_OWORD *)a2 + 414);
    *(_OWORD *)(a1 + 6633) = *(_OWORD *)((char *)a2 + 6633);
    *(_OWORD *)(a1 + 6608) = v1545;
    *(_OWORD *)(a1 + 6624) = v1546;
    *v1532 = v1544;
  }
  v1547 = (_OWORD *)(a1 + 6656);
  v1548 = (__int128 *)(a2 + 832);
  v1549 = a2[832];
  if (*(_QWORD *)(a1 + 6656))
  {
    if (v1549)
    {
      v1550 = a2[833];
      *(_QWORD *)(a1 + 6656) = v1549;
      *(_QWORD *)(a1 + 6664) = v1550;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6672) = a2[834];
      *(_QWORD *)(a1 + 6680) = a2[835];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1551 = a2[837];
      *(_QWORD *)(a1 + 6688) = a2[836];
      *(_QWORD *)(a1 + 6696) = v1551;
      swift_retain();
      swift_release();
      v1552 = a2[838];
      *(_BYTE *)(a1 + 6712) = *((_BYTE *)a2 + 6712);
      *(_QWORD *)(a1 + 6704) = v1552;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6656);
      v1557 = *((_OWORD *)a2 + 417);
      v1556 = *((_OWORD *)a2 + 418);
      v1558 = *v1548;
      *(_OWORD *)(a1 + 6697) = *(_OWORD *)((char *)a2 + 6697);
      *(_OWORD *)(a1 + 6672) = v1557;
      *(_OWORD *)(a1 + 6688) = v1556;
      *v1547 = v1558;
    }
  }
  else if (v1549)
  {
    v1553 = a2[833];
    *(_QWORD *)(a1 + 6656) = v1549;
    *(_QWORD *)(a1 + 6664) = v1553;
    *(_QWORD *)(a1 + 6672) = a2[834];
    *(_QWORD *)(a1 + 6680) = a2[835];
    v1554 = a2[837];
    *(_QWORD *)(a1 + 6688) = a2[836];
    *(_QWORD *)(a1 + 6696) = v1554;
    v1555 = a2[838];
    *(_BYTE *)(a1 + 6712) = *((_BYTE *)a2 + 6712);
    *(_QWORD *)(a1 + 6704) = v1555;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1559 = *v1548;
    v1560 = *((_OWORD *)a2 + 417);
    v1561 = *((_OWORD *)a2 + 418);
    *(_OWORD *)(a1 + 6697) = *(_OWORD *)((char *)a2 + 6697);
    *(_OWORD *)(a1 + 6672) = v1560;
    *(_OWORD *)(a1 + 6688) = v1561;
    *v1547 = v1559;
  }
  v1562 = (_OWORD *)(a1 + 6720);
  v1563 = a2 + 840;
  v1564 = a2[840];
  if (*(_QWORD *)(a1 + 6720))
  {
    if (v1564)
    {
      v1565 = a2[841];
      *(_QWORD *)(a1 + 6720) = v1564;
      *(_QWORD *)(a1 + 6728) = v1565;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6736) = a2[842];
      *(_QWORD *)(a1 + 6744) = a2[843];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 6720);
      v1567 = *((_OWORD *)a2 + 421);
      *v1562 = *v1563;
      *(_OWORD *)(a1 + 6736) = v1567;
    }
  }
  else if (v1564)
  {
    v1566 = a2[841];
    *(_QWORD *)(a1 + 6720) = v1564;
    *(_QWORD *)(a1 + 6728) = v1566;
    *(_QWORD *)(a1 + 6736) = a2[842];
    *(_QWORD *)(a1 + 6744) = a2[843];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1568 = *((_OWORD *)a2 + 421);
    *v1562 = *v1563;
    *(_OWORD *)(a1 + 6736) = v1568;
  }
  v1569 = (_OWORD *)(a1 + 6752);
  v1570 = (__int128 *)(a2 + 844);
  v1571 = a2[844];
  if (*(_QWORD *)(a1 + 6752))
  {
    if (v1571)
    {
      v1572 = a2[845];
      *(_QWORD *)(a1 + 6752) = v1571;
      *(_QWORD *)(a1 + 6760) = v1572;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6768) = a2[846];
      *(_QWORD *)(a1 + 6776) = a2[847];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1573 = a2[849];
      *(_QWORD *)(a1 + 6784) = a2[848];
      *(_QWORD *)(a1 + 6792) = v1573;
      swift_retain();
      swift_release();
      v1574 = a2[850];
      *(_BYTE *)(a1 + 6808) = *((_BYTE *)a2 + 6808);
      *(_QWORD *)(a1 + 6800) = v1574;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6752);
      v1579 = *((_OWORD *)a2 + 423);
      v1578 = *((_OWORD *)a2 + 424);
      v1580 = *v1570;
      *(_OWORD *)(a1 + 6793) = *(_OWORD *)((char *)a2 + 6793);
      *(_OWORD *)(a1 + 6768) = v1579;
      *(_OWORD *)(a1 + 6784) = v1578;
      *v1569 = v1580;
    }
  }
  else if (v1571)
  {
    v1575 = a2[845];
    *(_QWORD *)(a1 + 6752) = v1571;
    *(_QWORD *)(a1 + 6760) = v1575;
    *(_QWORD *)(a1 + 6768) = a2[846];
    *(_QWORD *)(a1 + 6776) = a2[847];
    v1576 = a2[849];
    *(_QWORD *)(a1 + 6784) = a2[848];
    *(_QWORD *)(a1 + 6792) = v1576;
    v1577 = a2[850];
    *(_BYTE *)(a1 + 6808) = *((_BYTE *)a2 + 6808);
    *(_QWORD *)(a1 + 6800) = v1577;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1581 = *v1570;
    v1582 = *((_OWORD *)a2 + 423);
    v1583 = *((_OWORD *)a2 + 424);
    *(_OWORD *)(a1 + 6793) = *(_OWORD *)((char *)a2 + 6793);
    *(_OWORD *)(a1 + 6768) = v1582;
    *(_OWORD *)(a1 + 6784) = v1583;
    *v1569 = v1581;
  }
  v1584 = (_OWORD *)(a1 + 6816);
  v1585 = (__int128 *)(a2 + 852);
  v1586 = a2[852];
  if (*(_QWORD *)(a1 + 6816))
  {
    if (v1586)
    {
      v1587 = a2[853];
      *(_QWORD *)(a1 + 6816) = v1586;
      *(_QWORD *)(a1 + 6824) = v1587;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6832) = a2[854];
      *(_QWORD *)(a1 + 6840) = a2[855];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1588 = a2[857];
      *(_QWORD *)(a1 + 6848) = a2[856];
      *(_QWORD *)(a1 + 6856) = v1588;
      swift_retain();
      swift_release();
      v1589 = a2[858];
      *(_BYTE *)(a1 + 6872) = *((_BYTE *)a2 + 6872);
      *(_QWORD *)(a1 + 6864) = v1589;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6816);
      v1594 = *((_OWORD *)a2 + 427);
      v1593 = *((_OWORD *)a2 + 428);
      v1595 = *v1585;
      *(_OWORD *)(a1 + 6857) = *(_OWORD *)((char *)a2 + 6857);
      *(_OWORD *)(a1 + 6832) = v1594;
      *(_OWORD *)(a1 + 6848) = v1593;
      *v1584 = v1595;
    }
  }
  else if (v1586)
  {
    v1590 = a2[853];
    *(_QWORD *)(a1 + 6816) = v1586;
    *(_QWORD *)(a1 + 6824) = v1590;
    *(_QWORD *)(a1 + 6832) = a2[854];
    *(_QWORD *)(a1 + 6840) = a2[855];
    v1591 = a2[857];
    *(_QWORD *)(a1 + 6848) = a2[856];
    *(_QWORD *)(a1 + 6856) = v1591;
    v1592 = a2[858];
    *(_BYTE *)(a1 + 6872) = *((_BYTE *)a2 + 6872);
    *(_QWORD *)(a1 + 6864) = v1592;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1596 = *v1585;
    v1597 = *((_OWORD *)a2 + 427);
    v1598 = *((_OWORD *)a2 + 428);
    *(_OWORD *)(a1 + 6857) = *(_OWORD *)((char *)a2 + 6857);
    *(_OWORD *)(a1 + 6832) = v1597;
    *(_OWORD *)(a1 + 6848) = v1598;
    *v1584 = v1596;
  }
  v1599 = (_OWORD *)(a1 + 6880);
  v1600 = (__int128 *)(a2 + 860);
  v1601 = a2[860];
  if (*(_QWORD *)(a1 + 6880))
  {
    if (v1601)
    {
      v1602 = a2[861];
      *(_QWORD *)(a1 + 6880) = v1601;
      *(_QWORD *)(a1 + 6888) = v1602;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6896) = a2[862];
      *(_QWORD *)(a1 + 6904) = a2[863];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1603 = a2[865];
      *(_QWORD *)(a1 + 6912) = a2[864];
      *(_QWORD *)(a1 + 6920) = v1603;
      swift_retain();
      swift_release();
      v1604 = a2[866];
      *(_BYTE *)(a1 + 6936) = *((_BYTE *)a2 + 6936);
      *(_QWORD *)(a1 + 6928) = v1604;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6880);
      v1609 = *((_OWORD *)a2 + 431);
      v1608 = *((_OWORD *)a2 + 432);
      v1610 = *v1600;
      *(_OWORD *)(a1 + 6921) = *(_OWORD *)((char *)a2 + 6921);
      *(_OWORD *)(a1 + 6896) = v1609;
      *(_OWORD *)(a1 + 6912) = v1608;
      *v1599 = v1610;
    }
  }
  else if (v1601)
  {
    v1605 = a2[861];
    *(_QWORD *)(a1 + 6880) = v1601;
    *(_QWORD *)(a1 + 6888) = v1605;
    *(_QWORD *)(a1 + 6896) = a2[862];
    *(_QWORD *)(a1 + 6904) = a2[863];
    v1606 = a2[865];
    *(_QWORD *)(a1 + 6912) = a2[864];
    *(_QWORD *)(a1 + 6920) = v1606;
    v1607 = a2[866];
    *(_BYTE *)(a1 + 6936) = *((_BYTE *)a2 + 6936);
    *(_QWORD *)(a1 + 6928) = v1607;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1611 = *v1600;
    v1612 = *((_OWORD *)a2 + 431);
    v1613 = *((_OWORD *)a2 + 432);
    *(_OWORD *)(a1 + 6921) = *(_OWORD *)((char *)a2 + 6921);
    *(_OWORD *)(a1 + 6896) = v1612;
    *(_OWORD *)(a1 + 6912) = v1613;
    *v1599 = v1611;
  }
  v1614 = (_OWORD *)(a1 + 6944);
  v1615 = a2 + 868;
  v1616 = a2[868];
  if (*(_QWORD *)(a1 + 6944))
  {
    if (v1616)
    {
      v1617 = a2[869];
      *(_QWORD *)(a1 + 6944) = v1616;
      *(_QWORD *)(a1 + 6952) = v1617;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6960) = a2[870];
      *(_QWORD *)(a1 + 6968) = a2[871];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 6944);
      v1619 = *((_OWORD *)a2 + 435);
      *v1614 = *v1615;
      *(_OWORD *)(a1 + 6960) = v1619;
    }
  }
  else if (v1616)
  {
    v1618 = a2[869];
    *(_QWORD *)(a1 + 6944) = v1616;
    *(_QWORD *)(a1 + 6952) = v1618;
    *(_QWORD *)(a1 + 6960) = a2[870];
    *(_QWORD *)(a1 + 6968) = a2[871];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1620 = *((_OWORD *)a2 + 435);
    *v1614 = *v1615;
    *(_OWORD *)(a1 + 6960) = v1620;
  }
  v1621 = (_OWORD *)(a1 + 6976);
  v1622 = (__int128 *)(a2 + 872);
  v1623 = a2[872];
  if (*(_QWORD *)(a1 + 6976))
  {
    if (v1623)
    {
      v1624 = a2[873];
      *(_QWORD *)(a1 + 6976) = v1623;
      *(_QWORD *)(a1 + 6984) = v1624;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 6992) = a2[874];
      *(_QWORD *)(a1 + 7000) = a2[875];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1625 = a2[877];
      *(_QWORD *)(a1 + 7008) = a2[876];
      *(_QWORD *)(a1 + 7016) = v1625;
      swift_retain();
      swift_release();
      v1626 = a2[878];
      *(_BYTE *)(a1 + 7032) = *((_BYTE *)a2 + 7032);
      *(_QWORD *)(a1 + 7024) = v1626;
    }
    else
    {
      sub_1AD3C2B88(a1 + 6976);
      v1631 = *((_OWORD *)a2 + 437);
      v1630 = *((_OWORD *)a2 + 438);
      v1632 = *v1622;
      *(_OWORD *)(a1 + 7017) = *(_OWORD *)((char *)a2 + 7017);
      *(_OWORD *)(a1 + 6992) = v1631;
      *(_OWORD *)(a1 + 7008) = v1630;
      *v1621 = v1632;
    }
  }
  else if (v1623)
  {
    v1627 = a2[873];
    *(_QWORD *)(a1 + 6976) = v1623;
    *(_QWORD *)(a1 + 6984) = v1627;
    *(_QWORD *)(a1 + 6992) = a2[874];
    *(_QWORD *)(a1 + 7000) = a2[875];
    v1628 = a2[877];
    *(_QWORD *)(a1 + 7008) = a2[876];
    *(_QWORD *)(a1 + 7016) = v1628;
    v1629 = a2[878];
    *(_BYTE *)(a1 + 7032) = *((_BYTE *)a2 + 7032);
    *(_QWORD *)(a1 + 7024) = v1629;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1633 = *v1622;
    v1634 = *((_OWORD *)a2 + 437);
    v1635 = *((_OWORD *)a2 + 438);
    *(_OWORD *)(a1 + 7017) = *(_OWORD *)((char *)a2 + 7017);
    *(_OWORD *)(a1 + 6992) = v1634;
    *(_OWORD *)(a1 + 7008) = v1635;
    *v1621 = v1633;
  }
  v1636 = (_OWORD *)(a1 + 7040);
  v1637 = (__int128 *)(a2 + 880);
  v1638 = a2[880];
  if (*(_QWORD *)(a1 + 7040))
  {
    if (v1638)
    {
      v1639 = a2[881];
      *(_QWORD *)(a1 + 7040) = v1638;
      *(_QWORD *)(a1 + 7048) = v1639;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7056) = a2[882];
      *(_QWORD *)(a1 + 7064) = a2[883];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1640 = a2[885];
      *(_QWORD *)(a1 + 7072) = a2[884];
      *(_QWORD *)(a1 + 7080) = v1640;
      swift_retain();
      swift_release();
      v1641 = a2[886];
      *(_BYTE *)(a1 + 7096) = *((_BYTE *)a2 + 7096);
      *(_QWORD *)(a1 + 7088) = v1641;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7040);
      v1646 = *((_OWORD *)a2 + 441);
      v1645 = *((_OWORD *)a2 + 442);
      v1647 = *v1637;
      *(_OWORD *)(a1 + 7081) = *(_OWORD *)((char *)a2 + 7081);
      *(_OWORD *)(a1 + 7056) = v1646;
      *(_OWORD *)(a1 + 7072) = v1645;
      *v1636 = v1647;
    }
  }
  else if (v1638)
  {
    v1642 = a2[881];
    *(_QWORD *)(a1 + 7040) = v1638;
    *(_QWORD *)(a1 + 7048) = v1642;
    *(_QWORD *)(a1 + 7056) = a2[882];
    *(_QWORD *)(a1 + 7064) = a2[883];
    v1643 = a2[885];
    *(_QWORD *)(a1 + 7072) = a2[884];
    *(_QWORD *)(a1 + 7080) = v1643;
    v1644 = a2[886];
    *(_BYTE *)(a1 + 7096) = *((_BYTE *)a2 + 7096);
    *(_QWORD *)(a1 + 7088) = v1644;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1648 = *v1637;
    v1649 = *((_OWORD *)a2 + 441);
    v1650 = *((_OWORD *)a2 + 442);
    *(_OWORD *)(a1 + 7081) = *(_OWORD *)((char *)a2 + 7081);
    *(_OWORD *)(a1 + 7056) = v1649;
    *(_OWORD *)(a1 + 7072) = v1650;
    *v1636 = v1648;
  }
  v1651 = (_OWORD *)(a1 + 7104);
  v1652 = (__int128 *)(a2 + 888);
  v1653 = a2[888];
  if (*(_QWORD *)(a1 + 7104))
  {
    if (v1653)
    {
      v1654 = a2[889];
      *(_QWORD *)(a1 + 7104) = v1653;
      *(_QWORD *)(a1 + 7112) = v1654;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7120) = a2[890];
      *(_QWORD *)(a1 + 7128) = a2[891];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1655 = a2[893];
      *(_QWORD *)(a1 + 7136) = a2[892];
      *(_QWORD *)(a1 + 7144) = v1655;
      swift_retain();
      swift_release();
      v1656 = a2[894];
      *(_BYTE *)(a1 + 7160) = *((_BYTE *)a2 + 7160);
      *(_QWORD *)(a1 + 7152) = v1656;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7104);
      v1661 = *((_OWORD *)a2 + 445);
      v1660 = *((_OWORD *)a2 + 446);
      v1662 = *v1652;
      *(_OWORD *)(a1 + 7145) = *(_OWORD *)((char *)a2 + 7145);
      *(_OWORD *)(a1 + 7120) = v1661;
      *(_OWORD *)(a1 + 7136) = v1660;
      *v1651 = v1662;
    }
  }
  else if (v1653)
  {
    v1657 = a2[889];
    *(_QWORD *)(a1 + 7104) = v1653;
    *(_QWORD *)(a1 + 7112) = v1657;
    *(_QWORD *)(a1 + 7120) = a2[890];
    *(_QWORD *)(a1 + 7128) = a2[891];
    v1658 = a2[893];
    *(_QWORD *)(a1 + 7136) = a2[892];
    *(_QWORD *)(a1 + 7144) = v1658;
    v1659 = a2[894];
    *(_BYTE *)(a1 + 7160) = *((_BYTE *)a2 + 7160);
    *(_QWORD *)(a1 + 7152) = v1659;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1663 = *v1652;
    v1664 = *((_OWORD *)a2 + 445);
    v1665 = *((_OWORD *)a2 + 446);
    *(_OWORD *)(a1 + 7145) = *(_OWORD *)((char *)a2 + 7145);
    *(_OWORD *)(a1 + 7120) = v1664;
    *(_OWORD *)(a1 + 7136) = v1665;
    *v1651 = v1663;
  }
  v1666 = (_OWORD *)(a1 + 7168);
  v1667 = a2 + 896;
  v1668 = a2[896];
  if (*(_QWORD *)(a1 + 7168))
  {
    if (v1668)
    {
      v1669 = a2[897];
      *(_QWORD *)(a1 + 7168) = v1668;
      *(_QWORD *)(a1 + 7176) = v1669;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7184) = a2[898];
      *(_QWORD *)(a1 + 7192) = a2[899];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 7168);
      v1671 = *((_OWORD *)a2 + 449);
      *v1666 = *v1667;
      *(_OWORD *)(a1 + 7184) = v1671;
    }
  }
  else if (v1668)
  {
    v1670 = a2[897];
    *(_QWORD *)(a1 + 7168) = v1668;
    *(_QWORD *)(a1 + 7176) = v1670;
    *(_QWORD *)(a1 + 7184) = a2[898];
    *(_QWORD *)(a1 + 7192) = a2[899];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1672 = *((_OWORD *)a2 + 449);
    *v1666 = *v1667;
    *(_OWORD *)(a1 + 7184) = v1672;
  }
  v1673 = (_OWORD *)(a1 + 7200);
  v1674 = (__int128 *)(a2 + 900);
  v1675 = a2[900];
  if (*(_QWORD *)(a1 + 7200))
  {
    if (v1675)
    {
      v1676 = a2[901];
      *(_QWORD *)(a1 + 7200) = v1675;
      *(_QWORD *)(a1 + 7208) = v1676;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7216) = a2[902];
      *(_QWORD *)(a1 + 7224) = a2[903];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1677 = a2[905];
      *(_QWORD *)(a1 + 7232) = a2[904];
      *(_QWORD *)(a1 + 7240) = v1677;
      swift_retain();
      swift_release();
      v1678 = a2[906];
      *(_BYTE *)(a1 + 7256) = *((_BYTE *)a2 + 7256);
      *(_QWORD *)(a1 + 7248) = v1678;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7200);
      v1683 = *((_OWORD *)a2 + 451);
      v1682 = *((_OWORD *)a2 + 452);
      v1684 = *v1674;
      *(_OWORD *)(a1 + 7241) = *(_OWORD *)((char *)a2 + 7241);
      *(_OWORD *)(a1 + 7216) = v1683;
      *(_OWORD *)(a1 + 7232) = v1682;
      *v1673 = v1684;
    }
  }
  else if (v1675)
  {
    v1679 = a2[901];
    *(_QWORD *)(a1 + 7200) = v1675;
    *(_QWORD *)(a1 + 7208) = v1679;
    *(_QWORD *)(a1 + 7216) = a2[902];
    *(_QWORD *)(a1 + 7224) = a2[903];
    v1680 = a2[905];
    *(_QWORD *)(a1 + 7232) = a2[904];
    *(_QWORD *)(a1 + 7240) = v1680;
    v1681 = a2[906];
    *(_BYTE *)(a1 + 7256) = *((_BYTE *)a2 + 7256);
    *(_QWORD *)(a1 + 7248) = v1681;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1685 = *v1674;
    v1686 = *((_OWORD *)a2 + 451);
    v1687 = *((_OWORD *)a2 + 452);
    *(_OWORD *)(a1 + 7241) = *(_OWORD *)((char *)a2 + 7241);
    *(_OWORD *)(a1 + 7216) = v1686;
    *(_OWORD *)(a1 + 7232) = v1687;
    *v1673 = v1685;
  }
  v1688 = (_OWORD *)(a1 + 7264);
  v1689 = (__int128 *)(a2 + 908);
  v1690 = a2[908];
  if (*(_QWORD *)(a1 + 7264))
  {
    if (v1690)
    {
      v1691 = a2[909];
      *(_QWORD *)(a1 + 7264) = v1690;
      *(_QWORD *)(a1 + 7272) = v1691;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7280) = a2[910];
      *(_QWORD *)(a1 + 7288) = a2[911];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1692 = a2[913];
      *(_QWORD *)(a1 + 7296) = a2[912];
      *(_QWORD *)(a1 + 7304) = v1692;
      swift_retain();
      swift_release();
      v1693 = a2[914];
      *(_BYTE *)(a1 + 7320) = *((_BYTE *)a2 + 7320);
      *(_QWORD *)(a1 + 7312) = v1693;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7264);
      v1698 = *((_OWORD *)a2 + 455);
      v1697 = *((_OWORD *)a2 + 456);
      v1699 = *v1689;
      *(_OWORD *)(a1 + 7305) = *(_OWORD *)((char *)a2 + 7305);
      *(_OWORD *)(a1 + 7280) = v1698;
      *(_OWORD *)(a1 + 7296) = v1697;
      *v1688 = v1699;
    }
  }
  else if (v1690)
  {
    v1694 = a2[909];
    *(_QWORD *)(a1 + 7264) = v1690;
    *(_QWORD *)(a1 + 7272) = v1694;
    *(_QWORD *)(a1 + 7280) = a2[910];
    *(_QWORD *)(a1 + 7288) = a2[911];
    v1695 = a2[913];
    *(_QWORD *)(a1 + 7296) = a2[912];
    *(_QWORD *)(a1 + 7304) = v1695;
    v1696 = a2[914];
    *(_BYTE *)(a1 + 7320) = *((_BYTE *)a2 + 7320);
    *(_QWORD *)(a1 + 7312) = v1696;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1700 = *v1689;
    v1701 = *((_OWORD *)a2 + 455);
    v1702 = *((_OWORD *)a2 + 456);
    *(_OWORD *)(a1 + 7305) = *(_OWORD *)((char *)a2 + 7305);
    *(_OWORD *)(a1 + 7280) = v1701;
    *(_OWORD *)(a1 + 7296) = v1702;
    *v1688 = v1700;
  }
  v1703 = (_OWORD *)(a1 + 7328);
  v1704 = (__int128 *)(a2 + 916);
  v1705 = a2[916];
  if (*(_QWORD *)(a1 + 7328))
  {
    if (v1705)
    {
      v1706 = a2[917];
      *(_QWORD *)(a1 + 7328) = v1705;
      *(_QWORD *)(a1 + 7336) = v1706;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7344) = a2[918];
      *(_QWORD *)(a1 + 7352) = a2[919];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1707 = a2[921];
      *(_QWORD *)(a1 + 7360) = a2[920];
      *(_QWORD *)(a1 + 7368) = v1707;
      swift_retain();
      swift_release();
      v1708 = a2[922];
      *(_BYTE *)(a1 + 7384) = *((_BYTE *)a2 + 7384);
      *(_QWORD *)(a1 + 7376) = v1708;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7328);
      v1713 = *((_OWORD *)a2 + 459);
      v1712 = *((_OWORD *)a2 + 460);
      v1714 = *v1704;
      *(_OWORD *)(a1 + 7369) = *(_OWORD *)((char *)a2 + 7369);
      *(_OWORD *)(a1 + 7344) = v1713;
      *(_OWORD *)(a1 + 7360) = v1712;
      *v1703 = v1714;
    }
  }
  else if (v1705)
  {
    v1709 = a2[917];
    *(_QWORD *)(a1 + 7328) = v1705;
    *(_QWORD *)(a1 + 7336) = v1709;
    *(_QWORD *)(a1 + 7344) = a2[918];
    *(_QWORD *)(a1 + 7352) = a2[919];
    v1710 = a2[921];
    *(_QWORD *)(a1 + 7360) = a2[920];
    *(_QWORD *)(a1 + 7368) = v1710;
    v1711 = a2[922];
    *(_BYTE *)(a1 + 7384) = *((_BYTE *)a2 + 7384);
    *(_QWORD *)(a1 + 7376) = v1711;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1715 = *v1704;
    v1716 = *((_OWORD *)a2 + 459);
    v1717 = *((_OWORD *)a2 + 460);
    *(_OWORD *)(a1 + 7369) = *(_OWORD *)((char *)a2 + 7369);
    *(_OWORD *)(a1 + 7344) = v1716;
    *(_OWORD *)(a1 + 7360) = v1717;
    *v1703 = v1715;
  }
  v1718 = (_OWORD *)(a1 + 7392);
  v1719 = a2 + 924;
  v1720 = a2[924];
  if (*(_QWORD *)(a1 + 7392))
  {
    if (v1720)
    {
      v1721 = a2[925];
      *(_QWORD *)(a1 + 7392) = v1720;
      *(_QWORD *)(a1 + 7400) = v1721;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7408) = a2[926];
      *(_QWORD *)(a1 + 7416) = a2[927];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 7392);
      v1723 = *((_OWORD *)a2 + 463);
      *v1718 = *v1719;
      *(_OWORD *)(a1 + 7408) = v1723;
    }
  }
  else if (v1720)
  {
    v1722 = a2[925];
    *(_QWORD *)(a1 + 7392) = v1720;
    *(_QWORD *)(a1 + 7400) = v1722;
    *(_QWORD *)(a1 + 7408) = a2[926];
    *(_QWORD *)(a1 + 7416) = a2[927];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1724 = *((_OWORD *)a2 + 463);
    *v1718 = *v1719;
    *(_OWORD *)(a1 + 7408) = v1724;
  }
  v1725 = (_OWORD *)(a1 + 7424);
  v1726 = (__int128 *)(a2 + 928);
  v1727 = a2[928];
  if (*(_QWORD *)(a1 + 7424))
  {
    if (v1727)
    {
      v1728 = a2[929];
      *(_QWORD *)(a1 + 7424) = v1727;
      *(_QWORD *)(a1 + 7432) = v1728;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7440) = a2[930];
      *(_QWORD *)(a1 + 7448) = a2[931];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1729 = a2[933];
      *(_QWORD *)(a1 + 7456) = a2[932];
      *(_QWORD *)(a1 + 7464) = v1729;
      swift_retain();
      swift_release();
      v1730 = a2[934];
      *(_BYTE *)(a1 + 7480) = *((_BYTE *)a2 + 7480);
      *(_QWORD *)(a1 + 7472) = v1730;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7424);
      v1735 = *((_OWORD *)a2 + 465);
      v1734 = *((_OWORD *)a2 + 466);
      v1736 = *v1726;
      *(_OWORD *)(a1 + 7465) = *(_OWORD *)((char *)a2 + 7465);
      *(_OWORD *)(a1 + 7440) = v1735;
      *(_OWORD *)(a1 + 7456) = v1734;
      *v1725 = v1736;
    }
  }
  else if (v1727)
  {
    v1731 = a2[929];
    *(_QWORD *)(a1 + 7424) = v1727;
    *(_QWORD *)(a1 + 7432) = v1731;
    *(_QWORD *)(a1 + 7440) = a2[930];
    *(_QWORD *)(a1 + 7448) = a2[931];
    v1732 = a2[933];
    *(_QWORD *)(a1 + 7456) = a2[932];
    *(_QWORD *)(a1 + 7464) = v1732;
    v1733 = a2[934];
    *(_BYTE *)(a1 + 7480) = *((_BYTE *)a2 + 7480);
    *(_QWORD *)(a1 + 7472) = v1733;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1737 = *v1726;
    v1738 = *((_OWORD *)a2 + 465);
    v1739 = *((_OWORD *)a2 + 466);
    *(_OWORD *)(a1 + 7465) = *(_OWORD *)((char *)a2 + 7465);
    *(_OWORD *)(a1 + 7440) = v1738;
    *(_OWORD *)(a1 + 7456) = v1739;
    *v1725 = v1737;
  }
  v1740 = (_OWORD *)(a1 + 7488);
  v1741 = (__int128 *)(a2 + 936);
  v1742 = a2[936];
  if (*(_QWORD *)(a1 + 7488))
  {
    if (v1742)
    {
      v1743 = a2[937];
      *(_QWORD *)(a1 + 7488) = v1742;
      *(_QWORD *)(a1 + 7496) = v1743;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7504) = a2[938];
      *(_QWORD *)(a1 + 7512) = a2[939];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1744 = a2[941];
      *(_QWORD *)(a1 + 7520) = a2[940];
      *(_QWORD *)(a1 + 7528) = v1744;
      swift_retain();
      swift_release();
      v1745 = a2[942];
      *(_BYTE *)(a1 + 7544) = *((_BYTE *)a2 + 7544);
      *(_QWORD *)(a1 + 7536) = v1745;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7488);
      v1750 = *((_OWORD *)a2 + 469);
      v1749 = *((_OWORD *)a2 + 470);
      v1751 = *v1741;
      *(_OWORD *)(a1 + 7529) = *(_OWORD *)((char *)a2 + 7529);
      *(_OWORD *)(a1 + 7504) = v1750;
      *(_OWORD *)(a1 + 7520) = v1749;
      *v1740 = v1751;
    }
  }
  else if (v1742)
  {
    v1746 = a2[937];
    *(_QWORD *)(a1 + 7488) = v1742;
    *(_QWORD *)(a1 + 7496) = v1746;
    *(_QWORD *)(a1 + 7504) = a2[938];
    *(_QWORD *)(a1 + 7512) = a2[939];
    v1747 = a2[941];
    *(_QWORD *)(a1 + 7520) = a2[940];
    *(_QWORD *)(a1 + 7528) = v1747;
    v1748 = a2[942];
    *(_BYTE *)(a1 + 7544) = *((_BYTE *)a2 + 7544);
    *(_QWORD *)(a1 + 7536) = v1748;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1752 = *v1741;
    v1753 = *((_OWORD *)a2 + 469);
    v1754 = *((_OWORD *)a2 + 470);
    *(_OWORD *)(a1 + 7529) = *(_OWORD *)((char *)a2 + 7529);
    *(_OWORD *)(a1 + 7504) = v1753;
    *(_OWORD *)(a1 + 7520) = v1754;
    *v1740 = v1752;
  }
  v1755 = (_OWORD *)(a1 + 7552);
  v1756 = (__int128 *)(a2 + 944);
  v1757 = a2[944];
  if (*(_QWORD *)(a1 + 7552))
  {
    if (v1757)
    {
      v1758 = a2[945];
      *(_QWORD *)(a1 + 7552) = v1757;
      *(_QWORD *)(a1 + 7560) = v1758;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7568) = a2[946];
      *(_QWORD *)(a1 + 7576) = a2[947];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1759 = a2[949];
      *(_QWORD *)(a1 + 7584) = a2[948];
      *(_QWORD *)(a1 + 7592) = v1759;
      swift_retain();
      swift_release();
      v1760 = a2[950];
      *(_BYTE *)(a1 + 7608) = *((_BYTE *)a2 + 7608);
      *(_QWORD *)(a1 + 7600) = v1760;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7552);
      v1765 = *((_OWORD *)a2 + 473);
      v1764 = *((_OWORD *)a2 + 474);
      v1766 = *v1756;
      *(_OWORD *)(a1 + 7593) = *(_OWORD *)((char *)a2 + 7593);
      *(_OWORD *)(a1 + 7568) = v1765;
      *(_OWORD *)(a1 + 7584) = v1764;
      *v1755 = v1766;
    }
  }
  else if (v1757)
  {
    v1761 = a2[945];
    *(_QWORD *)(a1 + 7552) = v1757;
    *(_QWORD *)(a1 + 7560) = v1761;
    *(_QWORD *)(a1 + 7568) = a2[946];
    *(_QWORD *)(a1 + 7576) = a2[947];
    v1762 = a2[949];
    *(_QWORD *)(a1 + 7584) = a2[948];
    *(_QWORD *)(a1 + 7592) = v1762;
    v1763 = a2[950];
    *(_BYTE *)(a1 + 7608) = *((_BYTE *)a2 + 7608);
    *(_QWORD *)(a1 + 7600) = v1763;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1767 = *v1756;
    v1768 = *((_OWORD *)a2 + 473);
    v1769 = *((_OWORD *)a2 + 474);
    *(_OWORD *)(a1 + 7593) = *(_OWORD *)((char *)a2 + 7593);
    *(_OWORD *)(a1 + 7568) = v1768;
    *(_OWORD *)(a1 + 7584) = v1769;
    *v1755 = v1767;
  }
  v1770 = (_OWORD *)(a1 + 7616);
  v1771 = a2 + 952;
  v1772 = a2[952];
  if (*(_QWORD *)(a1 + 7616))
  {
    if (v1772)
    {
      v1773 = a2[953];
      *(_QWORD *)(a1 + 7616) = v1772;
      *(_QWORD *)(a1 + 7624) = v1773;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7632) = a2[954];
      *(_QWORD *)(a1 + 7640) = a2[955];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 7616);
      v1775 = *((_OWORD *)a2 + 477);
      *v1770 = *v1771;
      *(_OWORD *)(a1 + 7632) = v1775;
    }
  }
  else if (v1772)
  {
    v1774 = a2[953];
    *(_QWORD *)(a1 + 7616) = v1772;
    *(_QWORD *)(a1 + 7624) = v1774;
    *(_QWORD *)(a1 + 7632) = a2[954];
    *(_QWORD *)(a1 + 7640) = a2[955];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1776 = *((_OWORD *)a2 + 477);
    *v1770 = *v1771;
    *(_OWORD *)(a1 + 7632) = v1776;
  }
  v1777 = (_OWORD *)(a1 + 7648);
  v1778 = (__int128 *)(a2 + 956);
  v1779 = a2[956];
  if (*(_QWORD *)(a1 + 7648))
  {
    if (v1779)
    {
      v1780 = a2[957];
      *(_QWORD *)(a1 + 7648) = v1779;
      *(_QWORD *)(a1 + 7656) = v1780;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7664) = a2[958];
      *(_QWORD *)(a1 + 7672) = a2[959];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1781 = a2[961];
      *(_QWORD *)(a1 + 7680) = a2[960];
      *(_QWORD *)(a1 + 7688) = v1781;
      swift_retain();
      swift_release();
      v1782 = a2[962];
      *(_BYTE *)(a1 + 7704) = *((_BYTE *)a2 + 7704);
      *(_QWORD *)(a1 + 7696) = v1782;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7648);
      v1787 = *((_OWORD *)a2 + 479);
      v1786 = *((_OWORD *)a2 + 480);
      v1788 = *v1778;
      *(_OWORD *)(a1 + 7689) = *(_OWORD *)((char *)a2 + 7689);
      *(_OWORD *)(a1 + 7664) = v1787;
      *(_OWORD *)(a1 + 7680) = v1786;
      *v1777 = v1788;
    }
  }
  else if (v1779)
  {
    v1783 = a2[957];
    *(_QWORD *)(a1 + 7648) = v1779;
    *(_QWORD *)(a1 + 7656) = v1783;
    *(_QWORD *)(a1 + 7664) = a2[958];
    *(_QWORD *)(a1 + 7672) = a2[959];
    v1784 = a2[961];
    *(_QWORD *)(a1 + 7680) = a2[960];
    *(_QWORD *)(a1 + 7688) = v1784;
    v1785 = a2[962];
    *(_BYTE *)(a1 + 7704) = *((_BYTE *)a2 + 7704);
    *(_QWORD *)(a1 + 7696) = v1785;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1789 = *v1778;
    v1790 = *((_OWORD *)a2 + 479);
    v1791 = *((_OWORD *)a2 + 480);
    *(_OWORD *)(a1 + 7689) = *(_OWORD *)((char *)a2 + 7689);
    *(_OWORD *)(a1 + 7664) = v1790;
    *(_OWORD *)(a1 + 7680) = v1791;
    *v1777 = v1789;
  }
  v1792 = (_OWORD *)(a1 + 7712);
  v1793 = (__int128 *)(a2 + 964);
  v1794 = a2[964];
  if (*(_QWORD *)(a1 + 7712))
  {
    if (v1794)
    {
      v1795 = a2[965];
      *(_QWORD *)(a1 + 7712) = v1794;
      *(_QWORD *)(a1 + 7720) = v1795;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7728) = a2[966];
      *(_QWORD *)(a1 + 7736) = a2[967];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1796 = a2[969];
      *(_QWORD *)(a1 + 7744) = a2[968];
      *(_QWORD *)(a1 + 7752) = v1796;
      swift_retain();
      swift_release();
      v1797 = a2[970];
      *(_BYTE *)(a1 + 7768) = *((_BYTE *)a2 + 7768);
      *(_QWORD *)(a1 + 7760) = v1797;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7712);
      v1802 = *((_OWORD *)a2 + 483);
      v1801 = *((_OWORD *)a2 + 484);
      v1803 = *v1793;
      *(_OWORD *)(a1 + 7753) = *(_OWORD *)((char *)a2 + 7753);
      *(_OWORD *)(a1 + 7728) = v1802;
      *(_OWORD *)(a1 + 7744) = v1801;
      *v1792 = v1803;
    }
  }
  else if (v1794)
  {
    v1798 = a2[965];
    *(_QWORD *)(a1 + 7712) = v1794;
    *(_QWORD *)(a1 + 7720) = v1798;
    *(_QWORD *)(a1 + 7728) = a2[966];
    *(_QWORD *)(a1 + 7736) = a2[967];
    v1799 = a2[969];
    *(_QWORD *)(a1 + 7744) = a2[968];
    *(_QWORD *)(a1 + 7752) = v1799;
    v1800 = a2[970];
    *(_BYTE *)(a1 + 7768) = *((_BYTE *)a2 + 7768);
    *(_QWORD *)(a1 + 7760) = v1800;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1804 = *v1793;
    v1805 = *((_OWORD *)a2 + 483);
    v1806 = *((_OWORD *)a2 + 484);
    *(_OWORD *)(a1 + 7753) = *(_OWORD *)((char *)a2 + 7753);
    *(_OWORD *)(a1 + 7728) = v1805;
    *(_OWORD *)(a1 + 7744) = v1806;
    *v1792 = v1804;
  }
  v1807 = (_OWORD *)(a1 + 7776);
  v1808 = (__int128 *)(a2 + 972);
  v1809 = a2[972];
  if (*(_QWORD *)(a1 + 7776))
  {
    if (v1809)
    {
      v1810 = a2[973];
      *(_QWORD *)(a1 + 7776) = v1809;
      *(_QWORD *)(a1 + 7784) = v1810;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7792) = a2[974];
      *(_QWORD *)(a1 + 7800) = a2[975];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1811 = a2[977];
      *(_QWORD *)(a1 + 7808) = a2[976];
      *(_QWORD *)(a1 + 7816) = v1811;
      swift_retain();
      swift_release();
      v1812 = a2[978];
      *(_BYTE *)(a1 + 7832) = *((_BYTE *)a2 + 7832);
      *(_QWORD *)(a1 + 7824) = v1812;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7776);
      v1817 = *((_OWORD *)a2 + 487);
      v1816 = *((_OWORD *)a2 + 488);
      v1818 = *v1808;
      *(_OWORD *)(a1 + 7817) = *(_OWORD *)((char *)a2 + 7817);
      *(_OWORD *)(a1 + 7792) = v1817;
      *(_OWORD *)(a1 + 7808) = v1816;
      *v1807 = v1818;
    }
  }
  else if (v1809)
  {
    v1813 = a2[973];
    *(_QWORD *)(a1 + 7776) = v1809;
    *(_QWORD *)(a1 + 7784) = v1813;
    *(_QWORD *)(a1 + 7792) = a2[974];
    *(_QWORD *)(a1 + 7800) = a2[975];
    v1814 = a2[977];
    *(_QWORD *)(a1 + 7808) = a2[976];
    *(_QWORD *)(a1 + 7816) = v1814;
    v1815 = a2[978];
    *(_BYTE *)(a1 + 7832) = *((_BYTE *)a2 + 7832);
    *(_QWORD *)(a1 + 7824) = v1815;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1819 = *v1808;
    v1820 = *((_OWORD *)a2 + 487);
    v1821 = *((_OWORD *)a2 + 488);
    *(_OWORD *)(a1 + 7817) = *(_OWORD *)((char *)a2 + 7817);
    *(_OWORD *)(a1 + 7792) = v1820;
    *(_OWORD *)(a1 + 7808) = v1821;
    *v1807 = v1819;
  }
  v1822 = (_OWORD *)(a1 + 7840);
  v1823 = a2 + 980;
  v1824 = a2[980];
  if (*(_QWORD *)(a1 + 7840))
  {
    if (v1824)
    {
      v1825 = a2[981];
      *(_QWORD *)(a1 + 7840) = v1824;
      *(_QWORD *)(a1 + 7848) = v1825;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7856) = a2[982];
      *(_QWORD *)(a1 + 7864) = a2[983];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 7840);
      v1827 = *((_OWORD *)a2 + 491);
      *v1822 = *v1823;
      *(_OWORD *)(a1 + 7856) = v1827;
    }
  }
  else if (v1824)
  {
    v1826 = a2[981];
    *(_QWORD *)(a1 + 7840) = v1824;
    *(_QWORD *)(a1 + 7848) = v1826;
    *(_QWORD *)(a1 + 7856) = a2[982];
    *(_QWORD *)(a1 + 7864) = a2[983];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1828 = *((_OWORD *)a2 + 491);
    *v1822 = *v1823;
    *(_OWORD *)(a1 + 7856) = v1828;
  }
  v1829 = (_OWORD *)(a1 + 7872);
  v1830 = (__int128 *)(a2 + 984);
  v1831 = a2[984];
  if (*(_QWORD *)(a1 + 7872))
  {
    if (v1831)
    {
      v1832 = a2[985];
      *(_QWORD *)(a1 + 7872) = v1831;
      *(_QWORD *)(a1 + 7880) = v1832;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7888) = a2[986];
      *(_QWORD *)(a1 + 7896) = a2[987];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1833 = a2[989];
      *(_QWORD *)(a1 + 7904) = a2[988];
      *(_QWORD *)(a1 + 7912) = v1833;
      swift_retain();
      swift_release();
      v1834 = a2[990];
      *(_BYTE *)(a1 + 7928) = *((_BYTE *)a2 + 7928);
      *(_QWORD *)(a1 + 7920) = v1834;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7872);
      v1839 = *((_OWORD *)a2 + 493);
      v1838 = *((_OWORD *)a2 + 494);
      v1840 = *v1830;
      *(_OWORD *)(a1 + 7913) = *(_OWORD *)((char *)a2 + 7913);
      *(_OWORD *)(a1 + 7888) = v1839;
      *(_OWORD *)(a1 + 7904) = v1838;
      *v1829 = v1840;
    }
  }
  else if (v1831)
  {
    v1835 = a2[985];
    *(_QWORD *)(a1 + 7872) = v1831;
    *(_QWORD *)(a1 + 7880) = v1835;
    *(_QWORD *)(a1 + 7888) = a2[986];
    *(_QWORD *)(a1 + 7896) = a2[987];
    v1836 = a2[989];
    *(_QWORD *)(a1 + 7904) = a2[988];
    *(_QWORD *)(a1 + 7912) = v1836;
    v1837 = a2[990];
    *(_BYTE *)(a1 + 7928) = *((_BYTE *)a2 + 7928);
    *(_QWORD *)(a1 + 7920) = v1837;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1841 = *v1830;
    v1842 = *((_OWORD *)a2 + 493);
    v1843 = *((_OWORD *)a2 + 494);
    *(_OWORD *)(a1 + 7913) = *(_OWORD *)((char *)a2 + 7913);
    *(_OWORD *)(a1 + 7888) = v1842;
    *(_OWORD *)(a1 + 7904) = v1843;
    *v1829 = v1841;
  }
  v1844 = (_OWORD *)(a1 + 7936);
  v1845 = (__int128 *)(a2 + 992);
  v1846 = a2[992];
  if (*(_QWORD *)(a1 + 7936))
  {
    if (v1846)
    {
      v1847 = a2[993];
      *(_QWORD *)(a1 + 7936) = v1846;
      *(_QWORD *)(a1 + 7944) = v1847;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 7952) = a2[994];
      *(_QWORD *)(a1 + 7960) = a2[995];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1848 = a2[997];
      *(_QWORD *)(a1 + 7968) = a2[996];
      *(_QWORD *)(a1 + 7976) = v1848;
      swift_retain();
      swift_release();
      v1849 = a2[998];
      *(_BYTE *)(a1 + 7992) = *((_BYTE *)a2 + 7992);
      *(_QWORD *)(a1 + 7984) = v1849;
    }
    else
    {
      sub_1AD3C2B88(a1 + 7936);
      v1854 = *((_OWORD *)a2 + 497);
      v1853 = *((_OWORD *)a2 + 498);
      v1855 = *v1845;
      *(_OWORD *)(a1 + 7977) = *(_OWORD *)((char *)a2 + 7977);
      *(_OWORD *)(a1 + 7952) = v1854;
      *(_OWORD *)(a1 + 7968) = v1853;
      *v1844 = v1855;
    }
  }
  else if (v1846)
  {
    v1850 = a2[993];
    *(_QWORD *)(a1 + 7936) = v1846;
    *(_QWORD *)(a1 + 7944) = v1850;
    *(_QWORD *)(a1 + 7952) = a2[994];
    *(_QWORD *)(a1 + 7960) = a2[995];
    v1851 = a2[997];
    *(_QWORD *)(a1 + 7968) = a2[996];
    *(_QWORD *)(a1 + 7976) = v1851;
    v1852 = a2[998];
    *(_BYTE *)(a1 + 7992) = *((_BYTE *)a2 + 7992);
    *(_QWORD *)(a1 + 7984) = v1852;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1856 = *v1845;
    v1857 = *((_OWORD *)a2 + 497);
    v1858 = *((_OWORD *)a2 + 498);
    *(_OWORD *)(a1 + 7977) = *(_OWORD *)((char *)a2 + 7977);
    *(_OWORD *)(a1 + 7952) = v1857;
    *(_OWORD *)(a1 + 7968) = v1858;
    *v1844 = v1856;
  }
  v1859 = (_OWORD *)(a1 + 8000);
  v1860 = (__int128 *)(a2 + 1000);
  v1861 = a2[1000];
  if (*(_QWORD *)(a1 + 8000))
  {
    if (v1861)
    {
      v1862 = a2[1001];
      *(_QWORD *)(a1 + 8000) = v1861;
      *(_QWORD *)(a1 + 8008) = v1862;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8016) = a2[1002];
      *(_QWORD *)(a1 + 8024) = a2[1003];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1863 = a2[1005];
      *(_QWORD *)(a1 + 8032) = a2[1004];
      *(_QWORD *)(a1 + 8040) = v1863;
      swift_retain();
      swift_release();
      v1864 = a2[1006];
      *(_BYTE *)(a1 + 8056) = *((_BYTE *)a2 + 8056);
      *(_QWORD *)(a1 + 8048) = v1864;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8000);
      v1869 = *((_OWORD *)a2 + 501);
      v1868 = *((_OWORD *)a2 + 502);
      v1870 = *v1860;
      *(_OWORD *)(a1 + 8041) = *(_OWORD *)((char *)a2 + 8041);
      *(_OWORD *)(a1 + 8016) = v1869;
      *(_OWORD *)(a1 + 8032) = v1868;
      *v1859 = v1870;
    }
  }
  else if (v1861)
  {
    v1865 = a2[1001];
    *(_QWORD *)(a1 + 8000) = v1861;
    *(_QWORD *)(a1 + 8008) = v1865;
    *(_QWORD *)(a1 + 8016) = a2[1002];
    *(_QWORD *)(a1 + 8024) = a2[1003];
    v1866 = a2[1005];
    *(_QWORD *)(a1 + 8032) = a2[1004];
    *(_QWORD *)(a1 + 8040) = v1866;
    v1867 = a2[1006];
    *(_BYTE *)(a1 + 8056) = *((_BYTE *)a2 + 8056);
    *(_QWORD *)(a1 + 8048) = v1867;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1871 = *v1860;
    v1872 = *((_OWORD *)a2 + 501);
    v1873 = *((_OWORD *)a2 + 502);
    *(_OWORD *)(a1 + 8041) = *(_OWORD *)((char *)a2 + 8041);
    *(_OWORD *)(a1 + 8016) = v1872;
    *(_OWORD *)(a1 + 8032) = v1873;
    *v1859 = v1871;
  }
  v1874 = (_OWORD *)(a1 + 8064);
  v1875 = a2 + 1008;
  v1876 = a2[1008];
  if (*(_QWORD *)(a1 + 8064))
  {
    if (v1876)
    {
      v1877 = a2[1009];
      *(_QWORD *)(a1 + 8064) = v1876;
      *(_QWORD *)(a1 + 8072) = v1877;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8080) = a2[1010];
      *(_QWORD *)(a1 + 8088) = a2[1011];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 8064);
      v1879 = *((_OWORD *)a2 + 505);
      *v1874 = *v1875;
      *(_OWORD *)(a1 + 8080) = v1879;
    }
  }
  else if (v1876)
  {
    v1878 = a2[1009];
    *(_QWORD *)(a1 + 8064) = v1876;
    *(_QWORD *)(a1 + 8072) = v1878;
    *(_QWORD *)(a1 + 8080) = a2[1010];
    *(_QWORD *)(a1 + 8088) = a2[1011];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1880 = *((_OWORD *)a2 + 505);
    *v1874 = *v1875;
    *(_OWORD *)(a1 + 8080) = v1880;
  }
  v1881 = (_OWORD *)(a1 + 8096);
  v1882 = (__int128 *)(a2 + 1012);
  v1883 = a2[1012];
  if (*(_QWORD *)(a1 + 8096))
  {
    if (v1883)
    {
      v1884 = a2[1013];
      *(_QWORD *)(a1 + 8096) = v1883;
      *(_QWORD *)(a1 + 8104) = v1884;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8112) = a2[1014];
      *(_QWORD *)(a1 + 8120) = a2[1015];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1885 = a2[1017];
      *(_QWORD *)(a1 + 8128) = a2[1016];
      *(_QWORD *)(a1 + 8136) = v1885;
      swift_retain();
      swift_release();
      v1886 = a2[1018];
      *(_BYTE *)(a1 + 8152) = *((_BYTE *)a2 + 8152);
      *(_QWORD *)(a1 + 8144) = v1886;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8096);
      v1891 = *((_OWORD *)a2 + 507);
      v1890 = *((_OWORD *)a2 + 508);
      v1892 = *v1882;
      *(_OWORD *)(a1 + 8137) = *(_OWORD *)((char *)a2 + 8137);
      *(_OWORD *)(a1 + 8112) = v1891;
      *(_OWORD *)(a1 + 8128) = v1890;
      *v1881 = v1892;
    }
  }
  else if (v1883)
  {
    v1887 = a2[1013];
    *(_QWORD *)(a1 + 8096) = v1883;
    *(_QWORD *)(a1 + 8104) = v1887;
    *(_QWORD *)(a1 + 8112) = a2[1014];
    *(_QWORD *)(a1 + 8120) = a2[1015];
    v1888 = a2[1017];
    *(_QWORD *)(a1 + 8128) = a2[1016];
    *(_QWORD *)(a1 + 8136) = v1888;
    v1889 = a2[1018];
    *(_BYTE *)(a1 + 8152) = *((_BYTE *)a2 + 8152);
    *(_QWORD *)(a1 + 8144) = v1889;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1893 = *v1882;
    v1894 = *((_OWORD *)a2 + 507);
    v1895 = *((_OWORD *)a2 + 508);
    *(_OWORD *)(a1 + 8137) = *(_OWORD *)((char *)a2 + 8137);
    *(_OWORD *)(a1 + 8112) = v1894;
    *(_OWORD *)(a1 + 8128) = v1895;
    *v1881 = v1893;
  }
  v1896 = (_OWORD *)(a1 + 8160);
  v1897 = (__int128 *)(a2 + 1020);
  v1898 = a2[1020];
  if (*(_QWORD *)(a1 + 8160))
  {
    if (v1898)
    {
      v1899 = a2[1021];
      *(_QWORD *)(a1 + 8160) = v1898;
      *(_QWORD *)(a1 + 8168) = v1899;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8176) = a2[1022];
      *(_QWORD *)(a1 + 8184) = a2[1023];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1900 = a2[1025];
      *(_QWORD *)(a1 + 0x2000) = a2[1024];
      *(_QWORD *)(a1 + 8200) = v1900;
      swift_retain();
      swift_release();
      v1901 = a2[1026];
      *(_BYTE *)(a1 + 8216) = *((_BYTE *)a2 + 8216);
      *(_QWORD *)(a1 + 8208) = v1901;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8160);
      v1906 = *((_OWORD *)a2 + 511);
      v1905 = *((_OWORD *)a2 + 512);
      v1907 = *v1897;
      *(_OWORD *)(a1 + 8201) = *(_OWORD *)((char *)a2 + 8201);
      *(_OWORD *)(a1 + 8176) = v1906;
      *(_OWORD *)(a1 + 0x2000) = v1905;
      *v1896 = v1907;
    }
  }
  else if (v1898)
  {
    v1902 = a2[1021];
    *(_QWORD *)(a1 + 8160) = v1898;
    *(_QWORD *)(a1 + 8168) = v1902;
    *(_QWORD *)(a1 + 8176) = a2[1022];
    *(_QWORD *)(a1 + 8184) = a2[1023];
    v1903 = a2[1025];
    *(_QWORD *)(a1 + 0x2000) = a2[1024];
    *(_QWORD *)(a1 + 8200) = v1903;
    v1904 = a2[1026];
    *(_BYTE *)(a1 + 8216) = *((_BYTE *)a2 + 8216);
    *(_QWORD *)(a1 + 8208) = v1904;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1908 = *v1897;
    v1909 = *((_OWORD *)a2 + 511);
    v1910 = *((_OWORD *)a2 + 512);
    *(_OWORD *)(a1 + 8201) = *(_OWORD *)((char *)a2 + 8201);
    *(_OWORD *)(a1 + 8176) = v1909;
    *(_OWORD *)(a1 + 0x2000) = v1910;
    *v1896 = v1908;
  }
  v1911 = (_OWORD *)(a1 + 8224);
  v1912 = (__int128 *)(a2 + 1028);
  v1913 = a2[1028];
  if (*(_QWORD *)(a1 + 8224))
  {
    if (v1913)
    {
      v1914 = a2[1029];
      *(_QWORD *)(a1 + 8224) = v1913;
      *(_QWORD *)(a1 + 8232) = v1914;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8240) = a2[1030];
      *(_QWORD *)(a1 + 8248) = a2[1031];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1915 = a2[1033];
      *(_QWORD *)(a1 + 8256) = a2[1032];
      *(_QWORD *)(a1 + 8264) = v1915;
      swift_retain();
      swift_release();
      v1916 = a2[1034];
      *(_BYTE *)(a1 + 8280) = *((_BYTE *)a2 + 8280);
      *(_QWORD *)(a1 + 8272) = v1916;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8224);
      v1921 = *((_OWORD *)a2 + 515);
      v1920 = *((_OWORD *)a2 + 516);
      v1922 = *v1912;
      *(_OWORD *)(a1 + 8265) = *(_OWORD *)((char *)a2 + 8265);
      *(_OWORD *)(a1 + 8240) = v1921;
      *(_OWORD *)(a1 + 8256) = v1920;
      *v1911 = v1922;
    }
  }
  else if (v1913)
  {
    v1917 = a2[1029];
    *(_QWORD *)(a1 + 8224) = v1913;
    *(_QWORD *)(a1 + 8232) = v1917;
    *(_QWORD *)(a1 + 8240) = a2[1030];
    *(_QWORD *)(a1 + 8248) = a2[1031];
    v1918 = a2[1033];
    *(_QWORD *)(a1 + 8256) = a2[1032];
    *(_QWORD *)(a1 + 8264) = v1918;
    v1919 = a2[1034];
    *(_BYTE *)(a1 + 8280) = *((_BYTE *)a2 + 8280);
    *(_QWORD *)(a1 + 8272) = v1919;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1923 = *v1912;
    v1924 = *((_OWORD *)a2 + 515);
    v1925 = *((_OWORD *)a2 + 516);
    *(_OWORD *)(a1 + 8265) = *(_OWORD *)((char *)a2 + 8265);
    *(_OWORD *)(a1 + 8240) = v1924;
    *(_OWORD *)(a1 + 8256) = v1925;
    *v1911 = v1923;
  }
  v1926 = (_OWORD *)(a1 + 8288);
  v1927 = a2 + 1036;
  v1928 = a2[1036];
  if (*(_QWORD *)(a1 + 8288))
  {
    if (v1928)
    {
      v1929 = a2[1037];
      *(_QWORD *)(a1 + 8288) = v1928;
      *(_QWORD *)(a1 + 8296) = v1929;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8304) = a2[1038];
      *(_QWORD *)(a1 + 8312) = a2[1039];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 8288);
      v1931 = *((_OWORD *)a2 + 519);
      *v1926 = *v1927;
      *(_OWORD *)(a1 + 8304) = v1931;
    }
  }
  else if (v1928)
  {
    v1930 = a2[1037];
    *(_QWORD *)(a1 + 8288) = v1928;
    *(_QWORD *)(a1 + 8296) = v1930;
    *(_QWORD *)(a1 + 8304) = a2[1038];
    *(_QWORD *)(a1 + 8312) = a2[1039];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1932 = *((_OWORD *)a2 + 519);
    *v1926 = *v1927;
    *(_OWORD *)(a1 + 8304) = v1932;
  }
  v1933 = (_OWORD *)(a1 + 8320);
  v1934 = (__int128 *)(a2 + 1040);
  v1935 = a2[1040];
  if (*(_QWORD *)(a1 + 8320))
  {
    if (v1935)
    {
      v1936 = a2[1041];
      *(_QWORD *)(a1 + 8320) = v1935;
      *(_QWORD *)(a1 + 8328) = v1936;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8336) = a2[1042];
      *(_QWORD *)(a1 + 8344) = a2[1043];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1937 = a2[1045];
      *(_QWORD *)(a1 + 8352) = a2[1044];
      *(_QWORD *)(a1 + 8360) = v1937;
      swift_retain();
      swift_release();
      v1938 = a2[1046];
      *(_BYTE *)(a1 + 8376) = *((_BYTE *)a2 + 8376);
      *(_QWORD *)(a1 + 8368) = v1938;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8320);
      v1943 = *((_OWORD *)a2 + 521);
      v1942 = *((_OWORD *)a2 + 522);
      v1944 = *v1934;
      *(_OWORD *)(a1 + 8361) = *(_OWORD *)((char *)a2 + 8361);
      *(_OWORD *)(a1 + 8336) = v1943;
      *(_OWORD *)(a1 + 8352) = v1942;
      *v1933 = v1944;
    }
  }
  else if (v1935)
  {
    v1939 = a2[1041];
    *(_QWORD *)(a1 + 8320) = v1935;
    *(_QWORD *)(a1 + 8328) = v1939;
    *(_QWORD *)(a1 + 8336) = a2[1042];
    *(_QWORD *)(a1 + 8344) = a2[1043];
    v1940 = a2[1045];
    *(_QWORD *)(a1 + 8352) = a2[1044];
    *(_QWORD *)(a1 + 8360) = v1940;
    v1941 = a2[1046];
    *(_BYTE *)(a1 + 8376) = *((_BYTE *)a2 + 8376);
    *(_QWORD *)(a1 + 8368) = v1941;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1945 = *v1934;
    v1946 = *((_OWORD *)a2 + 521);
    v1947 = *((_OWORD *)a2 + 522);
    *(_OWORD *)(a1 + 8361) = *(_OWORD *)((char *)a2 + 8361);
    *(_OWORD *)(a1 + 8336) = v1946;
    *(_OWORD *)(a1 + 8352) = v1947;
    *v1933 = v1945;
  }
  v1948 = (_OWORD *)(a1 + 8384);
  v1949 = (__int128 *)(a2 + 1048);
  v1950 = a2[1048];
  if (*(_QWORD *)(a1 + 8384))
  {
    if (v1950)
    {
      v1951 = a2[1049];
      *(_QWORD *)(a1 + 8384) = v1950;
      *(_QWORD *)(a1 + 8392) = v1951;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8400) = a2[1050];
      *(_QWORD *)(a1 + 8408) = a2[1051];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1952 = a2[1053];
      *(_QWORD *)(a1 + 8416) = a2[1052];
      *(_QWORD *)(a1 + 8424) = v1952;
      swift_retain();
      swift_release();
      v1953 = a2[1054];
      *(_BYTE *)(a1 + 8440) = *((_BYTE *)a2 + 8440);
      *(_QWORD *)(a1 + 8432) = v1953;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8384);
      v1958 = *((_OWORD *)a2 + 525);
      v1957 = *((_OWORD *)a2 + 526);
      v1959 = *v1949;
      *(_OWORD *)(a1 + 8425) = *(_OWORD *)((char *)a2 + 8425);
      *(_OWORD *)(a1 + 8400) = v1958;
      *(_OWORD *)(a1 + 8416) = v1957;
      *v1948 = v1959;
    }
  }
  else if (v1950)
  {
    v1954 = a2[1049];
    *(_QWORD *)(a1 + 8384) = v1950;
    *(_QWORD *)(a1 + 8392) = v1954;
    *(_QWORD *)(a1 + 8400) = a2[1050];
    *(_QWORD *)(a1 + 8408) = a2[1051];
    v1955 = a2[1053];
    *(_QWORD *)(a1 + 8416) = a2[1052];
    *(_QWORD *)(a1 + 8424) = v1955;
    v1956 = a2[1054];
    *(_BYTE *)(a1 + 8440) = *((_BYTE *)a2 + 8440);
    *(_QWORD *)(a1 + 8432) = v1956;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1960 = *v1949;
    v1961 = *((_OWORD *)a2 + 525);
    v1962 = *((_OWORD *)a2 + 526);
    *(_OWORD *)(a1 + 8425) = *(_OWORD *)((char *)a2 + 8425);
    *(_OWORD *)(a1 + 8400) = v1961;
    *(_OWORD *)(a1 + 8416) = v1962;
    *v1948 = v1960;
  }
  v1963 = (_OWORD *)(a1 + 8448);
  v1964 = (__int128 *)(a2 + 1056);
  v1965 = a2[1056];
  if (*(_QWORD *)(a1 + 8448))
  {
    if (v1965)
    {
      v1966 = a2[1057];
      *(_QWORD *)(a1 + 8448) = v1965;
      *(_QWORD *)(a1 + 8456) = v1966;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8464) = a2[1058];
      *(_QWORD *)(a1 + 8472) = a2[1059];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1967 = a2[1061];
      *(_QWORD *)(a1 + 8480) = a2[1060];
      *(_QWORD *)(a1 + 8488) = v1967;
      swift_retain();
      swift_release();
      v1968 = a2[1062];
      *(_BYTE *)(a1 + 8504) = *((_BYTE *)a2 + 8504);
      *(_QWORD *)(a1 + 8496) = v1968;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8448);
      v1973 = *((_OWORD *)a2 + 529);
      v1972 = *((_OWORD *)a2 + 530);
      v1974 = *v1964;
      *(_OWORD *)(a1 + 8489) = *(_OWORD *)((char *)a2 + 8489);
      *(_OWORD *)(a1 + 8464) = v1973;
      *(_OWORD *)(a1 + 8480) = v1972;
      *v1963 = v1974;
    }
  }
  else if (v1965)
  {
    v1969 = a2[1057];
    *(_QWORD *)(a1 + 8448) = v1965;
    *(_QWORD *)(a1 + 8456) = v1969;
    *(_QWORD *)(a1 + 8464) = a2[1058];
    *(_QWORD *)(a1 + 8472) = a2[1059];
    v1970 = a2[1061];
    *(_QWORD *)(a1 + 8480) = a2[1060];
    *(_QWORD *)(a1 + 8488) = v1970;
    v1971 = a2[1062];
    *(_BYTE *)(a1 + 8504) = *((_BYTE *)a2 + 8504);
    *(_QWORD *)(a1 + 8496) = v1971;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1975 = *v1964;
    v1976 = *((_OWORD *)a2 + 529);
    v1977 = *((_OWORD *)a2 + 530);
    *(_OWORD *)(a1 + 8489) = *(_OWORD *)((char *)a2 + 8489);
    *(_OWORD *)(a1 + 8464) = v1976;
    *(_OWORD *)(a1 + 8480) = v1977;
    *v1963 = v1975;
  }
  v1978 = (_OWORD *)(a1 + 8512);
  v1979 = a2 + 1064;
  v1980 = a2[1064];
  if (*(_QWORD *)(a1 + 8512))
  {
    if (v1980)
    {
      v1981 = a2[1065];
      *(_QWORD *)(a1 + 8512) = v1980;
      *(_QWORD *)(a1 + 8520) = v1981;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8528) = a2[1066];
      *(_QWORD *)(a1 + 8536) = a2[1067];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 8512);
      v1983 = *((_OWORD *)a2 + 533);
      *v1978 = *v1979;
      *(_OWORD *)(a1 + 8528) = v1983;
    }
  }
  else if (v1980)
  {
    v1982 = a2[1065];
    *(_QWORD *)(a1 + 8512) = v1980;
    *(_QWORD *)(a1 + 8520) = v1982;
    *(_QWORD *)(a1 + 8528) = a2[1066];
    *(_QWORD *)(a1 + 8536) = a2[1067];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v1984 = *((_OWORD *)a2 + 533);
    *v1978 = *v1979;
    *(_OWORD *)(a1 + 8528) = v1984;
  }
  v1985 = (_OWORD *)(a1 + 8544);
  v1986 = (__int128 *)(a2 + 1068);
  v1987 = a2[1068];
  if (*(_QWORD *)(a1 + 8544))
  {
    if (v1987)
    {
      v1988 = a2[1069];
      *(_QWORD *)(a1 + 8544) = v1987;
      *(_QWORD *)(a1 + 8552) = v1988;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8560) = a2[1070];
      *(_QWORD *)(a1 + 8568) = a2[1071];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v1989 = a2[1073];
      *(_QWORD *)(a1 + 8576) = a2[1072];
      *(_QWORD *)(a1 + 8584) = v1989;
      swift_retain();
      swift_release();
      v1990 = a2[1074];
      *(_BYTE *)(a1 + 8600) = *((_BYTE *)a2 + 8600);
      *(_QWORD *)(a1 + 8592) = v1990;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8544);
      v1995 = *((_OWORD *)a2 + 535);
      v1994 = *((_OWORD *)a2 + 536);
      v1996 = *v1986;
      *(_OWORD *)(a1 + 8585) = *(_OWORD *)((char *)a2 + 8585);
      *(_OWORD *)(a1 + 8560) = v1995;
      *(_OWORD *)(a1 + 8576) = v1994;
      *v1985 = v1996;
    }
  }
  else if (v1987)
  {
    v1991 = a2[1069];
    *(_QWORD *)(a1 + 8544) = v1987;
    *(_QWORD *)(a1 + 8552) = v1991;
    *(_QWORD *)(a1 + 8560) = a2[1070];
    *(_QWORD *)(a1 + 8568) = a2[1071];
    v1992 = a2[1073];
    *(_QWORD *)(a1 + 8576) = a2[1072];
    *(_QWORD *)(a1 + 8584) = v1992;
    v1993 = a2[1074];
    *(_BYTE *)(a1 + 8600) = *((_BYTE *)a2 + 8600);
    *(_QWORD *)(a1 + 8592) = v1993;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v1997 = *v1986;
    v1998 = *((_OWORD *)a2 + 535);
    v1999 = *((_OWORD *)a2 + 536);
    *(_OWORD *)(a1 + 8585) = *(_OWORD *)((char *)a2 + 8585);
    *(_OWORD *)(a1 + 8560) = v1998;
    *(_OWORD *)(a1 + 8576) = v1999;
    *v1985 = v1997;
  }
  v2000 = (_OWORD *)(a1 + 8608);
  v2001 = (__int128 *)(a2 + 1076);
  v2002 = a2[1076];
  if (*(_QWORD *)(a1 + 8608))
  {
    if (v2002)
    {
      v2003 = a2[1077];
      *(_QWORD *)(a1 + 8608) = v2002;
      *(_QWORD *)(a1 + 8616) = v2003;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8624) = a2[1078];
      *(_QWORD *)(a1 + 8632) = a2[1079];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v2004 = a2[1081];
      *(_QWORD *)(a1 + 8640) = a2[1080];
      *(_QWORD *)(a1 + 8648) = v2004;
      swift_retain();
      swift_release();
      v2005 = a2[1082];
      *(_BYTE *)(a1 + 8664) = *((_BYTE *)a2 + 8664);
      *(_QWORD *)(a1 + 8656) = v2005;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8608);
      v2010 = *((_OWORD *)a2 + 539);
      v2009 = *((_OWORD *)a2 + 540);
      v2011 = *v2001;
      *(_OWORD *)(a1 + 8649) = *(_OWORD *)((char *)a2 + 8649);
      *(_OWORD *)(a1 + 8624) = v2010;
      *(_OWORD *)(a1 + 8640) = v2009;
      *v2000 = v2011;
    }
  }
  else if (v2002)
  {
    v2006 = a2[1077];
    *(_QWORD *)(a1 + 8608) = v2002;
    *(_QWORD *)(a1 + 8616) = v2006;
    *(_QWORD *)(a1 + 8624) = a2[1078];
    *(_QWORD *)(a1 + 8632) = a2[1079];
    v2007 = a2[1081];
    *(_QWORD *)(a1 + 8640) = a2[1080];
    *(_QWORD *)(a1 + 8648) = v2007;
    v2008 = a2[1082];
    *(_BYTE *)(a1 + 8664) = *((_BYTE *)a2 + 8664);
    *(_QWORD *)(a1 + 8656) = v2008;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v2012 = *v2001;
    v2013 = *((_OWORD *)a2 + 539);
    v2014 = *((_OWORD *)a2 + 540);
    *(_OWORD *)(a1 + 8649) = *(_OWORD *)((char *)a2 + 8649);
    *(_OWORD *)(a1 + 8624) = v2013;
    *(_OWORD *)(a1 + 8640) = v2014;
    *v2000 = v2012;
  }
  v2015 = (_OWORD *)(a1 + 8672);
  v2016 = (__int128 *)(a2 + 1084);
  v2017 = a2[1084];
  if (*(_QWORD *)(a1 + 8672))
  {
    if (v2017)
    {
      v2018 = a2[1085];
      *(_QWORD *)(a1 + 8672) = v2017;
      *(_QWORD *)(a1 + 8680) = v2018;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8688) = a2[1086];
      *(_QWORD *)(a1 + 8696) = a2[1087];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v2019 = a2[1089];
      *(_QWORD *)(a1 + 8704) = a2[1088];
      *(_QWORD *)(a1 + 8712) = v2019;
      swift_retain();
      swift_release();
      v2020 = a2[1090];
      *(_BYTE *)(a1 + 8728) = *((_BYTE *)a2 + 8728);
      *(_QWORD *)(a1 + 8720) = v2020;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8672);
      v2025 = *((_OWORD *)a2 + 543);
      v2024 = *((_OWORD *)a2 + 544);
      v2026 = *v2016;
      *(_OWORD *)(a1 + 8713) = *(_OWORD *)((char *)a2 + 8713);
      *(_OWORD *)(a1 + 8688) = v2025;
      *(_OWORD *)(a1 + 8704) = v2024;
      *v2015 = v2026;
    }
  }
  else if (v2017)
  {
    v2021 = a2[1085];
    *(_QWORD *)(a1 + 8672) = v2017;
    *(_QWORD *)(a1 + 8680) = v2021;
    *(_QWORD *)(a1 + 8688) = a2[1086];
    *(_QWORD *)(a1 + 8696) = a2[1087];
    v2022 = a2[1089];
    *(_QWORD *)(a1 + 8704) = a2[1088];
    *(_QWORD *)(a1 + 8712) = v2022;
    v2023 = a2[1090];
    *(_BYTE *)(a1 + 8728) = *((_BYTE *)a2 + 8728);
    *(_QWORD *)(a1 + 8720) = v2023;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v2027 = *v2016;
    v2028 = *((_OWORD *)a2 + 543);
    v2029 = *((_OWORD *)a2 + 544);
    *(_OWORD *)(a1 + 8713) = *(_OWORD *)((char *)a2 + 8713);
    *(_OWORD *)(a1 + 8688) = v2028;
    *(_OWORD *)(a1 + 8704) = v2029;
    *v2015 = v2027;
  }
  v2030 = (_OWORD *)(a1 + 8736);
  v2031 = a2 + 1092;
  v2032 = a2[1092];
  if (*(_QWORD *)(a1 + 8736))
  {
    if (v2032)
    {
      v2033 = a2[1093];
      *(_QWORD *)(a1 + 8736) = v2032;
      *(_QWORD *)(a1 + 8744) = v2033;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8752) = a2[1094];
      *(_QWORD *)(a1 + 8760) = a2[1095];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_1AD3C2B58(a1 + 8736);
      v2035 = *((_OWORD *)a2 + 547);
      *v2030 = *v2031;
      *(_OWORD *)(a1 + 8752) = v2035;
    }
  }
  else if (v2032)
  {
    v2034 = a2[1093];
    *(_QWORD *)(a1 + 8736) = v2032;
    *(_QWORD *)(a1 + 8744) = v2034;
    *(_QWORD *)(a1 + 8752) = a2[1094];
    *(_QWORD *)(a1 + 8760) = a2[1095];
    swift_retain();
    swift_bridgeObjectRetain();
  }
  else
  {
    v2036 = *((_OWORD *)a2 + 547);
    *v2030 = *v2031;
    *(_OWORD *)(a1 + 8752) = v2036;
  }
  v2037 = (_OWORD *)(a1 + 8768);
  v2038 = (__int128 *)(a2 + 1096);
  v2039 = a2[1096];
  if (*(_QWORD *)(a1 + 8768))
  {
    if (v2039)
    {
      v2040 = a2[1097];
      *(_QWORD *)(a1 + 8768) = v2039;
      *(_QWORD *)(a1 + 8776) = v2040;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8784) = a2[1098];
      *(_QWORD *)(a1 + 8792) = a2[1099];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v2041 = a2[1101];
      *(_QWORD *)(a1 + 8800) = a2[1100];
      *(_QWORD *)(a1 + 8808) = v2041;
      swift_retain();
      swift_release();
      v2042 = a2[1102];
      *(_BYTE *)(a1 + 8824) = *((_BYTE *)a2 + 8824);
      *(_QWORD *)(a1 + 8816) = v2042;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8768);
      v2047 = *((_OWORD *)a2 + 549);
      v2046 = *((_OWORD *)a2 + 550);
      v2048 = *v2038;
      *(_OWORD *)(a1 + 8809) = *(_OWORD *)((char *)a2 + 8809);
      *(_OWORD *)(a1 + 8784) = v2047;
      *(_OWORD *)(a1 + 8800) = v2046;
      *v2037 = v2048;
    }
  }
  else if (v2039)
  {
    v2043 = a2[1097];
    *(_QWORD *)(a1 + 8768) = v2039;
    *(_QWORD *)(a1 + 8776) = v2043;
    *(_QWORD *)(a1 + 8784) = a2[1098];
    *(_QWORD *)(a1 + 8792) = a2[1099];
    v2044 = a2[1101];
    *(_QWORD *)(a1 + 8800) = a2[1100];
    *(_QWORD *)(a1 + 8808) = v2044;
    v2045 = a2[1102];
    *(_BYTE *)(a1 + 8824) = *((_BYTE *)a2 + 8824);
    *(_QWORD *)(a1 + 8816) = v2045;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v2049 = *v2038;
    v2050 = *((_OWORD *)a2 + 549);
    v2051 = *((_OWORD *)a2 + 550);
    *(_OWORD *)(a1 + 8809) = *(_OWORD *)((char *)a2 + 8809);
    *(_OWORD *)(a1 + 8784) = v2050;
    *(_OWORD *)(a1 + 8800) = v2051;
    *v2037 = v2049;
  }
  v2052 = (_OWORD *)(a1 + 8832);
  v2053 = (__int128 *)(a2 + 1104);
  v2054 = a2[1104];
  if (*(_QWORD *)(a1 + 8832))
  {
    if (v2054)
    {
      v2055 = a2[1105];
      *(_QWORD *)(a1 + 8832) = v2054;
      *(_QWORD *)(a1 + 8840) = v2055;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8848) = a2[1106];
      *(_QWORD *)(a1 + 8856) = a2[1107];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v2056 = a2[1109];
      *(_QWORD *)(a1 + 8864) = a2[1108];
      *(_QWORD *)(a1 + 8872) = v2056;
      swift_retain();
      swift_release();
      v2057 = a2[1110];
      *(_BYTE *)(a1 + 8888) = *((_BYTE *)a2 + 8888);
      *(_QWORD *)(a1 + 8880) = v2057;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8832);
      v2062 = *((_OWORD *)a2 + 553);
      v2061 = *((_OWORD *)a2 + 554);
      v2063 = *v2053;
      *(_OWORD *)(a1 + 8873) = *(_OWORD *)((char *)a2 + 8873);
      *(_OWORD *)(a1 + 8848) = v2062;
      *(_OWORD *)(a1 + 8864) = v2061;
      *v2052 = v2063;
    }
  }
  else if (v2054)
  {
    v2058 = a2[1105];
    *(_QWORD *)(a1 + 8832) = v2054;
    *(_QWORD *)(a1 + 8840) = v2058;
    *(_QWORD *)(a1 + 8848) = a2[1106];
    *(_QWORD *)(a1 + 8856) = a2[1107];
    v2059 = a2[1109];
    *(_QWORD *)(a1 + 8864) = a2[1108];
    *(_QWORD *)(a1 + 8872) = v2059;
    v2060 = a2[1110];
    *(_BYTE *)(a1 + 8888) = *((_BYTE *)a2 + 8888);
    *(_QWORD *)(a1 + 8880) = v2060;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v2064 = *v2053;
    v2065 = *((_OWORD *)a2 + 553);
    v2066 = *((_OWORD *)a2 + 554);
    *(_OWORD *)(a1 + 8873) = *(_OWORD *)((char *)a2 + 8873);
    *(_OWORD *)(a1 + 8848) = v2065;
    *(_OWORD *)(a1 + 8864) = v2066;
    *v2052 = v2064;
  }
  v2067 = (_OWORD *)(a1 + 8896);
  v2068 = (__int128 *)(a2 + 1112);
  v2069 = a2[1112];
  if (*(_QWORD *)(a1 + 8896))
  {
    if (v2069)
    {
      v2070 = a2[1113];
      *(_QWORD *)(a1 + 8896) = v2069;
      *(_QWORD *)(a1 + 8904) = v2070;
      swift_retain();
      swift_release();
      *(_QWORD *)(a1 + 8912) = a2[1114];
      *(_QWORD *)(a1 + 8920) = a2[1115];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v2071 = a2[1117];
      *(_QWORD *)(a1 + 8928) = a2[1116];
      *(_QWORD *)(a1 + 8936) = v2071;
      swift_retain();
      swift_release();
      v2072 = a2[1118];
      *(_BYTE *)(a1 + 8952) = *((_BYTE *)a2 + 8952);
      *(_QWORD *)(a1 + 8944) = v2072;
    }
    else
    {
      sub_1AD3C2B88(a1 + 8896);
      v2077 = *((_OWORD *)a2 + 557);
      v2076 = *((_OWORD *)a2 + 558);
      v2078 = *v2068;
      *(_OWORD *)(a1 + 8937) = *(_OWORD *)((char *)a2 + 8937);
      *(_OWORD *)(a1 + 8912) = v2077;
      *(_OWORD *)(a1 + 8928) = v2076;
      *v2067 = v2078;
    }
  }
  else if (v2069)
  {
    v2073 = a2[1113];
    *(_QWORD *)(a1 + 8896) = v2069;
    *(_QWORD *)(a1 + 8904) = v2073;
    *(_QWORD *)(a1 + 8912) = a2[1114];
    *(_QWORD *)(a1 + 8920) = a2[1115];
    v2074 = a2[1117];
    *(_QWORD *)(a1 + 8928) = a2[1116];
    *(_QWORD *)(a1 + 8936) = v2074;
    v2075 = a2[1118];
    *(_BYTE *)(a1 + 8952) = *((_BYTE *)a2 + 8952);
    *(_QWORD *)(a1 + 8944) = v2075;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    v2079 = *v2068;
    v2080 = *((_OWORD *)a2 + 557);
    v2081 = *((_OWORD *)a2 + 558);
    *(_OWORD *)(a1 + 8937) = *(_OWORD *)((char *)a2 + 8937);
    *(_OWORD *)(a1 + 8912) = v2080;
    *(_OWORD *)(a1 + 8928) = v2081;
    *v2067 = v2079;
  }
  return a1;
}

uint64_t sub_1AD3C2B58(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD3C2B88(uint64_t a1)
{
  destroy for MemojiDescriptor.CategoryDescriptor.Color();
  return a1;
}

void *__swift_memcpy8953_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x22F9uLL);
}

uint64_t assignWithTake for MemojiDescriptor(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  uint64_t v43;
  uint64_t v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  __int128 v54;
  uint64_t v55;
  uint64_t v56;
  __int128 v57;
  uint64_t v58;
  uint64_t v59;
  __int128 v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  uint64_t v64;
  uint64_t v65;
  __int128 v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81;
  uint64_t v82;
  uint64_t v83;
  __int128 v84;
  uint64_t v85;
  uint64_t v86;
  __int128 v87;
  uint64_t v88;
  uint64_t v89;
  __int128 v90;
  uint64_t v91;
  uint64_t v92;
  __int128 v93;
  uint64_t v94;
  uint64_t v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  __int128 v99;
  uint64_t v100;
  uint64_t v101;
  __int128 v102;
  uint64_t v103;
  uint64_t v104;
  __int128 v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  uint64_t v112;
  uint64_t v113;
  __int128 v114;
  uint64_t v115;
  uint64_t v116;
  __int128 v117;
  uint64_t v118;
  uint64_t v119;
  __int128 v120;
  uint64_t v121;
  uint64_t v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  uint64_t v128;
  __int128 v129;
  uint64_t v130;
  uint64_t v131;
  __int128 v132;
  uint64_t v133;
  uint64_t v134;
  __int128 v135;
  uint64_t v136;
  uint64_t v137;
  __int128 v138;
  uint64_t v139;
  uint64_t v140;
  __int128 v141;
  uint64_t v142;
  uint64_t v143;
  __int128 v144;
  uint64_t v145;
  uint64_t v146;
  __int128 v147;
  uint64_t v148;
  uint64_t v149;
  __int128 v150;
  uint64_t v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  uint64_t v155;
  __int128 v156;
  uint64_t v157;
  uint64_t v158;
  __int128 v159;
  uint64_t v160;
  uint64_t v161;
  __int128 v162;
  uint64_t v163;
  uint64_t v164;
  __int128 v165;
  uint64_t v166;
  uint64_t v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  __int128 v171;
  uint64_t v172;
  uint64_t v173;
  __int128 v174;
  uint64_t v175;
  uint64_t v176;
  __int128 v177;
  uint64_t v178;
  uint64_t v179;
  __int128 v180;
  uint64_t v181;
  uint64_t v182;
  __int128 v183;
  uint64_t v184;
  uint64_t v185;
  __int128 v186;
  uint64_t v187;
  uint64_t v188;
  __int128 v189;
  uint64_t v190;
  uint64_t v191;
  __int128 v192;
  uint64_t v193;
  uint64_t v194;
  __int128 v195;
  uint64_t v196;
  uint64_t v197;
  __int128 v198;
  uint64_t v199;
  uint64_t v200;
  __int128 v201;
  uint64_t v202;
  uint64_t v203;
  __int128 v204;
  uint64_t v205;
  uint64_t v206;
  __int128 v207;
  uint64_t v208;
  uint64_t v209;
  __int128 v210;
  uint64_t v211;
  uint64_t v212;
  __int128 v213;
  uint64_t v214;
  uint64_t v215;
  __int128 v216;
  uint64_t v217;
  uint64_t v218;
  __int128 v219;
  uint64_t v220;
  uint64_t v221;
  __int128 v222;
  uint64_t v223;
  uint64_t v224;
  __int128 v225;
  uint64_t v226;
  uint64_t v227;
  __int128 v228;
  uint64_t v229;
  uint64_t v230;
  __int128 v231;
  uint64_t v232;
  uint64_t v233;
  __int128 v234;
  uint64_t v235;
  uint64_t v236;
  __int128 v237;
  uint64_t v238;
  uint64_t v239;
  __int128 v240;
  uint64_t v241;
  uint64_t v242;
  __int128 v243;
  uint64_t v244;
  uint64_t v245;
  __int128 v246;
  uint64_t v247;
  uint64_t v248;
  __int128 v249;
  uint64_t v250;
  uint64_t v251;
  __int128 v252;
  uint64_t v253;
  uint64_t v254;
  __int128 v255;
  uint64_t v256;
  uint64_t v257;
  __int128 v258;
  uint64_t v259;
  uint64_t v260;
  __int128 v261;
  uint64_t v262;
  uint64_t v263;
  __int128 v264;
  uint64_t v265;
  uint64_t v266;
  __int128 v267;
  uint64_t v268;
  uint64_t v269;
  __int128 v270;
  uint64_t v271;
  uint64_t v272;
  __int128 v273;
  uint64_t v274;
  uint64_t v275;
  __int128 v276;
  uint64_t v277;
  uint64_t v278;
  __int128 v279;
  uint64_t v280;
  uint64_t v281;
  __int128 v282;
  uint64_t v283;
  uint64_t v284;
  __int128 v285;
  uint64_t v286;
  uint64_t v287;
  __int128 v288;
  uint64_t v289;
  uint64_t v290;
  __int128 v291;
  uint64_t v292;
  uint64_t v293;
  __int128 v294;
  uint64_t v295;
  uint64_t v296;
  __int128 v297;
  uint64_t v298;
  uint64_t v299;
  __int128 v300;
  uint64_t v301;
  uint64_t v302;
  __int128 v303;
  uint64_t v304;
  uint64_t v305;
  __int128 v306;
  uint64_t v307;
  uint64_t v308;
  __int128 v309;
  uint64_t v310;
  uint64_t v311;
  __int128 v312;
  uint64_t v313;
  uint64_t v314;
  __int128 v315;
  uint64_t v316;
  uint64_t v317;
  __int128 v318;
  uint64_t v319;
  uint64_t v320;
  __int128 v321;
  uint64_t v322;
  uint64_t v323;
  __int128 v324;
  uint64_t v325;
  uint64_t v326;
  __int128 v327;
  uint64_t v328;
  uint64_t v329;
  __int128 v330;
  uint64_t v331;
  uint64_t v332;
  __int128 v333;
  uint64_t v334;
  uint64_t v335;
  __int128 v336;
  uint64_t v337;
  uint64_t v338;
  __int128 v339;
  uint64_t v340;
  uint64_t v341;
  __int128 v342;
  uint64_t v343;
  uint64_t v344;
  __int128 v345;
  uint64_t v346;
  uint64_t v347;
  __int128 v348;
  uint64_t v349;
  uint64_t v350;
  __int128 v351;
  uint64_t v352;
  uint64_t v353;
  __int128 v354;
  uint64_t v355;
  uint64_t v356;
  __int128 v357;
  uint64_t v358;
  uint64_t v359;
  __int128 v360;
  uint64_t v361;
  uint64_t v362;
  __int128 v363;
  uint64_t v364;
  uint64_t v365;
  __int128 v366;
  uint64_t v367;
  uint64_t v368;
  __int128 v369;
  uint64_t v370;
  uint64_t v371;
  __int128 v372;
  uint64_t v373;
  uint64_t v374;
  __int128 v375;
  uint64_t v376;
  uint64_t v377;
  __int128 v378;
  uint64_t v379;
  uint64_t v380;
  __int128 v381;
  uint64_t v382;
  uint64_t v383;
  __int128 v384;
  uint64_t v385;
  uint64_t v386;
  __int128 v387;
  uint64_t v388;
  uint64_t v389;
  __int128 v390;
  uint64_t v391;
  uint64_t v392;
  __int128 v393;
  uint64_t v394;
  uint64_t v395;
  __int128 v396;
  uint64_t v397;
  uint64_t v398;
  __int128 v399;
  uint64_t v400;
  uint64_t v401;
  __int128 v402;
  uint64_t v403;
  uint64_t v404;
  __int128 v405;
  uint64_t v406;
  uint64_t v407;
  __int128 v408;
  uint64_t v409;
  uint64_t v410;
  __int128 v411;
  uint64_t v412;
  uint64_t v413;
  __int128 v414;
  uint64_t v415;
  uint64_t v416;
  __int128 v417;
  uint64_t v418;
  uint64_t v419;
  __int128 v420;
  uint64_t v421;
  uint64_t v422;
  __int128 v423;
  uint64_t v424;
  uint64_t v425;
  __int128 v426;
  uint64_t v427;
  uint64_t v428;
  __int128 v429;
  uint64_t v430;
  uint64_t v431;
  __int128 v432;
  uint64_t v433;
  uint64_t v434;
  __int128 v435;
  uint64_t v436;
  uint64_t v437;
  __int128 v438;
  uint64_t v439;
  uint64_t v440;
  __int128 v441;
  uint64_t v442;
  uint64_t v443;
  __int128 v444;
  uint64_t v445;
  uint64_t v446;
  __int128 v447;
  uint64_t v448;
  uint64_t v449;
  __int128 v450;
  uint64_t v451;
  uint64_t v452;
  __int128 v453;
  uint64_t v454;
  uint64_t v455;
  __int128 v456;
  uint64_t v457;
  uint64_t v458;
  __int128 v459;
  uint64_t v460;
  uint64_t v461;
  __int128 v462;
  uint64_t v463;
  uint64_t v464;
  __int128 v465;
  uint64_t v466;
  uint64_t v467;
  __int128 v468;
  uint64_t v469;
  uint64_t v470;
  __int128 v471;
  uint64_t v472;
  uint64_t v473;
  __int128 v474;
  uint64_t v475;
  uint64_t v476;
  __int128 v477;
  uint64_t v478;
  uint64_t v479;
  __int128 v480;
  uint64_t v481;
  uint64_t v482;
  __int128 v483;
  uint64_t v484;
  uint64_t v485;
  __int128 v486;
  uint64_t v487;
  uint64_t v488;
  __int128 v489;
  uint64_t v490;
  uint64_t v491;
  __int128 v492;

  if (*(_QWORD *)a1)
  {
    if (*(_QWORD *)a2)
    {
      v4 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v4;
      swift_release();
      v5 = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AD3C2B58(a1);
  }
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
LABEL_6:
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32))
  {
    if (v7)
    {
      v8 = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 32) = v7;
      *(_QWORD *)(a1 + 40) = v8;
      swift_release();
      v9 = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      *(_QWORD *)(a1 + 56) = v9;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
      swift_release();
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      goto LABEL_11;
    }
    sub_1AD3C2B88(a1 + 32);
  }
  v10 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v10;
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
LABEL_11:
  v11 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96))
  {
    if (v11)
    {
      v12 = *(_QWORD *)(a2 + 104);
      *(_QWORD *)(a1 + 96) = v11;
      *(_QWORD *)(a1 + 104) = v12;
      swift_release();
      v13 = *(_QWORD *)(a2 + 120);
      *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
      *(_QWORD *)(a1 + 120) = v13;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
      swift_release();
      *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
      *(_BYTE *)(a1 + 152) = *(_BYTE *)(a2 + 152);
      goto LABEL_16;
    }
    sub_1AD3C2B88(a1 + 96);
  }
  v14 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v14;
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 137) = *(_OWORD *)(a2 + 137);
LABEL_16:
  v15 = *(_QWORD *)(a2 + 160);
  if (*(_QWORD *)(a1 + 160))
  {
    if (v15)
    {
      v16 = *(_QWORD *)(a2 + 168);
      *(_QWORD *)(a1 + 160) = v15;
      *(_QWORD *)(a1 + 168) = v16;
      swift_release();
      v17 = *(_QWORD *)(a2 + 184);
      *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
      *(_QWORD *)(a1 + 184) = v17;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
      swift_release();
      *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
      *(_BYTE *)(a1 + 216) = *(_BYTE *)(a2 + 216);
      goto LABEL_21;
    }
    sub_1AD3C2B88(a1 + 160);
  }
  v18 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v18;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 201) = *(_OWORD *)(a2 + 201);
LABEL_21:
  v19 = *(_QWORD *)(a2 + 224);
  if (*(_QWORD *)(a1 + 224))
  {
    if (v19)
    {
      v20 = *(_QWORD *)(a2 + 232);
      *(_QWORD *)(a1 + 224) = v19;
      *(_QWORD *)(a1 + 232) = v20;
      swift_release();
      v21 = *(_QWORD *)(a2 + 248);
      *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
      *(_QWORD *)(a1 + 248) = v21;
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
    sub_1AD3C2B58(a1 + 224);
  }
  v22 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v22;
LABEL_26:
  if (*(_QWORD *)(a1 + 256))
  {
    v23 = *(_QWORD *)(a2 + 256);
    if (v23)
    {
      v24 = *(_QWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 256) = v23;
      *(_QWORD *)(a1 + 264) = v24;
      swift_release();
      v25 = *(_QWORD *)(a2 + 280);
      *(_QWORD *)(a1 + 272) = *(_QWORD *)(a2 + 272);
      *(_QWORD *)(a1 + 280) = v25;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      swift_release();
      *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
      *(_BYTE *)(a1 + 312) = *(_BYTE *)(a2 + 312);
      goto LABEL_31;
    }
    sub_1AD3C2B88(a1 + 256);
  }
  v26 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v26;
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 297) = *(_OWORD *)(a2 + 297);
LABEL_31:
  if (*(_QWORD *)(a1 + 320))
  {
    v27 = *(_QWORD *)(a2 + 320);
    if (v27)
    {
      v28 = *(_QWORD *)(a2 + 328);
      *(_QWORD *)(a1 + 320) = v27;
      *(_QWORD *)(a1 + 328) = v28;
      swift_release();
      v29 = *(_QWORD *)(a2 + 344);
      *(_QWORD *)(a1 + 336) = *(_QWORD *)(a2 + 336);
      *(_QWORD *)(a1 + 344) = v29;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
      swift_release();
      *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
      *(_BYTE *)(a1 + 376) = *(_BYTE *)(a2 + 376);
      goto LABEL_36;
    }
    sub_1AD3C2B88(a1 + 320);
  }
  v30 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v30;
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 361) = *(_OWORD *)(a2 + 361);
LABEL_36:
  if (*(_QWORD *)(a1 + 384))
  {
    v31 = *(_QWORD *)(a2 + 384);
    if (v31)
    {
      v32 = *(_QWORD *)(a2 + 392);
      *(_QWORD *)(a1 + 384) = v31;
      *(_QWORD *)(a1 + 392) = v32;
      swift_release();
      v33 = *(_QWORD *)(a2 + 408);
      *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
      *(_QWORD *)(a1 + 408) = v33;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
      swift_release();
      *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
      *(_BYTE *)(a1 + 440) = *(_BYTE *)(a2 + 440);
      goto LABEL_41;
    }
    sub_1AD3C2B88(a1 + 384);
  }
  v34 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v34;
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 425) = *(_OWORD *)(a2 + 425);
LABEL_41:
  if (*(_QWORD *)(a1 + 448))
  {
    v35 = *(_QWORD *)(a2 + 448);
    if (v35)
    {
      v36 = *(_QWORD *)(a2 + 456);
      *(_QWORD *)(a1 + 448) = v35;
      *(_QWORD *)(a1 + 456) = v36;
      swift_release();
      v37 = *(_QWORD *)(a2 + 472);
      *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
      *(_QWORD *)(a1 + 472) = v37;
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_1AD3C2B58(a1 + 448);
  }
  v38 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v38;
LABEL_46:
  if (*(_QWORD *)(a1 + 480))
  {
    v39 = *(_QWORD *)(a2 + 480);
    if (v39)
    {
      v40 = *(_QWORD *)(a2 + 488);
      *(_QWORD *)(a1 + 480) = v39;
      *(_QWORD *)(a1 + 488) = v40;
      swift_release();
      v41 = *(_QWORD *)(a2 + 504);
      *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
      *(_QWORD *)(a1 + 504) = v41;
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
      swift_release();
      *(_QWORD *)(a1 + 528) = *(_QWORD *)(a2 + 528);
      *(_BYTE *)(a1 + 536) = *(_BYTE *)(a2 + 536);
      goto LABEL_51;
    }
    sub_1AD3C2B88(a1 + 480);
  }
  v42 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v42;
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 521) = *(_OWORD *)(a2 + 521);
LABEL_51:
  if (*(_QWORD *)(a1 + 544))
  {
    v43 = *(_QWORD *)(a2 + 544);
    if (v43)
    {
      v44 = *(_QWORD *)(a2 + 552);
      *(_QWORD *)(a1 + 544) = v43;
      *(_QWORD *)(a1 + 552) = v44;
      swift_release();
      *(_QWORD *)(a1 + 560) = *(_QWORD *)(a2 + 560);
      *(_QWORD *)(a1 + 568) = *(_QWORD *)(a2 + 568);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
      swift_release();
      *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
      *(_BYTE *)(a1 + 600) = *(_BYTE *)(a2 + 600);
      goto LABEL_56;
    }
    sub_1AD3C2B88(a1 + 544);
  }
  v45 = *(_OWORD *)(a2 + 560);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(_OWORD *)(a1 + 560) = v45;
  *(_OWORD *)(a1 + 576) = *(_OWORD *)(a2 + 576);
  *(_OWORD *)(a1 + 585) = *(_OWORD *)(a2 + 585);
LABEL_56:
  if (*(_QWORD *)(a1 + 608))
  {
    v46 = *(_QWORD *)(a2 + 608);
    if (v46)
    {
      v47 = *(_QWORD *)(a2 + 616);
      *(_QWORD *)(a1 + 608) = v46;
      *(_QWORD *)(a1 + 616) = v47;
      swift_release();
      *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
      *(_QWORD *)(a1 + 632) = *(_QWORD *)(a2 + 632);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
      swift_release();
      *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
      *(_BYTE *)(a1 + 664) = *(_BYTE *)(a2 + 664);
      goto LABEL_61;
    }
    sub_1AD3C2B88(a1 + 608);
  }
  v48 = *(_OWORD *)(a2 + 624);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(_OWORD *)(a1 + 624) = v48;
  *(_OWORD *)(a1 + 640) = *(_OWORD *)(a2 + 640);
  *(_OWORD *)(a1 + 649) = *(_OWORD *)(a2 + 649);
LABEL_61:
  if (*(_QWORD *)(a1 + 672))
  {
    v49 = *(_QWORD *)(a2 + 672);
    if (v49)
    {
      v50 = *(_QWORD *)(a2 + 680);
      *(_QWORD *)(a1 + 672) = v49;
      *(_QWORD *)(a1 + 680) = v50;
      swift_release();
      *(_QWORD *)(a1 + 688) = *(_QWORD *)(a2 + 688);
      *(_QWORD *)(a1 + 696) = *(_QWORD *)(a2 + 696);
      swift_bridgeObjectRelease();
      goto LABEL_66;
    }
    sub_1AD3C2B58(a1 + 672);
  }
  v51 = *(_OWORD *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = *(_OWORD *)(a2 + 672);
  *(_OWORD *)(a1 + 688) = v51;
LABEL_66:
  if (*(_QWORD *)(a1 + 704))
  {
    v52 = *(_QWORD *)(a2 + 704);
    if (v52)
    {
      v53 = *(_QWORD *)(a2 + 712);
      *(_QWORD *)(a1 + 704) = v52;
      *(_QWORD *)(a1 + 712) = v53;
      swift_release();
      *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
      *(_QWORD *)(a1 + 728) = *(_QWORD *)(a2 + 728);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
      swift_release();
      *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
      *(_BYTE *)(a1 + 760) = *(_BYTE *)(a2 + 760);
      goto LABEL_71;
    }
    sub_1AD3C2B88(a1 + 704);
  }
  v54 = *(_OWORD *)(a2 + 720);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(_OWORD *)(a1 + 720) = v54;
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 745) = *(_OWORD *)(a2 + 745);
LABEL_71:
  if (*(_QWORD *)(a1 + 768))
  {
    v55 = *(_QWORD *)(a2 + 768);
    if (v55)
    {
      v56 = *(_QWORD *)(a2 + 776);
      *(_QWORD *)(a1 + 768) = v55;
      *(_QWORD *)(a1 + 776) = v56;
      swift_release();
      *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
      *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
      swift_release();
      *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
      *(_BYTE *)(a1 + 824) = *(_BYTE *)(a2 + 824);
      goto LABEL_76;
    }
    sub_1AD3C2B88(a1 + 768);
  }
  v57 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v57;
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 809) = *(_OWORD *)(a2 + 809);
LABEL_76:
  if (*(_QWORD *)(a1 + 832))
  {
    v58 = *(_QWORD *)(a2 + 832);
    if (v58)
    {
      v59 = *(_QWORD *)(a2 + 840);
      *(_QWORD *)(a1 + 832) = v58;
      *(_QWORD *)(a1 + 840) = v59;
      swift_release();
      *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
      *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
      swift_release();
      *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
      *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
      goto LABEL_81;
    }
    sub_1AD3C2B88(a1 + 832);
  }
  v60 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v60;
  *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 873) = *(_OWORD *)(a2 + 873);
LABEL_81:
  if (*(_QWORD *)(a1 + 896))
  {
    v61 = *(_QWORD *)(a2 + 896);
    if (v61)
    {
      v62 = *(_QWORD *)(a2 + 904);
      *(_QWORD *)(a1 + 896) = v61;
      *(_QWORD *)(a1 + 904) = v62;
      swift_release();
      *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
      *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
      swift_bridgeObjectRelease();
      goto LABEL_86;
    }
    sub_1AD3C2B58(a1 + 896);
  }
  v63 = *(_OWORD *)(a2 + 912);
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 912) = v63;
LABEL_86:
  if (*(_QWORD *)(a1 + 928))
  {
    v64 = *(_QWORD *)(a2 + 928);
    if (v64)
    {
      v65 = *(_QWORD *)(a2 + 936);
      *(_QWORD *)(a1 + 928) = v64;
      *(_QWORD *)(a1 + 936) = v65;
      swift_release();
      *(_QWORD *)(a1 + 944) = *(_QWORD *)(a2 + 944);
      *(_QWORD *)(a1 + 952) = *(_QWORD *)(a2 + 952);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
      swift_release();
      *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
      *(_BYTE *)(a1 + 984) = *(_BYTE *)(a2 + 984);
      goto LABEL_91;
    }
    sub_1AD3C2B88(a1 + 928);
  }
  v66 = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 928) = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 944) = v66;
  *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 969) = *(_OWORD *)(a2 + 969);
LABEL_91:
  if (*(_QWORD *)(a1 + 992))
  {
    v67 = *(_QWORD *)(a2 + 992);
    if (v67)
    {
      v68 = *(_QWORD *)(a2 + 1000);
      *(_QWORD *)(a1 + 992) = v67;
      *(_QWORD *)(a1 + 1000) = v68;
      swift_release();
      *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
      *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
      swift_release();
      *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
      *(_BYTE *)(a1 + 1048) = *(_BYTE *)(a2 + 1048);
      goto LABEL_96;
    }
    sub_1AD3C2B88(a1 + 992);
  }
  v69 = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
  *(_OWORD *)(a1 + 1008) = v69;
  *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
  *(_OWORD *)(a1 + 1033) = *(_OWORD *)(a2 + 1033);
LABEL_96:
  if (*(_QWORD *)(a1 + 1056))
  {
    v70 = *(_QWORD *)(a2 + 1056);
    if (v70)
    {
      v71 = *(_QWORD *)(a2 + 1064);
      *(_QWORD *)(a1 + 1056) = v70;
      *(_QWORD *)(a1 + 1064) = v71;
      swift_release();
      *(_QWORD *)(a1 + 1072) = *(_QWORD *)(a2 + 1072);
      *(_QWORD *)(a1 + 1080) = *(_QWORD *)(a2 + 1080);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
      swift_release();
      *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
      *(_BYTE *)(a1 + 1112) = *(_BYTE *)(a2 + 1112);
      goto LABEL_101;
    }
    sub_1AD3C2B88(a1 + 1056);
  }
  v72 = *(_OWORD *)(a2 + 1072);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(_OWORD *)(a1 + 1072) = v72;
  *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
  *(_OWORD *)(a1 + 1097) = *(_OWORD *)(a2 + 1097);
LABEL_101:
  if (*(_QWORD *)(a1 + 1120))
  {
    v73 = *(_QWORD *)(a2 + 1120);
    if (v73)
    {
      v74 = *(_QWORD *)(a2 + 1128);
      *(_QWORD *)(a1 + 1120) = v73;
      *(_QWORD *)(a1 + 1128) = v74;
      swift_release();
      *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
      *(_QWORD *)(a1 + 1144) = *(_QWORD *)(a2 + 1144);
      swift_bridgeObjectRelease();
      goto LABEL_106;
    }
    sub_1AD3C2B58(a1 + 1120);
  }
  v75 = *(_OWORD *)(a2 + 1136);
  *(_OWORD *)(a1 + 1120) = *(_OWORD *)(a2 + 1120);
  *(_OWORD *)(a1 + 1136) = v75;
LABEL_106:
  if (*(_QWORD *)(a1 + 1152))
  {
    v76 = *(_QWORD *)(a2 + 1152);
    if (v76)
    {
      v77 = *(_QWORD *)(a2 + 1160);
      *(_QWORD *)(a1 + 1152) = v76;
      *(_QWORD *)(a1 + 1160) = v77;
      swift_release();
      *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
      *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1184) = *(_OWORD *)(a2 + 1184);
      swift_release();
      *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
      *(_BYTE *)(a1 + 1208) = *(_BYTE *)(a2 + 1208);
      goto LABEL_111;
    }
    sub_1AD3C2B88(a1 + 1152);
  }
  v78 = *(_OWORD *)(a2 + 1168);
  *(_OWORD *)(a1 + 1152) = *(_OWORD *)(a2 + 1152);
  *(_OWORD *)(a1 + 1168) = v78;
  *(_OWORD *)(a1 + 1184) = *(_OWORD *)(a2 + 1184);
  *(_OWORD *)(a1 + 1193) = *(_OWORD *)(a2 + 1193);
LABEL_111:
  if (*(_QWORD *)(a1 + 1216))
  {
    v79 = *(_QWORD *)(a2 + 1216);
    if (v79)
    {
      v80 = *(_QWORD *)(a2 + 1224);
      *(_QWORD *)(a1 + 1216) = v79;
      *(_QWORD *)(a1 + 1224) = v80;
      swift_release();
      *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
      *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
      swift_release();
      *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
      *(_BYTE *)(a1 + 1272) = *(_BYTE *)(a2 + 1272);
      goto LABEL_116;
    }
    sub_1AD3C2B88(a1 + 1216);
  }
  v81 = *(_OWORD *)(a2 + 1232);
  *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
  *(_OWORD *)(a1 + 1232) = v81;
  *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
  *(_OWORD *)(a1 + 1257) = *(_OWORD *)(a2 + 1257);
LABEL_116:
  if (*(_QWORD *)(a1 + 1280))
  {
    v82 = *(_QWORD *)(a2 + 1280);
    if (v82)
    {
      v83 = *(_QWORD *)(a2 + 1288);
      *(_QWORD *)(a1 + 1280) = v82;
      *(_QWORD *)(a1 + 1288) = v83;
      swift_release();
      *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
      *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
      swift_release();
      *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
      *(_BYTE *)(a1 + 1336) = *(_BYTE *)(a2 + 1336);
      goto LABEL_121;
    }
    sub_1AD3C2B88(a1 + 1280);
  }
  v84 = *(_OWORD *)(a2 + 1296);
  *(_OWORD *)(a1 + 1280) = *(_OWORD *)(a2 + 1280);
  *(_OWORD *)(a1 + 1296) = v84;
  *(_OWORD *)(a1 + 1312) = *(_OWORD *)(a2 + 1312);
  *(_OWORD *)(a1 + 1321) = *(_OWORD *)(a2 + 1321);
LABEL_121:
  if (*(_QWORD *)(a1 + 1344))
  {
    v85 = *(_QWORD *)(a2 + 1344);
    if (v85)
    {
      v86 = *(_QWORD *)(a2 + 1352);
      *(_QWORD *)(a1 + 1344) = v85;
      *(_QWORD *)(a1 + 1352) = v86;
      swift_release();
      *(_QWORD *)(a1 + 1360) = *(_QWORD *)(a2 + 1360);
      *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
      swift_bridgeObjectRelease();
      goto LABEL_126;
    }
    sub_1AD3C2B58(a1 + 1344);
  }
  v87 = *(_OWORD *)(a2 + 1360);
  *(_OWORD *)(a1 + 1344) = *(_OWORD *)(a2 + 1344);
  *(_OWORD *)(a1 + 1360) = v87;
LABEL_126:
  if (*(_QWORD *)(a1 + 1376))
  {
    v88 = *(_QWORD *)(a2 + 1376);
    if (v88)
    {
      v89 = *(_QWORD *)(a2 + 1384);
      *(_QWORD *)(a1 + 1376) = v88;
      *(_QWORD *)(a1 + 1384) = v89;
      swift_release();
      *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
      *(_QWORD *)(a1 + 1400) = *(_QWORD *)(a2 + 1400);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1408) = *(_OWORD *)(a2 + 1408);
      swift_release();
      *(_QWORD *)(a1 + 1424) = *(_QWORD *)(a2 + 1424);
      *(_BYTE *)(a1 + 1432) = *(_BYTE *)(a2 + 1432);
      goto LABEL_131;
    }
    sub_1AD3C2B88(a1 + 1376);
  }
  v90 = *(_OWORD *)(a2 + 1392);
  *(_OWORD *)(a1 + 1376) = *(_OWORD *)(a2 + 1376);
  *(_OWORD *)(a1 + 1392) = v90;
  *(_OWORD *)(a1 + 1408) = *(_OWORD *)(a2 + 1408);
  *(_OWORD *)(a1 + 1417) = *(_OWORD *)(a2 + 1417);
LABEL_131:
  if (*(_QWORD *)(a1 + 1440))
  {
    v91 = *(_QWORD *)(a2 + 1440);
    if (v91)
    {
      v92 = *(_QWORD *)(a2 + 1448);
      *(_QWORD *)(a1 + 1440) = v91;
      *(_QWORD *)(a1 + 1448) = v92;
      swift_release();
      *(_QWORD *)(a1 + 1456) = *(_QWORD *)(a2 + 1456);
      *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1472) = *(_OWORD *)(a2 + 1472);
      swift_release();
      *(_QWORD *)(a1 + 1488) = *(_QWORD *)(a2 + 1488);
      *(_BYTE *)(a1 + 1496) = *(_BYTE *)(a2 + 1496);
      goto LABEL_136;
    }
    sub_1AD3C2B88(a1 + 1440);
  }
  v93 = *(_OWORD *)(a2 + 1456);
  *(_OWORD *)(a1 + 1440) = *(_OWORD *)(a2 + 1440);
  *(_OWORD *)(a1 + 1456) = v93;
  *(_OWORD *)(a1 + 1472) = *(_OWORD *)(a2 + 1472);
  *(_OWORD *)(a1 + 1481) = *(_OWORD *)(a2 + 1481);
LABEL_136:
  if (*(_QWORD *)(a1 + 1504))
  {
    v94 = *(_QWORD *)(a2 + 1504);
    if (v94)
    {
      v95 = *(_QWORD *)(a2 + 1512);
      *(_QWORD *)(a1 + 1504) = v94;
      *(_QWORD *)(a1 + 1512) = v95;
      swift_release();
      *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
      *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1536) = *(_OWORD *)(a2 + 1536);
      swift_release();
      *(_QWORD *)(a1 + 1552) = *(_QWORD *)(a2 + 1552);
      *(_BYTE *)(a1 + 1560) = *(_BYTE *)(a2 + 1560);
      goto LABEL_141;
    }
    sub_1AD3C2B88(a1 + 1504);
  }
  v96 = *(_OWORD *)(a2 + 1520);
  *(_OWORD *)(a1 + 1504) = *(_OWORD *)(a2 + 1504);
  *(_OWORD *)(a1 + 1520) = v96;
  *(_OWORD *)(a1 + 1536) = *(_OWORD *)(a2 + 1536);
  *(_OWORD *)(a1 + 1545) = *(_OWORD *)(a2 + 1545);
LABEL_141:
  if (*(_QWORD *)(a1 + 1568))
  {
    v97 = *(_QWORD *)(a2 + 1568);
    if (v97)
    {
      v98 = *(_QWORD *)(a2 + 1576);
      *(_QWORD *)(a1 + 1568) = v97;
      *(_QWORD *)(a1 + 1576) = v98;
      swift_release();
      *(_QWORD *)(a1 + 1584) = *(_QWORD *)(a2 + 1584);
      *(_QWORD *)(a1 + 1592) = *(_QWORD *)(a2 + 1592);
      swift_bridgeObjectRelease();
      goto LABEL_146;
    }
    sub_1AD3C2B58(a1 + 1568);
  }
  v99 = *(_OWORD *)(a2 + 1584);
  *(_OWORD *)(a1 + 1568) = *(_OWORD *)(a2 + 1568);
  *(_OWORD *)(a1 + 1584) = v99;
LABEL_146:
  if (*(_QWORD *)(a1 + 1600))
  {
    v100 = *(_QWORD *)(a2 + 1600);
    if (v100)
    {
      v101 = *(_QWORD *)(a2 + 1608);
      *(_QWORD *)(a1 + 1600) = v100;
      *(_QWORD *)(a1 + 1608) = v101;
      swift_release();
      *(_QWORD *)(a1 + 1616) = *(_QWORD *)(a2 + 1616);
      *(_QWORD *)(a1 + 1624) = *(_QWORD *)(a2 + 1624);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1632) = *(_OWORD *)(a2 + 1632);
      swift_release();
      *(_QWORD *)(a1 + 1648) = *(_QWORD *)(a2 + 1648);
      *(_BYTE *)(a1 + 1656) = *(_BYTE *)(a2 + 1656);
      goto LABEL_151;
    }
    sub_1AD3C2B88(a1 + 1600);
  }
  v102 = *(_OWORD *)(a2 + 1616);
  *(_OWORD *)(a1 + 1600) = *(_OWORD *)(a2 + 1600);
  *(_OWORD *)(a1 + 1616) = v102;
  *(_OWORD *)(a1 + 1632) = *(_OWORD *)(a2 + 1632);
  *(_OWORD *)(a1 + 1641) = *(_OWORD *)(a2 + 1641);
LABEL_151:
  if (*(_QWORD *)(a1 + 1664))
  {
    v103 = *(_QWORD *)(a2 + 1664);
    if (v103)
    {
      v104 = *(_QWORD *)(a2 + 1672);
      *(_QWORD *)(a1 + 1664) = v103;
      *(_QWORD *)(a1 + 1672) = v104;
      swift_release();
      *(_QWORD *)(a1 + 1680) = *(_QWORD *)(a2 + 1680);
      *(_QWORD *)(a1 + 1688) = *(_QWORD *)(a2 + 1688);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1696) = *(_OWORD *)(a2 + 1696);
      swift_release();
      *(_QWORD *)(a1 + 1712) = *(_QWORD *)(a2 + 1712);
      *(_BYTE *)(a1 + 1720) = *(_BYTE *)(a2 + 1720);
      goto LABEL_156;
    }
    sub_1AD3C2B88(a1 + 1664);
  }
  v105 = *(_OWORD *)(a2 + 1680);
  *(_OWORD *)(a1 + 1664) = *(_OWORD *)(a2 + 1664);
  *(_OWORD *)(a1 + 1680) = v105;
  *(_OWORD *)(a1 + 1696) = *(_OWORD *)(a2 + 1696);
  *(_OWORD *)(a1 + 1705) = *(_OWORD *)(a2 + 1705);
LABEL_156:
  if (*(_QWORD *)(a1 + 1728))
  {
    v106 = *(_QWORD *)(a2 + 1728);
    if (v106)
    {
      v107 = *(_QWORD *)(a2 + 1736);
      *(_QWORD *)(a1 + 1728) = v106;
      *(_QWORD *)(a1 + 1736) = v107;
      swift_release();
      *(_QWORD *)(a1 + 1744) = *(_QWORD *)(a2 + 1744);
      *(_QWORD *)(a1 + 1752) = *(_QWORD *)(a2 + 1752);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1760) = *(_OWORD *)(a2 + 1760);
      swift_release();
      *(_QWORD *)(a1 + 1776) = *(_QWORD *)(a2 + 1776);
      *(_BYTE *)(a1 + 1784) = *(_BYTE *)(a2 + 1784);
      goto LABEL_161;
    }
    sub_1AD3C2B88(a1 + 1728);
  }
  v108 = *(_OWORD *)(a2 + 1744);
  *(_OWORD *)(a1 + 1728) = *(_OWORD *)(a2 + 1728);
  *(_OWORD *)(a1 + 1744) = v108;
  *(_OWORD *)(a1 + 1760) = *(_OWORD *)(a2 + 1760);
  *(_OWORD *)(a1 + 1769) = *(_OWORD *)(a2 + 1769);
LABEL_161:
  if (*(_QWORD *)(a1 + 1792))
  {
    v109 = *(_QWORD *)(a2 + 1792);
    if (v109)
    {
      v110 = *(_QWORD *)(a2 + 1800);
      *(_QWORD *)(a1 + 1792) = v109;
      *(_QWORD *)(a1 + 1800) = v110;
      swift_release();
      *(_QWORD *)(a1 + 1808) = *(_QWORD *)(a2 + 1808);
      *(_QWORD *)(a1 + 1816) = *(_QWORD *)(a2 + 1816);
      swift_bridgeObjectRelease();
      goto LABEL_166;
    }
    sub_1AD3C2B58(a1 + 1792);
  }
  v111 = *(_OWORD *)(a2 + 1808);
  *(_OWORD *)(a1 + 1792) = *(_OWORD *)(a2 + 1792);
  *(_OWORD *)(a1 + 1808) = v111;
LABEL_166:
  if (*(_QWORD *)(a1 + 1824))
  {
    v112 = *(_QWORD *)(a2 + 1824);
    if (v112)
    {
      v113 = *(_QWORD *)(a2 + 1832);
      *(_QWORD *)(a1 + 1824) = v112;
      *(_QWORD *)(a1 + 1832) = v113;
      swift_release();
      *(_QWORD *)(a1 + 1840) = *(_QWORD *)(a2 + 1840);
      *(_QWORD *)(a1 + 1848) = *(_QWORD *)(a2 + 1848);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1856) = *(_OWORD *)(a2 + 1856);
      swift_release();
      *(_QWORD *)(a1 + 1872) = *(_QWORD *)(a2 + 1872);
      *(_BYTE *)(a1 + 1880) = *(_BYTE *)(a2 + 1880);
      goto LABEL_171;
    }
    sub_1AD3C2B88(a1 + 1824);
  }
  v114 = *(_OWORD *)(a2 + 1840);
  *(_OWORD *)(a1 + 1824) = *(_OWORD *)(a2 + 1824);
  *(_OWORD *)(a1 + 1840) = v114;
  *(_OWORD *)(a1 + 1856) = *(_OWORD *)(a2 + 1856);
  *(_OWORD *)(a1 + 1865) = *(_OWORD *)(a2 + 1865);
LABEL_171:
  if (*(_QWORD *)(a1 + 1888))
  {
    v115 = *(_QWORD *)(a2 + 1888);
    if (v115)
    {
      v116 = *(_QWORD *)(a2 + 1896);
      *(_QWORD *)(a1 + 1888) = v115;
      *(_QWORD *)(a1 + 1896) = v116;
      swift_release();
      *(_QWORD *)(a1 + 1904) = *(_QWORD *)(a2 + 1904);
      *(_QWORD *)(a1 + 1912) = *(_QWORD *)(a2 + 1912);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1920) = *(_OWORD *)(a2 + 1920);
      swift_release();
      *(_QWORD *)(a1 + 1936) = *(_QWORD *)(a2 + 1936);
      *(_BYTE *)(a1 + 1944) = *(_BYTE *)(a2 + 1944);
      goto LABEL_176;
    }
    sub_1AD3C2B88(a1 + 1888);
  }
  v117 = *(_OWORD *)(a2 + 1904);
  *(_OWORD *)(a1 + 1888) = *(_OWORD *)(a2 + 1888);
  *(_OWORD *)(a1 + 1904) = v117;
  *(_OWORD *)(a1 + 1920) = *(_OWORD *)(a2 + 1920);
  *(_OWORD *)(a1 + 1929) = *(_OWORD *)(a2 + 1929);
LABEL_176:
  if (*(_QWORD *)(a1 + 1952))
  {
    v118 = *(_QWORD *)(a2 + 1952);
    if (v118)
    {
      v119 = *(_QWORD *)(a2 + 1960);
      *(_QWORD *)(a1 + 1952) = v118;
      *(_QWORD *)(a1 + 1960) = v119;
      swift_release();
      *(_QWORD *)(a1 + 1968) = *(_QWORD *)(a2 + 1968);
      *(_QWORD *)(a1 + 1976) = *(_QWORD *)(a2 + 1976);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 1984) = *(_OWORD *)(a2 + 1984);
      swift_release();
      *(_QWORD *)(a1 + 2000) = *(_QWORD *)(a2 + 2000);
      *(_BYTE *)(a1 + 2008) = *(_BYTE *)(a2 + 2008);
      goto LABEL_181;
    }
    sub_1AD3C2B88(a1 + 1952);
  }
  v120 = *(_OWORD *)(a2 + 1968);
  *(_OWORD *)(a1 + 1952) = *(_OWORD *)(a2 + 1952);
  *(_OWORD *)(a1 + 1968) = v120;
  *(_OWORD *)(a1 + 1984) = *(_OWORD *)(a2 + 1984);
  *(_OWORD *)(a1 + 1993) = *(_OWORD *)(a2 + 1993);
LABEL_181:
  if (*(_QWORD *)(a1 + 2016))
  {
    v121 = *(_QWORD *)(a2 + 2016);
    if (v121)
    {
      v122 = *(_QWORD *)(a2 + 2024);
      *(_QWORD *)(a1 + 2016) = v121;
      *(_QWORD *)(a1 + 2024) = v122;
      swift_release();
      *(_QWORD *)(a1 + 2032) = *(_QWORD *)(a2 + 2032);
      *(_QWORD *)(a1 + 2040) = *(_QWORD *)(a2 + 2040);
      swift_bridgeObjectRelease();
      goto LABEL_186;
    }
    sub_1AD3C2B58(a1 + 2016);
  }
  v123 = *(_OWORD *)(a2 + 2032);
  *(_OWORD *)(a1 + 2016) = *(_OWORD *)(a2 + 2016);
  *(_OWORD *)(a1 + 2032) = v123;
LABEL_186:
  if (*(_QWORD *)(a1 + 2048))
  {
    v124 = *(_QWORD *)(a2 + 2048);
    if (v124)
    {
      v125 = *(_QWORD *)(a2 + 2056);
      *(_QWORD *)(a1 + 2048) = v124;
      *(_QWORD *)(a1 + 2056) = v125;
      swift_release();
      *(_QWORD *)(a1 + 2064) = *(_QWORD *)(a2 + 2064);
      *(_QWORD *)(a1 + 2072) = *(_QWORD *)(a2 + 2072);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2080) = *(_OWORD *)(a2 + 2080);
      swift_release();
      *(_QWORD *)(a1 + 2096) = *(_QWORD *)(a2 + 2096);
      *(_BYTE *)(a1 + 2104) = *(_BYTE *)(a2 + 2104);
      goto LABEL_191;
    }
    sub_1AD3C2B88(a1 + 2048);
  }
  v126 = *(_OWORD *)(a2 + 2064);
  *(_OWORD *)(a1 + 2048) = *(_OWORD *)(a2 + 2048);
  *(_OWORD *)(a1 + 2064) = v126;
  *(_OWORD *)(a1 + 2080) = *(_OWORD *)(a2 + 2080);
  *(_OWORD *)(a1 + 2089) = *(_OWORD *)(a2 + 2089);
LABEL_191:
  if (*(_QWORD *)(a1 + 2112))
  {
    v127 = *(_QWORD *)(a2 + 2112);
    if (v127)
    {
      v128 = *(_QWORD *)(a2 + 2120);
      *(_QWORD *)(a1 + 2112) = v127;
      *(_QWORD *)(a1 + 2120) = v128;
      swift_release();
      *(_QWORD *)(a1 + 2128) = *(_QWORD *)(a2 + 2128);
      *(_QWORD *)(a1 + 2136) = *(_QWORD *)(a2 + 2136);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2144) = *(_OWORD *)(a2 + 2144);
      swift_release();
      *(_QWORD *)(a1 + 2160) = *(_QWORD *)(a2 + 2160);
      *(_BYTE *)(a1 + 2168) = *(_BYTE *)(a2 + 2168);
      goto LABEL_196;
    }
    sub_1AD3C2B88(a1 + 2112);
  }
  v129 = *(_OWORD *)(a2 + 2128);
  *(_OWORD *)(a1 + 2112) = *(_OWORD *)(a2 + 2112);
  *(_OWORD *)(a1 + 2128) = v129;
  *(_OWORD *)(a1 + 2144) = *(_OWORD *)(a2 + 2144);
  *(_OWORD *)(a1 + 2153) = *(_OWORD *)(a2 + 2153);
LABEL_196:
  if (*(_QWORD *)(a1 + 2176))
  {
    v130 = *(_QWORD *)(a2 + 2176);
    if (v130)
    {
      v131 = *(_QWORD *)(a2 + 2184);
      *(_QWORD *)(a1 + 2176) = v130;
      *(_QWORD *)(a1 + 2184) = v131;
      swift_release();
      *(_QWORD *)(a1 + 2192) = *(_QWORD *)(a2 + 2192);
      *(_QWORD *)(a1 + 2200) = *(_QWORD *)(a2 + 2200);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2208) = *(_OWORD *)(a2 + 2208);
      swift_release();
      *(_QWORD *)(a1 + 2224) = *(_QWORD *)(a2 + 2224);
      *(_BYTE *)(a1 + 2232) = *(_BYTE *)(a2 + 2232);
      goto LABEL_201;
    }
    sub_1AD3C2B88(a1 + 2176);
  }
  v132 = *(_OWORD *)(a2 + 2192);
  *(_OWORD *)(a1 + 2176) = *(_OWORD *)(a2 + 2176);
  *(_OWORD *)(a1 + 2192) = v132;
  *(_OWORD *)(a1 + 2208) = *(_OWORD *)(a2 + 2208);
  *(_OWORD *)(a1 + 2217) = *(_OWORD *)(a2 + 2217);
LABEL_201:
  if (*(_QWORD *)(a1 + 2240))
  {
    v133 = *(_QWORD *)(a2 + 2240);
    if (v133)
    {
      v134 = *(_QWORD *)(a2 + 2248);
      *(_QWORD *)(a1 + 2240) = v133;
      *(_QWORD *)(a1 + 2248) = v134;
      swift_release();
      *(_QWORD *)(a1 + 2256) = *(_QWORD *)(a2 + 2256);
      *(_QWORD *)(a1 + 2264) = *(_QWORD *)(a2 + 2264);
      swift_bridgeObjectRelease();
      goto LABEL_206;
    }
    sub_1AD3C2B58(a1 + 2240);
  }
  v135 = *(_OWORD *)(a2 + 2256);
  *(_OWORD *)(a1 + 2240) = *(_OWORD *)(a2 + 2240);
  *(_OWORD *)(a1 + 2256) = v135;
LABEL_206:
  if (*(_QWORD *)(a1 + 2272))
  {
    v136 = *(_QWORD *)(a2 + 2272);
    if (v136)
    {
      v137 = *(_QWORD *)(a2 + 2280);
      *(_QWORD *)(a1 + 2272) = v136;
      *(_QWORD *)(a1 + 2280) = v137;
      swift_release();
      *(_QWORD *)(a1 + 2288) = *(_QWORD *)(a2 + 2288);
      *(_QWORD *)(a1 + 2296) = *(_QWORD *)(a2 + 2296);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2304) = *(_OWORD *)(a2 + 2304);
      swift_release();
      *(_QWORD *)(a1 + 2320) = *(_QWORD *)(a2 + 2320);
      *(_BYTE *)(a1 + 2328) = *(_BYTE *)(a2 + 2328);
      goto LABEL_211;
    }
    sub_1AD3C2B88(a1 + 2272);
  }
  v138 = *(_OWORD *)(a2 + 2288);
  *(_OWORD *)(a1 + 2272) = *(_OWORD *)(a2 + 2272);
  *(_OWORD *)(a1 + 2288) = v138;
  *(_OWORD *)(a1 + 2304) = *(_OWORD *)(a2 + 2304);
  *(_OWORD *)(a1 + 2313) = *(_OWORD *)(a2 + 2313);
LABEL_211:
  if (*(_QWORD *)(a1 + 2336))
  {
    v139 = *(_QWORD *)(a2 + 2336);
    if (v139)
    {
      v140 = *(_QWORD *)(a2 + 2344);
      *(_QWORD *)(a1 + 2336) = v139;
      *(_QWORD *)(a1 + 2344) = v140;
      swift_release();
      *(_QWORD *)(a1 + 2352) = *(_QWORD *)(a2 + 2352);
      *(_QWORD *)(a1 + 2360) = *(_QWORD *)(a2 + 2360);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2368) = *(_OWORD *)(a2 + 2368);
      swift_release();
      *(_QWORD *)(a1 + 2384) = *(_QWORD *)(a2 + 2384);
      *(_BYTE *)(a1 + 2392) = *(_BYTE *)(a2 + 2392);
      goto LABEL_216;
    }
    sub_1AD3C2B88(a1 + 2336);
  }
  v141 = *(_OWORD *)(a2 + 2352);
  *(_OWORD *)(a1 + 2336) = *(_OWORD *)(a2 + 2336);
  *(_OWORD *)(a1 + 2352) = v141;
  *(_OWORD *)(a1 + 2368) = *(_OWORD *)(a2 + 2368);
  *(_OWORD *)(a1 + 2377) = *(_OWORD *)(a2 + 2377);
LABEL_216:
  if (*(_QWORD *)(a1 + 2400))
  {
    v142 = *(_QWORD *)(a2 + 2400);
    if (v142)
    {
      v143 = *(_QWORD *)(a2 + 2408);
      *(_QWORD *)(a1 + 2400) = v142;
      *(_QWORD *)(a1 + 2408) = v143;
      swift_release();
      *(_QWORD *)(a1 + 2416) = *(_QWORD *)(a2 + 2416);
      *(_QWORD *)(a1 + 2424) = *(_QWORD *)(a2 + 2424);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2432) = *(_OWORD *)(a2 + 2432);
      swift_release();
      *(_QWORD *)(a1 + 2448) = *(_QWORD *)(a2 + 2448);
      *(_BYTE *)(a1 + 2456) = *(_BYTE *)(a2 + 2456);
      goto LABEL_221;
    }
    sub_1AD3C2B88(a1 + 2400);
  }
  v144 = *(_OWORD *)(a2 + 2416);
  *(_OWORD *)(a1 + 2400) = *(_OWORD *)(a2 + 2400);
  *(_OWORD *)(a1 + 2416) = v144;
  *(_OWORD *)(a1 + 2432) = *(_OWORD *)(a2 + 2432);
  *(_OWORD *)(a1 + 2441) = *(_OWORD *)(a2 + 2441);
LABEL_221:
  if (*(_QWORD *)(a1 + 2464))
  {
    v145 = *(_QWORD *)(a2 + 2464);
    if (v145)
    {
      v146 = *(_QWORD *)(a2 + 2472);
      *(_QWORD *)(a1 + 2464) = v145;
      *(_QWORD *)(a1 + 2472) = v146;
      swift_release();
      *(_QWORD *)(a1 + 2480) = *(_QWORD *)(a2 + 2480);
      *(_QWORD *)(a1 + 2488) = *(_QWORD *)(a2 + 2488);
      swift_bridgeObjectRelease();
      goto LABEL_226;
    }
    sub_1AD3C2B58(a1 + 2464);
  }
  v147 = *(_OWORD *)(a2 + 2480);
  *(_OWORD *)(a1 + 2464) = *(_OWORD *)(a2 + 2464);
  *(_OWORD *)(a1 + 2480) = v147;
LABEL_226:
  if (*(_QWORD *)(a1 + 2496))
  {
    v148 = *(_QWORD *)(a2 + 2496);
    if (v148)
    {
      v149 = *(_QWORD *)(a2 + 2504);
      *(_QWORD *)(a1 + 2496) = v148;
      *(_QWORD *)(a1 + 2504) = v149;
      swift_release();
      *(_QWORD *)(a1 + 2512) = *(_QWORD *)(a2 + 2512);
      *(_QWORD *)(a1 + 2520) = *(_QWORD *)(a2 + 2520);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2528) = *(_OWORD *)(a2 + 2528);
      swift_release();
      *(_QWORD *)(a1 + 2544) = *(_QWORD *)(a2 + 2544);
      *(_BYTE *)(a1 + 2552) = *(_BYTE *)(a2 + 2552);
      goto LABEL_231;
    }
    sub_1AD3C2B88(a1 + 2496);
  }
  v150 = *(_OWORD *)(a2 + 2512);
  *(_OWORD *)(a1 + 2496) = *(_OWORD *)(a2 + 2496);
  *(_OWORD *)(a1 + 2512) = v150;
  *(_OWORD *)(a1 + 2528) = *(_OWORD *)(a2 + 2528);
  *(_OWORD *)(a1 + 2537) = *(_OWORD *)(a2 + 2537);
LABEL_231:
  if (*(_QWORD *)(a1 + 2560))
  {
    v151 = *(_QWORD *)(a2 + 2560);
    if (v151)
    {
      v152 = *(_QWORD *)(a2 + 2568);
      *(_QWORD *)(a1 + 2560) = v151;
      *(_QWORD *)(a1 + 2568) = v152;
      swift_release();
      *(_QWORD *)(a1 + 2576) = *(_QWORD *)(a2 + 2576);
      *(_QWORD *)(a1 + 2584) = *(_QWORD *)(a2 + 2584);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2592) = *(_OWORD *)(a2 + 2592);
      swift_release();
      *(_QWORD *)(a1 + 2608) = *(_QWORD *)(a2 + 2608);
      *(_BYTE *)(a1 + 2616) = *(_BYTE *)(a2 + 2616);
      goto LABEL_236;
    }
    sub_1AD3C2B88(a1 + 2560);
  }
  v153 = *(_OWORD *)(a2 + 2576);
  *(_OWORD *)(a1 + 2560) = *(_OWORD *)(a2 + 2560);
  *(_OWORD *)(a1 + 2576) = v153;
  *(_OWORD *)(a1 + 2592) = *(_OWORD *)(a2 + 2592);
  *(_OWORD *)(a1 + 2601) = *(_OWORD *)(a2 + 2601);
LABEL_236:
  if (*(_QWORD *)(a1 + 2624))
  {
    v154 = *(_QWORD *)(a2 + 2624);
    if (v154)
    {
      v155 = *(_QWORD *)(a2 + 2632);
      *(_QWORD *)(a1 + 2624) = v154;
      *(_QWORD *)(a1 + 2632) = v155;
      swift_release();
      *(_QWORD *)(a1 + 2640) = *(_QWORD *)(a2 + 2640);
      *(_QWORD *)(a1 + 2648) = *(_QWORD *)(a2 + 2648);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2656) = *(_OWORD *)(a2 + 2656);
      swift_release();
      *(_QWORD *)(a1 + 2672) = *(_QWORD *)(a2 + 2672);
      *(_BYTE *)(a1 + 2680) = *(_BYTE *)(a2 + 2680);
      goto LABEL_241;
    }
    sub_1AD3C2B88(a1 + 2624);
  }
  v156 = *(_OWORD *)(a2 + 2640);
  *(_OWORD *)(a1 + 2624) = *(_OWORD *)(a2 + 2624);
  *(_OWORD *)(a1 + 2640) = v156;
  *(_OWORD *)(a1 + 2656) = *(_OWORD *)(a2 + 2656);
  *(_OWORD *)(a1 + 2665) = *(_OWORD *)(a2 + 2665);
LABEL_241:
  if (*(_QWORD *)(a1 + 2688))
  {
    v157 = *(_QWORD *)(a2 + 2688);
    if (v157)
    {
      v158 = *(_QWORD *)(a2 + 2696);
      *(_QWORD *)(a1 + 2688) = v157;
      *(_QWORD *)(a1 + 2696) = v158;
      swift_release();
      *(_QWORD *)(a1 + 2704) = *(_QWORD *)(a2 + 2704);
      *(_QWORD *)(a1 + 2712) = *(_QWORD *)(a2 + 2712);
      swift_bridgeObjectRelease();
      goto LABEL_246;
    }
    sub_1AD3C2B58(a1 + 2688);
  }
  v159 = *(_OWORD *)(a2 + 2704);
  *(_OWORD *)(a1 + 2688) = *(_OWORD *)(a2 + 2688);
  *(_OWORD *)(a1 + 2704) = v159;
LABEL_246:
  if (*(_QWORD *)(a1 + 2720))
  {
    v160 = *(_QWORD *)(a2 + 2720);
    if (v160)
    {
      v161 = *(_QWORD *)(a2 + 2728);
      *(_QWORD *)(a1 + 2720) = v160;
      *(_QWORD *)(a1 + 2728) = v161;
      swift_release();
      *(_QWORD *)(a1 + 2736) = *(_QWORD *)(a2 + 2736);
      *(_QWORD *)(a1 + 2744) = *(_QWORD *)(a2 + 2744);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2752) = *(_OWORD *)(a2 + 2752);
      swift_release();
      *(_QWORD *)(a1 + 2768) = *(_QWORD *)(a2 + 2768);
      *(_BYTE *)(a1 + 2776) = *(_BYTE *)(a2 + 2776);
      goto LABEL_251;
    }
    sub_1AD3C2B88(a1 + 2720);
  }
  v162 = *(_OWORD *)(a2 + 2736);
  *(_OWORD *)(a1 + 2720) = *(_OWORD *)(a2 + 2720);
  *(_OWORD *)(a1 + 2736) = v162;
  *(_OWORD *)(a1 + 2752) = *(_OWORD *)(a2 + 2752);
  *(_OWORD *)(a1 + 2761) = *(_OWORD *)(a2 + 2761);
LABEL_251:
  if (*(_QWORD *)(a1 + 2784))
  {
    v163 = *(_QWORD *)(a2 + 2784);
    if (v163)
    {
      v164 = *(_QWORD *)(a2 + 2792);
      *(_QWORD *)(a1 + 2784) = v163;
      *(_QWORD *)(a1 + 2792) = v164;
      swift_release();
      *(_QWORD *)(a1 + 2800) = *(_QWORD *)(a2 + 2800);
      *(_QWORD *)(a1 + 2808) = *(_QWORD *)(a2 + 2808);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2816) = *(_OWORD *)(a2 + 2816);
      swift_release();
      *(_QWORD *)(a1 + 2832) = *(_QWORD *)(a2 + 2832);
      *(_BYTE *)(a1 + 2840) = *(_BYTE *)(a2 + 2840);
      goto LABEL_256;
    }
    sub_1AD3C2B88(a1 + 2784);
  }
  v165 = *(_OWORD *)(a2 + 2800);
  *(_OWORD *)(a1 + 2784) = *(_OWORD *)(a2 + 2784);
  *(_OWORD *)(a1 + 2800) = v165;
  *(_OWORD *)(a1 + 2816) = *(_OWORD *)(a2 + 2816);
  *(_OWORD *)(a1 + 2825) = *(_OWORD *)(a2 + 2825);
LABEL_256:
  if (*(_QWORD *)(a1 + 2848))
  {
    v166 = *(_QWORD *)(a2 + 2848);
    if (v166)
    {
      v167 = *(_QWORD *)(a2 + 2856);
      *(_QWORD *)(a1 + 2848) = v166;
      *(_QWORD *)(a1 + 2856) = v167;
      swift_release();
      *(_QWORD *)(a1 + 2864) = *(_QWORD *)(a2 + 2864);
      *(_QWORD *)(a1 + 2872) = *(_QWORD *)(a2 + 2872);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2880) = *(_OWORD *)(a2 + 2880);
      swift_release();
      *(_QWORD *)(a1 + 2896) = *(_QWORD *)(a2 + 2896);
      *(_BYTE *)(a1 + 2904) = *(_BYTE *)(a2 + 2904);
      goto LABEL_261;
    }
    sub_1AD3C2B88(a1 + 2848);
  }
  v168 = *(_OWORD *)(a2 + 2864);
  *(_OWORD *)(a1 + 2848) = *(_OWORD *)(a2 + 2848);
  *(_OWORD *)(a1 + 2864) = v168;
  *(_OWORD *)(a1 + 2880) = *(_OWORD *)(a2 + 2880);
  *(_OWORD *)(a1 + 2889) = *(_OWORD *)(a2 + 2889);
LABEL_261:
  if (*(_QWORD *)(a1 + 2912))
  {
    v169 = *(_QWORD *)(a2 + 2912);
    if (v169)
    {
      v170 = *(_QWORD *)(a2 + 2920);
      *(_QWORD *)(a1 + 2912) = v169;
      *(_QWORD *)(a1 + 2920) = v170;
      swift_release();
      *(_QWORD *)(a1 + 2928) = *(_QWORD *)(a2 + 2928);
      *(_QWORD *)(a1 + 2936) = *(_QWORD *)(a2 + 2936);
      swift_bridgeObjectRelease();
      goto LABEL_266;
    }
    sub_1AD3C2B58(a1 + 2912);
  }
  v171 = *(_OWORD *)(a2 + 2928);
  *(_OWORD *)(a1 + 2912) = *(_OWORD *)(a2 + 2912);
  *(_OWORD *)(a1 + 2928) = v171;
LABEL_266:
  if (*(_QWORD *)(a1 + 2944))
  {
    v172 = *(_QWORD *)(a2 + 2944);
    if (v172)
    {
      v173 = *(_QWORD *)(a2 + 2952);
      *(_QWORD *)(a1 + 2944) = v172;
      *(_QWORD *)(a1 + 2952) = v173;
      swift_release();
      *(_QWORD *)(a1 + 2960) = *(_QWORD *)(a2 + 2960);
      *(_QWORD *)(a1 + 2968) = *(_QWORD *)(a2 + 2968);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 2976) = *(_OWORD *)(a2 + 2976);
      swift_release();
      *(_QWORD *)(a1 + 2992) = *(_QWORD *)(a2 + 2992);
      *(_BYTE *)(a1 + 3000) = *(_BYTE *)(a2 + 3000);
      goto LABEL_271;
    }
    sub_1AD3C2B88(a1 + 2944);
  }
  v174 = *(_OWORD *)(a2 + 2960);
  *(_OWORD *)(a1 + 2944) = *(_OWORD *)(a2 + 2944);
  *(_OWORD *)(a1 + 2960) = v174;
  *(_OWORD *)(a1 + 2976) = *(_OWORD *)(a2 + 2976);
  *(_OWORD *)(a1 + 2985) = *(_OWORD *)(a2 + 2985);
LABEL_271:
  if (*(_QWORD *)(a1 + 3008))
  {
    v175 = *(_QWORD *)(a2 + 3008);
    if (v175)
    {
      v176 = *(_QWORD *)(a2 + 3016);
      *(_QWORD *)(a1 + 3008) = v175;
      *(_QWORD *)(a1 + 3016) = v176;
      swift_release();
      *(_QWORD *)(a1 + 3024) = *(_QWORD *)(a2 + 3024);
      *(_QWORD *)(a1 + 3032) = *(_QWORD *)(a2 + 3032);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3040) = *(_OWORD *)(a2 + 3040);
      swift_release();
      *(_QWORD *)(a1 + 3056) = *(_QWORD *)(a2 + 3056);
      *(_BYTE *)(a1 + 3064) = *(_BYTE *)(a2 + 3064);
      goto LABEL_276;
    }
    sub_1AD3C2B88(a1 + 3008);
  }
  v177 = *(_OWORD *)(a2 + 3024);
  *(_OWORD *)(a1 + 3008) = *(_OWORD *)(a2 + 3008);
  *(_OWORD *)(a1 + 3024) = v177;
  *(_OWORD *)(a1 + 3040) = *(_OWORD *)(a2 + 3040);
  *(_OWORD *)(a1 + 3049) = *(_OWORD *)(a2 + 3049);
LABEL_276:
  if (*(_QWORD *)(a1 + 3072))
  {
    v178 = *(_QWORD *)(a2 + 3072);
    if (v178)
    {
      v179 = *(_QWORD *)(a2 + 3080);
      *(_QWORD *)(a1 + 3072) = v178;
      *(_QWORD *)(a1 + 3080) = v179;
      swift_release();
      *(_QWORD *)(a1 + 3088) = *(_QWORD *)(a2 + 3088);
      *(_QWORD *)(a1 + 3096) = *(_QWORD *)(a2 + 3096);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3104) = *(_OWORD *)(a2 + 3104);
      swift_release();
      *(_QWORD *)(a1 + 3120) = *(_QWORD *)(a2 + 3120);
      *(_BYTE *)(a1 + 3128) = *(_BYTE *)(a2 + 3128);
      goto LABEL_281;
    }
    sub_1AD3C2B88(a1 + 3072);
  }
  v180 = *(_OWORD *)(a2 + 3088);
  *(_OWORD *)(a1 + 3072) = *(_OWORD *)(a2 + 3072);
  *(_OWORD *)(a1 + 3088) = v180;
  *(_OWORD *)(a1 + 3104) = *(_OWORD *)(a2 + 3104);
  *(_OWORD *)(a1 + 3113) = *(_OWORD *)(a2 + 3113);
LABEL_281:
  if (*(_QWORD *)(a1 + 3136))
  {
    v181 = *(_QWORD *)(a2 + 3136);
    if (v181)
    {
      v182 = *(_QWORD *)(a2 + 3144);
      *(_QWORD *)(a1 + 3136) = v181;
      *(_QWORD *)(a1 + 3144) = v182;
      swift_release();
      *(_QWORD *)(a1 + 3152) = *(_QWORD *)(a2 + 3152);
      *(_QWORD *)(a1 + 3160) = *(_QWORD *)(a2 + 3160);
      swift_bridgeObjectRelease();
      goto LABEL_286;
    }
    sub_1AD3C2B58(a1 + 3136);
  }
  v183 = *(_OWORD *)(a2 + 3152);
  *(_OWORD *)(a1 + 3136) = *(_OWORD *)(a2 + 3136);
  *(_OWORD *)(a1 + 3152) = v183;
LABEL_286:
  if (*(_QWORD *)(a1 + 3168))
  {
    v184 = *(_QWORD *)(a2 + 3168);
    if (v184)
    {
      v185 = *(_QWORD *)(a2 + 3176);
      *(_QWORD *)(a1 + 3168) = v184;
      *(_QWORD *)(a1 + 3176) = v185;
      swift_release();
      *(_QWORD *)(a1 + 3184) = *(_QWORD *)(a2 + 3184);
      *(_QWORD *)(a1 + 3192) = *(_QWORD *)(a2 + 3192);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3200) = *(_OWORD *)(a2 + 3200);
      swift_release();
      *(_QWORD *)(a1 + 3216) = *(_QWORD *)(a2 + 3216);
      *(_BYTE *)(a1 + 3224) = *(_BYTE *)(a2 + 3224);
      goto LABEL_291;
    }
    sub_1AD3C2B88(a1 + 3168);
  }
  v186 = *(_OWORD *)(a2 + 3184);
  *(_OWORD *)(a1 + 3168) = *(_OWORD *)(a2 + 3168);
  *(_OWORD *)(a1 + 3184) = v186;
  *(_OWORD *)(a1 + 3200) = *(_OWORD *)(a2 + 3200);
  *(_OWORD *)(a1 + 3209) = *(_OWORD *)(a2 + 3209);
LABEL_291:
  if (*(_QWORD *)(a1 + 3232))
  {
    v187 = *(_QWORD *)(a2 + 3232);
    if (v187)
    {
      v188 = *(_QWORD *)(a2 + 3240);
      *(_QWORD *)(a1 + 3232) = v187;
      *(_QWORD *)(a1 + 3240) = v188;
      swift_release();
      *(_QWORD *)(a1 + 3248) = *(_QWORD *)(a2 + 3248);
      *(_QWORD *)(a1 + 3256) = *(_QWORD *)(a2 + 3256);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3264) = *(_OWORD *)(a2 + 3264);
      swift_release();
      *(_QWORD *)(a1 + 3280) = *(_QWORD *)(a2 + 3280);
      *(_BYTE *)(a1 + 3288) = *(_BYTE *)(a2 + 3288);
      goto LABEL_296;
    }
    sub_1AD3C2B88(a1 + 3232);
  }
  v189 = *(_OWORD *)(a2 + 3248);
  *(_OWORD *)(a1 + 3232) = *(_OWORD *)(a2 + 3232);
  *(_OWORD *)(a1 + 3248) = v189;
  *(_OWORD *)(a1 + 3264) = *(_OWORD *)(a2 + 3264);
  *(_OWORD *)(a1 + 3273) = *(_OWORD *)(a2 + 3273);
LABEL_296:
  if (*(_QWORD *)(a1 + 3296))
  {
    v190 = *(_QWORD *)(a2 + 3296);
    if (v190)
    {
      v191 = *(_QWORD *)(a2 + 3304);
      *(_QWORD *)(a1 + 3296) = v190;
      *(_QWORD *)(a1 + 3304) = v191;
      swift_release();
      *(_QWORD *)(a1 + 3312) = *(_QWORD *)(a2 + 3312);
      *(_QWORD *)(a1 + 3320) = *(_QWORD *)(a2 + 3320);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3328) = *(_OWORD *)(a2 + 3328);
      swift_release();
      *(_QWORD *)(a1 + 3344) = *(_QWORD *)(a2 + 3344);
      *(_BYTE *)(a1 + 3352) = *(_BYTE *)(a2 + 3352);
      goto LABEL_301;
    }
    sub_1AD3C2B88(a1 + 3296);
  }
  v192 = *(_OWORD *)(a2 + 3312);
  *(_OWORD *)(a1 + 3296) = *(_OWORD *)(a2 + 3296);
  *(_OWORD *)(a1 + 3312) = v192;
  *(_OWORD *)(a1 + 3328) = *(_OWORD *)(a2 + 3328);
  *(_OWORD *)(a1 + 3337) = *(_OWORD *)(a2 + 3337);
LABEL_301:
  if (*(_QWORD *)(a1 + 3360))
  {
    v193 = *(_QWORD *)(a2 + 3360);
    if (v193)
    {
      v194 = *(_QWORD *)(a2 + 3368);
      *(_QWORD *)(a1 + 3360) = v193;
      *(_QWORD *)(a1 + 3368) = v194;
      swift_release();
      *(_QWORD *)(a1 + 3376) = *(_QWORD *)(a2 + 3376);
      *(_QWORD *)(a1 + 3384) = *(_QWORD *)(a2 + 3384);
      swift_bridgeObjectRelease();
      goto LABEL_306;
    }
    sub_1AD3C2B58(a1 + 3360);
  }
  v195 = *(_OWORD *)(a2 + 3376);
  *(_OWORD *)(a1 + 3360) = *(_OWORD *)(a2 + 3360);
  *(_OWORD *)(a1 + 3376) = v195;
LABEL_306:
  if (*(_QWORD *)(a1 + 3392))
  {
    v196 = *(_QWORD *)(a2 + 3392);
    if (v196)
    {
      v197 = *(_QWORD *)(a2 + 3400);
      *(_QWORD *)(a1 + 3392) = v196;
      *(_QWORD *)(a1 + 3400) = v197;
      swift_release();
      *(_QWORD *)(a1 + 3408) = *(_QWORD *)(a2 + 3408);
      *(_QWORD *)(a1 + 3416) = *(_QWORD *)(a2 + 3416);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3424) = *(_OWORD *)(a2 + 3424);
      swift_release();
      *(_QWORD *)(a1 + 3440) = *(_QWORD *)(a2 + 3440);
      *(_BYTE *)(a1 + 3448) = *(_BYTE *)(a2 + 3448);
      goto LABEL_311;
    }
    sub_1AD3C2B88(a1 + 3392);
  }
  v198 = *(_OWORD *)(a2 + 3408);
  *(_OWORD *)(a1 + 3392) = *(_OWORD *)(a2 + 3392);
  *(_OWORD *)(a1 + 3408) = v198;
  *(_OWORD *)(a1 + 3424) = *(_OWORD *)(a2 + 3424);
  *(_OWORD *)(a1 + 3433) = *(_OWORD *)(a2 + 3433);
LABEL_311:
  if (*(_QWORD *)(a1 + 3456))
  {
    v199 = *(_QWORD *)(a2 + 3456);
    if (v199)
    {
      v200 = *(_QWORD *)(a2 + 3464);
      *(_QWORD *)(a1 + 3456) = v199;
      *(_QWORD *)(a1 + 3464) = v200;
      swift_release();
      *(_QWORD *)(a1 + 3472) = *(_QWORD *)(a2 + 3472);
      *(_QWORD *)(a1 + 3480) = *(_QWORD *)(a2 + 3480);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3488) = *(_OWORD *)(a2 + 3488);
      swift_release();
      *(_QWORD *)(a1 + 3504) = *(_QWORD *)(a2 + 3504);
      *(_BYTE *)(a1 + 3512) = *(_BYTE *)(a2 + 3512);
      goto LABEL_316;
    }
    sub_1AD3C2B88(a1 + 3456);
  }
  v201 = *(_OWORD *)(a2 + 3472);
  *(_OWORD *)(a1 + 3456) = *(_OWORD *)(a2 + 3456);
  *(_OWORD *)(a1 + 3472) = v201;
  *(_OWORD *)(a1 + 3488) = *(_OWORD *)(a2 + 3488);
  *(_OWORD *)(a1 + 3497) = *(_OWORD *)(a2 + 3497);
LABEL_316:
  if (*(_QWORD *)(a1 + 3520))
  {
    v202 = *(_QWORD *)(a2 + 3520);
    if (v202)
    {
      v203 = *(_QWORD *)(a2 + 3528);
      *(_QWORD *)(a1 + 3520) = v202;
      *(_QWORD *)(a1 + 3528) = v203;
      swift_release();
      *(_QWORD *)(a1 + 3536) = *(_QWORD *)(a2 + 3536);
      *(_QWORD *)(a1 + 3544) = *(_QWORD *)(a2 + 3544);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3552) = *(_OWORD *)(a2 + 3552);
      swift_release();
      *(_QWORD *)(a1 + 3568) = *(_QWORD *)(a2 + 3568);
      *(_BYTE *)(a1 + 3576) = *(_BYTE *)(a2 + 3576);
      goto LABEL_321;
    }
    sub_1AD3C2B88(a1 + 3520);
  }
  v204 = *(_OWORD *)(a2 + 3536);
  *(_OWORD *)(a1 + 3520) = *(_OWORD *)(a2 + 3520);
  *(_OWORD *)(a1 + 3536) = v204;
  *(_OWORD *)(a1 + 3552) = *(_OWORD *)(a2 + 3552);
  *(_OWORD *)(a1 + 3561) = *(_OWORD *)(a2 + 3561);
LABEL_321:
  if (*(_QWORD *)(a1 + 3584))
  {
    v205 = *(_QWORD *)(a2 + 3584);
    if (v205)
    {
      v206 = *(_QWORD *)(a2 + 3592);
      *(_QWORD *)(a1 + 3584) = v205;
      *(_QWORD *)(a1 + 3592) = v206;
      swift_release();
      *(_QWORD *)(a1 + 3600) = *(_QWORD *)(a2 + 3600);
      *(_QWORD *)(a1 + 3608) = *(_QWORD *)(a2 + 3608);
      swift_bridgeObjectRelease();
      goto LABEL_326;
    }
    sub_1AD3C2B58(a1 + 3584);
  }
  v207 = *(_OWORD *)(a2 + 3600);
  *(_OWORD *)(a1 + 3584) = *(_OWORD *)(a2 + 3584);
  *(_OWORD *)(a1 + 3600) = v207;
LABEL_326:
  if (*(_QWORD *)(a1 + 3616))
  {
    v208 = *(_QWORD *)(a2 + 3616);
    if (v208)
    {
      v209 = *(_QWORD *)(a2 + 3624);
      *(_QWORD *)(a1 + 3616) = v208;
      *(_QWORD *)(a1 + 3624) = v209;
      swift_release();
      *(_QWORD *)(a1 + 3632) = *(_QWORD *)(a2 + 3632);
      *(_QWORD *)(a1 + 3640) = *(_QWORD *)(a2 + 3640);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3648) = *(_OWORD *)(a2 + 3648);
      swift_release();
      *(_QWORD *)(a1 + 3664) = *(_QWORD *)(a2 + 3664);
      *(_BYTE *)(a1 + 3672) = *(_BYTE *)(a2 + 3672);
      goto LABEL_331;
    }
    sub_1AD3C2B88(a1 + 3616);
  }
  v210 = *(_OWORD *)(a2 + 3632);
  *(_OWORD *)(a1 + 3616) = *(_OWORD *)(a2 + 3616);
  *(_OWORD *)(a1 + 3632) = v210;
  *(_OWORD *)(a1 + 3648) = *(_OWORD *)(a2 + 3648);
  *(_OWORD *)(a1 + 3657) = *(_OWORD *)(a2 + 3657);
LABEL_331:
  if (*(_QWORD *)(a1 + 3680))
  {
    v211 = *(_QWORD *)(a2 + 3680);
    if (v211)
    {
      v212 = *(_QWORD *)(a2 + 3688);
      *(_QWORD *)(a1 + 3680) = v211;
      *(_QWORD *)(a1 + 3688) = v212;
      swift_release();
      *(_QWORD *)(a1 + 3696) = *(_QWORD *)(a2 + 3696);
      *(_QWORD *)(a1 + 3704) = *(_QWORD *)(a2 + 3704);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3712) = *(_OWORD *)(a2 + 3712);
      swift_release();
      *(_QWORD *)(a1 + 3728) = *(_QWORD *)(a2 + 3728);
      *(_BYTE *)(a1 + 3736) = *(_BYTE *)(a2 + 3736);
      goto LABEL_336;
    }
    sub_1AD3C2B88(a1 + 3680);
  }
  v213 = *(_OWORD *)(a2 + 3696);
  *(_OWORD *)(a1 + 3680) = *(_OWORD *)(a2 + 3680);
  *(_OWORD *)(a1 + 3696) = v213;
  *(_OWORD *)(a1 + 3712) = *(_OWORD *)(a2 + 3712);
  *(_OWORD *)(a1 + 3721) = *(_OWORD *)(a2 + 3721);
LABEL_336:
  if (*(_QWORD *)(a1 + 3744))
  {
    v214 = *(_QWORD *)(a2 + 3744);
    if (v214)
    {
      v215 = *(_QWORD *)(a2 + 3752);
      *(_QWORD *)(a1 + 3744) = v214;
      *(_QWORD *)(a1 + 3752) = v215;
      swift_release();
      *(_QWORD *)(a1 + 3760) = *(_QWORD *)(a2 + 3760);
      *(_QWORD *)(a1 + 3768) = *(_QWORD *)(a2 + 3768);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3776) = *(_OWORD *)(a2 + 3776);
      swift_release();
      *(_QWORD *)(a1 + 3792) = *(_QWORD *)(a2 + 3792);
      *(_BYTE *)(a1 + 3800) = *(_BYTE *)(a2 + 3800);
      goto LABEL_341;
    }
    sub_1AD3C2B88(a1 + 3744);
  }
  v216 = *(_OWORD *)(a2 + 3760);
  *(_OWORD *)(a1 + 3744) = *(_OWORD *)(a2 + 3744);
  *(_OWORD *)(a1 + 3760) = v216;
  *(_OWORD *)(a1 + 3776) = *(_OWORD *)(a2 + 3776);
  *(_OWORD *)(a1 + 3785) = *(_OWORD *)(a2 + 3785);
LABEL_341:
  if (*(_QWORD *)(a1 + 3808))
  {
    v217 = *(_QWORD *)(a2 + 3808);
    if (v217)
    {
      v218 = *(_QWORD *)(a2 + 3816);
      *(_QWORD *)(a1 + 3808) = v217;
      *(_QWORD *)(a1 + 3816) = v218;
      swift_release();
      *(_QWORD *)(a1 + 3824) = *(_QWORD *)(a2 + 3824);
      *(_QWORD *)(a1 + 3832) = *(_QWORD *)(a2 + 3832);
      swift_bridgeObjectRelease();
      goto LABEL_346;
    }
    sub_1AD3C2B58(a1 + 3808);
  }
  v219 = *(_OWORD *)(a2 + 3824);
  *(_OWORD *)(a1 + 3808) = *(_OWORD *)(a2 + 3808);
  *(_OWORD *)(a1 + 3824) = v219;
LABEL_346:
  if (*(_QWORD *)(a1 + 3840))
  {
    v220 = *(_QWORD *)(a2 + 3840);
    if (v220)
    {
      v221 = *(_QWORD *)(a2 + 3848);
      *(_QWORD *)(a1 + 3840) = v220;
      *(_QWORD *)(a1 + 3848) = v221;
      swift_release();
      *(_QWORD *)(a1 + 3856) = *(_QWORD *)(a2 + 3856);
      *(_QWORD *)(a1 + 3864) = *(_QWORD *)(a2 + 3864);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3872) = *(_OWORD *)(a2 + 3872);
      swift_release();
      *(_QWORD *)(a1 + 3888) = *(_QWORD *)(a2 + 3888);
      *(_BYTE *)(a1 + 3896) = *(_BYTE *)(a2 + 3896);
      goto LABEL_351;
    }
    sub_1AD3C2B88(a1 + 3840);
  }
  v222 = *(_OWORD *)(a2 + 3856);
  *(_OWORD *)(a1 + 3840) = *(_OWORD *)(a2 + 3840);
  *(_OWORD *)(a1 + 3856) = v222;
  *(_OWORD *)(a1 + 3872) = *(_OWORD *)(a2 + 3872);
  *(_OWORD *)(a1 + 3881) = *(_OWORD *)(a2 + 3881);
LABEL_351:
  if (*(_QWORD *)(a1 + 3904))
  {
    v223 = *(_QWORD *)(a2 + 3904);
    if (v223)
    {
      v224 = *(_QWORD *)(a2 + 3912);
      *(_QWORD *)(a1 + 3904) = v223;
      *(_QWORD *)(a1 + 3912) = v224;
      swift_release();
      *(_QWORD *)(a1 + 3920) = *(_QWORD *)(a2 + 3920);
      *(_QWORD *)(a1 + 3928) = *(_QWORD *)(a2 + 3928);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 3936) = *(_OWORD *)(a2 + 3936);
      swift_release();
      *(_QWORD *)(a1 + 3952) = *(_QWORD *)(a2 + 3952);
      *(_BYTE *)(a1 + 3960) = *(_BYTE *)(a2 + 3960);
      goto LABEL_356;
    }
    sub_1AD3C2B88(a1 + 3904);
  }
  v225 = *(_OWORD *)(a2 + 3920);
  *(_OWORD *)(a1 + 3904) = *(_OWORD *)(a2 + 3904);
  *(_OWORD *)(a1 + 3920) = v225;
  *(_OWORD *)(a1 + 3936) = *(_OWORD *)(a2 + 3936);
  *(_OWORD *)(a1 + 3945) = *(_OWORD *)(a2 + 3945);
LABEL_356:
  if (*(_QWORD *)(a1 + 3968))
  {
    v226 = *(_QWORD *)(a2 + 3968);
    if (v226)
    {
      v227 = *(_QWORD *)(a2 + 3976);
      *(_QWORD *)(a1 + 3968) = v226;
      *(_QWORD *)(a1 + 3976) = v227;
      swift_release();
      *(_QWORD *)(a1 + 3984) = *(_QWORD *)(a2 + 3984);
      *(_QWORD *)(a1 + 3992) = *(_QWORD *)(a2 + 3992);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4000) = *(_OWORD *)(a2 + 4000);
      swift_release();
      *(_QWORD *)(a1 + 4016) = *(_QWORD *)(a2 + 4016);
      *(_BYTE *)(a1 + 4024) = *(_BYTE *)(a2 + 4024);
      goto LABEL_361;
    }
    sub_1AD3C2B88(a1 + 3968);
  }
  v228 = *(_OWORD *)(a2 + 3984);
  *(_OWORD *)(a1 + 3968) = *(_OWORD *)(a2 + 3968);
  *(_OWORD *)(a1 + 3984) = v228;
  *(_OWORD *)(a1 + 4000) = *(_OWORD *)(a2 + 4000);
  *(_OWORD *)(a1 + 4009) = *(_OWORD *)(a2 + 4009);
LABEL_361:
  if (*(_QWORD *)(a1 + 4032))
  {
    v229 = *(_QWORD *)(a2 + 4032);
    if (v229)
    {
      v230 = *(_QWORD *)(a2 + 4040);
      *(_QWORD *)(a1 + 4032) = v229;
      *(_QWORD *)(a1 + 4040) = v230;
      swift_release();
      *(_QWORD *)(a1 + 4048) = *(_QWORD *)(a2 + 4048);
      *(_QWORD *)(a1 + 4056) = *(_QWORD *)(a2 + 4056);
      swift_bridgeObjectRelease();
      goto LABEL_366;
    }
    sub_1AD3C2B58(a1 + 4032);
  }
  v231 = *(_OWORD *)(a2 + 4048);
  *(_OWORD *)(a1 + 4032) = *(_OWORD *)(a2 + 4032);
  *(_OWORD *)(a1 + 4048) = v231;
LABEL_366:
  if (*(_QWORD *)(a1 + 4064))
  {
    v232 = *(_QWORD *)(a2 + 4064);
    if (v232)
    {
      v233 = *(_QWORD *)(a2 + 4072);
      *(_QWORD *)(a1 + 4064) = v232;
      *(_QWORD *)(a1 + 4072) = v233;
      swift_release();
      *(_QWORD *)(a1 + 4080) = *(_QWORD *)(a2 + 4080);
      *(_QWORD *)(a1 + 4088) = *(_QWORD *)(a2 + 4088);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4096) = *(_OWORD *)(a2 + 4096);
      swift_release();
      *(_BYTE *)(a1 + 4120) = *(_BYTE *)(a2 + 4120);
      *(_QWORD *)(a1 + 4112) = *(_QWORD *)(a2 + 4112);
      goto LABEL_371;
    }
    sub_1AD3C2B88(a1 + 4064);
  }
  v234 = *(_OWORD *)(a2 + 4080);
  *(_OWORD *)(a1 + 4064) = *(_OWORD *)(a2 + 4064);
  *(_OWORD *)(a1 + 4080) = v234;
  *(_OWORD *)(a1 + 4096) = *(_OWORD *)(a2 + 4096);
  *(_OWORD *)(a1 + 4105) = *(_OWORD *)(a2 + 4105);
LABEL_371:
  if (*(_QWORD *)(a1 + 4128))
  {
    v235 = *(_QWORD *)(a2 + 4128);
    if (v235)
    {
      v236 = *(_QWORD *)(a2 + 4136);
      *(_QWORD *)(a1 + 4128) = v235;
      *(_QWORD *)(a1 + 4136) = v236;
      swift_release();
      *(_QWORD *)(a1 + 4144) = *(_QWORD *)(a2 + 4144);
      *(_QWORD *)(a1 + 4152) = *(_QWORD *)(a2 + 4152);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4160) = *(_OWORD *)(a2 + 4160);
      swift_release();
      *(_BYTE *)(a1 + 4184) = *(_BYTE *)(a2 + 4184);
      *(_QWORD *)(a1 + 4176) = *(_QWORD *)(a2 + 4176);
      goto LABEL_376;
    }
    sub_1AD3C2B88(a1 + 4128);
  }
  v237 = *(_OWORD *)(a2 + 4144);
  *(_OWORD *)(a1 + 4128) = *(_OWORD *)(a2 + 4128);
  *(_OWORD *)(a1 + 4144) = v237;
  *(_OWORD *)(a1 + 4160) = *(_OWORD *)(a2 + 4160);
  *(_OWORD *)(a1 + 4169) = *(_OWORD *)(a2 + 4169);
LABEL_376:
  if (*(_QWORD *)(a1 + 4192))
  {
    v238 = *(_QWORD *)(a2 + 4192);
    if (v238)
    {
      v239 = *(_QWORD *)(a2 + 4200);
      *(_QWORD *)(a1 + 4192) = v238;
      *(_QWORD *)(a1 + 4200) = v239;
      swift_release();
      *(_QWORD *)(a1 + 4208) = *(_QWORD *)(a2 + 4208);
      *(_QWORD *)(a1 + 4216) = *(_QWORD *)(a2 + 4216);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4224) = *(_OWORD *)(a2 + 4224);
      swift_release();
      *(_BYTE *)(a1 + 4248) = *(_BYTE *)(a2 + 4248);
      *(_QWORD *)(a1 + 4240) = *(_QWORD *)(a2 + 4240);
      goto LABEL_381;
    }
    sub_1AD3C2B88(a1 + 4192);
  }
  v240 = *(_OWORD *)(a2 + 4208);
  *(_OWORD *)(a1 + 4192) = *(_OWORD *)(a2 + 4192);
  *(_OWORD *)(a1 + 4208) = v240;
  *(_OWORD *)(a1 + 4224) = *(_OWORD *)(a2 + 4224);
  *(_OWORD *)(a1 + 4233) = *(_OWORD *)(a2 + 4233);
LABEL_381:
  if (*(_QWORD *)(a1 + 4256))
  {
    v241 = *(_QWORD *)(a2 + 4256);
    if (v241)
    {
      v242 = *(_QWORD *)(a2 + 4264);
      *(_QWORD *)(a1 + 4256) = v241;
      *(_QWORD *)(a1 + 4264) = v242;
      swift_release();
      *(_QWORD *)(a1 + 4272) = *(_QWORD *)(a2 + 4272);
      *(_QWORD *)(a1 + 4280) = *(_QWORD *)(a2 + 4280);
      swift_bridgeObjectRelease();
      goto LABEL_386;
    }
    sub_1AD3C2B58(a1 + 4256);
  }
  v243 = *(_OWORD *)(a2 + 4272);
  *(_OWORD *)(a1 + 4256) = *(_OWORD *)(a2 + 4256);
  *(_OWORD *)(a1 + 4272) = v243;
LABEL_386:
  if (*(_QWORD *)(a1 + 4288))
  {
    v244 = *(_QWORD *)(a2 + 4288);
    if (v244)
    {
      v245 = *(_QWORD *)(a2 + 4296);
      *(_QWORD *)(a1 + 4288) = v244;
      *(_QWORD *)(a1 + 4296) = v245;
      swift_release();
      *(_QWORD *)(a1 + 4304) = *(_QWORD *)(a2 + 4304);
      *(_QWORD *)(a1 + 4312) = *(_QWORD *)(a2 + 4312);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4320) = *(_OWORD *)(a2 + 4320);
      swift_release();
      *(_BYTE *)(a1 + 4344) = *(_BYTE *)(a2 + 4344);
      *(_QWORD *)(a1 + 4336) = *(_QWORD *)(a2 + 4336);
      goto LABEL_391;
    }
    sub_1AD3C2B88(a1 + 4288);
  }
  v246 = *(_OWORD *)(a2 + 4304);
  *(_OWORD *)(a1 + 4288) = *(_OWORD *)(a2 + 4288);
  *(_OWORD *)(a1 + 4304) = v246;
  *(_OWORD *)(a1 + 4320) = *(_OWORD *)(a2 + 4320);
  *(_OWORD *)(a1 + 4329) = *(_OWORD *)(a2 + 4329);
LABEL_391:
  if (*(_QWORD *)(a1 + 4352))
  {
    v247 = *(_QWORD *)(a2 + 4352);
    if (v247)
    {
      v248 = *(_QWORD *)(a2 + 4360);
      *(_QWORD *)(a1 + 4352) = v247;
      *(_QWORD *)(a1 + 4360) = v248;
      swift_release();
      *(_QWORD *)(a1 + 4368) = *(_QWORD *)(a2 + 4368);
      *(_QWORD *)(a1 + 4376) = *(_QWORD *)(a2 + 4376);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4384) = *(_OWORD *)(a2 + 4384);
      swift_release();
      *(_BYTE *)(a1 + 4408) = *(_BYTE *)(a2 + 4408);
      *(_QWORD *)(a1 + 4400) = *(_QWORD *)(a2 + 4400);
      goto LABEL_396;
    }
    sub_1AD3C2B88(a1 + 4352);
  }
  v249 = *(_OWORD *)(a2 + 4368);
  *(_OWORD *)(a1 + 4352) = *(_OWORD *)(a2 + 4352);
  *(_OWORD *)(a1 + 4368) = v249;
  *(_OWORD *)(a1 + 4384) = *(_OWORD *)(a2 + 4384);
  *(_OWORD *)(a1 + 4393) = *(_OWORD *)(a2 + 4393);
LABEL_396:
  if (*(_QWORD *)(a1 + 4416))
  {
    v250 = *(_QWORD *)(a2 + 4416);
    if (v250)
    {
      v251 = *(_QWORD *)(a2 + 4424);
      *(_QWORD *)(a1 + 4416) = v250;
      *(_QWORD *)(a1 + 4424) = v251;
      swift_release();
      *(_QWORD *)(a1 + 4432) = *(_QWORD *)(a2 + 4432);
      *(_QWORD *)(a1 + 4440) = *(_QWORD *)(a2 + 4440);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4448) = *(_OWORD *)(a2 + 4448);
      swift_release();
      *(_BYTE *)(a1 + 4472) = *(_BYTE *)(a2 + 4472);
      *(_QWORD *)(a1 + 4464) = *(_QWORD *)(a2 + 4464);
      goto LABEL_401;
    }
    sub_1AD3C2B88(a1 + 4416);
  }
  v252 = *(_OWORD *)(a2 + 4432);
  *(_OWORD *)(a1 + 4416) = *(_OWORD *)(a2 + 4416);
  *(_OWORD *)(a1 + 4432) = v252;
  *(_OWORD *)(a1 + 4448) = *(_OWORD *)(a2 + 4448);
  *(_OWORD *)(a1 + 4457) = *(_OWORD *)(a2 + 4457);
LABEL_401:
  if (*(_QWORD *)(a1 + 4480))
  {
    v253 = *(_QWORD *)(a2 + 4480);
    if (v253)
    {
      v254 = *(_QWORD *)(a2 + 4488);
      *(_QWORD *)(a1 + 4480) = v253;
      *(_QWORD *)(a1 + 4488) = v254;
      swift_release();
      *(_QWORD *)(a1 + 4496) = *(_QWORD *)(a2 + 4496);
      *(_QWORD *)(a1 + 4504) = *(_QWORD *)(a2 + 4504);
      swift_bridgeObjectRelease();
      goto LABEL_406;
    }
    sub_1AD3C2B58(a1 + 4480);
  }
  v255 = *(_OWORD *)(a2 + 4496);
  *(_OWORD *)(a1 + 4480) = *(_OWORD *)(a2 + 4480);
  *(_OWORD *)(a1 + 4496) = v255;
LABEL_406:
  if (*(_QWORD *)(a1 + 4512))
  {
    v256 = *(_QWORD *)(a2 + 4512);
    if (v256)
    {
      v257 = *(_QWORD *)(a2 + 4520);
      *(_QWORD *)(a1 + 4512) = v256;
      *(_QWORD *)(a1 + 4520) = v257;
      swift_release();
      *(_QWORD *)(a1 + 4528) = *(_QWORD *)(a2 + 4528);
      *(_QWORD *)(a1 + 4536) = *(_QWORD *)(a2 + 4536);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4544) = *(_OWORD *)(a2 + 4544);
      swift_release();
      *(_BYTE *)(a1 + 4568) = *(_BYTE *)(a2 + 4568);
      *(_QWORD *)(a1 + 4560) = *(_QWORD *)(a2 + 4560);
      goto LABEL_411;
    }
    sub_1AD3C2B88(a1 + 4512);
  }
  v258 = *(_OWORD *)(a2 + 4528);
  *(_OWORD *)(a1 + 4512) = *(_OWORD *)(a2 + 4512);
  *(_OWORD *)(a1 + 4528) = v258;
  *(_OWORD *)(a1 + 4544) = *(_OWORD *)(a2 + 4544);
  *(_OWORD *)(a1 + 4553) = *(_OWORD *)(a2 + 4553);
LABEL_411:
  if (*(_QWORD *)(a1 + 4576))
  {
    v259 = *(_QWORD *)(a2 + 4576);
    if (v259)
    {
      v260 = *(_QWORD *)(a2 + 4584);
      *(_QWORD *)(a1 + 4576) = v259;
      *(_QWORD *)(a1 + 4584) = v260;
      swift_release();
      *(_QWORD *)(a1 + 4592) = *(_QWORD *)(a2 + 4592);
      *(_QWORD *)(a1 + 4600) = *(_QWORD *)(a2 + 4600);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4608) = *(_OWORD *)(a2 + 4608);
      swift_release();
      *(_BYTE *)(a1 + 4632) = *(_BYTE *)(a2 + 4632);
      *(_QWORD *)(a1 + 4624) = *(_QWORD *)(a2 + 4624);
      goto LABEL_416;
    }
    sub_1AD3C2B88(a1 + 4576);
  }
  v261 = *(_OWORD *)(a2 + 4592);
  *(_OWORD *)(a1 + 4576) = *(_OWORD *)(a2 + 4576);
  *(_OWORD *)(a1 + 4592) = v261;
  *(_OWORD *)(a1 + 4608) = *(_OWORD *)(a2 + 4608);
  *(_OWORD *)(a1 + 4617) = *(_OWORD *)(a2 + 4617);
LABEL_416:
  if (*(_QWORD *)(a1 + 4640))
  {
    v262 = *(_QWORD *)(a2 + 4640);
    if (v262)
    {
      v263 = *(_QWORD *)(a2 + 4648);
      *(_QWORD *)(a1 + 4640) = v262;
      *(_QWORD *)(a1 + 4648) = v263;
      swift_release();
      *(_QWORD *)(a1 + 4656) = *(_QWORD *)(a2 + 4656);
      *(_QWORD *)(a1 + 4664) = *(_QWORD *)(a2 + 4664);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4672) = *(_OWORD *)(a2 + 4672);
      swift_release();
      *(_BYTE *)(a1 + 4696) = *(_BYTE *)(a2 + 4696);
      *(_QWORD *)(a1 + 4688) = *(_QWORD *)(a2 + 4688);
      goto LABEL_421;
    }
    sub_1AD3C2B88(a1 + 4640);
  }
  v264 = *(_OWORD *)(a2 + 4656);
  *(_OWORD *)(a1 + 4640) = *(_OWORD *)(a2 + 4640);
  *(_OWORD *)(a1 + 4656) = v264;
  *(_OWORD *)(a1 + 4672) = *(_OWORD *)(a2 + 4672);
  *(_OWORD *)(a1 + 4681) = *(_OWORD *)(a2 + 4681);
LABEL_421:
  if (*(_QWORD *)(a1 + 4704))
  {
    v265 = *(_QWORD *)(a2 + 4704);
    if (v265)
    {
      v266 = *(_QWORD *)(a2 + 4712);
      *(_QWORD *)(a1 + 4704) = v265;
      *(_QWORD *)(a1 + 4712) = v266;
      swift_release();
      *(_QWORD *)(a1 + 4720) = *(_QWORD *)(a2 + 4720);
      *(_QWORD *)(a1 + 4728) = *(_QWORD *)(a2 + 4728);
      swift_bridgeObjectRelease();
      goto LABEL_426;
    }
    sub_1AD3C2B58(a1 + 4704);
  }
  v267 = *(_OWORD *)(a2 + 4720);
  *(_OWORD *)(a1 + 4704) = *(_OWORD *)(a2 + 4704);
  *(_OWORD *)(a1 + 4720) = v267;
LABEL_426:
  if (*(_QWORD *)(a1 + 4736))
  {
    v268 = *(_QWORD *)(a2 + 4736);
    if (v268)
    {
      v269 = *(_QWORD *)(a2 + 4744);
      *(_QWORD *)(a1 + 4736) = v268;
      *(_QWORD *)(a1 + 4744) = v269;
      swift_release();
      *(_QWORD *)(a1 + 4752) = *(_QWORD *)(a2 + 4752);
      *(_QWORD *)(a1 + 4760) = *(_QWORD *)(a2 + 4760);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4768) = *(_OWORD *)(a2 + 4768);
      swift_release();
      *(_BYTE *)(a1 + 4792) = *(_BYTE *)(a2 + 4792);
      *(_QWORD *)(a1 + 4784) = *(_QWORD *)(a2 + 4784);
      goto LABEL_431;
    }
    sub_1AD3C2B88(a1 + 4736);
  }
  v270 = *(_OWORD *)(a2 + 4752);
  *(_OWORD *)(a1 + 4736) = *(_OWORD *)(a2 + 4736);
  *(_OWORD *)(a1 + 4752) = v270;
  *(_OWORD *)(a1 + 4768) = *(_OWORD *)(a2 + 4768);
  *(_OWORD *)(a1 + 4777) = *(_OWORD *)(a2 + 4777);
LABEL_431:
  if (*(_QWORD *)(a1 + 4800))
  {
    v271 = *(_QWORD *)(a2 + 4800);
    if (v271)
    {
      v272 = *(_QWORD *)(a2 + 4808);
      *(_QWORD *)(a1 + 4800) = v271;
      *(_QWORD *)(a1 + 4808) = v272;
      swift_release();
      *(_QWORD *)(a1 + 4816) = *(_QWORD *)(a2 + 4816);
      *(_QWORD *)(a1 + 4824) = *(_QWORD *)(a2 + 4824);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4832) = *(_OWORD *)(a2 + 4832);
      swift_release();
      *(_BYTE *)(a1 + 4856) = *(_BYTE *)(a2 + 4856);
      *(_QWORD *)(a1 + 4848) = *(_QWORD *)(a2 + 4848);
      goto LABEL_436;
    }
    sub_1AD3C2B88(a1 + 4800);
  }
  v273 = *(_OWORD *)(a2 + 4816);
  *(_OWORD *)(a1 + 4800) = *(_OWORD *)(a2 + 4800);
  *(_OWORD *)(a1 + 4816) = v273;
  *(_OWORD *)(a1 + 4832) = *(_OWORD *)(a2 + 4832);
  *(_OWORD *)(a1 + 4841) = *(_OWORD *)(a2 + 4841);
LABEL_436:
  if (*(_QWORD *)(a1 + 4864))
  {
    v274 = *(_QWORD *)(a2 + 4864);
    if (v274)
    {
      v275 = *(_QWORD *)(a2 + 4872);
      *(_QWORD *)(a1 + 4864) = v274;
      *(_QWORD *)(a1 + 4872) = v275;
      swift_release();
      *(_QWORD *)(a1 + 4880) = *(_QWORD *)(a2 + 4880);
      *(_QWORD *)(a1 + 4888) = *(_QWORD *)(a2 + 4888);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4896) = *(_OWORD *)(a2 + 4896);
      swift_release();
      *(_BYTE *)(a1 + 4920) = *(_BYTE *)(a2 + 4920);
      *(_QWORD *)(a1 + 4912) = *(_QWORD *)(a2 + 4912);
      goto LABEL_441;
    }
    sub_1AD3C2B88(a1 + 4864);
  }
  v276 = *(_OWORD *)(a2 + 4880);
  *(_OWORD *)(a1 + 4864) = *(_OWORD *)(a2 + 4864);
  *(_OWORD *)(a1 + 4880) = v276;
  *(_OWORD *)(a1 + 4896) = *(_OWORD *)(a2 + 4896);
  *(_OWORD *)(a1 + 4905) = *(_OWORD *)(a2 + 4905);
LABEL_441:
  if (*(_QWORD *)(a1 + 4928))
  {
    v277 = *(_QWORD *)(a2 + 4928);
    if (v277)
    {
      v278 = *(_QWORD *)(a2 + 4936);
      *(_QWORD *)(a1 + 4928) = v277;
      *(_QWORD *)(a1 + 4936) = v278;
      swift_release();
      *(_QWORD *)(a1 + 4944) = *(_QWORD *)(a2 + 4944);
      *(_QWORD *)(a1 + 4952) = *(_QWORD *)(a2 + 4952);
      swift_bridgeObjectRelease();
      goto LABEL_446;
    }
    sub_1AD3C2B58(a1 + 4928);
  }
  v279 = *(_OWORD *)(a2 + 4944);
  *(_OWORD *)(a1 + 4928) = *(_OWORD *)(a2 + 4928);
  *(_OWORD *)(a1 + 4944) = v279;
LABEL_446:
  if (*(_QWORD *)(a1 + 4960))
  {
    v280 = *(_QWORD *)(a2 + 4960);
    if (v280)
    {
      v281 = *(_QWORD *)(a2 + 4968);
      *(_QWORD *)(a1 + 4960) = v280;
      *(_QWORD *)(a1 + 4968) = v281;
      swift_release();
      *(_QWORD *)(a1 + 4976) = *(_QWORD *)(a2 + 4976);
      *(_QWORD *)(a1 + 4984) = *(_QWORD *)(a2 + 4984);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 4992) = *(_OWORD *)(a2 + 4992);
      swift_release();
      *(_BYTE *)(a1 + 5016) = *(_BYTE *)(a2 + 5016);
      *(_QWORD *)(a1 + 5008) = *(_QWORD *)(a2 + 5008);
      goto LABEL_451;
    }
    sub_1AD3C2B88(a1 + 4960);
  }
  v282 = *(_OWORD *)(a2 + 4976);
  *(_OWORD *)(a1 + 4960) = *(_OWORD *)(a2 + 4960);
  *(_OWORD *)(a1 + 4976) = v282;
  *(_OWORD *)(a1 + 4992) = *(_OWORD *)(a2 + 4992);
  *(_OWORD *)(a1 + 5001) = *(_OWORD *)(a2 + 5001);
LABEL_451:
  if (*(_QWORD *)(a1 + 5024))
  {
    v283 = *(_QWORD *)(a2 + 5024);
    if (v283)
    {
      v284 = *(_QWORD *)(a2 + 5032);
      *(_QWORD *)(a1 + 5024) = v283;
      *(_QWORD *)(a1 + 5032) = v284;
      swift_release();
      *(_QWORD *)(a1 + 5040) = *(_QWORD *)(a2 + 5040);
      *(_QWORD *)(a1 + 5048) = *(_QWORD *)(a2 + 5048);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5056) = *(_OWORD *)(a2 + 5056);
      swift_release();
      *(_BYTE *)(a1 + 5080) = *(_BYTE *)(a2 + 5080);
      *(_QWORD *)(a1 + 5072) = *(_QWORD *)(a2 + 5072);
      goto LABEL_456;
    }
    sub_1AD3C2B88(a1 + 5024);
  }
  v285 = *(_OWORD *)(a2 + 5040);
  *(_OWORD *)(a1 + 5024) = *(_OWORD *)(a2 + 5024);
  *(_OWORD *)(a1 + 5040) = v285;
  *(_OWORD *)(a1 + 5056) = *(_OWORD *)(a2 + 5056);
  *(_OWORD *)(a1 + 5065) = *(_OWORD *)(a2 + 5065);
LABEL_456:
  if (*(_QWORD *)(a1 + 5088))
  {
    v286 = *(_QWORD *)(a2 + 5088);
    if (v286)
    {
      v287 = *(_QWORD *)(a2 + 5096);
      *(_QWORD *)(a1 + 5088) = v286;
      *(_QWORD *)(a1 + 5096) = v287;
      swift_release();
      *(_QWORD *)(a1 + 5104) = *(_QWORD *)(a2 + 5104);
      *(_QWORD *)(a1 + 5112) = *(_QWORD *)(a2 + 5112);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5120) = *(_OWORD *)(a2 + 5120);
      swift_release();
      *(_BYTE *)(a1 + 5144) = *(_BYTE *)(a2 + 5144);
      *(_QWORD *)(a1 + 5136) = *(_QWORD *)(a2 + 5136);
      goto LABEL_461;
    }
    sub_1AD3C2B88(a1 + 5088);
  }
  v288 = *(_OWORD *)(a2 + 5104);
  *(_OWORD *)(a1 + 5088) = *(_OWORD *)(a2 + 5088);
  *(_OWORD *)(a1 + 5104) = v288;
  *(_OWORD *)(a1 + 5120) = *(_OWORD *)(a2 + 5120);
  *(_OWORD *)(a1 + 5129) = *(_OWORD *)(a2 + 5129);
LABEL_461:
  if (*(_QWORD *)(a1 + 5152))
  {
    v289 = *(_QWORD *)(a2 + 5152);
    if (v289)
    {
      v290 = *(_QWORD *)(a2 + 5160);
      *(_QWORD *)(a1 + 5152) = v289;
      *(_QWORD *)(a1 + 5160) = v290;
      swift_release();
      *(_QWORD *)(a1 + 5168) = *(_QWORD *)(a2 + 5168);
      *(_QWORD *)(a1 + 5176) = *(_QWORD *)(a2 + 5176);
      swift_bridgeObjectRelease();
      goto LABEL_466;
    }
    sub_1AD3C2B58(a1 + 5152);
  }
  v291 = *(_OWORD *)(a2 + 5168);
  *(_OWORD *)(a1 + 5152) = *(_OWORD *)(a2 + 5152);
  *(_OWORD *)(a1 + 5168) = v291;
LABEL_466:
  if (*(_QWORD *)(a1 + 5184))
  {
    v292 = *(_QWORD *)(a2 + 5184);
    if (v292)
    {
      v293 = *(_QWORD *)(a2 + 5192);
      *(_QWORD *)(a1 + 5184) = v292;
      *(_QWORD *)(a1 + 5192) = v293;
      swift_release();
      *(_QWORD *)(a1 + 5200) = *(_QWORD *)(a2 + 5200);
      *(_QWORD *)(a1 + 5208) = *(_QWORD *)(a2 + 5208);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5216) = *(_OWORD *)(a2 + 5216);
      swift_release();
      *(_BYTE *)(a1 + 5240) = *(_BYTE *)(a2 + 5240);
      *(_QWORD *)(a1 + 5232) = *(_QWORD *)(a2 + 5232);
      goto LABEL_471;
    }
    sub_1AD3C2B88(a1 + 5184);
  }
  v294 = *(_OWORD *)(a2 + 5200);
  *(_OWORD *)(a1 + 5184) = *(_OWORD *)(a2 + 5184);
  *(_OWORD *)(a1 + 5200) = v294;
  *(_OWORD *)(a1 + 5216) = *(_OWORD *)(a2 + 5216);
  *(_OWORD *)(a1 + 5225) = *(_OWORD *)(a2 + 5225);
LABEL_471:
  if (*(_QWORD *)(a1 + 5248))
  {
    v295 = *(_QWORD *)(a2 + 5248);
    if (v295)
    {
      v296 = *(_QWORD *)(a2 + 5256);
      *(_QWORD *)(a1 + 5248) = v295;
      *(_QWORD *)(a1 + 5256) = v296;
      swift_release();
      *(_QWORD *)(a1 + 5264) = *(_QWORD *)(a2 + 5264);
      *(_QWORD *)(a1 + 5272) = *(_QWORD *)(a2 + 5272);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5280) = *(_OWORD *)(a2 + 5280);
      swift_release();
      *(_BYTE *)(a1 + 5304) = *(_BYTE *)(a2 + 5304);
      *(_QWORD *)(a1 + 5296) = *(_QWORD *)(a2 + 5296);
      goto LABEL_476;
    }
    sub_1AD3C2B88(a1 + 5248);
  }
  v297 = *(_OWORD *)(a2 + 5264);
  *(_OWORD *)(a1 + 5248) = *(_OWORD *)(a2 + 5248);
  *(_OWORD *)(a1 + 5264) = v297;
  *(_OWORD *)(a1 + 5280) = *(_OWORD *)(a2 + 5280);
  *(_OWORD *)(a1 + 5289) = *(_OWORD *)(a2 + 5289);
LABEL_476:
  if (*(_QWORD *)(a1 + 5312))
  {
    v298 = *(_QWORD *)(a2 + 5312);
    if (v298)
    {
      v299 = *(_QWORD *)(a2 + 5320);
      *(_QWORD *)(a1 + 5312) = v298;
      *(_QWORD *)(a1 + 5320) = v299;
      swift_release();
      *(_QWORD *)(a1 + 5328) = *(_QWORD *)(a2 + 5328);
      *(_QWORD *)(a1 + 5336) = *(_QWORD *)(a2 + 5336);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5344) = *(_OWORD *)(a2 + 5344);
      swift_release();
      *(_BYTE *)(a1 + 5368) = *(_BYTE *)(a2 + 5368);
      *(_QWORD *)(a1 + 5360) = *(_QWORD *)(a2 + 5360);
      goto LABEL_481;
    }
    sub_1AD3C2B88(a1 + 5312);
  }
  v300 = *(_OWORD *)(a2 + 5328);
  *(_OWORD *)(a1 + 5312) = *(_OWORD *)(a2 + 5312);
  *(_OWORD *)(a1 + 5328) = v300;
  *(_OWORD *)(a1 + 5344) = *(_OWORD *)(a2 + 5344);
  *(_OWORD *)(a1 + 5353) = *(_OWORD *)(a2 + 5353);
LABEL_481:
  if (*(_QWORD *)(a1 + 5376))
  {
    v301 = *(_QWORD *)(a2 + 5376);
    if (v301)
    {
      v302 = *(_QWORD *)(a2 + 5384);
      *(_QWORD *)(a1 + 5376) = v301;
      *(_QWORD *)(a1 + 5384) = v302;
      swift_release();
      *(_QWORD *)(a1 + 5392) = *(_QWORD *)(a2 + 5392);
      *(_QWORD *)(a1 + 5400) = *(_QWORD *)(a2 + 5400);
      swift_bridgeObjectRelease();
      goto LABEL_486;
    }
    sub_1AD3C2B58(a1 + 5376);
  }
  v303 = *(_OWORD *)(a2 + 5392);
  *(_OWORD *)(a1 + 5376) = *(_OWORD *)(a2 + 5376);
  *(_OWORD *)(a1 + 5392) = v303;
LABEL_486:
  if (*(_QWORD *)(a1 + 5408))
  {
    v304 = *(_QWORD *)(a2 + 5408);
    if (v304)
    {
      v305 = *(_QWORD *)(a2 + 5416);
      *(_QWORD *)(a1 + 5408) = v304;
      *(_QWORD *)(a1 + 5416) = v305;
      swift_release();
      *(_QWORD *)(a1 + 5424) = *(_QWORD *)(a2 + 5424);
      *(_QWORD *)(a1 + 5432) = *(_QWORD *)(a2 + 5432);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5440) = *(_OWORD *)(a2 + 5440);
      swift_release();
      *(_BYTE *)(a1 + 5464) = *(_BYTE *)(a2 + 5464);
      *(_QWORD *)(a1 + 5456) = *(_QWORD *)(a2 + 5456);
      goto LABEL_491;
    }
    sub_1AD3C2B88(a1 + 5408);
  }
  v306 = *(_OWORD *)(a2 + 5424);
  *(_OWORD *)(a1 + 5408) = *(_OWORD *)(a2 + 5408);
  *(_OWORD *)(a1 + 5424) = v306;
  *(_OWORD *)(a1 + 5440) = *(_OWORD *)(a2 + 5440);
  *(_OWORD *)(a1 + 5449) = *(_OWORD *)(a2 + 5449);
LABEL_491:
  if (*(_QWORD *)(a1 + 5472))
  {
    v307 = *(_QWORD *)(a2 + 5472);
    if (v307)
    {
      v308 = *(_QWORD *)(a2 + 5480);
      *(_QWORD *)(a1 + 5472) = v307;
      *(_QWORD *)(a1 + 5480) = v308;
      swift_release();
      *(_QWORD *)(a1 + 5488) = *(_QWORD *)(a2 + 5488);
      *(_QWORD *)(a1 + 5496) = *(_QWORD *)(a2 + 5496);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5504) = *(_OWORD *)(a2 + 5504);
      swift_release();
      *(_BYTE *)(a1 + 5528) = *(_BYTE *)(a2 + 5528);
      *(_QWORD *)(a1 + 5520) = *(_QWORD *)(a2 + 5520);
      goto LABEL_496;
    }
    sub_1AD3C2B88(a1 + 5472);
  }
  v309 = *(_OWORD *)(a2 + 5488);
  *(_OWORD *)(a1 + 5472) = *(_OWORD *)(a2 + 5472);
  *(_OWORD *)(a1 + 5488) = v309;
  *(_OWORD *)(a1 + 5504) = *(_OWORD *)(a2 + 5504);
  *(_OWORD *)(a1 + 5513) = *(_OWORD *)(a2 + 5513);
LABEL_496:
  if (*(_QWORD *)(a1 + 5536))
  {
    v310 = *(_QWORD *)(a2 + 5536);
    if (v310)
    {
      v311 = *(_QWORD *)(a2 + 5544);
      *(_QWORD *)(a1 + 5536) = v310;
      *(_QWORD *)(a1 + 5544) = v311;
      swift_release();
      *(_QWORD *)(a1 + 5552) = *(_QWORD *)(a2 + 5552);
      *(_QWORD *)(a1 + 5560) = *(_QWORD *)(a2 + 5560);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5568) = *(_OWORD *)(a2 + 5568);
      swift_release();
      *(_BYTE *)(a1 + 5592) = *(_BYTE *)(a2 + 5592);
      *(_QWORD *)(a1 + 5584) = *(_QWORD *)(a2 + 5584);
      goto LABEL_501;
    }
    sub_1AD3C2B88(a1 + 5536);
  }
  v312 = *(_OWORD *)(a2 + 5552);
  *(_OWORD *)(a1 + 5536) = *(_OWORD *)(a2 + 5536);
  *(_OWORD *)(a1 + 5552) = v312;
  *(_OWORD *)(a1 + 5568) = *(_OWORD *)(a2 + 5568);
  *(_OWORD *)(a1 + 5577) = *(_OWORD *)(a2 + 5577);
LABEL_501:
  if (*(_QWORD *)(a1 + 5600))
  {
    v313 = *(_QWORD *)(a2 + 5600);
    if (v313)
    {
      v314 = *(_QWORD *)(a2 + 5608);
      *(_QWORD *)(a1 + 5600) = v313;
      *(_QWORD *)(a1 + 5608) = v314;
      swift_release();
      *(_QWORD *)(a1 + 5616) = *(_QWORD *)(a2 + 5616);
      *(_QWORD *)(a1 + 5624) = *(_QWORD *)(a2 + 5624);
      swift_bridgeObjectRelease();
      goto LABEL_506;
    }
    sub_1AD3C2B58(a1 + 5600);
  }
  v315 = *(_OWORD *)(a2 + 5616);
  *(_OWORD *)(a1 + 5600) = *(_OWORD *)(a2 + 5600);
  *(_OWORD *)(a1 + 5616) = v315;
LABEL_506:
  if (*(_QWORD *)(a1 + 5632))
  {
    v316 = *(_QWORD *)(a2 + 5632);
    if (v316)
    {
      v317 = *(_QWORD *)(a2 + 5640);
      *(_QWORD *)(a1 + 5632) = v316;
      *(_QWORD *)(a1 + 5640) = v317;
      swift_release();
      *(_QWORD *)(a1 + 5648) = *(_QWORD *)(a2 + 5648);
      *(_QWORD *)(a1 + 5656) = *(_QWORD *)(a2 + 5656);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5664) = *(_OWORD *)(a2 + 5664);
      swift_release();
      *(_BYTE *)(a1 + 5688) = *(_BYTE *)(a2 + 5688);
      *(_QWORD *)(a1 + 5680) = *(_QWORD *)(a2 + 5680);
      goto LABEL_511;
    }
    sub_1AD3C2B88(a1 + 5632);
  }
  v318 = *(_OWORD *)(a2 + 5648);
  *(_OWORD *)(a1 + 5632) = *(_OWORD *)(a2 + 5632);
  *(_OWORD *)(a1 + 5648) = v318;
  *(_OWORD *)(a1 + 5664) = *(_OWORD *)(a2 + 5664);
  *(_OWORD *)(a1 + 5673) = *(_OWORD *)(a2 + 5673);
LABEL_511:
  if (*(_QWORD *)(a1 + 5696))
  {
    v319 = *(_QWORD *)(a2 + 5696);
    if (v319)
    {
      v320 = *(_QWORD *)(a2 + 5704);
      *(_QWORD *)(a1 + 5696) = v319;
      *(_QWORD *)(a1 + 5704) = v320;
      swift_release();
      *(_QWORD *)(a1 + 5712) = *(_QWORD *)(a2 + 5712);
      *(_QWORD *)(a1 + 5720) = *(_QWORD *)(a2 + 5720);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5728) = *(_OWORD *)(a2 + 5728);
      swift_release();
      *(_BYTE *)(a1 + 5752) = *(_BYTE *)(a2 + 5752);
      *(_QWORD *)(a1 + 5744) = *(_QWORD *)(a2 + 5744);
      goto LABEL_516;
    }
    sub_1AD3C2B88(a1 + 5696);
  }
  v321 = *(_OWORD *)(a2 + 5712);
  *(_OWORD *)(a1 + 5696) = *(_OWORD *)(a2 + 5696);
  *(_OWORD *)(a1 + 5712) = v321;
  *(_OWORD *)(a1 + 5728) = *(_OWORD *)(a2 + 5728);
  *(_OWORD *)(a1 + 5737) = *(_OWORD *)(a2 + 5737);
LABEL_516:
  if (*(_QWORD *)(a1 + 5760))
  {
    v322 = *(_QWORD *)(a2 + 5760);
    if (v322)
    {
      v323 = *(_QWORD *)(a2 + 5768);
      *(_QWORD *)(a1 + 5760) = v322;
      *(_QWORD *)(a1 + 5768) = v323;
      swift_release();
      *(_QWORD *)(a1 + 5776) = *(_QWORD *)(a2 + 5776);
      *(_QWORD *)(a1 + 5784) = *(_QWORD *)(a2 + 5784);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5792) = *(_OWORD *)(a2 + 5792);
      swift_release();
      *(_BYTE *)(a1 + 5816) = *(_BYTE *)(a2 + 5816);
      *(_QWORD *)(a1 + 5808) = *(_QWORD *)(a2 + 5808);
      goto LABEL_521;
    }
    sub_1AD3C2B88(a1 + 5760);
  }
  v324 = *(_OWORD *)(a2 + 5776);
  *(_OWORD *)(a1 + 5760) = *(_OWORD *)(a2 + 5760);
  *(_OWORD *)(a1 + 5776) = v324;
  *(_OWORD *)(a1 + 5792) = *(_OWORD *)(a2 + 5792);
  *(_OWORD *)(a1 + 5801) = *(_OWORD *)(a2 + 5801);
LABEL_521:
  if (*(_QWORD *)(a1 + 5824))
  {
    v325 = *(_QWORD *)(a2 + 5824);
    if (v325)
    {
      v326 = *(_QWORD *)(a2 + 5832);
      *(_QWORD *)(a1 + 5824) = v325;
      *(_QWORD *)(a1 + 5832) = v326;
      swift_release();
      *(_QWORD *)(a1 + 5840) = *(_QWORD *)(a2 + 5840);
      *(_QWORD *)(a1 + 5848) = *(_QWORD *)(a2 + 5848);
      swift_bridgeObjectRelease();
      goto LABEL_526;
    }
    sub_1AD3C2B58(a1 + 5824);
  }
  v327 = *(_OWORD *)(a2 + 5840);
  *(_OWORD *)(a1 + 5824) = *(_OWORD *)(a2 + 5824);
  *(_OWORD *)(a1 + 5840) = v327;
LABEL_526:
  if (*(_QWORD *)(a1 + 5856))
  {
    v328 = *(_QWORD *)(a2 + 5856);
    if (v328)
    {
      v329 = *(_QWORD *)(a2 + 5864);
      *(_QWORD *)(a1 + 5856) = v328;
      *(_QWORD *)(a1 + 5864) = v329;
      swift_release();
      *(_QWORD *)(a1 + 5872) = *(_QWORD *)(a2 + 5872);
      *(_QWORD *)(a1 + 5880) = *(_QWORD *)(a2 + 5880);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5888) = *(_OWORD *)(a2 + 5888);
      swift_release();
      *(_BYTE *)(a1 + 5912) = *(_BYTE *)(a2 + 5912);
      *(_QWORD *)(a1 + 5904) = *(_QWORD *)(a2 + 5904);
      goto LABEL_531;
    }
    sub_1AD3C2B88(a1 + 5856);
  }
  v330 = *(_OWORD *)(a2 + 5872);
  *(_OWORD *)(a1 + 5856) = *(_OWORD *)(a2 + 5856);
  *(_OWORD *)(a1 + 5872) = v330;
  *(_OWORD *)(a1 + 5888) = *(_OWORD *)(a2 + 5888);
  *(_OWORD *)(a1 + 5897) = *(_OWORD *)(a2 + 5897);
LABEL_531:
  if (*(_QWORD *)(a1 + 5920))
  {
    v331 = *(_QWORD *)(a2 + 5920);
    if (v331)
    {
      v332 = *(_QWORD *)(a2 + 5928);
      *(_QWORD *)(a1 + 5920) = v331;
      *(_QWORD *)(a1 + 5928) = v332;
      swift_release();
      *(_QWORD *)(a1 + 5936) = *(_QWORD *)(a2 + 5936);
      *(_QWORD *)(a1 + 5944) = *(_QWORD *)(a2 + 5944);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 5952) = *(_OWORD *)(a2 + 5952);
      swift_release();
      *(_BYTE *)(a1 + 5976) = *(_BYTE *)(a2 + 5976);
      *(_QWORD *)(a1 + 5968) = *(_QWORD *)(a2 + 5968);
      goto LABEL_536;
    }
    sub_1AD3C2B88(a1 + 5920);
  }
  v333 = *(_OWORD *)(a2 + 5936);
  *(_OWORD *)(a1 + 5920) = *(_OWORD *)(a2 + 5920);
  *(_OWORD *)(a1 + 5936) = v333;
  *(_OWORD *)(a1 + 5952) = *(_OWORD *)(a2 + 5952);
  *(_OWORD *)(a1 + 5961) = *(_OWORD *)(a2 + 5961);
LABEL_536:
  if (*(_QWORD *)(a1 + 5984))
  {
    v334 = *(_QWORD *)(a2 + 5984);
    if (v334)
    {
      v335 = *(_QWORD *)(a2 + 5992);
      *(_QWORD *)(a1 + 5984) = v334;
      *(_QWORD *)(a1 + 5992) = v335;
      swift_release();
      *(_QWORD *)(a1 + 6000) = *(_QWORD *)(a2 + 6000);
      *(_QWORD *)(a1 + 6008) = *(_QWORD *)(a2 + 6008);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6016) = *(_OWORD *)(a2 + 6016);
      swift_release();
      *(_BYTE *)(a1 + 6040) = *(_BYTE *)(a2 + 6040);
      *(_QWORD *)(a1 + 6032) = *(_QWORD *)(a2 + 6032);
      goto LABEL_541;
    }
    sub_1AD3C2B88(a1 + 5984);
  }
  v336 = *(_OWORD *)(a2 + 6000);
  *(_OWORD *)(a1 + 5984) = *(_OWORD *)(a2 + 5984);
  *(_OWORD *)(a1 + 6000) = v336;
  *(_OWORD *)(a1 + 6016) = *(_OWORD *)(a2 + 6016);
  *(_OWORD *)(a1 + 6025) = *(_OWORD *)(a2 + 6025);
LABEL_541:
  if (*(_QWORD *)(a1 + 6048))
  {
    v337 = *(_QWORD *)(a2 + 6048);
    if (v337)
    {
      v338 = *(_QWORD *)(a2 + 6056);
      *(_QWORD *)(a1 + 6048) = v337;
      *(_QWORD *)(a1 + 6056) = v338;
      swift_release();
      *(_QWORD *)(a1 + 6064) = *(_QWORD *)(a2 + 6064);
      *(_QWORD *)(a1 + 6072) = *(_QWORD *)(a2 + 6072);
      swift_bridgeObjectRelease();
      goto LABEL_546;
    }
    sub_1AD3C2B58(a1 + 6048);
  }
  v339 = *(_OWORD *)(a2 + 6064);
  *(_OWORD *)(a1 + 6048) = *(_OWORD *)(a2 + 6048);
  *(_OWORD *)(a1 + 6064) = v339;
LABEL_546:
  if (*(_QWORD *)(a1 + 6080))
  {
    v340 = *(_QWORD *)(a2 + 6080);
    if (v340)
    {
      v341 = *(_QWORD *)(a2 + 6088);
      *(_QWORD *)(a1 + 6080) = v340;
      *(_QWORD *)(a1 + 6088) = v341;
      swift_release();
      *(_QWORD *)(a1 + 6096) = *(_QWORD *)(a2 + 6096);
      *(_QWORD *)(a1 + 6104) = *(_QWORD *)(a2 + 6104);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6112) = *(_OWORD *)(a2 + 6112);
      swift_release();
      *(_BYTE *)(a1 + 6136) = *(_BYTE *)(a2 + 6136);
      *(_QWORD *)(a1 + 6128) = *(_QWORD *)(a2 + 6128);
      goto LABEL_551;
    }
    sub_1AD3C2B88(a1 + 6080);
  }
  v342 = *(_OWORD *)(a2 + 6096);
  *(_OWORD *)(a1 + 6080) = *(_OWORD *)(a2 + 6080);
  *(_OWORD *)(a1 + 6096) = v342;
  *(_OWORD *)(a1 + 6112) = *(_OWORD *)(a2 + 6112);
  *(_OWORD *)(a1 + 6121) = *(_OWORD *)(a2 + 6121);
LABEL_551:
  if (*(_QWORD *)(a1 + 6144))
  {
    v343 = *(_QWORD *)(a2 + 6144);
    if (v343)
    {
      v344 = *(_QWORD *)(a2 + 6152);
      *(_QWORD *)(a1 + 6144) = v343;
      *(_QWORD *)(a1 + 6152) = v344;
      swift_release();
      *(_QWORD *)(a1 + 6160) = *(_QWORD *)(a2 + 6160);
      *(_QWORD *)(a1 + 6168) = *(_QWORD *)(a2 + 6168);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6176) = *(_OWORD *)(a2 + 6176);
      swift_release();
      *(_BYTE *)(a1 + 6200) = *(_BYTE *)(a2 + 6200);
      *(_QWORD *)(a1 + 6192) = *(_QWORD *)(a2 + 6192);
      goto LABEL_556;
    }
    sub_1AD3C2B88(a1 + 6144);
  }
  v345 = *(_OWORD *)(a2 + 6160);
  *(_OWORD *)(a1 + 6144) = *(_OWORD *)(a2 + 6144);
  *(_OWORD *)(a1 + 6160) = v345;
  *(_OWORD *)(a1 + 6176) = *(_OWORD *)(a2 + 6176);
  *(_OWORD *)(a1 + 6185) = *(_OWORD *)(a2 + 6185);
LABEL_556:
  if (*(_QWORD *)(a1 + 6208))
  {
    v346 = *(_QWORD *)(a2 + 6208);
    if (v346)
    {
      v347 = *(_QWORD *)(a2 + 6216);
      *(_QWORD *)(a1 + 6208) = v346;
      *(_QWORD *)(a1 + 6216) = v347;
      swift_release();
      *(_QWORD *)(a1 + 6224) = *(_QWORD *)(a2 + 6224);
      *(_QWORD *)(a1 + 6232) = *(_QWORD *)(a2 + 6232);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6240) = *(_OWORD *)(a2 + 6240);
      swift_release();
      *(_BYTE *)(a1 + 6264) = *(_BYTE *)(a2 + 6264);
      *(_QWORD *)(a1 + 6256) = *(_QWORD *)(a2 + 6256);
      goto LABEL_561;
    }
    sub_1AD3C2B88(a1 + 6208);
  }
  v348 = *(_OWORD *)(a2 + 6224);
  *(_OWORD *)(a1 + 6208) = *(_OWORD *)(a2 + 6208);
  *(_OWORD *)(a1 + 6224) = v348;
  *(_OWORD *)(a1 + 6240) = *(_OWORD *)(a2 + 6240);
  *(_OWORD *)(a1 + 6249) = *(_OWORD *)(a2 + 6249);
LABEL_561:
  if (*(_QWORD *)(a1 + 6272))
  {
    v349 = *(_QWORD *)(a2 + 6272);
    if (v349)
    {
      v350 = *(_QWORD *)(a2 + 6280);
      *(_QWORD *)(a1 + 6272) = v349;
      *(_QWORD *)(a1 + 6280) = v350;
      swift_release();
      *(_QWORD *)(a1 + 6288) = *(_QWORD *)(a2 + 6288);
      *(_QWORD *)(a1 + 6296) = *(_QWORD *)(a2 + 6296);
      swift_bridgeObjectRelease();
      goto LABEL_566;
    }
    sub_1AD3C2B58(a1 + 6272);
  }
  v351 = *(_OWORD *)(a2 + 6288);
  *(_OWORD *)(a1 + 6272) = *(_OWORD *)(a2 + 6272);
  *(_OWORD *)(a1 + 6288) = v351;
LABEL_566:
  if (*(_QWORD *)(a1 + 6304))
  {
    v352 = *(_QWORD *)(a2 + 6304);
    if (v352)
    {
      v353 = *(_QWORD *)(a2 + 6312);
      *(_QWORD *)(a1 + 6304) = v352;
      *(_QWORD *)(a1 + 6312) = v353;
      swift_release();
      *(_QWORD *)(a1 + 6320) = *(_QWORD *)(a2 + 6320);
      *(_QWORD *)(a1 + 6328) = *(_QWORD *)(a2 + 6328);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6336) = *(_OWORD *)(a2 + 6336);
      swift_release();
      *(_BYTE *)(a1 + 6360) = *(_BYTE *)(a2 + 6360);
      *(_QWORD *)(a1 + 6352) = *(_QWORD *)(a2 + 6352);
      goto LABEL_571;
    }
    sub_1AD3C2B88(a1 + 6304);
  }
  v354 = *(_OWORD *)(a2 + 6320);
  *(_OWORD *)(a1 + 6304) = *(_OWORD *)(a2 + 6304);
  *(_OWORD *)(a1 + 6320) = v354;
  *(_OWORD *)(a1 + 6336) = *(_OWORD *)(a2 + 6336);
  *(_OWORD *)(a1 + 6345) = *(_OWORD *)(a2 + 6345);
LABEL_571:
  if (*(_QWORD *)(a1 + 6368))
  {
    v355 = *(_QWORD *)(a2 + 6368);
    if (v355)
    {
      v356 = *(_QWORD *)(a2 + 6376);
      *(_QWORD *)(a1 + 6368) = v355;
      *(_QWORD *)(a1 + 6376) = v356;
      swift_release();
      *(_QWORD *)(a1 + 6384) = *(_QWORD *)(a2 + 6384);
      *(_QWORD *)(a1 + 6392) = *(_QWORD *)(a2 + 6392);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6400) = *(_OWORD *)(a2 + 6400);
      swift_release();
      *(_BYTE *)(a1 + 6424) = *(_BYTE *)(a2 + 6424);
      *(_QWORD *)(a1 + 6416) = *(_QWORD *)(a2 + 6416);
      goto LABEL_576;
    }
    sub_1AD3C2B88(a1 + 6368);
  }
  v357 = *(_OWORD *)(a2 + 6384);
  *(_OWORD *)(a1 + 6368) = *(_OWORD *)(a2 + 6368);
  *(_OWORD *)(a1 + 6384) = v357;
  *(_OWORD *)(a1 + 6400) = *(_OWORD *)(a2 + 6400);
  *(_OWORD *)(a1 + 6409) = *(_OWORD *)(a2 + 6409);
LABEL_576:
  if (*(_QWORD *)(a1 + 6432))
  {
    v358 = *(_QWORD *)(a2 + 6432);
    if (v358)
    {
      v359 = *(_QWORD *)(a2 + 6440);
      *(_QWORD *)(a1 + 6432) = v358;
      *(_QWORD *)(a1 + 6440) = v359;
      swift_release();
      *(_QWORD *)(a1 + 6448) = *(_QWORD *)(a2 + 6448);
      *(_QWORD *)(a1 + 6456) = *(_QWORD *)(a2 + 6456);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6464) = *(_OWORD *)(a2 + 6464);
      swift_release();
      *(_BYTE *)(a1 + 6488) = *(_BYTE *)(a2 + 6488);
      *(_QWORD *)(a1 + 6480) = *(_QWORD *)(a2 + 6480);
      goto LABEL_581;
    }
    sub_1AD3C2B88(a1 + 6432);
  }
  v360 = *(_OWORD *)(a2 + 6448);
  *(_OWORD *)(a1 + 6432) = *(_OWORD *)(a2 + 6432);
  *(_OWORD *)(a1 + 6448) = v360;
  *(_OWORD *)(a1 + 6464) = *(_OWORD *)(a2 + 6464);
  *(_OWORD *)(a1 + 6473) = *(_OWORD *)(a2 + 6473);
LABEL_581:
  if (*(_QWORD *)(a1 + 6496))
  {
    v361 = *(_QWORD *)(a2 + 6496);
    if (v361)
    {
      v362 = *(_QWORD *)(a2 + 6504);
      *(_QWORD *)(a1 + 6496) = v361;
      *(_QWORD *)(a1 + 6504) = v362;
      swift_release();
      *(_QWORD *)(a1 + 6512) = *(_QWORD *)(a2 + 6512);
      *(_QWORD *)(a1 + 6520) = *(_QWORD *)(a2 + 6520);
      swift_bridgeObjectRelease();
      goto LABEL_586;
    }
    sub_1AD3C2B58(a1 + 6496);
  }
  v363 = *(_OWORD *)(a2 + 6512);
  *(_OWORD *)(a1 + 6496) = *(_OWORD *)(a2 + 6496);
  *(_OWORD *)(a1 + 6512) = v363;
LABEL_586:
  if (*(_QWORD *)(a1 + 6528))
  {
    v364 = *(_QWORD *)(a2 + 6528);
    if (v364)
    {
      v365 = *(_QWORD *)(a2 + 6536);
      *(_QWORD *)(a1 + 6528) = v364;
      *(_QWORD *)(a1 + 6536) = v365;
      swift_release();
      *(_QWORD *)(a1 + 6544) = *(_QWORD *)(a2 + 6544);
      *(_QWORD *)(a1 + 6552) = *(_QWORD *)(a2 + 6552);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6560) = *(_OWORD *)(a2 + 6560);
      swift_release();
      *(_BYTE *)(a1 + 6584) = *(_BYTE *)(a2 + 6584);
      *(_QWORD *)(a1 + 6576) = *(_QWORD *)(a2 + 6576);
      goto LABEL_591;
    }
    sub_1AD3C2B88(a1 + 6528);
  }
  v366 = *(_OWORD *)(a2 + 6544);
  *(_OWORD *)(a1 + 6528) = *(_OWORD *)(a2 + 6528);
  *(_OWORD *)(a1 + 6544) = v366;
  *(_OWORD *)(a1 + 6560) = *(_OWORD *)(a2 + 6560);
  *(_OWORD *)(a1 + 6569) = *(_OWORD *)(a2 + 6569);
LABEL_591:
  if (*(_QWORD *)(a1 + 6592))
  {
    v367 = *(_QWORD *)(a2 + 6592);
    if (v367)
    {
      v368 = *(_QWORD *)(a2 + 6600);
      *(_QWORD *)(a1 + 6592) = v367;
      *(_QWORD *)(a1 + 6600) = v368;
      swift_release();
      *(_QWORD *)(a1 + 6608) = *(_QWORD *)(a2 + 6608);
      *(_QWORD *)(a1 + 6616) = *(_QWORD *)(a2 + 6616);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6624) = *(_OWORD *)(a2 + 6624);
      swift_release();
      *(_BYTE *)(a1 + 6648) = *(_BYTE *)(a2 + 6648);
      *(_QWORD *)(a1 + 6640) = *(_QWORD *)(a2 + 6640);
      goto LABEL_596;
    }
    sub_1AD3C2B88(a1 + 6592);
  }
  v369 = *(_OWORD *)(a2 + 6608);
  *(_OWORD *)(a1 + 6592) = *(_OWORD *)(a2 + 6592);
  *(_OWORD *)(a1 + 6608) = v369;
  *(_OWORD *)(a1 + 6624) = *(_OWORD *)(a2 + 6624);
  *(_OWORD *)(a1 + 6633) = *(_OWORD *)(a2 + 6633);
LABEL_596:
  if (*(_QWORD *)(a1 + 6656))
  {
    v370 = *(_QWORD *)(a2 + 6656);
    if (v370)
    {
      v371 = *(_QWORD *)(a2 + 6664);
      *(_QWORD *)(a1 + 6656) = v370;
      *(_QWORD *)(a1 + 6664) = v371;
      swift_release();
      *(_QWORD *)(a1 + 6672) = *(_QWORD *)(a2 + 6672);
      *(_QWORD *)(a1 + 6680) = *(_QWORD *)(a2 + 6680);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6688) = *(_OWORD *)(a2 + 6688);
      swift_release();
      *(_BYTE *)(a1 + 6712) = *(_BYTE *)(a2 + 6712);
      *(_QWORD *)(a1 + 6704) = *(_QWORD *)(a2 + 6704);
      goto LABEL_601;
    }
    sub_1AD3C2B88(a1 + 6656);
  }
  v372 = *(_OWORD *)(a2 + 6672);
  *(_OWORD *)(a1 + 6656) = *(_OWORD *)(a2 + 6656);
  *(_OWORD *)(a1 + 6672) = v372;
  *(_OWORD *)(a1 + 6688) = *(_OWORD *)(a2 + 6688);
  *(_OWORD *)(a1 + 6697) = *(_OWORD *)(a2 + 6697);
LABEL_601:
  if (*(_QWORD *)(a1 + 6720))
  {
    v373 = *(_QWORD *)(a2 + 6720);
    if (v373)
    {
      v374 = *(_QWORD *)(a2 + 6728);
      *(_QWORD *)(a1 + 6720) = v373;
      *(_QWORD *)(a1 + 6728) = v374;
      swift_release();
      *(_QWORD *)(a1 + 6736) = *(_QWORD *)(a2 + 6736);
      *(_QWORD *)(a1 + 6744) = *(_QWORD *)(a2 + 6744);
      swift_bridgeObjectRelease();
      goto LABEL_606;
    }
    sub_1AD3C2B58(a1 + 6720);
  }
  v375 = *(_OWORD *)(a2 + 6736);
  *(_OWORD *)(a1 + 6720) = *(_OWORD *)(a2 + 6720);
  *(_OWORD *)(a1 + 6736) = v375;
LABEL_606:
  if (*(_QWORD *)(a1 + 6752))
  {
    v376 = *(_QWORD *)(a2 + 6752);
    if (v376)
    {
      v377 = *(_QWORD *)(a2 + 6760);
      *(_QWORD *)(a1 + 6752) = v376;
      *(_QWORD *)(a1 + 6760) = v377;
      swift_release();
      *(_QWORD *)(a1 + 6768) = *(_QWORD *)(a2 + 6768);
      *(_QWORD *)(a1 + 6776) = *(_QWORD *)(a2 + 6776);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6784) = *(_OWORD *)(a2 + 6784);
      swift_release();
      *(_BYTE *)(a1 + 6808) = *(_BYTE *)(a2 + 6808);
      *(_QWORD *)(a1 + 6800) = *(_QWORD *)(a2 + 6800);
      goto LABEL_611;
    }
    sub_1AD3C2B88(a1 + 6752);
  }
  v378 = *(_OWORD *)(a2 + 6768);
  *(_OWORD *)(a1 + 6752) = *(_OWORD *)(a2 + 6752);
  *(_OWORD *)(a1 + 6768) = v378;
  *(_OWORD *)(a1 + 6784) = *(_OWORD *)(a2 + 6784);
  *(_OWORD *)(a1 + 6793) = *(_OWORD *)(a2 + 6793);
LABEL_611:
  if (*(_QWORD *)(a1 + 6816))
  {
    v379 = *(_QWORD *)(a2 + 6816);
    if (v379)
    {
      v380 = *(_QWORD *)(a2 + 6824);
      *(_QWORD *)(a1 + 6816) = v379;
      *(_QWORD *)(a1 + 6824) = v380;
      swift_release();
      *(_QWORD *)(a1 + 6832) = *(_QWORD *)(a2 + 6832);
      *(_QWORD *)(a1 + 6840) = *(_QWORD *)(a2 + 6840);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6848) = *(_OWORD *)(a2 + 6848);
      swift_release();
      *(_BYTE *)(a1 + 6872) = *(_BYTE *)(a2 + 6872);
      *(_QWORD *)(a1 + 6864) = *(_QWORD *)(a2 + 6864);
      goto LABEL_616;
    }
    sub_1AD3C2B88(a1 + 6816);
  }
  v381 = *(_OWORD *)(a2 + 6832);
  *(_OWORD *)(a1 + 6816) = *(_OWORD *)(a2 + 6816);
  *(_OWORD *)(a1 + 6832) = v381;
  *(_OWORD *)(a1 + 6848) = *(_OWORD *)(a2 + 6848);
  *(_OWORD *)(a1 + 6857) = *(_OWORD *)(a2 + 6857);
LABEL_616:
  if (*(_QWORD *)(a1 + 6880))
  {
    v382 = *(_QWORD *)(a2 + 6880);
    if (v382)
    {
      v383 = *(_QWORD *)(a2 + 6888);
      *(_QWORD *)(a1 + 6880) = v382;
      *(_QWORD *)(a1 + 6888) = v383;
      swift_release();
      *(_QWORD *)(a1 + 6896) = *(_QWORD *)(a2 + 6896);
      *(_QWORD *)(a1 + 6904) = *(_QWORD *)(a2 + 6904);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 6912) = *(_OWORD *)(a2 + 6912);
      swift_release();
      *(_BYTE *)(a1 + 6936) = *(_BYTE *)(a2 + 6936);
      *(_QWORD *)(a1 + 6928) = *(_QWORD *)(a2 + 6928);
      goto LABEL_621;
    }
    sub_1AD3C2B88(a1 + 6880);
  }
  v384 = *(_OWORD *)(a2 + 6896);
  *(_OWORD *)(a1 + 6880) = *(_OWORD *)(a2 + 6880);
  *(_OWORD *)(a1 + 6896) = v384;
  *(_OWORD *)(a1 + 6912) = *(_OWORD *)(a2 + 6912);
  *(_OWORD *)(a1 + 6921) = *(_OWORD *)(a2 + 6921);
LABEL_621:
  if (*(_QWORD *)(a1 + 6944))
  {
    v385 = *(_QWORD *)(a2 + 6944);
    if (v385)
    {
      v386 = *(_QWORD *)(a2 + 6952);
      *(_QWORD *)(a1 + 6944) = v385;
      *(_QWORD *)(a1 + 6952) = v386;
      swift_release();
      *(_QWORD *)(a1 + 6960) = *(_QWORD *)(a2 + 6960);
      *(_QWORD *)(a1 + 6968) = *(_QWORD *)(a2 + 6968);
      swift_bridgeObjectRelease();
      goto LABEL_626;
    }
    sub_1AD3C2B58(a1 + 6944);
  }
  v387 = *(_OWORD *)(a2 + 6960);
  *(_OWORD *)(a1 + 6944) = *(_OWORD *)(a2 + 6944);
  *(_OWORD *)(a1 + 6960) = v387;
LABEL_626:
  if (*(_QWORD *)(a1 + 6976))
  {
    v388 = *(_QWORD *)(a2 + 6976);
    if (v388)
    {
      v389 = *(_QWORD *)(a2 + 6984);
      *(_QWORD *)(a1 + 6976) = v388;
      *(_QWORD *)(a1 + 6984) = v389;
      swift_release();
      *(_QWORD *)(a1 + 6992) = *(_QWORD *)(a2 + 6992);
      *(_QWORD *)(a1 + 7000) = *(_QWORD *)(a2 + 7000);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7008) = *(_OWORD *)(a2 + 7008);
      swift_release();
      *(_BYTE *)(a1 + 7032) = *(_BYTE *)(a2 + 7032);
      *(_QWORD *)(a1 + 7024) = *(_QWORD *)(a2 + 7024);
      goto LABEL_631;
    }
    sub_1AD3C2B88(a1 + 6976);
  }
  v390 = *(_OWORD *)(a2 + 6992);
  *(_OWORD *)(a1 + 6976) = *(_OWORD *)(a2 + 6976);
  *(_OWORD *)(a1 + 6992) = v390;
  *(_OWORD *)(a1 + 7008) = *(_OWORD *)(a2 + 7008);
  *(_OWORD *)(a1 + 7017) = *(_OWORD *)(a2 + 7017);
LABEL_631:
  if (*(_QWORD *)(a1 + 7040))
  {
    v391 = *(_QWORD *)(a2 + 7040);
    if (v391)
    {
      v392 = *(_QWORD *)(a2 + 7048);
      *(_QWORD *)(a1 + 7040) = v391;
      *(_QWORD *)(a1 + 7048) = v392;
      swift_release();
      *(_QWORD *)(a1 + 7056) = *(_QWORD *)(a2 + 7056);
      *(_QWORD *)(a1 + 7064) = *(_QWORD *)(a2 + 7064);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7072) = *(_OWORD *)(a2 + 7072);
      swift_release();
      *(_BYTE *)(a1 + 7096) = *(_BYTE *)(a2 + 7096);
      *(_QWORD *)(a1 + 7088) = *(_QWORD *)(a2 + 7088);
      goto LABEL_636;
    }
    sub_1AD3C2B88(a1 + 7040);
  }
  v393 = *(_OWORD *)(a2 + 7056);
  *(_OWORD *)(a1 + 7040) = *(_OWORD *)(a2 + 7040);
  *(_OWORD *)(a1 + 7056) = v393;
  *(_OWORD *)(a1 + 7072) = *(_OWORD *)(a2 + 7072);
  *(_OWORD *)(a1 + 7081) = *(_OWORD *)(a2 + 7081);
LABEL_636:
  if (*(_QWORD *)(a1 + 7104))
  {
    v394 = *(_QWORD *)(a2 + 7104);
    if (v394)
    {
      v395 = *(_QWORD *)(a2 + 7112);
      *(_QWORD *)(a1 + 7104) = v394;
      *(_QWORD *)(a1 + 7112) = v395;
      swift_release();
      *(_QWORD *)(a1 + 7120) = *(_QWORD *)(a2 + 7120);
      *(_QWORD *)(a1 + 7128) = *(_QWORD *)(a2 + 7128);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7136) = *(_OWORD *)(a2 + 7136);
      swift_release();
      *(_BYTE *)(a1 + 7160) = *(_BYTE *)(a2 + 7160);
      *(_QWORD *)(a1 + 7152) = *(_QWORD *)(a2 + 7152);
      goto LABEL_641;
    }
    sub_1AD3C2B88(a1 + 7104);
  }
  v396 = *(_OWORD *)(a2 + 7120);
  *(_OWORD *)(a1 + 7104) = *(_OWORD *)(a2 + 7104);
  *(_OWORD *)(a1 + 7120) = v396;
  *(_OWORD *)(a1 + 7136) = *(_OWORD *)(a2 + 7136);
  *(_OWORD *)(a1 + 7145) = *(_OWORD *)(a2 + 7145);
LABEL_641:
  if (*(_QWORD *)(a1 + 7168))
  {
    v397 = *(_QWORD *)(a2 + 7168);
    if (v397)
    {
      v398 = *(_QWORD *)(a2 + 7176);
      *(_QWORD *)(a1 + 7168) = v397;
      *(_QWORD *)(a1 + 7176) = v398;
      swift_release();
      *(_QWORD *)(a1 + 7184) = *(_QWORD *)(a2 + 7184);
      *(_QWORD *)(a1 + 7192) = *(_QWORD *)(a2 + 7192);
      swift_bridgeObjectRelease();
      goto LABEL_646;
    }
    sub_1AD3C2B58(a1 + 7168);
  }
  v399 = *(_OWORD *)(a2 + 7184);
  *(_OWORD *)(a1 + 7168) = *(_OWORD *)(a2 + 7168);
  *(_OWORD *)(a1 + 7184) = v399;
LABEL_646:
  if (*(_QWORD *)(a1 + 7200))
  {
    v400 = *(_QWORD *)(a2 + 7200);
    if (v400)
    {
      v401 = *(_QWORD *)(a2 + 7208);
      *(_QWORD *)(a1 + 7200) = v400;
      *(_QWORD *)(a1 + 7208) = v401;
      swift_release();
      *(_QWORD *)(a1 + 7216) = *(_QWORD *)(a2 + 7216);
      *(_QWORD *)(a1 + 7224) = *(_QWORD *)(a2 + 7224);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7232) = *(_OWORD *)(a2 + 7232);
      swift_release();
      *(_BYTE *)(a1 + 7256) = *(_BYTE *)(a2 + 7256);
      *(_QWORD *)(a1 + 7248) = *(_QWORD *)(a2 + 7248);
      goto LABEL_651;
    }
    sub_1AD3C2B88(a1 + 7200);
  }
  v402 = *(_OWORD *)(a2 + 7216);
  *(_OWORD *)(a1 + 7200) = *(_OWORD *)(a2 + 7200);
  *(_OWORD *)(a1 + 7216) = v402;
  *(_OWORD *)(a1 + 7232) = *(_OWORD *)(a2 + 7232);
  *(_OWORD *)(a1 + 7241) = *(_OWORD *)(a2 + 7241);
LABEL_651:
  if (*(_QWORD *)(a1 + 7264))
  {
    v403 = *(_QWORD *)(a2 + 7264);
    if (v403)
    {
      v404 = *(_QWORD *)(a2 + 7272);
      *(_QWORD *)(a1 + 7264) = v403;
      *(_QWORD *)(a1 + 7272) = v404;
      swift_release();
      *(_QWORD *)(a1 + 7280) = *(_QWORD *)(a2 + 7280);
      *(_QWORD *)(a1 + 7288) = *(_QWORD *)(a2 + 7288);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7296) = *(_OWORD *)(a2 + 7296);
      swift_release();
      *(_BYTE *)(a1 + 7320) = *(_BYTE *)(a2 + 7320);
      *(_QWORD *)(a1 + 7312) = *(_QWORD *)(a2 + 7312);
      goto LABEL_656;
    }
    sub_1AD3C2B88(a1 + 7264);
  }
  v405 = *(_OWORD *)(a2 + 7280);
  *(_OWORD *)(a1 + 7264) = *(_OWORD *)(a2 + 7264);
  *(_OWORD *)(a1 + 7280) = v405;
  *(_OWORD *)(a1 + 7296) = *(_OWORD *)(a2 + 7296);
  *(_OWORD *)(a1 + 7305) = *(_OWORD *)(a2 + 7305);
LABEL_656:
  if (*(_QWORD *)(a1 + 7328))
  {
    v406 = *(_QWORD *)(a2 + 7328);
    if (v406)
    {
      v407 = *(_QWORD *)(a2 + 7336);
      *(_QWORD *)(a1 + 7328) = v406;
      *(_QWORD *)(a1 + 7336) = v407;
      swift_release();
      *(_QWORD *)(a1 + 7344) = *(_QWORD *)(a2 + 7344);
      *(_QWORD *)(a1 + 7352) = *(_QWORD *)(a2 + 7352);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7360) = *(_OWORD *)(a2 + 7360);
      swift_release();
      *(_BYTE *)(a1 + 7384) = *(_BYTE *)(a2 + 7384);
      *(_QWORD *)(a1 + 7376) = *(_QWORD *)(a2 + 7376);
      goto LABEL_661;
    }
    sub_1AD3C2B88(a1 + 7328);
  }
  v408 = *(_OWORD *)(a2 + 7344);
  *(_OWORD *)(a1 + 7328) = *(_OWORD *)(a2 + 7328);
  *(_OWORD *)(a1 + 7344) = v408;
  *(_OWORD *)(a1 + 7360) = *(_OWORD *)(a2 + 7360);
  *(_OWORD *)(a1 + 7369) = *(_OWORD *)(a2 + 7369);
LABEL_661:
  if (*(_QWORD *)(a1 + 7392))
  {
    v409 = *(_QWORD *)(a2 + 7392);
    if (v409)
    {
      v410 = *(_QWORD *)(a2 + 7400);
      *(_QWORD *)(a1 + 7392) = v409;
      *(_QWORD *)(a1 + 7400) = v410;
      swift_release();
      *(_QWORD *)(a1 + 7408) = *(_QWORD *)(a2 + 7408);
      *(_QWORD *)(a1 + 7416) = *(_QWORD *)(a2 + 7416);
      swift_bridgeObjectRelease();
      goto LABEL_666;
    }
    sub_1AD3C2B58(a1 + 7392);
  }
  v411 = *(_OWORD *)(a2 + 7408);
  *(_OWORD *)(a1 + 7392) = *(_OWORD *)(a2 + 7392);
  *(_OWORD *)(a1 + 7408) = v411;
LABEL_666:
  if (*(_QWORD *)(a1 + 7424))
  {
    v412 = *(_QWORD *)(a2 + 7424);
    if (v412)
    {
      v413 = *(_QWORD *)(a2 + 7432);
      *(_QWORD *)(a1 + 7424) = v412;
      *(_QWORD *)(a1 + 7432) = v413;
      swift_release();
      *(_QWORD *)(a1 + 7440) = *(_QWORD *)(a2 + 7440);
      *(_QWORD *)(a1 + 7448) = *(_QWORD *)(a2 + 7448);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7456) = *(_OWORD *)(a2 + 7456);
      swift_release();
      *(_BYTE *)(a1 + 7480) = *(_BYTE *)(a2 + 7480);
      *(_QWORD *)(a1 + 7472) = *(_QWORD *)(a2 + 7472);
      goto LABEL_671;
    }
    sub_1AD3C2B88(a1 + 7424);
  }
  v414 = *(_OWORD *)(a2 + 7440);
  *(_OWORD *)(a1 + 7424) = *(_OWORD *)(a2 + 7424);
  *(_OWORD *)(a1 + 7440) = v414;
  *(_OWORD *)(a1 + 7456) = *(_OWORD *)(a2 + 7456);
  *(_OWORD *)(a1 + 7465) = *(_OWORD *)(a2 + 7465);
LABEL_671:
  if (*(_QWORD *)(a1 + 7488))
  {
    v415 = *(_QWORD *)(a2 + 7488);
    if (v415)
    {
      v416 = *(_QWORD *)(a2 + 7496);
      *(_QWORD *)(a1 + 7488) = v415;
      *(_QWORD *)(a1 + 7496) = v416;
      swift_release();
      *(_QWORD *)(a1 + 7504) = *(_QWORD *)(a2 + 7504);
      *(_QWORD *)(a1 + 7512) = *(_QWORD *)(a2 + 7512);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7520) = *(_OWORD *)(a2 + 7520);
      swift_release();
      *(_BYTE *)(a1 + 7544) = *(_BYTE *)(a2 + 7544);
      *(_QWORD *)(a1 + 7536) = *(_QWORD *)(a2 + 7536);
      goto LABEL_676;
    }
    sub_1AD3C2B88(a1 + 7488);
  }
  v417 = *(_OWORD *)(a2 + 7504);
  *(_OWORD *)(a1 + 7488) = *(_OWORD *)(a2 + 7488);
  *(_OWORD *)(a1 + 7504) = v417;
  *(_OWORD *)(a1 + 7520) = *(_OWORD *)(a2 + 7520);
  *(_OWORD *)(a1 + 7529) = *(_OWORD *)(a2 + 7529);
LABEL_676:
  if (*(_QWORD *)(a1 + 7552))
  {
    v418 = *(_QWORD *)(a2 + 7552);
    if (v418)
    {
      v419 = *(_QWORD *)(a2 + 7560);
      *(_QWORD *)(a1 + 7552) = v418;
      *(_QWORD *)(a1 + 7560) = v419;
      swift_release();
      *(_QWORD *)(a1 + 7568) = *(_QWORD *)(a2 + 7568);
      *(_QWORD *)(a1 + 7576) = *(_QWORD *)(a2 + 7576);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7584) = *(_OWORD *)(a2 + 7584);
      swift_release();
      *(_BYTE *)(a1 + 7608) = *(_BYTE *)(a2 + 7608);
      *(_QWORD *)(a1 + 7600) = *(_QWORD *)(a2 + 7600);
      goto LABEL_681;
    }
    sub_1AD3C2B88(a1 + 7552);
  }
  v420 = *(_OWORD *)(a2 + 7568);
  *(_OWORD *)(a1 + 7552) = *(_OWORD *)(a2 + 7552);
  *(_OWORD *)(a1 + 7568) = v420;
  *(_OWORD *)(a1 + 7584) = *(_OWORD *)(a2 + 7584);
  *(_OWORD *)(a1 + 7593) = *(_OWORD *)(a2 + 7593);
LABEL_681:
  if (*(_QWORD *)(a1 + 7616))
  {
    v421 = *(_QWORD *)(a2 + 7616);
    if (v421)
    {
      v422 = *(_QWORD *)(a2 + 7624);
      *(_QWORD *)(a1 + 7616) = v421;
      *(_QWORD *)(a1 + 7624) = v422;
      swift_release();
      *(_QWORD *)(a1 + 7632) = *(_QWORD *)(a2 + 7632);
      *(_QWORD *)(a1 + 7640) = *(_QWORD *)(a2 + 7640);
      swift_bridgeObjectRelease();
      goto LABEL_686;
    }
    sub_1AD3C2B58(a1 + 7616);
  }
  v423 = *(_OWORD *)(a2 + 7632);
  *(_OWORD *)(a1 + 7616) = *(_OWORD *)(a2 + 7616);
  *(_OWORD *)(a1 + 7632) = v423;
LABEL_686:
  if (*(_QWORD *)(a1 + 7648))
  {
    v424 = *(_QWORD *)(a2 + 7648);
    if (v424)
    {
      v425 = *(_QWORD *)(a2 + 7656);
      *(_QWORD *)(a1 + 7648) = v424;
      *(_QWORD *)(a1 + 7656) = v425;
      swift_release();
      *(_QWORD *)(a1 + 7664) = *(_QWORD *)(a2 + 7664);
      *(_QWORD *)(a1 + 7672) = *(_QWORD *)(a2 + 7672);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7680) = *(_OWORD *)(a2 + 7680);
      swift_release();
      *(_BYTE *)(a1 + 7704) = *(_BYTE *)(a2 + 7704);
      *(_QWORD *)(a1 + 7696) = *(_QWORD *)(a2 + 7696);
      goto LABEL_691;
    }
    sub_1AD3C2B88(a1 + 7648);
  }
  v426 = *(_OWORD *)(a2 + 7664);
  *(_OWORD *)(a1 + 7648) = *(_OWORD *)(a2 + 7648);
  *(_OWORD *)(a1 + 7664) = v426;
  *(_OWORD *)(a1 + 7680) = *(_OWORD *)(a2 + 7680);
  *(_OWORD *)(a1 + 7689) = *(_OWORD *)(a2 + 7689);
LABEL_691:
  if (*(_QWORD *)(a1 + 7712))
  {
    v427 = *(_QWORD *)(a2 + 7712);
    if (v427)
    {
      v428 = *(_QWORD *)(a2 + 7720);
      *(_QWORD *)(a1 + 7712) = v427;
      *(_QWORD *)(a1 + 7720) = v428;
      swift_release();
      *(_QWORD *)(a1 + 7728) = *(_QWORD *)(a2 + 7728);
      *(_QWORD *)(a1 + 7736) = *(_QWORD *)(a2 + 7736);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7744) = *(_OWORD *)(a2 + 7744);
      swift_release();
      *(_BYTE *)(a1 + 7768) = *(_BYTE *)(a2 + 7768);
      *(_QWORD *)(a1 + 7760) = *(_QWORD *)(a2 + 7760);
      goto LABEL_696;
    }
    sub_1AD3C2B88(a1 + 7712);
  }
  v429 = *(_OWORD *)(a2 + 7728);
  *(_OWORD *)(a1 + 7712) = *(_OWORD *)(a2 + 7712);
  *(_OWORD *)(a1 + 7728) = v429;
  *(_OWORD *)(a1 + 7744) = *(_OWORD *)(a2 + 7744);
  *(_OWORD *)(a1 + 7753) = *(_OWORD *)(a2 + 7753);
LABEL_696:
  if (*(_QWORD *)(a1 + 7776))
  {
    v430 = *(_QWORD *)(a2 + 7776);
    if (v430)
    {
      v431 = *(_QWORD *)(a2 + 7784);
      *(_QWORD *)(a1 + 7776) = v430;
      *(_QWORD *)(a1 + 7784) = v431;
      swift_release();
      *(_QWORD *)(a1 + 7792) = *(_QWORD *)(a2 + 7792);
      *(_QWORD *)(a1 + 7800) = *(_QWORD *)(a2 + 7800);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7808) = *(_OWORD *)(a2 + 7808);
      swift_release();
      *(_BYTE *)(a1 + 7832) = *(_BYTE *)(a2 + 7832);
      *(_QWORD *)(a1 + 7824) = *(_QWORD *)(a2 + 7824);
      goto LABEL_701;
    }
    sub_1AD3C2B88(a1 + 7776);
  }
  v432 = *(_OWORD *)(a2 + 7792);
  *(_OWORD *)(a1 + 7776) = *(_OWORD *)(a2 + 7776);
  *(_OWORD *)(a1 + 7792) = v432;
  *(_OWORD *)(a1 + 7808) = *(_OWORD *)(a2 + 7808);
  *(_OWORD *)(a1 + 7817) = *(_OWORD *)(a2 + 7817);
LABEL_701:
  if (*(_QWORD *)(a1 + 7840))
  {
    v433 = *(_QWORD *)(a2 + 7840);
    if (v433)
    {
      v434 = *(_QWORD *)(a2 + 7848);
      *(_QWORD *)(a1 + 7840) = v433;
      *(_QWORD *)(a1 + 7848) = v434;
      swift_release();
      *(_QWORD *)(a1 + 7856) = *(_QWORD *)(a2 + 7856);
      *(_QWORD *)(a1 + 7864) = *(_QWORD *)(a2 + 7864);
      swift_bridgeObjectRelease();
      goto LABEL_706;
    }
    sub_1AD3C2B58(a1 + 7840);
  }
  v435 = *(_OWORD *)(a2 + 7856);
  *(_OWORD *)(a1 + 7840) = *(_OWORD *)(a2 + 7840);
  *(_OWORD *)(a1 + 7856) = v435;
LABEL_706:
  if (*(_QWORD *)(a1 + 7872))
  {
    v436 = *(_QWORD *)(a2 + 7872);
    if (v436)
    {
      v437 = *(_QWORD *)(a2 + 7880);
      *(_QWORD *)(a1 + 7872) = v436;
      *(_QWORD *)(a1 + 7880) = v437;
      swift_release();
      *(_QWORD *)(a1 + 7888) = *(_QWORD *)(a2 + 7888);
      *(_QWORD *)(a1 + 7896) = *(_QWORD *)(a2 + 7896);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7904) = *(_OWORD *)(a2 + 7904);
      swift_release();
      *(_BYTE *)(a1 + 7928) = *(_BYTE *)(a2 + 7928);
      *(_QWORD *)(a1 + 7920) = *(_QWORD *)(a2 + 7920);
      goto LABEL_711;
    }
    sub_1AD3C2B88(a1 + 7872);
  }
  v438 = *(_OWORD *)(a2 + 7888);
  *(_OWORD *)(a1 + 7872) = *(_OWORD *)(a2 + 7872);
  *(_OWORD *)(a1 + 7888) = v438;
  *(_OWORD *)(a1 + 7904) = *(_OWORD *)(a2 + 7904);
  *(_OWORD *)(a1 + 7913) = *(_OWORD *)(a2 + 7913);
LABEL_711:
  if (*(_QWORD *)(a1 + 7936))
  {
    v439 = *(_QWORD *)(a2 + 7936);
    if (v439)
    {
      v440 = *(_QWORD *)(a2 + 7944);
      *(_QWORD *)(a1 + 7936) = v439;
      *(_QWORD *)(a1 + 7944) = v440;
      swift_release();
      *(_QWORD *)(a1 + 7952) = *(_QWORD *)(a2 + 7952);
      *(_QWORD *)(a1 + 7960) = *(_QWORD *)(a2 + 7960);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 7968) = *(_OWORD *)(a2 + 7968);
      swift_release();
      *(_BYTE *)(a1 + 7992) = *(_BYTE *)(a2 + 7992);
      *(_QWORD *)(a1 + 7984) = *(_QWORD *)(a2 + 7984);
      goto LABEL_716;
    }
    sub_1AD3C2B88(a1 + 7936);
  }
  v441 = *(_OWORD *)(a2 + 7952);
  *(_OWORD *)(a1 + 7936) = *(_OWORD *)(a2 + 7936);
  *(_OWORD *)(a1 + 7952) = v441;
  *(_OWORD *)(a1 + 7968) = *(_OWORD *)(a2 + 7968);
  *(_OWORD *)(a1 + 7977) = *(_OWORD *)(a2 + 7977);
LABEL_716:
  if (*(_QWORD *)(a1 + 8000))
  {
    v442 = *(_QWORD *)(a2 + 8000);
    if (v442)
    {
      v443 = *(_QWORD *)(a2 + 8008);
      *(_QWORD *)(a1 + 8000) = v442;
      *(_QWORD *)(a1 + 8008) = v443;
      swift_release();
      *(_QWORD *)(a1 + 8016) = *(_QWORD *)(a2 + 8016);
      *(_QWORD *)(a1 + 8024) = *(_QWORD *)(a2 + 8024);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8032) = *(_OWORD *)(a2 + 8032);
      swift_release();
      *(_BYTE *)(a1 + 8056) = *(_BYTE *)(a2 + 8056);
      *(_QWORD *)(a1 + 8048) = *(_QWORD *)(a2 + 8048);
      goto LABEL_721;
    }
    sub_1AD3C2B88(a1 + 8000);
  }
  v444 = *(_OWORD *)(a2 + 8016);
  *(_OWORD *)(a1 + 8000) = *(_OWORD *)(a2 + 8000);
  *(_OWORD *)(a1 + 8016) = v444;
  *(_OWORD *)(a1 + 8032) = *(_OWORD *)(a2 + 8032);
  *(_OWORD *)(a1 + 8041) = *(_OWORD *)(a2 + 8041);
LABEL_721:
  if (*(_QWORD *)(a1 + 8064))
  {
    v445 = *(_QWORD *)(a2 + 8064);
    if (v445)
    {
      v446 = *(_QWORD *)(a2 + 8072);
      *(_QWORD *)(a1 + 8064) = v445;
      *(_QWORD *)(a1 + 8072) = v446;
      swift_release();
      *(_QWORD *)(a1 + 8080) = *(_QWORD *)(a2 + 8080);
      *(_QWORD *)(a1 + 8088) = *(_QWORD *)(a2 + 8088);
      swift_bridgeObjectRelease();
      goto LABEL_726;
    }
    sub_1AD3C2B58(a1 + 8064);
  }
  v447 = *(_OWORD *)(a2 + 8080);
  *(_OWORD *)(a1 + 8064) = *(_OWORD *)(a2 + 8064);
  *(_OWORD *)(a1 + 8080) = v447;
LABEL_726:
  if (*(_QWORD *)(a1 + 8096))
  {
    v448 = *(_QWORD *)(a2 + 8096);
    if (v448)
    {
      v449 = *(_QWORD *)(a2 + 8104);
      *(_QWORD *)(a1 + 8096) = v448;
      *(_QWORD *)(a1 + 8104) = v449;
      swift_release();
      *(_QWORD *)(a1 + 8112) = *(_QWORD *)(a2 + 8112);
      *(_QWORD *)(a1 + 8120) = *(_QWORD *)(a2 + 8120);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8128) = *(_OWORD *)(a2 + 8128);
      swift_release();
      *(_BYTE *)(a1 + 8152) = *(_BYTE *)(a2 + 8152);
      *(_QWORD *)(a1 + 8144) = *(_QWORD *)(a2 + 8144);
      goto LABEL_731;
    }
    sub_1AD3C2B88(a1 + 8096);
  }
  v450 = *(_OWORD *)(a2 + 8112);
  *(_OWORD *)(a1 + 8096) = *(_OWORD *)(a2 + 8096);
  *(_OWORD *)(a1 + 8112) = v450;
  *(_OWORD *)(a1 + 8128) = *(_OWORD *)(a2 + 8128);
  *(_OWORD *)(a1 + 8137) = *(_OWORD *)(a2 + 8137);
LABEL_731:
  if (*(_QWORD *)(a1 + 8160))
  {
    v451 = *(_QWORD *)(a2 + 8160);
    if (v451)
    {
      v452 = *(_QWORD *)(a2 + 8168);
      *(_QWORD *)(a1 + 8160) = v451;
      *(_QWORD *)(a1 + 8168) = v452;
      swift_release();
      *(_QWORD *)(a1 + 8176) = *(_QWORD *)(a2 + 8176);
      *(_QWORD *)(a1 + 8184) = *(_QWORD *)(a2 + 8184);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 0x2000) = *(_OWORD *)(a2 + 0x2000);
      swift_release();
      *(_BYTE *)(a1 + 8216) = *(_BYTE *)(a2 + 8216);
      *(_QWORD *)(a1 + 8208) = *(_QWORD *)(a2 + 8208);
      goto LABEL_736;
    }
    sub_1AD3C2B88(a1 + 8160);
  }
  v453 = *(_OWORD *)(a2 + 8176);
  *(_OWORD *)(a1 + 8160) = *(_OWORD *)(a2 + 8160);
  *(_OWORD *)(a1 + 8176) = v453;
  *(_OWORD *)(a1 + 0x2000) = *(_OWORD *)(a2 + 0x2000);
  *(_OWORD *)(a1 + 8201) = *(_OWORD *)(a2 + 8201);
LABEL_736:
  if (*(_QWORD *)(a1 + 8224))
  {
    v454 = *(_QWORD *)(a2 + 8224);
    if (v454)
    {
      v455 = *(_QWORD *)(a2 + 8232);
      *(_QWORD *)(a1 + 8224) = v454;
      *(_QWORD *)(a1 + 8232) = v455;
      swift_release();
      *(_QWORD *)(a1 + 8240) = *(_QWORD *)(a2 + 8240);
      *(_QWORD *)(a1 + 8248) = *(_QWORD *)(a2 + 8248);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8256) = *(_OWORD *)(a2 + 8256);
      swift_release();
      *(_BYTE *)(a1 + 8280) = *(_BYTE *)(a2 + 8280);
      *(_QWORD *)(a1 + 8272) = *(_QWORD *)(a2 + 8272);
      goto LABEL_741;
    }
    sub_1AD3C2B88(a1 + 8224);
  }
  v456 = *(_OWORD *)(a2 + 8240);
  *(_OWORD *)(a1 + 8224) = *(_OWORD *)(a2 + 8224);
  *(_OWORD *)(a1 + 8240) = v456;
  *(_OWORD *)(a1 + 8256) = *(_OWORD *)(a2 + 8256);
  *(_OWORD *)(a1 + 8265) = *(_OWORD *)(a2 + 8265);
LABEL_741:
  if (*(_QWORD *)(a1 + 8288))
  {
    v457 = *(_QWORD *)(a2 + 8288);
    if (v457)
    {
      v458 = *(_QWORD *)(a2 + 8296);
      *(_QWORD *)(a1 + 8288) = v457;
      *(_QWORD *)(a1 + 8296) = v458;
      swift_release();
      *(_QWORD *)(a1 + 8304) = *(_QWORD *)(a2 + 8304);
      *(_QWORD *)(a1 + 8312) = *(_QWORD *)(a2 + 8312);
      swift_bridgeObjectRelease();
      goto LABEL_746;
    }
    sub_1AD3C2B58(a1 + 8288);
  }
  v459 = *(_OWORD *)(a2 + 8304);
  *(_OWORD *)(a1 + 8288) = *(_OWORD *)(a2 + 8288);
  *(_OWORD *)(a1 + 8304) = v459;
LABEL_746:
  if (*(_QWORD *)(a1 + 8320))
  {
    v460 = *(_QWORD *)(a2 + 8320);
    if (v460)
    {
      v461 = *(_QWORD *)(a2 + 8328);
      *(_QWORD *)(a1 + 8320) = v460;
      *(_QWORD *)(a1 + 8328) = v461;
      swift_release();
      *(_QWORD *)(a1 + 8336) = *(_QWORD *)(a2 + 8336);
      *(_QWORD *)(a1 + 8344) = *(_QWORD *)(a2 + 8344);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8352) = *(_OWORD *)(a2 + 8352);
      swift_release();
      *(_BYTE *)(a1 + 8376) = *(_BYTE *)(a2 + 8376);
      *(_QWORD *)(a1 + 8368) = *(_QWORD *)(a2 + 8368);
      goto LABEL_751;
    }
    sub_1AD3C2B88(a1 + 8320);
  }
  v462 = *(_OWORD *)(a2 + 8336);
  *(_OWORD *)(a1 + 8320) = *(_OWORD *)(a2 + 8320);
  *(_OWORD *)(a1 + 8336) = v462;
  *(_OWORD *)(a1 + 8352) = *(_OWORD *)(a2 + 8352);
  *(_OWORD *)(a1 + 8361) = *(_OWORD *)(a2 + 8361);
LABEL_751:
  if (*(_QWORD *)(a1 + 8384))
  {
    v463 = *(_QWORD *)(a2 + 8384);
    if (v463)
    {
      v464 = *(_QWORD *)(a2 + 8392);
      *(_QWORD *)(a1 + 8384) = v463;
      *(_QWORD *)(a1 + 8392) = v464;
      swift_release();
      *(_QWORD *)(a1 + 8400) = *(_QWORD *)(a2 + 8400);
      *(_QWORD *)(a1 + 8408) = *(_QWORD *)(a2 + 8408);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8416) = *(_OWORD *)(a2 + 8416);
      swift_release();
      *(_BYTE *)(a1 + 8440) = *(_BYTE *)(a2 + 8440);
      *(_QWORD *)(a1 + 8432) = *(_QWORD *)(a2 + 8432);
      goto LABEL_756;
    }
    sub_1AD3C2B88(a1 + 8384);
  }
  v465 = *(_OWORD *)(a2 + 8400);
  *(_OWORD *)(a1 + 8384) = *(_OWORD *)(a2 + 8384);
  *(_OWORD *)(a1 + 8400) = v465;
  *(_OWORD *)(a1 + 8416) = *(_OWORD *)(a2 + 8416);
  *(_OWORD *)(a1 + 8425) = *(_OWORD *)(a2 + 8425);
LABEL_756:
  if (*(_QWORD *)(a1 + 8448))
  {
    v466 = *(_QWORD *)(a2 + 8448);
    if (v466)
    {
      v467 = *(_QWORD *)(a2 + 8456);
      *(_QWORD *)(a1 + 8448) = v466;
      *(_QWORD *)(a1 + 8456) = v467;
      swift_release();
      *(_QWORD *)(a1 + 8464) = *(_QWORD *)(a2 + 8464);
      *(_QWORD *)(a1 + 8472) = *(_QWORD *)(a2 + 8472);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8480) = *(_OWORD *)(a2 + 8480);
      swift_release();
      *(_BYTE *)(a1 + 8504) = *(_BYTE *)(a2 + 8504);
      *(_QWORD *)(a1 + 8496) = *(_QWORD *)(a2 + 8496);
      goto LABEL_761;
    }
    sub_1AD3C2B88(a1 + 8448);
  }
  v468 = *(_OWORD *)(a2 + 8464);
  *(_OWORD *)(a1 + 8448) = *(_OWORD *)(a2 + 8448);
  *(_OWORD *)(a1 + 8464) = v468;
  *(_OWORD *)(a1 + 8480) = *(_OWORD *)(a2 + 8480);
  *(_OWORD *)(a1 + 8489) = *(_OWORD *)(a2 + 8489);
LABEL_761:
  if (*(_QWORD *)(a1 + 8512))
  {
    v469 = *(_QWORD *)(a2 + 8512);
    if (v469)
    {
      v470 = *(_QWORD *)(a2 + 8520);
      *(_QWORD *)(a1 + 8512) = v469;
      *(_QWORD *)(a1 + 8520) = v470;
      swift_release();
      *(_QWORD *)(a1 + 8528) = *(_QWORD *)(a2 + 8528);
      *(_QWORD *)(a1 + 8536) = *(_QWORD *)(a2 + 8536);
      swift_bridgeObjectRelease();
      goto LABEL_766;
    }
    sub_1AD3C2B58(a1 + 8512);
  }
  v471 = *(_OWORD *)(a2 + 8528);
  *(_OWORD *)(a1 + 8512) = *(_OWORD *)(a2 + 8512);
  *(_OWORD *)(a1 + 8528) = v471;
LABEL_766:
  if (*(_QWORD *)(a1 + 8544))
  {
    v472 = *(_QWORD *)(a2 + 8544);
    if (v472)
    {
      v473 = *(_QWORD *)(a2 + 8552);
      *(_QWORD *)(a1 + 8544) = v472;
      *(_QWORD *)(a1 + 8552) = v473;
      swift_release();
      *(_QWORD *)(a1 + 8560) = *(_QWORD *)(a2 + 8560);
      *(_QWORD *)(a1 + 8568) = *(_QWORD *)(a2 + 8568);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8576) = *(_OWORD *)(a2 + 8576);
      swift_release();
      *(_BYTE *)(a1 + 8600) = *(_BYTE *)(a2 + 8600);
      *(_QWORD *)(a1 + 8592) = *(_QWORD *)(a2 + 8592);
      goto LABEL_771;
    }
    sub_1AD3C2B88(a1 + 8544);
  }
  v474 = *(_OWORD *)(a2 + 8560);
  *(_OWORD *)(a1 + 8544) = *(_OWORD *)(a2 + 8544);
  *(_OWORD *)(a1 + 8560) = v474;
  *(_OWORD *)(a1 + 8576) = *(_OWORD *)(a2 + 8576);
  *(_OWORD *)(a1 + 8585) = *(_OWORD *)(a2 + 8585);
LABEL_771:
  if (*(_QWORD *)(a1 + 8608))
  {
    v475 = *(_QWORD *)(a2 + 8608);
    if (v475)
    {
      v476 = *(_QWORD *)(a2 + 8616);
      *(_QWORD *)(a1 + 8608) = v475;
      *(_QWORD *)(a1 + 8616) = v476;
      swift_release();
      *(_QWORD *)(a1 + 8624) = *(_QWORD *)(a2 + 8624);
      *(_QWORD *)(a1 + 8632) = *(_QWORD *)(a2 + 8632);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8640) = *(_OWORD *)(a2 + 8640);
      swift_release();
      *(_BYTE *)(a1 + 8664) = *(_BYTE *)(a2 + 8664);
      *(_QWORD *)(a1 + 8656) = *(_QWORD *)(a2 + 8656);
      goto LABEL_776;
    }
    sub_1AD3C2B88(a1 + 8608);
  }
  v477 = *(_OWORD *)(a2 + 8624);
  *(_OWORD *)(a1 + 8608) = *(_OWORD *)(a2 + 8608);
  *(_OWORD *)(a1 + 8624) = v477;
  *(_OWORD *)(a1 + 8640) = *(_OWORD *)(a2 + 8640);
  *(_OWORD *)(a1 + 8649) = *(_OWORD *)(a2 + 8649);
LABEL_776:
  if (*(_QWORD *)(a1 + 8672))
  {
    v478 = *(_QWORD *)(a2 + 8672);
    if (v478)
    {
      v479 = *(_QWORD *)(a2 + 8680);
      *(_QWORD *)(a1 + 8672) = v478;
      *(_QWORD *)(a1 + 8680) = v479;
      swift_release();
      *(_QWORD *)(a1 + 8688) = *(_QWORD *)(a2 + 8688);
      *(_QWORD *)(a1 + 8696) = *(_QWORD *)(a2 + 8696);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8704) = *(_OWORD *)(a2 + 8704);
      swift_release();
      *(_BYTE *)(a1 + 8728) = *(_BYTE *)(a2 + 8728);
      *(_QWORD *)(a1 + 8720) = *(_QWORD *)(a2 + 8720);
      goto LABEL_781;
    }
    sub_1AD3C2B88(a1 + 8672);
  }
  v480 = *(_OWORD *)(a2 + 8688);
  *(_OWORD *)(a1 + 8672) = *(_OWORD *)(a2 + 8672);
  *(_OWORD *)(a1 + 8688) = v480;
  *(_OWORD *)(a1 + 8704) = *(_OWORD *)(a2 + 8704);
  *(_OWORD *)(a1 + 8713) = *(_OWORD *)(a2 + 8713);
LABEL_781:
  if (*(_QWORD *)(a1 + 8736))
  {
    v481 = *(_QWORD *)(a2 + 8736);
    if (v481)
    {
      v482 = *(_QWORD *)(a2 + 8744);
      *(_QWORD *)(a1 + 8736) = v481;
      *(_QWORD *)(a1 + 8744) = v482;
      swift_release();
      *(_QWORD *)(a1 + 8752) = *(_QWORD *)(a2 + 8752);
      *(_QWORD *)(a1 + 8760) = *(_QWORD *)(a2 + 8760);
      swift_bridgeObjectRelease();
      goto LABEL_786;
    }
    sub_1AD3C2B58(a1 + 8736);
  }
  v483 = *(_OWORD *)(a2 + 8752);
  *(_OWORD *)(a1 + 8736) = *(_OWORD *)(a2 + 8736);
  *(_OWORD *)(a1 + 8752) = v483;
LABEL_786:
  if (*(_QWORD *)(a1 + 8768))
  {
    v484 = *(_QWORD *)(a2 + 8768);
    if (v484)
    {
      v485 = *(_QWORD *)(a2 + 8776);
      *(_QWORD *)(a1 + 8768) = v484;
      *(_QWORD *)(a1 + 8776) = v485;
      swift_release();
      *(_QWORD *)(a1 + 8784) = *(_QWORD *)(a2 + 8784);
      *(_QWORD *)(a1 + 8792) = *(_QWORD *)(a2 + 8792);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8800) = *(_OWORD *)(a2 + 8800);
      swift_release();
      *(_BYTE *)(a1 + 8824) = *(_BYTE *)(a2 + 8824);
      *(_QWORD *)(a1 + 8816) = *(_QWORD *)(a2 + 8816);
      goto LABEL_791;
    }
    sub_1AD3C2B88(a1 + 8768);
  }
  v486 = *(_OWORD *)(a2 + 8784);
  *(_OWORD *)(a1 + 8768) = *(_OWORD *)(a2 + 8768);
  *(_OWORD *)(a1 + 8784) = v486;
  *(_OWORD *)(a1 + 8800) = *(_OWORD *)(a2 + 8800);
  *(_OWORD *)(a1 + 8809) = *(_OWORD *)(a2 + 8809);
LABEL_791:
  if (*(_QWORD *)(a1 + 8832))
  {
    v487 = *(_QWORD *)(a2 + 8832);
    if (v487)
    {
      v488 = *(_QWORD *)(a2 + 8840);
      *(_QWORD *)(a1 + 8832) = v487;
      *(_QWORD *)(a1 + 8840) = v488;
      swift_release();
      *(_QWORD *)(a1 + 8848) = *(_QWORD *)(a2 + 8848);
      *(_QWORD *)(a1 + 8856) = *(_QWORD *)(a2 + 8856);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 8864) = *(_OWORD *)(a2 + 8864);
      swift_release();
      *(_BYTE *)(a1 + 8888) = *(_BYTE *)(a2 + 8888);
      *(_QWORD *)(a1 + 8880) = *(_QWORD *)(a2 + 8880);
      goto LABEL_796;
    }
    sub_1AD3C2B88(a1 + 8832);
  }
  v489 = *(_OWORD *)(a2 + 8848);
  *(_OWORD *)(a1 + 8832) = *(_OWORD *)(a2 + 8832);
  *(_OWORD *)(a1 + 8848) = v489;
  *(_OWORD *)(a1 + 8864) = *(_OWORD *)(a2 + 8864);
  *(_OWORD *)(a1 + 8873) = *(_OWORD *)(a2 + 8873);
LABEL_796:
  if (!*(_QWORD *)(a1 + 8896))
  {
LABEL_800:
    v492 = *(_OWORD *)(a2 + 8912);
    *(_OWORD *)(a1 + 8896) = *(_OWORD *)(a2 + 8896);
    *(_OWORD *)(a1 + 8912) = v492;
    *(_OWORD *)(a1 + 8928) = *(_OWORD *)(a2 + 8928);
    *(_OWORD *)(a1 + 8937) = *(_OWORD *)(a2 + 8937);
    return a1;
  }
  v490 = *(_QWORD *)(a2 + 8896);
  if (!v490)
  {
    sub_1AD3C2B88(a1 + 8896);
    goto LABEL_800;
  }
  v491 = *(_QWORD *)(a2 + 8904);
  *(_QWORD *)(a1 + 8896) = v490;
  *(_QWORD *)(a1 + 8904) = v491;
  swift_release();
  *(_QWORD *)(a1 + 8912) = *(_QWORD *)(a2 + 8912);
  *(_QWORD *)(a1 + 8920) = *(_QWORD *)(a2 + 8920);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8928) = *(_OWORD *)(a2 + 8928);
  swift_release();
  *(_BYTE *)(a1 + 8952) = *(_BYTE *)(a2 + 8952);
  *(_QWORD *)(a1 + 8944) = *(_QWORD *)(a2 + 8944);
  return a1;
}

