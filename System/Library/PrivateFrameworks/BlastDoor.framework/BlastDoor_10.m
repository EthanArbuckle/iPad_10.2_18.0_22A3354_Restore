uint64_t sub_1AD58A780(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = (int *)type metadata accessor for Metadata();
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  *(_WORD *)(a1 + v7[8]) = *(_WORD *)(a2 + v7[8]);
  memcpy((void *)(a1 + *(int *)(a3 + 20)), (const void *)(a2 + *(int *)(a3 + 20)), 0x111uLL);
  *(_OWORD *)(a1 + *(int *)(a3 + 24)) = *(_OWORD *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1AD58A838(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t *v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = (int *)type metadata accessor for Metadata();
  v8 = v7[5];
  v9 = a1 + v8;
  v10 = a2 + v8;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_BYTE *)(v9 + 8) = *(_BYTE *)(v10 + 8);
  *(_BYTE *)(a1 + v7[6]) = *(_BYTE *)(a2 + v7[6]);
  *(_BYTE *)(a1 + v7[7]) = *(_BYTE *)(a2 + v7[7]);
  v11 = v7[8];
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  *v12 = *v13;
  v12[1] = v13[1];
  v14 = *(int *)(a3 + 20);
  v15 = a1 + v14;
  v16 = a2 + v14;
  *(_OWORD *)(a1 + v14) = *(_OWORD *)(a2 + v14);
  swift_release();
  v17 = *(_QWORD *)(v16 + 24);
  *(_QWORD *)(v15 + 16) = *(_QWORD *)(v16 + 16);
  *(_QWORD *)(v15 + 24) = v17;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v15 + 32) = *(_OWORD *)(v16 + 32);
  swift_release();
  v18 = *(_QWORD *)(v16 + 56);
  *(_QWORD *)(v15 + 48) = *(_QWORD *)(v16 + 48);
  *(_QWORD *)(v15 + 56) = v18;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v15 + 64) = *(_OWORD *)(v16 + 64);
  swift_release();
  v19 = *(_QWORD *)(v16 + 88);
  *(_QWORD *)(v15 + 80) = *(_QWORD *)(v16 + 80);
  *(_QWORD *)(v15 + 88) = v19;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v15 + 96) = *(_OWORD *)(v16 + 96);
  swift_release();
  v20 = (_OWORD *)(v16 + 112);
  if (*(_QWORD *)(v15 + 120) == 1)
    goto LABEL_4;
  v21 = *(_QWORD *)(v16 + 120);
  if (v21 == 1)
  {
    sub_1AD0256E4(v15 + 112);
LABEL_4:
    *(_OWORD *)(v15 + 112) = *v20;
    goto LABEL_6;
  }
  *(_QWORD *)(v15 + 112) = *(_QWORD *)v20;
  *(_QWORD *)(v15 + 120) = v21;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(v15 + 128) = *(_OWORD *)(v16 + 128);
  swift_release();
  v22 = (_QWORD *)(v16 + 144);
  if (*(_QWORD *)(v15 + 152) != 1)
  {
    v23 = *(_QWORD *)(v16 + 152);
    if (v23 != 1)
    {
      *(_QWORD *)(v15 + 144) = *v22;
      *(_QWORD *)(v15 + 152) = v23;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_1AD0256E4(v15 + 144);
  }
  *(_OWORD *)(v15 + 144) = *(_OWORD *)v22;
LABEL_11:
  *(_QWORD *)(v15 + 160) = *(_QWORD *)(v16 + 160);
  *(_BYTE *)(v15 + 168) = *(_BYTE *)(v16 + 168);
  *(_QWORD *)(v15 + 176) = *(_QWORD *)(v16 + 176);
  *(_BYTE *)(v15 + 184) = *(_BYTE *)(v16 + 184);
  *(_QWORD *)(v15 + 192) = *(_QWORD *)(v16 + 192);
  *(_BYTE *)(v15 + 200) = *(_BYTE *)(v16 + 200);
  *(_BYTE *)(v15 + 224) = *(_BYTE *)(v16 + 224);
  *(_OWORD *)(v15 + 208) = *(_OWORD *)(v16 + 208);
  v24 = *(_QWORD *)(v16 + 232);
  *(_BYTE *)(v15 + 240) = *(_BYTE *)(v16 + 240);
  *(_QWORD *)(v15 + 232) = v24;
  *(_QWORD *)(v15 + 248) = *(_QWORD *)(v16 + 248);
  *(_BYTE *)(v15 + 256) = *(_BYTE *)(v16 + 256);
  *(_BYTE *)(v15 + 257) = *(_BYTE *)(v16 + 257);
  *(_QWORD *)(v15 + 264) = *(_QWORD *)(v16 + 264);
  *(_BYTE *)(v15 + 272) = *(_BYTE *)(v16 + 272);
  v25 = *(int *)(a3 + 24);
  v26 = (_QWORD *)(a1 + v25);
  v27 = (uint64_t *)(a2 + v25);
  v29 = *v27;
  v28 = v27[1];
  *v26 = v29;
  v26[1] = v28;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD58AA90()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD58AA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = type metadata accessor for Metadata();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1AD58AB18()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD58AB24(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = type metadata accessor for Metadata();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  return result;
}

uint64_t sub_1AD58AB9C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Metadata();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

__n128 sub_1AD58AC18@<Q0>(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35,char a36,char a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,__n128 *a46)
{
  char v47;
  int *v48;
  _QWORD *v49;
  uint64_t v50;
  _QWORD *v51;
  _QWORD *v52;
  _QWORD *v53;
  _QWORD *v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  _QWORD *v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  __n128 *v65;
  __n128 result;
  unint64_t v68;
  __n128 v69;

  *(_QWORD *)a9 = a1;
  *(_BYTE *)(a9 + 8) = a2 & 1;
  *(_BYTE *)(a9 + 9) = *a3;
  *(_QWORD *)(a9 + 16) = a4;
  v47 = *a6;
  *(_QWORD *)(a9 + 24) = a5;
  *(_BYTE *)(a9 + 32) = v47;
  *(_QWORD *)(a9 + 40) = a7;
  v69 = *a46;
  v68 = a46[1].n128_u64[0];
  v48 = (int *)type metadata accessor for SMSMessage();
  sub_1AD58D958(a8, a9 + v48[9]);
  v49 = (_QWORD *)(a9 + v48[10]);
  *v49 = a10;
  v49[1] = a11;
  v50 = a9 + v48[11];
  *(_QWORD *)v50 = a12;
  *(_BYTE *)(v50 + 8) = a13 & 1;
  v51 = (_QWORD *)(a9 + v48[12]);
  *v51 = a14;
  v51[1] = a15;
  v52 = (_QWORD *)(a9 + v48[13]);
  *v52 = a16;
  v52[1] = a17;
  v53 = (_QWORD *)(a9 + v48[14]);
  *v53 = a18;
  v53[1] = a19;
  v54 = (_QWORD *)(a9 + v48[15]);
  *v54 = a20;
  v54[1] = a21;
  v55 = (_QWORD *)(a9 + v48[16]);
  *v55 = a22;
  v55[1] = a23;
  v56 = (_QWORD *)(a9 + v48[17]);
  *v56 = a24;
  v56[1] = a25;
  v57 = a9 + v48[18];
  *(_QWORD *)v57 = a26;
  *(_BYTE *)(v57 + 8) = a27 & 1;
  v58 = (_QWORD *)(a9 + v48[19]);
  *v58 = a28;
  v58[1] = a29;
  v59 = (_QWORD *)(a9 + v48[20]);
  *v59 = a30;
  v59[1] = a31;
  v60 = (_QWORD *)(a9 + v48[21]);
  *v60 = a32;
  v60[1] = a33;
  *(_QWORD *)(a9 + v48[22]) = a34;
  *(_BYTE *)(a9 + v48[23]) = a35;
  *(_BYTE *)(a9 + v48[24]) = a36;
  *(_BYTE *)(a9 + v48[25]) = a37;
  v61 = (_QWORD *)(a9 + v48[26]);
  *v61 = a38;
  v61[1] = a39;
  v62 = (_QWORD *)(a9 + v48[27]);
  *v62 = a40;
  v62[1] = a41;
  v63 = (_QWORD *)(a9 + v48[28]);
  *v63 = a42;
  v63[1] = a43;
  v64 = (_QWORD *)(a9 + v48[29]);
  *v64 = a44;
  v64[1] = a45;
  v65 = (__n128 *)(a9 + v48[30]);
  v65[1].n128_u64[0] = v68;
  result = v69;
  *v65 = v69;
  return result;
}

uint64_t SMSMessage.FilterSubCategoryType.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t SMSMessage.spamCategory.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t SMSMessage.spamCategory.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*SMSMessage.spamCategory.modify())()
{
  return nullsub_1;
}

void SMSMessage.filterSubCategory.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 9);
}

_BYTE *SMSMessage.filterSubCategory.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = *result;
  return result;
}

uint64_t (*SMSMessage.filterSubCategory.modify())()
{
  return nullsub_1;
}

uint64_t SMSMessage.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*SMSMessage.version.modify())()
{
  return nullsub_1;
}

void SMSMessage.type.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *SMSMessage.type.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*SMSMessage.type.modify())()
{
  return nullsub_1;
}

uint64_t SMSMessage.recipients.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t SMSMessage.recipients.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = a1;
  return result;
}

uint64_t (*SMSMessage.recipients.modify())()
{
  return nullsub_1;
}

uint64_t SMSMessage.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SMSMessage() + 36);
  return sub_1AD0E48B8(v3, a1);
}

uint64_t type metadata accessor for SMSMessage()
{
  uint64_t result;

  result = qword_1ED2E2080;
  if (!qword_1ED2E2080)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t SMSMessage.date.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for SMSMessage() + 36);
  return sub_1AD0E4930(a1, v3);
}

uint64_t (*SMSMessage.date.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.sender.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.sender.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 40));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.sender.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.iMessageCapability.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 44));
}

uint64_t SMSMessage.iMessageCapability.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for SMSMessage();
  v6 = v2 + *(int *)(result + 44);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SMSMessage.iMessageCapability.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.serviceCenter.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.serviceCenter.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 48));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.serviceCenter.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.originatedDeviceNumber.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.originatedDeviceNumber.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 52));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.originatedDeviceNumber.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.originatedDeviceEmail.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 56));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.originatedDeviceEmail.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 56));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.originatedDeviceEmail.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.originatedDeviceSIM.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 60));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.originatedDeviceSIM.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 60));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.originatedDeviceSIM.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.subject.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.subject.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 64));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.subject.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.contentType.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.contentType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 68));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.contentType.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.replaceMessage.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 72));
}

uint64_t SMSMessage.replaceMessage.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for SMSMessage();
  v6 = v2 + *(int *)(result + 72);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SMSMessage.replaceMessage.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.countryCode.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.countryCode.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 76));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.countryCode.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.GUID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.GUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 80));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.GUID.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.fallbackHash.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 84));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.fallbackHash.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 84));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.fallbackHash.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.items.getter()
{
  type metadata accessor for SMSMessage();
  return swift_bridgeObjectRetain();
}

uint64_t SMSMessage.items.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for SMSMessage() + 88);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*SMSMessage.items.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.trackMessage.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 92));
}

uint64_t SMSMessage.trackMessage.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SMSMessage();
  *(_BYTE *)(v1 + *(int *)(result + 92)) = a1;
  return result;
}

uint64_t (*SMSMessage.trackMessage.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.sendEnabled.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 96));
}

uint64_t SMSMessage.sendEnabled.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SMSMessage();
  *(_BYTE *)(v1 + *(int *)(result + 96)) = a1;
  return result;
}

uint64_t (*SMSMessage.sendEnabled.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.foundAppleGUID.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 100));
}

uint64_t SMSMessage.foundAppleGUID.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for SMSMessage();
  *(_BYTE *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*SMSMessage.foundAppleGUID.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.groupID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 104));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.groupID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 104));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.groupID.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.originalGroupID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 108));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.originalGroupID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 108));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.originalGroupID.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.displayName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 112));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.displayName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 112));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.displayName.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.originatedDeviceUniqueID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for SMSMessage() + 116));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.originatedDeviceUniqueID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for SMSMessage() + 116));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SMSMessage.originatedDeviceUniqueID.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

uint64_t SMSMessage.smsFilteringSettings.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SMSMessage() + 120));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  *a1 = *v3;
  a1[1] = v5;
  a1[2] = v6;
  return sub_1AD003E48(v4, v5);
}

__n128 SMSMessage.smsFilteringSettings.setter(__n128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __n128 result;
  __n128 v5;

  v5 = *a1;
  v2 = a1[1].n128_i64[0];
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for SMSMessage() + 120));
  sub_1AD003F24(*v3, v3[1]);
  result = v5;
  *(__n128 *)v3 = v5;
  v3[2] = v2;
  return result;
}

uint64_t (*SMSMessage.smsFilteringSettings.modify())(_QWORD)
{
  type metadata accessor for SMSMessage();
  return nullsub_1;
}

BlastDoor::SMSMessage::SMSType_optional __swiftcall SMSMessage.SMSType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (BlastDoor::SMSMessage::SMSType_optional)rawValue;
}

BlastDoor::SMSMessage::SMSType_optional sub_1AD58BE0C(Swift::Int *a1)
{
  return SMSMessage.SMSType.init(rawValue:)(*a1);
}

uint64_t sub_1AD58BE14()
{
  sub_1AD58D914();
  return sub_1AD63B930();
}

uint64_t sub_1AD58BE70()
{
  sub_1AD58D914();
  return sub_1AD63B8D0();
}

BlastDoor::SMSMessage::FilterSubCategoryType_optional __swiftcall SMSMessage.FilterSubCategoryType.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 13;
  if ((unint64_t)rawValue < 0xD)
    v2 = rawValue;
  *v1 = v2;
  return (BlastDoor::SMSMessage::FilterSubCategoryType_optional)rawValue;
}

BlastDoor::SMSMessage::FilterSubCategoryType_optional sub_1AD58BED0(Swift::Int *a1)
{
  return SMSMessage.FilterSubCategoryType.init(rawValue:)(*a1);
}

uint64_t sub_1AD58BED8()
{
  sub_1AD58D8D0();
  return sub_1AD63B930();
}

uint64_t sub_1AD58BF34()
{
  sub_1AD58D8D0();
  return sub_1AD63B8D0();
}

uint64_t SMSMessage.SMSFilteringSettings.filterExtensionName.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SMSMessage.SMSFilteringSettings.filterExtensionName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SMSMessage.SMSFilteringSettings.filterExtensionName.modify())()
{
  return nullsub_1;
}

uint64_t SMSMessage.SMSFilteringSettings.smsFilterCapabilitiesOptions.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t SMSMessage.SMSFilteringSettings.smsFilterCapabilitiesOptions.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*SMSMessage.SMSFilteringSettings.smsFilterCapabilitiesOptions.modify())()
{
  return nullsub_1;
}

uint64_t SMSMessage.debugDescription.getter()
{
  sub_1AD63BD38();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63BE04();
  sub_1AD63B810();
  type metadata accessor for SMSMessage();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E3198);
  sub_1AD63B798();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  return 0;
}

unint64_t sub_1AD58C148()
{
  unint64_t result;

  result = qword_1EECDE3C0;
  if (!qword_1EECDE3C0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for SMSMessage.SMSType, &type metadata for SMSMessage.SMSType);
    atomic_store(result, (unint64_t *)&qword_1EECDE3C0);
  }
  return result;
}

uint64_t sub_1AD58C18C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28C928, (uint64_t (*)(void))sub_1AD28C9F4);
}

unint64_t sub_1AD58C1A4()
{
  unint64_t result;

  result = qword_1EECDE3C8;
  if (!qword_1EECDE3C8)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for SMSMessage.FilterSubCategoryType, &type metadata for SMSMessage.FilterSubCategoryType);
    atomic_store(result, (unint64_t *)&qword_1EECDE3C8);
  }
  return result;
}

uint64_t sub_1AD58C1E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28C8E4, (uint64_t (*)(void))sub_1AD28C9B0);
}

uint64_t sub_1AD58C1FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28C96C, (uint64_t (*)(void))sub_1AD28CA38);
}

uint64_t sub_1AD58C210(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD58C25C(&qword_1ED2E2110, (uint64_t)&protocol conformance descriptor for SMSMessage);
  result = sub_1AD58C25C(&qword_1ED2E2108, (uint64_t)&protocol conformance descriptor for SMSMessage);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD58C25C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for SMSMessage();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for SMSMessage(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int (*v13)(const void *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  _QWORD *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  _QWORD *v67;
  uint64_t v68;
  _QWORD *v69;
  _QWORD *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    v7 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v7;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v8 = a3[9];
    v9 = (void *)(a1 + v8);
    v10 = (char *)a2 + v8;
    *(_QWORD *)(a1 + 40) = a2[5];
    v11 = sub_1AD63B03C();
    v12 = *(_QWORD *)(v11 - 8);
    v13 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 16))(v9, v10, v11);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
    }
    v16 = a3[10];
    v17 = a3[11];
    v18 = (_QWORD *)((char *)v4 + v16);
    v19 = (uint64_t *)((char *)a2 + v16);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (char *)v4 + v17;
    v22 = (uint64_t)a2 + v17;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = *(_BYTE *)(v22 + 8);
    v23 = a3[12];
    v24 = a3[13];
    v25 = (_QWORD *)((char *)v4 + v23);
    v26 = (uint64_t *)((char *)a2 + v23);
    v83 = v26[1];
    *v25 = *v26;
    v25[1] = v83;
    v27 = (_QWORD *)((char *)v4 + v24);
    v28 = (uint64_t *)((char *)a2 + v24);
    v84 = v28[1];
    *v27 = *v28;
    v27[1] = v84;
    v29 = a3[14];
    v30 = a3[15];
    v31 = (_QWORD *)((char *)v4 + v29);
    v32 = (uint64_t *)((char *)a2 + v29);
    v81 = v32[1];
    *v31 = *v32;
    v31[1] = v81;
    v33 = (_QWORD *)((char *)v4 + v30);
    v34 = (uint64_t *)((char *)a2 + v30);
    v82 = v34[1];
    *v33 = *v34;
    v33[1] = v82;
    v35 = a3[16];
    v36 = a3[17];
    v37 = (_QWORD *)((char *)v4 + v35);
    v38 = (uint64_t *)((char *)a2 + v35);
    v79 = v38[1];
    *v37 = *v38;
    v37[1] = v79;
    v39 = (_QWORD *)((char *)v4 + v36);
    v40 = (uint64_t *)((char *)a2 + v36);
    v80 = v40[1];
    *v39 = *v40;
    v39[1] = v80;
    v41 = a3[18];
    v42 = a3[19];
    v43 = (char *)v4 + v41;
    v44 = (uint64_t)a2 + v41;
    *(_QWORD *)v43 = *(_QWORD *)v44;
    v43[8] = *(_BYTE *)(v44 + 8);
    v45 = (_QWORD *)((char *)v4 + v42);
    v46 = (uint64_t *)((char *)a2 + v42);
    v78 = v46[1];
    *v45 = *v46;
    v45[1] = v78;
    v47 = a3[20];
    v48 = a3[21];
    v49 = (_QWORD *)((char *)v4 + v47);
    v50 = (uint64_t *)((char *)a2 + v47);
    v51 = v50[1];
    *v49 = *v50;
    v49[1] = v51;
    v52 = (_QWORD *)((char *)v4 + v48);
    v53 = (uint64_t *)((char *)a2 + v48);
    v77 = v53[1];
    *v52 = *v53;
    v52[1] = v77;
    v54 = a3[23];
    *(_QWORD *)((char *)v4 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
    *((_BYTE *)v4 + v54) = *((_BYTE *)a2 + v54);
    v55 = a3[25];
    *((_BYTE *)v4 + a3[24]) = *((_BYTE *)a2 + a3[24]);
    *((_BYTE *)v4 + v55) = *((_BYTE *)a2 + v55);
    v56 = a3[26];
    v57 = a3[27];
    v58 = (_QWORD *)((char *)v4 + v56);
    v59 = (uint64_t *)((char *)a2 + v56);
    v60 = v59[1];
    *v58 = *v59;
    v58[1] = v60;
    v61 = (_QWORD *)((char *)v4 + v57);
    v62 = (uint64_t *)((char *)a2 + v57);
    v63 = v62[1];
    *v61 = *v62;
    v61[1] = v63;
    v64 = a3[28];
    v65 = a3[29];
    v66 = (_QWORD *)((char *)v4 + v64);
    v67 = (uint64_t *)((char *)a2 + v64);
    v68 = v67[1];
    *v66 = *v67;
    v66[1] = v68;
    v69 = (_QWORD *)((char *)v4 + v65);
    v70 = (uint64_t *)((char *)a2 + v65);
    v71 = v70[1];
    *v69 = *v70;
    v69[1] = v71;
    v72 = a3[30];
    v73 = (char *)v4 + v72;
    v74 = (uint64_t)a2 + v72;
    v75 = *(uint64_t *)((char *)a2 + v72 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v75 == 1)
    {
      *(_OWORD *)v73 = *(_OWORD *)v74;
      *((_QWORD *)v73 + 2) = *(_QWORD *)(v74 + 16);
    }
    else
    {
      *(_QWORD *)v73 = *(_QWORD *)v74;
      *((_QWORD *)v73 + 1) = v75;
      *((_QWORD *)v73 + 2) = *(_QWORD *)(v74 + 16);
      swift_bridgeObjectRetain();
    }
  }
  return v4;
}

uint64_t destroy for SMSMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  v5 = sub_1AD63B03C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = *(_QWORD *)(a1 + *(int *)(a2 + 120) + 8);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for SMSMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(const void *, uint64_t, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  _QWORD *v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  _QWORD *v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  _QWORD *v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  _QWORD *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  _QWORD *v57;
  uint64_t v58;
  _QWORD *v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  _QWORD *v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = a3[9];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v10 = sub_1AD63B03C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v14 = a3[10];
  v15 = a3[11];
  v16 = (_QWORD *)(a1 + v14);
  v17 = (_QWORD *)(a2 + v14);
  v18 = v17[1];
  *v16 = *v17;
  v16[1] = v18;
  v19 = a1 + v15;
  v20 = a2 + v15;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  v21 = a3[12];
  v22 = a3[13];
  v23 = (_QWORD *)(a1 + v21);
  v24 = (_QWORD *)(a2 + v21);
  v81 = v24[1];
  *v23 = *v24;
  v23[1] = v81;
  v25 = (_QWORD *)(a1 + v22);
  v26 = (_QWORD *)(a2 + v22);
  v82 = v26[1];
  *v25 = *v26;
  v25[1] = v82;
  v27 = a3[14];
  v28 = a3[15];
  v29 = (_QWORD *)(a1 + v27);
  v30 = (_QWORD *)(a2 + v27);
  v79 = v30[1];
  *v29 = *v30;
  v29[1] = v79;
  v31 = (_QWORD *)(a1 + v28);
  v32 = (_QWORD *)(a2 + v28);
  v80 = v32[1];
  *v31 = *v32;
  v31[1] = v80;
  v33 = a3[16];
  v34 = a3[17];
  v35 = (_QWORD *)(a1 + v33);
  v36 = (_QWORD *)(a2 + v33);
  v77 = v36[1];
  *v35 = *v36;
  v35[1] = v77;
  v37 = (_QWORD *)(a1 + v34);
  v38 = (_QWORD *)(a2 + v34);
  v78 = v38[1];
  *v37 = *v38;
  v37[1] = v78;
  v39 = a3[18];
  v40 = a3[19];
  v41 = a1 + v39;
  v42 = a2 + v39;
  *(_QWORD *)v41 = *(_QWORD *)v42;
  *(_BYTE *)(v41 + 8) = *(_BYTE *)(v42 + 8);
  v43 = (_QWORD *)(a1 + v40);
  v44 = (_QWORD *)(a2 + v40);
  v76 = v44[1];
  *v43 = *v44;
  v43[1] = v76;
  v45 = a3[20];
  v46 = a3[21];
  v47 = (_QWORD *)(a1 + v45);
  v48 = (_QWORD *)(a2 + v45);
  v49 = v48[1];
  *v47 = *v48;
  v47[1] = v49;
  v50 = (_QWORD *)(a1 + v46);
  v51 = (_QWORD *)(a2 + v46);
  v75 = v51[1];
  *v50 = *v51;
  v50[1] = v75;
  v52 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v52) = *(_BYTE *)(a2 + v52);
  v53 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v53) = *(_BYTE *)(a2 + v53);
  v54 = a3[26];
  v55 = a3[27];
  v56 = (_QWORD *)(a1 + v54);
  v57 = (_QWORD *)(a2 + v54);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  v59 = (_QWORD *)(a1 + v55);
  v60 = (_QWORD *)(a2 + v55);
  v61 = v60[1];
  *v59 = *v60;
  v59[1] = v61;
  v62 = a3[28];
  v63 = a3[29];
  v64 = (_QWORD *)(a1 + v62);
  v65 = (_QWORD *)(a2 + v62);
  v66 = v65[1];
  *v64 = *v65;
  v64[1] = v66;
  v67 = (_QWORD *)(a1 + v63);
  v68 = (_QWORD *)(a2 + v63);
  v69 = v68[1];
  *v67 = *v68;
  v67[1] = v69;
  v70 = a3[30];
  v71 = a1 + v70;
  v72 = a2 + v70;
  v73 = *(_QWORD *)(a2 + v70 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v73 == 1)
  {
    *(_OWORD *)v71 = *(_OWORD *)v72;
    *(_QWORD *)(v71 + 16) = *(_QWORD *)(v72 + 16);
  }
  else
  {
    *(_QWORD *)v71 = *(_QWORD *)v72;
    *(_QWORD *)(v71 + 8) = v73;
    *(_QWORD *)(v71 + 16) = *(_QWORD *)(v72 + 16);
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for SMSMessage(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  _QWORD *v36;
  _QWORD *v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  _QWORD *v52;
  _QWORD *v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  _QWORD *v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  __int128 *v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  uint64_t v72;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  *(_BYTE *)(a1 + 9) = *((_BYTE *)a2 + 9);
  *(_QWORD *)(a1 + 16) = a2[2];
  *(_QWORD *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
  *(_QWORD *)(a1 + 40) = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[9];
  v8 = (void *)(a1 + v7);
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63B03C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
LABEL_7:
  v16 = a3[10];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)((char *)a2 + v16);
  *v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v19 = a3[11];
  v20 = a1 + v19;
  v21 = (uint64_t *)((char *)a2 + v19);
  v22 = *v21;
  *(_BYTE *)(v20 + 8) = *((_BYTE *)v21 + 8);
  *(_QWORD *)v20 = v22;
  v23 = a3[12];
  v24 = (_QWORD *)(a1 + v23);
  v25 = (uint64_t *)((char *)a2 + v23);
  *v24 = *v25;
  v24[1] = v25[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v26 = a3[13];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (uint64_t *)((char *)a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = a3[14];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)((char *)a2 + v29);
  *v30 = *v31;
  v30[1] = v31[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v32 = a3[15];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)((char *)a2 + v32);
  *v33 = *v34;
  v33[1] = v34[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v35 = a3[16];
  v36 = (_QWORD *)(a1 + v35);
  v37 = (uint64_t *)((char *)a2 + v35);
  *v36 = *v37;
  v36[1] = v37[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = a3[17];
  v39 = (_QWORD *)(a1 + v38);
  v40 = (uint64_t *)((char *)a2 + v38);
  *v39 = *v40;
  v39[1] = v40[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v41 = a3[18];
  v42 = a1 + v41;
  v43 = (uint64_t *)((char *)a2 + v41);
  v44 = *v43;
  *(_BYTE *)(v42 + 8) = *((_BYTE *)v43 + 8);
  *(_QWORD *)v42 = v44;
  v45 = a3[19];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (uint64_t *)((char *)a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = a3[20];
  v49 = (_QWORD *)(a1 + v48);
  v50 = (uint64_t *)((char *)a2 + v48);
  *v49 = *v50;
  v49[1] = v50[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v51 = a3[21];
  v52 = (_QWORD *)(a1 + v51);
  v53 = (uint64_t *)((char *)a2 + v51);
  *v52 = *v53;
  v52[1] = v53[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[22]) = *(uint64_t *)((char *)a2 + a3[22]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[23]) = *((_BYTE *)a2 + a3[23]);
  *(_BYTE *)(a1 + a3[24]) = *((_BYTE *)a2 + a3[24]);
  *(_BYTE *)(a1 + a3[25]) = *((_BYTE *)a2 + a3[25]);
  v54 = a3[26];
  v55 = (_QWORD *)(a1 + v54);
  v56 = (uint64_t *)((char *)a2 + v54);
  *v55 = *v56;
  v55[1] = v56[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v57 = a3[27];
  v58 = (_QWORD *)(a1 + v57);
  v59 = (uint64_t *)((char *)a2 + v57);
  *v58 = *v59;
  v58[1] = v59[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v60 = a3[28];
  v61 = (_QWORD *)(a1 + v60);
  v62 = (uint64_t *)((char *)a2 + v60);
  *v61 = *v62;
  v61[1] = v62[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v63 = a3[29];
  v64 = (_QWORD *)(a1 + v63);
  v65 = (uint64_t *)((char *)a2 + v63);
  *v64 = *v65;
  v64[1] = v65[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v66 = a3[30];
  v67 = a1 + v66;
  v68 = (__int128 *)((char *)a2 + v66);
  v69 = *(_QWORD *)(a1 + v66 + 8);
  v70 = *((_QWORD *)v68 + 1);
  if (v69 == 1)
  {
    if (v70 == 1)
    {
      v71 = *v68;
      *(_QWORD *)(v67 + 16) = *((_QWORD *)v68 + 2);
      *(_OWORD *)v67 = v71;
    }
    else
    {
      *(_QWORD *)v67 = *(_QWORD *)v68;
      *(_QWORD *)(v67 + 8) = *((_QWORD *)v68 + 1);
      *(_QWORD *)(v67 + 16) = *((_QWORD *)v68 + 2);
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    if (v70 == 1)
    {
      sub_1AD461C94(v67);
      v72 = *((_QWORD *)v68 + 2);
      *(_OWORD *)v67 = *v68;
    }
    else
    {
      *(_QWORD *)v67 = *(_QWORD *)v68;
      *(_QWORD *)(v67 + 8) = *((_QWORD *)v68 + 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v72 = *((_QWORD *)v68 + 2);
    }
    *(_QWORD *)(v67 + 16) = v72;
  }
  return a1;
}

uint64_t initializeWithTake for SMSMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  void *v7;
  const void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  v6 = a3[9];
  v7 = (void *)(a1 + v6);
  v8 = (const void *)(a2 + v6);
  v9 = sub_1AD63B03C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  v13 = a1 + v12;
  v14 = a2 + v12;
  *(_QWORD *)v13 = *(_QWORD *)v14;
  *(_BYTE *)(v13 + 8) = *(_BYTE *)(v14 + 8);
  v15 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v15) = *(_OWORD *)(a2 + v15);
  v16 = a3[15];
  *(_OWORD *)(a1 + a3[14]) = *(_OWORD *)(a2 + a3[14]);
  *(_OWORD *)(a1 + v16) = *(_OWORD *)(a2 + v16);
  v17 = a3[17];
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  *(_OWORD *)(a1 + v17) = *(_OWORD *)(a2 + v17);
  v18 = a3[18];
  v19 = a3[19];
  v20 = a1 + v18;
  v21 = a2 + v18;
  *(_QWORD *)v20 = *(_QWORD *)v21;
  *(_BYTE *)(v20 + 8) = *(_BYTE *)(v21 + 8);
  *(_OWORD *)(a1 + v19) = *(_OWORD *)(a2 + v19);
  v22 = a3[21];
  *(_OWORD *)(a1 + a3[20]) = *(_OWORD *)(a2 + a3[20]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  v23 = a3[23];
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  *(_BYTE *)(a1 + v23) = *(_BYTE *)(a2 + v23);
  v24 = a3[25];
  *(_BYTE *)(a1 + a3[24]) = *(_BYTE *)(a2 + a3[24]);
  *(_BYTE *)(a1 + v24) = *(_BYTE *)(a2 + v24);
  v25 = a3[27];
  *(_OWORD *)(a1 + a3[26]) = *(_OWORD *)(a2 + a3[26]);
  *(_OWORD *)(a1 + v25) = *(_OWORD *)(a2 + v25);
  v26 = a3[29];
  *(_OWORD *)(a1 + a3[28]) = *(_OWORD *)(a2 + a3[28]);
  *(_OWORD *)(a1 + v26) = *(_OWORD *)(a2 + v26);
  v27 = a3[30];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_OWORD *)v28 = *(_OWORD *)v29;
  *(_QWORD *)(v28 + 16) = *(_QWORD *)(v29 + 16);
  return a1;
}

uint64_t assignWithTake for SMSMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(void *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD *v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _QWORD *v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  uint64_t *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  _QWORD *v95;
  uint64_t v96;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  v7 = a3[9];
  v8 = (void *)(a1 + v7);
  v9 = (void *)(a2 + v7);
  v10 = sub_1AD63B03C();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (v13)
  {
    if (!v14)
    {
      (*(void (**)(void *, void *, uint64_t))(v11 + 32))(v8, v9, v10);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v14)
  {
    (*(void (**)(void *, uint64_t))(v11 + 8))(v8, v10);
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v11 + 40))(v8, v9, v10);
LABEL_7:
  v16 = a3[10];
  v17 = (_QWORD *)(a1 + v16);
  v18 = (uint64_t *)(a2 + v16);
  v20 = *v18;
  v19 = v18[1];
  *v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  v21 = a3[11];
  v22 = a3[12];
  v23 = a1 + v21;
  v24 = a2 + v21;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  v25 = (_QWORD *)(a1 + v22);
  v26 = (uint64_t *)(a2 + v22);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = a3[13];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (uint64_t *)(a2 + v29);
  v33 = *v31;
  v32 = v31[1];
  *v30 = v33;
  v30[1] = v32;
  swift_bridgeObjectRelease();
  v34 = a3[14];
  v35 = (_QWORD *)(a1 + v34);
  v36 = (uint64_t *)(a2 + v34);
  v38 = *v36;
  v37 = v36[1];
  *v35 = v38;
  v35[1] = v37;
  swift_bridgeObjectRelease();
  v39 = a3[15];
  v40 = (_QWORD *)(a1 + v39);
  v41 = (uint64_t *)(a2 + v39);
  v43 = *v41;
  v42 = v41[1];
  *v40 = v43;
  v40[1] = v42;
  swift_bridgeObjectRelease();
  v44 = a3[16];
  v45 = (_QWORD *)(a1 + v44);
  v46 = (uint64_t *)(a2 + v44);
  v48 = *v46;
  v47 = v46[1];
  *v45 = v48;
  v45[1] = v47;
  swift_bridgeObjectRelease();
  v49 = a3[17];
  v50 = (_QWORD *)(a1 + v49);
  v51 = (uint64_t *)(a2 + v49);
  v53 = *v51;
  v52 = v51[1];
  *v50 = v53;
  v50[1] = v52;
  swift_bridgeObjectRelease();
  v54 = a3[18];
  v55 = a3[19];
  v56 = a1 + v54;
  v57 = a2 + v54;
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_BYTE *)(v56 + 8) = *(_BYTE *)(v57 + 8);
  v58 = (_QWORD *)(a1 + v55);
  v59 = (uint64_t *)(a2 + v55);
  v61 = *v59;
  v60 = v59[1];
  *v58 = v61;
  v58[1] = v60;
  swift_bridgeObjectRelease();
  v62 = a3[20];
  v63 = (_QWORD *)(a1 + v62);
  v64 = (uint64_t *)(a2 + v62);
  v66 = *v64;
  v65 = v64[1];
  *v63 = v66;
  v63[1] = v65;
  swift_bridgeObjectRelease();
  v67 = a3[21];
  v68 = (_QWORD *)(a1 + v67);
  v69 = (uint64_t *)(a2 + v67);
  v71 = *v69;
  v70 = v69[1];
  *v68 = v71;
  v68[1] = v70;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[22]) = *(_QWORD *)(a2 + a3[22]);
  swift_bridgeObjectRelease();
  v72 = a3[24];
  *(_BYTE *)(a1 + a3[23]) = *(_BYTE *)(a2 + a3[23]);
  *(_BYTE *)(a1 + v72) = *(_BYTE *)(a2 + v72);
  v73 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  v74 = (_QWORD *)(a1 + v73);
  v75 = (uint64_t *)(a2 + v73);
  v77 = *v75;
  v76 = v75[1];
  *v74 = v77;
  v74[1] = v76;
  swift_bridgeObjectRelease();
  v78 = a3[27];
  v79 = (_QWORD *)(a1 + v78);
  v80 = (uint64_t *)(a2 + v78);
  v82 = *v80;
  v81 = v80[1];
  *v79 = v82;
  v79[1] = v81;
  swift_bridgeObjectRelease();
  v83 = a3[28];
  v84 = (_QWORD *)(a1 + v83);
  v85 = (uint64_t *)(a2 + v83);
  v87 = *v85;
  v86 = v85[1];
  *v84 = v87;
  v84[1] = v86;
  swift_bridgeObjectRelease();
  v88 = a3[29];
  v89 = (_QWORD *)(a1 + v88);
  v90 = (uint64_t *)(a2 + v88);
  v92 = *v90;
  v91 = v90[1];
  *v89 = v92;
  v89[1] = v91;
  swift_bridgeObjectRelease();
  v93 = a3[30];
  v94 = (_QWORD *)(a1 + v93);
  v95 = (_QWORD *)(a2 + v93);
  if (*(_QWORD *)(a1 + v93 + 8) != 1)
  {
    v96 = v95[1];
    if (v96 != 1)
    {
      *v94 = *v95;
      v94[1] = v96;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1AD461C94((uint64_t)v94);
  }
  *(_OWORD *)v94 = *(_OWORD *)v95;
LABEL_12:
  v94[2] = v95[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for SMSMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD58D534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 36), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for SMSMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD58D5C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 24) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 36), a2, a2, v7);
  }
  return result;
}

void sub_1AD58D638()
{
  unint64_t v0;

  sub_1AD0E67F0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for SMSMessage.SMSType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD58D774 + 4 * byte_1AD694BA5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD58D7A8 + 4 * byte_1AD694BA0[v4]))();
}

uint64_t sub_1AD58D7A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD58D7B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD58D7B8);
  return result;
}

uint64_t sub_1AD58D7C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD58D7CCLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD58D7D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD58D7D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SMSMessage.SMSType()
{
  return &type metadata for SMSMessage.SMSType;
}

uint64_t storeEnumTagSinglePayload for SMSMessage.FilterSubCategoryType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1AD58D840 + 4 * byte_1AD694BAF[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1AD58D874 + 4 * byte_1AD694BAA[v4]))();
}

uint64_t sub_1AD58D874(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD58D87C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD58D884);
  return result;
}

uint64_t sub_1AD58D890(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD58D898);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1AD58D89C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD58D8A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SMSMessage.FilterSubCategoryType()
{
  return &type metadata for SMSMessage.FilterSubCategoryType;
}

ValueMetadata *type metadata accessor for SMSMessage.SMSFilteringSettings()
{
  return &type metadata for SMSMessage.SMSFilteringSettings;
}

unint64_t sub_1AD58D8D0()
{
  unint64_t result;

  result = qword_1EECDE3D0;
  if (!qword_1EECDE3D0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for SMSMessage.FilterSubCategoryType, &type metadata for SMSMessage.FilterSubCategoryType);
    atomic_store(result, (unint64_t *)&qword_1EECDE3D0);
  }
  return result;
}

unint64_t sub_1AD58D914()
{
  unint64_t result;

  result = qword_1ED2E2100;
  if (!qword_1ED2E2100)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for SMSMessage.SMSType, &type metadata for SMSMessage.SMSType);
    atomic_store(result, (unint64_t *)&qword_1ED2E2100);
  }
  return result;
}

uint64_t sub_1AD58D958(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1AD58D9A4(uint64_t a1@<X0>, unint64_t a2@<X1>, BOOL (**a3)()@<X8>)
{
  void *v3;
  id v7;
  id v8;
  id v9;
  _QWORD *v10;
  _QWORD *v11;
  char *v12;
  id v13;
  uint64_t v14;
  uint64_t ObjCClassFromMetadata;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  unint64_t *v28;
  unint64_t *v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  id v34[4];
  char *v35;

  v7 = objc_allocWithZone(MEMORY[0x1E0CB3710]);
  v8 = sub_1AD36E7D4();
  if (!v3)
  {
    v13 = v8;
    objc_msgSend(v13, sel__enableStrictSecureDecodingMode);
    objc_msgSend(v13, sel_setDecodingFailurePolicy_, 1);
    v14 = type metadata accessor for _BlastDoorCKShareParticipant();
    ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    v16 = (void *)sub_1AD63B744();
    objc_msgSend(v13, sel_setClass_forClassName_, ObjCClassFromMetadata, v16);

    sub_1AD32F2CC(0, &qword_1EECDB010);
    v17 = swift_getObjCClassFromMetadata();
    v18 = (void *)sub_1AD63B744();
    objc_msgSend(v13, sel_setClass_forClassName_, v17, v18);

    type metadata accessor for _BlastDoorCKUserIdentity();
    v19 = swift_getObjCClassFromMetadata();
    v20 = (void *)sub_1AD63B744();
    objc_msgSend(v13, sel_setClass_forClassName_, v19, v20);

    type metadata accessor for _BlastDoorCKRecordID();
    v21 = swift_getObjCClassFromMetadata();
    v22 = (void *)sub_1AD63B744();
    objc_msgSend(v13, sel_setClass_forClassName_, v21, v22);

    type metadata accessor for _BlastDoorCKRecordZoneID();
    v23 = swift_getObjCClassFromMetadata();
    v24 = (void *)sub_1AD63B744();
    objc_msgSend(v13, sel_setClass_forClassName_, v23, v24);

    type metadata accessor for _BlastDoorCKUserIdentityLookupInfo();
    v25 = swift_getObjCClassFromMetadata();
    v26 = (void *)sub_1AD63B744();
    objc_msgSend(v13, sel_setClass_forClassName_, v25, v26);

    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB0B8);
    v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1AD648160;
    *(_QWORD *)(v27 + 32) = v14;
    sub_1AD63B768();
    sub_1AD63BC24();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v34[3])
    {
      if ((swift_dynamicCast() & 1) != 0)
      {
        sub_1AD58E254(v35, a3);
LABEL_10:
        sub_1AD00412C(a1, a2);

        return;
      }
    }
    else
    {
      sub_1AD009758((uint64_t)v34, &qword_1EECDC5F0);
    }
    v31 = sub_1AD63BD8C();
    swift_allocError();
    v33 = v32;
    sub_1AD63BD68();
    (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v31 - 8) + 104))(v33, *MEMORY[0x1E0DEC458], v31);
    swift_willThrow();
    goto LABEL_10;
  }
  v34[0] = v3;
  v9 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
  sub_1AD32F2CC(0, (unint64_t *)&qword_1EECDB380);
  if ((swift_dynamicCast() & 1) != 0)
  {

    sub_1AD0DDA60();
    swift_allocError();
    v11 = v10;
    v12 = v35;
    sub_1AD601B20(v12, 0xD000000000000012, 0x80000001AD6B3270, v11);
    swift_willThrow();
    sub_1AD00412C(a1, a2);

  }
  else
  {

    sub_1AD0DDA60();
    swift_allocError();
    v29 = v28;
    v30 = v3;
    sub_1AD6015CC(v3, 0xD000000000000012, 0x80000001AD6B3270, v29);
    swift_willThrow();
    sub_1AD00412C(a1, a2);

  }
}

uint64_t sub_1AD58DEA4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int *v10;
  id v11;
  id v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  char v26;
  char v27;
  uint64_t v28;
  void *v29;
  char v30;
  char v31;
  id v32;
  void *v33;
  void *v34;
  void *v35;
  void *v36;
  uint64_t result;
  char v38;
  char v39;
  int v40;
  int v41;
  void *v42;
  id v43;
  void *v44;
  void *v45;
  uint64_t v46;
  char v47;
  char v48;
  char v49;
  char v50;
  char v51;
  char v52;
  char v53;

  v2 = v0;
  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v40 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for CloudKitSharingToken();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v40 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  sub_1ACFF64C0((uint64_t)v2 + v10[19], (uint64_t)v5, (uint64_t *)&unk_1EECDB370);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1AD009758((uint64_t)v5, (uint64_t *)&unk_1EECDB370);
    v11 = 0;
  }
  else
  {
    sub_1AD0CE1D8((uint64_t)v5, (uint64_t)v9);
    v12 = v9;
    v11 = sub_1AD4E2BB8();
    sub_1AD066230((uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
    if (v1)
      return (uint64_t)v12;
  }
  if (v2[3])
  {
    swift_bridgeObjectRetain();
    v13 = (void *)sub_1AD63B744();
    swift_bridgeObjectRelease();
    v14 = (void *)v2[7];
    if (!v14)
    {
LABEL_8:
      v43 = sub_1AD58EAD8();
      v17 = v10[10];
      v18 = v10[7];
      v19 = v10[8];
      v53 = *((_BYTE *)v2 + v10[9]);
      v52 = *((_BYTE *)v2 + v17);
      v20 = v10[12];
      v51 = *((_BYTE *)v2 + v10[11]);
      v50 = *((_BYTE *)v2 + v20);
      v21 = v10[14];
      v49 = *((_BYTE *)v2 + v10[13]);
      v22 = (char *)v2 + v10[15];
      v48 = *((_BYTE *)v2 + v21);
      v23 = *((_QWORD *)v22 + 1) >> 60;
      v40 = *((unsigned __int8 *)v2 + v18);
      v41 = *((unsigned __int8 *)v2 + v19);
      if (v23 == 15)
        v42 = 0;
      else
        v42 = (void *)sub_1AD63AFA0();
      v24 = *(_QWORD *)((char *)v2 + v10[16] + 8) >> 60;
      v45 = v11;
      if (v24 == 15)
        v25 = 0;
      else
        v25 = (void *)sub_1AD63AFA0();
      v44 = v13;
      v26 = *((_BYTE *)v2 + v10[17]);
      v27 = *((_BYTE *)v2 + v10[18]);
      v28 = *(_QWORD *)((char *)v2 + v10[20] + 8) >> 60;
      v46 = v1;
      if (v28 == 15)
        v29 = 0;
      else
        v29 = (void *)sub_1AD63AFA0();
      v30 = *((_BYTE *)v2 + v10[21]);
      v31 = *((_BYTE *)v2 + v10[22]);
      v47 = *((_BYTE *)v2 + v10[23]);
      v32 = objc_allocWithZone((Class)type metadata accessor for _BlastDoorCKShareParticipant());
      v39 = v30;
      v33 = v45;
      v38 = v27;
      v34 = v42;
      v36 = v43;
      v35 = v44;
      v12 = sub_1AD596600(v44, v14, v43, v40, v41, &v53, &v52, &v51, &v50, &v49, &v48, v42, v25, v26, v38, v45, v29, v39, v31,
              &v47);

      return (uint64_t)v12;
    }
    if (v14 != (void *)1)
    {
      v15 = v2[6];
      swift_bridgeObjectRetain();
      v16 = sub_1AD63B744();
      sub_1AD003F24(v15, (uint64_t)v14);
      v14 = (void *)v16;
      goto LABEL_8;
    }
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD58E254@<X0>(char *a1@<X0>, BOOL (**a2)()@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, uint64_t, uint64_t, uint64_t);
  void *v19;
  BOOL (*v20)();
  BOOL (*v21)();
  BOOL (*v22)();
  BOOL (*v23)();
  BOOL (*v24)();
  int v25;
  int v26;
  char v27;
  void *v28;
  id v29;
  uint64_t v30;
  unint64_t v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  void *v37;
  id v38;
  BOOL (*v39)();
  id v40;
  unint64_t v41;
  unint64_t v42;
  unsigned __int8 v43;
  unsigned __int8 v44;
  uint64_t v46;
  BOOL (*v47)();
  int v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  int v53;
  int v54;
  int v55;
  BOOL (*v56)();
  BOOL (**v57)();
  BOOL (*v58)();
  char v59;
  char v60;
  char v61;
  char v62;
  char v63;
  char v64;
  char v65;

  v5 = type metadata accessor for CloudKitUserIdentity(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v46 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v46 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v46 - v15;
  v17 = type metadata accessor for CloudKitSharingToken();
  v18 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56);
  v18(v16, 1, 1, v17);
  v19 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationToken];
  if (v19)
  {
    sub_1AD4E29DC(v19, v14);
    if (v2)
    {
LABEL_19:

      return sub_1AD009758((uint64_t)v16, (uint64_t *)&unk_1EECDB370);
    }
    sub_1AD009758((uint64_t)v16, (uint64_t *)&unk_1EECDB370);
    v18(v14, 0, 1, v17);
    sub_1AD00FF28((uint64_t)v14, (uint64_t)v16, (uint64_t *)&unk_1EECDB370);
  }
  v20 = (BOOL (*)())sub_1AD63B768();
  v22 = v21;
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_inviterID])
  {
    v58 = (BOOL (*)())sub_1AD63B768();
    v24 = v23;
  }
  else
  {
    v58 = 0;
    v24 = 0;
  }
  sub_1AD58E678((char *)*(id *)&a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_userIdentity], (uint64_t)v7);
  if (!v2)
  {
    v56 = v24;
    v25 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isCurrentUser];
    v26 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isOrgAdminUser];
    v65 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_role];
    v64 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_acceptanceStatus];
    v63 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_permission];
    v62 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalParticipantRole];
    v27 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalPermission];
    v61 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalAcceptanceStatus];
    v60 = v27;
    v28 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfo];
    v57 = a2;
    v54 = v26;
    v55 = v25;
    if (v28)
    {
      v29 = v28;
      v30 = sub_1AD63AFB8();
      v51 = v31;
      v52 = v30;

    }
    else
    {
      v51 = 0xF000000000000000;
      v52 = 0;
    }
    v32 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_encryptedPersonalInfo];
    if (v32)
    {
      v33 = v32;
      v34 = sub_1AD63AFB8();
      v49 = v35;
      v50 = v34;

    }
    else
    {
      v49 = 0xF000000000000000;
      v50 = 0;
    }
    LODWORD(v36) = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_createdInProcess];
    v53 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_acceptedInProcess];
    sub_1ACFF64C0((uint64_t)v16, (uint64_t)v11, (uint64_t *)&unk_1EECDB370);
    v37 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfoPublicKey];
    if (v37)
    {
      v38 = v37;
      v48 = v36;
      v47 = v20;
      v39 = v22;
      v40 = v38;
      v37 = (void *)sub_1AD63AFB8();
      v36 = v41;

      v42 = v36;
      v22 = v39;
      v20 = v47;
      LOBYTE(v36) = v48;
    }
    else
    {
      v42 = 0xF000000000000000;
    }
    v43 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_wantsNewInvitationToken];
    v44 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isAnonymousInvitedParticipant];
    v59 = a1[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationTokenStatus];
    sub_1AD17416C(v20, v22, v58, v56, (uint64_t)v7, v55, v54, (unsigned __int8 *)&v65, v57, (unsigned __int8 *)&v64, (unsigned __int8 *)&v63, (unsigned __int8 *)&v62, (unsigned __int8 *)&v61, (BOOL (*)())&v60, v52, v51, v50, v49, v36,
      v53,
      (uint64_t)v11,
      (uint64_t)v37,
      v42,
      v43,
      v44,
      (unsigned __int8 *)&v59);
    goto LABEL_19;
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return sub_1AD009758((uint64_t)v16, (uint64_t *)&unk_1EECDB370);
}

void sub_1AD58E678(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  void *v8;
  _BYTE *v9;
  void *v10;
  _OWORD *v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  id v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  unint64_t v20;
  void *v21;
  id v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  void *v26;
  id v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  int *v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t *v34;
  unint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  int v42;
  _OWORD v43[14];
  _OWORD v44[14];
  _OWORD v45[8];
  uint64_t v46;
  _OWORD v47[8];
  uint64_t v48;
  _QWORD v49[17];
  _BYTE v50[144];
  uint64_t v51;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD5977F0((uint64_t)v50);
  v8 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_userRecordID];
  if (v8)
  {
    sub_1AD58EEC8((char *)v8, (uint64_t)v47);
    if (v2)
    {

      return;
    }
    v45[6] = v47[6];
    v45[7] = v47[7];
    v46 = v48;
    v45[2] = v47[2];
    v45[3] = v47[3];
    v45[4] = v47[4];
    v45[5] = v47[5];
    v45[0] = v47[0];
    v45[1] = v47[1];
    nullsub_1(v45);
    v9 = v45;
  }
  else
  {
    v9 = v50;
  }
  sub_1AD00FF28((uint64_t)v9, (uint64_t)v49, (uint64_t *)&unk_1EECDE780);
  sub_1AD59780C(v47);
  v10 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_lookupInfo];
  if (v10)
  {
    sub_1AD58F00C((char *)v10, v44);
    if (v2)
    {

      sub_1AD2850C8(v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284BE4);
      return;
    }
    v43[10] = v44[10];
    v43[11] = v44[11];
    v43[12] = v44[12];
    v43[13] = v44[13];
    v43[6] = v44[6];
    v43[7] = v44[7];
    v43[8] = v44[8];
    v43[9] = v44[9];
    v43[2] = v44[2];
    v43[3] = v44[3];
    v43[4] = v44[4];
    v43[5] = v44[5];
    v43[0] = v44[0];
    v43[1] = v44[1];
    nullsub_1(v43);
    v11 = v43;
  }
  else
  {
    v11 = v47;
  }
  sub_1AD00FF28((uint64_t)v11, (uint64_t)v45, &qword_1EECD2A20);
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_nameComponents])
  {
    sub_1AD63AE20();
    v12 = sub_1AD63AE2C();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v7, 0, 1, v12);
  }
  else
  {
    v13 = sub_1AD63AE2C();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  }
  v14 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_contactIdentifiers];
  *(_QWORD *)&v44[0] = 0;
  v15 = v14;
  sub_1AD2850C8(v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD285124);
  sub_1AD4765E4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD476418);
  sub_1AD63B99C();
  v16 = *(_QWORD *)&v44[0];
  if (*(_QWORD *)&v44[0])
  {

    v17 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_publicSharingKey];
    if (v17)
    {
      v18 = v17;
      v19 = sub_1AD63AFB8();
      v40 = v20;
      v41 = v19;

    }
    else
    {
      v40 = 0xF000000000000000;
      v41 = 0;
    }
    v21 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_outOfNetworkPrivateKey];
    v51 = v16;
    if (v21)
    {
      v22 = v21;
      v23 = sub_1AD63AFB8();
      v38 = v24;
      v39 = v23;

    }
    else
    {
      v38 = 0xF000000000000000;
      v39 = 0;
    }
    v42 = a1[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_isCached];
    v25 = a1[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_hasICloudAccount];
    v26 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_encryptedPersonalInfo];
    if (v26)
    {
      v27 = v26;
      v26 = (void *)sub_1AD63AFB8();
      v29 = v28;
      sub_1AD2850C8(v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284BE4);
      sub_1AD4765E4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284D2C);

    }
    else
    {
      sub_1AD4765E4(v45, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284D2C);
      sub_1AD2850C8(v49, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284BE4);
      v29 = 0xF000000000000000;
    }
    v30 = *(_QWORD *)&a1[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_publicKeyVersion];

    sub_1AD00FF28((uint64_t)v49, a2, (uint64_t *)&unk_1EECDE780);
    v31 = (int *)type metadata accessor for CloudKitUserIdentity(0);
    sub_1AD00FF28((uint64_t)v7, a2 + v31[5], &qword_1EECD23F8);
    sub_1AD00FF28((uint64_t)v45, a2 + v31[6], &qword_1EECD2A20);
    *(_QWORD *)(a2 + v31[7]) = v51;
    v32 = (uint64_t *)(a2 + v31[8]);
    v33 = v40;
    *v32 = v41;
    v32[1] = v33;
    v34 = (uint64_t *)(a2 + v31[9]);
    v35 = v38;
    *v34 = v39;
    v34[1] = v35;
    *(_BYTE *)(a2 + v31[10]) = v42;
    *(_BYTE *)(a2 + v31[11]) = v25;
    v36 = (_QWORD *)(a2 + v31[12]);
    *v36 = v26;
    v36[1] = v29;
    *(_QWORD *)(a2 + v31[13]) = v30;
  }
  else
  {
    __break(1u);
  }
}

id sub_1AD58EAD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int *v5;
  int v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  void *v17;
  char v18;
  char v19;
  void *v20;
  uint64_t v21;
  id v22;
  void *v23;
  void *v24;
  id v25;
  uint64_t v27;
  void *v28;
  id v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  _BYTE v44[224];
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  _BYTE v59[136];
  _OWORD v60[8];
  uint64_t v61;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD00FF28(v0, (uint64_t)v59, (uint64_t *)&unk_1EECDE780);
  sub_1AD00FF28((uint64_t)v59, (uint64_t)v60, (uint64_t *)&unk_1EECDE780);
  if (sub_1AD0CD93C((uint64_t *)v60) == 1)
  {
    v29 = 0;
  }
  else
  {
    v51 = v60[6];
    v52 = v60[7];
    *(_QWORD *)&v53 = v61;
    v47 = v60[2];
    v48 = v60[3];
    v49 = v60[4];
    v50 = v60[5];
    v45 = v60[0];
    v46 = v60[1];
    v29 = sub_1AD58F2A0();
  }
  v5 = (int *)type metadata accessor for CloudKitUserIdentity(0);
  sub_1AD00FF28(v0 + v5[6], (uint64_t)v44, &qword_1EECD2A20);
  sub_1AD00FF28((uint64_t)v44, (uint64_t)&v45, &qword_1EECD2A20);
  v6 = sub_1AD0CD93C((uint64_t *)&v45);
  v7 = 0;
  if (v6 != 1)
  {
    v40 = v55;
    v41 = v56;
    v42 = v57;
    v43 = v58;
    v36 = v51;
    v37 = v52;
    v38 = v53;
    v39 = v54;
    v32 = v47;
    v33 = v48;
    v34 = v49;
    v35 = v50;
    v30 = v45;
    v31 = v46;
    v7 = (void *)sub_1AD58F484();
  }
  v28 = v7;
  sub_1ACFF64C0(v0 + v5[5], (uint64_t)v4, &qword_1EECD23F8);
  v8 = sub_1AD63AE2C();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v4, 1, v8) != 1)
  {
    v10 = (void *)sub_1AD63AE14();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v4, v8);
  }
  v11 = *(_QWORD *)(v0 + v5[7]);
  *(_QWORD *)&v30 = MEMORY[0x1E0DEE9D8];
  v12 = *(_QWORD *)(v11 + 16);
  if (v12)
  {
    swift_bridgeObjectRetain();
    v13 = v11 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1AD63B744();
      v14 = swift_bridgeObjectRelease();
      MEMORY[0x1AF44A674](v14);
      if (*(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v30 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1AD63B9D8();
      v13 += 16;
      sub_1AD63B9F0();
      sub_1AD63B9CC();
      --v12;
    }
    while (v12);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  sub_1AD32F2CC(0, &qword_1EECDE720);
  v15 = (void *)sub_1AD63B990();
  swift_bridgeObjectRelease();
  v16 = 0;
  if (*(_QWORD *)(v0 + v5[8] + 8) >> 60 != 15)
    v16 = (void *)sub_1AD63AFA0();
  if (*(_QWORD *)(v0 + v5[9] + 8) >> 60 == 15)
    v17 = 0;
  else
    v17 = (void *)sub_1AD63AFA0();
  v18 = *(_BYTE *)(v0 + v5[10]);
  v19 = *(_BYTE *)(v0 + v5[11]);
  if (*(_QWORD *)(v1 + v5[12] + 8) >> 60 == 15)
    v20 = 0;
  else
    v20 = (void *)sub_1AD63AFA0();
  v21 = *(_QWORD *)(v1 + v5[13]);
  v22 = objc_allocWithZone((Class)type metadata accessor for _BlastDoorCKUserIdentity());
  v27 = v21;
  v24 = v28;
  v23 = v29;
  v25 = sub_1AD5962EC(v29, v10, v28, v15, v16, v17, v18, v19, v20, v27);

  return v25;
}

__n128 sub_1AD58EEC8@<Q0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 result;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  _OWORD v22[8];
  uint64_t v23;
  uint64_t v24;

  v4 = sub_1AD63B768();
  v6 = v5;
  v7 = *(_QWORD *)&a1[OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_zoneID];
  v8 = sub_1AD63B768();
  v10 = v9;
  v11 = sub_1AD63B768();
  v13 = v12;
  if (*(_QWORD *)(v7 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_anonymousCKUserID))
  {
    v14 = sub_1AD63B768();
    v16 = v15;
  }
  else
  {
    v14 = 0;
    v16 = 0;
  }
  v17 = v24;
  sub_1AD1782C8(v4, v6, v8, v10, v11, v13, v14, v16, v22, *(_QWORD *)(v7 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_databaseScope));

  if (!v17)
  {
    v19 = v22[7];
    *(_OWORD *)(a2 + 96) = v22[6];
    *(_OWORD *)(a2 + 112) = v19;
    *(_QWORD *)(a2 + 128) = v23;
    v20 = v22[3];
    *(_OWORD *)(a2 + 32) = v22[2];
    *(_OWORD *)(a2 + 48) = v20;
    v21 = v22[5];
    *(_OWORD *)(a2 + 64) = v22[4];
    *(_OWORD *)(a2 + 80) = v21;
    result = (__n128)v22[1];
    *(_OWORD *)a2 = v22[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

void sub_1AD58F00C(char *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  void *v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  _OWORD v31[8];
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  _QWORD v47[17];
  _BYTE v48[144];
  int v49;

  v3 = v2;
  sub_1AD5977F0((uint64_t)v48);
  v6 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_userRecordID];
  if (v6)
  {
    sub_1AD58EEC8((char *)v6, (uint64_t)&v33);
    if (v2)
    {

      return;
    }
    v31[6] = v39;
    v31[7] = v40;
    v32 = v41;
    v31[2] = v35;
    v31[3] = v36;
    v31[4] = v37;
    v31[5] = v38;
    v31[0] = v33;
    v31[1] = v34;
    nullsub_1(v31);
    v7 = v31;
  }
  else
  {
    v7 = v48;
  }
  sub_1AD00FF28((uint64_t)v7, (uint64_t)v47, (uint64_t *)&unk_1EECDE780);
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_emailAddress])
  {
    v8 = sub_1AD63B768();
    v10 = v9;
  }
  else
  {
    v8 = 0;
    v10 = 0;
  }
  if (*(_QWORD *)&a1[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_phoneNumber])
  {
    v11 = sub_1AD63B768();
    v13 = v12;
  }
  else
  {
    v11 = 0;
    v13 = 0;
  }
  sub_1AD00FF28((uint64_t)v47, (uint64_t)v31, (uint64_t *)&unk_1EECDE780);
  v49 = a1[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_shouldReportMissingIdentity];
  v14 = *(void **)&a1[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_encryptedPersonalInfo];
  sub_1AD2850C8(v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD285124);
  if (v14)
  {
    v15 = v13;
    v16 = a2;
    v17 = v11;
    v18 = v10;
    v19 = v8;
    v20 = v14;
    v21 = sub_1AD63AFB8();
    v23 = v22;

    v8 = v19;
    v10 = v18;
    v11 = v17;
    a2 = v16;
    v13 = v15;
    v3 = v2;
  }
  else
  {
    v21 = 0;
    v23 = 0xF000000000000000;
  }
  sub_1AD176EF8(v8, v10, v11, v13, (uint64_t)v31, v49, v21, v23, &v33);

  sub_1AD2850C8(v47, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284BE4);
  if (!v3)
  {
    v24 = v44;
    a2[10] = v43;
    a2[11] = v24;
    v25 = v46;
    a2[12] = v45;
    a2[13] = v25;
    v26 = v40;
    a2[6] = v39;
    a2[7] = v26;
    v27 = v42;
    a2[8] = v41;
    a2[9] = v27;
    v28 = v36;
    a2[2] = v35;
    a2[3] = v28;
    v29 = v38;
    a2[4] = v37;
    a2[5] = v29;
    v30 = v34;
    *a2 = v33;
    a2[1] = v30;
  }
}

id sub_1AD58F2A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  id v9;
  id v10;
  uint64_t v11;
  objc_class *v12;
  char *v13;
  char *v14;
  char *v15;
  id result;
  objc_super v17;

  if (!v0[7])
    goto LABEL_8;
  v1 = v0[3];
  v2 = v0[11];
  v4 = v0[14];
  v3 = (void *)v0[15];
  v5 = v0[16];
  swift_bridgeObjectRetain();
  v6 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  if (!v2)
    goto LABEL_8;
  swift_bridgeObjectRetain();
  v7 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  if (v3)
  {
    if (v3 == (void *)1)
      goto LABEL_8;
    swift_bridgeObjectRetain();
    v8 = sub_1AD63B744();
    sub_1AD003F24(v4, (uint64_t)v3);
    v3 = (void *)v8;
  }
  v9 = objc_allocWithZone((Class)type metadata accessor for _BlastDoorCKRecordZoneID());
  v10 = sub_1AD595FDC(v6, v7, v3, v5);

  if (v1)
  {
    swift_bridgeObjectRetain();
    v11 = sub_1AD63B744();
    swift_bridgeObjectRelease();
    v12 = (objc_class *)type metadata accessor for _BlastDoorCKRecordID();
    v13 = (char *)objc_allocWithZone(v12);
    v14 = &v13[OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_RecordNameKey];
    *(_QWORD *)v14 = 0x614E64726F636552;
    *((_QWORD *)v14 + 1) = 0xEA0000000000656DLL;
    v15 = &v13[OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_ZoneIDKey];
    *(_QWORD *)v15 = 0x4449656E6F5ALL;
    *((_QWORD *)v15 + 1) = 0xE600000000000000;
    *(_QWORD *)&v13[OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_recordName] = v11;
    *(_QWORD *)&v13[OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_zoneID] = v10;
    v17.receiver = v13;
    v17.super_class = v12;
    return objc_msgSendSuper2(&v17, sel_init);
  }
LABEL_8:
  result = (id)sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD58F484()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  void *v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  id v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  uint64_t result;
  _BYTE v14[136];
  uint64_t v15[16];

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(void **)(v0 + 24);
  v4 = *(_QWORD *)(v0 + 48);
  v3 = *(void **)(v0 + 56);
  sub_1AD00FF28(v0 + 64, (uint64_t)v14, (uint64_t *)&unk_1EECDE780);
  v5 = *(_BYTE *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 216);
  sub_1AD00FF28((uint64_t)v14, (uint64_t)v15, (uint64_t *)&unk_1EECDE780);
  if (sub_1AD0CD93C(v15) == 1)
  {
    v7 = 0;
    if (!v1)
      goto LABEL_3;
  }
  else
  {
    v7 = sub_1AD58F2A0();
    if (!v1)
    {
LABEL_3:
      if (!v3)
        goto LABEL_10;
      goto LABEL_8;
    }
  }
  if (v1 == (void *)1)
    goto LABEL_14;
  swift_bridgeObjectRetain();
  v8 = sub_1AD63B744();
  sub_1AD003F24(v2, (uint64_t)v1);
  v1 = (void *)v8;
  if (v3)
  {
LABEL_8:
    if (v3 != (void *)1)
    {
      swift_bridgeObjectRetain();
      v9 = sub_1AD63B744();
      sub_1AD003F24(v4, (uint64_t)v3);
      v3 = (void *)v9;
      goto LABEL_10;
    }
LABEL_14:
    result = sub_1AD63BE28();
    __break(1u);
    return result;
  }
LABEL_10:
  if (v6 >> 60 == 15)
    v10 = 0;
  else
    v10 = (void *)sub_1AD63AFA0();
  v11 = objc_allocWithZone((Class)type metadata accessor for _BlastDoorCKUserIdentityLookupInfo());
  v12 = sub_1AD596120(v1, v3, v7, v5, v10);

  return (uint64_t)v12;
}

id sub_1AD58F684(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void *v26;
  void *v27;
  unint64_t v28;
  void *v29;
  id v30;
  void *v31;
  id v32;
  void *v33;
  unint64_t v34;
  void *v35;
  id v36;
  void *v37;
  id v38;
  uint64_t v39;
  void *v40;
  void *v41;
  unsigned __int8 v42;
  void *v43;
  unsigned __int8 v44;
  uint64_t v45;
  void *v46;
  uint64_t v47;
  void *v48;
  void *v49;
  unsigned __int8 v50;
  void *v51;
  unsigned __int8 v52;
  uint64_t v53;
  void *v54;
  uint64_t v55;
  void *v56;
  void *v57;
  void *v58;
  uint64_t v59;
  void *v60;
  void *v61;
  id v62;
  NSObject *v63;
  os_log_type_t v64;
  uint64_t v65;
  uint8_t *v66;
  uint8_t *v67;
  id v68;
  char v70;
  char v71;
  char v72;
  char v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  id v81;
  id v82;
  void *v83;
  objc_super v84;
  id v85;
  char v86[24];
  uint64_t v87;

  v2 = v1;
  v77 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_inviterID;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_inviterID] = 0;
  v78 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfo;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfo] = 0;
  v79 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_encryptedPersonalInfo;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_encryptedPersonalInfo] = 0;
  v76 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationToken;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationToken] = 0;
  v4 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfoPublicKey;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfoPublicKey] = 0;
  v5 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_ParticipantIDKey];
  strcpy(&v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_ParticipantIDKey], "ParticipantID");
  *((_WORD *)v5 + 7) = -4864;
  v6 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_InviterIDKey];
  *(_QWORD *)v6 = 0x4972657469766E49;
  *((_QWORD *)v6 + 1) = 0xE900000000000044;
  v7 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_UserIdentityKey];
  strcpy(&v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_UserIdentityKey], "UserIdentity");
  v7[13] = 0;
  *((_WORD *)v7 + 7) = -5120;
  v8 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_IsCurrentUserKey];
  strcpy(&v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_IsCurrentUserKey], "IsCurrentUser");
  *((_WORD *)v8 + 7) = -4864;
  v9 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_IsOrgAdminUserKey];
  strcpy(&v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_IsOrgAdminUserKey], "IsOrgAdminUser");
  v9[15] = -18;
  v10 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_AcceptanceStatusKey];
  *(_QWORD *)v10 = 0xD000000000000010;
  *((_QWORD *)v10 + 1) = 0x80000001AD6B3170;
  v11 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_RoleKey];
  *(_QWORD *)v11 = 1701869908;
  *((_QWORD *)v11 + 1) = 0xE400000000000000;
  v12 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_PermissionKey];
  *(_QWORD *)v12 = 0x697373696D726550;
  *((_QWORD *)v12 + 1) = 0xEA00000000006E6FLL;
  v13 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_OriginalParticipantRoleKey];
  *(_QWORD *)v13 = 0xD000000000000017;
  *((_QWORD *)v13 + 1) = 0x80000001AD6B3190;
  v14 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_OriginalAcceptanceStatusKey];
  *(_QWORD *)v14 = 0xD000000000000018;
  *((_QWORD *)v14 + 1) = 0x80000001AD6B31B0;
  v15 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_OriginalPermissionKey];
  *(_QWORD *)v15 = 0xD000000000000012;
  *((_QWORD *)v15 + 1) = 0x80000001AD6B31D0;
  v16 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_ProtectionInfoKey];
  strcpy(&v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_ProtectionInfoKey], "ProtectionInfo");
  v16[15] = -18;
  v17 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_EncryptedPersonalInfoKey];
  *(_QWORD *)v17 = 0xD000000000000015;
  *((_QWORD *)v17 + 1) = 0x80000001AD6B3000;
  v18 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_CreatedInProcessKey];
  *(_QWORD *)v18 = 0xD000000000000010;
  *((_QWORD *)v18 + 1) = 0x80000001AD6B31F0;
  v19 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_AcceptedInProcessKey];
  *(_QWORD *)v19 = 0xD000000000000011;
  *((_QWORD *)v19 + 1) = 0x80000001AD6B3210;
  v20 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_DeviceToDeviceShareInvitationTokenKey];
  *(_QWORD *)v20 = 0x6974617469766E49;
  *((_QWORD *)v20 + 1) = 0xEF6E656B6F546E6FLL;
  v21 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_ProtectionInfoPublicIdentityKey];
  *(_QWORD *)v21 = 0xD000000000000017;
  *((_QWORD *)v21 + 1) = 0x80000001AD6B3230;
  v22 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_WantsNewInvitationTokenKey];
  *(_QWORD *)v22 = 0xD000000000000017;
  *((_QWORD *)v22 + 1) = 0x80000001AD6A4440;
  v23 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_MutableInvitationTokenStatus];
  *(_QWORD *)v23 = 0xD00000000000001CLL;
  *((_QWORD *)v23 + 1) = 0x80000001AD6B3250;
  v24 = &v2[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_IsAnonymousInvitedParticipant];
  *(_QWORD *)v24 = 0xD00000000000001DLL;
  *((_QWORD *)v24 + 1) = 0x80000001AD6A4460;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB0B8);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1AD648170;
  *(_QWORD *)(v25 + 32) = sub_1AD32F2CC(0, &qword_1EECDE720);
  *(_QWORD *)(v25 + 40) = sub_1AD32F2CC(0, (unint64_t *)&unk_1EECDE750);
  v80 = v2;
  v83 = a1;
  sub_1AD63BC24();
  swift_bridgeObjectRelease();
  if (v87)
  {
    if ((swift_dynamicCast() & 1) != 0)
    {
      v75 = v4;
      type metadata accessor for _BlastDoorCKUserIdentity();
      swift_bridgeObjectRetain();
      v26 = (void *)sub_1AD63BC18();
      swift_bridgeObjectRelease();
      if (v26)
      {
        v74 = v85;
        swift_bridgeObjectRetain();
        v27 = (void *)sub_1AD63B744();
        swift_bridgeObjectRelease();
        v28 = (unint64_t)objc_msgSend(a1, sel_decodeInt64ForKey_, v27);

        if (v28 < 5 && ((0x1Bu >> v28) & 1) != 0)
        {
          swift_bridgeObjectRetain();
          v29 = (void *)sub_1AD63B744();
          swift_bridgeObjectRelease();
          v30 = objc_msgSend(a1, (SEL)&selRef_videoCount, v29);

          v73 = (char)v30;
          if ((unint64_t)v30 < 4)
          {
            swift_bridgeObjectRetain();
            v31 = (void *)sub_1AD63B744();
            swift_bridgeObjectRelease();
            v32 = objc_msgSend(a1, (SEL)&selRef_videoCount, v31);

            if ((unint64_t)v32 < 4)
            {
              v72 = (char)v32;
              swift_bridgeObjectRetain();
              v33 = (void *)sub_1AD63B744();
              swift_bridgeObjectRelease();
              v34 = (unint64_t)objc_msgSend(a1, (SEL)&selRef_videoCount, v33);

              if (v34 < 5 && ((0x1Bu >> v34) & 1) != 0)
              {
                v71 = v34;
                swift_bridgeObjectRetain();
                v35 = (void *)sub_1AD63B744();
                swift_bridgeObjectRelease();
                v36 = objc_msgSend(v83, sel_decodeInt64ForKey_, v35);

                if ((unint64_t)v36 < 4)
                {
                  v70 = (char)v36;
                  swift_bridgeObjectRetain();
                  v37 = (void *)sub_1AD63B744();
                  swift_bridgeObjectRelease();
                  v38 = objc_msgSend(v83, sel_decodeInt64ForKey_, v37);

                  if ((unint64_t)v38 < 4)
                  {
                    *(_QWORD *)&v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_participantID] = v85;
                    v82 = v74;
                    swift_bridgeObjectRetain();
                    v39 = sub_1AD63BC18();
                    swift_bridgeObjectRelease();
                    v40 = *(void **)&v2[v77];
                    *(_QWORD *)&v2[v77] = v39;

                    *(_QWORD *)&v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_userIdentity] = v26;
                    v81 = v26;
                    swift_bridgeObjectRetain();
                    v41 = (void *)sub_1AD63B744();
                    swift_bridgeObjectRelease();
                    v42 = objc_msgSend(v83, sel_decodeBoolForKey_, v41);

                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isCurrentUser] = v42;
                    swift_bridgeObjectRetain();
                    v43 = (void *)sub_1AD63B744();
                    swift_bridgeObjectRelease();
                    v44 = objc_msgSend(v83, sel_decodeBoolForKey_, v43);

                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isOrgAdminUser] = v44;
                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_role] = 0x302000100uLL >> (8 * v28);
                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_acceptanceStatus] = v73;
                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_permission] = v72;
                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalParticipantRole] = 0x302000100uLL >> (8 * v71);
                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalAcceptanceStatus] = v70;
                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalPermission] = (char)v38;
                    sub_1AD32F2CC(0, &qword_1EECDE728);
                    swift_bridgeObjectRetain();
                    v45 = sub_1AD63BC18();
                    swift_bridgeObjectRelease();
                    v46 = *(void **)&v2[v78];
                    *(_QWORD *)&v2[v78] = v45;

                    swift_bridgeObjectRetain();
                    v47 = sub_1AD63BC18();
                    swift_bridgeObjectRelease();
                    v48 = *(void **)&v2[v79];
                    *(_QWORD *)&v2[v79] = v47;

                    swift_bridgeObjectRetain();
                    v49 = (void *)sub_1AD63B744();
                    swift_bridgeObjectRelease();
                    v50 = objc_msgSend(v83, sel_decodeBoolForKey_, v49);

                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_createdInProcess] = v50;
                    swift_bridgeObjectRetain();
                    v51 = (void *)sub_1AD63B744();
                    swift_bridgeObjectRelease();
                    v52 = objc_msgSend(v83, sel_decodeBoolForKey_, v51);

                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_acceptedInProcess] = v52;
                    sub_1AD32F2CC(0, &qword_1EECDB010);
                    swift_bridgeObjectRetain();
                    v53 = sub_1AD63BC18();
                    swift_bridgeObjectRelease();
                    v54 = *(void **)&v2[v76];
                    *(_QWORD *)&v2[v76] = v53;

                    swift_bridgeObjectRetain();
                    v55 = sub_1AD63BC18();
                    swift_bridgeObjectRelease();
                    v56 = *(void **)&v2[v75];
                    *(_QWORD *)&v2[v75] = v55;

                    swift_bridgeObjectRetain();
                    v57 = (void *)sub_1AD63B744();
                    swift_bridgeObjectRelease();
                    LOBYTE(v55) = objc_msgSend(v83, sel_decodeBoolForKey_, v57);

                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_wantsNewInvitationToken] = v55;
                    swift_bridgeObjectRetain();
                    v58 = (void *)sub_1AD63B744();
                    swift_bridgeObjectRelease();
                    LOBYTE(v55) = objc_msgSend(v83, sel_decodeBoolForKey_, v58);

                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isAnonymousInvitedParticipant] = v55;
                    v59 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationTokenStatus;
                    v80[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationTokenStatus] = 1;
                    swift_bridgeObjectRetain();
                    v60 = (void *)sub_1AD63B744();
                    swift_bridgeObjectRelease();
                    LODWORD(v55) = objc_msgSend(v83, sel_containsValueForKey_, v60);

                    if ((_DWORD)v55)
                    {
                      swift_bridgeObjectRetain();
                      v61 = (void *)sub_1AD63B744();
                      swift_bridgeObjectRelease();
                      v62 = objc_msgSend(v83, sel_decodeInt64ForKey_, v61);

                      if ((unint64_t)v62 <= 3)
                        v80[v59] = (char)v62;
                    }
                    else
                    {

                    }
                    v84.receiver = v80;
                    v84.super_class = (Class)type metadata accessor for _BlastDoorCKShareParticipant();
                    v68 = objc_msgSendSuper2(&v84, sel_init);

                    return v68;
                  }
                }
              }
            }
          }
        }

        v4 = v75;
      }
      else
      {

        v4 = v75;
      }
    }
  }
  else
  {
    sub_1AD009758((uint64_t)v86, &qword_1EECDC5F0);
  }
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  v63 = qword_1ED2E7530;
  v64 = sub_1AD63BB94();
  if (os_log_type_enabled(v63, v64))
  {
    v65 = v4;
    v66 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v66 = 0;
    _os_log_impl(&dword_1ACFC8000, v63, v64, "Unable to decode CKShareParticipant", v66, 2u);
    v67 = v66;
    v4 = v65;
    MEMORY[0x1AF44BED4](v67, -1, -1);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  type metadata accessor for _BlastDoorCKShareParticipant();
  swift_deallocPartialClassInstance();
  return 0;
}

unint64_t sub_1AD5904B0@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v2;

  v2 = 0x302040100uLL >> (8 * result);
  if (result >= 5)
    LOBYTE(v2) = 4;
  *a2 = v2;
  return result;
}

unint64_t sub_1AD5904D8@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

void sub_1AD590510(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  uint64_t v19;
  void *v20;
  uint64_t v21;
  void *v22;
  uint64_t v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  void *v30;
  uint64_t v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  uint64_t v37;
  void *v38;
  uint64_t v39;
  void *v40;
  uint64_t v41;
  id v42;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_participantID);
  v4 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_inviterID);
  v6 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  v7 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_userIdentity);
  v8 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  v9 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isCurrentUser);
  v10 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeBool_forKey_, v9, v10);

  v11 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isOrgAdminUser);
  v12 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeBool_forKey_, v11, v12);

  v13 = qword_1AD6956A8[*(char *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_role)];
  v14 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInt64_forKey_, v13, v14);

  v15 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_acceptanceStatus);
  v16 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInt64_forKey_, v15, v16);

  v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_permission);
  v18 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInt64_forKey_, v17, v18);

  v19 = qword_1AD6956A8[*(char *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalParticipantRole)];
  v20 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInt64_forKey_, v19, v20);

  v21 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalAcceptanceStatus);
  v22 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInt64_forKey_, v21, v22);

  v23 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalPermission);
  v24 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInt64_forKey_, v23, v24);

  v25 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfo);
  v26 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v25, v26);

  v27 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_encryptedPersonalInfo);
  v28 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v27, v28);

  v29 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_createdInProcess);
  v30 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeBool_forKey_, v29, v30);

  v31 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_acceptedInProcess);
  v32 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeBool_forKey_, v31, v32);

  v33 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationToken);
  v34 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v33, v34);

  v35 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfoPublicKey);
  v36 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v35, v36);

  v37 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_wantsNewInvitationToken);
  v38 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeBool_forKey_, v37, v38);

  v39 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isAnonymousInvitedParticipant);
  v40 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeBool_forKey_, v39, v40);

  v41 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationTokenStatus);
  v42 = (id)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInt64_forKey_, v41, v42);

}

uint64_t sub_1AD590AA4()
{
  char *v0;

  return qword_1AD6956A8[*v0];
}

uint64_t sub_1AD590AB8()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD590B14()
{
  uint64_t v0;
  uint64_t v1;
  id v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  id v9;
  uint64_t v10;

  v1 = v0;
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
  v3 = (void *)sub_1AD63B744();
  type metadata accessor for _BlastDoorCKShareParticipant();
  objc_msgSend(v2, sel_setClassName_forClass_, v3, swift_getObjCClassFromMetadata());

  v4 = (void *)sub_1AD63B744();
  sub_1AD32F2CC(0, &qword_1EECDB010);
  objc_msgSend(v2, sel_setClassName_forClass_, v4, swift_getObjCClassFromMetadata());

  v5 = (void *)sub_1AD63B744();
  type metadata accessor for _BlastDoorCKUserIdentity();
  objc_msgSend(v2, sel_setClassName_forClass_, v5, swift_getObjCClassFromMetadata());

  v6 = (void *)sub_1AD63B744();
  type metadata accessor for _BlastDoorCKRecordID();
  objc_msgSend(v2, sel_setClassName_forClass_, v6, swift_getObjCClassFromMetadata());

  v7 = (void *)sub_1AD63B744();
  type metadata accessor for _BlastDoorCKRecordZoneID();
  objc_msgSend(v2, sel_setClassName_forClass_, v7, swift_getObjCClassFromMetadata());

  v8 = (void *)sub_1AD63B744();
  type metadata accessor for _BlastDoorCKUserIdentityLookupInfo();
  objc_msgSend(v2, sel_setClassName_forClass_, v8, swift_getObjCClassFromMetadata());

  objc_msgSend(v2, sel_encodeObject_forKey_, v1, *MEMORY[0x1E0CB2CD0]);
  v9 = objc_msgSend(v2, sel_encodedData);
  v10 = sub_1AD63AFB8();

  return v10;
}

id sub_1AD590D94()
{
  return sub_1AD592604(type metadata accessor for _BlastDoorCKShareParticipant);
}

uint64_t sub_1AD590FC0()
{
  sub_1AD597528();
  return sub_1AD63B948();
}

uint64_t sub_1AD59101C()
{
  sub_1AD597528();
  return sub_1AD63B8E8();
}

uint64_t sub_1AD591068()
{
  return sub_1AD63C4E8();
}

unint64_t sub_1AD591090@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD5904D8(*a1, a2);
}

uint64_t sub_1AD591098()
{
  sub_1AD5974E4();
  return sub_1AD63B948();
}

uint64_t sub_1AD5910F4()
{
  sub_1AD5974E4();
  return sub_1AD63B8E8();
}

BOOL sub_1AD591140(char *a1, char *a2)
{
  return qword_1AD6956A8[*a1] == qword_1AD6956A8[*a2];
}

uint64_t sub_1AD591164()
{
  sub_1AD63C4AC();
  sub_1AD63C4E8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD5911B0()
{
  return sub_1AD63C4E8();
}

uint64_t sub_1AD5911E4()
{
  sub_1AD63C4AC();
  sub_1AD63C4E8();
  return sub_1AD63C4F4();
}

unint64_t sub_1AD59122C@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD5904B0(*a1, a2);
}

void sub_1AD591234(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1AD6956A8[*v1];
}

uint64_t sub_1AD59124C()
{
  sub_1AD5974A0();
  return sub_1AD63B948();
}

uint64_t sub_1AD5912A8()
{
  sub_1AD5974A0();
  return sub_1AD63B8E8();
}

uint64_t sub_1AD5912F4()
{
  sub_1AD63C4AC();
  sub_1AD63C4E8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD591338()
{
  sub_1AD63C4AC();
  sub_1AD63C4E8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD591378()
{
  sub_1AD59745C();
  return sub_1AD63B948();
}

uint64_t sub_1AD5913D4()
{
  sub_1AD59745C();
  return sub_1AD63B8E8();
}

void sub_1AD59146C(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  id v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  void *v20;
  uint64_t v21;
  id v22;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_userRecordID);
  v4 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_nameComponents);
  v6 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  v7 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_lookupInfo);
  v8 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  v9 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_contactIdentifiers);
  v10 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  v11 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_publicSharingKey);
  v12 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  v13 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_outOfNetworkPrivateKey);
  v14 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v13, v14);

  v15 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_isCached);
  v16 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeBool_forKey_, v15, v16);

  v17 = *(unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_hasICloudAccount);
  v18 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeBool_forKey_, v17, v18);

  v19 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_encryptedPersonalInfo);
  v20 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v19, v20);

  v21 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_publicKeyVersion);
  v22 = (id)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInt64_forKey_, v21, v22);

}

id sub_1AD591810()
{
  return sub_1AD592604(type metadata accessor for _BlastDoorCKUserIdentity);
}

id sub_1AD591984(void *a1)
{
  char *v1;
  char *v2;
  char *v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  objc_super v15;

  v2 = v1;
  v4 = &v2[OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_RecordNameKey];
  *(_QWORD *)v4 = 0x614E64726F636552;
  *((_QWORD *)v4 + 1) = 0xEA0000000000656DLL;
  v5 = &v2[OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_ZoneIDKey];
  *(_QWORD *)v5 = 0x4449656E6F5ALL;
  *((_QWORD *)v5 + 1) = 0xE600000000000000;
  sub_1AD32F2CC(0, &qword_1EECDE720);
  v6 = v2;
  v7 = sub_1AD63BC18();
  if (v7)
  {
    v8 = (void *)v7;
    type metadata accessor for _BlastDoorCKRecordZoneID();
    v9 = sub_1AD63BC18();
    if (v9)
    {
      *(_QWORD *)&v6[OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_recordName] = v8;
      *(_QWORD *)&v6[OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_zoneID] = v9;

      v15.receiver = v6;
      v15.super_class = (Class)type metadata accessor for _BlastDoorCKRecordID();
      v10 = objc_msgSendSuper2(&v15, sel_init);

      return v10;
    }

  }
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  v11 = qword_1ED2E7530;
  v12 = sub_1AD63BB94();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v13 = 0;
    _os_log_impl(&dword_1ACFC8000, v11, v12, "Unable to decode CKRecordID", v13, 2u);
    MEMORY[0x1AF44BED4](v13, -1, -1);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  type metadata accessor for _BlastDoorCKRecordID();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_1AD591BB0(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  id v6;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_recordName);
  v4 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor20_BlastDoorCKRecordID_zoneID);
  v6 = (id)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

}

id sub_1AD591D08()
{
  return sub_1AD592604(type metadata accessor for _BlastDoorCKRecordID);
}

id sub_1AD591D8C(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  char *v5;
  char *v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void *v11;
  char *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  void *v18;
  void *v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  char *v24;
  uint8_t *v25;
  uint8_t *v26;
  uint64_t v28;
  objc_super v29;

  v2 = v1;
  v4 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_anonymousCKUserID;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_anonymousCKUserID] = 0;
  v5 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_ZoneNameKey];
  *(_QWORD *)v5 = 0x656D614E656E6F5ALL;
  *((_QWORD *)v5 + 1) = 0xE800000000000000;
  v6 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_OwnerNameKey];
  *(_QWORD *)v6 = 0x6D614E72656E776FLL;
  *((_QWORD *)v6 + 1) = 0xE900000000000065;
  v7 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_AnonymousCKUserIDKey];
  *(_QWORD *)v7 = 0xD000000000000011;
  *((_QWORD *)v7 + 1) = 0x80000001AD6A4560;
  v8 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_DatabaseScopeKey];
  *(_QWORD *)v8 = 0xD000000000000010;
  *((_QWORD *)v8 + 1) = 0x80000001AD6B3050;
  sub_1AD32F2CC(0, &qword_1EECDE720);
  v9 = v2;
  v10 = sub_1AD63BC18();
  if (v10)
  {
    v11 = (void *)v10;
    v28 = v4;
    v12 = v9;
    v13 = sub_1AD63BC18();
    if (v13)
    {
      v14 = (void *)v13;
      *(_QWORD *)&v12[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_zoneName] = v11;
      *(_QWORD *)&v12[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_ownerName] = v13;
      v15 = v11;
      v16 = v14;
      v17 = sub_1AD63BC18();
      v18 = *(void **)&v2[v28];
      *(_QWORD *)&v2[v28] = v17;

      swift_bridgeObjectRetain();
      v19 = (void *)sub_1AD63B744();
      swift_bridgeObjectRelease();
      v20 = objc_msgSend(a1, sel_decodeIntegerForKey_, v19);

      *(_QWORD *)&v12[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_databaseScope] = v20;
      v29.receiver = v12;
      v29.super_class = (Class)type metadata accessor for _BlastDoorCKRecordZoneID();
      v21 = objc_msgSendSuper2(&v29, sel_init);

      return v21;
    }

    v4 = v28;
  }
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  v22 = qword_1ED2E7530;
  v23 = sub_1AD63BB94();
  if (os_log_type_enabled(v22, v23))
  {
    v24 = v9;
    v25 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v25 = 0;
    _os_log_impl(&dword_1ACFC8000, v22, v23, "Unable to decode CKRecordZoneID", v25, 2u);
    v26 = v25;
    v9 = v24;
    MEMORY[0x1AF44BED4](v26, -1, -1);
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  type metadata accessor for _BlastDoorCKRecordZoneID();
  swift_deallocPartialClassInstance();
  return 0;
}

void sub_1AD5920E8(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_zoneName);
  v4 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_ownerName);
  v6 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  v7 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_anonymousCKUserID);
  v8 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  v9 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_databaseScope);
  v10 = (id)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v9, v10);

}

id sub_1AD5922D0()
{
  return sub_1AD592604(type metadata accessor for _BlastDoorCKRecordZoneID);
}

void sub_1AD5923C0(void *a1)
{
  uint64_t v1;
  id v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;

  v3 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_emailAddress);
  v4 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v3, v4);

  v5 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_phoneNumber);
  v6 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v5, v6);

  v7 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_userRecordID);
  v8 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v7, v8);

  v9 = *(unsigned __int8 *)(v1
                          + OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_shouldReportMissingIdentity);
  v10 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeBool_forKey_, v9, v10);

  v11 = *(id *)(v1 + OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_encryptedPersonalInfo);
  v12 = (id)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

}

id sub_1AD5925F8()
{
  return sub_1AD592604(type metadata accessor for _BlastDoorCKUserIdentityLookupInfo);
}

id sub_1AD592604(uint64_t (*a1)(void))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1();
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

BOOL sub_1AD5926F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  _BOOL8 result;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v3 = a1[3];
  if (!v3)
    goto LABEL_28;
  v4 = a2[3];
  if (!v4)
    goto LABEL_28;
  v5 = a1[6];
  v6 = a1[7];
  v7 = a1[10];
  v8 = a1[11];
  v9 = a1[15];
  v10 = a2[6];
  v11 = a2[7];
  v12 = a2[10];
  v13 = a2[11];
  v14 = a2[15];
  v22 = a2[14];
  v23 = a1[14];
  v20 = a2[16];
  v21 = a1[16];
  if (a1[2] == a2[2] && v3 == v4 || (v15 = sub_1AD63C2A8(), result = 0, (v15 & 1) != 0))
  {
    if (!v6 || !v11)
      goto LABEL_28;
    if (v5 == v10 && v6 == v11 || (v17 = sub_1AD63C2A8(), result = 0, (v17 & 1) != 0))
    {
      if (!v8 || !v13)
        goto LABEL_28;
      if (v7 == v12 && v8 == v13 || (v18 = sub_1AD63C2A8(), result = 0, (v18 & 1) != 0))
      {
        if (v9 != 1 && v14 != 1)
        {
          if (v9)
          {
            if (v14)
            {
              if (v23 != v22 || v9 != v14)
              {
                v19 = sub_1AD63C2A8();
                result = 0;
                if ((v19 & 1) == 0)
                  return result;
              }
              return v21 == v20;
            }
          }
          else if (!v14)
          {
            return v21 == v20;
          }
          return 0;
        }
        while (1)
        {
LABEL_28:
          sub_1AD63BE28();
          __break(1u);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1AD5928E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  BOOL v21;
  uint64_t result;
  char v23;
  uint64_t v24;
  unint64_t v25;
  int v26;
  _OWORD v27[8];
  uint64_t v28;
  _OWORD v29[8];
  uint64_t v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  uint64_t v39;
  _BYTE v40[136];
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50[17];
  uint64_t v51;
  uint64_t v52[17];
  _BYTE v53[136];
  _QWORD v54[19];

  v5 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a1 + 56);
  sub_1AD00FF28(a1 + 64, (uint64_t)v53, (uint64_t *)&unk_1EECDE780);
  v26 = *(unsigned __int8 *)(a1 + 200);
  v24 = *(_QWORD *)(a1 + 208);
  v25 = *(_QWORD *)(a1 + 216);
  v8 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(a2 + 48);
  v10 = *(_QWORD *)(a2 + 56);
  sub_1AD00FF28(a2 + 64, (uint64_t)v54, (uint64_t *)&unk_1EECDE780);
  if (v4 != 1 && v9 != 1)
  {
    v12 = *(unsigned __int8 *)(a2 + 200);
    v13 = *(_QWORD *)(a2 + 208);
    v14 = *(_QWORD *)(a2 + 216);
    if (v4)
    {
      if (!v9)
        goto LABEL_27;
      if (v5 != v8 || v4 != v9)
      {
        v15 = v13;
        v16 = sub_1AD63C2A8();
        v13 = v15;
        v17 = 0;
        if ((v16 & 1) == 0)
          return v17 & 1;
      }
    }
    else if (v9)
    {
      goto LABEL_27;
    }
    if (v7 != 1 && v10 != 1)
    {
      if (v7)
      {
        if (!v10)
          goto LABEL_27;
        if (v6 != v11 || v7 != v10)
        {
          v18 = v13;
          v19 = sub_1AD63C2A8();
          v13 = v18;
          v17 = 0;
          if ((v19 & 1) == 0)
            return v17 & 1;
        }
      }
      else if (v10)
      {
        goto LABEL_27;
      }
      v20 = v13;
      sub_1AD00FF28((uint64_t)v53, (uint64_t)v52, (uint64_t *)&unk_1EECDE780);
      if (sub_1AD0CD93C(v52) == 1)
      {
        sub_1AD00FF28((uint64_t)v54, (uint64_t)v50, (uint64_t *)&unk_1EECDE780);
        if (sub_1AD0CD93C(v50) == 1)
        {
LABEL_26:
          if (v26 == v12)
          {
            if (v25 >> 60 == 15)
            {
              if (v14 >> 60 == 15)
              {
                v17 = 1;
                return v17 & 1;
              }
            }
            else if (v14 >> 60 != 15)
            {
              sub_1AD00408C(v24, v25);
              sub_1AD00408C(v20, v14);
              sub_1AD3DB778(v24, v25);
              v17 = v23;
              sub_1AD004118(v20, v14);
              sub_1AD004118(v24, v25);
              return v17 & 1;
            }
            sub_1AD00408C(v24, v25);
            sub_1AD00408C(v20, v14);
            sub_1AD004118(v24, v25);
            sub_1AD004118(v20, v14);
            v17 = 0;
            return v17 & 1;
          }
          goto LABEL_27;
        }
LABEL_24:
        sub_1AD00FF28((uint64_t)v53, (uint64_t)v50, (uint64_t *)&unk_1EECDE780);
        sub_1AD00FF28((uint64_t)v54, (uint64_t)&v51, (uint64_t *)&unk_1EECDE780);
        sub_1AD2850C8(v54, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD285124);
        sub_1AD59756C((uint64_t)v50);
        v17 = 0;
        return v17 & 1;
      }
      sub_1AD00FF28((uint64_t)v53, (uint64_t)&v41, (uint64_t *)&unk_1EECDE780);
      sub_1AD00FF28((uint64_t)v54, (uint64_t)v50, (uint64_t *)&unk_1EECDE780);
      if (sub_1AD0CD93C(v50) == 1)
      {
        v37 = v47;
        v38 = v48;
        v39 = v49;
        v33 = v43;
        v34 = v44;
        v35 = v45;
        v36 = v46;
        v31 = v41;
        v32 = v42;
        sub_1AD00FF28((uint64_t)v53, (uint64_t)v40, (uint64_t *)&unk_1EECDE780);
        sub_1AD2853E4((uint64_t)v40);
        sub_1AD2853E4((uint64_t)v40);
        sub_1AD2852BC((uint64_t)&v31);
        goto LABEL_24;
      }
      sub_1AD00FF28((uint64_t)v54, (uint64_t)v29, (uint64_t *)&unk_1EECDE780);
      v27[6] = v29[6];
      v27[7] = v29[7];
      v28 = v30;
      v27[2] = v29[2];
      v27[3] = v29[3];
      v27[4] = v29[4];
      v27[5] = v29[5];
      v27[0] = v29[0];
      v27[1] = v29[1];
      v21 = sub_1AD5926F0(&v41, v27);
      v37 = v47;
      v38 = v48;
      v39 = v49;
      v33 = v43;
      v34 = v44;
      v35 = v45;
      v36 = v46;
      v31 = v41;
      v32 = v42;
      sub_1AD00FF28((uint64_t)v53, (uint64_t)v40, (uint64_t *)&unk_1EECDE780);
      sub_1AD2853E4((uint64_t)v40);
      sub_1AD2852BC((uint64_t)&v31);
      if (v21)
        goto LABEL_26;
LABEL_27:
      v17 = 0;
      return v17 & 1;
    }
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

BOOL sub_1AD592CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  char *v49;
  int v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(uint64_t, uint64_t, uint64_t);
  int v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v77;
  char v78;
  void (*v79)(char *, uint64_t);
  int *v80;
  int v81;
  int v82;
  char v83;
  int *v84;
  char v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  uint64_t v92;
  unint64_t v93;
  unint64_t v94;
  char v95;
  char v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  uint64_t v101;
  unint64_t v102;
  char v103;
  char v104;
  int *v105;
  int v106;
  int v107;
  BOOL v108;
  int v109;
  uint64_t v110;
  int v111;
  uint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t *v115;
  uint64_t v116;
  unint64_t v117;
  char v118;
  char v119;
  int *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  int *v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _OWORD v147[14];
  _BYTE v148[224];
  _OWORD v149[14];
  __int128 v150;
  __int128 v151;
  __int128 v152;
  __int128 v153;
  __int128 v154;
  __int128 v155;
  __int128 v156;
  __int128 v157;
  __int128 v158;
  __int128 v159;
  __int128 v160;
  __int128 v161;
  __int128 v162;
  __int128 v163;
  _OWORD v164[28];
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  __int128 v174;
  __int128 v175;
  __int128 v176;
  __int128 v177;
  __int128 v178;
  uint64_t v179[56];
  __int128 v180;
  __int128 v181;
  __int128 v182;
  __int128 v183;
  __int128 v184;
  __int128 v185;
  __int128 v186;
  __int128 v187;
  uint64_t v188;
  _OWORD v189[8];
  uint64_t v190;
  uint64_t v191[28];
  _BYTE v192[136];
  _QWORD v193[17];
  uint64_t v194[18];

  v4 = sub_1AD63AE2C();
  v128 = *(_QWORD *)(v4 - 8);
  v129 = v4;
  MEMORY[0x1E0C80A78](v4);
  v125 = (char *)&v123 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD23F8);
  MEMORY[0x1E0C80A78](v6);
  v126 = (uint64_t)&v123 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v127 = (int *)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDE790);
  MEMORY[0x1E0C80A78](v127);
  v9 = (char *)&v123 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for CloudKitUserIdentity(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v136 = (uint64_t)&v123 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v135 = (char *)&v123 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v140 = (uint64_t)&v123 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v137 = (uint64_t)&v123 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v142 = (uint64_t)&v123 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v134 = (uint64_t)&v123 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v130 = (uint64_t)&v123 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v133 = (uint64_t)&v123 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)&v123 - v28;
  v30 = MEMORY[0x1E0C80A78](v27);
  v132 = (char *)&v123 - v31;
  v32 = MEMORY[0x1E0C80A78](v30);
  v131 = (uint64_t)&v123 - v33;
  v34 = MEMORY[0x1E0C80A78](v32);
  v138 = (uint64_t)&v123 - v35;
  v36 = MEMORY[0x1E0C80A78](v34);
  v38 = (char *)&v123 - v37;
  v39 = MEMORY[0x1E0C80A78](v36);
  v141 = (uint64_t)&v123 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v143 = (uint64_t)&v123 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v144 = (uint64_t)&v123 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v47 = (char *)&v123 - v46;
  MEMORY[0x1E0C80A78](v45);
  v49 = (char *)&v123 - v48;
  v145 = a1;
  sub_1AD00FF28(a1, (uint64_t)v192, (uint64_t *)&unk_1EECDE780);
  v146 = a2;
  sub_1AD00FF28(a2, (uint64_t)v193, (uint64_t *)&unk_1EECDE780);
  sub_1AD00FF28((uint64_t)v192, (uint64_t)v194, (uint64_t *)&unk_1EECDE780);
  v50 = sub_1AD0CD93C(v194);
  v139 = v29;
  if (v50 == 1)
  {
    sub_1AD00FF28((uint64_t)v193, (uint64_t)v179, (uint64_t *)&unk_1EECDE780);
    if (sub_1AD0CD93C(v179) == 1)
    {
      sub_1AD0D3D2C(v145, (uint64_t)v49, type metadata accessor for CloudKitUserIdentity);
      sub_1AD0D3D2C(v146, (uint64_t)v47, type metadata accessor for CloudKitUserIdentity);
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_1AD00FF28((uint64_t)v192, (uint64_t)v164, (uint64_t *)&unk_1EECDE780);
  sub_1AD00FF28((uint64_t)v193, (uint64_t)v179, (uint64_t *)&unk_1EECDE780);
  if (sub_1AD0CD93C(v179) == 1)
  {
    v186 = v164[6];
    v187 = v164[7];
    v188 = *(_QWORD *)&v164[8];
    v182 = v164[2];
    v183 = v164[3];
    v185 = v164[5];
    v184 = v164[4];
    v181 = v164[1];
    v180 = v164[0];
    sub_1AD00FF28((uint64_t)v192, (uint64_t)v189, (uint64_t *)&unk_1EECDE780);
    sub_1AD00FF28((uint64_t)v192, (uint64_t)v191, (uint64_t *)&unk_1EECDE780);
    sub_1AD2853E4((uint64_t)v191);
    sub_1AD2853E4((uint64_t)v189);
    sub_1AD2852BC((uint64_t)&v180);
LABEL_6:
    sub_1AD00FF28((uint64_t)v192, (uint64_t)v179, (uint64_t *)&unk_1EECDE780);
    sub_1AD00FF28((uint64_t)v193, (uint64_t)&v179[17], (uint64_t *)&unk_1EECDE780);
    sub_1AD2850C8(v193, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD285124);
    sub_1AD59756C((uint64_t)v179);
    sub_1AD0D3D2C(v145, (uint64_t)v49, type metadata accessor for CloudKitUserIdentity);
    sub_1AD0D3D2C(v146, (uint64_t)v47, type metadata accessor for CloudKitUserIdentity);
LABEL_7:
    sub_1AD066230((uint64_t)v47, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230((uint64_t)v49, type metadata accessor for CloudKitUserIdentity);
LABEL_15:
    v64 = v141;
    v61 = v142;
    v59 = v144;
    sub_1AD0D3D2C(v145, v144, type metadata accessor for CloudKitUserIdentity);
    v60 = v143;
    sub_1AD0D3D2C(v146, v143, type metadata accessor for CloudKitUserIdentity);
    v62 = v132;
LABEL_16:
    sub_1AD066230(v60, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230(v59, type metadata accessor for CloudKitUserIdentity);
    v65 = (uint64_t)v62;
    v67 = (uint64_t)v139;
    v66 = v140;
LABEL_17:
    sub_1AD0D3D2C(v145, v64, type metadata accessor for CloudKitUserIdentity);
    sub_1AD0D3D2C(v146, (uint64_t)v38, type metadata accessor for CloudKitUserIdentity);
LABEL_18:
    sub_1AD066230(v64, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230((uint64_t)v38, type metadata accessor for CloudKitUserIdentity);
    v68 = v138;
    sub_1AD0D3D2C(v145, v138, type metadata accessor for CloudKitUserIdentity);
    v69 = v131;
    sub_1AD0D3D2C(v146, v131, type metadata accessor for CloudKitUserIdentity);
LABEL_19:
    sub_1AD066230(v69, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230(v68, type metadata accessor for CloudKitUserIdentity);
LABEL_20:
    sub_1AD0D3D2C(v145, v65, type metadata accessor for CloudKitUserIdentity);
    sub_1AD0D3D2C(v146, v67, type metadata accessor for CloudKitUserIdentity);
    v70 = v137;
LABEL_21:
    sub_1AD066230(v67, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230(v65, type metadata accessor for CloudKitUserIdentity);
LABEL_22:
    v71 = v130;
    v72 = v133;
    sub_1AD0D3D2C(v145, v133, type metadata accessor for CloudKitUserIdentity);
    sub_1AD0D3D2C(v146, v71, type metadata accessor for CloudKitUserIdentity);
    goto LABEL_23;
  }
  sub_1AD00FF28((uint64_t)v193, (uint64_t)&v180, (uint64_t *)&unk_1EECDE780);
  v171 = v186;
  v172 = v187;
  *(_QWORD *)&v173 = v188;
  v167 = v182;
  v168 = v183;
  v170 = v185;
  v169 = v184;
  v166 = v181;
  v165 = v180;
  v51 = sub_1AD5926F0(v164, &v165);
  v189[6] = v164[6];
  v189[7] = v164[7];
  v190 = *(_QWORD *)&v164[8];
  v189[2] = v164[2];
  v189[3] = v164[3];
  v189[5] = v164[5];
  v189[4] = v164[4];
  v189[1] = v164[1];
  v189[0] = v164[0];
  sub_1AD00FF28((uint64_t)v192, (uint64_t)v191, (uint64_t *)&unk_1EECDE780);
  sub_1AD2853E4((uint64_t)v191);
  sub_1AD2852BC((uint64_t)v189);
  sub_1AD0D3D2C(v145, (uint64_t)v49, type metadata accessor for CloudKitUserIdentity);
  sub_1AD0D3D2C(v146, (uint64_t)v47, type metadata accessor for CloudKitUserIdentity);
  if (!v51)
    goto LABEL_7;
LABEL_9:
  v124 = v38;
  v52 = *(int *)(v10 + 20);
  v53 = (uint64_t)&v47[v52];
  v54 = (uint64_t)&v9[v127[12]];
  sub_1ACFF64C0((uint64_t)&v49[v52], (uint64_t)v9, &qword_1EECD23F8);
  sub_1ACFF64C0(v53, v54, &qword_1EECD23F8);
  v56 = v128;
  v55 = v129;
  v57 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v128 + 48);
  if (v57((uint64_t)v9, 1, v129) == 1)
  {
    sub_1AD066230((uint64_t)v47, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230((uint64_t)v49, type metadata accessor for CloudKitUserIdentity);
    v58 = v57(v54, 1, v55);
    v38 = v124;
    if (v58 == 1)
    {
      v127 = (int *)v10;
      sub_1AD009758((uint64_t)v9, &qword_1EECD23F8);
      v59 = v144;
      sub_1AD0D3D2C(v145, v144, type metadata accessor for CloudKitUserIdentity);
      v60 = v143;
      sub_1AD0D3D2C(v146, v143, type metadata accessor for CloudKitUserIdentity);
      v61 = v142;
      v62 = v132;
      goto LABEL_30;
    }
    goto LABEL_14;
  }
  v63 = v126;
  sub_1ACFF64C0((uint64_t)v9, v126, &qword_1EECD23F8);
  if (v57(v54, 1, v55) == 1)
  {
    sub_1AD066230((uint64_t)v47, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230((uint64_t)v49, type metadata accessor for CloudKitUserIdentity);
    (*(void (**)(uint64_t, uint64_t))(v56 + 8))(v63, v55);
    v38 = v124;
LABEL_14:
    sub_1AD009758((uint64_t)v9, (uint64_t *)&unk_1EECDE790);
    goto LABEL_15;
  }
  v127 = (int *)v10;
  v77 = v125;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 32))(v125, v54, v55);
  sub_1AD5977A8();
  v78 = sub_1AD63B738();
  v79 = *(void (**)(char *, uint64_t))(v56 + 8);
  v79(v77, v55);
  sub_1AD066230((uint64_t)v47, type metadata accessor for CloudKitUserIdentity);
  sub_1AD066230((uint64_t)v49, type metadata accessor for CloudKitUserIdentity);
  v79((char *)v63, v55);
  sub_1AD009758((uint64_t)v9, &qword_1EECD23F8);
  v59 = v144;
  sub_1AD0D3D2C(v145, v144, type metadata accessor for CloudKitUserIdentity);
  v60 = v143;
  sub_1AD0D3D2C(v146, v143, type metadata accessor for CloudKitUserIdentity);
  v64 = v141;
  v61 = v142;
  v62 = v132;
  v38 = v124;
  if ((v78 & 1) == 0)
    goto LABEL_16;
LABEL_30:
  v80 = v127;
  sub_1AD00FF28(v59 + v127[6], (uint64_t)&v180, &qword_1EECD2A20);
  sub_1AD00FF28(v60 + v80[6], (uint64_t)v189, &qword_1EECD2A20);
  sub_1AD00FF28((uint64_t)&v180, (uint64_t)v179, &qword_1EECD2A20);
  sub_1AD00FF28((uint64_t)v189, (uint64_t)&v179[28], &qword_1EECD2A20);
  sub_1AD00FF28((uint64_t)&v180, (uint64_t)v191, &qword_1EECD2A20);
  if (sub_1AD0CD93C(v191) == 1)
  {
    sub_1AD4765E4(v189, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD476418);
    sub_1AD066230(v60, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230(v59, type metadata accessor for CloudKitUserIdentity);
    sub_1AD00FF28((uint64_t)&v179[28], (uint64_t)&v165, &qword_1EECD2A20);
    sub_1AD00FF28((uint64_t)&v165, (uint64_t)v164, &qword_1EECD2A20);
    v81 = sub_1AD0CD93C((uint64_t *)v164);
    v66 = v140;
    if (v81 == 1)
    {
      sub_1AD00FF28((uint64_t)v179, (uint64_t)&v150, &qword_1EECD2A20);
      sub_1AD4765E4(&v150, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284D2C);
      v64 = v141;
      sub_1AD0D3D2C(v145, v141, type metadata accessor for CloudKitUserIdentity);
      sub_1AD0D3D2C(v146, (uint64_t)v38, type metadata accessor for CloudKitUserIdentity);
      v65 = (uint64_t)v62;
      v67 = (uint64_t)v139;
      goto LABEL_38;
    }
    v64 = v141;
    v65 = (uint64_t)v62;
    goto LABEL_36;
  }
  sub_1AD00FF28((uint64_t)&v180, (uint64_t)&v165, &qword_1EECD2A20);
  sub_1AD00FF28((uint64_t)v189, (uint64_t)v164, &qword_1EECD2A20);
  v82 = sub_1AD0CD93C((uint64_t *)v164);
  v66 = v140;
  v65 = (uint64_t)v62;
  if (v82 == 1)
  {
    sub_1AD00FF28((uint64_t)&v180, (uint64_t)v149, &qword_1EECD2A20);
    sub_1AD2851B8((uint64_t)v149);
    sub_1AD2851B8((uint64_t)v149);
    sub_1AD066230(v143, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230(v144, type metadata accessor for CloudKitUserIdentity);
    v161 = v176;
    v162 = v177;
    v163 = v178;
    v156 = v171;
    v157 = v172;
    v158 = v173;
    v159 = v174;
    v160 = v175;
    v152 = v167;
    v153 = v168;
    v154 = v169;
    v155 = v170;
    v150 = v165;
    v151 = v166;
    sub_1AD284F80((uint64_t)&v150);
    v64 = v141;
LABEL_36:
    v67 = (uint64_t)v139;
    memcpy(v164, v179, sizeof(v164));
    sub_1AD597658((uint64_t)v164);
    goto LABEL_17;
  }
  sub_1AD00FF28((uint64_t)v189, (uint64_t)v147, &qword_1EECD2A20);
  v161 = v147[11];
  v162 = v147[12];
  v163 = v147[13];
  v156 = v147[6];
  v157 = v147[7];
  v158 = v147[8];
  v159 = v147[9];
  v160 = v147[10];
  v152 = v147[2];
  v153 = v147[3];
  v154 = v147[4];
  v155 = v147[5];
  v150 = v147[0];
  v151 = v147[1];
  sub_1AD00FF28((uint64_t)&v180, (uint64_t)v148, &qword_1EECD2A20);
  sub_1AD4765E4(&v180, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD476418);
  sub_1AD2851B8((uint64_t)v148);
  v83 = sub_1AD5928E0((uint64_t)&v165, (uint64_t)&v150);
  sub_1AD066230(v143, type metadata accessor for CloudKitUserIdentity);
  sub_1AD066230(v144, type metadata accessor for CloudKitUserIdentity);
  v149[10] = v175;
  v149[11] = v176;
  v149[12] = v177;
  v149[13] = v178;
  v149[6] = v171;
  v149[7] = v172;
  v149[8] = v173;
  v149[9] = v174;
  v149[2] = v167;
  v149[3] = v168;
  v149[4] = v169;
  v149[5] = v170;
  v149[0] = v165;
  v149[1] = v166;
  sub_1AD284F80((uint64_t)v149);
  sub_1AD00FF28((uint64_t)v179, (uint64_t)&v150, &qword_1EECD2A20);
  sub_1AD4765E4(&v150, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD284D2C);
  v64 = v141;
  sub_1AD0D3D2C(v145, v141, type metadata accessor for CloudKitUserIdentity);
  v61 = v142;
  sub_1AD0D3D2C(v146, (uint64_t)v38, type metadata accessor for CloudKitUserIdentity);
  v67 = (uint64_t)v139;
  if ((v83 & 1) == 0)
    goto LABEL_18;
LABEL_38:
  v84 = v127;
  v85 = sub_1AD350DB4(*(_QWORD **)(v64 + v127[7]), *(_QWORD **)&v38[v127[7]]);
  sub_1AD066230(v64, type metadata accessor for CloudKitUserIdentity);
  sub_1AD066230((uint64_t)v38, type metadata accessor for CloudKitUserIdentity);
  v68 = v138;
  sub_1AD0D3D2C(v145, v138, type metadata accessor for CloudKitUserIdentity);
  v69 = v131;
  sub_1AD0D3D2C(v146, v131, type metadata accessor for CloudKitUserIdentity);
  if ((v85 & 1) == 0)
    goto LABEL_19;
  v86 = v84[8];
  v87 = v68 + v86;
  v88 = v68;
  v90 = *(_QWORD *)(v68 + v86);
  v89 = *(_QWORD *)(v87 + 8);
  v91 = (uint64_t *)(v69 + v86);
  v92 = *v91;
  v93 = v91[1];
  if (v89 >> 60 == 15)
  {
    sub_1AD00408C(v92, v93);
    sub_1AD066230(v69, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230(v88, type metadata accessor for CloudKitUserIdentity);
    if (v93 >> 60 == 15)
    {
      sub_1AD004118(v90, v89);
      sub_1AD0D3D2C(v145, v65, type metadata accessor for CloudKitUserIdentity);
      v67 = (uint64_t)v139;
      sub_1AD0D3D2C(v146, (uint64_t)v139, type metadata accessor for CloudKitUserIdentity);
      goto LABEL_46;
    }
    goto LABEL_44;
  }
  v94 = *(_QWORD *)(v87 + 8);
  if (v93 >> 60 == 15)
  {
    sub_1AD0040A0(v90, v94);
    sub_1AD0040A0(v90, v89);
    sub_1AD066230(v69, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230(v138, type metadata accessor for CloudKitUserIdentity);
    sub_1AD004118(v90, v89);
LABEL_44:
    sub_1AD004118(v90, v89);
    sub_1AD004118(v92, v93);
    v67 = (uint64_t)v139;
    v66 = v140;
    v61 = v142;
    goto LABEL_20;
  }
  sub_1AD00408C(v90, v94);
  sub_1AD00408C(v92, v93);
  sub_1AD00408C(v90, v89);
  sub_1AD3DB778(v90, v89);
  v96 = v95;
  sub_1AD004118(v92, v93);
  sub_1AD004118(v90, v89);
  sub_1AD066230(v69, type metadata accessor for CloudKitUserIdentity);
  sub_1AD066230(v138, type metadata accessor for CloudKitUserIdentity);
  sub_1AD004118(v90, v89);
  sub_1AD0D3D2C(v145, v65, type metadata accessor for CloudKitUserIdentity);
  v67 = (uint64_t)v139;
  sub_1AD0D3D2C(v146, (uint64_t)v139, type metadata accessor for CloudKitUserIdentity);
  v70 = v137;
  v66 = v140;
  v61 = v142;
  if ((v96 & 1) == 0)
    goto LABEL_21;
LABEL_46:
  v97 = v127[9];
  v99 = *(_QWORD *)(v65 + v97);
  v98 = *(_QWORD *)(v65 + v97 + 8);
  v100 = (uint64_t *)(v67 + v97);
  v101 = *v100;
  v102 = v100[1];
  if (v98 >> 60 == 15)
  {
    sub_1AD00408C(v101, v102);
    sub_1AD066230(v67, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230(v65, type metadata accessor for CloudKitUserIdentity);
    if (v102 >> 60 == 15)
    {
      sub_1AD004118(v99, v98);
      v72 = v133;
      sub_1AD0D3D2C(v145, v133, type metadata accessor for CloudKitUserIdentity);
      v71 = v130;
      sub_1AD0D3D2C(v146, v130, type metadata accessor for CloudKitUserIdentity);
      v66 = v140;
      goto LABEL_53;
    }
    goto LABEL_51;
  }
  if (v102 >> 60 == 15)
  {
    sub_1AD0040A0(v99, v98);
    sub_1AD0040A0(v99, v98);
    sub_1AD066230(v67, type metadata accessor for CloudKitUserIdentity);
    sub_1AD066230(v65, type metadata accessor for CloudKitUserIdentity);
    sub_1AD004118(v99, v98);
LABEL_51:
    sub_1AD004118(v99, v98);
    sub_1AD004118(v101, v102);
    v70 = v137;
    v66 = v140;
    v61 = v142;
    goto LABEL_22;
  }
  sub_1AD00408C(v99, v98);
  sub_1AD00408C(v101, v102);
  sub_1AD00408C(v99, v98);
  sub_1AD3DB778(v99, v98);
  v104 = v103;
  sub_1AD004118(v101, v102);
  sub_1AD004118(v99, v98);
  sub_1AD066230(v67, type metadata accessor for CloudKitUserIdentity);
  sub_1AD066230(v65, type metadata accessor for CloudKitUserIdentity);
  sub_1AD004118(v99, v98);
  v72 = v133;
  sub_1AD0D3D2C(v145, v133, type metadata accessor for CloudKitUserIdentity);
  v71 = v130;
  sub_1AD0D3D2C(v146, v130, type metadata accessor for CloudKitUserIdentity);
  v70 = v137;
  v66 = v140;
  v61 = v142;
  if ((v104 & 1) != 0)
  {
LABEL_53:
    v105 = v127;
    v106 = *(unsigned __int8 *)(v72 + v127[10]);
    sub_1AD066230(v72, type metadata accessor for CloudKitUserIdentity);
    v107 = *(unsigned __int8 *)(v71 + v105[10]);
    sub_1AD066230(v71, type metadata accessor for CloudKitUserIdentity);
    v73 = v134;
    sub_1AD0D3D2C(v145, v134, type metadata accessor for CloudKitUserIdentity);
    sub_1AD0D3D2C(v146, v142, type metadata accessor for CloudKitUserIdentity);
    v108 = v106 == v107;
    v61 = v142;
    v70 = v137;
    if (!v108)
      goto LABEL_24;
    v109 = *(unsigned __int8 *)(v73 + v105[11]);
    sub_1AD066230(v73, type metadata accessor for CloudKitUserIdentity);
    v110 = v61;
    v111 = *(unsigned __int8 *)(v61 + v105[11]);
    sub_1AD066230(v110, type metadata accessor for CloudKitUserIdentity);
    sub_1AD0D3D2C(v145, v137, type metadata accessor for CloudKitUserIdentity);
    sub_1AD0D3D2C(v146, v66, type metadata accessor for CloudKitUserIdentity);
    v108 = v109 == v111;
    v70 = v137;
    v74 = (uint64_t)v135;
    if (!v108)
      goto LABEL_25;
    v112 = v105[12];
    v114 = *(_QWORD *)(v137 + v112);
    v113 = *(_QWORD *)(v137 + v112 + 8);
    v115 = (uint64_t *)(v66 + v112);
    v116 = *v115;
    v117 = v115[1];
    if (v113 >> 60 == 15)
    {
      sub_1AD00408C(v116, v117);
      sub_1AD066230(v66, type metadata accessor for CloudKitUserIdentity);
      sub_1AD066230(v70, type metadata accessor for CloudKitUserIdentity);
      v75 = v136;
      if (v117 >> 60 == 15)
      {
        sub_1AD004118(v114, v113);
        sub_1AD0D3D2C(v145, v74, type metadata accessor for CloudKitUserIdentity);
        sub_1AD0D3D2C(v146, v75, type metadata accessor for CloudKitUserIdentity);
        goto LABEL_64;
      }
    }
    else
    {
      if (v117 >> 60 != 15)
      {
        sub_1AD00408C(v114, v113);
        sub_1AD00408C(v116, v117);
        sub_1AD00408C(v114, v113);
        sub_1AD3DB778(v114, v113);
        v119 = v118;
        sub_1AD004118(v116, v117);
        sub_1AD004118(v114, v113);
        sub_1AD066230(v140, type metadata accessor for CloudKitUserIdentity);
        sub_1AD066230(v137, type metadata accessor for CloudKitUserIdentity);
        sub_1AD004118(v114, v113);
        sub_1AD0D3D2C(v145, v74, type metadata accessor for CloudKitUserIdentity);
        v75 = v136;
        sub_1AD0D3D2C(v146, v136, type metadata accessor for CloudKitUserIdentity);
        if ((v119 & 1) == 0)
          goto LABEL_27;
LABEL_64:
        v120 = v127;
        v121 = *(_QWORD *)(v74 + v127[13]);
        sub_1AD066230(v74, type metadata accessor for CloudKitUserIdentity);
        v122 = *(_QWORD *)(v75 + v120[13]);
        sub_1AD066230(v75, type metadata accessor for CloudKitUserIdentity);
        return v121 == v122;
      }
      sub_1AD0040A0(v114, v113);
      sub_1AD0040A0(v114, v113);
      sub_1AD066230(v140, type metadata accessor for CloudKitUserIdentity);
      sub_1AD066230(v137, type metadata accessor for CloudKitUserIdentity);
      sub_1AD004118(v114, v113);
      v75 = v136;
    }
    sub_1AD004118(v114, v113);
    sub_1AD004118(v116, v117);
    goto LABEL_26;
  }
LABEL_23:
  sub_1AD066230(v71, type metadata accessor for CloudKitUserIdentity);
  sub_1AD066230(v72, type metadata accessor for CloudKitUserIdentity);
  v73 = v134;
  sub_1AD0D3D2C(v145, v134, type metadata accessor for CloudKitUserIdentity);
  sub_1AD0D3D2C(v146, v61, type metadata accessor for CloudKitUserIdentity);
LABEL_24:
  sub_1AD066230(v61, type metadata accessor for CloudKitUserIdentity);
  sub_1AD066230(v73, type metadata accessor for CloudKitUserIdentity);
  sub_1AD0D3D2C(v145, v70, type metadata accessor for CloudKitUserIdentity);
  sub_1AD0D3D2C(v146, v66, type metadata accessor for CloudKitUserIdentity);
  v74 = (uint64_t)v135;
LABEL_25:
  sub_1AD066230(v66, type metadata accessor for CloudKitUserIdentity);
  sub_1AD066230(v70, type metadata accessor for CloudKitUserIdentity);
  v75 = v136;
LABEL_26:
  sub_1AD0D3D2C(v145, v74, type metadata accessor for CloudKitUserIdentity);
  sub_1AD0D3D2C(v146, v75, type metadata accessor for CloudKitUserIdentity);
LABEL_27:
  sub_1AD066230(v75, type metadata accessor for CloudKitUserIdentity);
  sub_1AD066230(v74, type metadata accessor for CloudKitUserIdentity);
  return 0;
}

uint64_t sub_1AD5941D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _BOOL8 v138;
  uint64_t result;
  char v140;
  int *v141;
  BOOL v142;
  int v143;
  int v144;
  uint64_t v145;
  BOOL v146;
  int v147;
  int v148;
  int *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  int v155;
  int v156;
  uint64_t v157;
  int v158;
  int v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  int v165;
  int *v166;
  uint64_t v167;
  int v168;
  uint64_t v169;
  int v170;
  uint64_t v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t *v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  char v178;
  char v179;
  uint64_t v180;
  unint64_t v181;
  uint64_t v182;
  uint64_t *v183;
  uint64_t v184;
  unint64_t v185;
  char v186;
  char v187;
  uint64_t v188;
  int *v189;
  uint64_t v190;
  int v191;
  int v192;
  int v193;
  int v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  unsigned int (*v199)(uint64_t, uint64_t, uint64_t);
  uint64_t v200;
  uint64_t v201;
  char v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t *v207;
  uint64_t v208;
  unint64_t v209;
  unint64_t v210;
  char v211;
  char v212;
  uint64_t v213;
  int *v214;
  int v215;
  int v216;
  int *v217;
  int v218;
  uint64_t v219;
  char *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  int *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;

  v224 = type metadata accessor for CloudKitSharingToken();
  v4 = *(_QWORD *)(v224 - 8);
  MEMORY[0x1E0C80A78](v224);
  v6 = (char *)&v219 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EECDB370);
  MEMORY[0x1E0C80A78](v7);
  v223 = (uint64_t)&v219 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDE7B0);
  MEMORY[0x1E0C80A78](v221);
  v225 = (uint64_t)&v219 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v226 = (int *)type metadata accessor for CloudKitShareParticipant(0);
  v10 = MEMORY[0x1E0C80A78](v226);
  v12 = (char *)&v219 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v219 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v248 = (uint64_t)&v219 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v247 = (uint64_t)&v219 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v253 = (uint64_t)&v219 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v256 = (uint64_t)&v219 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v254 = (uint64_t)&v219 - v25;
  v26 = MEMORY[0x1E0C80A78](v24);
  v255 = (uint64_t)&v219 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v29 = MEMORY[0x1E0C80A78](v28);
  v252 = (uint64_t)&v219 - v30;
  v31 = MEMORY[0x1E0C80A78](v29);
  v246 = (uint64_t)&v219 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v245 = (uint64_t)&v219 - v34;
  v35 = MEMORY[0x1E0C80A78](v33);
  v227 = (uint64_t)&v219 - v36;
  v37 = MEMORY[0x1E0C80A78](v35);
  v38 = MEMORY[0x1E0C80A78](v37);
  v244 = (uint64_t)&v219 - v39;
  v40 = MEMORY[0x1E0C80A78](v38);
  v257 = (uint64_t)&v219 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v43 = MEMORY[0x1E0C80A78](v42);
  v259 = (uint64_t)&v219 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v242 = (uint64_t)&v219 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v243 = (uint64_t)&v219 - v48;
  MEMORY[0x1E0C80A78](v47);
  v50 = MEMORY[0x1E0C80A78]((char *)&v219 - v49);
  v241 = (uint64_t)&v219 - v51;
  v52 = MEMORY[0x1E0C80A78](v50);
  v238 = (uint64_t)&v219 - v53;
  v54 = MEMORY[0x1E0C80A78](v52);
  v239 = (char *)&v219 - v55;
  v56 = MEMORY[0x1E0C80A78](v54);
  v261 = (uint64_t)&v219 - v57;
  v58 = MEMORY[0x1E0C80A78](v56);
  v237 = (uint64_t)&v219 - v59;
  v60 = MEMORY[0x1E0C80A78](v58);
  v61 = MEMORY[0x1E0C80A78](v60);
  v236 = (uint64_t)&v219 - v62;
  v63 = MEMORY[0x1E0C80A78](v61);
  v233 = (uint64_t)&v219 - v64;
  v65 = MEMORY[0x1E0C80A78](v63);
  v234 = (uint64_t)&v219 - v66;
  v67 = MEMORY[0x1E0C80A78](v65);
  v232 = (uint64_t)&v219 - v68;
  v69 = MEMORY[0x1E0C80A78](v67);
  v70 = MEMORY[0x1E0C80A78](v69);
  v230 = (char *)&v219 - v71;
  v72 = MEMORY[0x1E0C80A78](v70);
  v229 = (uint64_t)&v219 - v73;
  v74 = MEMORY[0x1E0C80A78](v72);
  v76 = (char *)&v219 - v75;
  v77 = MEMORY[0x1E0C80A78](v74);
  v228 = (uint64_t)&v219 - v78;
  v79 = MEMORY[0x1E0C80A78](v77);
  v81 = (char *)&v219 - v80;
  v82 = MEMORY[0x1E0C80A78](v79);
  v89 = (char *)&v219 - v85;
  v90 = *(_QWORD *)(a1 + 24);
  if (v90)
  {
    v91 = *(_QWORD *)(a2 + 24);
    if (v91)
    {
      v231 = v84;
      v235 = v83;
      v240 = v82;
      v258 = v88;
      v220 = v6;
      v250 = v12;
      v251 = v86;
      v92 = *(_QWORD *)(a1 + 16);
      v93 = *(_QWORD *)(a2 + 16);
      v260 = v87;
      v249 = v15;
      v222 = v4;
      if (v92 == v93 && v90 == v91)
      {
        sub_1AD0D3D2C(a1, (uint64_t)&v219 - v85, type metadata accessor for CloudKitShareParticipant);
        sub_1AD0D3D2C(a2, (uint64_t)v81, type metadata accessor for CloudKitShareParticipant);
      }
      else
      {
        v94 = sub_1AD63C2A8();
        sub_1AD0D3D2C(a1, (uint64_t)v89, type metadata accessor for CloudKitShareParticipant);
        sub_1AD0D3D2C(a2, (uint64_t)v81, type metadata accessor for CloudKitShareParticipant);
        if ((v94 & 1) == 0)
        {
          sub_1AD066230((uint64_t)v81, type metadata accessor for CloudKitShareParticipant);
          sub_1AD066230((uint64_t)v89, type metadata accessor for CloudKitShareParticipant);
          goto LABEL_20;
        }
      }
      v95 = *((_QWORD *)v89 + 7);
      if (v95 != 1)
      {
        v96 = *((_QWORD *)v81 + 7);
        if (v96 != 1)
        {
          v97 = *((_QWORD *)v89 + 6);
          v98 = *((_QWORD *)v81 + 6);
          if (v95)
          {
            if (v96)
            {
              if (v97 == v98 && v95 == v96)
              {
                swift_bridgeObjectRetain();
                sub_1AD066230((uint64_t)v81, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230((uint64_t)v89, type metadata accessor for CloudKitShareParticipant);
                sub_1AD003F24(v97, v95);
LABEL_16:
                v101 = v228;
                sub_1AD0D3D2C(a1, v228, type metadata accessor for CloudKitShareParticipant);
                sub_1AD0D3D2C(a2, (uint64_t)v76, type metadata accessor for CloudKitShareParticipant);
                v102 = (uint64_t)v230;
                goto LABEL_44;
              }
              v140 = sub_1AD63C2A8();
              swift_bridgeObjectRetain();
              sub_1AD066230((uint64_t)v81, type metadata accessor for CloudKitShareParticipant);
              sub_1AD066230((uint64_t)v89, type metadata accessor for CloudKitShareParticipant);
              sub_1AD003F24(v97, v95);
              v101 = v228;
              sub_1AD0D3D2C(a1, v228, type metadata accessor for CloudKitShareParticipant);
              sub_1AD0D3D2C(a2, (uint64_t)v76, type metadata accessor for CloudKitShareParticipant);
              v103 = v261;
              v102 = (uint64_t)v230;
              if ((v140 & 1) != 0)
              {
LABEL_44:
                v141 = v226;
                v142 = sub_1AD592CF8(v101 + v226[6], (uint64_t)&v76[v226[6]]);
                sub_1AD066230((uint64_t)v76, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v101, type metadata accessor for CloudKitShareParticipant);
                v104 = v229;
                sub_1AD0D3D2C(a1, v229, type metadata accessor for CloudKitShareParticipant);
                v103 = v261;
                sub_1AD0D3D2C(a2, v102, type metadata accessor for CloudKitShareParticipant);
                if (v142)
                {
                  v143 = *(unsigned __int8 *)(v104 + v141[7]);
                  sub_1AD066230(v104, type metadata accessor for CloudKitShareParticipant);
                  v144 = *(unsigned __int8 *)(v102 + v141[7]);
                  sub_1AD066230(v102, type metadata accessor for CloudKitShareParticipant);
                  v105 = v231;
                  sub_1AD0D3D2C(a1, v231, type metadata accessor for CloudKitShareParticipant);
                  v145 = v232;
                  sub_1AD0D3D2C(a2, v232, type metadata accessor for CloudKitShareParticipant);
                  v146 = v143 == v144;
                  v106 = v145;
                  v103 = v261;
                  if (!v146)
                    goto LABEL_23;
                  v147 = *(unsigned __int8 *)(v105 + v141[8]);
                  sub_1AD066230(v105, type metadata accessor for CloudKitShareParticipant);
                  v148 = *(unsigned __int8 *)(v145 + v141[8]);
                  sub_1AD066230(v145, type metadata accessor for CloudKitShareParticipant);
                  v107 = v234;
                  sub_1AD0D3D2C(a1, v234, type metadata accessor for CloudKitShareParticipant);
                  v108 = v233;
                  sub_1AD0D3D2C(a2, v233, type metadata accessor for CloudKitShareParticipant);
                  v146 = v147 == v148;
                  v103 = v261;
                  v109 = (uint64_t)v239;
                  if (!v146)
                    goto LABEL_24;
                  v149 = v141;
                  v150 = v141[9];
                  v151 = *(char *)(v107 + v150);
                  v152 = *(char *)(v108 + v150);
                  v232 = qword_1AD6956A8[v151];
                  v153 = qword_1AD6956A8[v152];
                  sub_1AD066230(v108, type metadata accessor for CloudKitShareParticipant);
                  sub_1AD066230(v107, type metadata accessor for CloudKitShareParticipant);
                  v110 = v236;
                  sub_1AD0D3D2C(a1, v236, type metadata accessor for CloudKitShareParticipant);
                  v111 = v235;
                  sub_1AD0D3D2C(a2, v235, type metadata accessor for CloudKitShareParticipant);
                  if (v232 != v153)
                    goto LABEL_25;
                  v154 = v149[10];
                  v155 = *(unsigned __int8 *)(v110 + v154);
                  v156 = *(unsigned __int8 *)(v111 + v154);
                  sub_1AD066230(v111, type metadata accessor for CloudKitShareParticipant);
                  sub_1AD066230(v110, type metadata accessor for CloudKitShareParticipant);
                  v112 = v237;
                  sub_1AD0D3D2C(a1, v237, type metadata accessor for CloudKitShareParticipant);
                  sub_1AD0D3D2C(a2, v261, type metadata accessor for CloudKitShareParticipant);
                  v146 = v155 == v156;
                  v103 = v261;
                  if (!v146)
                    goto LABEL_26;
                  v157 = v149[11];
                  v158 = *(unsigned __int8 *)(v112 + v157);
                  v159 = *(unsigned __int8 *)(v261 + v157);
                  sub_1AD066230(v261, type metadata accessor for CloudKitShareParticipant);
                  sub_1AD066230(v112, type metadata accessor for CloudKitShareParticipant);
                  sub_1AD0D3D2C(a1, v109, type metadata accessor for CloudKitShareParticipant);
                  v113 = v238;
                  sub_1AD0D3D2C(a2, v238, type metadata accessor for CloudKitShareParticipant);
                  if (v158 != v159)
                    goto LABEL_27;
                  v160 = v149[12];
                  v161 = qword_1AD6956A8[*(char *)(v109 + v160)];
                  v162 = qword_1AD6956A8[*(char *)(v113 + v160)];
                  sub_1AD066230(v113, type metadata accessor for CloudKitShareParticipant);
                  sub_1AD066230(v109, type metadata accessor for CloudKitShareParticipant);
                  v114 = v241;
                  sub_1AD0D3D2C(a1, v241, type metadata accessor for CloudKitShareParticipant);
                  v115 = v240;
                  sub_1AD0D3D2C(a2, v240, type metadata accessor for CloudKitShareParticipant);
                  v146 = v161 == v162;
                  v116 = v260;
                  if (!v146)
                    goto LABEL_28;
                  v163 = v149[13];
                  v164 = *(unsigned __int8 *)(v114 + v163);
                  v165 = *(unsigned __int8 *)(v115 + v163);
                  sub_1AD066230(v115, type metadata accessor for CloudKitShareParticipant);
                  sub_1AD066230(v114, type metadata accessor for CloudKitShareParticipant);
                  v166 = v149;
                  v117 = v243;
                  sub_1AD0D3D2C(a1, v243, type metadata accessor for CloudKitShareParticipant);
                  v118 = v242;
                  sub_1AD0D3D2C(a2, v242, type metadata accessor for CloudKitShareParticipant);
                  v146 = v164 == v165;
                  v116 = v260;
                  if (!v146)
                    goto LABEL_29;
                  v167 = v166[14];
                  v168 = *(unsigned __int8 *)(v117 + v167);
                  v169 = v118;
                  v170 = *(unsigned __int8 *)(v118 + v167);
                  sub_1AD066230(v169, type metadata accessor for CloudKitShareParticipant);
                  sub_1AD066230(v117, type metadata accessor for CloudKitShareParticipant);
                  v119 = v259;
                  sub_1AD0D3D2C(a1, v259, type metadata accessor for CloudKitShareParticipant);
                  v120 = v258;
                  sub_1AD0D3D2C(a2, v258, type metadata accessor for CloudKitShareParticipant);
                  v146 = v168 == v170;
                  v116 = v260;
                  if (!v146)
                    goto LABEL_30;
                  v171 = v166[15];
                  v173 = *(_QWORD *)(v119 + v171);
                  v172 = *(_QWORD *)(v119 + v171 + 8);
                  v174 = (uint64_t *)(v120 + v171);
                  v175 = v119;
                  v177 = *v174;
                  v176 = v174[1];
                  if (v172 >> 60 == 15)
                  {
                    v121 = v253;
                    sub_1AD00408C(v177, v176);
                    sub_1AD066230(v120, type metadata accessor for CloudKitShareParticipant);
                    sub_1AD066230(v175, type metadata accessor for CloudKitShareParticipant);
                    if (v176 >> 60 == 15)
                    {
                      sub_1AD004118(v173, v172);
                      v122 = v257;
                      sub_1AD0D3D2C(a1, v257, type metadata accessor for CloudKitShareParticipant);
                      v123 = v244;
                      sub_1AD0D3D2C(a2, v244, type metadata accessor for CloudKitShareParticipant);
                      goto LABEL_66;
                    }
                  }
                  else
                  {
                    v121 = v253;
                    if (v176 >> 60 != 15)
                    {
                      sub_1AD00408C(v173, v172);
                      sub_1AD00408C(v177, v176);
                      sub_1AD00408C(v173, v172);
                      sub_1AD3DB778(v173, v172);
                      v179 = v178;
                      sub_1AD004118(v177, v176);
                      sub_1AD004118(v173, v172);
                      sub_1AD066230(v258, type metadata accessor for CloudKitShareParticipant);
                      sub_1AD066230(v259, type metadata accessor for CloudKitShareParticipant);
                      sub_1AD004118(v173, v172);
                      v122 = v257;
                      sub_1AD0D3D2C(a1, v257, type metadata accessor for CloudKitShareParticipant);
                      v123 = v244;
                      sub_1AD0D3D2C(a2, v244, type metadata accessor for CloudKitShareParticipant);
                      v124 = v256;
                      v116 = v260;
                      if ((v179 & 1) == 0)
                        goto LABEL_32;
LABEL_66:
                      v180 = v226[16];
                      v182 = *(_QWORD *)(v122 + v180);
                      v181 = *(_QWORD *)(v122 + v180 + 8);
                      v183 = (uint64_t *)(v123 + v180);
                      v184 = *v183;
                      v185 = v183[1];
                      if (v181 >> 60 == 15)
                      {
                        sub_1AD00408C(v184, v185);
                        sub_1AD066230(v123, type metadata accessor for CloudKitShareParticipant);
                        sub_1AD066230(v257, type metadata accessor for CloudKitShareParticipant);
                        v125 = v227;
                        if (v185 >> 60 == 15)
                        {
                          sub_1AD004118(v182, v181);
                          v116 = v260;
                          sub_1AD0D3D2C(a1, v260, type metadata accessor for CloudKitShareParticipant);
                          sub_1AD0D3D2C(a2, v125, type metadata accessor for CloudKitShareParticipant);
                          goto LABEL_73;
                        }
                      }
                      else
                      {
                        if (v185 >> 60 != 15)
                        {
                          sub_1AD00408C(v182, v181);
                          sub_1AD00408C(v184, v185);
                          sub_1AD00408C(v182, v181);
                          sub_1AD3DB778(v182, v181);
                          v187 = v186;
                          sub_1AD004118(v184, v185);
                          sub_1AD004118(v182, v181);
                          sub_1AD066230(v123, type metadata accessor for CloudKitShareParticipant);
                          sub_1AD066230(v257, type metadata accessor for CloudKitShareParticipant);
                          sub_1AD004118(v182, v181);
                          v116 = v260;
                          sub_1AD0D3D2C(a1, v260, type metadata accessor for CloudKitShareParticipant);
                          v125 = v227;
                          sub_1AD0D3D2C(a2, v227, type metadata accessor for CloudKitShareParticipant);
                          v124 = v256;
                          if ((v187 & 1) == 0)
                            goto LABEL_34;
LABEL_73:
                          v188 = v125;
                          v189 = v226;
                          v190 = v116;
                          v191 = *(unsigned __int8 *)(v116 + v226[17]);
                          sub_1AD066230(v190, type metadata accessor for CloudKitShareParticipant);
                          v192 = *(unsigned __int8 *)(v188 + v189[17]);
                          sub_1AD066230(v188, type metadata accessor for CloudKitShareParticipant);
                          v126 = v245;
                          sub_1AD0D3D2C(a1, v245, type metadata accessor for CloudKitShareParticipant);
                          v127 = v246;
                          sub_1AD0D3D2C(a2, v246, type metadata accessor for CloudKitShareParticipant);
                          v146 = v191 == v192;
                          v124 = v256;
                          if (!v146)
                            goto LABEL_35;
                          v193 = *(unsigned __int8 *)(v126 + v189[18]);
                          sub_1AD066230(v126, type metadata accessor for CloudKitShareParticipant);
                          v194 = *(unsigned __int8 *)(v127 + v189[18]);
                          sub_1AD066230(v127, type metadata accessor for CloudKitShareParticipant);
                          v128 = v252;
                          sub_1AD0D3D2C(a1, v252, type metadata accessor for CloudKitShareParticipant);
                          v129 = v251;
                          sub_1AD0D3D2C(a2, v251, type metadata accessor for CloudKitShareParticipant);
                          v146 = v193 == v194;
                          v130 = v255;
                          v124 = v256;
                          v131 = v254;
                          if (!v146)
                            goto LABEL_36;
                          v132 = a1;
                          v195 = v226[19];
                          v196 = v129 + v195;
                          v197 = v225;
                          v198 = v225 + *(int *)(v221 + 48);
                          sub_1ACFF64C0(v128 + v195, v225, (uint64_t *)&unk_1EECDB370);
                          sub_1ACFF64C0(v196, v198, (uint64_t *)&unk_1EECDB370);
                          v199 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v222 + 48);
                          if (v199(v197, 1, v224) == 1)
                          {
                            sub_1AD066230(v251, type metadata accessor for CloudKitShareParticipant);
                            sub_1AD066230(v252, type metadata accessor for CloudKitShareParticipant);
                            if (v199(v198, 1, v224) == 1)
                            {
                              sub_1AD009758(v225, (uint64_t *)&unk_1EECDB370);
                              v130 = v255;
                              sub_1AD0D3D2C(a1, v255, type metadata accessor for CloudKitShareParticipant);
                              v131 = v254;
                              sub_1AD0D3D2C(a2, v254, type metadata accessor for CloudKitShareParticipant);
                              goto LABEL_84;
                            }
                          }
                          else
                          {
                            sub_1ACFF64C0(v225, v223, (uint64_t *)&unk_1EECDB370);
                            if (v199(v198, 1, v224) != 1)
                            {
                              v200 = (uint64_t)v220;
                              sub_1AD0CE1D8(v198, (uint64_t)v220);
                              v201 = v223;
                              v202 = sub_1AD4E9140(v223, v200);
                              sub_1AD066230(v200, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                              sub_1AD066230(v251, type metadata accessor for CloudKitShareParticipant);
                              sub_1AD066230(v252, type metadata accessor for CloudKitShareParticipant);
                              sub_1AD066230(v201, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                              sub_1AD009758(v225, (uint64_t *)&unk_1EECDB370);
                              v130 = v255;
                              sub_1AD0D3D2C(a1, v255, type metadata accessor for CloudKitShareParticipant);
                              v131 = v254;
                              sub_1AD0D3D2C(a2, v254, type metadata accessor for CloudKitShareParticipant);
                              v133 = v253;
                              v124 = v256;
                              if ((v202 & 1) == 0)
                                goto LABEL_38;
LABEL_84:
                              v203 = v226[20];
                              v204 = v130 + v203;
                              v206 = *(_QWORD *)(v130 + v203);
                              v205 = *(_QWORD *)(v204 + 8);
                              v207 = (uint64_t *)(v131 + v203);
                              v208 = *v207;
                              v209 = v207[1];
                              if (v205 >> 60 == 15)
                              {
                                sub_1AD00408C(v208, v209);
                                sub_1AD066230(v254, type metadata accessor for CloudKitShareParticipant);
                                sub_1AD066230(v255, type metadata accessor for CloudKitShareParticipant);
                                if (v209 >> 60 == 15)
                                {
                                  sub_1AD004118(v206, v205);
                                  v124 = v256;
                                  sub_1AD0D3D2C(a1, v256, type metadata accessor for CloudKitShareParticipant);
                                  v133 = v253;
                                  sub_1AD0D3D2C(a2, v253, type metadata accessor for CloudKitShareParticipant);
                                  v135 = (uint64_t)v249;
                                  v134 = (uint64_t)v250;
                                  goto LABEL_91;
                                }
                              }
                              else
                              {
                                v210 = *(_QWORD *)(v204 + 8);
                                if (v209 >> 60 != 15)
                                {
                                  sub_1AD00408C(v206, v210);
                                  sub_1AD00408C(v208, v209);
                                  sub_1AD00408C(v206, v205);
                                  sub_1AD3DB778(v206, v205);
                                  v212 = v211;
                                  sub_1AD004118(v208, v209);
                                  sub_1AD004118(v206, v205);
                                  sub_1AD066230(v254, type metadata accessor for CloudKitShareParticipant);
                                  sub_1AD066230(v255, type metadata accessor for CloudKitShareParticipant);
                                  sub_1AD004118(v206, v205);
                                  v213 = v256;
                                  sub_1AD0D3D2C(a1, v256, type metadata accessor for CloudKitShareParticipant);
                                  v133 = v253;
                                  v124 = v213;
                                  sub_1AD0D3D2C(a2, v253, type metadata accessor for CloudKitShareParticipant);
                                  v135 = (uint64_t)v249;
                                  v134 = (uint64_t)v250;
                                  if ((v212 & 1) == 0)
                                    goto LABEL_40;
LABEL_91:
                                  v214 = v226;
                                  v215 = *(unsigned __int8 *)(v124 + v226[21]);
                                  sub_1AD066230(v124, type metadata accessor for CloudKitShareParticipant);
                                  v216 = *(unsigned __int8 *)(v133 + v214[21]);
                                  sub_1AD066230(v133, type metadata accessor for CloudKitShareParticipant);
                                  v136 = v247;
                                  sub_1AD0D3D2C(a1, v247, type metadata accessor for CloudKitShareParticipant);
                                  v137 = v248;
                                  sub_1AD0D3D2C(a2, v248, type metadata accessor for CloudKitShareParticipant);
                                  if (v215 == v216)
                                  {
                                    v217 = v226;
                                    v218 = *(unsigned __int8 *)(v136 + v226[22]);
                                    sub_1AD066230(v136, type metadata accessor for CloudKitShareParticipant);
                                    LODWORD(v217) = *(unsigned __int8 *)(v137 + v217[22]);
                                    sub_1AD066230(v137, type metadata accessor for CloudKitShareParticipant);
                                    sub_1AD0D3D2C(a1, v135, type metadata accessor for CloudKitShareParticipant);
                                    sub_1AD0D3D2C(a2, v134, type metadata accessor for CloudKitShareParticipant);
                                    if (v218 == (_DWORD)v217)
                                    {
                                      v135 = (uint64_t)v249;
                                      v134 = (uint64_t)v250;
                                      v138 = v249[v226[23]] == v250[v226[23]];
                                    }
                                    else
                                    {
                                      v138 = 0;
                                      v135 = (uint64_t)v249;
                                      v134 = (uint64_t)v250;
                                    }
                                    goto LABEL_42;
                                  }
LABEL_41:
                                  sub_1AD066230(v137, type metadata accessor for CloudKitShareParticipant);
                                  sub_1AD066230(v136, type metadata accessor for CloudKitShareParticipant);
                                  sub_1AD0D3D2C(a1, v135, type metadata accessor for CloudKitShareParticipant);
                                  sub_1AD0D3D2C(a2, v134, type metadata accessor for CloudKitShareParticipant);
                                  v138 = 0;
LABEL_42:
                                  sub_1AD066230(v134, type metadata accessor for CloudKitShareParticipant);
                                  sub_1AD066230(v135, type metadata accessor for CloudKitShareParticipant);
                                  return v138;
                                }
                                sub_1AD0040A0(v206, v210);
                                sub_1AD0040A0(v206, v205);
                                sub_1AD066230(v254, type metadata accessor for CloudKitShareParticipant);
                                sub_1AD066230(v255, type metadata accessor for CloudKitShareParticipant);
                                sub_1AD004118(v206, v205);
                              }
                              sub_1AD004118(v206, v205);
                              sub_1AD004118(v208, v209);
                              v134 = (uint64_t)v250;
                              v133 = v253;
                              v124 = v256;
                              goto LABEL_39;
                            }
                            sub_1AD066230(v251, type metadata accessor for CloudKitShareParticipant);
                            sub_1AD066230(v252, type metadata accessor for CloudKitShareParticipant);
                            sub_1AD066230(v223, (uint64_t (*)(_QWORD))type metadata accessor for CloudKitSharingToken);
                          }
                          sub_1AD009758(v225, &qword_1EECDE7B0);
                          v121 = v253;
                          v131 = v254;
                          v130 = v255;
                          v124 = v256;
                          goto LABEL_37;
                        }
                        sub_1AD0040A0(v182, v181);
                        sub_1AD0040A0(v182, v181);
                        sub_1AD066230(v123, type metadata accessor for CloudKitShareParticipant);
                        sub_1AD066230(v257, type metadata accessor for CloudKitShareParticipant);
                        sub_1AD004118(v182, v181);
                        v125 = v227;
                      }
                      sub_1AD004118(v182, v181);
                      sub_1AD004118(v184, v185);
                      v124 = v256;
                      v116 = v260;
                      goto LABEL_33;
                    }
                    sub_1AD0040A0(v173, v172);
                    sub_1AD0040A0(v173, v172);
                    sub_1AD066230(v258, type metadata accessor for CloudKitShareParticipant);
                    sub_1AD066230(v259, type metadata accessor for CloudKitShareParticipant);
                    sub_1AD004118(v173, v172);
                  }
                  sub_1AD004118(v173, v172);
                  sub_1AD004118(v177, v176);
                  v116 = v260;
                  goto LABEL_31;
                }
LABEL_22:
                sub_1AD066230(v102, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v104, type metadata accessor for CloudKitShareParticipant);
                v105 = v231;
                sub_1AD0D3D2C(a1, v231, type metadata accessor for CloudKitShareParticipant);
                v106 = v232;
                sub_1AD0D3D2C(a2, v232, type metadata accessor for CloudKitShareParticipant);
LABEL_23:
                sub_1AD066230(v106, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v105, type metadata accessor for CloudKitShareParticipant);
                v107 = v234;
                sub_1AD0D3D2C(a1, v234, type metadata accessor for CloudKitShareParticipant);
                v108 = v233;
                sub_1AD0D3D2C(a2, v233, type metadata accessor for CloudKitShareParticipant);
                v109 = (uint64_t)v239;
LABEL_24:
                sub_1AD066230(v108, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v107, type metadata accessor for CloudKitShareParticipant);
                v110 = v236;
                sub_1AD0D3D2C(a1, v236, type metadata accessor for CloudKitShareParticipant);
                v111 = v235;
                sub_1AD0D3D2C(a2, v235, type metadata accessor for CloudKitShareParticipant);
LABEL_25:
                sub_1AD066230(v111, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v110, type metadata accessor for CloudKitShareParticipant);
                v112 = v237;
                sub_1AD0D3D2C(a1, v237, type metadata accessor for CloudKitShareParticipant);
                sub_1AD0D3D2C(a2, v103, type metadata accessor for CloudKitShareParticipant);
LABEL_26:
                sub_1AD066230(v103, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v112, type metadata accessor for CloudKitShareParticipant);
                sub_1AD0D3D2C(a1, v109, type metadata accessor for CloudKitShareParticipant);
                v113 = v238;
                sub_1AD0D3D2C(a2, v238, type metadata accessor for CloudKitShareParticipant);
LABEL_27:
                sub_1AD066230(v113, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v109, type metadata accessor for CloudKitShareParticipant);
                v114 = v241;
                sub_1AD0D3D2C(a1, v241, type metadata accessor for CloudKitShareParticipant);
                v115 = v240;
                sub_1AD0D3D2C(a2, v240, type metadata accessor for CloudKitShareParticipant);
                v116 = v260;
LABEL_28:
                sub_1AD066230(v115, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v114, type metadata accessor for CloudKitShareParticipant);
                v117 = v243;
                sub_1AD0D3D2C(a1, v243, type metadata accessor for CloudKitShareParticipant);
                v118 = v242;
                sub_1AD0D3D2C(a2, v242, type metadata accessor for CloudKitShareParticipant);
LABEL_29:
                sub_1AD066230(v118, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v117, type metadata accessor for CloudKitShareParticipant);
                v119 = v259;
                sub_1AD0D3D2C(a1, v259, type metadata accessor for CloudKitShareParticipant);
                v120 = v258;
                sub_1AD0D3D2C(a2, v258, type metadata accessor for CloudKitShareParticipant);
LABEL_30:
                v121 = v253;
                sub_1AD066230(v120, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v119, type metadata accessor for CloudKitShareParticipant);
LABEL_31:
                v122 = v257;
                sub_1AD0D3D2C(a1, v257, type metadata accessor for CloudKitShareParticipant);
                v123 = v244;
                sub_1AD0D3D2C(a2, v244, type metadata accessor for CloudKitShareParticipant);
                v124 = v256;
LABEL_32:
                sub_1AD066230(v123, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v122, type metadata accessor for CloudKitShareParticipant);
                v125 = v227;
LABEL_33:
                sub_1AD0D3D2C(a1, v116, type metadata accessor for CloudKitShareParticipant);
                sub_1AD0D3D2C(a2, v125, type metadata accessor for CloudKitShareParticipant);
LABEL_34:
                sub_1AD066230(v125, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v116, type metadata accessor for CloudKitShareParticipant);
                v126 = v245;
                sub_1AD0D3D2C(a1, v245, type metadata accessor for CloudKitShareParticipant);
                v127 = v246;
                sub_1AD0D3D2C(a2, v246, type metadata accessor for CloudKitShareParticipant);
LABEL_35:
                sub_1AD066230(v127, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v126, type metadata accessor for CloudKitShareParticipant);
                v128 = v252;
                sub_1AD0D3D2C(a1, v252, type metadata accessor for CloudKitShareParticipant);
                v129 = v251;
                sub_1AD0D3D2C(a2, v251, type metadata accessor for CloudKitShareParticipant);
                v131 = v254;
                v130 = v255;
LABEL_36:
                sub_1AD066230(v129, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v128, type metadata accessor for CloudKitShareParticipant);
LABEL_37:
                v132 = a1;
                sub_1AD0D3D2C(a1, v130, type metadata accessor for CloudKitShareParticipant);
                sub_1AD0D3D2C(a2, v131, type metadata accessor for CloudKitShareParticipant);
                v133 = v121;
LABEL_38:
                sub_1AD066230(v131, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v130, type metadata accessor for CloudKitShareParticipant);
                v134 = (uint64_t)v250;
LABEL_39:
                a1 = v132;
                sub_1AD0D3D2C(v132, v124, type metadata accessor for CloudKitShareParticipant);
                sub_1AD0D3D2C(a2, v133, type metadata accessor for CloudKitShareParticipant);
                v135 = (uint64_t)v249;
LABEL_40:
                sub_1AD066230(v133, type metadata accessor for CloudKitShareParticipant);
                sub_1AD066230(v124, type metadata accessor for CloudKitShareParticipant);
                v136 = v247;
                sub_1AD0D3D2C(a1, v247, type metadata accessor for CloudKitShareParticipant);
                v137 = v248;
                sub_1AD0D3D2C(a2, v248, type metadata accessor for CloudKitShareParticipant);
                goto LABEL_41;
              }
LABEL_21:
              sub_1AD066230((uint64_t)v76, type metadata accessor for CloudKitShareParticipant);
              sub_1AD066230(v101, type metadata accessor for CloudKitShareParticipant);
              v104 = v229;
              sub_1AD0D3D2C(a1, v229, type metadata accessor for CloudKitShareParticipant);
              sub_1AD0D3D2C(a2, v102, type metadata accessor for CloudKitShareParticipant);
              goto LABEL_22;
            }
            sub_1AD003E48(*((_QWORD *)v89 + 6), *((_QWORD *)v89 + 7));
            sub_1AD003E48(v98, 0);
            sub_1AD066230((uint64_t)v81, type metadata accessor for CloudKitShareParticipant);
            sub_1AD066230((uint64_t)v89, type metadata accessor for CloudKitShareParticipant);
            sub_1AD003F24(v97, v95);
            v99 = v98;
            v100 = 0;
          }
          else
          {
            sub_1AD003E48(*((_QWORD *)v89 + 6), 0);
            sub_1AD003E48(v98, v96);
            sub_1AD066230((uint64_t)v81, type metadata accessor for CloudKitShareParticipant);
            sub_1AD066230((uint64_t)v89, type metadata accessor for CloudKitShareParticipant);
            if (!v96)
              goto LABEL_16;
            sub_1AD003F24(v97, 0);
            v99 = v98;
            v100 = v96;
          }
          sub_1AD003F24(v99, v100);
LABEL_20:
          v103 = v261;
          v102 = (uint64_t)v230;
          v101 = v228;
          sub_1AD0D3D2C(a1, v228, type metadata accessor for CloudKitShareParticipant);
          sub_1AD0D3D2C(a2, (uint64_t)v76, type metadata accessor for CloudKitShareParticipant);
          goto LABEL_21;
        }
      }
    }
  }
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

unint64_t sub_1AD595D20()
{
  unint64_t result;

  result = qword_1EECDE3E8;
  if (!qword_1EECDE3E8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69514C, &type metadata for CloudKitShareParticipantAcceptanceStatus);
    atomic_store(result, (unint64_t *)&qword_1EECDE3E8);
  }
  return result;
}

unint64_t sub_1AD595D68()
{
  unint64_t result;

  result = qword_1EECDE3F0;
  if (!qword_1EECDE3F0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69523C, &type metadata for CloudKitShareParticipantPermission);
    atomic_store(result, (unint64_t *)&qword_1EECDE3F0);
  }
  return result;
}

unint64_t sub_1AD595DB0()
{
  unint64_t result;

  result = qword_1EECDE3F8;
  if (!qword_1EECDE3F8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69532C, &type metadata for CloudKitShareParticipantRole);
    atomic_store(result, (unint64_t *)&qword_1EECDE3F8);
  }
  return result;
}

unint64_t sub_1AD595DF8()
{
  unint64_t result;

  result = qword_1EECDE400;
  if (!qword_1EECDE400)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69541C, &type metadata for CloudKitShareParticipantInvitationTokenStatus);
    atomic_store(result, (unint64_t *)&qword_1EECDE400);
  }
  return result;
}

uint64_t type metadata accessor for _BlastDoorCKShareParticipant()
{
  return objc_opt_self();
}

ValueMetadata *type metadata accessor for CloudKitShareParticipantAcceptanceStatus()
{
  return &type metadata for CloudKitShareParticipantAcceptanceStatus;
}

ValueMetadata *type metadata accessor for CloudKitShareParticipantPermission()
{
  return &type metadata for CloudKitShareParticipantPermission;
}

ValueMetadata *type metadata accessor for CloudKitShareParticipantRole()
{
  return &type metadata for CloudKitShareParticipantRole;
}

uint64_t _s9BlastDoor28CloudKitShareParticipantRoleOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD595EDC + 4 * byte_1AD6950A5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD595F10 + 4 * asc_1AD6950A0[v4]))();
}

uint64_t sub_1AD595F10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD595F18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD595F20);
  return result;
}

uint64_t sub_1AD595F2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD595F34);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD595F38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD595F40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for CloudKitShareParticipantInvitationTokenStatus()
{
  return &type metadata for CloudKitShareParticipantInvitationTokenStatus;
}

uint64_t type metadata accessor for _BlastDoorCKUserIdentity()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _BlastDoorCKRecordID()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _BlastDoorCKRecordZoneID()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _BlastDoorCKUserIdentityLookupInfo()
{
  return objc_opt_self();
}

id sub_1AD595FDC(void *a1, void *a2, void *a3, uint64_t a4)
{
  char *v4;
  uint64_t v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  void *v14;
  char *v15;
  id v16;
  id v17;
  id v18;
  objc_super v20;

  v9 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_anonymousCKUserID;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_anonymousCKUserID] = 0;
  v10 = &v4[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_ZoneNameKey];
  *(_QWORD *)v10 = 0x656D614E656E6F5ALL;
  *((_QWORD *)v10 + 1) = 0xE800000000000000;
  v11 = &v4[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_OwnerNameKey];
  *(_QWORD *)v11 = 0x6D614E72656E776FLL;
  *((_QWORD *)v11 + 1) = 0xE900000000000065;
  v12 = &v4[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_AnonymousCKUserIDKey];
  *(_QWORD *)v12 = 0xD000000000000011;
  *((_QWORD *)v12 + 1) = 0x80000001AD6A4560;
  v13 = &v4[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_DatabaseScopeKey];
  *(_QWORD *)v13 = 0xD000000000000010;
  *((_QWORD *)v13 + 1) = 0x80000001AD6B3050;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_zoneName] = a1;
  *(_QWORD *)&v4[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_ownerName] = a2;
  v14 = *(void **)&v4[v9];
  *(_QWORD *)&v4[v9] = a3;
  v15 = v4;
  v16 = a1;
  v17 = a2;
  v18 = a3;

  *(_QWORD *)&v15[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKRecordZoneID_databaseScope] = a4;
  v20.receiver = v15;
  v20.super_class = (Class)type metadata accessor for _BlastDoorCKRecordZoneID();
  return objc_msgSendSuper2(&v20, sel_init);
}

id sub_1AD596120(void *a1, void *a2, void *a3, char a4, void *a5)
{
  char *v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  void *v19;
  char *v20;
  id v21;
  void *v22;
  id v23;
  void *v24;
  id v25;
  void *v26;
  id v27;
  objc_super v30;

  v10 = OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_emailAddress;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_emailAddress] = 0;
  v11 = OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_phoneNumber;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_phoneNumber] = 0;
  v12 = OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_userRecordID;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_userRecordID] = 0;
  v13 = OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_encryptedPersonalInfo;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_encryptedPersonalInfo] = 0;
  v14 = &v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_EmailAddressKey];
  strcpy(&v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_EmailAddressKey], "EmailAddress");
  v14[13] = 0;
  *((_WORD *)v14 + 7) = -5120;
  v15 = &v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_PhoneNumberKey];
  *(_QWORD *)v15 = 0x6D754E656E6F6850;
  *((_QWORD *)v15 + 1) = 0xEB00000000726562;
  v16 = &v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_RecordIDKey];
  *(_QWORD *)v16 = 0x444964726F636552;
  *((_QWORD *)v16 + 1) = 0xE800000000000000;
  v17 = &v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_ReportsMissingKey];
  strcpy(&v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_ReportsMissingKey], "ReportsMissing");
  v17[15] = -18;
  v18 = &v5[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_EncryptedPersonalInfoKey];
  *(_QWORD *)v18 = 0xD000000000000015;
  *((_QWORD *)v18 + 1) = 0x80000001AD6B3000;
  v19 = *(void **)&v5[v10];
  *(_QWORD *)&v5[v10] = a1;
  v20 = v5;
  v21 = a1;

  v22 = *(void **)&v5[v11];
  *(_QWORD *)&v5[v11] = a2;
  v23 = a2;

  v24 = *(void **)&v5[v12];
  *(_QWORD *)&v5[v12] = a3;
  v25 = a3;

  v20[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_shouldReportMissingIdentity] = a4;
  v26 = *(void **)&v5[v13];
  *(_QWORD *)&v5[v13] = a5;
  v27 = a5;

  v30.receiver = v20;
  v30.super_class = (Class)type metadata accessor for _BlastDoorCKUserIdentityLookupInfo();
  return objc_msgSendSuper2(&v30, sel_init);
}

id sub_1AD5962EC(void *a1, void *a2, void *a3, void *a4, void *a5, void *a6, char a7, char a8, void *a9, uint64_t a10)
{
  char *v10;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  char *v21;
  char *v22;
  char *v23;
  char *v24;
  char *v25;
  char *v26;
  char *v27;
  char *v28;
  void *v29;
  char *v30;
  id v31;
  void *v32;
  id v33;
  void *v34;
  id v35;
  void *v36;
  id v37;
  id v38;
  void *v39;
  id v40;
  void *v41;
  id v42;
  objc_super v50;

  v13 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_userRecordID;
  *(_QWORD *)&v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_userRecordID] = 0;
  v14 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_nameComponents;
  *(_QWORD *)&v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_nameComponents] = 0;
  v15 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_lookupInfo;
  *(_QWORD *)&v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_lookupInfo] = 0;
  v16 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_publicSharingKey;
  *(_QWORD *)&v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_publicSharingKey] = 0;
  v17 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_outOfNetworkPrivateKey;
  *(_QWORD *)&v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_outOfNetworkPrivateKey] = 0;
  v18 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_encryptedPersonalInfo;
  *(_QWORD *)&v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_encryptedPersonalInfo] = 0;
  v19 = &v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_UserRecordIDKey];
  strcpy(&v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_UserRecordIDKey], "UserRecordID");
  v19[13] = 0;
  *((_WORD *)v19 + 7) = -5120;
  v20 = &v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_NameComponentsKey];
  strcpy(&v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_NameComponentsKey], "NameComponents");
  v20[15] = -18;
  v21 = &v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_LookupInfoKey];
  *(_QWORD *)v21 = 0x6E4970756B6F6F4CLL;
  *((_QWORD *)v21 + 1) = 0xEA00000000006F66;
  v22 = &v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_ContactIdentifiersKey];
  *(_QWORD *)v22 = 0xD000000000000012;
  *((_QWORD *)v22 + 1) = 0x80000001AD6B30C0;
  v23 = &v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_ProtectionDataKey];
  strcpy(&v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_ProtectionDataKey], "ProtectionData");
  v23[15] = -18;
  v24 = &v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_OONProtectionDataKey];
  *(_QWORD *)v24 = 0xD000000000000011;
  *((_QWORD *)v24 + 1) = 0x80000001AD6B30E0;
  v25 = &v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_IsCachedKey];
  *(_QWORD *)v25 = 0x6465686361437349;
  *((_QWORD *)v25 + 1) = 0xE800000000000000;
  v26 = &v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_HasICloudAccountKey];
  *(_QWORD *)v26 = 0xD000000000000010;
  *((_QWORD *)v26 + 1) = 0x80000001AD6B3100;
  v27 = &v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_EncryptedPersonalInfoKey];
  *(_QWORD *)v27 = 0xD000000000000015;
  *((_QWORD *)v27 + 1) = 0x80000001AD6B3000;
  v28 = &v10[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_PublicKeyVersionKey];
  *(_QWORD *)v28 = 0xD000000000000010;
  *((_QWORD *)v28 + 1) = 0x80000001AD6B3120;
  v29 = *(void **)&v10[v13];
  *(_QWORD *)&v10[v13] = a1;
  v30 = v10;
  v31 = a1;

  v32 = *(void **)&v10[v14];
  *(_QWORD *)&v10[v14] = a2;
  v33 = a2;

  v34 = *(void **)&v10[v15];
  *(_QWORD *)&v10[v15] = a3;
  v35 = a3;

  *(_QWORD *)&v30[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_contactIdentifiers] = a4;
  v36 = *(void **)&v10[v16];
  *(_QWORD *)&v10[v16] = a5;
  v37 = a4;
  v38 = a5;

  v39 = *(void **)&v10[v17];
  *(_QWORD *)&v10[v17] = a6;
  v40 = a6;

  v30[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_isCached] = a7;
  v30[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_hasICloudAccount] = a8;
  v41 = *(void **)&v10[v18];
  *(_QWORD *)&v10[v18] = a9;
  v42 = a9;

  *(_QWORD *)&v30[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_publicKeyVersion] = a10;
  v50.receiver = v30;
  v50.super_class = (Class)type metadata accessor for _BlastDoorCKUserIdentity();
  return objc_msgSendSuper2(&v50, sel_init);
}

id sub_1AD596600(void *a1, void *a2, void *a3, char a4, char a5, char *a6, char *a7, char *a8, char *a9, char *a10, char *a11, void *a12, void *a13, char a14, char a15, void *a16, void *a17, char a18, char a19, char *a20)
{
  char *v20;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  char *v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  char *v42;
  char *v43;
  char *v44;
  char *v45;
  char *v46;
  char *v47;
  void *v48;
  char *v49;
  id v50;
  id v51;
  void *v52;
  id v53;
  id v54;
  void *v55;
  id v56;
  void *v57;
  id v58;
  void *v59;
  id v60;
  char v62;
  char v63;
  char v64;
  char v66;
  char v67;
  char v68;
  char v71;
  objc_super v72;

  v62 = *a6;
  v63 = *a7;
  v64 = *a8;
  v66 = *a9;
  v67 = *a10;
  v68 = *a11;
  v71 = *a20;
  v23 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_inviterID;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_inviterID] = 0;
  v24 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfo;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfo] = 0;
  v25 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_encryptedPersonalInfo;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_encryptedPersonalInfo] = 0;
  v26 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationToken;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationToken] = 0;
  v27 = OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfoPublicKey;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_protectionInfoPublicKey] = 0;
  v28 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_ParticipantIDKey];
  strcpy(&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_ParticipantIDKey], "ParticipantID");
  *((_WORD *)v28 + 7) = -4864;
  v29 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_InviterIDKey];
  *(_QWORD *)v29 = 0x4972657469766E49;
  *((_QWORD *)v29 + 1) = 0xE900000000000044;
  v30 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_UserIdentityKey];
  strcpy(&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_UserIdentityKey], "UserIdentity");
  v30[13] = 0;
  *((_WORD *)v30 + 7) = -5120;
  v31 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_IsCurrentUserKey];
  strcpy(&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_IsCurrentUserKey], "IsCurrentUser");
  *((_WORD *)v31 + 7) = -4864;
  v32 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_IsOrgAdminUserKey];
  strcpy(&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_IsOrgAdminUserKey], "IsOrgAdminUser");
  v32[15] = -18;
  v33 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_AcceptanceStatusKey];
  *(_QWORD *)v33 = 0xD000000000000010;
  *((_QWORD *)v33 + 1) = 0x80000001AD6B3170;
  v34 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_RoleKey];
  *(_QWORD *)v34 = 1701869908;
  *((_QWORD *)v34 + 1) = 0xE400000000000000;
  v35 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_PermissionKey];
  *(_QWORD *)v35 = 0x697373696D726550;
  *((_QWORD *)v35 + 1) = 0xEA00000000006E6FLL;
  v36 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_OriginalParticipantRoleKey];
  *(_QWORD *)v36 = 0xD000000000000017;
  *((_QWORD *)v36 + 1) = 0x80000001AD6B3190;
  v37 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_OriginalAcceptanceStatusKey];
  *(_QWORD *)v37 = 0xD000000000000018;
  *((_QWORD *)v37 + 1) = 0x80000001AD6B31B0;
  v38 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_OriginalPermissionKey];
  *(_QWORD *)v38 = 0xD000000000000012;
  *((_QWORD *)v38 + 1) = 0x80000001AD6B31D0;
  v39 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_ProtectionInfoKey];
  strcpy(&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_ProtectionInfoKey], "ProtectionInfo");
  v39[15] = -18;
  v40 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_EncryptedPersonalInfoKey];
  *(_QWORD *)v40 = 0xD000000000000015;
  *((_QWORD *)v40 + 1) = 0x80000001AD6B3000;
  v41 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_CreatedInProcessKey];
  *(_QWORD *)v41 = 0xD000000000000010;
  *((_QWORD *)v41 + 1) = 0x80000001AD6B31F0;
  v42 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_AcceptedInProcessKey];
  *(_QWORD *)v42 = 0xD000000000000011;
  *((_QWORD *)v42 + 1) = 0x80000001AD6B3210;
  v43 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_DeviceToDeviceShareInvitationTokenKey];
  *(_QWORD *)v43 = 0x6974617469766E49;
  *((_QWORD *)v43 + 1) = 0xEF6E656B6F546E6FLL;
  v44 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_ProtectionInfoPublicIdentityKey];
  *(_QWORD *)v44 = 0xD000000000000017;
  *((_QWORD *)v44 + 1) = 0x80000001AD6B3230;
  v45 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_WantsNewInvitationTokenKey];
  *(_QWORD *)v45 = 0xD000000000000017;
  *((_QWORD *)v45 + 1) = 0x80000001AD6A4440;
  v46 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_MutableInvitationTokenStatus];
  *(_QWORD *)v46 = 0xD00000000000001CLL;
  *((_QWORD *)v46 + 1) = 0x80000001AD6B3250;
  v47 = &v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_IsAnonymousInvitedParticipant];
  *(_QWORD *)v47 = 0xD00000000000001DLL;
  *((_QWORD *)v47 + 1) = 0x80000001AD6A4460;
  *(_QWORD *)&v20[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_participantID] = a1;
  v48 = *(void **)&v20[v23];
  *(_QWORD *)&v20[v23] = a2;
  v49 = v20;
  v50 = a1;
  v51 = a2;

  *(_QWORD *)&v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_userIdentity] = a3;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isCurrentUser] = a4;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isOrgAdminUser] = a5;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_role] = v62;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_acceptanceStatus] = v63;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_permission] = v64;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalParticipantRole] = v66;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalAcceptanceStatus] = v67;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_originalPermission] = v68;
  v52 = *(void **)&v20[v24];
  *(_QWORD *)&v20[v24] = a12;
  v53 = a3;
  v54 = a12;

  v55 = *(void **)&v20[v25];
  *(_QWORD *)&v20[v25] = a13;
  v56 = a13;

  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_createdInProcess] = a14;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_acceptedInProcess] = a15;
  v57 = *(void **)&v20[v26];
  *(_QWORD *)&v20[v26] = a16;
  v58 = a16;

  v59 = *(void **)&v20[v27];
  *(_QWORD *)&v20[v27] = a17;
  v60 = a17;

  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_wantsNewInvitationToken] = a18;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_isAnonymousInvitedParticipant] = a19;
  v49[OBJC_IVAR____TtC9BlastDoor28_BlastDoorCKShareParticipant_invitationTokenStatus] = v71;

  v72.receiver = v49;
  v72.super_class = (Class)type metadata accessor for _BlastDoorCKShareParticipant();
  return objc_msgSendSuper2(&v72, sel_init);
}

id sub_1AD596B80(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  char *v12;
  char *v13;
  char *v14;
  char *v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  void *v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  void *v27;
  uint64_t v28;
  void *v29;
  void *v30;
  unsigned __int8 v31;
  void *v32;
  unsigned __int8 v33;
  uint64_t v34;
  void *v35;
  void *v36;
  id v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  void *v42;
  objc_super v43;
  char v44[24];
  uint64_t v45;

  v2 = v1;
  v4 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_userRecordID;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_userRecordID] = 0;
  v5 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_nameComponents;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_nameComponents] = 0;
  v6 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_lookupInfo;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_lookupInfo] = 0;
  v39 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_publicSharingKey;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_publicSharingKey] = 0;
  v40 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_outOfNetworkPrivateKey;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_outOfNetworkPrivateKey] = 0;
  v41 = OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_encryptedPersonalInfo;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_encryptedPersonalInfo] = 0;
  v7 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_UserRecordIDKey];
  strcpy(&v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_UserRecordIDKey], "UserRecordID");
  v7[13] = 0;
  *((_WORD *)v7 + 7) = -5120;
  v8 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_NameComponentsKey];
  strcpy(&v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_NameComponentsKey], "NameComponents");
  v8[15] = -18;
  v9 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_LookupInfoKey];
  *(_QWORD *)v9 = 0x6E4970756B6F6F4CLL;
  *((_QWORD *)v9 + 1) = 0xEA00000000006F66;
  v10 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_ContactIdentifiersKey];
  *(_QWORD *)v10 = 0xD000000000000012;
  *((_QWORD *)v10 + 1) = 0x80000001AD6B30C0;
  v11 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_ProtectionDataKey];
  strcpy(&v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_ProtectionDataKey], "ProtectionData");
  v11[15] = -18;
  v12 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_OONProtectionDataKey];
  *(_QWORD *)v12 = 0xD000000000000011;
  *((_QWORD *)v12 + 1) = 0x80000001AD6B30E0;
  v13 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_IsCachedKey];
  *(_QWORD *)v13 = 0x6465686361437349;
  *((_QWORD *)v13 + 1) = 0xE800000000000000;
  v14 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_HasICloudAccountKey];
  *(_QWORD *)v14 = 0xD000000000000010;
  *((_QWORD *)v14 + 1) = 0x80000001AD6B3100;
  v15 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_EncryptedPersonalInfoKey];
  *(_QWORD *)v15 = 0xD000000000000015;
  *((_QWORD *)v15 + 1) = 0x80000001AD6B3000;
  v16 = &v2[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_PublicKeyVersionKey];
  *(_QWORD *)v16 = 0xD000000000000010;
  *((_QWORD *)v16 + 1) = 0x80000001AD6B3120;
  type metadata accessor for _BlastDoorCKRecordID();
  v17 = v2;
  v18 = sub_1AD63BC18();
  v19 = *(void **)&v2[v4];
  *(_QWORD *)&v2[v4] = v18;

  sub_1AD32F2CC(0, (unint64_t *)&unk_1EECDE730);
  swift_bridgeObjectRetain();
  v20 = sub_1AD63BC18();
  swift_bridgeObjectRelease();
  v21 = *(void **)&v2[v5];
  *(_QWORD *)&v2[v5] = v20;

  type metadata accessor for _BlastDoorCKUserIdentityLookupInfo();
  swift_bridgeObjectRetain();
  v22 = sub_1AD63BC18();
  swift_bridgeObjectRelease();
  v23 = *(void **)&v2[v6];
  *(_QWORD *)&v2[v6] = v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB0B8);
  v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1AD648170;
  *(_QWORD *)(v24 + 32) = sub_1AD32F2CC(0, (unint64_t *)&unk_1EECDE740);
  *(_QWORD *)(v24 + 40) = sub_1AD32F2CC(0, &qword_1EECDE720);
  swift_bridgeObjectRetain();
  sub_1AD63BC24();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v45)
  {
    sub_1AD009758((uint64_t)v44, &qword_1EECDC5F0);
    goto LABEL_5;
  }
  if (!swift_dynamicCast())
  {
LABEL_5:
    v25 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D20]), sel_init);
    goto LABEL_6;
  }
  v25 = v42;
LABEL_6:
  *(_QWORD *)&v17[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_contactIdentifiers] = v25;
  sub_1AD32F2CC(0, &qword_1EECDE728);
  swift_bridgeObjectRetain();
  v26 = sub_1AD63BC18();
  swift_bridgeObjectRelease();
  v27 = *(void **)&v2[v39];
  *(_QWORD *)&v2[v39] = v26;

  swift_bridgeObjectRetain();
  v28 = sub_1AD63BC18();
  swift_bridgeObjectRelease();
  v29 = *(void **)&v2[v40];
  *(_QWORD *)&v2[v40] = v28;

  swift_bridgeObjectRetain();
  v30 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  v31 = objc_msgSend(a1, sel_decodeBoolForKey_, v30);

  v17[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_isCached] = v31;
  swift_bridgeObjectRetain();
  v32 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  v33 = objc_msgSend(a1, sel_decodeBoolForKey_, v32);

  v17[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_hasICloudAccount] = v33;
  swift_bridgeObjectRetain();
  v34 = sub_1AD63BC18();
  swift_bridgeObjectRelease();
  v35 = *(void **)&v2[v41];
  *(_QWORD *)&v2[v41] = v34;

  swift_bridgeObjectRetain();
  v36 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  v37 = objc_msgSend(a1, sel_decodeInt64ForKey_, v36);

  *(_QWORD *)&v17[OBJC_IVAR____TtC9BlastDoor24_BlastDoorCKUserIdentity_publicKeyVersion] = v37;
  v43.receiver = v17;
  v43.super_class = (Class)type metadata accessor for _BlastDoorCKUserIdentity();
  return objc_msgSendSuper2(&v43, sel_init);
}

id sub_1AD597174(void *a1)
{
  char *v1;
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void *v17;
  void *v18;
  uint64_t v19;
  void *v20;
  char *v22;
  uint64_t v23;
  objc_super v24;

  v2 = v1;
  v4 = OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_emailAddress;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_emailAddress] = 0;
  v5 = OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_phoneNumber;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_phoneNumber] = 0;
  v6 = OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_userRecordID;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_userRecordID] = 0;
  v23 = OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_encryptedPersonalInfo;
  *(_QWORD *)&v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_encryptedPersonalInfo] = 0;
  v7 = &v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_EmailAddressKey];
  strcpy(&v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_EmailAddressKey], "EmailAddress");
  v7[13] = 0;
  *((_WORD *)v7 + 7) = -5120;
  v8 = &v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_PhoneNumberKey];
  *(_QWORD *)v8 = 0x6D754E656E6F6850;
  *((_QWORD *)v8 + 1) = 0xEB00000000726562;
  v9 = &v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_RecordIDKey];
  *(_QWORD *)v9 = 0x444964726F636552;
  *((_QWORD *)v9 + 1) = 0xE800000000000000;
  v10 = &v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_ReportsMissingKey];
  strcpy(&v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_ReportsMissingKey], "ReportsMissing");
  v10[15] = -18;
  v11 = &v2[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_EncryptedPersonalInfoKey];
  *(_QWORD *)v11 = 0xD000000000000015;
  *((_QWORD *)v11 + 1) = 0x80000001AD6B3000;
  sub_1AD32F2CC(0, &qword_1EECDE720);
  v22 = v2;
  v12 = sub_1AD63BC18();
  v13 = *(void **)&v2[v4];
  *(_QWORD *)&v2[v4] = v12;

  swift_bridgeObjectRetain();
  v14 = sub_1AD63BC18();
  swift_bridgeObjectRelease();
  v15 = *(void **)&v2[v5];
  *(_QWORD *)&v2[v5] = v14;

  type metadata accessor for _BlastDoorCKRecordID();
  swift_bridgeObjectRetain();
  v16 = sub_1AD63BC18();
  swift_bridgeObjectRelease();
  v17 = *(void **)&v2[v6];
  *(_QWORD *)&v2[v6] = v16;

  swift_bridgeObjectRetain();
  v18 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  LOBYTE(v4) = objc_msgSend(a1, sel_decodeBoolForKey_, v18);

  v22[OBJC_IVAR____TtC9BlastDoor34_BlastDoorCKUserIdentityLookupInfo_shouldReportMissingIdentity] = v4;
  sub_1AD32F2CC(0, &qword_1EECDE728);
  swift_bridgeObjectRetain();
  v19 = sub_1AD63BC18();
  swift_bridgeObjectRelease();
  v20 = *(void **)&v2[v23];
  *(_QWORD *)&v2[v23] = v19;

  v24.receiver = v22;
  v24.super_class = (Class)type metadata accessor for _BlastDoorCKUserIdentityLookupInfo();
  return objc_msgSendSuper2(&v24, sel_init);
}

unint64_t sub_1AD59745C()
{
  unint64_t result;

  result = qword_1EECDE760;
  if (!qword_1EECDE760)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD695484, &type metadata for CloudKitShareParticipantInvitationTokenStatus);
    atomic_store(result, (unint64_t *)&qword_1EECDE760);
  }
  return result;
}

unint64_t sub_1AD5974A0()
{
  unint64_t result;

  result = qword_1EECDE768;
  if (!qword_1EECDE768)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD695394, &type metadata for CloudKitShareParticipantRole);
    atomic_store(result, (unint64_t *)&qword_1EECDE768);
  }
  return result;
}

unint64_t sub_1AD5974E4()
{
  unint64_t result;

  result = qword_1EECDE770;
  if (!qword_1EECDE770)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6952A4, &type metadata for CloudKitShareParticipantPermission);
    atomic_store(result, (unint64_t *)&qword_1EECDE770);
  }
  return result;
}

unint64_t sub_1AD597528()
{
  unint64_t result;

  result = qword_1EECDE778;
  if (!qword_1EECDE778)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6951B4, &type metadata for CloudKitShareParticipantAcceptanceStatus);
    atomic_store(result, (unint64_t *)&qword_1EECDE778);
  }
  return result;
}

uint64_t sub_1AD59756C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;

  v2 = *(_QWORD *)(a1 + 136);
  v3 = *(_QWORD *)(a1 + 144);
  v4 = *(_QWORD *)(a1 + 152);
  v5 = *(_QWORD *)(a1 + 160);
  v6 = *(_QWORD *)(a1 + 168);
  v7 = *(_QWORD *)(a1 + 176);
  v8 = *(_QWORD *)(a1 + 184);
  v9 = *(_QWORD *)(a1 + 192);
  v14 = *(_OWORD *)(a1 + 200);
  v12 = *(_OWORD *)(a1 + 232);
  v13 = *(_OWORD *)(a1 + 216);
  v11 = *(_OWORD *)(a1 + 248);
  sub_1AD284BE4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120));
  sub_1AD284BE4(v2, v3, v4, v5, v6, v7, v8, v9, v14, *((uint64_t *)&v14 + 1), v13, *((uint64_t *)&v13 + 1), v12, *((uint64_t *)&v12 + 1), v11, *((uint64_t *)&v11 + 1));
  return a1;
}

uint64_t sub_1AD597658(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v2 = *(_QWORD *)(a1 + 232);
  v21 = *(_QWORD *)(a1 + 224);
  v3 = *(_QWORD *)(a1 + 240);
  v4 = *(_QWORD *)(a1 + 248);
  v5 = *(_QWORD *)(a1 + 256);
  v6 = *(_QWORD *)(a1 + 264);
  v7 = *(_QWORD *)(a1 + 272);
  v8 = *(_QWORD *)(a1 + 280);
  v19 = *(_OWORD *)(a1 + 304);
  v20 = *(_OWORD *)(a1 + 288);
  v17 = *(_OWORD *)(a1 + 336);
  v18 = *(_OWORD *)(a1 + 320);
  v15 = *(_OWORD *)(a1 + 368);
  v16 = *(_OWORD *)(a1 + 352);
  v13 = *(_OWORD *)(a1 + 400);
  v14 = *(_OWORD *)(a1 + 384);
  v12 = *(_OWORD *)(a1 + 416);
  v10 = *(_QWORD *)(a1 + 432);
  v9 = *(_QWORD *)(a1 + 440);
  sub_1AD284D2C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216));
  sub_1AD284D2C(v21, v2, v3, v4, v5, v6, v7, v8, v20, *((uint64_t *)&v20 + 1), v19, *((uint64_t *)&v19 + 1), v18, *((uint64_t *)&v18 + 1), v17, *((uint64_t *)&v17 + 1), v16, *((uint64_t *)&v16 + 1), v15,
    *((uint64_t *)&v15 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v10,
    v9);
  return a1;
}

unint64_t sub_1AD5977A8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EECDE7A0;
  if (!qword_1EECDE7A0)
  {
    v1 = sub_1AD63AE2C();
    result = MEMORY[0x1AF44BDF0](MEMORY[0x1E0CAF7B0], v1);
    atomic_store(result, (unint64_t *)&qword_1EECDE7A0);
  }
  return result;
}

double sub_1AD5977F0(uint64_t a1)
{
  double result;

  *(_QWORD *)(a1 + 128) = 0;
  result = 0.0;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double sub_1AD59780C(_OWORD *a1)
{
  double result;

  result = 0.0;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  return result;
}

uint64_t sub_1AD597848@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *v1;
  v2 = v1[1];
  v4 = v1[2];
  v5 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD59787C(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[1].n128_i64[0];
  v6 = v1[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD5978D0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[5];
  v2 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD597904(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 40) = *a1;
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v4;
  return result;
}

uint64_t sub_1AD597958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD5979D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 64) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD597A50()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1AD597A58@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t sub_1AD597A6C@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD597A58(*a1, a2);
}

uint64_t sub_1AD597A74()
{
  sub_1AD5992A4();
  return sub_1AD63B930();
}

uint64_t sub_1AD597AD0()
{
  sub_1AD5992A4();
  return sub_1AD63B8D0();
}

uint64_t (*sub_1AD597B20(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3019A4;
  }
  return result;
}

void (*sub_1AD597BAC(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v7 = v1[3];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD301A68;
}

void sub_1AD597C10(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *sub_1AD597C1C(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*sub_1AD597C28())()
{
  return nullsub_1;
}

uint64_t sub_1AD597C38@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 64);
  if (v3 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(a1 + 56);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD597CA4(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD597CC4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 64);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 56);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD597D50;
  }
  return result;
}

uint64_t sub_1AD597D50(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD597DB4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[7];
  v8 = a2[8];
  swift_retain();
  sub_1AD003E48(v5, v6);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  a2[5] = v4;
  a2[6] = v3;
  a2[7] = v5;
  a2[8] = v6;
  return result;
}

void (*sub_1AD597E28(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[5];
  v4 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD597E8C;
}

void sub_1AD597E8C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[7];
  v9 = v4[8];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD003E48(v7, v3);
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[5] = v6;
    v4[6] = v5;
    v4[7] = v7;
    v4[8] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD003F24(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[5] = v6;
    v4[6] = v5;
    v4[7] = v7;
    v4[8] = v3;
  }
  free(v2);
}

uint64_t sub_1AD597F4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RelayReachabilityContext() + 28);
  return sub_1AD0E2490(v3, a1);
}

uint64_t type metadata accessor for RelayReachabilityContext()
{
  uint64_t result;

  result = qword_1ED2E1860;
  if (!qword_1ED2E1860)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD597FB8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RelayReachabilityContext() + 28);
  return sub_1AD597FE8(a1, v3);
}

uint64_t sub_1AD597FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD598030())(_QWORD)
{
  type metadata accessor for RelayReachabilityContext();
  return nullsub_1;
}

uint64_t sub_1AD598058()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RelayReachabilityContext() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD598094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RelayReachabilityContext() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1AD5980D8())(_QWORD)
{
  type metadata accessor for RelayReachabilityContext();
  return nullsub_1;
}

uint64_t sub_1AD598100()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RelayReachabilityContext() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD59813C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RelayReachabilityContext() + 36));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*sub_1AD598180())(_QWORD)
{
  type metadata accessor for RelayReachabilityContext();
  return nullsub_1;
}

uint64_t sub_1AD5981A8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RelayReachabilityContext() + 40));
}

uint64_t sub_1AD5981C8(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RelayReachabilityContext();
  *(_BYTE *)(v1 + *(int *)(result + 40)) = a1;
  return result;
}

uint64_t (*sub_1AD5981F4())(_QWORD)
{
  type metadata accessor for RelayReachabilityContext();
  return nullsub_1;
}

uint64_t sub_1AD59821C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RelayReachabilityContext() + 44));
}

uint64_t sub_1AD59823C(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RelayReachabilityContext();
  *(_BYTE *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*sub_1AD598268())(_QWORD)
{
  type metadata accessor for RelayReachabilityContext();
  return nullsub_1;
}

uint64_t sub_1AD598290()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RelayReachabilityContext() + 48));
}

uint64_t sub_1AD5982B0(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RelayReachabilityContext();
  *(_BYTE *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*sub_1AD5982DC())(_QWORD)
{
  type metadata accessor for RelayReachabilityContext();
  return nullsub_1;
}

uint64_t sub_1AD598304()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RelayReachabilityContext() + 52));
}

uint64_t sub_1AD598324(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RelayReachabilityContext();
  *(_BYTE *)(v1 + *(int *)(result + 52)) = a1;
  return result;
}

uint64_t (*sub_1AD598350())(_QWORD)
{
  type metadata accessor for RelayReachabilityContext();
  return nullsub_1;
}

uint64_t sub_1AD598378()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for RelayReachabilityContext() + 56));
}

uint64_t sub_1AD598398(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RelayReachabilityContext();
  *(_BYTE *)(v1 + *(int *)(result + 56)) = a1;
  return result;
}

uint64_t (*sub_1AD5983C4())(_QWORD)
{
  type metadata accessor for RelayReachabilityContext();
  return nullsub_1;
}

unint64_t sub_1AD5983F0()
{
  unint64_t result;

  result = qword_1EECDE7B8;
  if (!qword_1EECDE7B8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6956DC, &type metadata for RelayReachabilityContextChatStyle);
    atomic_store(result, (unint64_t *)&qword_1EECDE7B8);
  }
  return result;
}

unint64_t sub_1AD598434(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD28C284();
  result = sub_1AD28C2C8();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD598460(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD5984AC(&qword_1EECD3DC0, (uint64_t)&unk_1AD651AD8);
  result = sub_1AD5984AC(&qword_1EECD3DD0, (uint64_t)&unk_1AD651B00);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD5984AC(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RelayReachabilityContext();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD5984F0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD59852C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = a1[3];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD59856C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD5985A8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  *a2 = a1[5];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t storeEnumTagSinglePayload for RelayReachabilityContextChatStyle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD598630 + 4 * byte_1AD6956D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD598664 + 4 * byte_1AD6956D0[v4]))();
}

uint64_t sub_1AD598664(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD59866C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD598674);
  return result;
}

uint64_t sub_1AD598680(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD598688);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD59868C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD598694(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RelayReachabilityContextChatStyle()
{
  return &type metadata for RelayReachabilityContextChatStyle;
}

uint64_t sub_1AD5986B0(uint64_t a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *(_QWORD *)a1 = v5;
    a1 = v5 + ((v4 + 16) & ~(unint64_t)v4);
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v8;
    v9 = a2 + 2;
    v10 = a2[3];
    swift_retain();
    if (v10 == 1)
    {
      *(_OWORD *)(a1 + 16) = *v9;
    }
    else
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)v9;
      *(_QWORD *)(a1 + 24) = v10;
      swift_bridgeObjectRetain();
    }
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v11 = a2[6];
    *(_QWORD *)(a1 + 40) = a2[5];
    *(_QWORD *)(a1 + 48) = v11;
    v12 = a2 + 7;
    v13 = a2[8];
    swift_retain();
    if (v13 == 1)
    {
      *(_OWORD *)(a1 + 56) = *v12;
    }
    else
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)v12;
      *(_QWORD *)(a1 + 64) = v13;
      swift_bridgeObjectRetain();
    }
    v14 = a3[7];
    v15 = (void *)(a1 + v14);
    v16 = (char *)a2 + v14;
    v17 = sub_1AD63B084();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v18 + 16))(v15, v16, v17);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = a3[8];
    v21 = a3[9];
    v22 = (_QWORD *)(a1 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = (_QWORD *)(a1 + v21);
    v26 = (uint64_t *)((char *)a2 + v21);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = a3[11];
    *(_BYTE *)(a1 + a3[10]) = *((_BYTE *)a2 + a3[10]);
    *(_BYTE *)(a1 + v28) = *((_BYTE *)a2 + v28);
    v29 = a3[13];
    *(_BYTE *)(a1 + a3[12]) = *((_BYTE *)a2 + a3[12]);
    *(_BYTE *)(a1 + v29) = *((_BYTE *)a2 + v29);
    *(_BYTE *)(a1 + a3[14]) = *((_BYTE *)a2 + a3[14]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1AD598888(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  if (*(_QWORD *)(a1 + 24) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 64) != 1)
    swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_1AD63B084();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD598944(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _OWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  const void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  swift_retain();
  if (v8 == 1)
  {
    *(_OWORD *)(a1 + 16) = *v7;
  }
  else
  {
    *(_QWORD *)(a1 + 16) = *(_QWORD *)v7;
    *(_QWORD *)(a1 + 24) = v8;
    swift_bridgeObjectRetain();
  }
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  v10 = (_OWORD *)(a2 + 56);
  v11 = *(_QWORD *)(a2 + 64);
  swift_retain();
  if (v11 == 1)
  {
    *(_OWORD *)(a1 + 56) = *v10;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)v10;
    *(_QWORD *)(a1 + 64) = v11;
    swift_bridgeObjectRetain();
  }
  v12 = a3[7];
  v13 = (void *)(a1 + v12);
  v14 = (const void *)(a2 + v12);
  v15 = sub_1AD63B084();
  v16 = *(_QWORD *)(v15 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v16 + 16))(v13, v14, v15);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  v18 = a3[8];
  v19 = a3[9];
  v20 = (_QWORD *)(a1 + v18);
  v21 = (_QWORD *)(a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = (_QWORD *)(a1 + v19);
  v24 = (_QWORD *)(a2 + v19);
  v25 = v24[1];
  *v23 = *v24;
  v23[1] = v25;
  v26 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v26) = *(_BYTE *)(a2 + v26);
  v27 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v27) = *(_BYTE *)(a2 + v27);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1AD598AEC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;

  v6 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) == 1)
  {
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == 1)
  {
    sub_1AD0256E4(a1 + 16);
LABEL_6:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) == 1)
  {
    if (v9 != 1)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v9 == 1)
  {
    sub_1AD0256E4(a1 + 56);
LABEL_13:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_15;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_15:
  v10 = a3[7];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1AD63B084();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 24))(v11, v12, v13);
      goto LABEL_21;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_20;
  }
  if (v17)
  {
LABEL_20:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_21;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 16))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_21:
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (_QWORD *)(a2 + v19);
  *v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v22 = a3[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  *v23 = *v24;
  v23[1] = v24[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + a3[11]) = *(_BYTE *)(a2 + a3[11]);
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + a3[13]) = *(_BYTE *)(a2 + a3[13]);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1AD598DA8(uint64_t a1, uint64_t a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  void *v8;
  const void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  v7 = a3[7];
  v8 = (void *)(a1 + v7);
  v9 = (const void *)(a2 + v7);
  v10 = sub_1AD63B084();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v11 + 32))(v8, v9, v10);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[9];
  *(_OWORD *)(a1 + a3[8]) = *(_OWORD *)(a2 + a3[8]);
  *(_OWORD *)(a1 + v13) = *(_OWORD *)(a2 + v13);
  v14 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v14) = *(_BYTE *)(a2 + v14);
  v15 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v15) = *(_BYTE *)(a2 + v15);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1AD598ED4(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(void *, uint64_t, uint64_t);
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = (_OWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 24) == 1)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 24);
  if (v7 == 1)
  {
    sub_1AD0256E4(a1 + 16);
LABEL_4:
    *(_OWORD *)(a1 + 16) = *v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v8 = (_OWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 64) == 1)
  {
LABEL_9:
    *(_OWORD *)(a1 + 56) = *v8;
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a2 + 64);
  if (v9 == 1)
  {
    sub_1AD0256E4(a1 + 56);
    goto LABEL_9;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)v8;
  *(_QWORD *)(a1 + 64) = v9;
  swift_bridgeObjectRelease();
LABEL_11:
  v10 = a3[7];
  v11 = (void *)(a1 + v10);
  v12 = (void *)(a2 + v10);
  v13 = sub_1AD63B084();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (!v17)
    {
      (*(void (**)(void *, void *, uint64_t))(v14 + 40))(v11, v12, v13);
      goto LABEL_17;
    }
    (*(void (**)(void *, uint64_t))(v14 + 8))(v11, v13);
    goto LABEL_16;
  }
  if (v17)
  {
LABEL_16:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_17;
  }
  (*(void (**)(void *, void *, uint64_t))(v14 + 32))(v11, v12, v13);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
LABEL_17:
  v19 = a3[8];
  v20 = (_QWORD *)(a1 + v19);
  v21 = (uint64_t *)(a2 + v19);
  v23 = *v21;
  v22 = v21[1];
  *v20 = v23;
  v20[1] = v22;
  swift_bridgeObjectRelease();
  v24 = a3[9];
  v25 = (_QWORD *)(a1 + v24);
  v26 = (uint64_t *)(a2 + v24);
  v28 = *v26;
  v27 = v26[1];
  *v25 = v28;
  v25[1] = v27;
  swift_bridgeObjectRelease();
  v29 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  *(_BYTE *)(a1 + v29) = *(_BYTE *)(a2 + v29);
  v30 = a3[13];
  *(_BYTE *)(a1 + a3[12]) = *(_BYTE *)(a2 + a3[12]);
  *(_BYTE *)(a1 + v30) = *(_BYTE *)(a2 + v30);
  *(_BYTE *)(a1 + a3[14]) = *(_BYTE *)(a2 + a3[14]);
  return a1;
}

uint64_t sub_1AD5990F8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD599104(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 28)], a2, v8);
  }
}

uint64_t sub_1AD599184()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD599190(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 28)], a2, a2, v7);
  }
  return result;
}

void sub_1AD599208()
{
  unint64_t v0;

  sub_1AD0D450C();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

unint64_t sub_1AD5992A4()
{
  unint64_t result;

  result = qword_1EECDE7C0;
  if (!qword_1EECDE7C0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD695744, &type metadata for RelayReachabilityContextChatStyle);
    atomic_store(result, (unint64_t *)&qword_1EECDE7C0);
  }
  return result;
}

uint64_t PNGEncoder.__allocating_init(configuration:)()
{
  return swift_allocObject();
}

uint64_t PNGEncoder.init(configuration:)()
{
  uint64_t v0;

  return v0;
}

uint64_t PNGEncoder.encode(imageSource:)()
{
  _BYTE *v0;

  sub_1AD420BB8();
  swift_allocError();
  *v0 = 3;
  return swift_willThrow();
}

void PNGEncoder.encode(imageSource:to:)(CGImageSource *a1)
{
  sub_1AD5994C8(a1);
}

__CFData *PNGEncoder.encode(image:)(CGImage *a1)
{
  return sub_1AD59970C(a1);
}

void PNGEncoder.encode(image:to:)(CGImage *a1)
{
  sub_1AD5999BC(a1);
}

uint64_t PNGEncoder.encode(pixelBuffer:to:)()
{
  uint64_t v0;

  sub_1AD0D0080();
  swift_allocError();
  *(_WORD *)v0 = 1281;
  *(_QWORD *)(v0 + 8) = 0;
  return swift_willThrow();
}

uint64_t PNGEncoder.encode(pixelBuffer:)()
{
  uint64_t v0;

  sub_1AD0D0080();
  swift_allocError();
  *(_WORD *)v0 = 1281;
  *(_QWORD *)(v0 + 8) = 0;
  return swift_willThrow();
}

uint64_t PNGEncoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t PNGEncoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1AD599440(CGImageSource *a1)
{
  sub_1AD5994C8(a1);
}

uint64_t sub_1AD599454()
{
  _BYTE *v0;

  sub_1AD420BB8();
  swift_allocError();
  *v0 = 3;
  return swift_willThrow();
}

void sub_1AD5994A0(CGImage *a1)
{
  sub_1AD5999BC(a1);
}

__CFData *sub_1AD5994B4(CGImage *a1)
{
  return sub_1AD59970C(a1);
}

void sub_1AD5994C8(CGImageSource *a1)
{
  const __CFURL *v1;
  __CFString *v2;
  uint64_t inited;
  void *v4;
  void *v5;
  id v6;
  id v7;
  const __CFDictionary *v8;
  CGImageDestination *v9;
  uint64_t v10;
  id v11;
  id v12;
  const __CFDictionary *v13;
  _BYTE *v14;
  _BYTE *v15;

  v1 = (const __CFURL *)sub_1AD63AE98();
  v2 = (__CFString *)sub_1AD63B744();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD70);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648170;
  v4 = (void *)*MEMORY[0x1E0CBD2B8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD2B8];
  *(_BYTE *)(inited + 40) = 0;
  v5 = (void *)*MEMORY[0x1E0CBD1C0];
  *(_QWORD *)(inited + 48) = *MEMORY[0x1E0CBD1C0];
  *(_BYTE *)(inited + 56) = 1;
  v6 = v4;
  v7 = v5;
  sub_1AD4396D8(inited);
  type metadata accessor for CFString(0);
  sub_1AD32EFC0();
  v8 = (const __CFDictionary *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  v9 = CGImageDestinationCreateWithURL(v1, v2, 1uLL, v8);

  if (v9)
  {
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_1AD648170;
    *(_QWORD *)(v10 + 32) = v6;
    *(_BYTE *)(v10 + 40) = 0;
    *(_QWORD *)(v10 + 48) = v7;
    *(_BYTE *)(v10 + 56) = 1;
    v11 = v6;
    v12 = v7;
    sub_1AD4396D8(v10);
    v13 = (const __CFDictionary *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    CGImageDestinationAddImageFromSource(v9, a1, 0, v13);

    if (!CGImageDestinationFinalize(v9))
    {
      sub_1AD420BB8();
      swift_allocError();
      *v15 = 3;
      swift_willThrow();
    }

  }
  else
  {
    sub_1AD420BB8();
    swift_allocError();
    *v14 = 2;
    swift_willThrow();
  }
}

__CFData *sub_1AD59970C(CGImage *a1)
{
  __CFData *v1;
  CFMutableDataRef Mutable;
  __CFString *v4;
  uint64_t inited;
  void *v6;
  void *v7;
  id v8;
  id v9;
  const __CFDictionary *v10;
  CGImageDestination *v11;
  uint64_t v12;
  id v13;
  id v14;
  const __CFDictionary *v15;
  __CFData *v16;
  _BYTE *v17;
  _BYTE *v18;
  _BYTE *v19;
  CGImage *v21;

  Mutable = CFDataCreateMutable(0, 0);
  if (Mutable)
  {
    v1 = Mutable;
    v21 = a1;
    v4 = (__CFString *)sub_1AD63B744();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD70);
    inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1AD648170;
    v6 = (void *)*MEMORY[0x1E0CBD2B8];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD2B8];
    *(_BYTE *)(inited + 40) = 0;
    v7 = (void *)*MEMORY[0x1E0CBD1C0];
    *(_QWORD *)(inited + 48) = *MEMORY[0x1E0CBD1C0];
    *(_BYTE *)(inited + 56) = 1;
    v8 = v6;
    v9 = v7;
    sub_1AD4396D8(inited);
    type metadata accessor for CFString(0);
    sub_1AD32EFC0();
    v10 = (const __CFDictionary *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    v11 = CGImageDestinationCreateWithData(v1, v4, 1uLL, v10);

    if (v11)
    {
      v12 = swift_initStackObject();
      *(_OWORD *)(v12 + 16) = xmmword_1AD648170;
      *(_QWORD *)(v12 + 32) = v8;
      *(_BYTE *)(v12 + 40) = 0;
      *(_QWORD *)(v12 + 48) = v9;
      *(_BYTE *)(v12 + 56) = 1;
      v13 = v8;
      v14 = v9;
      sub_1AD4396D8(v12);
      v15 = (const __CFDictionary *)sub_1AD63B678();
      swift_bridgeObjectRelease();
      CGImageDestinationAddImage(v11, v21, v15);

      if (CGImageDestinationFinalize(v11))
      {
        v16 = v1;
        v1 = (__CFData *)sub_1AD63AFB8();

      }
      else
      {
        sub_1AD420BB8();
        swift_allocError();
        *v19 = 3;
        swift_willThrow();

      }
    }
    else
    {
      sub_1AD420BB8();
      swift_allocError();
      *v18 = 2;
      swift_willThrow();

    }
  }
  else
  {
    sub_1AD420BB8();
    swift_allocError();
    *v17 = 1;
    swift_willThrow();
  }
  return v1;
}

void sub_1AD5999BC(CGImage *a1)
{
  const __CFURL *v1;
  __CFString *v2;
  uint64_t inited;
  void *v4;
  void *v5;
  id v6;
  id v7;
  const __CFDictionary *v8;
  CGImageDestination *v9;
  uint64_t v10;
  id v11;
  id v12;
  const __CFDictionary *v13;
  _BYTE *v14;
  _BYTE *v15;

  v1 = (const __CFURL *)sub_1AD63AE98();
  v2 = (__CFString *)sub_1AD63B744();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD70);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648170;
  v4 = (void *)*MEMORY[0x1E0CBD2B8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD2B8];
  *(_BYTE *)(inited + 40) = 0;
  v5 = (void *)*MEMORY[0x1E0CBD1C0];
  *(_QWORD *)(inited + 48) = *MEMORY[0x1E0CBD1C0];
  *(_BYTE *)(inited + 56) = 1;
  v6 = v4;
  v7 = v5;
  sub_1AD4396D8(inited);
  type metadata accessor for CFString(0);
  sub_1AD32EFC0();
  v8 = (const __CFDictionary *)sub_1AD63B678();
  swift_bridgeObjectRelease();
  v9 = CGImageDestinationCreateWithURL(v1, v2, 1uLL, v8);

  if (v9)
  {
    v10 = swift_initStackObject();
    *(_OWORD *)(v10 + 16) = xmmword_1AD648170;
    *(_QWORD *)(v10 + 32) = v6;
    *(_BYTE *)(v10 + 40) = 0;
    *(_QWORD *)(v10 + 48) = v7;
    *(_BYTE *)(v10 + 56) = 1;
    v11 = v6;
    v12 = v7;
    sub_1AD4396D8(v10);
    v13 = (const __CFDictionary *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    CGImageDestinationAddImage(v9, a1, v13);

    if (!CGImageDestinationFinalize(v9))
    {
      sub_1AD420BB8();
      swift_allocError();
      *v15 = 3;
      swift_willThrow();
    }

  }
  else
  {
    sub_1AD420BB8();
    swift_allocError();
    *v14 = 2;
    swift_willThrow();
  }
}

uint64_t type metadata accessor for PNGEncoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for PNGEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PNGEncoder.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t storeEnumTagSinglePayload for PNGEncodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD599C7C + 4 * byte_1AD695925[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD599CB0 + 4 * byte_1AD695920[v4]))();
}

uint64_t sub_1AD599CB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD599CB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD599CC0);
  return result;
}

uint64_t sub_1AD599CCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD599CD4);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD599CD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD599CE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PNGEncodingError()
{
  return &type metadata for PNGEncodingError;
}

unint64_t sub_1AD599D00()
{
  unint64_t result;

  result = qword_1EECDE7C8;
  if (!qword_1EECDE7C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6959C4, &type metadata for PNGEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EECDE7C8);
  }
  return result;
}

Swift::Void __swiftcall BlastDoorServer.setVideoRestrictions(codecs:)(Swift::OpaquePointer codecs)
{
  int v1;

  sub_1AD63BB64();
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  sub_1AD63B48C();
  v1 = VTRestrictVideoDecoders();
  if (v1 != sub_1AD63B5F4())
  {
    sub_1AD63BD38();
    sub_1AD63B810();
    sub_1AD63C0D4();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    sub_1AD63BE28();
    __break(1u);
  }
}

Swift::Void __swiftcall BlastDoorServer.setImageRestrictions(allowedImageFormats:increasedRestrictions:)(Swift::OpaquePointer allowedImageFormats, Swift::Bool increasedRestrictions)
{
  void *v3;
  int v4;
  int v5;
  int v6;
  int v7;

  sub_1AD63BB64();
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  sub_1AD63B48C();
  v3 = (void *)sub_1AD63B990();
  v4 = CGImageSourceSetAllowableTypes();

  if (v4 != sub_1AD63B5F4())
    goto LABEL_11;
  v5 = CGImageSourceDisableHardwareDecoding();
  if (v5 != sub_1AD63B5F4())
    goto LABEL_11;
  v6 = CGImageSourceEnableRestrictedDecoding();
  if (v6 != sub_1AD63B5F4())
    goto LABEL_11;
  CGEnterLockdownModeForPDF();
  CGEnterLockdownModeForFonts();
  BD_IOSurfaceDisallowForever();
  if (increasedRestrictions)
  {
    if (qword_1ED2DAA88 != -1)
      swift_once();
    v7 = CGImageSourceDisableMetadataParsing();
    if (v7 != sub_1AD63B5F4())
    {
LABEL_11:
      sub_1AD63BE28();
      __break(1u);
    }
  }
}

uint64_t static BlastDoorServer.disableRawDecoding()()
{
  uint64_t result;

  if (qword_1ED2DAA88 != -1)
    return swift_once();
  return result;
}

uint64_t sub_1AD59A0C0()
{
  void *v0;
  int v1;
  uint64_t result;

  sub_1AD63BB64();
  sub_1AD011CE4();
  v0 = (void *)sub_1AD63BC30();
  sub_1AD63B48C();

  v1 = CGImageSourceDisableRAWDecoding();
  result = sub_1AD63B5F4();
  if (v1 != (_DWORD)result)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD59A18C@<X0>(__int128 *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  _BYTE v10[192];

  sub_1AD00FF28(a4, (uint64_t)v10, qword_1ED2E2EE0);
  sub_1AD00FA24(a1, a5);
  *(_QWORD *)(a5 + 40) = a2;
  *(_BYTE *)(a5 + 48) = a3 & 1;
  return sub_1AD00FF28((uint64_t)v10, a5 + 56, qword_1ED2E2EE0);
}

void sub_1AD59A20C(__int128 *a1)
{
  char *v1;
  __int128 v2[12];
  _BYTE v3[200];

  sub_1AD00E830(a1, (uint64_t)v2);
  sub_1AD00E830(v2, (uint64_t)v3);
  v1 = (char *)sub_1AD59A268 + 4 * byte_1AD695A2C[sub_1AD00E92C((uint64_t)v3)];
  __asm { BR              X10 }
}

uint64_t sub_1AD59A268()
{
  uint64_t v0;
  uint64_t v1;
  unsigned __int8 *v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned __int8 v13;
  uint64_t v14;

  v2 = (unsigned __int8 *)sub_1AD00E98C((uint64_t)&v14);
  *(_DWORD *)(v1 - 72) = *v2;
  v13 = v2[1];
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(unsigned __int8 *)(v0 + 48);
  type metadata accessor for ATXEncoder();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 24) = 0;
  *(_BYTE *)(v5 + 32) = 1;
  sub_1AD63BB64();
  if (qword_1ED2DAD30 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
  v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1AD648160;
  *(_DWORD *)(v1 - 68) = v4;
  if ((v4 & 1) != 0)
  {
    v7 = v3;
    v8 = 0xE300000000000000;
    v9 = 7104878;
  }
  else
  {
    v9 = sub_1AD63B7A4();
    v7 = v3;
    v8 = v10;
  }
  *(_QWORD *)(v6 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v6 + 64) = sub_1AD0469B8();
  *(_QWORD *)(v6 + 32) = v9;
  *(_QWORD *)(v6 + 40) = v8;
  sub_1AD63B48C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v5 + 16) = *(_DWORD *)(v1 - 72);
  *(_BYTE *)(v5 + 17) = v13;
  swift_beginAccess();
  *(_QWORD *)(v5 + 24) = v7;
  *(_BYTE *)(v5 + 32) = *(_DWORD *)(v1 - 68);
  v11 = sub_1AD59AB5C(v5, (uint64_t)sub_1AD59C298, (uint64_t)sub_1AD59C074, (uint64_t)sub_1AD59C11C);
  swift_setDeallocating();
  swift_deallocClassInstance();
  return v11;
}

uint64_t sub_1AD59A694@<X0>(__int128 *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  int v7;
  uint64_t v8;
  __int128 v9[12];
  _BYTE v10[192];
  _OWORD v11[12];
  _QWORD v12[24];
  __int128 v13[12];
  _BYTE v14[192];

  sub_1AD00E830(a1, (uint64_t)v13);
  sub_1AD00E830(v13, (uint64_t)v14);
  if (sub_1AD00E92C((uint64_t)v14) == 1)
  {
    sub_1AD00E98C((uint64_t)v14);
    v4 = v2[3];
    v5 = v2[4];
    __swift_project_boxed_opaque_existential_1(v2, v4);
    (*(void (**)(_QWORD *__return_ptr, uint64_t (*)@<X0>(void *@<X0>, uint64_t@<X8>), _QWORD, ValueMetadata *, uint64_t, uint64_t))(v5 + 24))(v12, sub_1AD59AFAC, 0, &type metadata for PixelBufferEncodingConfiguration, v4, v5);
    sub_1AD00FF28((uint64_t)v12, (uint64_t)v10, &qword_1EECD1AD8);
    sub_1AD00FF28((uint64_t)v10, (uint64_t)v11, &qword_1EECD1AD8);
    v7 = sub_1AD00FF6C((uint64_t)v11);
    if (v7 == 1)
    {
      sub_1AD63BB7C();
      if (qword_1ED2E7540[0] != -1)
        swift_once();
      sub_1AD63B48C();
      sub_1AD00E830(v13, a2);
      sub_1AD00E830(v13, (uint64_t)v9);
      v8 = sub_1AD00E98C((uint64_t)v9);
      return sub_1AD00F844(v8);
    }
    else
    {
      v9[8] = v11[8];
      v9[9] = v11[9];
      v9[10] = v11[10];
      v9[11] = v11[11];
      v9[4] = v11[4];
      v9[5] = v11[5];
      v9[6] = v11[6];
      v9[7] = v11[7];
      v9[0] = v11[0];
      v9[1] = v11[1];
      v9[2] = v11[2];
      v9[3] = v11[3];
      sub_1AD00F9C0(v9);
      return sub_1AD00E830(v9, a2);
    }
  }
  else
  {
    sub_1AD00E830(v13, a2);
    return sub_1AD59B000((uint64_t)v13);
  }
}

void sub_1AD59A880(uint64_t a1, __int128 *a2)
{
  char *v2;
  __int128 v3[12];
  _BYTE v4[192];

  sub_1AD00E830(a2, (uint64_t)v3);
  sub_1AD00E830(v3, (uint64_t)v4);
  v2 = (char *)sub_1AD59A8E0 + 4 * byte_1AD695A31[sub_1AD00E92C((uint64_t)v4)];
  __asm { BR              X10 }
}

uint64_t sub_1AD59A8E0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  char v3;
  char v4;
  uint64_t v5;

  v2 = (char *)sub_1AD00E98C(v1 - 240);
  v3 = *v2;
  v4 = v2[1];
  type metadata accessor for ATXEncoder();
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 24) = 0;
  *(_BYTE *)(v5 + 32) = 1;
  *(_BYTE *)(v5 + 16) = v3;
  *(_BYTE *)(v5 + 17) = v4;
  sub_1AD0CF748(v0, v5);
  swift_setDeallocating();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD59AABC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD0CFC4C(v1, a1);
}

uint64_t sub_1AD59AAC8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 40);
}

uint64_t sub_1AD59AAD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  _BYTE v4[192];

  sub_1AD00FF28(v1 + 56, (uint64_t)v4, qword_1ED2E2EE0);
  sub_1AD00FF28((uint64_t)v4, a1, qword_1ED2E2EE0);
  return sub_1AD0CFA58((uint64_t)v4, (uint64_t (*)(void))sub_1AD00FEAC);
}

uint64_t sub_1AD59AB30(uint64_t a1)
{
  return sub_1AD59AB5C(a1, (uint64_t)sub_1AD59C298, (uint64_t)sub_1AD59C1B4, (uint64_t)sub_1AD59C1D0);
}

uint64_t sub_1AD59AB5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(_QWORD *__return_ptr, _BYTE *, uint64_t, _QWORD *, _QWORD, uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(_QWORD *__return_ptr, _BYTE *, uint64_t, _QWORD *, _QWORD, uint64_t, uint64_t);
  _QWORD v21[4];
  _QWORD v22[4];
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  _QWORD v27[4];
  _BYTE v28[192];
  _BYTE v29[192];
  _QWORD v30[2];
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;
  _BYTE v34[192];
  _BYTE v35[192];
  _BYTE v36[192];
  _QWORD v37[2];
  _QWORD v38[3];
  uint64_t v39;
  uint64_t v40;
  _BYTE v41[192];
  _QWORD v42[2];
  _QWORD v43[3];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v46 = a1;
  sub_1AD0CFC4C(v4, (uint64_t)v43);
  v9 = v44;
  v10 = v45;
  __swift_project_boxed_opaque_existential_1(v43, v44);
  v27[2] = &v46;
  (*(void (**)(_QWORD *__return_ptr, uint64_t, _QWORD *, _QWORD, uint64_t, uint64_t))(v10 + 24))(v42, a2, v27, MEMORY[0x1E0CB0338], v9, v10);
  if (v5)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  else if (v42[1] >> 60 == 15)
  {
    v24 = a4;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
    sub_1AD0CFC4C(v4, (uint64_t)v38);
    v12 = v39;
    v13 = v40;
    __swift_project_boxed_opaque_existential_1(v38, v39);
    v25 = v4 + 56;
    sub_1AD00FF28(v4 + 56, (uint64_t)v41, qword_1ED2E2EE0);
    v14 = sub_1AD00FF28((uint64_t)v41, (uint64_t)v36, qword_1ED2E2EE0);
    v26 = &v23;
    MEMORY[0x1E0C80A78](v14);
    v22[2] = &v46;
    v15 = *(void (**)(_QWORD *__return_ptr, _BYTE *, uint64_t, _QWORD *, _QWORD, uint64_t, uint64_t))(v13 + 8);
    sub_1AD0CFA58((uint64_t)v41, (uint64_t (*)(void))sub_1AD00FEAC);
    v15(v37, v36, a3, v22, MEMORY[0x1E0CB0338], v12, v13);
    v16 = v25;
    sub_1AD00FF28((uint64_t)v36, (uint64_t)v35, qword_1ED2E2EE0);
    sub_1AD0CFA58((uint64_t)v35, (uint64_t (*)(void))sub_1AD00E8B0);
    if (v37[1] >> 60 == 15)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
      sub_1AD0CFC4C(v4, (uint64_t)v31);
      v17 = v32;
      v18 = v33;
      __swift_project_boxed_opaque_existential_1(v31, v32);
      sub_1AD00FF28(v16, (uint64_t)v34, qword_1ED2E2EE0);
      v19 = sub_1AD00FF28((uint64_t)v34, (uint64_t)v29, qword_1ED2E2EE0);
      MEMORY[0x1E0C80A78](v19);
      v21[2] = &v46;
      v20 = *(void (**)(_QWORD *__return_ptr, _BYTE *, uint64_t, _QWORD *, _QWORD, uint64_t, uint64_t))(v18 + 16);
      sub_1AD0CFA58((uint64_t)v34, (uint64_t (*)(void))sub_1AD00FEAC);
      v20(v30, v29, v24, v21, MEMORY[0x1E0CB0338], v17, v18);
      sub_1AD00FF28((uint64_t)v29, (uint64_t)v28, qword_1ED2E2EE0);
      sub_1AD0CFA58((uint64_t)v28, (uint64_t (*)(void))sub_1AD00E8B0);
      if (v30[1] >> 60 == 15)
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
        return 0;
      }
      else
      {
        a4 = v30[0];
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
      }
    }
    else
    {
      a4 = v37[0];
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v38);
    }
  }
  else
  {
    a4 = v42[0];
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v43);
  }
  return a4;
}

void sub_1AD59AEE0(CGImage *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  int64_t Width;
  int64_t Height;
  uint64_t v7;
  uint64_t v8;
  CGImage *v9;
  __int128 v10;
  __int128 v11;

  Width = CGImageGetWidth(a1);
  Height = CGImageGetHeight(a1);
  sub_1AD14010C((double)Width, (double)Height);
  if (!v2)
  {
    *(_QWORD *)&v10 = sub_1AD0E1910(v7);
    *((_QWORD *)&v10 + 1) = v8;
    sub_1AD5FB70C((uint64_t)&v10);
    v11 = v10;
    v9 = a1;
    sub_1AD5FB3B4((uint64_t)&v11);
    *a2 = v11;
  }
}

uint64_t sub_1AD59AFAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _BYTE v4[192];

  sub_1AD43A188((__CVBuffer *)a1, (uint64_t)v4);
  nullsub_1(v4);
  return sub_1AD00FF28((uint64_t)v4, a2, &qword_1EECD1AD8);
}

uint64_t sub_1AD59B000(uint64_t a1)
{
  sub_1AD00FEAC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184));
  return a1;
}

uint64_t destroy for Image(_QWORD *a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;

  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v3 = a1[10];
  v4 = a1[12];
  v5 = a1[14];
  v6 = a1[16];
  v7 = a1[20];
  v8 = a1[22];
  v9 = a1[24];
  if (v3 >> 1 != 0xFFFFFFFF
    || (v5 | (unint64_t)v4) > 1
    || (v7 & 0xFFFFFFFFFFFFFEFELL | v6 & 0xFFFFFFFFFFFF00FELL) != 0
    || (v9 | v8) >= 2)
  {
    return sub_1AD00E8B0(a1[7], a1[8], a1[9], v3, a1[11], v4, a1[13], v5, a1[15], v6, a1[17], a1[18], a1[19], v7, a1[21], v8, a1[23], v9, a1[25],
             a1[26],
             a1[27],
             a1[28],
             a1[29],
             a1[30]);
  }
  return result;
}

uint64_t initializeWithCopy for Image(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;

  v4 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v4;
  (**(void (***)(void))(v4 - 8))();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v5 = *(_QWORD *)(a2 + 80);
  v6 = *(_QWORD *)(a2 + 96);
  v7 = *(_QWORD *)(a2 + 112);
  v8 = *(_QWORD *)(a2 + 128);
  v9 = *(_QWORD *)(a2 + 160);
  v10 = *(_QWORD *)(a2 + 176);
  v11 = *(_QWORD *)(a2 + 192);
  if (v5 >> 1 != 0xFFFFFFFF
    || (v7 | (unint64_t)v6) > 1
    || v9 & 0xFFFFFFFFFFFFFEFELL | v8 & 0xFFFFFFFFFFFF00FELL
    || (v11 | v10) >= 2)
  {
    v18 = *(_QWORD *)(a2 + 56);
    v19 = *(_QWORD *)(a2 + 72);
    v20 = *(_QWORD *)(a2 + 104);
    v27 = *(_QWORD *)(a2 + 120);
    v30 = *(_QWORD *)(a2 + 136);
    v31 = *(_QWORD *)(a2 + 144);
    v32 = *(_QWORD *)(a2 + 152);
    v33 = *(_QWORD *)(a2 + 168);
    v34 = *(_QWORD *)(a2 + 184);
    v35 = *(_QWORD *)(a2 + 200);
    v36 = *(_QWORD *)(a2 + 208);
    v37 = *(_QWORD *)(a2 + 216);
    v38 = *(_QWORD *)(a2 + 224);
    v39 = *(_QWORD *)(a2 + 232);
    v40 = *(_QWORD *)(a2 + 240);
    v25 = *(_QWORD *)(a2 + 160);
    v21 = *(_QWORD *)(a2 + 64);
    v28 = *(_QWORD *)(a2 + 192);
    v29 = *(_QWORD *)(a2 + 176);
    v22 = *(_QWORD *)(a2 + 88);
    v26 = v9;
    v23 = v20;
    sub_1AD00FEAC(v18, v21, v19, v5, v22, v6, v20, v7, v27, v8, v30, v31, v32, v25, v33, v10, v34, v11, v35,
      v36,
      v37,
      v38,
      v39,
      v40);
    *(_QWORD *)(a1 + 56) = v18;
    *(_QWORD *)(a1 + 64) = v21;
    *(_QWORD *)(a1 + 72) = v19;
    *(_QWORD *)(a1 + 80) = v5;
    *(_QWORD *)(a1 + 88) = v22;
    *(_QWORD *)(a1 + 96) = v6;
    *(_QWORD *)(a1 + 104) = v23;
    *(_QWORD *)(a1 + 112) = v7;
    *(_QWORD *)(a1 + 120) = v27;
    *(_QWORD *)(a1 + 128) = v8;
    *(_QWORD *)(a1 + 136) = v30;
    *(_QWORD *)(a1 + 144) = v31;
    *(_QWORD *)(a1 + 152) = v32;
    *(_QWORD *)(a1 + 160) = v26;
    *(_QWORD *)(a1 + 168) = v33;
    *(_QWORD *)(a1 + 176) = v29;
    *(_QWORD *)(a1 + 184) = v34;
    *(_QWORD *)(a1 + 192) = v28;
    *(_QWORD *)(a1 + 200) = v35;
    *(_QWORD *)(a1 + 208) = v36;
    *(_QWORD *)(a1 + 216) = v37;
    *(_QWORD *)(a1 + 224) = v38;
    *(_QWORD *)(a1 + 232) = v39;
    *(_QWORD *)(a1 + 240) = v40;
  }
  else
  {
    v12 = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = v12;
    v13 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v13;
    v14 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v14;
    v15 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v15;
    v16 = *(_OWORD *)(a2 + 72);
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    *(_OWORD *)(a1 + 72) = v16;
    v17 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v17;
  }
  return a1;
}

uint64_t assignWithCopy for Image(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  __int128 *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v4 = *(_QWORD *)(a2 + 40);
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = v4;
  v5 = (_OWORD *)(a1 + 56);
  v6 = (__int128 *)(a2 + 56);
  v7 = *(_QWORD *)(a2 + 80);
  v8 = *(_QWORD *)(a2 + 96);
  v9 = *(_QWORD *)(a2 + 112);
  v10 = *(_QWORD *)(a2 + 128);
  v11 = *(_QWORD *)(a2 + 160);
  v12 = *(_QWORD *)(a2 + 176);
  v13 = *(_QWORD *)(a2 + 192);
  v17 = v7 >> 1 == 0xFFFFFFFF
     && (v9 | (unint64_t)v8) < 2
     && (v11 & 0xFFFFFFFFFFFFFEFELL | v10 & 0xFFFFFFFFFFFF00FELL) == 0
     && (v13 | v12) < 2;
  if (*(_QWORD *)(a1 + 80) >> 1 != 0xFFFFFFFFLL
    || (*(_QWORD *)(a1 + 112) | *(_QWORD *)(a1 + 96)) > 1
    || *(_QWORD *)(a1 + 160) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a1 + 128) & 0xFFFFFFFFFFFF00FELL
    || (*(_QWORD *)(a1 + 192) | *(_QWORD *)(a1 + 176)) >= 2)
  {
    if (v17)
    {
      sub_1AD148B34(a1 + 56);
      v27 = *(_OWORD *)(a2 + 104);
      v29 = *v6;
      v28 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v27;
      *v5 = v29;
      *(_OWORD *)(a1 + 72) = v28;
      v30 = *(_OWORD *)(a2 + 168);
      v32 = *(_OWORD *)(a2 + 120);
      v31 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v30;
      *(_OWORD *)(a1 + 120) = v32;
      *(_OWORD *)(a1 + 136) = v31;
      v33 = *(_OWORD *)(a2 + 232);
      v35 = *(_OWORD *)(a2 + 184);
      v34 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v33;
      *(_OWORD *)(a1 + 184) = v35;
      *(_OWORD *)(a1 + 200) = v34;
    }
    else
    {
      v41 = *(_QWORD *)(a2 + 56);
      v42 = *(_QWORD *)(a2 + 72);
      v66 = v42;
      v68 = *(_QWORD *)(a2 + 64);
      v43 = *(_QWORD *)(a2 + 88);
      v70 = *(_QWORD *)(a2 + 120);
      v72 = *(_QWORD *)(a2 + 136);
      v74 = *(_QWORD *)(a2 + 144);
      v76 = *(_QWORD *)(a2 + 152);
      v78 = *(_QWORD *)(a2 + 168);
      v80 = *(_QWORD *)(a2 + 184);
      v82 = *(_QWORD *)(a2 + 200);
      v84 = *(_QWORD *)(a2 + 208);
      v86 = *(_QWORD *)(a2 + 216);
      v88 = *(_QWORD *)(a2 + 224);
      v90 = *(_QWORD *)(a2 + 232);
      v92 = *(_QWORD *)(a2 + 240);
      v44 = *(_QWORD *)(a2 + 104);
      v94 = v13;
      sub_1AD00FEAC(v41, v68, v42, v7, v43, v8, v44, v9, v70, v10, v72, v74, v76, v11, v78, v12, v80, v13, v82,
        v84,
        v86,
        v88,
        v90,
        v92);
      v45 = *(_QWORD *)(a1 + 56);
      v46 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 56) = v41;
      *(_QWORD *)(a1 + 64) = v68;
      v47 = *(_QWORD *)(a1 + 72);
      v48 = *(_QWORD *)(a1 + 80);
      *(_QWORD *)(a1 + 72) = v66;
      *(_QWORD *)(a1 + 80) = v7;
      v49 = *(_QWORD *)(a1 + 88);
      v50 = *(_QWORD *)(a1 + 96);
      *(_QWORD *)(a1 + 88) = v43;
      *(_QWORD *)(a1 + 96) = v8;
      v51 = *(_QWORD *)(a1 + 104);
      v52 = *(_QWORD *)(a1 + 112);
      *(_QWORD *)(a1 + 104) = v44;
      *(_QWORD *)(a1 + 112) = v9;
      v53 = *(_OWORD *)(a1 + 120);
      *(_QWORD *)(a1 + 120) = v70;
      *(_QWORD *)(a1 + 128) = v10;
      v54 = *(_OWORD *)(a1 + 136);
      *(_QWORD *)(a1 + 136) = v72;
      *(_QWORD *)(a1 + 144) = v74;
      v55 = *(_OWORD *)(a1 + 152);
      *(_QWORD *)(a1 + 152) = v76;
      *(_QWORD *)(a1 + 160) = v11;
      v56 = *(_OWORD *)(a1 + 168);
      *(_QWORD *)(a1 + 168) = v78;
      *(_QWORD *)(a1 + 176) = v12;
      v57 = *(_OWORD *)(a1 + 184);
      *(_QWORD *)(a1 + 184) = v80;
      *(_QWORD *)(a1 + 192) = v94;
      v58 = *(_OWORD *)(a1 + 200);
      *(_QWORD *)(a1 + 200) = v82;
      *(_QWORD *)(a1 + 208) = v84;
      v59 = *(_OWORD *)(a1 + 216);
      *(_QWORD *)(a1 + 216) = v86;
      *(_QWORD *)(a1 + 224) = v88;
      v60 = *(_QWORD *)(a1 + 232);
      v61 = *(_QWORD *)(a1 + 240);
      *(_QWORD *)(a1 + 232) = v90;
      *(_QWORD *)(a1 + 240) = v92;
      sub_1AD00E8B0(v45, v46, v47, v48, v49, v50, v51, v52, v53, *((uint64_t *)&v53 + 1), v54, *((uint64_t *)&v54 + 1), v55, *((uint64_t *)&v55 + 1), v56, *((uint64_t *)&v56 + 1), v57, *((unint64_t *)&v57 + 1), v58,
        *((uint64_t *)&v58 + 1),
        v59,
        *((uint64_t *)&v59 + 1),
        v60,
        v61);
    }
  }
  else if (v17)
  {
    v18 = *v6;
    v19 = *(_OWORD *)(a2 + 72);
    v20 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v20;
    *v5 = v18;
    *(_OWORD *)(a1 + 72) = v19;
    v21 = *(_OWORD *)(a2 + 120);
    v22 = *(_OWORD *)(a2 + 136);
    v23 = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = v23;
    *(_OWORD *)(a1 + 120) = v21;
    *(_OWORD *)(a1 + 136) = v22;
    v24 = *(_OWORD *)(a2 + 184);
    v25 = *(_OWORD *)(a2 + 200);
    v26 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 232) = v26;
    *(_OWORD *)(a1 + 184) = v24;
    *(_OWORD *)(a1 + 200) = v25;
  }
  else
  {
    v36 = *(_QWORD *)(a2 + 56);
    v37 = *(_QWORD *)(a2 + 104);
    v65 = *(_QWORD *)(a2 + 120);
    v69 = *(_QWORD *)(a2 + 136);
    v73 = *(_QWORD *)(a2 + 144);
    v75 = *(_QWORD *)(a2 + 152);
    v77 = *(_QWORD *)(a2 + 168);
    v79 = *(_QWORD *)(a2 + 184);
    v81 = *(_QWORD *)(a2 + 200);
    v83 = *(_QWORD *)(a2 + 208);
    v85 = *(_QWORD *)(a2 + 216);
    v87 = *(_QWORD *)(a2 + 224);
    v89 = *(_QWORD *)(a2 + 232);
    v91 = *(_QWORD *)(a2 + 240);
    v64 = *(_QWORD *)(a2 + 176);
    v63 = *(_QWORD *)(a2 + 160);
    v71 = v64;
    v38 = *(_QWORD *)(a2 + 64);
    v67 = v63;
    v39 = *(_QWORD *)(a2 + 72);
    v40 = *(_QWORD *)(a2 + 88);
    v93 = v13;
    sub_1AD00FEAC(v36, v38, v39, v7, v40, v8, v37, v9, v65, v10, v69, v73, v75, v63, v77, v64, v79, v13, v81,
      v83,
      v85,
      v87,
      v89,
      v91);
    *(_QWORD *)(a1 + 56) = v36;
    *(_QWORD *)(a1 + 64) = v38;
    *(_QWORD *)(a1 + 72) = v39;
    *(_QWORD *)(a1 + 80) = v7;
    *(_QWORD *)(a1 + 88) = v40;
    *(_QWORD *)(a1 + 96) = v8;
    *(_QWORD *)(a1 + 104) = v37;
    *(_QWORD *)(a1 + 112) = v9;
    *(_QWORD *)(a1 + 120) = v65;
    *(_QWORD *)(a1 + 128) = v10;
    *(_QWORD *)(a1 + 136) = v69;
    *(_QWORD *)(a1 + 144) = v73;
    *(_QWORD *)(a1 + 152) = v75;
    *(_QWORD *)(a1 + 160) = v67;
    *(_QWORD *)(a1 + 168) = v77;
    *(_QWORD *)(a1 + 176) = v71;
    *(_QWORD *)(a1 + 184) = v79;
    *(_QWORD *)(a1 + 192) = v93;
    *(_QWORD *)(a1 + 200) = v81;
    *(_QWORD *)(a1 + 208) = v83;
    *(_QWORD *)(a1 + 216) = v85;
    *(_QWORD *)(a1 + 224) = v87;
    *(_QWORD *)(a1 + 232) = v89;
    *(_QWORD *)(a1 + 240) = v91;
  }
  return a1;
}

uint64_t assignWithTake for Image(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  __int128 v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  __swift_destroy_boxed_opaque_existential_1(a1);
  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 80);
  v7 = *(_QWORD *)(a1 + 96);
  v8 = *(_QWORD *)(a1 + 112);
  v9 = *(_QWORD *)(a1 + 128);
  v10 = *(_QWORD *)(a1 + 160);
  v11 = *(_QWORD *)(a1 + 176);
  v12 = *(_QWORD *)(a1 + 192);
  v13 = *(_QWORD *)(a2 + 80);
  v14 = *(_QWORD *)(a2 + 96);
  v15 = *(_QWORD *)(a2 + 112);
  v16 = *(_QWORD *)(a2 + 128);
  v17 = *(_QWORD *)(a2 + 160);
  v18 = *(_QWORD *)(a2 + 176);
  v19 = *(_QWORD *)(a2 + 192);
  if (v6 >> 1 != 0xFFFFFFFF
    || (v8 | (unint64_t)v7) > 1
    || v10 & 0xFFFFFFFFFFFFFEFELL | v9 & 0xFFFFFFFFFFFF00FELL
    || (v12 | v11) >= 2)
  {
    if (v13 >> 1 != 0xFFFFFFFF
      || (v15 | v14) > 1
      || v17 & 0xFFFFFFFFFFFFFEFELL | v16 & 0xFFFFFFFFFFFF00FELL
      || (v19 | v18) >= 2)
    {
      v26 = *(_QWORD *)(a2 + 72);
      v27 = *(_QWORD *)(a2 + 88);
      v28 = *(_QWORD *)(a2 + 104);
      v29 = *(_QWORD *)(a2 + 120);
      v30 = *(_QWORD *)(a2 + 152);
      v31 = *(_QWORD *)(a2 + 168);
      v32 = *(_QWORD *)(a2 + 184);
      v44 = *(_QWORD *)(a1 + 64);
      v45 = *(_QWORD *)(a1 + 56);
      v43 = *(_QWORD *)(a1 + 72);
      v46 = *(_QWORD *)(a1 + 88);
      v47 = *(_QWORD *)(a1 + 104);
      v33 = *(_QWORD *)(a1 + 120);
      v34 = *(_OWORD *)(a1 + 136);
      v35 = *(_QWORD *)(a1 + 152);
      v36 = *(_QWORD *)(a1 + 168);
      v37 = *(_QWORD *)(a1 + 184);
      v38 = *(_OWORD *)(a1 + 200);
      v39 = *(_OWORD *)(a1 + 216);
      v41 = *(_QWORD *)(a1 + 232);
      v40 = *(_QWORD *)(a1 + 240);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = v26;
      *(_QWORD *)(a1 + 80) = v13;
      *(_QWORD *)(a1 + 88) = v27;
      *(_QWORD *)(a1 + 96) = v14;
      *(_QWORD *)(a1 + 104) = v28;
      *(_QWORD *)(a1 + 112) = v15;
      *(_QWORD *)(a1 + 120) = v29;
      *(_QWORD *)(a1 + 128) = v16;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = v30;
      *(_QWORD *)(a1 + 160) = v17;
      *(_QWORD *)(a1 + 168) = v31;
      *(_QWORD *)(a1 + 176) = v18;
      *(_QWORD *)(a1 + 184) = v32;
      *(_QWORD *)(a1 + 192) = v19;
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      sub_1AD00E8B0(v45, v44, v43, v6, v46, v7, v47, v8, v33, v9, v34, *((uint64_t *)&v34 + 1), v35, v10, v36, v11, v37, v12, v38,
        *((uint64_t *)&v38 + 1),
        v39,
        *((uint64_t *)&v39 + 1),
        v41,
        v40);
      return a1;
    }
    sub_1AD148B34(a1 + 56);
  }
  v20 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v20;
  v21 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v21;
  v22 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v22;
  v23 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v23;
  v24 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v24;
  v25 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v25;
  return a1;
}

uint64_t getEnumTagSinglePayload for Image(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 248))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Image(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 248) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 248) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Image()
{
  return &type metadata for Image;
}

uint64_t destroy for Image.Encoding(uint64_t a1)
{
  return sub_1AD00E8B0(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
           *(_QWORD *)(a1 + 152),
           *(_QWORD *)(a1 + 160),
           *(_QWORD *)(a1 + 168),
           *(_QWORD *)(a1 + 176),
           *(_QWORD *)(a1 + 184));
}

uint64_t *initializeWithCopy for Image.Encoding(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;

  v3 = a2[5];
  v4 = a2[6];
  v5 = a2[7];
  v13 = a2[9];
  v14 = a2[10];
  v15 = a2[11];
  v16 = a2[12];
  v17 = a2[13];
  v18 = a2[14];
  v19 = a2[15];
  v20 = a2[16];
  v21 = a2[17];
  v22 = a2[18];
  v23 = a2[19];
  v24 = a2[20];
  v25 = a2[21];
  v26 = a2[22];
  v27 = a2[23];
  v6 = a2[8];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  sub_1AD00FEAC(*a2, v8, v9, v10, v11, v3, v4, v5, v6, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22,
    v23,
    v24,
    v25,
    v26,
    v27);
  *a1 = v7;
  a1[1] = v8;
  a1[2] = v9;
  a1[3] = v10;
  a1[4] = v11;
  a1[5] = v3;
  a1[6] = v4;
  a1[7] = v5;
  a1[8] = v6;
  a1[9] = v13;
  a1[10] = v14;
  a1[11] = v15;
  a1[12] = v16;
  a1[13] = v17;
  a1[14] = v18;
  a1[15] = v19;
  a1[16] = v20;
  a1[17] = v21;
  a1[18] = v22;
  a1[19] = v23;
  a1[20] = v24;
  a1[21] = v25;
  a1[22] = v26;
  a1[23] = v27;
  return a1;
}

uint64_t assignWithCopy for Image.Encoding(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;

  v3 = a2[5];
  v4 = a2[6];
  v5 = a2[7];
  v30 = a2[9];
  v31 = a2[10];
  v32 = a2[11];
  v33 = a2[12];
  v34 = a2[13];
  v35 = a2[14];
  v36 = a2[15];
  v37 = a2[16];
  v38 = a2[17];
  v39 = a2[18];
  v40 = a2[19];
  v41 = a2[20];
  v42 = a2[21];
  v43 = a2[22];
  v44 = a2[23];
  v6 = a2[8];
  v7 = *a2;
  v8 = a2[1];
  v9 = a2[2];
  v10 = a2[3];
  v11 = a2[4];
  sub_1AD00FEAC(*a2, v8, v9, v10, v11, v3, v4, v5, v6, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39,
    v40,
    v41,
    v42,
    v43,
    v44);
  v12 = *(_QWORD *)a1;
  v13 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v7;
  *(_QWORD *)(a1 + 8) = v8;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v9;
  *(_QWORD *)(a1 + 24) = v10;
  v16 = *(_QWORD *)(a1 + 32);
  v17 = *(_QWORD *)(a1 + 40);
  *(_QWORD *)(a1 + 32) = v11;
  *(_QWORD *)(a1 + 40) = v3;
  v18 = *(_QWORD *)(a1 + 48);
  v19 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v4;
  *(_QWORD *)(a1 + 56) = v5;
  v20 = *(_OWORD *)(a1 + 64);
  v21 = *(_OWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 64) = v6;
  *(_QWORD *)(a1 + 72) = v30;
  *(_QWORD *)(a1 + 80) = v31;
  *(_QWORD *)(a1 + 88) = v32;
  v22 = *(_OWORD *)(a1 + 96);
  v23 = *(_OWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 96) = v33;
  *(_QWORD *)(a1 + 104) = v34;
  *(_QWORD *)(a1 + 112) = v35;
  *(_QWORD *)(a1 + 120) = v36;
  v24 = *(_OWORD *)(a1 + 128);
  v25 = *(_OWORD *)(a1 + 144);
  *(_QWORD *)(a1 + 128) = v37;
  *(_QWORD *)(a1 + 136) = v38;
  *(_QWORD *)(a1 + 144) = v39;
  *(_QWORD *)(a1 + 152) = v40;
  v26 = *(_OWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = v41;
  *(_QWORD *)(a1 + 168) = v42;
  v27 = *(_QWORD *)(a1 + 176);
  v28 = *(_QWORD *)(a1 + 184);
  *(_QWORD *)(a1 + 176) = v43;
  *(_QWORD *)(a1 + 184) = v44;
  sub_1AD00E8B0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((unint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    v28);
  return a1;
}

uint64_t assignWithTake for Image.Encoding(uint64_t a1, _OWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  uint64_t v18;
  unint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;

  v3 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  v8 = *(_QWORD *)(a1 + 40);
  v9 = *(_QWORD *)(a1 + 48);
  v10 = *(_QWORD *)(a1 + 56);
  v11 = *(_OWORD *)(a1 + 64);
  v12 = *(_OWORD *)(a1 + 80);
  v13 = *(_OWORD *)(a1 + 96);
  v14 = *(_OWORD *)(a1 + 112);
  v15 = *(_OWORD *)(a1 + 128);
  v16 = *(_OWORD *)(a1 + 144);
  v17 = *(_OWORD *)(a1 + 160);
  v18 = *(_QWORD *)(a1 + 176);
  v19 = *(_QWORD *)(a1 + 184);
  v20 = a2[1];
  *(_OWORD *)a1 = *a2;
  *(_OWORD *)(a1 + 16) = v20;
  v21 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v21;
  v22 = a2[5];
  *(_OWORD *)(a1 + 64) = a2[4];
  *(_OWORD *)(a1 + 80) = v22;
  v23 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v23;
  v24 = a2[9];
  *(_OWORD *)(a1 + 128) = a2[8];
  *(_OWORD *)(a1 + 144) = v24;
  v25 = a2[11];
  *(_OWORD *)(a1 + 160) = a2[10];
  *(_OWORD *)(a1 + 176) = v25;
  sub_1AD00E8B0(v3, v5, v4, v6, v7, v8, v9, v10, v11, *((uint64_t *)&v11 + 1), v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((unint64_t *)&v15 + 1), v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for Image.Encoding(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 192))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Image.Encoding(uint64_t a1, int a2, int a3)
{
  double result;

  if (a2 < 0)
  {
    *(_QWORD *)(a1 + 184) = 0;
    result = 0.0;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 192) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_QWORD *)(a1 + 16) = 0;
      *(_QWORD *)(a1 + 24) = 2 * -a2;
      result = 0.0;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)(a1 + 48) = 0u;
      *(_OWORD *)(a1 + 64) = 0u;
      *(_OWORD *)(a1 + 80) = 0u;
      *(_OWORD *)(a1 + 96) = 0u;
      *(_OWORD *)(a1 + 112) = 0u;
      *(_OWORD *)(a1 + 128) = 0u;
      *(_OWORD *)(a1 + 144) = 0u;
      *(_OWORD *)(a1 + 160) = 0u;
      *(_OWORD *)(a1 + 176) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 192) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t sub_1AD59BEF0(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a2 < 2)
  {
    v2 = *(_QWORD *)(result + 40) & 1;
    v3 = *(_QWORD *)(result + 56) & 1;
    v4 = *(_QWORD *)(result + 72) & 0xFF01;
    v5 = *(_QWORD *)(result + 104) & 0x101;
    v6 = *(_QWORD *)(result + 120) & 1;
    v7 = *(_QWORD *)(result + 136) & 1 | (a2 << 62);
    *(_QWORD *)(result + 24) &= 1uLL;
    *(_QWORD *)(result + 40) = v2;
    *(_QWORD *)(result + 56) = v3;
    *(_QWORD *)(result + 72) = v4;
    *(_QWORD *)(result + 104) = v5;
    *(_QWORD *)(result + 120) = v6;
    *(_QWORD *)(result + 136) = v7;
  }
  else
  {
    *(_QWORD *)result = (a2 - 2);
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_QWORD *)(result + 136) = 0x8000000000000000;
    *(_OWORD *)(result + 144) = 0u;
    *(_OWORD *)(result + 160) = 0u;
    *(_OWORD *)(result + 176) = 0u;
  }
  return result;
}

ValueMetadata *type metadata accessor for Image.Encoding()
{
  return &type metadata for Image.Encoding;
}

uint64_t sub_1AD59BFA8@<X0>(__CVBuffer *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  _BYTE *BaseAddress;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = *a2;
  CVPixelBufferLockBaseAddress(a1, 1uLL);
  BaseAddress = CVPixelBufferGetBaseAddress(a1);
  if (BaseAddress)
  {
    v7 = BaseAddress;
    swift_beginAccess();
    v8 = sub_1AD3DB9F0(v7, *(_QWORD *)(v5 + 112));
    v10 = v9;
    result = CVPixelBufferUnlockBaseAddress(a1, 1uLL);
    *a3 = v8;
    a3[1] = v10;
  }
  else
  {
    sub_1AD00F938();
    swift_allocError();
    *(_WORD *)v12 = 257;
    *(_QWORD *)(v12 + 8) = 0;
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_1AD59C074@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AD59C168((uint64_t (*)(void))sub_1AD42023C, a1);
}

uint64_t sub_1AD59C090@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  id v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  _QWORD *v10;
  uint64_t v11;
  _QWORD v12[5];

  type metadata accessor for CGImage(0);
  v12[3] = v5;
  v12[4] = &off_1E5CCB010;
  v12[0] = a1;
  v6 = a1;
  v7 = sub_1AD59F4CC(v12);
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  v10 = v7;
  v11 = v8;
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  *a2 = v10;
  a2[1] = v11;
  return result;
}

uint64_t sub_1AD59C11C@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD59C090(a1, a2);
}

uint64_t sub_1AD59C134()
{
  return sub_1AD376F98();
}

uint64_t sub_1AD59C14C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AD59C168((uint64_t (*)(void))sub_1AD42004C, a1);
}

uint64_t sub_1AD59C168@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void sub_1AD59C198(CGImage *a1@<X0>, _OWORD *a2@<X8>)
{
  sub_1AD59AEE0(a1, a2);
}

uint64_t sub_1AD59C1B4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AD59C258((uint64_t (*)(void))sub_1AD420028, a1);
}

uint64_t sub_1AD59C1D0@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AD59C258((uint64_t (*)(void))sub_1AD377230, a1);
}

uint64_t sub_1AD59C1EC@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AD59C258((uint64_t (*)(void))sub_1AD420748, a1);
}

uint64_t sub_1AD59C208@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AD59C258((uint64_t (*)(void))sub_1AD59970C, a1);
}

uint64_t sub_1AD59C224@<X0>(__CVBuffer *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;

  return sub_1AD59BFA8(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_1AD59C23C@<X0>(uint64_t *a1@<X8>)
{
  return sub_1AD59C258((uint64_t (*)(void))sub_1AD4207AC, a1);
}

uint64_t sub_1AD59C258@<X0>(uint64_t (*a1)(void)@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;

  result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

uint64_t sub_1AD59C280()
{
  return sub_1AD0CFC90();
}

uint64_t sub_1AD59C298()
{
  return sub_1AD59C134();
}

uint64_t sub_1AD59C2AC(mem_entry_name_port_t *a1, vm_size_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1AD59CB44(a1, a2);
  return v4;
}

uint64_t sub_1AD59C300@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  v4 = 3;
  if (v2 < 3)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD59C358()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 1684104562;
  if (*v0 != 1)
    v1 = 0x6574697277;
  if (*v0)
    return v1;
  else
    return 0x696C616974696E69;
}

uint64_t sub_1AD59C3B4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD435538(*a1, *a2);
}

uint64_t sub_1AD59C3C0()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD59C460()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD59C4DC()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD59C578@<X0>(char *a1@<X8>)
{
  return sub_1AD59C300(a1);
}

void sub_1AD59C584(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  int v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  BOOL v6;
  uint64_t v7;

  v2 = *v1;
  v3 = 0xEE006E6F6974617ALL;
  v4 = 0xE400000000000000;
  v5 = 1684104562;
  if (v2 != 1)
  {
    v5 = 0x6574697277;
    v4 = 0xE500000000000000;
  }
  v6 = v2 == 0;
  if (*v1)
    v7 = v5;
  else
    v7 = 0x696C616974696E69;
  if (!v6)
    v3 = v4;
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1AD59C5E4@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  v4 = 13;
  if (v2 < 0xD)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD59C63C()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AD59C674 + 4 * byte_1AD695A70[*v0]))(0x6863614D6C6C756ELL, 0xEC00000074726F50);
}

uint64_t sub_1AD59C674()
{
  return 0x654D64656C696166;
}

unint64_t sub_1AD59C698()
{
  return 0xD000000000000015;
}

uint64_t sub_1AD59C7C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD43552C(*a1, *a2);
}

uint64_t sub_1AD59C7D4()
{
  sub_1AD63C4AC();
  sub_1AD59C63C();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD59C838()
{
  sub_1AD59C63C();
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD59C888()
{
  sub_1AD63C4AC();
  sub_1AD59C63C();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD59C8E8@<X0>(char *a1@<X8>)
{
  return sub_1AD59C5E4(a1);
}

uint64_t sub_1AD59C8F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1AD59C63C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1AD59C918(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void sub_1AD59C924(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

uint64_t sub_1AD59C930()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD59C938()
{
  sub_1AD63BD38();
  sub_1AD63B810();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  return 0;
}

uint64_t sub_1AD59CAF4@<X0>(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *a1 = *(_DWORD *)(v1 + 16);
  return result;
}

uint64_t sub_1AD59CB34()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t sub_1AD59CB3C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t sub_1AD59CB44(mem_entry_name_port_t *a1, vm_size_t size)
{
  uint64_t v2;
  mem_entry_name_port_t v3;
  char v5;
  kern_return_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t result;
  vm_address_t address[2];

  address[1] = *MEMORY[0x1E0C80C00];
  v3 = *a1;
  *(_DWORD *)(v2 + 16) = *a1;
  *(_QWORD *)(v2 + 24) = size;
  if (!v3)
  {
    sub_1AD59CD08();
    swift_allocError();
    *(_WORD *)v8 = 0;
    goto LABEL_6;
  }
  address[0] = 0;
  if ((size & 0x8000000000000000) == 0)
  {
    v5 = 1;
    v6 = vm_map(*MEMORY[0x1E0C83DA0], address, size, 0, 1, v3, 0, 0, 3, 3, 1u);
    v7 = (_QWORD *)address[0];
    *(_QWORD *)(v2 + 64) = address[0];
    *(_BYTE *)(v2 + 72) = 0;
    if (!v6)
    {
      if (v7)
      {
        if (*v7 == 0xB1A57D002)
        {
          *(_QWORD *)(v2 + 40) = v7;
          *(_QWORD *)(v2 + 48) = (char *)v7 + size;
          *(_BYTE *)(v2 + 56) = 0;
          *(_BYTE *)(v2 + 32) = 1;
          return v2;
        }
        v5 = 3;
      }
      else
      {
        v5 = 2;
      }
    }
    sub_1AD59CD08();
    swift_allocError();
    *(_BYTE *)v8 = 0;
    *(_BYTE *)(v8 + 1) = v5;
LABEL_6:
    *(_QWORD *)(v8 + 8) = 0;
    swift_willThrow();
    type metadata accessor for MachImage();
    swift_deallocPartialClassInstance();
    return v2;
  }
  result = sub_1AD63BE1C();
  __break(1u);
  return result;
}

unint64_t sub_1AD59CD08()
{
  unint64_t result;

  result = qword_1ED2E19E8;
  if (!qword_1ED2E19E8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD695BD4, &type metadata for MachImageError);
    atomic_store(result, (unint64_t *)&qword_1ED2E19E8);
  }
  return result;
}

uint64_t type metadata accessor for MachImage()
{
  return objc_opt_self();
}

uint64_t sub_1AD59CD6C(const void *a1, uint64_t a2)
{
  uint64_t v2;
  size_t v4;
  char *v5;

  *(_DWORD *)(v2 + 16) = 0;
  *(_QWORD *)(v2 + 64) = 0;
  *(_BYTE *)(v2 + 72) = 1;
  if (a1)
  {
    v4 = a2 - (_QWORD)a1;
    *(_QWORD *)(v2 + 24) = a2 - (_QWORD)a1;
    v5 = (char *)swift_slowAlloc();
    memmove(v5, a1, v4);
    *(_QWORD *)(v2 + 40) = v5;
    *(_QWORD *)(v2 + 48) = &v5[v4];
    *(_BYTE *)(v2 + 56) = 0;
    *(_BYTE *)(v2 + 32) = 0;
  }
  else
  {
    *(_QWORD *)(v2 + 24) = 0;
    type metadata accessor for MachImage();
    swift_deallocPartialClassInstance();
    return 0;
  }
  return v2;
}

uint64_t sub_1AD59CE00()
{
  uint64_t v0;
  ipc_space_t *v1;
  mach_port_name_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = (ipc_space_t *)MEMORY[0x1E0C83DA0];
  if ((*(_BYTE *)(v0 + 72) & 1) == 0)
  {
    if ((*(_QWORD *)(v0 + 24) & 0x8000000000000000) != 0)
    {
      result = sub_1AD63BE1C();
      __break(1u);
      return result;
    }
    MEMORY[0x1AF44BFC4](*MEMORY[0x1E0C83DA0], *(_QWORD *)(v0 + 64));
  }
  swift_beginAccess();
  v2 = *(_DWORD *)(v0 + 16);
  if (v2)
    mach_port_deallocate(*v1, v2);
  if ((*(_BYTE *)(v0 + 32) & 1) == 0 && (*(_BYTE *)(v0 + 56) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + 40);
    if (v3)
      MEMORY[0x1AF44BED4](v3, -1, -1);
  }
  return v0;
}

uint64_t sub_1AD59CED8()
{
  uint64_t v0;
  ipc_space_t *v1;
  mach_port_name_t v2;
  uint64_t v3;
  uint64_t result;

  v1 = (ipc_space_t *)MEMORY[0x1E0C83DA0];
  if ((*(_BYTE *)(v0 + 72) & 1) == 0)
  {
    if ((*(_QWORD *)(v0 + 24) & 0x8000000000000000) != 0)
    {
      result = sub_1AD63BE1C();
      __break(1u);
      return result;
    }
    MEMORY[0x1AF44BFC4](*MEMORY[0x1E0C83DA0], *(_QWORD *)(v0 + 64));
  }
  swift_beginAccess();
  v2 = *(_DWORD *)(v0 + 16);
  if (v2)
    mach_port_deallocate(*v1, v2);
  if ((*(_BYTE *)(v0 + 32) & 1) == 0 && (*(_BYTE *)(v0 + 56) & 1) == 0)
  {
    v3 = *(_QWORD *)(v0 + 40);
    if (v3)
      MEMORY[0x1AF44BED4](v3, -1, -1);
  }
  return swift_deallocClassInstance();
}

uint64_t sub_1AD59CFBC()
{
  uint64_t v0;
  uint64_t v2;
  const void *v3;
  uint64_t v4;

  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
    return 0;
  v4 = v0 + 40;
  v3 = *(const void **)(v0 + 40);
  v2 = *(_QWORD *)(v4 + 8);
  type metadata accessor for MachImage();
  swift_allocObject();
  return sub_1AD59CD6C(v3, v2);
}

void sub_1AD59D00C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int16 v4;
  _QWORD *v5;
  uint64_t v6;
  CGImageSourceRef v7;
  CGImageSourceRef v8;
  double v9;
  double v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t inited;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __int16 v18;
  CGDataConsumerRef v19;
  CGDataConsumer *v20;
  __CFString *v21;
  CGImageDestinationRef v22;
  CGImageDestination *v23;
  uint64_t v24;
  void *v25;
  void *v26;
  void *v27;
  id v28;
  id v29;
  id v30;
  const __CFDictionary *v31;
  uint64_t v32;
  uint64_t v33;
  CGDataConsumerCallbacks cbks;
  double v35;
  double v36;
  uint64_t v37;

  v37 = *MEMORY[0x1E0C80C00];
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    sub_1AD59CD08();
    swift_allocError();
    v4 = 1537;
LABEL_3:
    *(_WORD *)v3 = v4;
    *(_QWORD *)(v3 + 8) = 0;
    swift_willThrow();
    return;
  }
  v5 = *(_QWORD **)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  v7 = sub_1AD422CD4(*(void **)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  if (!v2)
  {
    v8 = v7;
    if (!v7)
    {
      sub_1AD59CD08();
      swift_allocError();
      v4 = 1794;
      goto LABEL_3;
    }
    sub_1AD33B66C((uint64_t)&cbks);
    if (!v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1AD59CD08();
      swift_allocError();
      v18 = 2050;
      goto LABEL_17;
    }
    v10 = v35;
    v9 = v36;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v10 <= -9.22337204e18)
    {
      __break(1u);
    }
    else if (v10 < 9.22337204e18)
    {
      if ((*(_QWORD *)&v10 & 0x7FF0000000000000) != 0x7FF0000000000000
        && (*(_QWORD *)&v9 & 0x7FF0000000000000) != 0x7FF0000000000000)
      {
        if (v9 > -9.22337204e18)
        {
          if (v9 < 9.22337204e18)
          {
            v11 = sub_1AD59E33C((uint64_t)v10, (uint64_t)v9);
            v12 = v6 - (_QWORD)v5;
            if (v12 < v11)
            {
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA600);
              inited = swift_initStackObject();
              strcpy((char *)(inited + 32), "buffer.count");
              *(_BYTE *)(inited + 45) = 0;
              *(_WORD *)(inited + 46) = -5120;
              v14 = MEMORY[0x1E0DEB418];
              *(_QWORD *)(inited + 48) = v12;
              *(_QWORD *)(inited + 72) = v14;
              *(_QWORD *)(inited + 80) = 0xD000000000000010;
              *(_OWORD *)(inited + 16) = xmmword_1AD648170;
              *(_QWORD *)(inited + 120) = v14;
              *(_QWORD *)(inited + 88) = 0x80000001AD6B3520;
              *(_QWORD *)(inited + 96) = v11;
              v15 = sub_1AD439A5C(inited);
              sub_1AD59CD08();
              swift_allocError();
              *(_WORD *)v16 = 1282;
              *(_QWORD *)(v16 + 8) = v15;
LABEL_18:
              swift_willThrow();
LABEL_19:

              return;
            }
            if (*v5 == 0xB1A57D002)
            {
              cbks.putBytes = (CGDataConsumerPutBytesCallback)sub_1AD59DD5C;
              cbks.releaseConsumer = 0;
              v19 = CGDataConsumerCreate(v5, &cbks);
              if (!v19)
              {
                __break(1u);
                return;
              }
              v20 = v19;
              v21 = (__CFString *)sub_1AD63B744();
              v22 = CGImageDestinationCreateWithDataConsumer(v20, v21, 1uLL, 0);
              if (v22)
              {
                v23 = v22;
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD70);
                v24 = swift_initStackObject();
                *(_OWORD *)(v24 + 16) = xmmword_1AD64CE50;
                v25 = (void *)*MEMORY[0x1E0CBD240];
                *(_QWORD *)(v24 + 32) = *MEMORY[0x1E0CBD240];
                *(_BYTE *)(v24 + 40) = 0;
                v26 = (void *)*MEMORY[0x1E0CBD2B8];
                *(_QWORD *)(v24 + 48) = *MEMORY[0x1E0CBD2B8];
                *(_BYTE *)(v24 + 56) = 0;
                v27 = (void *)*MEMORY[0x1E0CBD1C0];
                *(_QWORD *)(v24 + 64) = *MEMORY[0x1E0CBD1C0];
                *(_BYTE *)(v24 + 72) = 1;
                v28 = v25;
                v29 = v26;
                v30 = v27;
                sub_1AD4396D8(v24);
                type metadata accessor for CFString(0);
                sub_1AD32EFC0();
                v31 = (const __CFDictionary *)sub_1AD63B678();
                swift_bridgeObjectRelease();
                CGImageDestinationAddImageFromSource(v23, v8, 0, v31);
                if (!CGImageDestinationFinalize(v23))
                {
                  sub_1AD59CD08();
                  swift_allocError();
                  *(_WORD *)v32 = 2562;
                  *(_QWORD *)(v32 + 8) = 0;
                  swift_willThrow();
                }

              }
              else
              {
                sub_1AD59CD08();
                swift_allocError();
                *(_WORD *)v33 = 2306;
                *(_QWORD *)(v33 + 8) = 0;
                swift_willThrow();

              }
              goto LABEL_19;
            }
            sub_1AD59CD08();
            swift_allocError();
            v18 = 770;
LABEL_17:
            *(_WORD *)v17 = v18;
            *(_QWORD *)(v17 + 8) = 0;
            goto LABEL_18;
          }
LABEL_33:
          __break(1u);
        }
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    __break(1u);
    goto LABEL_31;
  }
}

uint64_t sub_1AD59D4C0(uint64_t a1, uint64_t a2)
{
  return sub_1AD59E33C(a1, a2);
}

uint64_t sub_1AD59D4D4(uint64_t a1, const void *a2, int64_t a3)
{
  int v5;
  unint64_t v6;
  unint64_t v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  os_log_type_t v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  os_log_type_t v27;
  NSObject *v28;
  os_log_type_t v29;
  uint64_t v30;
  os_log_type_t v31;
  NSObject *v32;
  uint64_t v33;
  const char *v34;
  os_log_type_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  os_log_type_t v42;
  NSObject *v43;
  os_log_type_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  int v54;
  uint64_t v55;

  if (!a1)
  {
    v31 = sub_1AD63BB7C();
    if (qword_1ED2E7328 != -1)
      swift_once();
    v32 = qword_1ED2E7528;
    if (!os_log_type_enabled((os_log_t)qword_1ED2E7528, v31))
      return 0;
    v33 = swift_slowAlloc();
    *(_DWORD *)v33 = 134217984;
    v55 = a3;
    sub_1AD63BC60();
    v34 = "MachImage write had nil destPtr. bytesCount %ld";
LABEL_25:
    _os_log_impl(&dword_1ACFC8000, v32, v31, v34, (uint8_t *)v33, 0xCu);
LABEL_31:
    MEMORY[0x1AF44BED4](v33, -1, -1);
    return 0;
  }
  if (*(_QWORD *)a1 != 0xB1A57D002)
  {
    v31 = sub_1AD63BB7C();
    if (qword_1ED2E7328 != -1)
      swift_once();
    v32 = qword_1ED2E7528;
    if (!os_log_type_enabled((os_log_t)qword_1ED2E7528, v31))
      return 0;
    v33 = swift_slowAlloc();
    *(_DWORD *)v33 = 134217984;
    v55 = a3;
    sub_1AD63BC60();
    v34 = "During MachImage write, the MachImageHeader was not valid at the destPtr. bytesCount %ld";
    goto LABEL_25;
  }
  v5 = *(_DWORD *)(a1 + 8);
  v54 = *(_DWORD *)(a1 + 12);
  v7 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 24);
  v8 = sub_1AD63BB64();
  if (qword_1ED2E7328 != -1)
    swift_once();
  v9 = qword_1ED2E7528;
  v10 = v8;
  if (os_log_type_enabled((os_log_t)qword_1ED2E7528, v8))
  {
    v11 = swift_slowAlloc();
    v51 = swift_slowAlloc();
    v55 = v51;
    *(_DWORD *)v11 = 136315394;
    v12 = sub_1AD59C938();
    sub_1AD43D1D0(v12, v13, &v55);
    sub_1AD63BC60();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2048;
    sub_1AD63BC60();
    _os_log_impl(&dword_1ACFC8000, v9, v10, "MachImage destPtr has header: %s. bytesCount %ld", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1AF44BED4](v51, -1, -1);
    MEMORY[0x1AF44BED4](v11, -1, -1);
  }
  if (a3 < 1 || (v14 = v6 - a3, v6 < a3))
  {
    v35 = sub_1AD63BB7C();
    v36 = qword_1ED2E7528;
    v37 = v35;
    if (os_log_type_enabled((os_log_t)qword_1ED2E7528, v35))
    {
      v33 = swift_slowAlloc();
      v38 = swift_slowAlloc();
      v55 = v38;
      *(_DWORD *)v33 = 134218242;
      sub_1AD63BC60();
      *(_WORD *)(v33 + 12) = 2080;
      v39 = sub_1AD59C938();
      sub_1AD43D1D0(v39, v40, &v55);
      sub_1AD63BC60();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1ACFC8000, v36, v37, "MachImage attempted to write more bytes than what was expected. bytesCount %ld, header: %s", (uint8_t *)v33, 0x16u);
      swift_arrayDestroy();
      v41 = v38;
LABEL_30:
      MEMORY[0x1AF44BED4](v41, -1, -1);
      goto LABEL_31;
    }
    return 0;
  }
  v52 = v6;
  v15 = sub_1AD63BB64();
  v16 = qword_1ED2E7528;
  v17 = v15;
  result = os_log_type_enabled((os_log_t)qword_1ED2E7528, v15);
  if ((_DWORD)result)
  {
    v19 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    v55 = v50;
    *(_DWORD *)v19 = 136315650;
    v20 = sub_1AD59C938();
    sub_1AD43D1D0(v20, v21, &v55);
    sub_1AD63BC60();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2048;
    sub_1AD63BC60();
    *(_WORD *)(v19 + 22) = 2080;
    v22 = sub_1AD59C938();
    sub_1AD43D1D0(v22, v23, &v55);
    sub_1AD63BC60();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ACFC8000, v16, v17, "MachImage writing new header to destPtr: %s. bytesCount %ld, old header: %s", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    MEMORY[0x1AF44BED4](v50, -1, -1);
    result = MEMORY[0x1AF44BED4](v19, -1, -1);
  }
  *(_QWORD *)a1 = 0xB1A57D002;
  *(_DWORD *)(a1 + 8) = v5;
  *(_DWORD *)(a1 + 12) = v54;
  *(_QWORD *)(a1 + 16) = v7;
  *(_QWORD *)(a1 + 24) = v14;
  v24 = v7 - 32;
  if (v7 < 0x20)
  {
    __break(1u);
  }
  else
  {
    v25 = v24 - v52;
    if (v24 >= v52)
    {
      if ((v25 & 0x8000000000000000) == 0)
      {
        v26 = (void *)(a1 + 32 + v25);
        v27 = sub_1AD63BB64();
        v28 = qword_1ED2E7528;
        v29 = v27;
        if (os_log_type_enabled((os_log_t)qword_1ED2E7528, v27))
        {
          v30 = swift_slowAlloc();
          *(_DWORD *)v30 = 134218240;
          v55 = a3;
          sub_1AD63BC60();
          *(_WORD *)(v30 + 12) = 2048;
          v55 = v25;
          sub_1AD63BC60();
          _os_log_impl(&dword_1ACFC8000, v28, v29, "MachImage writing %ld bytes to imageOffsetPointer. byteOffset: %llu", (uint8_t *)v30, 0x16u);
          MEMORY[0x1AF44BED4](v30, -1, -1);
        }
        memmove(v26, a2, a3);
        return a3;
      }
      v42 = sub_1AD63BB7C();
      v43 = qword_1ED2E7528;
      v44 = v42;
      if (os_log_type_enabled((os_log_t)qword_1ED2E7528, v42))
      {
        v33 = swift_slowAlloc();
        v45 = swift_slowAlloc();
        v55 = v45;
        *(_DWORD *)v33 = 134218754;
        sub_1AD63BC60();
        *(_WORD *)(v33 + 12) = 2048;
        sub_1AD63BC60();
        *(_WORD *)(v33 + 22) = 2080;
        v46 = sub_1AD59C938();
        sub_1AD43D1D0(v46, v47, &v55);
        sub_1AD63BC60();
        swift_bridgeObjectRelease();
        *(_WORD *)(v33 + 32) = 2080;
        v48 = sub_1AD59C938();
        sub_1AD43D1D0(v48, v49, &v55);
        sub_1AD63BC60();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1ACFC8000, v43, v44, "byteOffset (%llu) was greater than Int.max, bailing on write. bytesCount %ld, header: %s, newHeader %s", (uint8_t *)v33, 0x2Au);
        swift_arrayDestroy();
        v41 = v45;
        goto LABEL_30;
      }
      return 0;
    }
  }
  __break(1u);
  return result;
}

CGImageRef sub_1AD59DD60()
{
  return sub_1AD59DE78();
}

CGImageRef sub_1AD59DE78()
{
  uint64_t v0;
  uint64_t v1;
  CGImageRef ThumbnailAtIndex;
  uint64_t v3;
  __int16 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  CGDataProviderRef v8;
  CGDataProvider *v9;
  uint64_t v10;
  void **v11;
  void *v12;
  uint64_t v13;
  void *v14;
  id v15;
  id v16;
  uint64_t v17;
  CGImage *v18;
  void **v19;
  void *v20;
  id v21;
  const __CFDictionary *v22;
  CGImageSourceRef v23;
  uint64_t v24;
  void *v25;
  void **v26;
  void *v27;
  void **v28;
  void *v29;
  void **v30;
  uint64_t v31;
  CGImageSource *v32;
  void *v33;
  void **v34;
  void *v35;
  id v36;
  id v37;
  id v38;
  id v39;
  id v40;
  const __CFDictionary *v41;
  uint64_t inited;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  CGDataProvider *v49;

  if ((*(_BYTE *)(v0 + 56) & 1) != 0)
  {
    sub_1AD59CD08();
    swift_allocError();
    v4 = 1537;
LABEL_16:
    *(_WORD *)v3 = v4;
    *(_QWORD *)(v3 + 8) = 0;
LABEL_17:
    swift_willThrow();
    return ThumbnailAtIndex;
  }
  ThumbnailAtIndex = *(CGImageRef *)(v0 + 40);
  if (!ThumbnailAtIndex)
  {
    sub_1AD59CD08();
    swift_allocError();
    v4 = 2049;
    goto LABEL_16;
  }
  v5 = *(_QWORD *)(v0 + 48) - (_QWORD)ThumbnailAtIndex;
  if (v5 < 33)
  {
    sub_1AD59CD08();
    swift_allocError();
    v4 = 1025;
    goto LABEL_16;
  }
  if (*(_QWORD *)ThumbnailAtIndex != 0xB1A57D002)
  {
    sub_1AD59CD08();
    swift_allocError();
    v4 = 769;
    goto LABEL_16;
  }
  v6 = sub_1AD59E33C(*((unsigned int *)ThumbnailAtIndex + 2), *((unsigned int *)ThumbnailAtIndex + 3));
  if (!v1)
  {
    v7 = v6;
    if (v5 != v6)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA600);
      inited = swift_initStackObject();
      strcpy((char *)(inited + 32), "buffer.count");
      *(_BYTE *)(inited + 45) = 0;
      *(_WORD *)(inited + 46) = -5120;
      v44 = MEMORY[0x1E0DEB418];
      *(_QWORD *)(inited + 48) = v5;
      *(_QWORD *)(inited + 72) = v44;
      *(_QWORD *)(inited + 80) = 0xD000000000000010;
      *(_OWORD *)(inited + 16) = xmmword_1AD648170;
      *(_QWORD *)(inited + 120) = v44;
      *(_QWORD *)(inited + 88) = 0x80000001AD6B3520;
      *(_QWORD *)(inited + 96) = v7;
      v45 = sub_1AD439A5C(inited);
      sub_1AD59CD08();
      swift_allocError();
      *(_WORD *)v46 = 1281;
      *(_QWORD *)(v46 + 8) = v45;
      goto LABEL_17;
    }
    v8 = CGDataProviderCreateWithData(0, (char *)ThumbnailAtIndex + 32, v5 - 32, (CGDataProviderReleaseDataCallback)nullsub_50);
    if (!v8)
    {
      sub_1AD59CD08();
      swift_allocError();
      v4 = 2305;
      goto LABEL_16;
    }
    v9 = v8;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2E10);
    v10 = swift_initStackObject();
    v11 = (void **)MEMORY[0x1E0CBD288];
    *(_OWORD *)(v10 + 16) = xmmword_1AD64CE50;
    v12 = *v11;
    *(_QWORD *)(v10 + 32) = v12;
    v13 = MEMORY[0x1E0DEAFA0];
    *(_BYTE *)(v10 + 40) = 1;
    v14 = (void *)*MEMORY[0x1E0CBD2A8];
    *(_QWORD *)(v10 + 64) = v13;
    *(_QWORD *)(v10 + 72) = v14;
    v15 = v12;
    v16 = v14;
    v17 = sub_1AD63B744();
    type metadata accessor for CFString(0);
    ThumbnailAtIndex = v18;
    v19 = (void **)MEMORY[0x1E0CBD1C8];
    *(_QWORD *)(v10 + 80) = v17;
    v20 = *v19;
    *(_QWORD *)(v10 + 104) = v18;
    *(_QWORD *)(v10 + 112) = v20;
    *(_QWORD *)(v10 + 144) = v13;
    *(_BYTE *)(v10 + 120) = 1;
    v21 = v20;
    sub_1AD438F14(v10);
    sub_1AD32EFC0();
    v22 = (const __CFDictionary *)sub_1AD63B678();
    swift_bridgeObjectRelease();
    v23 = CGImageSourceCreateWithDataProvider(v9, v22);

    if (v23)
    {
      v49 = v9;
      v24 = swift_initStackObject();
      *(_OWORD *)(v24 + 16) = xmmword_1AD67B8B0;
      v25 = (void *)*MEMORY[0x1E0CBD178];
      *(_QWORD *)(v24 + 32) = *MEMORY[0x1E0CBD178];
      v26 = (void **)MEMORY[0x1E0CBD190];
      *(_BYTE *)(v24 + 40) = 1;
      v27 = *v26;
      *(_QWORD *)(v24 + 64) = v13;
      *(_QWORD *)(v24 + 72) = v27;
      v28 = (void **)MEMORY[0x1E0CBD240];
      *(_BYTE *)(v24 + 80) = 1;
      v29 = *v28;
      *(_QWORD *)(v24 + 104) = v13;
      *(_QWORD *)(v24 + 112) = v29;
      v30 = (void **)MEMORY[0x1E0CBD2B8];
      *(_BYTE *)(v24 + 120) = 0;
      v31 = v13;
      v32 = v23;
      v33 = *v30;
      *(_QWORD *)(v24 + 144) = v31;
      *(_QWORD *)(v24 + 152) = v33;
      v34 = (void **)MEMORY[0x1E0CBD1C0];
      *(_BYTE *)(v24 + 160) = 0;
      v35 = *v34;
      *(_QWORD *)(v24 + 184) = v31;
      *(_QWORD *)(v24 + 192) = v35;
      *(_QWORD *)(v24 + 224) = v31;
      *(_BYTE *)(v24 + 200) = 1;
      v36 = v25;
      v37 = v27;
      v38 = v29;
      v39 = v33;
      v40 = v35;
      sub_1AD438F14(v24);
      v41 = (const __CFDictionary *)sub_1AD63B678();
      swift_bridgeObjectRelease();
      ThumbnailAtIndex = CGImageSourceCreateThumbnailAtIndex(v32, 0, v41);

      if (!ThumbnailAtIndex)
      {
        sub_1AD59CD08();
        swift_allocError();
        *(_WORD *)v48 = 3073;
        *(_QWORD *)(v48 + 8) = 0;
        swift_willThrow();
      }

    }
    else
    {
      sub_1AD59CD08();
      swift_allocError();
      *(_WORD *)v47 = 2817;
      *(_QWORD *)(v47 + 8) = 0;
      swift_willThrow();

    }
  }
  return ThumbnailAtIndex;
}

uint64_t sub_1AD59E33C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  char v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t result;
  _BYTE *v8;

  v2 = a2 * a1;
  if ((unsigned __int128)(a2 * (__int128)a1) >> 64 != (a2 * a1) >> 63
    || (unint64_t)(v2 - 0x2000000000000000) >> 62 != 3)
  {
    v3 = 2;
LABEL_8:
    sub_1AD0D264C();
    swift_allocError();
    *v8 = 0;
    v8[1] = v3;
    return swift_willThrow();
  }
  v4 = 4 * v2;
  v5 = __OFADD__(v4, 32);
  v6 = v4 + 32;
  if (v5 || (result = v6 + 32000, __OFADD__(v6, 32000)))
  {
    v3 = 0;
    goto LABEL_8;
  }
  return result;
}

unint64_t sub_1AD59E3DC()
{
  unint64_t result;

  result = qword_1EECDE7D0;
  if (!qword_1EECDE7D0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD695A94, &type metadata for MachImageError.ErrorKind);
    atomic_store(result, (unint64_t *)&qword_1EECDE7D0);
  }
  return result;
}

unint64_t sub_1AD59E424()
{
  unint64_t result;

  result = qword_1EECDE7D8;
  if (!qword_1EECDE7D8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD695B34, &type metadata for MachImageError.Description);
    atomic_store(result, (unint64_t *)&qword_1EECDE7D8);
  }
  return result;
}

uint64_t sub_1AD59E468@<X0>(uint64_t *a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_DWORD *)(v3 + 16);
  return result;
}

uint64_t sub_1AD59E4AC(int *a1, uint64_t *a2)
{
  int v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_DWORD *)(v3 + 16) = v2;
  return result;
}

uint64_t sub_1AD59E4F0(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for MachImageError(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MachImageError()
{
  return &type metadata for MachImageError;
}

uint64_t storeEnumTagSinglePayload for MachImageError.ErrorKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD59E5B8 + 4 * byte_1AD695A82[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD59E5EC + 4 * byte_1AD695A7D[v4]))();
}

uint64_t sub_1AD59E5EC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD59E5F4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD59E5FCLL);
  return result;
}

uint64_t sub_1AD59E608(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD59E610);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD59E614(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD59E61C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MachImageError.ErrorKind()
{
  return &type metadata for MachImageError.ErrorKind;
}

uint64_t storeEnumTagSinglePayload for MachImageError.Description(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1AD59E684 + 4 * byte_1AD695A8C[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1AD59E6B8 + 4 * byte_1AD695A87[v4]))();
}

uint64_t sub_1AD59E6B8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD59E6C0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD59E6C8);
  return result;
}

uint64_t sub_1AD59E6D4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD59E6DCLL);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1AD59E6E0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD59E6E8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MachImageError.Description()
{
  return &type metadata for MachImageError.Description;
}

uint64_t sub_1AD59E704()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD59E710()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t sub_1AD59E71C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1AD59E734()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t sub_1AD59E740()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1AD59E75C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

double sub_1AD59E768()
{
  uint64_t v0;

  return *(double *)v0;
}

void sub_1AD59E770(double a1)
{
  double *v1;

  *v1 = a1;
}

uint64_t (*sub_1AD59E778())()
{
  return nullsub_1;
}

double sub_1AD59E788()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void sub_1AD59E790(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 8) = a1;
}

uint64_t (*sub_1AD59E798())()
{
  return nullsub_1;
}

double sub_1AD59E7A8()
{
  uint64_t v0;

  return *(double *)(v0 + 16);
}

void sub_1AD59E7B0(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 16) = a1;
}

uint64_t (*sub_1AD59E7B8())()
{
  return nullsub_1;
}

double sub_1AD59E7C8()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void sub_1AD59E7D0(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*sub_1AD59E7D8())()
{
  return nullsub_1;
}

unint64_t sub_1AD59E7E8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD28BBDC();
  result = sub_1AD28BCDC();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

ValueMetadata *type metadata accessor for Color()
{
  return &type metadata for Color;
}

void sub_1AD59E824()
{
  __asm { BR              X11 }
}

uint64_t sub_1AD59E868()
{
  uint64_t v0;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _OWORD v6[2];
  __int128 v7;
  uint64_t v8;

  v8 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v7 = 1104;
  sub_1AD002F7C(&v7, v6);
  v0 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v6, 1835365481, 0xE400000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  sub_1AD452F6C();
  v8 = MEMORY[0x1E0CB0338];
  *(_QWORD *)&v7 = v2;
  *((_QWORD *)&v7 + 1) = v3;
  sub_1AD002F7C(&v7, v6);
  v4 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v6, 0x64616F6C796170, 0xE700000000000000, v4);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD59EB50()
{
  uint64_t v0;

  sub_1AD59E824();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD59EBA0()
{
  uint64_t v0;

  sub_1AD59E824();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD59EBF0@<X0>(uint64_t result@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t ATXEncoder.__allocating_init(configuration:maxPixelDimension:)(char *a1, uint64_t a2, char a3)
{
  char v5;
  uint64_t v6;

  v5 = a3 & 1;
  v6 = swift_allocObject();
  ATXEncoder.init(configuration:maxPixelDimension:)(a1, a2, v5);
  return v6;
}

uint64_t ATXEncoder.__allocating_init(configuration:)(char *a1)
{
  uint64_t result;
  char v3;
  char v4;

  result = swift_allocObject();
  v3 = *a1;
  v4 = a1[1];
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = 1;
  *(_BYTE *)(result + 16) = v3;
  *(_BYTE *)(result + 17) = v4;
  return result;
}

uint64_t sub_1AD59EC98()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD59ECA0(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD59ECA8())()
{
  return nullsub_1;
}

uint64_t sub_1AD59ECB8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_1AD59ECC0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*sub_1AD59ECC8())()
{
  return nullsub_1;
}

unint64_t sub_1AD59ECD8()
{
  char *v0;
  char v1;
  char v2;
  uint64_t inited;
  void **v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void **v12;
  void *v13;
  void **v14;
  void *v15;
  id v16;
  id v17;
  id v18;
  id v19;
  id v20;
  id v21;

  v1 = *v0;
  v2 = v0[1];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2E10);
  inited = swift_initStackObject();
  v4 = (void **)MEMORY[0x1E0CBCA18];
  *(_OWORD *)(inited + 16) = xmmword_1AD67B8B0;
  v5 = *v4;
  *(_QWORD *)(inited + 32) = *v4;
  v6 = (void *)*MEMORY[0x1E0CBC840];
  type metadata accessor for CFString(0);
  *(_QWORD *)(inited + 40) = v6;
  v7 = (void *)*MEMORY[0x1E0CBC830];
  v8 = MEMORY[0x1E0DEE0F8];
  *(_QWORD *)(inited + 64) = v9;
  *(_QWORD *)(inited + 72) = v7;
  *(_DWORD *)(inited + 80) = 68;
  v10 = (void *)*MEMORY[0x1E0CBC848];
  v11 = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(inited + 120) = v1;
  v12 = (void **)MEMORY[0x1E0CBC858];
  *(_QWORD *)(inited + 104) = v8;
  *(_QWORD *)(inited + 112) = v10;
  v13 = *v12;
  *(_BYTE *)(inited + 160) = v2;
  v14 = (void **)MEMORY[0x1E0CBD2B8];
  *(_QWORD *)(inited + 144) = v11;
  *(_QWORD *)(inited + 152) = v13;
  v15 = *v14;
  *(_QWORD *)(inited + 184) = v11;
  *(_QWORD *)(inited + 192) = v15;
  *(_QWORD *)(inited + 224) = v11;
  *(_BYTE *)(inited + 200) = 0;
  v16 = v5;
  v17 = v6;
  v18 = v7;
  v19 = v10;
  v20 = v13;
  v21 = v15;
  return sub_1AD438F14(inited);
}

uint64_t ATXEncoder.maxPixelDimension.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 24);
}

uint64_t ATXEncoder.maxPixelDimension.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v2 + 24) = a1;
  *(_BYTE *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*ATXEncoder.maxPixelDimension.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t ATXEncoder.init(configuration:)(char *a1)
{
  uint64_t v1;
  char v2;
  char v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(v1 + 24) = 0;
  *(_BYTE *)(v1 + 32) = 1;
  *(_BYTE *)(v1 + 16) = v2;
  *(_BYTE *)(v1 + 17) = v3;
  return v1;
}

uint64_t ATXEncoder.init(configuration:maxPixelDimension:)(char *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  char v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v12;

  v6 = *a1;
  v12 = a1[1];
  *(_QWORD *)(v3 + 24) = 0;
  *(_BYTE *)(v3 + 32) = 1;
  sub_1AD63BB64();
  if (qword_1ED2DAD30 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1AD648160;
  if ((a3 & 1) != 0)
  {
    v8 = 0xE300000000000000;
    v9 = 7104878;
  }
  else
  {
    v9 = sub_1AD63B7A4();
    v8 = v10;
  }
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v7 + 64) = sub_1AD0469B8();
  *(_QWORD *)(v7 + 32) = v9;
  *(_QWORD *)(v7 + 40) = v8;
  sub_1AD63B48C();
  swift_bridgeObjectRelease();
  *(_BYTE *)(v3 + 16) = v6;
  *(_BYTE *)(v3 + 17) = v12;
  swift_beginAccess();
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 32) = a3 & 1;
  return v3;
}

void sub_1AD59F03C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  const __CFURL *v5;
  __CFString *v6;
  CGImageDestination *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  _BYTE *v12;
  _BYTE *v13;

  v3 = v1;
  v5 = (const __CFURL *)sub_1AD63AE98();
  v6 = (__CFString *)sub_1AD63B744();
  v7 = CGImageDestinationCreateWithURL(v5, v6, 1uLL, 0);

  if (v7)
  {
    v8 = a1[3];
    v9 = a1[4];
    __swift_project_boxed_opaque_existential_1(a1, v8);
    swift_beginAccess();
    v10 = sub_1AD59F1BC(a1, *(_QWORD *)(v3 + 24), *(_BYTE *)(v3 + 32));
    if (!v2)
    {
      v11 = (void *)v10;
      (*(void (**)(CGImageDestination *, uint64_t, uint64_t, uint64_t))(v9 + 8))(v7, v10, v8, v9);

      if (!CGImageDestinationFinalize(v7))
      {
        sub_1AD59FE3C();
        swift_allocError();
        *v12 = 2;
        swift_willThrow();
      }
    }

  }
  else
  {
    sub_1AD59FE3C();
    swift_allocError();
    *v13 = 1;
    swift_willThrow();
  }
}

uint64_t sub_1AD59F1BC(_QWORD *a1, uint64_t a2, char a3)
{
  uint64_t v3;
  uint64_t v4;
  char v8;
  uint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  uint64_t v14;
  double v15;
  double v16;
  double v17;
  double v18;
  double v19;
  double v20;
  BOOL v21;
  uint64_t v22;
  void *v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  void *v26;
  uint64_t v27;
  uint64_t v28;
  id v29;
  char v30;
  void *v31;
  uint64_t v32;
  id v33;
  char v34;
  void *v35;
  id v36;
  char v37;
  _OWORD v39[2];
  __int128 v40;
  uint64_t v41;

  v8 = *(_BYTE *)(v3 + 17);
  LOBYTE(v40) = *(_BYTE *)(v3 + 16);
  BYTE1(v40) = v8;
  sub_1AD59ECD8();
  if ((a3 & 1) != 0)
  {
LABEL_12:
    type metadata accessor for CFString(0);
    sub_1ACFF9724((unint64_t *)&qword_1ED2E2DD0, (uint64_t (*)(uint64_t))type metadata accessor for CFString, (uint64_t)&unk_1AD647CA8);
    v14 = sub_1AD63B678();
    swift_bridgeObjectRelease();
    return v14;
  }
  v9 = a1[3];
  v10 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, v9);
  v11 = (*(double (**)(uint64_t, uint64_t))(v10 + 16))(v9, v10);
  v13 = v12;
  v14 = type metadata accessor for EncoderUtils();
  sub_1AD0D2488(a2, v11, v13);
  v16 = v15;
  v18 = v17;
  v19 = sub_1AD0D0B8C(0x682E63696C627570, 0xEB00000000666965, v11, v13, v15, v17);
  if (!v4)
  {
    v20 = v19;
    v21 = v11 == v16 && v13 == v18;
    v22 = MEMORY[0x1E0DEB418];
    if (!v21)
    {
      v23 = (void *)*MEMORY[0x1E0CBC778];
      v41 = MEMORY[0x1E0DEB418];
      *(_QWORD *)&v40 = a2;
      sub_1AD002F7C(&v40, v39);
      v24 = v23;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      sub_1AD43F6B0(v39, v24, isUniquelyReferenced_nonNull_native);

      swift_bridgeObjectRelease();
    }
    v26 = (void *)*MEMORY[0x1E0CBD290];
    v27 = *(_QWORD *)&v20;
    v28 = MEMORY[0x1E0DEF040];
    if (v20 <= 0.0)
    {
      v28 = v22;
      v27 = 2;
    }
    v41 = v28;
    *(_QWORD *)&v40 = v27;
    sub_1AD002F7C(&v40, v39);
    v29 = v26;
    v30 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F6B0(v39, v29, v30);

    swift_bridgeObjectRelease();
    v31 = (void *)*MEMORY[0x1E0CBD190];
    v32 = MEMORY[0x1E0DEAFA0];
    v41 = MEMORY[0x1E0DEAFA0];
    LOBYTE(v40) = 1;
    sub_1AD002F7C(&v40, v39);
    v33 = v31;
    v34 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F6B0(v39, v33, v34);

    swift_bridgeObjectRelease();
    v35 = (void *)*MEMORY[0x1E0CBD1C0];
    v41 = v32;
    LOBYTE(v40) = 1;
    sub_1AD002F7C(&v40, v39);
    v36 = v35;
    v37 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F6B0(v39, v36, v37);

    swift_bridgeObjectRelease();
    goto LABEL_12;
  }
  swift_bridgeObjectRelease();
  return v14;
}

_QWORD *sub_1AD59F4CC(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;
  CFMutableDataRef Mutable;
  __CFData *v5;
  __CFString *v6;
  CGImageDestinationRef v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __CFData *v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  void *v24;

  Mutable = CFDataCreateMutable(0, 0);
  if (Mutable)
  {
    v5 = Mutable;
    v6 = (__CFString *)sub_1AD63B744();
    v7 = CGImageDestinationCreateWithData(v5, v6, 1uLL, 0);

    if (v7)
    {
      swift_beginAccess();
      v8 = sub_1AD59F1BC(a1, v1[3], *((_BYTE *)v1 + 32));
      if (v2)
      {

      }
      else
      {
        v11 = (void *)v8;
        sub_1AD63BB64();
        if (qword_1ED2E7540 != -1)
          swift_once();
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
        v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_1AD648160;
        sub_1AD59FE80();
        sub_1ACFF9724(&qword_1ED2DAD18, (uint64_t (*)(uint64_t))sub_1AD59FE80, MEMORY[0x1E0DEFCF8]);
        sub_1AD63B690();
        v24 = v11;
        sub_1AD63B69C();
        swift_bridgeObjectRelease();
        v13 = MEMORY[0x1E0DEA968];
        v14 = sub_1AD63B7A4();
        v16 = v15;
        *(_QWORD *)(v12 + 56) = v13;
        *(_QWORD *)(v12 + 64) = sub_1AD0469B8();
        *(_QWORD *)(v12 + 32) = v14;
        *(_QWORD *)(v12 + 40) = v16;
        sub_1AD63B48C();
        swift_bridgeObjectRelease();
        v17 = a1[3];
        v18 = a1[4];
        v1 = __swift_project_boxed_opaque_existential_1(a1, v17);
        (*(void (**)(CGImageDestinationRef, void *, uint64_t, uint64_t))(v18 + 8))(v7, v24, v17, v18);
        if (CGImageDestinationFinalize(v7))
        {
          v19 = v5;
          sub_1AD63AFB8();
          v21 = v20;

          __asm { BR              X10 }
        }
        sub_1AD59FE3C();
        swift_allocError();
        *v22 = 2;
        swift_willThrow();

      }
    }
    else
    {
      sub_1AD59FE3C();
      swift_allocError();
      *v10 = 1;
      swift_willThrow();

    }
  }
  else
  {
    sub_1AD59FE3C();
    swift_allocError();
    *v9 = 0;
    swift_willThrow();
  }
  return v1;
}

uint64_t ATXEncoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t ATXEncoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

_QWORD *ATXEncoder.encode(imageSource:)(void *a1)
{
  return sub_1AD59F910(a1, (uint64_t (*)(_QWORD))type metadata accessor for CGImageSource, (uint64_t)&off_1E5CCB4B8);
}

uint64_t ATXEncoder.encode(imageSource:to:)(void *a1, uint64_t a2)
{
  return sub_1AD59F9A8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CGImageSource, (uint64_t)&off_1E5CCB4B8);
}

_QWORD *ATXEncoder.encode(image:)(void *a1)
{
  return sub_1AD59F910(a1, (uint64_t (*)(_QWORD))type metadata accessor for CGImage, (uint64_t)&off_1E5CCB010);
}

_QWORD *sub_1AD59F910(void *a1, uint64_t (*a2)(_QWORD), uint64_t a3)
{
  id v5;
  _QWORD *v6;
  _QWORD v8[5];

  v8[3] = a2(0);
  v8[4] = a3;
  v8[0] = a1;
  v5 = a1;
  v6 = sub_1AD59F4CC(v8);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

uint64_t ATXEncoder.encode(image:to:)(void *a1, uint64_t a2)
{
  return sub_1AD59F9A8(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for CGImage, (uint64_t)&off_1E5CCB010);
}

uint64_t sub_1AD59F9A8(void *a1, uint64_t a2, uint64_t (*a3)(_QWORD), uint64_t a4)
{
  id v6;
  _QWORD v8[5];

  v8[3] = a3(0);
  v8[4] = a4;
  v8[0] = a1;
  v6 = a1;
  sub_1AD59F03C(v8);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

uint64_t ATXEncoder.encode(pixelBuffer:to:)()
{
  uint64_t v0;

  sub_1AD0D0080();
  swift_allocError();
  *(_WORD *)v0 = 1281;
  *(_QWORD *)(v0 + 8) = 0;
  return swift_willThrow();
}

uint64_t ATXEncoder.encode(pixelBuffer:)()
{
  uint64_t v0;

  sub_1AD0D0080();
  swift_allocError();
  *(_WORD *)v0 = 1281;
  *(_QWORD *)(v0 + 8) = 0;
  return swift_willThrow();
}

uint64_t sub_1AD59FAB4@<X0>(char *a1@<X0>, uint64_t *a2@<X8>)
{
  char v3;
  char v4;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  result = swift_allocObject();
  *(_QWORD *)(result + 24) = 0;
  *(_BYTE *)(result + 32) = 1;
  *(_BYTE *)(result + 16) = v3;
  *(_BYTE *)(result + 17) = v4;
  *a2 = result;
  return result;
}

uint64_t sub_1AD59FB08(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD59FB74(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for CGImageSource, (uint64_t)&off_1E5CCB4B8);
}

_QWORD *sub_1AD59FB2C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD59FC10(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for CGImageSource, (uint64_t)&off_1E5CCB4B8);
}

uint64_t sub_1AD59FB50(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD59FB74(a1, a2, a3, a4, (uint64_t (*)(_QWORD))type metadata accessor for CGImage, (uint64_t)&off_1E5CCB010);
}

uint64_t sub_1AD59FB74(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), uint64_t a6)
{
  id v8;
  _QWORD v10[5];

  v10[3] = a5(0);
  v10[4] = a6;
  v10[0] = a1;
  v8 = a1;
  sub_1AD59F03C(v10);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

_QWORD *sub_1AD59FBEC(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD59FC10(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for CGImage, (uint64_t)&off_1E5CCB010);
}

_QWORD *sub_1AD59FC10(void *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD), uint64_t a5)
{
  id v7;
  _QWORD *v8;
  _QWORD v10[5];

  v10[3] = a4(0);
  v10[4] = a5;
  v10[0] = a1;
  v7 = a1;
  v8 = sub_1AD59F4CC(v10);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8;
}

void sub_1AD59FC88(CGImageDestination *a1, CFDictionaryRef properties)
{
  CGImageRef *v2;

  CGImageDestinationAddImage(a1, *v2, properties);
}

double sub_1AD59FC94()
{
  CGImageRef *v0;
  CGImage *v1;
  int64_t Width;

  v1 = *v0;
  Width = CGImageGetWidth(*v0);
  CGImageGetHeight(v1);
  return (double)Width;
}

void sub_1AD59FCCC(CGImageDestination *a1, CFDictionaryRef properties)
{
  CGImageSourceRef *v2;

  CGImageDestinationAddImageFromSource(a1, *v2, 0, properties);
}

double sub_1AD59FCDC()
{
  double v0;
  _BYTE v2[8];
  double v3;

  sub_1AD33B66C((uint64_t)v2);
  v0 = v3;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t storeEnumTagSinglePayload for ATXEncodingConfiguration(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD59FD7C + 4 * byte_1AD695D69[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1AD59FDB0 + 4 * byte_1AD695D64[v4]))();
}

uint64_t sub_1AD59FDB0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AD59FDB8(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1AD59FDC0);
  return result;
}

uint64_t sub_1AD59FDCC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1AD59FDD4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD59FDD8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AD59FDE0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ATXEncodingConfiguration()
{
  return &type metadata for ATXEncodingConfiguration;
}

uint64_t type metadata accessor for ATXEncoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for ATXEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ATXEncoder.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of ATXEncoder.__allocating_init(configuration:maxPixelDimension:)(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(v3 + 104))(a1, a2, a3 & 1);
}

unint64_t sub_1AD59FE3C()
{
  unint64_t result;

  result = qword_1EECDE7E0;
  if (!qword_1EECDE7E0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD695EAC, &type metadata for ATXEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EECDE7E0);
  }
  return result;
}

unint64_t sub_1AD59FE80()
{
  unint64_t result;

  result = qword_1ED2DAD20;
  if (!qword_1ED2DAD20)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED2DAD20);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ATXEncodingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD59FF08 + 4 * byte_1AD695D73[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD59FF3C + 4 * byte_1AD695D6E[v4]))();
}

uint64_t sub_1AD59FF3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD59FF44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD59FF4CLL);
  return result;
}

uint64_t sub_1AD59FF58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD59FF60);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD59FF64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD59FF6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ATXEncodingError()
{
  return &type metadata for ATXEncodingError;
}

unint64_t sub_1AD59FF8C()
{
  unint64_t result;

  result = qword_1EECDE7E8;
  if (!qword_1EECDE7E8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD695E84, &type metadata for ATXEncodingError);
    atomic_store(result, (unint64_t *)&qword_1EECDE7E8);
  }
  return result;
}

uint64_t PreviewImage.image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(v1, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a1 + 192) = v23;
    *(_OWORD *)(a1 + 208) = v4;
    *(_OWORD *)(a1 + 224) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a1 + 128) = v19;
    *(_OWORD *)(a1 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a1 + 160) = v21;
    *(_OWORD *)(a1 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a1 + 64) = v15;
    *(_OWORD *)(a1 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PreviewImage.Constraints.maxPixelDimension.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double PreviewImage.Constraints.scale.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t PreviewImage.Constraints.index.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t PreviewImage.Constraints.index.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t (*PreviewImage.Constraints.index.modify())()
{
  return nullsub_1;
}

uint64_t PreviewImage.Constraints.maxCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 24);
}

uint64_t PreviewImage.Constraints.maxCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = result;
  return result;
}

uint64_t (*PreviewImage.Constraints.maxCount.modify())()
{
  return nullsub_1;
}

uint64_t PreviewImage.Constraints.isEmojiImage.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 32);
}

uint64_t PreviewImage.Constraints.isEmojiImage.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = result;
  return result;
}

uint64_t (*PreviewImage.Constraints.isEmojiImage.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A00CC()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AD5A0100 + 4 * byte_1AD695EEC[*v0]))(0xD000000000000011, 0x80000001AD69FE30);
}

uint64_t sub_1AD5A0100()
{
  return 0x656C616373;
}

uint64_t sub_1AD5A0114()
{
  return 0x7865646E69;
}

uint64_t sub_1AD5A0128()
{
  return 0x746E756F4378616DLL;
}

uint64_t sub_1AD5A0140()
{
  return 0x49696A6F6D457369;
}

uint64_t sub_1AD5A0160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD5A2FD8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD5A0184()
{
  sub_1AD5A0390();
  return sub_1AD63C560();
}

uint64_t sub_1AD5A01AC()
{
  sub_1AD5A0390();
  return sub_1AD63C56C();
}

uint64_t PreviewImage.Constraints.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _DWORD v10[2];
  uint64_t v11;
  uint64_t v12;
  char v13;
  char v14;
  char v15;
  char v16;
  char v17;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E26D0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 16);
  v11 = *(_QWORD *)(v1 + 24);
  v12 = v8;
  v10[1] = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD5A0390();
  sub_1AD63C53C();
  v17 = 0;
  sub_1AD63C050();
  if (!v2)
  {
    v16 = 1;
    sub_1AD63C038();
    v15 = 2;
    sub_1AD63C050();
    v14 = 3;
    sub_1AD63C050();
    v13 = 4;
    sub_1AD63C02C();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AD5A0390()
{
  unint64_t result;

  result = qword_1ED2E2E60;
  if (!qword_1ED2E2E60)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696210, &type metadata for PreviewImage.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E60);
  }
  return result;
}

uint64_t PreviewImage.Constraints.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD48);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD5A0390();
  sub_1AD63C524();
  if (!v2)
  {
    v21 = 0;
    v9 = sub_1AD63BF3C();
    v20 = 1;
    sub_1AD63BF24();
    v11 = v10;
    v19 = 2;
    v12 = sub_1AD63BF3C();
    v18 = 3;
    v16 = sub_1AD63BF3C();
    v17 = 4;
    v14 = sub_1AD63BF18();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *(_QWORD *)a2 = v9;
    *(_QWORD *)(a2 + 8) = v11;
    v15 = v16;
    *(_QWORD *)(a2 + 16) = v12;
    *(_QWORD *)(a2 + 24) = v15;
    *(_BYTE *)(a2 + 32) = v14 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AD5A05B4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PreviewImage.Constraints.init(from:)(a1, a2);
}

uint64_t sub_1AD5A05C8(_QWORD *a1)
{
  return PreviewImage.Constraints.encode(to:)(a1);
}

_QWORD *PreviewImage.image.setter(_QWORD *a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[15];
  uint64_t v12;

  sub_1AD0CFB8C((uint64_t)a1, (uint64_t)v11);
  sub_1AD009758(v1, &qword_1ED2E2680);
  v3 = v11[13];
  *(_OWORD *)(v1 + 192) = v11[12];
  *(_OWORD *)(v1 + 208) = v3;
  *(_OWORD *)(v1 + 224) = v11[14];
  *(_QWORD *)(v1 + 240) = v12;
  v4 = v11[9];
  *(_OWORD *)(v1 + 128) = v11[8];
  *(_OWORD *)(v1 + 144) = v4;
  v5 = v11[11];
  *(_OWORD *)(v1 + 160) = v11[10];
  *(_OWORD *)(v1 + 176) = v5;
  v6 = v11[5];
  *(_OWORD *)(v1 + 64) = v11[4];
  *(_OWORD *)(v1 + 80) = v6;
  v7 = v11[7];
  *(_OWORD *)(v1 + 96) = v11[6];
  *(_OWORD *)(v1 + 112) = v7;
  v8 = v11[1];
  *(_OWORD *)v1 = v11[0];
  *(_OWORD *)(v1 + 16) = v8;
  v9 = v11[3];
  *(_OWORD *)(v1 + 32) = v11[2];
  *(_OWORD *)(v1 + 48) = v9;
  return sub_1AD046A30(a1);
}

uint64_t PreviewImage.image.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v4;
  uint64_t result;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;

  v2 = v1;
  v4 = (char *)malloc(0x1F8uLL);
  *a1 = v4;
  *((_QWORD *)v4 + 62) = v2;
  result = sub_1ACFF64C0(v2, (uint64_t)(v4 + 248), &qword_1ED2E2680);
  if (*((_QWORD *)v4 + 34))
  {
    v6 = *(_OWORD *)(v4 + 456);
    *((_OWORD *)v4 + 12) = *(_OWORD *)(v4 + 440);
    *((_OWORD *)v4 + 13) = v6;
    *((_OWORD *)v4 + 14) = *(_OWORD *)(v4 + 472);
    *((_QWORD *)v4 + 30) = *((_QWORD *)v4 + 61);
    v7 = *(_OWORD *)(v4 + 392);
    *((_OWORD *)v4 + 8) = *(_OWORD *)(v4 + 376);
    *((_OWORD *)v4 + 9) = v7;
    v8 = *(_OWORD *)(v4 + 424);
    *((_OWORD *)v4 + 10) = *(_OWORD *)(v4 + 408);
    *((_OWORD *)v4 + 11) = v8;
    v9 = *(_OWORD *)(v4 + 328);
    *((_OWORD *)v4 + 4) = *(_OWORD *)(v4 + 312);
    *((_OWORD *)v4 + 5) = v9;
    v10 = *(_OWORD *)(v4 + 360);
    *((_OWORD *)v4 + 6) = *(_OWORD *)(v4 + 344);
    *((_OWORD *)v4 + 7) = v10;
    v11 = *(_OWORD *)(v4 + 264);
    *(_OWORD *)v4 = *(_OWORD *)(v4 + 248);
    *((_OWORD *)v4 + 1) = v11;
    v12 = *(_OWORD *)(v4 + 296);
    result = (uint64_t)sub_1AD146614;
    *((_OWORD *)v4 + 2) = *(_OWORD *)(v4 + 280);
    *((_OWORD *)v4 + 3) = v12;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t PreviewImage.$image.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, &qword_1ED2E2FE8);
}

uint64_t PreviewImage.$image.setter(uint64_t a1)
{
  void *v1;
  _BYTE __src[440];

  sub_1ACFF64C0(a1, (uint64_t)__src, &qword_1ED2E2FE8);
  sub_1AD009758((uint64_t)v1, &qword_1ED2E2FE8);
  memcpy(v1, __src, 0x1B8uLL);
  return sub_1AD009758(a1, &qword_1ED2E2FE8);
}

void (*PreviewImage.$image.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x530uLL);
  *a1 = v3;
  v3[165] = v1;
  sub_1ACFF64C0(v1, (uint64_t)v3, &qword_1ED2E2FE8);
  return sub_1AD146874;
}

uint64_t PreviewImage.frameCount.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 440);
}

uint64_t PreviewImage.frameCount.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 440) = result;
  return result;
}

uint64_t (*PreviewImage.frameCount.modify())()
{
  return nullsub_1;
}

uint64_t PreviewImage.frameDuration.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 448);
}

uint64_t PreviewImage.frameDuration.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 448) = result;
  *(_BYTE *)(v2 + 456) = a2 & 1;
  return result;
}

uint64_t (*PreviewImage.frameDuration.modify())()
{
  return nullsub_1;
}

uint64_t PreviewImage.isScreenshot.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 457);
}

uint64_t PreviewImage.isScreenshot.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 457) = result;
  return result;
}

uint64_t (*PreviewImage.isScreenshot.modify())()
{
  return nullsub_1;
}

void PreviewImage.stickerEffect.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 458);
}

_BYTE *PreviewImage.stickerEffect.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 458) = *result;
  return result;
}

uint64_t (*PreviewImage.stickerEffect.modify())()
{
  return nullsub_1;
}

uint64_t PreviewImage.utTypeString.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 464);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PreviewImage.utTypeString.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 464) = a1;
  *(_QWORD *)(v2 + 472) = a2;
  return result;
}

uint64_t (*PreviewImage.utTypeString.modify())()
{
  return nullsub_1;
}

uint64_t PreviewImage.isMonoskiAsset.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 480);
}

uint64_t PreviewImage.isMonoskiAsset.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 480) = result;
  return result;
}

uint64_t (*PreviewImage.isMonoskiAsset.modify())()
{
  return nullsub_1;
}

double PreviewImage.alignmentInset.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 488);
}

void PreviewImage.alignmentInset.setter(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 488) = a1;
  *(double *)(v2 + 496) = a2;
}

uint64_t (*PreviewImage.alignmentInset.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A0948()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AD5A0974 + 4 * byte_1AD695EF1[*v0]))(0x6567616D69, 0xE500000000000000);
}

uint64_t sub_1AD5A0974()
{
  return 0x756F43656D617266;
}

uint64_t sub_1AD5A0990()
{
  return 0x727544656D617266;
}

uint64_t sub_1AD5A09B4()
{
  return 0x6E65657263537369;
}

uint64_t sub_1AD5A09D4()
{
  return 0x4572656B63697473;
}

uint64_t sub_1AD5A09F8()
{
  return 0x7453657079547475;
}

uint64_t sub_1AD5A0A18()
{
  return 0x6B736F6E6F4D7369;
}

uint64_t sub_1AD5A0A3C()
{
  return 0x6E656D6E67696C61;
}

uint64_t sub_1AD5A0A60@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD5A2BCC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD5A0A84()
{
  sub_1AD5A0D54();
  return sub_1AD63C560();
}

uint64_t sub_1AD5A0AAC()
{
  sub_1AD5A0D54();
  return sub_1AD63C56C();
}

uint64_t PreviewImage.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  __int128 v10;
  char v11;

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DAD50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD5A0D54();
  sub_1AD63C53C();
  LOBYTE(v10) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2FE8);
  sub_1AD14794C(&qword_1ED2DACF0, (uint64_t)&unk_1AD67ACF4);
  sub_1AD63C068();
  if (!v2)
  {
    LOBYTE(v10) = 1;
    sub_1AD63C050();
    LOBYTE(v10) = 2;
    sub_1AD63BFF0();
    LOBYTE(v10) = 3;
    sub_1AD63C02C();
    LOBYTE(v10) = *(_BYTE *)(v3 + 458);
    v11 = 4;
    sub_1AD13F29C();
    sub_1AD63C068();
    LOBYTE(v10) = 5;
    sub_1AD63BFD8();
    LOBYTE(v10) = 6;
    sub_1AD63C02C();
    v10 = *(_OWORD *)(v3 + 488);
    v11 = 7;
    type metadata accessor for CGSize(0);
    sub_1AD5A1134(&qword_1ED2DAB80, MEMORY[0x1E0C9B9F0]);
    sub_1AD63C068();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1AD5A0D54()
{
  unint64_t result;

  result = qword_1ED2E2E48;
  if (!qword_1ED2E2E48)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6961C0, &type metadata for PreviewImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E48);
  }
  return result;
}

_QWORD *PreviewImage.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char v21;
  __int128 v22[28];
  _QWORD v23[31];
  _QWORD v24[25];
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  __int128 v32;
  __int128 v33[13];
  _QWORD *v34;

  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E26B8);
  v5 = *(_QWORD *)(v19 - 8);
  MEMORY[0x1E0C80A78](v19);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  LOWORD(v33[0]) = 0;
  sub_1AD00FD58(v33);
  sub_1AD00E830(v33, (uint64_t)v24);
  v25 = 0;
  memset(v23, 0, sizeof(v23));
  v26 = 1;
  v29 = 0;
  v30 = 0;
  v8 = a1[3];
  v34 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v8);
  sub_1AD5A0D54();
  v20 = v7;
  sub_1AD63C524();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    sub_1AD009758((uint64_t)v23, &qword_1ED2E2FE8);
    return (_QWORD *)swift_bridgeObjectRelease();
  }
  else
  {
    v9 = v5;
    v10 = a2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2FE8);
    v21 = 0;
    sub_1AD14794C(&qword_1ED2E26B0, (uint64_t)&unk_1AD67ACCC);
    sub_1AD63BF54();
    sub_1AD147990((uint64_t)v22, (uint64_t)v23);
    LOBYTE(v22[0]) = 1;
    v24[24] = sub_1AD63BF3C();
    LOBYTE(v22[0]) = 2;
    v25 = sub_1AD63BEDC();
    v26 = v11 & 1;
    LOBYTE(v22[0]) = 3;
    v12 = v20;
    v27 = sub_1AD63BF18() & 1;
    v21 = 4;
    sub_1AD13F258();
    sub_1AD63BF54();
    v28 = v22[0];
    LOBYTE(v22[0]) = 5;
    v13 = sub_1AD63BEC4();
    v15 = v14;
    swift_bridgeObjectRelease();
    v29 = v13;
    v30 = v15;
    LOBYTE(v22[0]) = 6;
    v16 = v19;
    v31 = sub_1AD63BF18() & 1;
    type metadata accessor for CGSize(0);
    v21 = 7;
    sub_1AD5A1134(&qword_1ED2E2690, MEMORY[0x1E0C9BA08]);
    sub_1AD63BF54();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v12, v16);
    v32 = v22[0];
    sub_1AD4D9F0C((uint64_t)v23, v10);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    return sub_1AD4D9F48(v23);
  }
}

uint64_t sub_1AD5A1134(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    type metadata accessor for CGSize(255);
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

_QWORD *sub_1AD5A1174@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return PreviewImage.init(from:)(a1, a2);
}

uint64_t sub_1AD5A1188(_QWORD *a1)
{
  return PreviewImage.encode(to:)(a1);
}

_QWORD *PreviewImage.init(image:frameCount:frameDuration:isScreenshot:stickerEffect:utTypeString:isMonoskiAsset:alignmentInset:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, double a10@<D0>, double a11@<D1>, char a12)
{
  char v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  _OWORD v31[15];
  uint64_t v32;
  _QWORD v33[31];
  __int128 v34[12];

  v22 = *a6;
  LOWORD(v34[0]) = 0;
  sub_1AD00FD58(v34);
  sub_1AD00E830(v34, a9 + 248);
  *(_OWORD *)a9 = 0u;
  *(_OWORD *)(a9 + 16) = 0u;
  *(_OWORD *)(a9 + 32) = 0u;
  *(_OWORD *)(a9 + 48) = 0u;
  *(_OWORD *)(a9 + 64) = 0u;
  *(_OWORD *)(a9 + 80) = 0u;
  *(_OWORD *)(a9 + 96) = 0u;
  *(_OWORD *)(a9 + 112) = 0u;
  *(_OWORD *)(a9 + 128) = 0u;
  *(_OWORD *)(a9 + 144) = 0u;
  *(_OWORD *)(a9 + 160) = 0u;
  *(_OWORD *)(a9 + 176) = 0u;
  *(_OWORD *)(a9 + 192) = 0u;
  *(_OWORD *)(a9 + 208) = 0u;
  *(_OWORD *)(a9 + 224) = 0u;
  *(_QWORD *)(a9 + 240) = 0;
  *(_QWORD *)(a9 + 440) = a2;
  *(_QWORD *)(a9 + 448) = a3;
  *(_BYTE *)(a9 + 456) = a4 & 1;
  *(_BYTE *)(a9 + 457) = a5;
  *(_QWORD *)(a9 + 464) = a7;
  *(_QWORD *)(a9 + 472) = a8;
  *(_BYTE *)(a9 + 458) = v22;
  *(_BYTE *)(a9 + 480) = a12;
  *(double *)(a9 + 488) = a10;
  *(double *)(a9 + 496) = a11;
  sub_1AD0CFB8C((uint64_t)a1, (uint64_t)v33);
  sub_1AD0CFB8C((uint64_t)v33, (uint64_t)v31);
  sub_1AD009758(a9, &qword_1ED2E2680);
  v23 = v31[13];
  *(_OWORD *)(a9 + 192) = v31[12];
  *(_OWORD *)(a9 + 208) = v23;
  *(_OWORD *)(a9 + 224) = v31[14];
  *(_QWORD *)(a9 + 240) = v32;
  v24 = v31[9];
  *(_OWORD *)(a9 + 128) = v31[8];
  *(_OWORD *)(a9 + 144) = v24;
  v25 = v31[11];
  *(_OWORD *)(a9 + 160) = v31[10];
  *(_OWORD *)(a9 + 176) = v25;
  v26 = v31[5];
  *(_OWORD *)(a9 + 64) = v31[4];
  *(_OWORD *)(a9 + 80) = v26;
  v27 = v31[7];
  *(_OWORD *)(a9 + 96) = v31[6];
  *(_OWORD *)(a9 + 112) = v27;
  v28 = v31[1];
  *(_OWORD *)a9 = v31[0];
  *(_OWORD *)(a9 + 16) = v28;
  v29 = v31[3];
  *(_OWORD *)(a9 + 32) = v31[2];
  *(_OWORD *)(a9 + 48) = v29;
  sub_1AD046A30(v33);
  return sub_1AD046A30(a1);
}

void __swiftcall PreviewImage.Constraints.init(maxPixelDimension:scaleFactor:index:maxCount:isEmojiImage:)(BlastDoor::PreviewImage::Constraints *__return_ptr retstr, Swift::Int maxPixelDimension, Swift::Double scaleFactor, Swift::Int index, Swift::Int maxCount, Swift::Bool isEmojiImage)
{
  retstr->maxPixelDimension = maxPixelDimension;
  retstr->scale = scaleFactor;
  retstr->index = index;
  retstr->maxCount = maxCount;
  retstr->isEmojiImage = isEmojiImage;
}

unint64_t sub_1AD5A1328()
{
  unint64_t result;

  result = qword_1ED2E2E80;
  if (!qword_1ED2E2E80)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PreviewImage.Constraints, &type metadata for PreviewImage.Constraints);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E80);
  }
  return result;
}

unint64_t sub_1AD5A1370()
{
  unint64_t result;

  result = qword_1ED2E2E78;
  if (!qword_1ED2E2E78)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PreviewImage.Constraints, &type metadata for PreviewImage.Constraints);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E78);
  }
  return result;
}

unint64_t sub_1AD5A13B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1AD5A13D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AD5A13D8()
{
  unint64_t result;

  result = qword_1ED2E2E98;
  if (!qword_1ED2E2E98)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PreviewImage, &type metadata for PreviewImage);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E98);
  }
  return result;
}

unint64_t sub_1AD5A141C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD5A1448();
  result = sub_1AD5A148C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD5A1448()
{
  unint64_t result;

  result = qword_1ED2E2E90;
  if (!qword_1ED2E2E90)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PreviewImage, &type metadata for PreviewImage);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E90);
  }
  return result;
}

unint64_t sub_1AD5A148C()
{
  unint64_t result;

  result = qword_1ED2E2E88;
  if (!qword_1ED2E2E88)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for PreviewImage, &type metadata for PreviewImage);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E88);
  }
  return result;
}

uint64_t sub_1AD5A14D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(a1, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a2 + 192) = v23;
    *(_OWORD *)(a2 + 208) = v4;
    *(_OWORD *)(a2 + 224) = v25;
    *(_QWORD *)(a2 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a2 + 128) = v19;
    *(_OWORD *)(a2 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a2 + 160) = v21;
    *(_OWORD *)(a2 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5A1578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACFF64C0(a1, a2, &qword_1ED2E2FE8);
}

uint64_t destroy for PreviewImage(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;

  if (a1[3])
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    v2 = a1[10];
    v3 = a1[12];
    v4 = a1[14];
    v5 = a1[16];
    v6 = a1[20];
    v7 = a1[22];
    v8 = a1[24];
    if (v2 >> 1 != 0xFFFFFFFF
      || (v4 | (unint64_t)v3) > 1
      || (v6 & 0xFFFFFFFFFFFFFEFELL | v5 & 0xFFFFFFFFFFFF00FELL) != 0
      || (v8 | v7) >= 2)
    {
      sub_1AD00E8B0(a1[7], a1[8], a1[9], v2, a1[11], v3, a1[13], v4, a1[15], v5, a1[17], a1[18], a1[19], v6, a1[21], v7, a1[23], v8, a1[25],
        a1[26],
        a1[27],
        a1[28],
        a1[29],
        a1[30]);
    }
  }
  v12 = a1[31];
  v13 = a1[32];
  v14 = a1 + 31;
  sub_1AD00E8B0(v12, v13, v14[2], v14[3], v14[4], v14[5], v14[6], v14[7], v14[8], v14[9], v14[10], v14[11], v14[12], v14[13], v14[14], v14[15], v14[16], v14[17], v14[18],
    v14[19],
    v14[20],
    v14[21],
    v14[22],
    v14[23]);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PreviewImage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  unint64_t v70;

  v4 = *(_QWORD *)(a2 + 24);
  if (v4)
  {
    v5 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = v5;
    (**(void (***)(uint64_t, uint64_t))(v4 - 8))(a1, a2);
    *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
    *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
    v6 = *(_QWORD *)(a2 + 80);
    v7 = *(_QWORD *)(a2 + 96);
    v8 = *(_QWORD *)(a2 + 112);
    v9 = *(_QWORD *)(a2 + 192);
    if (v6 >> 1 != 0xFFFFFFFF
      || (v8 | (unint64_t)v7) > 1
      || *(_QWORD *)(a2 + 160) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a2 + 128) & 0xFFFFFFFFFFFF00FELL
      || (v9 | *(_QWORD *)(a2 + 176)) >= 2)
    {
      v23 = *(_QWORD *)(a2 + 64);
      v24 = *(_QWORD *)(a2 + 88);
      v41 = *(_QWORD *)(a2 + 120);
      v45 = *(_QWORD *)(a2 + 136);
      v51 = *(_QWORD *)(a2 + 144);
      v53 = *(_QWORD *)(a2 + 152);
      v55 = *(_QWORD *)(a2 + 168);
      v57 = *(_QWORD *)(a2 + 184);
      v59 = *(_QWORD *)(a2 + 200);
      v61 = *(_QWORD *)(a2 + 208);
      v63 = *(_QWORD *)(a2 + 216);
      v65 = *(_QWORD *)(a2 + 224);
      v67 = *(_QWORD *)(a2 + 232);
      v69 = *(_QWORD *)(a2 + 240);
      v47 = *(_QWORD *)(a2 + 160);
      v49 = *(_QWORD *)(a2 + 176);
      v25 = *(_QWORD *)(a2 + 56);
      v39 = *(_QWORD *)(a2 + 128);
      v26 = *(_QWORD *)(a2 + 72);
      v43 = *(_QWORD *)(a2 + 192);
      v27 = *(_QWORD *)(a2 + 104);
      sub_1AD00FEAC(v25, v23, v26, v6, v24, v7, v27, v8, v41, v39, v45, v51, v53, v47, v55, v49, v57, v9, v59,
        v61,
        v63,
        v65,
        v67,
        v69);
      *(_QWORD *)(a1 + 56) = v25;
      *(_QWORD *)(a1 + 64) = v23;
      *(_QWORD *)(a1 + 72) = v26;
      *(_QWORD *)(a1 + 80) = v6;
      *(_QWORD *)(a1 + 88) = v24;
      *(_QWORD *)(a1 + 96) = v7;
      *(_QWORD *)(a1 + 104) = v27;
      *(_QWORD *)(a1 + 112) = v8;
      *(_QWORD *)(a1 + 120) = v41;
      *(_QWORD *)(a1 + 128) = v39;
      *(_QWORD *)(a1 + 136) = v45;
      *(_QWORD *)(a1 + 144) = v51;
      *(_QWORD *)(a1 + 152) = v53;
      *(_QWORD *)(a1 + 160) = v47;
      *(_QWORD *)(a1 + 168) = v55;
      *(_QWORD *)(a1 + 176) = v49;
      *(_QWORD *)(a1 + 184) = v57;
      *(_QWORD *)(a1 + 192) = v43;
      *(_QWORD *)(a1 + 200) = v59;
      *(_QWORD *)(a1 + 208) = v61;
      *(_QWORD *)(a1 + 216) = v63;
      *(_QWORD *)(a1 + 224) = v65;
      *(_QWORD *)(a1 + 232) = v67;
      *(_QWORD *)(a1 + 240) = v69;
    }
    else
    {
      v10 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = v10;
      v11 = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = v11;
      v12 = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = v12;
      v13 = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = v13;
      v14 = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 72) = v14;
      v15 = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = v15;
    }
  }
  else
  {
    v16 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v16;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v17 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v17;
    v18 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v18;
    v19 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v19;
    v20 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v20;
    v21 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v21;
    v22 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v22;
  }
  v28 = *(_QWORD *)(a2 + 288);
  v29 = *(_QWORD *)(a2 + 296);
  v40 = *(_QWORD *)(a2 + 312);
  v42 = *(_QWORD *)(a2 + 320);
  v44 = *(_QWORD *)(a2 + 328);
  v46 = *(_QWORD *)(a2 + 336);
  v48 = *(_QWORD *)(a2 + 344);
  v50 = *(_QWORD *)(a2 + 352);
  v52 = *(_QWORD *)(a2 + 360);
  v54 = *(_QWORD *)(a2 + 368);
  v56 = *(_QWORD *)(a2 + 376);
  v58 = *(_QWORD *)(a2 + 384);
  v60 = *(_QWORD *)(a2 + 392);
  v62 = *(_QWORD *)(a2 + 400);
  v64 = *(_QWORD *)(a2 + 408);
  v66 = *(_QWORD *)(a2 + 416);
  v68 = *(_QWORD *)(a2 + 424);
  v70 = *(_QWORD *)(a2 + 432);
  v30 = *(_QWORD *)(a2 + 248);
  v31 = *(_QWORD *)(a2 + 256);
  v32 = *(_QWORD *)(a2 + 264);
  v33 = *(_QWORD *)(a2 + 272);
  v34 = *(_QWORD *)(a2 + 280);
  v35 = *(_QWORD *)(a2 + 304);
  sub_1AD00FEAC(v30, v31, v32, v33, v34, v28, v29, v35, v40, v42, v44, v46, v48, v50, v52, v54, v56, v58, v60,
    v62,
    v64,
    v66,
    v68,
    v70);
  *(_QWORD *)(a1 + 248) = v30;
  *(_QWORD *)(a1 + 256) = v31;
  *(_QWORD *)(a1 + 264) = v32;
  *(_QWORD *)(a1 + 272) = v33;
  *(_QWORD *)(a1 + 280) = v34;
  *(_QWORD *)(a1 + 288) = v28;
  *(_QWORD *)(a1 + 296) = v29;
  *(_QWORD *)(a1 + 304) = v35;
  *(_QWORD *)(a1 + 312) = v40;
  *(_QWORD *)(a1 + 320) = v42;
  *(_QWORD *)(a1 + 328) = v44;
  *(_QWORD *)(a1 + 336) = v46;
  *(_QWORD *)(a1 + 344) = v48;
  *(_QWORD *)(a1 + 352) = v50;
  *(_QWORD *)(a1 + 360) = v52;
  *(_QWORD *)(a1 + 368) = v54;
  *(_QWORD *)(a1 + 376) = v56;
  *(_QWORD *)(a1 + 384) = v58;
  *(_QWORD *)(a1 + 392) = v60;
  *(_QWORD *)(a1 + 400) = v62;
  *(_QWORD *)(a1 + 408) = v64;
  *(_QWORD *)(a1 + 416) = v66;
  *(_QWORD *)(a1 + 424) = v68;
  *(_QWORD *)(a1 + 432) = v70;
  v36 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v36;
  *(_BYTE *)(a1 + 456) = *(_BYTE *)(a2 + 456);
  *(_WORD *)(a1 + 457) = *(_WORD *)(a2 + 457);
  v37 = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = v37;
  *(_BYTE *)(a1 + 480) = *(_BYTE *)(a2 + 480);
  *(_OWORD *)(a1 + 488) = *(_OWORD *)(a2 + 488);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PreviewImage(uint64_t a1, __int128 *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  __int128 v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  uint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  unint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  unint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  unint64_t v186;
  unint64_t v187;
  uint64_t v188;
  unint64_t v189;
  uint64_t v190;
  uint64_t v191;
  unint64_t v192;
  _BYTE *v193;

  v4 = *((_QWORD *)a2 + 3);
  v193 = (char *)a2 + 457;
  if (!*(_QWORD *)(a1 + 24))
  {
    if (!v4)
    {
      v63 = *a2;
      v64 = a2[1];
      v65 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v65;
      *(_OWORD *)a1 = v63;
      *(_OWORD *)(a1 + 16) = v64;
      v66 = a2[4];
      v67 = a2[5];
      v68 = a2[7];
      *(_OWORD *)(a1 + 96) = a2[6];
      *(_OWORD *)(a1 + 112) = v68;
      *(_OWORD *)(a1 + 64) = v66;
      *(_OWORD *)(a1 + 80) = v67;
      v69 = a2[8];
      v70 = a2[9];
      v71 = a2[11];
      *(_OWORD *)(a1 + 160) = a2[10];
      *(_OWORD *)(a1 + 176) = v71;
      *(_OWORD *)(a1 + 128) = v69;
      *(_OWORD *)(a1 + 144) = v70;
      v72 = a2[12];
      v73 = a2[13];
      v74 = a2[14];
      *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
      *(_OWORD *)(a1 + 208) = v73;
      *(_OWORD *)(a1 + 224) = v74;
      *(_OWORD *)(a1 + 192) = v72;
      goto LABEL_35;
    }
    *(_QWORD *)(a1 + 24) = v4;
    *(_QWORD *)(a1 + 32) = *((_QWORD *)a2 + 4);
    (**(void (***)(uint64_t, __int128 *))(v4 - 8))(a1, a2);
    v28 = *((_QWORD *)a2 + 5);
    *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
    *(_QWORD *)(a1 + 40) = v28;
    v29 = *((_QWORD *)a2 + 10);
    v30 = *((_QWORD *)a2 + 12);
    v31 = *((_QWORD *)a2 + 14);
    v32 = *((_QWORD *)a2 + 22);
    if (v29 >> 1 == 0xFFFFFFFF
      && (v31 | (unint64_t)v30) <= 1
      && !(a2[10] & 0xFFFFFFFFFFFFFEFELL | (_QWORD)a2[8] & 0xFFFFFFFFFFFF00FELL)
      && (*((_QWORD *)a2 + 24) | (unint64_t)v32) < 2)
    {
      v33 = *(__int128 *)((char *)a2 + 56);
      v34 = *(__int128 *)((char *)a2 + 72);
      v35 = *(__int128 *)((char *)a2 + 104);
      *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
      *(_OWORD *)(a1 + 104) = v35;
      *(_OWORD *)(a1 + 56) = v33;
      *(_OWORD *)(a1 + 72) = v34;
      v36 = *(__int128 *)((char *)a2 + 120);
      v37 = *(__int128 *)((char *)a2 + 136);
      v38 = *(__int128 *)((char *)a2 + 168);
      *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
      *(_OWORD *)(a1 + 168) = v38;
      *(_OWORD *)(a1 + 120) = v36;
      *(_OWORD *)(a1 + 136) = v37;
      v39 = *(__int128 *)((char *)a2 + 184);
      v40 = *(__int128 *)((char *)a2 + 200);
      v41 = *(__int128 *)((char *)a2 + 232);
      *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
      *(_OWORD *)(a1 + 232) = v41;
      *(_OWORD *)(a1 + 184) = v39;
      *(_OWORD *)(a1 + 200) = v40;
      goto LABEL_35;
    }
    v75 = *((_QWORD *)a2 + 7);
    v76 = *((_QWORD *)a2 + 13);
    v133 = *((_QWORD *)a2 + 15);
    v145 = *((_QWORD *)a2 + 17);
    v149 = *((_QWORD *)a2 + 18);
    v157 = *((_QWORD *)a2 + 19);
    v161 = *((_QWORD *)a2 + 21);
    v165 = *((_QWORD *)a2 + 23);
    v169 = *((_QWORD *)a2 + 25);
    v173 = *((_QWORD *)a2 + 26);
    v177 = *((_QWORD *)a2 + 27);
    v181 = *((_QWORD *)a2 + 28);
    v185 = *((_QWORD *)a2 + 29);
    v189 = *((_QWORD *)a2 + 30);
    v137 = *((_QWORD *)a2 + 22);
    v141 = *((_QWORD *)a2 + 20);
    v77 = *((_QWORD *)a2 + 8);
    v153 = *((_QWORD *)a2 + 24);
    v129 = *((_QWORD *)a2 + 16);
    v78 = *((_QWORD *)a2 + 9);
    v79 = *((_QWORD *)a2 + 11);
    sub_1AD00FEAC(v75, v77, v78, v29, v79, v30, v76, v31, v133, v129, v145, v149, v157, v141, v161, v32, v165, v153, v169,
      v173,
      v177,
      v181,
      v185,
      v189);
    *(_QWORD *)(a1 + 56) = v75;
    *(_QWORD *)(a1 + 64) = v77;
    *(_QWORD *)(a1 + 72) = v78;
    *(_QWORD *)(a1 + 80) = v29;
    *(_QWORD *)(a1 + 88) = v79;
    *(_QWORD *)(a1 + 96) = v30;
    *(_QWORD *)(a1 + 104) = v76;
    *(_QWORD *)(a1 + 112) = v31;
    *(_QWORD *)(a1 + 120) = v133;
    *(_QWORD *)(a1 + 128) = v129;
    *(_QWORD *)(a1 + 136) = v145;
    *(_QWORD *)(a1 + 144) = v149;
    *(_QWORD *)(a1 + 152) = v157;
    *(_QWORD *)(a1 + 160) = v141;
    *(_QWORD *)(a1 + 168) = v161;
    *(_QWORD *)(a1 + 176) = v137;
    *(_QWORD *)(a1 + 184) = v165;
    *(_QWORD *)(a1 + 192) = v153;
    *(_QWORD *)(a1 + 200) = v169;
    *(_QWORD *)(a1 + 208) = v173;
    *(_QWORD *)(a1 + 216) = v177;
    *(_QWORD *)(a1 + 224) = v181;
    *(_QWORD *)(a1 + 232) = v185;
    v80 = v189;
    goto LABEL_34;
  }
  if (!v4)
  {
    sub_1AD046A30((_QWORD *)a1);
    v42 = a2[3];
    v44 = *a2;
    v43 = a2[1];
    *(_OWORD *)(a1 + 32) = a2[2];
    *(_OWORD *)(a1 + 48) = v42;
    *(_OWORD *)a1 = v44;
    *(_OWORD *)(a1 + 16) = v43;
    v45 = a2[7];
    v47 = a2[4];
    v46 = a2[5];
    *(_OWORD *)(a1 + 96) = a2[6];
    *(_OWORD *)(a1 + 112) = v45;
    *(_OWORD *)(a1 + 64) = v47;
    *(_OWORD *)(a1 + 80) = v46;
    v48 = a2[11];
    v50 = a2[8];
    v49 = a2[9];
    *(_OWORD *)(a1 + 160) = a2[10];
    *(_OWORD *)(a1 + 176) = v48;
    *(_OWORD *)(a1 + 128) = v50;
    *(_OWORD *)(a1 + 144) = v49;
    v52 = a2[13];
    v51 = a2[14];
    v53 = a2[12];
    *(_QWORD *)(a1 + 240) = *((_QWORD *)a2 + 30);
    *(_OWORD *)(a1 + 208) = v52;
    *(_OWORD *)(a1 + 224) = v51;
    *(_OWORD *)(a1 + 192) = v53;
    goto LABEL_35;
  }
  __swift_assign_boxed_opaque_existential_1((uint64_t *)a1, (uint64_t *)a2);
  v5 = *((_QWORD *)a2 + 5);
  *(_BYTE *)(a1 + 48) = *((_BYTE *)a2 + 48);
  *(_QWORD *)(a1 + 40) = v5;
  v6 = (_OWORD *)(a1 + 56);
  v7 = (__int128 *)((char *)a2 + 56);
  v8 = *((_QWORD *)a2 + 10);
  v9 = *((_QWORD *)a2 + 12);
  v10 = *((_QWORD *)a2 + 14);
  v11 = *((_QWORD *)a2 + 16);
  v12 = *((_QWORD *)a2 + 20);
  v13 = *((_QWORD *)a2 + 22);
  v14 = *((_QWORD *)a2 + 24);
  v18 = v8 >> 1 == 0xFFFFFFFF
     && (v10 | (unint64_t)v9) < 2
     && (v12 & 0xFFFFFFFFFFFFFEFELL | v11 & 0xFFFFFFFFFFFF00FELL) == 0
     && (v14 | v13) < 2;
  if (*(_QWORD *)(a1 + 80) >> 1 == 0xFFFFFFFFLL
    && (*(_QWORD *)(a1 + 112) | *(_QWORD *)(a1 + 96)) <= 1
    && !(*(_QWORD *)(a1 + 160) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a1 + 128) & 0xFFFFFFFFFFFF00FELL)
    && (*(_QWORD *)(a1 + 192) | *(_QWORD *)(a1 + 176)) < 2)
  {
    if (v18)
    {
      v19 = *v7;
      v20 = *(__int128 *)((char *)a2 + 72);
      v21 = *(__int128 *)((char *)a2 + 104);
      *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
      *(_OWORD *)(a1 + 104) = v21;
      *v6 = v19;
      *(_OWORD *)(a1 + 72) = v20;
      v22 = *(__int128 *)((char *)a2 + 120);
      v23 = *(__int128 *)((char *)a2 + 136);
      v24 = *(__int128 *)((char *)a2 + 168);
      *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
      *(_OWORD *)(a1 + 168) = v24;
      *(_OWORD *)(a1 + 120) = v22;
      *(_OWORD *)(a1 + 136) = v23;
      v25 = *(__int128 *)((char *)a2 + 184);
      v26 = *(__int128 *)((char *)a2 + 200);
      v27 = *(__int128 *)((char *)a2 + 232);
      *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
      *(_OWORD *)(a1 + 232) = v27;
      *(_OWORD *)(a1 + 184) = v25;
      *(_OWORD *)(a1 + 200) = v26;
      goto LABEL_35;
    }
    v135 = *((_QWORD *)a2 + 8);
    v139 = *((_QWORD *)a2 + 7);
    v131 = *((_QWORD *)a2 + 9);
    v100 = *((_QWORD *)a2 + 11);
    v101 = *((_QWORD *)a2 + 13);
    v143 = *((_QWORD *)a2 + 15);
    v147 = *((_QWORD *)a2 + 17);
    v151 = *((_QWORD *)a2 + 18);
    v155 = *((_QWORD *)a2 + 19);
    v159 = *((_QWORD *)a2 + 21);
    v163 = *((_QWORD *)a2 + 23);
    v167 = *((_QWORD *)a2 + 25);
    v171 = *((_QWORD *)a2 + 26);
    v175 = *((_QWORD *)a2 + 27);
    v179 = *((_QWORD *)a2 + 28);
    v183 = *((_QWORD *)a2 + 29);
    v187 = *((_QWORD *)a2 + 30);
    v191 = *((_QWORD *)a2 + 24);
    sub_1AD00FEAC(v139, v135, v131, v8, v100, v9, v101, v10, v143, v11, v147, v151, v155, v12, v159, v13, v163, v14, v167,
      v171,
      v175,
      v179,
      v183,
      v187);
    *(_QWORD *)(a1 + 56) = v139;
    *(_QWORD *)(a1 + 64) = v135;
    *(_QWORD *)(a1 + 72) = v131;
    *(_QWORD *)(a1 + 80) = v8;
    *(_QWORD *)(a1 + 88) = v100;
    *(_QWORD *)(a1 + 96) = v9;
    *(_QWORD *)(a1 + 104) = v101;
    *(_QWORD *)(a1 + 112) = v10;
    *(_QWORD *)(a1 + 120) = v143;
    *(_QWORD *)(a1 + 128) = v11;
    *(_QWORD *)(a1 + 136) = v147;
    *(_QWORD *)(a1 + 144) = v151;
    *(_QWORD *)(a1 + 152) = v155;
    *(_QWORD *)(a1 + 160) = v12;
    *(_QWORD *)(a1 + 168) = v159;
    *(_QWORD *)(a1 + 176) = v13;
    *(_QWORD *)(a1 + 184) = v163;
    *(_QWORD *)(a1 + 192) = v191;
    *(_QWORD *)(a1 + 200) = v167;
    *(_QWORD *)(a1 + 208) = v171;
    *(_QWORD *)(a1 + 216) = v175;
    *(_QWORD *)(a1 + 224) = v179;
    *(_QWORD *)(a1 + 232) = v183;
    v80 = v187;
LABEL_34:
    *(_QWORD *)(a1 + 240) = v80;
    goto LABEL_35;
  }
  if (v18)
  {
    sub_1AD148B34(a1 + 56);
    v54 = *(__int128 *)((char *)a2 + 104);
    v56 = *v7;
    v55 = *(__int128 *)((char *)a2 + 72);
    *(_OWORD *)(a1 + 88) = *(__int128 *)((char *)a2 + 88);
    *(_OWORD *)(a1 + 104) = v54;
    *v6 = v56;
    *(_OWORD *)(a1 + 72) = v55;
    v57 = *(__int128 *)((char *)a2 + 168);
    v59 = *(__int128 *)((char *)a2 + 120);
    v58 = *(__int128 *)((char *)a2 + 136);
    *(_OWORD *)(a1 + 152) = *(__int128 *)((char *)a2 + 152);
    *(_OWORD *)(a1 + 168) = v57;
    *(_OWORD *)(a1 + 120) = v59;
    *(_OWORD *)(a1 + 136) = v58;
    v60 = *(__int128 *)((char *)a2 + 232);
    v62 = *(__int128 *)((char *)a2 + 184);
    v61 = *(__int128 *)((char *)a2 + 200);
    *(_OWORD *)(a1 + 216) = *(__int128 *)((char *)a2 + 216);
    *(_OWORD *)(a1 + 232) = v60;
    *(_OWORD *)(a1 + 184) = v62;
    *(_OWORD *)(a1 + 200) = v61;
  }
  else
  {
    v134 = *((_QWORD *)a2 + 8);
    v138 = *((_QWORD *)a2 + 7);
    v130 = *((_QWORD *)a2 + 9);
    v81 = *((_QWORD *)a2 + 11);
    v82 = *((_QWORD *)a2 + 13);
    v142 = *((_QWORD *)a2 + 15);
    v146 = *((_QWORD *)a2 + 17);
    v150 = *((_QWORD *)a2 + 18);
    v154 = *((_QWORD *)a2 + 19);
    v158 = *((_QWORD *)a2 + 21);
    v162 = *((_QWORD *)a2 + 23);
    v166 = *((_QWORD *)a2 + 25);
    v170 = *((_QWORD *)a2 + 26);
    v174 = *((_QWORD *)a2 + 27);
    v178 = *((_QWORD *)a2 + 28);
    v182 = *((_QWORD *)a2 + 29);
    v186 = *((_QWORD *)a2 + 30);
    v190 = *((_QWORD *)a2 + 24);
    sub_1AD00FEAC(v138, v134, v130, v8, v81, v9, v82, v10, v142, v11, v146, v150, v154, v12, v158, v13, v162, v14, v166,
      v170,
      v174,
      v178,
      v182,
      v186);
    v83 = *(_QWORD *)(a1 + 56);
    v84 = *(_QWORD *)(a1 + 64);
    *(_QWORD *)(a1 + 56) = v138;
    *(_QWORD *)(a1 + 64) = v134;
    v85 = *(_QWORD *)(a1 + 72);
    v86 = *(_QWORD *)(a1 + 80);
    *(_QWORD *)(a1 + 72) = v130;
    *(_QWORD *)(a1 + 80) = v8;
    v87 = *(_QWORD *)(a1 + 88);
    v88 = *(_QWORD *)(a1 + 96);
    *(_QWORD *)(a1 + 88) = v81;
    *(_QWORD *)(a1 + 96) = v9;
    v89 = *(_QWORD *)(a1 + 104);
    v90 = *(_QWORD *)(a1 + 112);
    *(_QWORD *)(a1 + 104) = v82;
    *(_QWORD *)(a1 + 112) = v10;
    v91 = *(_OWORD *)(a1 + 120);
    *(_QWORD *)(a1 + 120) = v142;
    *(_QWORD *)(a1 + 128) = v11;
    v92 = *(_OWORD *)(a1 + 136);
    *(_QWORD *)(a1 + 136) = v146;
    *(_QWORD *)(a1 + 144) = v150;
    v93 = *(_OWORD *)(a1 + 152);
    *(_QWORD *)(a1 + 152) = v154;
    *(_QWORD *)(a1 + 160) = v12;
    v94 = *(_OWORD *)(a1 + 168);
    *(_QWORD *)(a1 + 168) = v158;
    *(_QWORD *)(a1 + 176) = v13;
    v95 = *(_OWORD *)(a1 + 184);
    *(_QWORD *)(a1 + 184) = v162;
    *(_QWORD *)(a1 + 192) = v190;
    v96 = *(_OWORD *)(a1 + 200);
    *(_QWORD *)(a1 + 200) = v166;
    *(_QWORD *)(a1 + 208) = v170;
    v97 = *(_OWORD *)(a1 + 216);
    *(_QWORD *)(a1 + 216) = v174;
    *(_QWORD *)(a1 + 224) = v178;
    v98 = *(_QWORD *)(a1 + 232);
    v99 = *(_QWORD *)(a1 + 240);
    *(_QWORD *)(a1 + 232) = v182;
    *(_QWORD *)(a1 + 240) = v186;
    sub_1AD00E8B0(v83, v84, v85, v86, v87, v88, v89, v90, v91, *((uint64_t *)&v91 + 1), v92, *((uint64_t *)&v92 + 1), v93, *((uint64_t *)&v93 + 1), v94, *((uint64_t *)&v94 + 1), v95, *((unint64_t *)&v95 + 1), v96,
      *((uint64_t *)&v96 + 1),
      v97,
      *((uint64_t *)&v97 + 1),
      v98,
      v99);
  }
LABEL_35:
  v102 = *((_QWORD *)a2 + 36);
  v103 = *((_QWORD *)a2 + 37);
  v132 = *((_QWORD *)a2 + 39);
  v136 = *((_QWORD *)a2 + 40);
  v140 = *((_QWORD *)a2 + 41);
  v144 = *((_QWORD *)a2 + 42);
  v148 = *((_QWORD *)a2 + 43);
  v152 = *((_QWORD *)a2 + 44);
  v156 = *((_QWORD *)a2 + 45);
  v160 = *((_QWORD *)a2 + 46);
  v164 = *((_QWORD *)a2 + 47);
  v168 = *((_QWORD *)a2 + 48);
  v172 = *((_QWORD *)a2 + 49);
  v176 = *((_QWORD *)a2 + 50);
  v180 = *((_QWORD *)a2 + 51);
  v184 = *((_QWORD *)a2 + 52);
  v188 = *((_QWORD *)a2 + 53);
  v192 = *((_QWORD *)a2 + 54);
  v104 = *((_QWORD *)a2 + 31);
  v105 = *((_QWORD *)a2 + 32);
  v106 = *((_QWORD *)a2 + 33);
  v107 = *((_QWORD *)a2 + 34);
  v108 = *((_QWORD *)a2 + 35);
  v109 = *((_QWORD *)a2 + 38);
  sub_1AD00FEAC(v104, v105, v106, v107, v108, v102, v103, v109, v132, v136, v140, v144, v148, v152, v156, v160, v164, v168, v172,
    v176,
    v180,
    v184,
    v188,
    v192);
  v110 = *(_QWORD *)(a1 + 248);
  *(_QWORD *)(a1 + 248) = v104;
  v111 = *(_QWORD *)(a1 + 256);
  v112 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = v105;
  *(_QWORD *)(a1 + 264) = v106;
  v113 = *(_QWORD *)(a1 + 272);
  v114 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 272) = v107;
  *(_QWORD *)(a1 + 280) = v108;
  v115 = *(_QWORD *)(a1 + 288);
  v116 = *(_QWORD *)(a1 + 296);
  *(_QWORD *)(a1 + 288) = v102;
  *(_QWORD *)(a1 + 296) = v103;
  v117 = *(_QWORD *)(a1 + 304);
  *(_QWORD *)(a1 + 304) = v109;
  v118 = *(_OWORD *)(a1 + 312);
  v119 = *(_OWORD *)(a1 + 328);
  *(_QWORD *)(a1 + 312) = v132;
  *(_QWORD *)(a1 + 320) = v136;
  *(_QWORD *)(a1 + 328) = v140;
  *(_QWORD *)(a1 + 336) = v144;
  v120 = *(_OWORD *)(a1 + 344);
  v121 = *(_OWORD *)(a1 + 360);
  *(_QWORD *)(a1 + 344) = v148;
  *(_QWORD *)(a1 + 352) = v152;
  *(_QWORD *)(a1 + 360) = v156;
  *(_QWORD *)(a1 + 368) = v160;
  v122 = *(_OWORD *)(a1 + 376);
  v123 = *(_OWORD *)(a1 + 392);
  *(_QWORD *)(a1 + 376) = v164;
  *(_QWORD *)(a1 + 384) = v168;
  *(_QWORD *)(a1 + 392) = v172;
  *(_QWORD *)(a1 + 400) = v176;
  v124 = *(_OWORD *)(a1 + 408);
  *(_QWORD *)(a1 + 408) = v180;
  v125 = *(_QWORD *)(a1 + 424);
  v126 = *(_QWORD *)(a1 + 432);
  *(_QWORD *)(a1 + 416) = v184;
  *(_QWORD *)(a1 + 424) = v188;
  *(_QWORD *)(a1 + 432) = v192;
  sub_1AD00E8B0(v110, v111, v112, v113, v114, v115, v116, v117, v118, *((uint64_t *)&v118 + 1), v119, *((uint64_t *)&v119 + 1), v120, *((uint64_t *)&v120 + 1), v121, *((uint64_t *)&v121 + 1), v122, *((unint64_t *)&v122 + 1), v123,
    *((uint64_t *)&v123 + 1),
    v124,
    *((uint64_t *)&v124 + 1),
    v125,
    v126);
  *(_QWORD *)(a1 + 440) = *((_QWORD *)a2 + 55);
  v127 = *((_QWORD *)a2 + 56);
  *(_BYTE *)(a1 + 456) = *((_BYTE *)a2 + 456);
  *(_QWORD *)(a1 + 448) = v127;
  *(_BYTE *)(a1 + 457) = *v193;
  *(_BYTE *)(a1 + 458) = *((_BYTE *)a2 + 458);
  *(_QWORD *)(a1 + 464) = *((_QWORD *)a2 + 58);
  *(_QWORD *)(a1 + 472) = *((_QWORD *)a2 + 59);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 480) = v193[23];
  *(_QWORD *)(a1 + 488) = *((_QWORD *)a2 + 61);
  *(_QWORD *)(a1 + 496) = *((_QWORD *)a2 + 62);
  return a1;
}

void *__swift_memcpy504_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1F8uLL);
}

uint64_t assignWithTake for PreviewImage(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  uint64_t v50;
  unint64_t v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;

  v4 = (_OWORD *)(a1 + 264);
  v5 = a2 + 264;
  if (!*(_QWORD *)(a1 + 24))
    goto LABEL_14;
  if (!*(_QWORD *)(a2 + 24))
  {
    sub_1AD046A30((_QWORD *)a1);
LABEL_14:
    v28 = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 208) = v28;
    *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
    *(_QWORD *)(a1 + 240) = *(_QWORD *)(a2 + 240);
    v29 = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 144) = v29;
    v30 = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 176) = v30;
    v31 = *(_OWORD *)(a2 + 80);
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 80) = v31;
    v32 = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 112) = v32;
    v33 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v33;
    v34 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v34;
    goto LABEL_15;
  }
  __swift_destroy_boxed_opaque_existential_1(a1);
  v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  *(_BYTE *)(a1 + 48) = *(_BYTE *)(a2 + 48);
  v8 = *(_QWORD *)(a1 + 80);
  v9 = *(_QWORD *)(a1 + 96);
  v10 = *(_QWORD *)(a1 + 112);
  v11 = *(_QWORD *)(a1 + 128);
  v12 = *(_QWORD *)(a1 + 160);
  v13 = *(_QWORD *)(a1 + 176);
  v14 = *(_QWORD *)(a1 + 192);
  v15 = *(_QWORD *)(a2 + 80);
  v16 = *(_QWORD *)(a2 + 96);
  v17 = *(_QWORD *)(a2 + 112);
  v18 = *(_QWORD *)(a2 + 128);
  v19 = *(_QWORD *)(a2 + 160);
  v20 = *(_QWORD *)(a2 + 176);
  v21 = *(_QWORD *)(a2 + 192);
  if (v8 >> 1 != 0xFFFFFFFF
    || (v10 | (unint64_t)v9) > 1
    || v12 & 0xFFFFFFFFFFFFFEFELL | v11 & 0xFFFFFFFFFFFF00FELL
    || (v14 | v13) >= 2)
  {
    if (v15 >> 1 != 0xFFFFFFFF
      || (v17 | v16) > 1
      || v19 & 0xFFFFFFFFFFFFFEFELL | v18 & 0xFFFFFFFFFFFF00FELL
      || (v21 | v20) >= 2)
    {
      v61 = *(_QWORD *)(a2 + 72);
      v62 = *(_QWORD *)(a2 + 88);
      v63 = *(_QWORD *)(a2 + 104);
      v64 = *(_QWORD *)(a2 + 120);
      v65 = *(_QWORD *)(a2 + 152);
      v66 = *(_QWORD *)(a2 + 168);
      v67 = *(_QWORD *)(a2 + 184);
      v78 = *(_QWORD *)(a1 + 64);
      v79 = *(_QWORD *)(a1 + 56);
      v77 = *(_QWORD *)(a1 + 72);
      v80 = *(_QWORD *)(a1 + 88);
      v81 = *(_QWORD *)(a1 + 104);
      v68 = *(_OWORD *)(a1 + 136);
      v75 = *(_QWORD *)(a1 + 152);
      v76 = *(_QWORD *)(a1 + 120);
      v69 = *(_QWORD *)(a1 + 168);
      v70 = *(_QWORD *)(a1 + 184);
      v71 = *(_OWORD *)(a1 + 200);
      v72 = *(_OWORD *)(a1 + 216);
      v74 = *(_QWORD *)(a1 + 232);
      v73 = *(_QWORD *)(a1 + 240);
      *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 72) = v61;
      *(_QWORD *)(a1 + 80) = v15;
      *(_QWORD *)(a1 + 88) = v62;
      *(_QWORD *)(a1 + 96) = v16;
      *(_QWORD *)(a1 + 104) = v63;
      *(_QWORD *)(a1 + 112) = v17;
      *(_QWORD *)(a1 + 120) = v64;
      *(_QWORD *)(a1 + 128) = v18;
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_QWORD *)(a1 + 152) = v65;
      *(_QWORD *)(a1 + 160) = v19;
      *(_QWORD *)(a1 + 168) = v66;
      *(_QWORD *)(a1 + 176) = v20;
      *(_QWORD *)(a1 + 184) = v67;
      *(_QWORD *)(a1 + 192) = v21;
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      sub_1AD00E8B0(v79, v78, v77, v8, v80, v9, v81, v10, v76, v11, v68, *((uint64_t *)&v68 + 1), v75, v12, v69, v13, v70, v14, v71,
        *((uint64_t *)&v71 + 1),
        v72,
        *((uint64_t *)&v72 + 1),
        v74,
        v73);
      goto LABEL_15;
    }
    sub_1AD148B34(a1 + 56);
  }
  v22 = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = v22;
  v23 = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = v23;
  v24 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v24;
  v25 = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = v25;
  v26 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = v26;
  v27 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v27;
LABEL_15:
  v35 = *(_QWORD *)(a1 + 248);
  v36 = *(_QWORD *)(a1 + 256);
  v37 = *(_QWORD *)(a1 + 264);
  v38 = *(_QWORD *)(a1 + 272);
  v39 = *(_QWORD *)(a1 + 280);
  v40 = *(_QWORD *)(a1 + 288);
  v41 = *(_QWORD *)(a1 + 296);
  v42 = *(_QWORD *)(a1 + 304);
  v43 = *(_OWORD *)(a1 + 312);
  v44 = *(_OWORD *)(a1 + 328);
  v45 = *(_OWORD *)(a1 + 344);
  v46 = *(_OWORD *)(a1 + 360);
  v47 = *(_OWORD *)(a1 + 376);
  v48 = *(_OWORD *)(a1 + 392);
  v49 = *(_OWORD *)(a1 + 408);
  v50 = *(_QWORD *)(a1 + 424);
  v51 = *(_QWORD *)(a1 + 432);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  v52 = *(_OWORD *)(v5 + 16);
  *v4 = *(_OWORD *)v5;
  v4[1] = v52;
  v53 = *(_OWORD *)(v5 + 48);
  v4[2] = *(_OWORD *)(v5 + 32);
  v4[3] = v53;
  v54 = *(_OWORD *)(v5 + 80);
  v4[4] = *(_OWORD *)(v5 + 64);
  v4[5] = v54;
  v55 = *(_OWORD *)(v5 + 112);
  v4[6] = *(_OWORD *)(v5 + 96);
  v4[7] = v55;
  v56 = *(_OWORD *)(v5 + 144);
  v4[8] = *(_OWORD *)(v5 + 128);
  v4[9] = v56;
  v4[10] = *(_OWORD *)(v5 + 160);
  sub_1AD00E8B0(v35, v36, v37, v38, v39, v40, v41, v42, v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45, *((uint64_t *)&v45 + 1), v46, *((uint64_t *)&v46 + 1), v47, *((unint64_t *)&v47 + 1), v48,
    *((uint64_t *)&v48 + 1),
    v49,
    *((uint64_t *)&v49 + 1),
    v50,
    v51);
  v57 = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 448) = v57;
  *(_BYTE *)(a1 + 456) = *(_BYTE *)(a2 + 456);
  *(_BYTE *)(a1 + 457) = *(_BYTE *)(v5 + 193);
  *(_BYTE *)(a1 + 458) = *(_BYTE *)(a2 + 458);
  v58 = *(_QWORD *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 472) = v58;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 480) = *(_BYTE *)(v5 + 216);
  v59 = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 488) = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 496) = v59;
  return a1;
}

uint64_t getEnumTagSinglePayload for PreviewImage(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 504))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 272) >> 1;
  if (v2 > 0x80000000)
    v3 = ~(_DWORD)v2;
  else
    v3 = -1;
  return (v3 + 1);
}

double storeEnumTagSinglePayload for PreviewImage(uint64_t a1, int a2, int a3)
{
  double result;
  uint64_t v4;

  if (a2 < 0)
  {
    result = 0.0;
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(_QWORD *)a1 = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(a1 + 504) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(a1 + 248) = 0;
      *(_QWORD *)(a1 + 256) = 0;
      v4 = a1 + 248;
      *(_QWORD *)(v4 + 16) = 0;
      *(_QWORD *)(v4 + 24) = 2 * -a2;
      result = 0.0;
      *(_OWORD *)(v4 + 32) = 0u;
      *(_OWORD *)(v4 + 48) = 0u;
      *(_OWORD *)(v4 + 64) = 0u;
      *(_OWORD *)(v4 + 80) = 0u;
      *(_OWORD *)(v4 + 96) = 0u;
      *(_OWORD *)(v4 + 112) = 0u;
      *(_OWORD *)(v4 + 128) = 0u;
      *(_OWORD *)(v4 + 144) = 0u;
      *(_OWORD *)(v4 + 160) = 0u;
      *(_OWORD *)(v4 + 176) = 0u;
      return result;
    }
    *(_BYTE *)(a1 + 504) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewImage()
{
  return &type metadata for PreviewImage;
}

uint64_t getEnumTagSinglePayload for PreviewImage.Constraints(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  BOOL v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFF && *(_BYTE *)(a1 + 33))
    return (*(_DWORD *)a1 + 255);
  v3 = *(unsigned __int8 *)(a1 + 32);
  v4 = v3 >= 2;
  v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for PreviewImage.Constraints(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 33) = 0;
    if (a2)
      *(_BYTE *)(result + 32) = a2 + 1;
  }
  return result;
}

ValueMetadata *type metadata accessor for PreviewImage.Constraints()
{
  return &type metadata for PreviewImage.Constraints;
}

uint64_t storeEnumTagSinglePayload for PreviewImage.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1AD5A28D0 + 4 * byte_1AD695EFE[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1AD5A2904 + 4 * byte_1AD695EF9[v4]))();
}

uint64_t sub_1AD5A2904(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A290C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5A2914);
  return result;
}

uint64_t sub_1AD5A2920(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5A2928);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1AD5A292C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A2934(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewImage.CodingKeys()
{
  return &type metadata for PreviewImage.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for PreviewImage.Constraints.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD5A299C + 4 * byte_1AD695F08[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD5A29D0 + 4 * byte_1AD695F03[v4]))();
}

uint64_t sub_1AD5A29D0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A29D8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5A29E0);
  return result;
}

uint64_t sub_1AD5A29EC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5A29F4);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD5A29F8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A2A00(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PreviewImage.Constraints.CodingKeys()
{
  return &type metadata for PreviewImage.Constraints.CodingKeys;
}

unint64_t sub_1AD5A2A20()
{
  unint64_t result;

  result = qword_1EECDE7F0;
  if (!qword_1EECDE7F0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6960E0, &type metadata for PreviewImage.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDE7F0);
  }
  return result;
}

unint64_t sub_1AD5A2A68()
{
  unint64_t result;

  result = qword_1EECDE7F8;
  if (!qword_1EECDE7F8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696198, &type metadata for PreviewImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDE7F8);
  }
  return result;
}

unint64_t sub_1AD5A2AB0()
{
  unint64_t result;

  result = qword_1ED2E2E58;
  if (!qword_1ED2E2E58)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696108, &type metadata for PreviewImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E58);
  }
  return result;
}

unint64_t sub_1AD5A2AF8()
{
  unint64_t result;

  result = qword_1ED2E2E50;
  if (!qword_1ED2E2E50)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696130, &type metadata for PreviewImage.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E50);
  }
  return result;
}

unint64_t sub_1AD5A2B40()
{
  unint64_t result;

  result = qword_1ED2E2E70;
  if (!qword_1ED2E2E70)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696050, &type metadata for PreviewImage.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E70);
  }
  return result;
}

unint64_t sub_1AD5A2B88()
{
  unint64_t result;

  result = qword_1ED2E2E68;
  if (!qword_1ED2E2E68)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696078, &type metadata for PreviewImage.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E2E68);
  }
  return result;
}

uint64_t sub_1AD5A2BCC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6567616D69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x756F43656D617266 && a2 == 0xEA0000000000746ELL || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x727544656D617266 && a2 == 0xED00006E6F697461 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E65657263537369 && a2 == 0xEC000000746F6873 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x4572656B63697473 && a2 == 0xED00007463656666 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7453657079547475 && a2 == 0xEC000000676E6972 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6B736F6E6F4D7369 && a2 == 0xEE00746573734169 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E656D6E67696C61 && a2 == 0xEE007465736E4974)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t sub_1AD5A2FD8(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0xD000000000000011 && a2 == 0x80000001AD69FE30 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7865646E69 && a2 == 0xE500000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E756F4378616DLL && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x49696A6F6D457369 && a2 == 0xEC0000006567616DLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

uint64_t ChangeEvent.Trigger.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BlastDoor::ChangeEvent::Trigger_optional __swiftcall ChangeEvent.Trigger.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (BlastDoor::ChangeEvent::Trigger_optional)rawValue;
}

BlastDoor::ChangeEvent::Trigger_optional sub_1AD5A3218(Swift::Int *a1)
{
  return ChangeEvent.Trigger.init(rawValue:)(*a1);
}

uint64_t sub_1AD5A3220()
{
  sub_1AD5A6720();
  return sub_1AD63B930();
}

uint64_t sub_1AD5A327C()
{
  sub_1AD5A6720();
  return sub_1AD63B8D0();
}

void ChangeEvent.type.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *ChangeEvent.type.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*ChangeEvent.type.modify())()
{
  return nullsub_1;
}

uint64_t ChangeEvent.highlightURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD5A3628(type metadata accessor for ChangeEvent, a1);
}

uint64_t type metadata accessor for ChangeEvent(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2DABA0);
}

uint64_t ChangeEvent.highlightURL.setter(uint64_t a1)
{
  return sub_1AD5A3694(a1, type metadata accessor for ChangeEvent);
}

uint64_t (*ChangeEvent.highlightURL.modify())(_QWORD)
{
  type metadata accessor for ChangeEvent(0);
  return nullsub_1;
}

uint64_t MentionEvent.mentionedPersonHandle.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t MentionEvent.mentionedPersonHandle.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*MentionEvent.mentionedPersonHandle.modify())()
{
  return nullsub_1;
}

uint64_t MentionEvent.mentionedPersonIdentity.getter@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v2 = v1[2];
  v3 = v1[3];
  v4 = v1[4];
  v5 = v1[5];
  v6 = v1[6];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  return sub_1AD5A33D0(v2, v3, v4, v5, v6);
}

uint64_t sub_1AD5A33D0(uint64_t result, unint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  if (a3)
  {
    sub_1AD0040A0(result, a2);
    swift_bridgeObjectRetain();
    return sub_1AD00408C(a4, a5);
  }
  return result;
}

__n128 MentionEvent.mentionedPersonIdentity.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;
  __int128 v5;

  v4 = (__n128)a1[1];
  v5 = *a1;
  v2 = *((_QWORD *)a1 + 4);
  sub_1AD286A04(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(_QWORD *)(v1 + 48));
  result = v4;
  *(_OWORD *)(v1 + 16) = v5;
  *(__n128 *)(v1 + 32) = v4;
  *(_QWORD *)(v1 + 48) = v2;
  return result;
}

uint64_t (*MentionEvent.mentionedPersonIdentity.modify())()
{
  return nullsub_1;
}

uint64_t MentionEvent.highlightURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MentionEvent(0) + 24);
  v4 = sub_1AD63AF28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for MentionEvent(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2DABB0);
}

uint64_t MentionEvent.highlightURL.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for MentionEvent(0) + 24);
  v4 = sub_1AD63AF28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*MentionEvent.highlightURL.modify())(_QWORD)
{
  type metadata accessor for MentionEvent(0);
  return nullsub_1;
}

unint64_t _s9BlastDoor11ChangeEventV7TriggerO18defaultingRawValue07defaultH0AESiSg_AEtcfC_0@<X0>(unint64_t result@<X0>, char a2@<W1>, char *a3@<X2>, _BYTE *a4@<X8>)
{
  char v4;
  unint64_t v5;

  v4 = *a3;
  if ((a2 & 1) != 0)
    v5 = *a3;
  else
    v5 = result;
  if (v5 < 3)
    v4 = v5;
  *a4 = v4;
  return result;
}

uint64_t sub_1AD5A3564()
{
  sub_1AD5A66DC();
  return sub_1AD63B930();
}

uint64_t sub_1AD5A35C0()
{
  sub_1AD5A66DC();
  return sub_1AD63B8D0();
}

uint64_t (*sub_1AD5A360C())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A361C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD5A3628(type metadata accessor for MembershipEvent, a1);
}

uint64_t sub_1AD5A3628@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1(0) + 20);
  v5 = sub_1AD63AF28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t type metadata accessor for MembershipEvent(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2DABC0);
}

uint64_t sub_1AD5A3688(uint64_t a1)
{
  return sub_1AD5A3694(a1, type metadata accessor for MembershipEvent);
}

uint64_t sub_1AD5A3694(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2(0) + 20);
  v5 = sub_1AD63AF28();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_1AD5A36DC())(_QWORD)
{
  type metadata accessor for MembershipEvent(0);
  return nullsub_1;
}

unint64_t sub_1AD5A3704@<X0>(unint64_t result@<X0>, char a2@<W1>, char *a3@<X2>, _BYTE *a4@<X8>)
{
  char v4;
  unint64_t v5;

  v4 = *a3;
  if ((a2 & 1) != 0)
    v5 = *a3;
  else
    v5 = result;
  if (v5 < 5)
    v4 = v5;
  *a4 = v4;
  return result;
}

unint64_t sub_1AD5A3720@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 5;
  if (result < 5)
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t sub_1AD5A3734@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD5A3720(*a1, a2);
}

uint64_t sub_1AD5A373C()
{
  sub_1AD5A6698();
  return sub_1AD63B930();
}

uint64_t sub_1AD5A3798()
{
  sub_1AD5A6698();
  return sub_1AD63B8D0();
}

uint64_t (*sub_1AD5A37E4())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A37F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD5A3628(type metadata accessor for PersistenceEvent, a1);
}

uint64_t type metadata accessor for PersistenceEvent(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2DABD0);
}

uint64_t sub_1AD5A3814(uint64_t a1)
{
  return sub_1AD5A3694(a1, type metadata accessor for PersistenceEvent);
}

uint64_t (*sub_1AD5A3820())(_QWORD)
{
  type metadata accessor for PersistenceEvent(0);
  return nullsub_1;
}

uint64_t sub_1AD5A3848()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1AD5A3850(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD5A3858())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A3868()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD5A3894(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*sub_1AD5A38C8())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A38D8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CollaborationNotice(0) + 24);
  return sub_1AD5A391C(v3, a1);
}

uint64_t type metadata accessor for CollaborationNotice(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2DABE0);
}

uint64_t sub_1AD5A391C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CollaborationHighlightEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for CollaborationHighlightEvent(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1ED2DAC48);
}

uint64_t sub_1AD5A3974(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CollaborationNotice(0) + 24);
  return sub_1AD5A39A4(a1, v3);
}

uint64_t sub_1AD5A39A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for CollaborationHighlightEvent(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD5A39E8())(_QWORD)
{
  type metadata accessor for CollaborationNotice(0);
  return nullsub_1;
}

uint64_t sub_1AD5A3A10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CollaborationNotice(0) + 28);
  v4 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1AD5A3A58(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for CollaborationNotice(0) + 28);
  v4 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*sub_1AD5A3AA0())(_QWORD)
{
  type metadata accessor for CollaborationNotice(0);
  return nullsub_1;
}

unint64_t sub_1AD5A3ACC()
{
  unint64_t result;

  result = qword_1EECDE800;
  if (!qword_1EECDE800)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for ChangeEvent.Trigger, &type metadata for ChangeEvent.Trigger);
    atomic_store(result, (unint64_t *)&qword_1EECDE800);
  }
  return result;
}

uint64_t sub_1AD5A3B10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD286938, (uint64_t (*)(void))sub_1AD28697C);
}

uint64_t sub_1AD5A3B24(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD6FA8, type metadata accessor for ChangeEvent, (uint64_t)&protocol conformance descriptor for ChangeEvent);
  result = sub_1ACFF9724(&qword_1EECD6F78, type metadata accessor for ChangeEvent, (uint64_t)&protocol conformance descriptor for ChangeEvent);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD5A3B80(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD6FA0, type metadata accessor for MentionEvent, (uint64_t)&protocol conformance descriptor for MentionEvent);
  result = sub_1ACFF9724(&qword_1EECD6F70, type metadata accessor for MentionEvent, (uint64_t)"qph8ĥd8");
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD5A3BE0()
{
  unint64_t result;

  result = qword_1EECDE808;
  if (!qword_1EECDE808)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6963E8, &type metadata for MembershipEvent.Trigger);
    atomic_store(result, (unint64_t *)&qword_1EECDE808);
  }
  return result;
}

uint64_t sub_1AD5A3C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD286A90, (uint64_t (*)(void))sub_1AD286AD4);
}

uint64_t sub_1AD5A3C38(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD6F98, type metadata accessor for MembershipEvent, (uint64_t)&unk_1AD650138);
  result = sub_1ACFF9724(&qword_1EECD6F68, type metadata accessor for MembershipEvent, (uint64_t)&unk_1AD650160);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD5A3C98()
{
  unint64_t result;

  result = qword_1EECDE810;
  if (!qword_1EECDE810)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696510, &type metadata for PersistenceEvent.Trigger);
    atomic_store(result, (unint64_t *)&qword_1EECDE810);
  }
  return result;
}

uint64_t sub_1AD5A3CDC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD286B5C, (uint64_t (*)(void))sub_1AD286BA0);
}

uint64_t sub_1AD5A3CF0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD6F90, type metadata accessor for PersistenceEvent, (uint64_t)&unk_1AD650188);
  result = sub_1ACFF9724(&qword_1EECD6F60, type metadata accessor for PersistenceEvent, (uint64_t)&unk_1AD6501B0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD5A3D4C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECD2E18, type metadata accessor for CollaborationHighlightEvent, (uint64_t)&unk_1AD656F38);
  result = sub_1ACFF9724(&qword_1EECD2E28, type metadata accessor for CollaborationHighlightEvent, (uint64_t)&unk_1AD656F60);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD5A3DA8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1EECDE818, type metadata accessor for CollaborationNotice, (uint64_t)&unk_1AD6501D8);
  result = sub_1ACFF9724(&qword_1EECDE820, type metadata accessor for CollaborationNotice, (uint64_t)&unk_1AD650200);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t getEnumTagSinglePayload for ChangeEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for ChangeEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5A3E3C()
{
  return sub_1AD5A49CC();
}

ValueMetadata *type metadata accessor for ChangeEvent.Trigger()
{
  return &type metadata for ChangeEvent.Trigger;
}

uint64_t initializeBufferWithCopyOfBuffer for MentionEvent(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v13 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v7;
    v8 = a2[4];
    swift_bridgeObjectRetain();
    if (v8)
    {
      v9 = a2[2];
      v10 = a2[3];
      sub_1AD0040A0(v9, v10);
      *(_QWORD *)(a1 + 16) = v9;
      *(_QWORD *)(a1 + 24) = v10;
      *(_QWORD *)(a1 + 32) = v8;
      v11 = a2 + 5;
      v12 = a2[6];
      swift_bridgeObjectRetain();
      if (v12 >> 60 == 15)
      {
        *(_OWORD *)(a1 + 40) = *(_OWORD *)v11;
      }
      else
      {
        v15 = *v11;
        sub_1AD0040A0(*v11, v12);
        *(_QWORD *)(a1 + 40) = v15;
        *(_QWORD *)(a1 + 48) = v12;
      }
    }
    else
    {
      v14 = *((_OWORD *)a2 + 2);
      *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
      *(_OWORD *)(a1 + 32) = v14;
      *(_QWORD *)(a1 + 48) = a2[6];
    }
    v16 = *(int *)(a3 + 24);
    v17 = a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_1AD63AF28();
    (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for MentionEvent(_QWORD *a1, uint64_t a2)
{
  unint64_t v4;
  char *v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  if (a1[4])
  {
    sub_1AD00412C(a1[2], a1[3]);
    swift_bridgeObjectRelease();
    v4 = a1[6];
    if (v4 >> 60 != 15)
      sub_1AD00412C(a1[5], v4);
  }
  v5 = (char *)a1 + *(int *)(a2 + 24);
  v6 = sub_1AD63AF28();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t initializeWithCopy for MentionEvent(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t *v10;
  unint64_t v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *(_QWORD *)(a1 + 8) = v6;
  v7 = a2[4];
  swift_bridgeObjectRetain();
  if (v7)
  {
    v8 = a2[2];
    v9 = a2[3];
    sub_1AD0040A0(v8, v9);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v7;
    v10 = a2 + 5;
    v11 = a2[6];
    swift_bridgeObjectRetain();
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)(a1 + 40) = *(_OWORD *)v10;
    }
    else
    {
      v13 = *v10;
      sub_1AD0040A0(*v10, v11);
      *(_QWORD *)(a1 + 40) = v13;
      *(_QWORD *)(a1 + 48) = v11;
    }
  }
  else
  {
    v12 = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    *(_OWORD *)(a1 + 32) = v12;
    *(_QWORD *)(a1 + 48) = a2[6];
  }
  v14 = *(int *)(a3 + 24);
  v15 = a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_1AD63AF28();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

_QWORD *assignWithCopy for MentionEvent(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _OWORD *v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = a1 + 2;
  v7 = a2 + 2;
  v8 = a2[4];
  if (a1[4])
  {
    if (v8)
    {
      v9 = a2[2];
      v10 = a2[3];
      sub_1AD0040A0(v9, v10);
      v11 = a1[2];
      v12 = a1[3];
      a1[2] = v9;
      a1[3] = v10;
      sub_1AD00412C(v11, v12);
      a1[4] = a2[4];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13 = a2 + 5;
      v14 = a2[6];
      if (a1[6] >> 60 == 15)
      {
        if (v14 >> 60 != 15)
        {
          v15 = *v13;
LABEL_15:
          sub_1AD0040A0(v15, v14);
          a1[5] = v15;
          a1[6] = v14;
          goto LABEL_17;
        }
      }
      else
      {
        if (v14 >> 60 != 15)
        {
          v23 = *v13;
          sub_1AD0040A0(*v13, a2[6]);
          v24 = a1[5];
          v25 = a1[6];
          a1[5] = v23;
          a1[6] = v14;
          sub_1AD00412C(v24, v25);
          goto LABEL_17;
        }
        sub_1AD007EC0((uint64_t)(a1 + 5));
      }
      *(_OWORD *)(a1 + 5) = *(_OWORD *)v13;
    }
    else
    {
      sub_1AD5A42AC(a1 + 2);
      v19 = a2[6];
      v20 = *((_OWORD *)a2 + 2);
      *v6 = *v7;
      *((_OWORD *)a1 + 2) = v20;
      a1[6] = v19;
    }
  }
  else if (v8)
  {
    v16 = a2[2];
    v17 = a2[3];
    sub_1AD0040A0(v16, v17);
    a1[2] = v16;
    a1[3] = v17;
    a1[4] = a2[4];
    v18 = a2 + 5;
    v14 = a2[6];
    swift_bridgeObjectRetain();
    if (v14 >> 60 != 15)
    {
      v15 = *v18;
      goto LABEL_15;
    }
    *(_OWORD *)(a1 + 5) = *(_OWORD *)v18;
  }
  else
  {
    v21 = *v7;
    v22 = *((_OWORD *)a2 + 2);
    a1[6] = a2[6];
    *v6 = v21;
    *((_OWORD *)a1 + 2) = v22;
  }
LABEL_17:
  v26 = *(int *)(a3 + 24);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_1AD63AF28();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  return a1;
}

uint64_t *sub_1AD5A42AC(uint64_t *a1)
{
  destroy for CollaborationMemberIdentity(a1);
  return a1;
}

uint64_t initializeWithTake for MentionEvent(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1AD63AF28();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for MentionEvent(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  _QWORD *v10;
  unint64_t v11;
  unint64_t v12;
  __int128 v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v6 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  if (!a1[4])
    goto LABEL_8;
  v7 = *(_QWORD *)(a2 + 32);
  if (!v7)
  {
    sub_1AD5A42AC(a1 + 2);
LABEL_8:
    v13 = *(_OWORD *)(a2 + 32);
    *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
    *((_OWORD *)a1 + 2) = v13;
    a1[6] = *(_QWORD *)(a2 + 48);
    goto LABEL_9;
  }
  v8 = a1[2];
  v9 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_1AD00412C(v8, v9);
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v10 = (_QWORD *)(a2 + 40);
  v11 = a1[6];
  if (v11 >> 60 != 15)
  {
    v12 = *(_QWORD *)(a2 + 48);
    if (v12 >> 60 != 15)
    {
      v19 = a1[5];
      a1[5] = *v10;
      a1[6] = v12;
      sub_1AD00412C(v19, v11);
      goto LABEL_9;
    }
    sub_1AD007EC0((uint64_t)(a1 + 5));
  }
  *(_OWORD *)(a1 + 5) = *(_OWORD *)v10;
LABEL_9:
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v14;
  v16 = a2 + v14;
  v17 = sub_1AD63AF28();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t getEnumTagSinglePayload for MentionEvent()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5A4468(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1AD63AF28();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for MentionEvent()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5A44F0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = sub_1AD63AF28();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AD5A4564()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63AF28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AD5A45E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5A45F0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t _s9BlastDoor11ChangeEventV7TriggerOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD5A464C + 4 * byte_1AD696265[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD5A4680 + 4 * byte_1AD696260[v4]))();
}

uint64_t sub_1AD5A4680(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A4688(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5A4690);
  return result;
}

uint64_t sub_1AD5A469C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5A46A4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD5A46A8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A46B0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for MembershipEvent.Trigger()
{
  return &type metadata for MembershipEvent.Trigger;
}

uint64_t *_s9BlastDoor11ChangeEventVwCP_0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_1AD63AF28();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_BYTE *_s9BlastDoor11ChangeEventVwcp_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1AD63AF28();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *_s9BlastDoor11ChangeEventVwca_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1AD63AF28();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *_s9BlastDoor11ChangeEventVwtk_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1AD63AF28();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *_s9BlastDoor11ChangeEventVwta_0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_1AD63AF28();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_1AD5A48C4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5A48D0(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  uint64_t v8;

  if ((_DWORD)a2 == 251)
  {
    v4 = *a1;
    if (v4 >= 5)
      return v4 - 4;
    else
      return 0;
  }
  else
  {
    v8 = sub_1AD63AF28();
    return (*(uint64_t (**)(unsigned __int8 *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1AD5A4944()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_1AD5A4950(_BYTE *result, uint64_t a2, int a3, uint64_t a4)
{
  _BYTE *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 251)
  {
    *result = a2 + 4;
  }
  else
  {
    v7 = sub_1AD63AF28();
    return (_BYTE *)(*(uint64_t (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AD5A49C0()
{
  return sub_1AD5A49CC();
}

uint64_t sub_1AD5A49CC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63AF28();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for PersistenceEvent.Trigger(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD5A4A84 + 4 * byte_1AD69626F[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD5A4AB8 + 4 * byte_1AD69626A[v4]))();
}

uint64_t sub_1AD5A4AB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A4AC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5A4AC8);
  return result;
}

uint64_t sub_1AD5A4AD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5A4ADCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD5A4AE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A4AE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PersistenceEvent.Trigger()
{
  return &type metadata for PersistenceEvent.Trigger;
}

char *sub_1AD5A4B04(char *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  _OWORD *v17;
  unint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  __int128 v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v11 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *(_BYTE *)a2;
        v7 = *(int *)(type metadata accessor for ChangeEvent(0) + 20);
        v8 = &a1[v7];
        v9 = (char *)a2 + v7;
        v10 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
        swift_storeEnumTagMultiPayload();
        break;
      case 1u:
        v13 = a2[1];
        *(_QWORD *)a1 = *a2;
        *((_QWORD *)a1 + 1) = v13;
        v14 = a2[4];
        swift_bridgeObjectRetain();
        if (v14)
        {
          v15 = a2[2];
          v16 = a2[3];
          sub_1AD0040A0(v15, v16);
          *((_QWORD *)a1 + 2) = v15;
          *((_QWORD *)a1 + 3) = v16;
          *((_QWORD *)a1 + 4) = a2[4];
          v17 = a2 + 5;
          v18 = a2[6];
          swift_bridgeObjectRetain();
          if (v18 >> 60 == 15)
          {
            *(_OWORD *)(a1 + 40) = *v17;
          }
          else
          {
            v28 = *(_QWORD *)v17;
            sub_1AD0040A0(v28, v18);
            *((_QWORD *)a1 + 5) = v28;
            *((_QWORD *)a1 + 6) = v18;
          }
        }
        else
        {
          v27 = *((_OWORD *)a2 + 2);
          *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
          *((_OWORD *)a1 + 2) = v27;
          *((_QWORD *)a1 + 6) = a2[6];
        }
        v29 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
        v30 = &a1[v29];
        v31 = (char *)a2 + v29;
        v32 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a1 = *(_BYTE *)a2;
        v19 = *(int *)(type metadata accessor for MembershipEvent(0) + 20);
        v20 = &a1[v19];
        v21 = (char *)a2 + v19;
        v22 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
        swift_storeEnumTagMultiPayload();
        break;
      case 3u:
        *a1 = *(_BYTE *)a2;
        v23 = *(int *)(type metadata accessor for PersistenceEvent(0) + 20);
        v24 = &a1[v23];
        v25 = (char *)a2 + v23;
        v26 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1AD5A4D68(_QWORD *a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = type metadata accessor for ChangeEvent(0);
      goto LABEL_9;
    case 1:
      swift_bridgeObjectRelease();
      if (a1[4])
      {
        sub_1AD00412C(a1[2], a1[3]);
        swift_bridgeObjectRelease();
        v4 = a1[6];
        if (v4 >> 60 != 15)
          sub_1AD00412C(a1[5], v4);
      }
      v5 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
      goto LABEL_10;
    case 2:
      v3 = type metadata accessor for MembershipEvent(0);
      goto LABEL_9;
    case 3:
      v3 = type metadata accessor for PersistenceEvent(0);
LABEL_9:
      v5 = *(int *)(v3 + 20);
LABEL_10:
      v6 = (char *)a1 + v5;
      v7 = sub_1AD63AF28();
      result = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
      break;
    default:
      return result;
  }
  return result;
}

char *sub_1AD5A4E40(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _OWORD *v14;
  unint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for ChangeEvent(0) + 20);
      v7 = &a1[v6];
      v8 = &a2[v6];
      v9 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      goto LABEL_12;
    case 1u:
      v10 = *((_QWORD *)a2 + 1);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_QWORD *)a1 + 1) = v10;
      v11 = *((_QWORD *)a2 + 4);
      swift_bridgeObjectRetain();
      if (v11)
      {
        v12 = *((_QWORD *)a2 + 2);
        v13 = *((_QWORD *)a2 + 3);
        sub_1AD0040A0(v12, v13);
        *((_QWORD *)a1 + 2) = v12;
        *((_QWORD *)a1 + 3) = v13;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v14 = a2 + 40;
        v15 = *((_QWORD *)a2 + 6);
        swift_bridgeObjectRetain();
        if (v15 >> 60 == 15)
        {
          *(_OWORD *)(a1 + 40) = *v14;
        }
        else
        {
          v25 = *(_QWORD *)v14;
          sub_1AD0040A0(v25, v15);
          *((_QWORD *)a1 + 5) = v25;
          *((_QWORD *)a1 + 6) = v15;
        }
      }
      else
      {
        v24 = *((_OWORD *)a2 + 2);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        *((_OWORD *)a1 + 2) = v24;
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      }
      v26 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
      v27 = &a1[v26];
      v28 = &a2[v26];
      v29 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
      goto LABEL_12;
    case 2u:
      *a1 = *a2;
      v16 = *(int *)(type metadata accessor for MembershipEvent(0) + 20);
      v17 = &a1[v16];
      v18 = &a2[v16];
      v19 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
      goto LABEL_12;
    case 3u:
      *a1 = *a2;
      v20 = *(int *)(type metadata accessor for PersistenceEvent(0) + 20);
      v21 = &a1[v20];
      v22 = &a2[v20];
      v23 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

char *sub_1AD5A5070(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __int128 *v13;
  unint64_t v14;
  _OWORD *v15;
  __int128 v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  if (a1 != a2)
  {
    sub_1AD5A52B8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        v6 = *(int *)(type metadata accessor for ChangeEvent(0) + 20);
        v7 = &a1[v6];
        v8 = &a2[v6];
        v9 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
        goto LABEL_14;
      case 1u:
        *(_QWORD *)a1 = *(_QWORD *)a2;
        *((_QWORD *)a1 + 1) = *((_QWORD *)a2 + 1);
        v10 = *((_QWORD *)a2 + 4);
        swift_bridgeObjectRetain();
        if (!v10)
        {
          v15 = a1 + 16;
          v16 = *((_OWORD *)a2 + 1);
          v25 = *((_OWORD *)a2 + 2);
          *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
          *((_OWORD *)a1 + 2) = v25;
          goto LABEL_11;
        }
        v11 = *((_QWORD *)a2 + 2);
        v12 = *((_QWORD *)a2 + 3);
        sub_1AD0040A0(v11, v12);
        *((_QWORD *)a1 + 2) = v11;
        *((_QWORD *)a1 + 3) = v12;
        *((_QWORD *)a1 + 4) = *((_QWORD *)a2 + 4);
        v13 = (__int128 *)(a2 + 40);
        v14 = *((_QWORD *)a2 + 6);
        swift_bridgeObjectRetain();
        if (v14 >> 60 == 15)
        {
          v15 = a1 + 40;
          v16 = *v13;
LABEL_11:
          *v15 = v16;
          goto LABEL_13;
        }
        v26 = *(_QWORD *)v13;
        sub_1AD0040A0(v26, v14);
        *((_QWORD *)a1 + 5) = v26;
        *((_QWORD *)a1 + 6) = v14;
LABEL_13:
        v27 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
        v28 = &a1[v27];
        v29 = &a2[v27];
        v30 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for MembershipEvent(0) + 20);
        v18 = &a1[v17];
        v19 = &a2[v17];
        v20 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
        goto LABEL_14;
      case 3u:
        *a1 = *a2;
        v21 = *(int *)(type metadata accessor for PersistenceEvent(0) + 20);
        v22 = &a1[v21];
        v23 = &a2[v21];
        v24 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        goto LABEL_14;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_1AD5A52B8(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for CollaborationHighlightEvent(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1AD5A52F4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v6 = *(int *)(type metadata accessor for ChangeEvent(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      goto LABEL_7;
    case 1u:
      v10 = a2[1];
      *a1 = *a2;
      a1[1] = v10;
      a1[2] = a2[2];
      *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
      v11 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      goto LABEL_7;
    case 2u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v15 = *(int *)(type metadata accessor for MembershipEvent(0) + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      goto LABEL_7;
    case 3u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v19 = *(int *)(type metadata accessor for PersistenceEvent(0) + 20);
      v20 = (char *)a1 + v19;
      v21 = (char *)a2 + v19;
      v22 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_OWORD *sub_1AD5A54AC(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  if (a1 != a2)
  {
    sub_1AD5A52B8((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v6 = *(int *)(type metadata accessor for ChangeEvent(0) + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        goto LABEL_8;
      case 1u:
        v10 = a2[1];
        *a1 = *a2;
        a1[1] = v10;
        a1[2] = a2[2];
        *((_QWORD *)a1 + 6) = *((_QWORD *)a2 + 6);
        v11 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        goto LABEL_8;
      case 2u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v15 = *(int *)(type metadata accessor for MembershipEvent(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        goto LABEL_8;
      case 3u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v19 = *(int *)(type metadata accessor for PersistenceEvent(0) + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1AD5A5674()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for ChangeEvent(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for MentionEvent(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for MembershipEvent(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for PersistenceEvent(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_1AD5A572C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v7 = *(int *)(a3 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = type metadata accessor for CollaborationHighlightEvent(0);
    swift_bridgeObjectRetain();
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v8 = *v9;
        v11 = *(int *)(type metadata accessor for ChangeEvent(0) + 20);
        v12 = &v8[v11];
        v13 = &v9[v11];
        v14 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
        goto LABEL_14;
      case 1u:
        v16 = *((_QWORD *)v9 + 1);
        *(_QWORD *)v8 = *(_QWORD *)v9;
        *((_QWORD *)v8 + 1) = v16;
        v17 = *((_QWORD *)v9 + 4);
        swift_bridgeObjectRetain();
        if (v17)
        {
          v18 = *((_QWORD *)v9 + 2);
          v19 = *((_QWORD *)v9 + 3);
          sub_1AD0040A0(v18, v19);
          *((_QWORD *)v8 + 2) = v18;
          *((_QWORD *)v8 + 3) = v19;
          *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
          v20 = v9 + 40;
          v21 = *((_QWORD *)v9 + 6);
          swift_bridgeObjectRetain();
          if (v21 >> 60 == 15)
          {
            *(_OWORD *)(v8 + 40) = *v20;
          }
          else
          {
            v31 = *(_QWORD *)v20;
            sub_1AD0040A0(v31, v21);
            *((_QWORD *)v8 + 5) = v31;
            *((_QWORD *)v8 + 6) = v21;
          }
        }
        else
        {
          v30 = *((_OWORD *)v9 + 2);
          *((_OWORD *)v8 + 1) = *((_OWORD *)v9 + 1);
          *((_OWORD *)v8 + 2) = v30;
          *((_QWORD *)v8 + 6) = *((_QWORD *)v9 + 6);
        }
        v32 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
        v33 = &v8[v32];
        v34 = &v9[v32];
        v35 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
        goto LABEL_14;
      case 2u:
        *v8 = *v9;
        v22 = *(int *)(type metadata accessor for MembershipEvent(0) + 20);
        v23 = &v8[v22];
        v24 = &v9[v22];
        v25 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
        goto LABEL_14;
      case 3u:
        *v8 = *v9;
        v26 = *(int *)(type metadata accessor for PersistenceEvent(0) + 20);
        v27 = &v8[v26];
        v28 = &v9[v26];
        v29 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
        break;
    }
    v36 = *(int *)(a3 + 28);
    v37 = (char *)v4 + v36;
    v38 = (char *)a2 + v36;
    v39 = sub_1AD63B03C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return v4;
}

uint64_t sub_1AD5A59EC(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  swift_bridgeObjectRelease();
  v4 = (_QWORD *)(a1 + *(int *)(a2 + 24));
  type metadata accessor for CollaborationHighlightEvent(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      v5 = type metadata accessor for ChangeEvent(0);
      goto LABEL_9;
    case 1u:
      swift_bridgeObjectRelease();
      if (v4[4])
      {
        sub_1AD00412C(v4[2], v4[3]);
        swift_bridgeObjectRelease();
        v6 = v4[6];
        if (v6 >> 60 != 15)
          sub_1AD00412C(v4[5], v6);
      }
      v7 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
      goto LABEL_10;
    case 2u:
      v5 = type metadata accessor for MembershipEvent(0);
      goto LABEL_9;
    case 3u:
      v5 = type metadata accessor for PersistenceEvent(0);
LABEL_9:
      v7 = *(int *)(v5 + 20);
LABEL_10:
      v8 = (char *)v4 + v7;
      v9 = sub_1AD63AF28();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
      break;
    default:
      break;
  }
  v10 = a1 + *(int *)(a2 + 28);
  v11 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

uint64_t sub_1AD5A5B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _OWORD *v18;
  unint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  __int128 v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v6 = *(int *)(a3 + 24);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = type metadata accessor for CollaborationHighlightEvent(0);
  swift_bridgeObjectRetain();
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *v7 = *v8;
      v10 = *(int *)(type metadata accessor for ChangeEvent(0) + 20);
      v11 = &v7[v10];
      v12 = &v8[v10];
      v13 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
      goto LABEL_12;
    case 1u:
      v14 = *((_QWORD *)v8 + 1);
      *(_QWORD *)v7 = *(_QWORD *)v8;
      *((_QWORD *)v7 + 1) = v14;
      v15 = *((_QWORD *)v8 + 4);
      swift_bridgeObjectRetain();
      if (v15)
      {
        v16 = *((_QWORD *)v8 + 2);
        v17 = *((_QWORD *)v8 + 3);
        sub_1AD0040A0(v16, v17);
        *((_QWORD *)v7 + 2) = v16;
        *((_QWORD *)v7 + 3) = v17;
        *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
        v18 = v8 + 40;
        v19 = *((_QWORD *)v8 + 6);
        swift_bridgeObjectRetain();
        if (v19 >> 60 == 15)
        {
          *(_OWORD *)(v7 + 40) = *v18;
        }
        else
        {
          v29 = *(_QWORD *)v18;
          sub_1AD0040A0(v29, v19);
          *((_QWORD *)v7 + 5) = v29;
          *((_QWORD *)v7 + 6) = v19;
        }
      }
      else
      {
        v28 = *((_OWORD *)v8 + 2);
        *((_OWORD *)v7 + 1) = *((_OWORD *)v8 + 1);
        *((_OWORD *)v7 + 2) = v28;
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
      }
      v30 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
      v31 = &v7[v30];
      v32 = &v8[v30];
      v33 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v31, v32, v33);
      goto LABEL_12;
    case 2u:
      *v7 = *v8;
      v20 = *(int *)(type metadata accessor for MembershipEvent(0) + 20);
      v21 = &v7[v20];
      v22 = &v8[v20];
      v23 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
      goto LABEL_12;
    case 3u:
      *v7 = *v8;
      v24 = *(int *)(type metadata accessor for PersistenceEvent(0) + 20);
      v25 = &v7[v24];
      v26 = &v8[v24];
      v27 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
LABEL_12:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      break;
  }
  v34 = *(int *)(a3 + 28);
  v35 = a1 + v34;
  v36 = a2 + v34;
  v37 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

_QWORD *sub_1AD5A5D9C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 *v17;
  unint64_t v18;
  _OWORD *v19;
  __int128 v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    sub_1AD5A52B8((uint64_t)a1 + v6);
    v9 = type metadata accessor for CollaborationHighlightEvent(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *v7 = *v8;
        v10 = *(int *)(type metadata accessor for ChangeEvent(0) + 20);
        v11 = &v7[v10];
        v12 = &v8[v10];
        v13 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
        goto LABEL_14;
      case 1u:
        *(_QWORD *)v7 = *(_QWORD *)v8;
        *((_QWORD *)v7 + 1) = *((_QWORD *)v8 + 1);
        v14 = *((_QWORD *)v8 + 4);
        swift_bridgeObjectRetain();
        if (!v14)
        {
          v19 = v7 + 16;
          v20 = *((_OWORD *)v8 + 1);
          v29 = *((_OWORD *)v8 + 2);
          *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
          *((_OWORD *)v7 + 2) = v29;
          goto LABEL_11;
        }
        v15 = *((_QWORD *)v8 + 2);
        v16 = *((_QWORD *)v8 + 3);
        sub_1AD0040A0(v15, v16);
        *((_QWORD *)v7 + 2) = v15;
        *((_QWORD *)v7 + 3) = v16;
        *((_QWORD *)v7 + 4) = *((_QWORD *)v8 + 4);
        v17 = (__int128 *)(v8 + 40);
        v18 = *((_QWORD *)v8 + 6);
        swift_bridgeObjectRetain();
        if (v18 >> 60 == 15)
        {
          v19 = v7 + 40;
          v20 = *v17;
LABEL_11:
          *v19 = v20;
          goto LABEL_13;
        }
        v30 = *(_QWORD *)v17;
        sub_1AD0040A0(v30, v18);
        *((_QWORD *)v7 + 5) = v30;
        *((_QWORD *)v7 + 6) = v18;
LABEL_13:
        v31 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
        v32 = &v7[v31];
        v33 = &v8[v31];
        v34 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
LABEL_14:
        swift_storeEnumTagMultiPayload();
        break;
      case 2u:
        *v7 = *v8;
        v21 = *(int *)(type metadata accessor for MembershipEvent(0) + 20);
        v22 = &v7[v21];
        v23 = &v8[v21];
        v24 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        goto LABEL_14;
      case 3u:
        *v7 = *v8;
        v25 = *(int *)(type metadata accessor for PersistenceEvent(0) + 20);
        v26 = &v7[v25];
        v27 = &v8[v25];
        v28 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
        goto LABEL_14;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  v35 = *(int *)(a3 + 28);
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_1AD63B03C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 24))(v36, v37, v38);
  return a1;
}

uint64_t sub_1AD5A6058(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v6 = *(int *)(a3 + 24);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  v9 = type metadata accessor for CollaborationHighlightEvent(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *(_BYTE *)v7 = *(_BYTE *)v8;
      v10 = *(int *)(type metadata accessor for ChangeEvent(0) + 20);
      v11 = (char *)v7 + v10;
      v12 = (char *)v8 + v10;
      v13 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_7;
    case 1u:
      v14 = v8[1];
      *v7 = *v8;
      v7[1] = v14;
      v7[2] = v8[2];
      *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
      v15 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
      v16 = (char *)v7 + v15;
      v17 = (char *)v8 + v15;
      v18 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      goto LABEL_7;
    case 2u:
      *(_BYTE *)v7 = *(_BYTE *)v8;
      v19 = *(int *)(type metadata accessor for MembershipEvent(0) + 20);
      v20 = (char *)v7 + v19;
      v21 = (char *)v8 + v19;
      v22 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      goto LABEL_7;
    case 3u:
      *(_BYTE *)v7 = *(_BYTE *)v8;
      v23 = *(int *)(type metadata accessor for PersistenceEvent(0) + 20);
      v24 = (char *)v7 + v23;
      v25 = (char *)v8 + v23;
      v26 = sub_1AD63AF28();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
      break;
  }
  v27 = *(int *)(a3 + 28);
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

uint64_t sub_1AD5A6274(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  __int128 v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    v6 = *(int *)(a3 + 24);
    v7 = (_OWORD *)(a1 + v6);
    v8 = (_OWORD *)(a2 + v6);
    sub_1AD5A52B8(a1 + v6);
    v9 = type metadata accessor for CollaborationHighlightEvent(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v10 = *(int *)(type metadata accessor for ChangeEvent(0) + 20);
        v11 = (char *)v7 + v10;
        v12 = (char *)v8 + v10;
        v13 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_8;
      case 1u:
        v14 = v8[1];
        *v7 = *v8;
        v7[1] = v14;
        v7[2] = v8[2];
        *((_QWORD *)v7 + 6) = *((_QWORD *)v8 + 6);
        v15 = *(int *)(type metadata accessor for MentionEvent(0) + 24);
        v16 = (char *)v7 + v15;
        v17 = (char *)v8 + v15;
        v18 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        goto LABEL_8;
      case 2u:
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v19 = *(int *)(type metadata accessor for MembershipEvent(0) + 20);
        v20 = (char *)v7 + v19;
        v21 = (char *)v8 + v19;
        v22 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        goto LABEL_8;
      case 3u:
        *(_BYTE *)v7 = *(_BYTE *)v8;
        v23 = *(int *)(type metadata accessor for PersistenceEvent(0) + 20);
        v24 = (char *)v7 + v23;
        v25 = (char *)v8 + v23;
        v26 = sub_1AD63AF28();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v24, v25, v26);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
        break;
    }
  }
  v27 = *(int *)(a3 + 28);
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t sub_1AD5A64A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5A64B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for CollaborationHighlightEvent(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 24);
    }
    else
    {
      v10 = sub_1AD63B03C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t sub_1AD5A6554()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5A6560(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v8 = type metadata accessor for CollaborationHighlightEvent(0);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 24);
    }
    else
    {
      v10 = sub_1AD63B03C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 28);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

uint64_t sub_1AD5A65FC()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for CollaborationHighlightEvent(319);
  if (v1 <= 0x3F)
  {
    result = sub_1AD63B03C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

unint64_t sub_1AD5A6698()
{
  unint64_t result;

  result = qword_1EECDE828;
  if (!qword_1EECDE828)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696578, &type metadata for PersistenceEvent.Trigger);
    atomic_store(result, (unint64_t *)&qword_1EECDE828);
  }
  return result;
}

unint64_t sub_1AD5A66DC()
{
  unint64_t result;

  result = qword_1EECDE830;
  if (!qword_1EECDE830)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696450, &type metadata for MembershipEvent.Trigger);
    atomic_store(result, (unint64_t *)&qword_1EECDE830);
  }
  return result;
}

unint64_t sub_1AD5A6720()
{
  unint64_t result;

  result = qword_1EECDE838;
  if (!qword_1EECDE838)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for ChangeEvent.Trigger, &type metadata for ChangeEvent.Trigger);
    atomic_store(result, (unint64_t *)&qword_1EECDE838);
  }
  return result;
}

uint64_t sub_1AD5A6784@<X0>(char *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  if (v2 == 1)
    v4 = 1;
  else
    v4 = 2;
  if (!v2)
    v4 = 0;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD5A67E4()
{
  _BYTE *v0;

  if (*v0)
    return 0x6574697277;
  else
    return 1684104562;
}

uint64_t sub_1AD5A6814@<X0>(char *a1@<X8>)
{
  return sub_1AD5A6784(a1);
}

uint64_t sub_1AD5A6820@<X0>(char *a1@<X8>)
{
  unint64_t v2;
  uint64_t result;
  char v4;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  v4 = 13;
  if (v2 < 0xD)
    v4 = v2;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD5A6878()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1AD5A68B0
                                                                     + 4 * aW[*v0]))(0xD000000000000014, 0x80000001AD69E200);
}

uint64_t sub_1AD5A68B0@<X0>(uint64_t a1@<X8>)
{
  return a1 + 6;
}

uint64_t sub_1AD5A68E8()
{
  return 0x726566736E617274;
}

uint64_t sub_1AD5A690C()
{
  return 0x726F707075736E75;
}

uint64_t sub_1AD5A692C()
{
  return 0x4964696C61766E69;
}

uint64_t sub_1AD5A694C()
{
  return 0x41657361426C696ELL;
}

uint64_t sub_1AD5A6970()
{
  return 0x6863617474416F6ELL;
}

unint64_t sub_1AD5A6994()
{
  return 0xD000000000000012;
}

uint64_t sub_1AD5A69B0()
{
  return 0x64616552626F6FLL;
}

uint64_t sub_1AD5A69C8()
{
  return 0x4864696C61766E69;
}

uint64_t sub_1AD5A69EC()
{
  return 0x6574707572726F63;
}

uint64_t sub_1AD5A6A10(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1AD433F10(*a1, *a2);
}

uint64_t sub_1AD5A6A1C()
{
  sub_1AD63C4AC();
  sub_1AD5A6878();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD5A6A80()
{
  sub_1AD5A6878();
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5A6AD0()
{
  sub_1AD63C4AC();
  sub_1AD5A6878();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD5A6B30@<X0>(char *a1@<X8>)
{
  return sub_1AD5A6820(a1);
}

uint64_t sub_1AD5A6B3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1AD5A6878();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1AD5A6B60(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

void sub_1AD5A6B6C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

uint64_t sub_1AD5A6B78()
{
  return swift_bridgeObjectRetain();
}

unint64_t sub_1AD5A6B84()
{
  unint64_t result;

  result = qword_1EECDE840;
  if (!qword_1EECDE840)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696864, &type metadata for PixelBufferHelperError.ErrorKind);
    atomic_store(result, (unint64_t *)&qword_1EECDE840);
  }
  return result;
}

unint64_t sub_1AD5A6BCC()
{
  unint64_t result;

  result = qword_1EECDE848;
  if (!qword_1EECDE848)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD696904, &type metadata for PixelBufferHelperError.Description);
    atomic_store(result, (unint64_t *)&qword_1EECDE848);
  }
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferHelperError()
{
  return &type metadata for PixelBufferHelperError;
}

uint64_t storeEnumTagSinglePayload for PixelBufferHelperError.ErrorKind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD5A6C6C + 4 * byte_1AD696852[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD5A6CA0 + 4 * byte_1AD69684D[v4]))();
}

uint64_t sub_1AD5A6CA0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A6CA8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5A6CB0);
  return result;
}

uint64_t sub_1AD5A6CBC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5A6CC4);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD5A6CC8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A6CD0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferHelperError.ErrorKind()
{
  return &type metadata for PixelBufferHelperError.ErrorKind;
}

uint64_t storeEnumTagSinglePayload for PixelBufferHelperError.Description(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 12 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 12) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF4)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF3)
    return ((uint64_t (*)(void))((char *)&loc_1AD5A6D38 + 4 * byte_1AD69685C[v4]))();
  *a1 = a2 + 12;
  return ((uint64_t (*)(void))((char *)sub_1AD5A6D6C + 4 * byte_1AD696857[v4]))();
}

uint64_t sub_1AD5A6D6C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A6D74(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5A6D7CLL);
  return result;
}

uint64_t sub_1AD5A6D88(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5A6D90);
  *(_BYTE *)result = a2 + 12;
  return result;
}

uint64_t sub_1AD5A6D94(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5A6D9C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for PixelBufferHelperError.Description()
{
  return &type metadata for PixelBufferHelperError.Description;
}

uint64_t sub_1AD5A6DB8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[1];
  v2 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD5A6DEC(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  return result;
}

uint64_t sub_1AD5A6E40@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_BYTE *)(v1 + 72);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD5A6E5C(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  v1[3] = *a1;
  v1[4].n128_u64[0] = v3;
  v1[4].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD5A6EA0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 88);
  v3 = *(_QWORD *)(v1 + 96);
  v4 = *(_BYTE *)(v1 + 104);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 80);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD5A6EBC(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  v1[5] = *a1;
  v1[6].n128_u64[0] = v3;
  v1[6].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD5A6F00@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 120);
  v3 = *(_QWORD *)(v1 + 128);
  v4 = *(_BYTE *)(v1 + 136);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 112);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD5A6F1C(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  v1[7] = *a1;
  v1[8].n128_u64[0] = v3;
  v1[8].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD5A6F60@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[19];
  v4 = v1[20];
  v3 = v1[21];
  *a1 = v1[18];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD5A6F90(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  v1[9] = *a1;
  v1[10].n128_u64[0] = v3;
  v1[10].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD5A6FE0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[26];
  v4 = v1[27];
  v3 = v1[28];
  *a1 = v1[25];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD5A7010(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 200) = *a1;
  *(_QWORD *)(v1 + 216) = v3;
  *(_QWORD *)(v1 + 224) = v4;
  return result;
}

uint64_t sub_1AD5A7060@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = *(_QWORD *)(v1 + 248);
  v2 = *(_QWORD *)(v1 + 256);
  v4 = v1 + 248;
  v5 = *(_QWORD *)(v4 + 16);
  v6 = *(_BYTE *)(v4 + 24);
  v7 = *(_BYTE *)(v4 + 25);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v5;
  *(_BYTE *)(a1 + 24) = v6;
  *(_BYTE *)(a1 + 25) = v7;
  return swift_retain();
}

__n128 sub_1AD5A708C(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 result;
  uint64_t v7;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  swift_release();
  result = *a1;
  *(__n128 *)(v1 + 248) = *a1;
  v7 = v1 + 248;
  *(_QWORD *)(v7 + 16) = v3;
  *(_BYTE *)(v7 + 24) = v4;
  *(_BYTE *)(v7 + 25) = v5;
  return result;
}

uint64_t sub_1AD5A70E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(v1 + 288);
  v3 = *(_QWORD *)(v1 + 296);
  v4 = *(_BYTE *)(v1 + 304);
  v5 = *(_BYTE *)(v1 + 305);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 280);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 25) = v5;
  return swift_retain();
}

__n128 sub_1AD5A7108(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  swift_release();
  result = *a1;
  *(__n128 *)(v1 + 280) = *a1;
  *(_QWORD *)(v1 + 296) = v3;
  *(_BYTE *)(v1 + 304) = v4;
  *(_BYTE *)(v1 + 305) = v5;
  return result;
}

uint64_t sub_1AD5A7160()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 32) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD5A71DC()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 72) & 1) == 0)
    return *(_QWORD *)(v0 + 64);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD5A723C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 104) & 1) == 0)
    return *(_QWORD *)(v0 + 96);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD5A729C()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 136) & 1) == 0)
    return *(_QWORD *)(v0 + 128);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD5A72FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 168))
  {
    v1 = *(_QWORD *)(v0 + 160);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5A7374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 224))
  {
    v1 = *(_QWORD *)(v0 + 216);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5A73EC()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 273) & 1) == 0)
    return *(_QWORD *)(v0 + 264);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD5A7454()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 305) & 1) == 0)
    return *(_QWORD *)(v0 + 296);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

void sub_1AD5A74BC(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *sub_1AD5A74C8(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*sub_1AD5A74D4())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A74E4(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD5A7504(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 32);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 24);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A3688;
  }
  return result;
}

void (*sub_1AD5A7590(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[1];
  v4 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD003F9C;
}

uint64_t sub_1AD5A75F4()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t sub_1AD5A75FC(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 40) = result;
  return result;
}

uint64_t (*sub_1AD5A7604())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A7614@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 72) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(result + 64);
  }
  return result;
}

uint64_t sub_1AD5A7678(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))(v1 + 48);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 64) = a1;
    *(_BYTE *)(v1 + 72) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD5A7744(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 72) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 64);
    return sub_1AD5A77B8;
  }
  return result;
}

uint64_t sub_1AD5A77B8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(uint64_t (**)(uint64_t *))(v1 + 48);
  v6 = *a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 64) = v2;
    *(_BYTE *)(v1 + 72) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*sub_1AD5A7880(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 56);
  v5 = *(_QWORD *)(v1 + 64);
  v6 = *(_BYTE *)(v1 + 72);
  *v3 = *(_QWORD *)(v1 + 48);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD3FD1F8;
}

uint64_t sub_1AD5A78E4@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 104) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(result + 96);
  }
  return result;
}

uint64_t sub_1AD5A7948(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))(v1 + 80);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 96) = a1;
    *(_BYTE *)(v1 + 104) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD5A7A14(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 104) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 96);
    return sub_1AD5A7A88;
  }
  return result;
}

uint64_t sub_1AD5A7A88(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(uint64_t (**)(uint64_t *))(v1 + 80);
  v6 = *a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 96) = v2;
    *(_BYTE *)(v1 + 104) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*sub_1AD5A7B50(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 88);
  v5 = *(_QWORD *)(v1 + 96);
  v6 = *(_BYTE *)(v1 + 104);
  *v3 = *(_QWORD *)(v1 + 80);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD5A7BB4;
}

void sub_1AD5A7BB4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *a1;
  v3 = (*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + 80) = v5;
    *(_QWORD *)(v3 + 88) = v4;
    *(_QWORD *)(v3 + 96) = v6;
    *(_BYTE *)(v3 + 104) = v7;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)(v3 + 80) = v5;
    *(_QWORD *)(v3 + 88) = v4;
    *(_QWORD *)(v3 + 96) = v6;
    *(_BYTE *)(v3 + 104) = v7;
  }
  free(v2);
}

uint64_t sub_1AD5A7C40@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 136) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(result + 128);
  }
  return result;
}

uint64_t sub_1AD5A7CA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))(v1 + 112);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 128) = a1;
    *(_BYTE *)(v1 + 136) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD5A7D70(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 136) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 128);
    return sub_1AD5A7DE4;
  }
  return result;
}

uint64_t sub_1AD5A7DE4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(uint64_t (**)(uint64_t *))(v1 + 112);
  v6 = *a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 128) = v2;
    *(_BYTE *)(v1 + 136) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*sub_1AD5A7EAC(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 120);
  v5 = *(_QWORD *)(v1 + 128);
  v6 = *(_BYTE *)(v1 + 136);
  *v3 = *(_QWORD *)(v1 + 112);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD5A7F10;
}

void sub_1AD5A7F10(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *a1;
  v3 = (*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + 112) = v5;
    *(_QWORD *)(v3 + 120) = v4;
    *(_QWORD *)(v3 + 128) = v6;
    *(_BYTE *)(v3 + 136) = v7;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)(v3 + 112) = v5;
    *(_QWORD *)(v3 + 120) = v4;
    *(_QWORD *)(v3 + 128) = v6;
    *(_BYTE *)(v3 + 136) = v7;
  }
  free(v2);
}

uint64_t sub_1AD5A7F9C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 168);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 160);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5A8004(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD5A8024(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 168);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 160);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD5A80AC;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5A80AC(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5A8110(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[18] = v4;
  a2[19] = v3;
  a2[20] = v6;
  a2[21] = v5;
  return result;
}

void (*sub_1AD5A817C(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[19];
  v6 = v1[20];
  v5 = v1[21];
  *v3 = v1[18];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD5A81E0;
}

void sub_1AD5A81E0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[18] = v6;
    v4[19] = v5;
    v4[20] = v7;
    v4[21] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[18] = v6;
    v4[19] = v5;
    v4[20] = v7;
    v4[21] = v3;
  }
  free(v2);
}

uint64_t sub_1AD5A8288@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[23];
  v3 = v1[24];
  *a1 = v1[22];
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD5A82B8(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  v1[11] = *a1;
  v1[12].n128_u64[0] = v3;
  return result;
}

uint64_t (*sub_1AD5A82FC())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A830C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 224);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 216);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5A8374(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD5A8394(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 224);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 216);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD5A841C;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5A841C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5A8480(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[25] = v4;
  a2[26] = v3;
  a2[27] = v6;
  a2[28] = v5;
  return result;
}

void (*sub_1AD5A84EC(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[26];
  v6 = v1[27];
  v5 = v1[28];
  *v3 = v1[25];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD5A8550;
}

void sub_1AD5A8550(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[25] = v6;
    v4[26] = v5;
    v4[27] = v7;
    v4[28] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[25] = v6;
    v4[26] = v5;
    v4[27] = v7;
    v4[28] = v3;
  }
  free(v2);
}

uint64_t sub_1AD5A85F8@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 232);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD5A8604(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 232) = v2;
  return result;
}

uint64_t (*sub_1AD5A862C())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A863C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 240);
}

uint64_t sub_1AD5A8644(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 240) = result;
  return result;
}

uint64_t (*sub_1AD5A864C())()
{
  return nullsub_1;
}

uint64_t sub_1AD5A865C@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  if ((*(_BYTE *)(result + 273) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(result + 272);
    *(_QWORD *)a2 = *(_QWORD *)(result + 264);
    *(_BYTE *)(a2 + 8) = v2 & 1;
  }
  return result;
}

uint64_t sub_1AD5A86CC(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t *);
  char v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  char v9;

  v4 = *(uint64_t (**)(uint64_t *))(v2 + 248);
  v5 = a2 & 1;
  v8 = a1;
  v9 = a2 & 1;
  result = v4(&v8);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v2 + 264) = a1;
    *(_BYTE *)(v2 + 272) = v5;
    *(_BYTE *)(v2 + 273) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD5A87A4(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  if ((*(_BYTE *)(v1 + 273) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(v1 + 272);
    *(_QWORD *)a1 = *(_QWORD *)(v1 + 264);
    *(_BYTE *)(a1 + 8) = v2 & 1;
    return sub_1AD5A8824;
  }
  return result;
}

uint64_t sub_1AD5A8824(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  char v8;

  v1 = a1[2];
  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(uint64_t (**)(uint64_t *))(v1 + 248);
  v7 = *a1;
  v8 = v3;
  result = v4(&v7);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 264) = v2;
    *(_BYTE *)(v1 + 272) = v3;
    *(_BYTE *)(v1 + 273) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5A88FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  v7 = *((_BYTE *)a1 + 25);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 248) = v4;
  *(_QWORD *)(a2 + 256) = v3;
  *(_QWORD *)(a2 + 264) = v5;
  *(_BYTE *)(a2 + 272) = v6;
  *(_BYTE *)(a2 + 273) = v7;
  return result;
}

void (*sub_1AD5A896C(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v4 = *(_QWORD *)(v1 + 248);
  v3[4] = v1;
  v5 = *(_QWORD *)(v1 + 256);
  v6 = *(_QWORD *)(v1 + 264);
  v7 = *(_BYTE *)(v1 + 272);
  v8 = *(_BYTE *)(v1 + 273);
  *v3 = v4;
  v3[1] = v5;
  v3[2] = v6;
  *((_BYTE *)v3 + 24) = v7;
  *((_BYTE *)v3 + 25) = v8;
  swift_retain();
  return sub_1AD5A89DC;
}

void sub_1AD5A89DC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *a1;
  v3 = (*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  v8 = *((_BYTE *)*a1 + 25);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + 248) = v5;
    *(_QWORD *)(v3 + 256) = v4;
    v9 = v3 + 248;
    *(_QWORD *)(v9 + 16) = v6;
    *(_BYTE *)(v9 + 24) = v7;
    *(_BYTE *)(v9 + 25) = v8;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)(v3 + 248) = v5;
    *(_QWORD *)(v3 + 256) = v4;
    v10 = v3 + 248;
    *(_QWORD *)(v10 + 16) = v6;
    *(_BYTE *)(v10 + 24) = v7;
    *(_BYTE *)(v10 + 25) = v8;
  }
  free(v2);
}

uint64_t sub_1AD5A8A74@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  char v2;

  if ((*(_BYTE *)(result + 305) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(result + 304);
    *(_QWORD *)a2 = *(_QWORD *)(result + 296);
    *(_BYTE *)(a2 + 8) = v2 & 1;
  }
  return result;
}

uint64_t sub_1AD5A8AE4(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t (*v4)(uint64_t *);
  char v5;
  uint64_t result;
  _QWORD *v7;
  uint64_t v8;
  char v9;

  v4 = *(uint64_t (**)(uint64_t *))(v2 + 280);
  v5 = a2 & 1;
  v8 = a1;
  v9 = a2 & 1;
  result = v4(&v8);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v2 + 296) = a1;
    *(_BYTE *)(v2 + 304) = v5;
    *(_BYTE *)(v2 + 305) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v7 = 0x6E776F6E6B6E753CLL;
    v7[1] = 0xE90000000000003ELL;
    v7[2] = 0xD00000000000001CLL;
    v7[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD5A8BBC(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  char v2;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  if ((*(_BYTE *)(v1 + 305) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_BYTE *)(v1 + 304);
    *(_QWORD *)a1 = *(_QWORD *)(v1 + 296);
    *(_BYTE *)(a1 + 8) = v2 & 1;
    return sub_1AD5A8C3C;
  }
  return result;
}

uint64_t sub_1AD5A8C3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t (*v4)(uint64_t *);
  uint64_t result;
  _QWORD *v6;
  uint64_t v7;
  char v8;

  v1 = a1[2];
  v2 = *a1;
  v3 = *((_BYTE *)a1 + 8);
  v4 = *(uint64_t (**)(uint64_t *))(v1 + 280);
  v7 = *a1;
  v8 = v3;
  result = v4(&v7);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 296) = v2;
    *(_BYTE *)(v1 + 304) = v3;
    *(_BYTE *)(v1 + 305) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v6 = 0x6E776F6E6B6E753CLL;
    v6[1] = 0xE90000000000003ELL;
    v6[2] = 0xD00000000000001CLL;
    v6[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5A8D14(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  v7 = *((_BYTE *)a1 + 25);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 280) = v4;
  *(_QWORD *)(a2 + 288) = v3;
  *(_QWORD *)(a2 + 296) = v5;
  *(_BYTE *)(a2 + 304) = v6;
  *(_BYTE *)(a2 + 305) = v7;
  return result;
}

void (*sub_1AD5A8D7C(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 288);
  v5 = *(_QWORD *)(v1 + 296);
  v6 = *(_BYTE *)(v1 + 304);
  v7 = *(_BYTE *)(v1 + 305);
  *v3 = *(_QWORD *)(v1 + 280);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  *((_BYTE *)v3 + 25) = v7;
  swift_retain();
  return sub_1AD5A8DEC;
}

void sub_1AD5A8DEC(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *a1;
  v3 = (*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  v8 = *((_BYTE *)*a1 + 25);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + 280) = v5;
    *(_QWORD *)(v3 + 288) = v4;
    *(_QWORD *)(v3 + 296) = v6;
    *(_BYTE *)(v3 + 304) = v7;
    *(_BYTE *)(v3 + 305) = v8;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)(v3 + 280) = v5;
    *(_QWORD *)(v3 + 288) = v4;
    *(_QWORD *)(v3 + 296) = v6;
    *(_BYTE *)(v3 + 304) = v7;
    *(_BYTE *)(v3 + 305) = v8;
  }
  free(v2);
}

uint64_t sub_1AD5A8E84@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IMS3GPPCharacteristic() + 68);
  return sub_1AD5A8EF0(v3, a1);
}

uint64_t type metadata accessor for IMS3GPPCharacteristic()
{
  uint64_t result;

  result = qword_1EECDE850;
  if (!qword_1EECDE850)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD5A8EF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD5A8F38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IMS3GPPCharacteristic() + 68);
  return sub_1AD5A8F68(a1, v3);
}

uint64_t sub_1AD5A8F68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4630);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD5A8FB0())(_QWORD)
{
  type metadata accessor for IMS3GPPCharacteristic();
  return nullsub_1;
}

uint64_t sub_1AD5A8FD8(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD5A9024(&qword_1EECD44F0, (uint64_t)&unk_1AD6527A8);
  result = sub_1AD5A9024(&qword_1EECD4500, (uint64_t)&unk_1AD6527D0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD5A9024(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IMS3GPPCharacteristic();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD5A9068(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD5A90A4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  *a2 = a1[1];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD5A90E4(uint64_t *a1)
{
  return sub_1AD00387C(*a1);
}

uint64_t sub_1AD5A9108@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 56);
  v3 = *(_QWORD *)(a1 + 64);
  v4 = *(_BYTE *)(a1 + 72);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD5A9128(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 48) = v4;
  *(_QWORD *)(a2 + 56) = v3;
  *(_QWORD *)(a2 + 64) = v5;
  *(_BYTE *)(a2 + 72) = v6;
  return result;
}

uint64_t sub_1AD5A9184(uint64_t *a1)
{
  return sub_1AD00387C(*a1);
}

uint64_t sub_1AD5A91A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 88);
  v3 = *(_QWORD *)(a1 + 96);
  v4 = *(_BYTE *)(a1 + 104);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD5A91C8(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 80) = v4;
  *(_QWORD *)(a2 + 88) = v3;
  *(_QWORD *)(a2 + 96) = v5;
  *(_BYTE *)(a2 + 104) = v6;
  return result;
}

uint64_t sub_1AD5A9224(uint64_t *a1)
{
  return sub_1AD00387C(*a1);
}

uint64_t sub_1AD5A9248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 120);
  v3 = *(_QWORD *)(a1 + 128);
  v4 = *(_BYTE *)(a1 + 136);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD5A9268(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 112) = v4;
  *(_QWORD *)(a2 + 120) = v3;
  *(_QWORD *)(a2 + 128) = v5;
  *(_BYTE *)(a2 + 136) = v6;
  return result;
}

uint64_t sub_1AD5A92C4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD5A9300@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[18];
  v3 = a1[19];
  v5 = a1[20];
  v4 = a1[21];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD5A9338(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD5A9374@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[25];
  v3 = a1[26];
  v5 = a1[27];
  v4 = a1[28];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD5A93AC(uint64_t a1)
{
  return sub_1AD003180(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1AD5A93DC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;

  v4 = *(_QWORD *)(a1 + 248);
  v3 = *(_QWORD *)(a1 + 256);
  v2 = a1 + 248;
  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(_BYTE *)(v2 + 24);
  v7 = *(_BYTE *)(v2 + 25);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6;
  *(_BYTE *)(a2 + 25) = v7;
  return swift_retain();
}

uint64_t sub_1AD5A940C(uint64_t a1)
{
  return sub_1AD003180(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8));
}

uint64_t sub_1AD5A943C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 288);
  v3 = *(_QWORD *)(a1 + 296);
  v4 = *(_BYTE *)(a1 + 304);
  v5 = *(_BYTE *)(a1 + 305);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  *(_BYTE *)(a2 + 25) = v5;
  return swift_retain();
}

_BYTE *sub_1AD5A946C(_BYTE *a1, uint64_t *a2, uint64_t a3)
{
  _BYTE *v4;
  int v5;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  _QWORD *v39;
  uint64_t v40;
  _OWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  _OWORD *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v59;
  unsigned int (*v60)(_QWORD *, uint64_t, uint64_t);
  uint64_t v61;
  _QWORD *v62;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_BYTE *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v7 = a2[2];
    *((_QWORD *)v4 + 1) = a2[1];
    *((_QWORD *)v4 + 2) = v7;
    v8 = a2 + 3;
    v9 = a2[4];
    swift_retain();
    if (v9 == 1)
    {
      *(_OWORD *)(v4 + 24) = *v8;
    }
    else
    {
      *((_QWORD *)v4 + 3) = *(_QWORD *)v8;
      *((_QWORD *)v4 + 4) = v9;
      swift_bridgeObjectRetain();
    }
    v4[40] = *((_BYTE *)a2 + 40);
    v11 = a2[7];
    *((_QWORD *)v4 + 6) = a2[6];
    *((_QWORD *)v4 + 7) = v11;
    *((_QWORD *)v4 + 8) = a2[8];
    v4[72] = *((_BYTE *)a2 + 72);
    v12 = a2[11];
    *((_QWORD *)v4 + 10) = a2[10];
    *((_QWORD *)v4 + 11) = v12;
    *((_QWORD *)v4 + 12) = a2[12];
    v4[104] = *((_BYTE *)a2 + 104);
    v13 = a2[15];
    *((_QWORD *)v4 + 14) = a2[14];
    *((_QWORD *)v4 + 15) = v13;
    *((_QWORD *)v4 + 16) = a2[16];
    v4[136] = *((_BYTE *)a2 + 136);
    v14 = a2[19];
    *((_QWORD *)v4 + 18) = a2[18];
    *((_QWORD *)v4 + 19) = v14;
    *((_QWORD *)v4 + 20) = a2[20];
    v15 = a2[23];
    *(_OWORD *)(v4 + 168) = *(_OWORD *)(a2 + 21);
    *((_QWORD *)v4 + 23) = v15;
    *((_OWORD *)v4 + 12) = *((_OWORD *)a2 + 12);
    v16 = a2[27];
    *((_QWORD *)v4 + 26) = a2[26];
    *((_QWORD *)v4 + 27) = v16;
    v17 = a2[29];
    *((_QWORD *)v4 + 28) = a2[28];
    *((_QWORD *)v4 + 29) = v17;
    v4[240] = *((_BYTE *)a2 + 240);
    v18 = a2[32];
    *((_QWORD *)v4 + 31) = a2[31];
    *((_QWORD *)v4 + 32) = v18;
    v19 = a2[33];
    *((_WORD *)v4 + 136) = *((_WORD *)a2 + 136);
    *((_QWORD *)v4 + 33) = v19;
    v20 = a2[36];
    *((_QWORD *)v4 + 35) = a2[35];
    *((_QWORD *)v4 + 36) = v20;
    v21 = a2[37];
    *((_WORD *)v4 + 152) = *((_WORD *)a2 + 152);
    v22 = *(int *)(a3 + 68);
    v23 = &v4[v22];
    v24 = (uint64_t *)((char *)a2 + v22);
    *((_QWORD *)v4 + 37) = v21;
    v25 = type metadata accessor for IMS3GPPExtCharacteristic();
    v59 = *(_QWORD *)(v25 - 8);
    v60 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v59 + 48);
    swift_retain();
    swift_retain();
    swift_retain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    swift_retain();
    if (v60(v24, 1, v25))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4630);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v61 = v25;
      v27 = v24[1];
      *v23 = *v24;
      v23[1] = v27;
      v28 = v24[3];
      v23[2] = v24[2];
      v23[3] = v28;
      *((_BYTE *)v23 + 32) = *((_BYTE *)v24 + 32);
      v29 = (int *)type metadata accessor for IMSGSMACharacteristic();
      v30 = v29[6];
      v62 = v23;
      v31 = (char *)v23 + v30;
      v32 = (char *)v24 + v30;
      v33 = sub_1AD63AF28();
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48);
      swift_retain();
      swift_bridgeObjectRetain();
      if (v35(v32, 1, v33))
      {
        v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v31, v32, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
      }
      v37 = v29[7];
      v38 = (char *)v62 + v37;
      v39 = (_QWORD *)((char *)v24 + v37);
      v40 = v39[1];
      *(_QWORD *)v38 = *v39;
      *((_QWORD *)v38 + 1) = v40;
      v41 = v39 + 2;
      v42 = v39[3];
      swift_retain();
      if (v42 == 1)
      {
        *((_OWORD *)v38 + 1) = *v41;
      }
      else
      {
        *((_QWORD *)v38 + 2) = *(_QWORD *)v41;
        *((_QWORD *)v38 + 3) = v42;
        swift_bridgeObjectRetain();
      }
      v43 = v29[8];
      v44 = (char *)v62 + v43;
      v45 = (_QWORD *)((char *)v24 + v43);
      v46 = v45[1];
      *(_QWORD *)v44 = *v45;
      *((_QWORD *)v44 + 1) = v46;
      v47 = v45 + 2;
      v48 = v45[3];
      swift_retain();
      if (v48 == 1)
      {
        *((_OWORD *)v44 + 1) = *v47;
      }
      else
      {
        *((_QWORD *)v44 + 2) = *(_QWORD *)v47;
        *((_QWORD *)v44 + 3) = v48;
        swift_bridgeObjectRetain();
      }
      v49 = v29[9];
      v50 = (char *)v62 + v49;
      v51 = (char *)v24 + v49;
      *(_QWORD *)v50 = *(_QWORD *)v51;
      v50[8] = v51[8];
      v52 = v29[10];
      v53 = (char *)v62 + v52;
      v54 = (char *)v24 + v52;
      v55 = sub_1AD63B084();
      v56 = *(_QWORD *)(v55 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v56 + 48))(v54, 1, v55))
      {
        v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
        memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v53, v54, v55);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
      }
      (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v59 + 56))(v62, 0, 1, v61);
    }
  }
  return v4;
}

uint64_t sub_1AD5A98EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  swift_release();
  if (*(_QWORD *)(a1 + 32) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v4 = a1 + *(int *)(a2 + 68);
  v5 = type metadata accessor for IMS3GPPExtCharacteristic();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 48))(v4, 1, v5);
  if (!(_DWORD)result)
  {
    swift_release();
    swift_bridgeObjectRelease();
    v7 = (int *)type metadata accessor for IMSGSMACharacteristic();
    v8 = v4 + v7[6];
    v9 = sub_1AD63AF28();
    v10 = *(_QWORD *)(v9 - 8);
    if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
      (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v8, v9);
    v11 = v4 + v7[7];
    swift_release();
    if (*(_QWORD *)(v11 + 24) != 1)
      swift_bridgeObjectRelease();
    v12 = v4 + v7[8];
    swift_release();
    if (*(_QWORD *)(v12 + 24) != 1)
      swift_bridgeObjectRelease();
    v13 = v4 + v7[10];
    v14 = sub_1AD63B084();
    v15 = *(_QWORD *)(v14 - 8);
    result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14);
    if (!(_DWORD)result)
      return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8))(v13, v14);
  }
  return result;
}

uint64_t sub_1AD5A9AAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  _QWORD *v36;
  uint64_t v37;
  _OWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  _QWORD *v42;
  uint64_t v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  unsigned int (*v57)(_QWORD *, uint64_t, uint64_t);
  _QWORD *v58;
  uint64_t v59;
  _QWORD *__dst;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = (_OWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  swift_retain();
  if (v8 == 1)
  {
    *(_OWORD *)(a1 + 24) = *v7;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)v7;
    *(_QWORD *)(a1 + 32) = v8;
    swift_bridgeObjectRetain();
  }
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  v11 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v11;
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  v12 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v12;
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  v13 = *(_QWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 184) = v13;
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  v14 = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 208) = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = v14;
  v15 = *(_QWORD *)(a2 + 232);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 232) = v15;
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v16 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v16;
  v17 = *(_QWORD *)(a2 + 264);
  *(_WORD *)(a1 + 272) = *(_WORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v17;
  v18 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v18;
  v19 = *(_QWORD *)(a2 + 296);
  *(_WORD *)(a1 + 304) = *(_WORD *)(a2 + 304);
  v20 = *(int *)(a3 + 68);
  __dst = (_QWORD *)(a1 + v20);
  v21 = (_QWORD *)(a2 + v20);
  *(_QWORD *)(a1 + 296) = v19;
  v22 = type metadata accessor for IMS3GPPExtCharacteristic();
  v56 = *(_QWORD *)(v22 - 8);
  v57 = *(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(v56 + 48);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  v59 = v22;
  if (v57(v21, 1, v22))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4630);
    memcpy(__dst, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = v21[1];
    *__dst = *v21;
    __dst[1] = v24;
    v25 = v21[3];
    __dst[2] = v21[2];
    __dst[3] = v25;
    *((_BYTE *)__dst + 32) = *((_BYTE *)v21 + 32);
    v26 = (int *)type metadata accessor for IMSGSMACharacteristic();
    v27 = v26[6];
    v28 = (char *)__dst + v27;
    v58 = v21;
    v29 = (char *)v21 + v27;
    v30 = sub_1AD63AF28();
    v31 = *(_QWORD *)(v30 - 8);
    v32 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v32(v29, 1, v30))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v28, v29, v30);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v31 + 56))(v28, 0, 1, v30);
    }
    v34 = v26[7];
    v35 = (char *)__dst + v34;
    v36 = (_QWORD *)((char *)v58 + v34);
    v37 = v36[1];
    *(_QWORD *)v35 = *v36;
    *((_QWORD *)v35 + 1) = v37;
    v38 = v36 + 2;
    v39 = v36[3];
    swift_retain();
    if (v39 == 1)
    {
      *((_OWORD *)v35 + 1) = *v38;
    }
    else
    {
      *((_QWORD *)v35 + 2) = *(_QWORD *)v38;
      *((_QWORD *)v35 + 3) = v39;
      swift_bridgeObjectRetain();
    }
    v40 = v26[8];
    v41 = (char *)__dst + v40;
    v42 = (_QWORD *)((char *)v58 + v40);
    v43 = v42[1];
    *(_QWORD *)v41 = *v42;
    *((_QWORD *)v41 + 1) = v43;
    v44 = v42 + 2;
    v45 = v42[3];
    swift_retain();
    if (v45 == 1)
    {
      *((_OWORD *)v41 + 1) = *v44;
    }
    else
    {
      *((_QWORD *)v41 + 2) = *(_QWORD *)v44;
      *((_QWORD *)v41 + 3) = v45;
      swift_bridgeObjectRetain();
    }
    v46 = v26[9];
    v47 = (char *)__dst + v46;
    v48 = (char *)v58 + v46;
    *(_QWORD *)v47 = *(_QWORD *)v48;
    v47[8] = v48[8];
    v49 = v26[10];
    v50 = (char *)__dst + v49;
    v51 = (char *)v58 + v49;
    v52 = sub_1AD63B084();
    v53 = *(_QWORD *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
    {
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v50, v51, v52);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
    }
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(v56 + 56))(__dst, 0, 1, v59);
  }
  return a1;
}

uint64_t sub_1AD5A9EF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(uint64_t, uint64_t, uint64_t);
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  const void *v32;
  uint64_t v33;
  uint64_t v34;
  unsigned int (*v35)(const void *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t *v37;
  uint64_t v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  void *v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t (*v46)(void *, uint64_t, uint64_t);
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t *v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  const void *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  _BYTE *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t (*v87)(uint64_t, uint64_t, uint64_t);
  int v88;
  int v89;
  void *__dst;
  int *v91;
  uint64_t v92;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) == 1)
  {
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 == 1)
  {
    sub_1AD0256E4(a1 + 24);
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v8 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = v9;
  v10 = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = v10;
  swift_retain();
  swift_release();
  v11 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v11;
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  swift_retain();
  swift_release();
  v13 = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = v13;
  v14 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v14;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v15;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v16 = *(_QWORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_QWORD *)(a1 + 208) = v16;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = *(_QWORD *)(a2 + 224);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  v17 = *(_QWORD *)(a2 + 256);
  *(_QWORD *)(a1 + 248) = *(_QWORD *)(a2 + 248);
  *(_QWORD *)(a1 + 256) = v17;
  swift_retain();
  swift_release();
  v18 = *(_QWORD *)(a2 + 264);
  *(_WORD *)(a1 + 272) = *(_WORD *)(a2 + 272);
  *(_QWORD *)(a1 + 264) = v18;
  v19 = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
  *(_QWORD *)(a1 + 288) = v19;
  swift_retain();
  swift_release();
  v20 = *(_QWORD *)(a2 + 296);
  *(_WORD *)(a1 + 304) = *(_WORD *)(a2 + 304);
  *(_QWORD *)(a1 + 296) = v20;
  v21 = *(int *)(a3 + 68);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = type metadata accessor for IMS3GPPExtCharacteristic();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  v27 = v26(v22, 1, v24);
  v28 = v26(v23, 1, v24);
  if (!v27)
  {
    if (v28)
    {
      sub_1AD5AA734(v22);
      goto LABEL_14;
    }
    v39 = *(_QWORD *)(v23 + 8);
    *(_QWORD *)v22 = *(_QWORD *)v23;
    *(_QWORD *)(v22 + 8) = v39;
    swift_retain();
    swift_release();
    *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
    *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_BYTE *)(v22 + 32) = *(_BYTE *)(v23 + 32);
    v40 = (int *)type metadata accessor for IMSGSMACharacteristic();
    v41 = v40[6];
    v42 = (void *)(v22 + v41);
    v43 = (void *)(v23 + v41);
    v44 = sub_1AD63AF28();
    v45 = *(_QWORD *)(v44 - 8);
    v46 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v45 + 48);
    v47 = v46(v42, 1, v44);
    v48 = v46(v43, 1, v44);
    if (v47)
    {
      if (!v48)
      {
        (*(void (**)(void *, void *, uint64_t))(v45 + 16))(v42, v43, v44);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v45 + 56))(v42, 0, 1, v44);
        goto LABEL_34;
      }
    }
    else
    {
      if (!v48)
      {
        (*(void (**)(void *, void *, uint64_t))(v45 + 24))(v42, v43, v44);
LABEL_34:
        v71 = v40[7];
        v72 = (_QWORD *)(v22 + v71);
        v73 = v23 + v71;
        v74 = *(_QWORD *)(v23 + v71 + 8);
        *v72 = *(_QWORD *)(v23 + v71);
        v72[1] = v74;
        swift_retain();
        swift_release();
        v75 = *(_QWORD *)(v73 + 24);
        if (v72[3] == 1)
        {
          if (v75 != 1)
          {
            v72[2] = *(_QWORD *)(v73 + 16);
            v72[3] = *(_QWORD *)(v73 + 24);
            swift_bridgeObjectRetain();
            goto LABEL_41;
          }
        }
        else
        {
          if (v75 != 1)
          {
            v72[2] = *(_QWORD *)(v73 + 16);
            v72[3] = *(_QWORD *)(v73 + 24);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRelease();
LABEL_41:
            v76 = v40[8];
            v77 = (_QWORD *)(v22 + v76);
            v78 = v23 + v76;
            v79 = *(_QWORD *)(v23 + v76 + 8);
            *v77 = *(_QWORD *)(v23 + v76);
            v77[1] = v79;
            swift_retain();
            swift_release();
            v80 = *(_QWORD *)(v78 + 24);
            if (v77[3] == 1)
            {
              if (v80 != 1)
              {
                v77[2] = *(_QWORD *)(v78 + 16);
                v77[3] = *(_QWORD *)(v78 + 24);
                swift_bridgeObjectRetain();
LABEL_48:
                v81 = v40[9];
                v82 = (_BYTE *)(v22 + v81);
                v83 = (_BYTE *)(v23 + v81);
                *v82 = *v83;
                v82[1] = v83[1];
                v82[2] = v83[2];
                v82[3] = v83[3];
                v82[4] = v83[4];
                v82[5] = v83[5];
                v82[6] = v83[6];
                v82[7] = v83[7];
                v82[8] = v83[8];
                v84 = v40[10];
                v22 += v84;
                v23 += v84;
                v85 = sub_1AD63B084();
                v86 = *(_QWORD *)(v85 - 8);
                v87 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v86 + 48);
                v88 = v87(v22, 1, v85);
                v89 = v87(v23, 1, v85);
                if (v88)
                {
                  if (!v89)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 16))(v22, v23, v85);
                    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v86 + 56))(v22, 0, 1, v85);
                    return a1;
                  }
                }
                else
                {
                  if (!v89)
                  {
                    (*(void (**)(uint64_t, uint64_t, uint64_t))(v86 + 24))(v22, v23, v85);
                    return a1;
                  }
                  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v22, v85);
                }
                v37 = &qword_1ED2E7140;
                goto LABEL_15;
              }
            }
            else
            {
              if (v80 != 1)
              {
                v77[2] = *(_QWORD *)(v78 + 16);
                v77[3] = *(_QWORD *)(v78 + 24);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease();
                goto LABEL_48;
              }
              sub_1AD0256E4((uint64_t)(v77 + 2));
            }
            *((_OWORD *)v77 + 1) = *(_OWORD *)(v78 + 16);
            goto LABEL_48;
          }
          sub_1AD0256E4((uint64_t)(v72 + 2));
        }
        *((_OWORD *)v72 + 1) = *(_OWORD *)(v73 + 16);
        goto LABEL_41;
      }
      (*(void (**)(void *, uint64_t))(v45 + 8))(v42, v44);
    }
    v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v42, v43, *(_QWORD *)(*(_QWORD *)(v70 - 8) + 64));
    goto LABEL_34;
  }
  if (v28)
  {
LABEL_14:
    v37 = &qword_1EECD4630;
LABEL_15:
    v38 = __swift_instantiateConcreteTypeFromMangledName(v37);
    memcpy((void *)v22, (const void *)v23, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    return a1;
  }
  v92 = v25;
  v29 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_QWORD *)(v22 + 8) = v29;
  *(_QWORD *)(v22 + 16) = *(_QWORD *)(v23 + 16);
  *(_QWORD *)(v22 + 24) = *(_QWORD *)(v23 + 24);
  *(_BYTE *)(v22 + 32) = *(_BYTE *)(v23 + 32);
  v30 = type metadata accessor for IMSGSMACharacteristic();
  v31 = *(int *)(v30 + 24);
  __dst = (void *)(v22 + v31);
  v91 = (int *)v30;
  v32 = (const void *)(v23 + v31);
  v33 = sub_1AD63AF28();
  v34 = *(_QWORD *)(v33 - 8);
  v35 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v34 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v35(v32, 1, v33))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(__dst, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v34 + 16))(__dst, v32, v33);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(__dst, 0, 1, v33);
  }
  v49 = v91[7];
  v50 = v22 + v49;
  v51 = v23 + v49;
  v52 = *(_QWORD *)(v23 + v49 + 8);
  *(_QWORD *)v50 = *(_QWORD *)(v23 + v49);
  *(_QWORD *)(v50 + 8) = v52;
  v53 = *(_QWORD *)(v23 + v49 + 24);
  swift_retain();
  if (v53 == 1)
  {
    *(_OWORD *)(v50 + 16) = *(_OWORD *)(v51 + 16);
  }
  else
  {
    *(_QWORD *)(v50 + 16) = *(_QWORD *)(v51 + 16);
    *(_QWORD *)(v50 + 24) = *(_QWORD *)(v51 + 24);
    swift_bridgeObjectRetain();
  }
  v54 = v91[8];
  v55 = v22 + v54;
  v56 = v23 + v54;
  v57 = *(_QWORD *)(v23 + v54 + 8);
  *(_QWORD *)v55 = *(_QWORD *)(v23 + v54);
  *(_QWORD *)(v55 + 8) = v57;
  v58 = *(_QWORD *)(v23 + v54 + 24);
  swift_retain();
  if (v58 == 1)
  {
    *(_OWORD *)(v55 + 16) = *(_OWORD *)(v56 + 16);
  }
  else
  {
    *(_QWORD *)(v55 + 16) = *(_QWORD *)(v56 + 16);
    *(_QWORD *)(v55 + 24) = *(_QWORD *)(v56 + 24);
    swift_bridgeObjectRetain();
  }
  v59 = v91[9];
  v60 = v22 + v59;
  v61 = (uint64_t *)(v23 + v59);
  v62 = *v61;
  *(_BYTE *)(v60 + 8) = *((_BYTE *)v61 + 8);
  *(_QWORD *)v60 = v62;
  v63 = v91[10];
  v64 = (void *)(v22 + v63);
  v65 = (const void *)(v23 + v63);
  v66 = sub_1AD63B084();
  v67 = *(_QWORD *)(v66 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v67 + 48))(v65, 1, v66))
  {
    v68 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v68 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v67 + 16))(v64, v65, v66);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v67 + 56))(v64, 0, 1, v66);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v22, 0, 1, v24);
  return a1;
}

uint64_t sub_1AD5AA734(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for IMS3GPPExtCharacteristic();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD5AA770(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  __int128 v5;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  int *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  __int128 v23;
  uint64_t v24;
  _OWORD *v25;
  _OWORD *v26;
  __int128 v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 89) = *(_OWORD *)(a2 + 89);
  v4 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 121) = *(_OWORD *)(a2 + 121);
  *(_OWORD *)(a1 + 112) = v4;
  v5 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v5;
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_OWORD *)(a1 + 258) = *(_OWORD *)(a2 + 258);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 290) = *(_OWORD *)(a2 + 290);
  v6 = *(int *)(a3 + 68);
  v7 = (_OWORD *)(a1 + v6);
  v8 = (_OWORD *)(a2 + v6);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  v9 = type metadata accessor for IMS3GPPExtCharacteristic();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4630);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v8[1];
    *v7 = *v8;
    v7[1] = v12;
    *((_BYTE *)v7 + 32) = *((_BYTE *)v8 + 32);
    v13 = (int *)type metadata accessor for IMSGSMACharacteristic();
    v14 = v13[6];
    v15 = (char *)v7 + v14;
    v16 = (char *)v8 + v14;
    v17 = sub_1AD63AF28();
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v16, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v15, v16, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v15, 0, 1, v17);
    }
    v20 = v13[7];
    v21 = (_OWORD *)((char *)v7 + v20);
    v22 = (_OWORD *)((char *)v8 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v13[8];
    v25 = (_OWORD *)((char *)v7 + v24);
    v26 = (_OWORD *)((char *)v8 + v24);
    v27 = v26[1];
    *v25 = *v26;
    v25[1] = v27;
    v28 = v13[9];
    v29 = (char *)v7 + v28;
    v30 = (char *)v8 + v28;
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v29[8] = v30[8];
    v31 = v13[10];
    v32 = (char *)v7 + v31;
    v33 = (char *)v8 + v31;
    v34 = sub_1AD63B084();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  return a1;
}

uint64_t sub_1AD5AAA40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t, uint64_t, uint64_t);
  int v16;
  int v17;
  __int128 v18;
  int *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  void *v31;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void *, uint64_t, uint64_t);
  int v36;
  int v37;
  uint64_t v38;
  _OWORD *v39;
  _OWORD *v40;
  __int128 v41;
  uint64_t v42;
  _OWORD *v43;
  _OWORD *v44;
  __int128 v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  void *v50;
  const void *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  _BYTE *v68;
  _BYTE *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(uint64_t, uint64_t, uint64_t);
  int v74;
  int v75;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v6 = (_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 32) == 1)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 32);
  if (v7 == 1)
  {
    sub_1AD0256E4(a1 + 24);
LABEL_4:
    *(_OWORD *)(a1 + 24) = *v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 32) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_BYTE *)(a1 + 72) = *(_BYTE *)(a2 + 72);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_release();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_BYTE *)(a1 + 136) = *(_BYTE *)(a2 + 136);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  swift_release();
  v8 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v8;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  swift_release();
  *(_QWORD *)(a1 + 192) = *(_QWORD *)(a2 + 192);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  swift_release();
  v9 = *(_QWORD *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_QWORD *)(a1 + 224) = v9;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 232) = *(_QWORD *)(a2 + 232);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 240) = *(_BYTE *)(a2 + 240);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  swift_release();
  *(_QWORD *)(a1 + 264) = *(_QWORD *)(a2 + 264);
  *(_WORD *)(a1 + 272) = *(_WORD *)(a2 + 272);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  swift_release();
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  *(_WORD *)(a1 + 304) = *(_WORD *)(a2 + 304);
  v10 = *(int *)(a3 + 68);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = type metadata accessor for IMS3GPPExtCharacteristic();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
  v16 = v15(v11, 1, v13);
  v17 = v15(v12, 1, v13);
  if (!v16)
  {
    if (v17)
    {
      sub_1AD5AA734(v11);
      goto LABEL_12;
    }
    *(_OWORD *)v11 = *(_OWORD *)v12;
    swift_release();
    v28 = *(_QWORD *)(v12 + 24);
    *(_QWORD *)(v11 + 16) = *(_QWORD *)(v12 + 16);
    *(_QWORD *)(v11 + 24) = v28;
    swift_bridgeObjectRelease();
    *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
    v29 = (int *)type metadata accessor for IMSGSMACharacteristic();
    v30 = v29[6];
    v31 = (void *)(v11 + v30);
    v32 = (void *)(v12 + v30);
    v33 = sub_1AD63AF28();
    v34 = *(_QWORD *)(v33 - 8);
    v35 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v34 + 48);
    v36 = v35(v31, 1, v33);
    v37 = v35(v32, 1, v33);
    if (v36)
    {
      if (!v37)
      {
        (*(void (**)(void *, void *, uint64_t))(v34 + 32))(v31, v32, v33);
        (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v31, 0, 1, v33);
        goto LABEL_26;
      }
    }
    else
    {
      if (!v37)
      {
        (*(void (**)(void *, void *, uint64_t))(v34 + 40))(v31, v32, v33);
LABEL_26:
        v57 = v29[7];
        v58 = v11 + v57;
        v59 = v12 + v57;
        *(_OWORD *)(v11 + v57) = *(_OWORD *)(v12 + v57);
        swift_release();
        v60 = (_QWORD *)(v59 + 16);
        if (*(_QWORD *)(v58 + 24) != 1)
        {
          v61 = *(_QWORD *)(v59 + 24);
          if (v61 != 1)
          {
            *(_QWORD *)(v58 + 16) = *v60;
            *(_QWORD *)(v58 + 24) = v61;
            swift_bridgeObjectRelease();
LABEL_31:
            v62 = v29[8];
            v63 = v11 + v62;
            v64 = v12 + v62;
            *(_OWORD *)(v11 + v62) = *(_OWORD *)(v12 + v62);
            swift_release();
            v65 = (_QWORD *)(v64 + 16);
            if (*(_QWORD *)(v63 + 24) != 1)
            {
              v66 = *(_QWORD *)(v64 + 24);
              if (v66 != 1)
              {
                *(_QWORD *)(v63 + 16) = *v65;
                *(_QWORD *)(v63 + 24) = v66;
                swift_bridgeObjectRelease();
                goto LABEL_36;
              }
              sub_1AD0256E4(v63 + 16);
            }
            *(_OWORD *)(v63 + 16) = *(_OWORD *)v65;
LABEL_36:
            v67 = v29[9];
            v68 = (_BYTE *)(v11 + v67);
            v69 = (_BYTE *)(v12 + v67);
            *v68 = *v69;
            v68[1] = v69[1];
            v68[2] = v69[2];
            v68[3] = v69[3];
            v68[4] = v69[4];
            v68[5] = v69[5];
            v68[6] = v69[6];
            v68[7] = v69[7];
            v68[8] = v69[8];
            v70 = v29[10];
            v11 += v70;
            v12 += v70;
            v71 = sub_1AD63B084();
            v72 = *(_QWORD *)(v71 - 8);
            v73 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48);
            v74 = v73(v11, 1, v71);
            v75 = v73(v12, 1, v71);
            if (v74)
            {
              if (!v75)
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 32))(v11, v12, v71);
                (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v72 + 56))(v11, 0, 1, v71);
                return a1;
              }
            }
            else
            {
              if (!v75)
              {
                (*(void (**)(uint64_t, uint64_t, uint64_t))(v72 + 40))(v11, v12, v71);
                return a1;
              }
              (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v11, v71);
            }
            v26 = &qword_1ED2E7140;
            goto LABEL_13;
          }
          sub_1AD0256E4(v58 + 16);
        }
        *(_OWORD *)(v58 + 16) = *(_OWORD *)v60;
        goto LABEL_31;
      }
      (*(void (**)(void *, uint64_t))(v34 + 8))(v31, v33);
    }
    v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    goto LABEL_26;
  }
  if (v17)
  {
LABEL_12:
    v26 = &qword_1EECD4630;
LABEL_13:
    v27 = __swift_instantiateConcreteTypeFromMangledName(v26);
    memcpy((void *)v11, (const void *)v12, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    return a1;
  }
  v18 = *(_OWORD *)(v12 + 16);
  *(_OWORD *)v11 = *(_OWORD *)v12;
  *(_OWORD *)(v11 + 16) = v18;
  *(_BYTE *)(v11 + 32) = *(_BYTE *)(v12 + 32);
  v19 = (int *)type metadata accessor for IMSGSMACharacteristic();
  v20 = v19[6];
  v21 = (void *)(v11 + v20);
  v22 = (const void *)(v12 + v20);
  v23 = sub_1AD63AF28();
  v24 = *(_QWORD *)(v23 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v24 + 32))(v21, v22, v23);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
  }
  v38 = v19[7];
  v39 = (_OWORD *)(v11 + v38);
  v40 = (_OWORD *)(v12 + v38);
  v41 = v40[1];
  *v39 = *v40;
  v39[1] = v41;
  v42 = v19[8];
  v43 = (_OWORD *)(v11 + v42);
  v44 = (_OWORD *)(v12 + v42);
  v45 = v44[1];
  *v43 = *v44;
  v43[1] = v45;
  v46 = v19[9];
  v47 = v11 + v46;
  v48 = v12 + v46;
  *(_QWORD *)v47 = *(_QWORD *)v48;
  *(_BYTE *)(v47 + 8) = *(_BYTE *)(v48 + 8);
  v49 = v19[10];
  v50 = (void *)(v11 + v49);
  v51 = (const void *)(v12 + v49);
  v52 = sub_1AD63B084();
  v53 = *(_QWORD *)(v52 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v53 + 48))(v51, 1, v52))
  {
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v53 + 32))(v50, v51, v52);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v53 + 56))(v50, 0, 1, v52);
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
  return a1;
}

uint64_t sub_1AD5AB0AC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5AB0B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4630);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 68), a2, v8);
  }
}

uint64_t sub_1AD5AB138()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5AB144(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4630);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 68), a2, a2, v7);
  }
  return result;
}

void sub_1AD5AB1BC()
{
  unint64_t v0;

  sub_1AD5AB278();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1AD5AB278()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EECDE860)
  {
    type metadata accessor for IMS3GPPExtCharacteristic();
    v0 = sub_1AD63BC48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EECDE860);
  }
}

uint64_t sub_1AD5AB2CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD00B904(v1, a1);
}

uint64_t sub_1AD5AB2D8(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD00B950(a1, v1);
}

uint64_t (*sub_1AD5AB2E0())()
{
  return nullsub_1;
}

uint64_t sub_1AD5AB2F0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD5AB378(&qword_1EECDE868, (uint64_t)&unk_1AD6512B8);
  result = sub_1AD5AB378(&qword_1EECDE870, (uint64_t)&unk_1AD6512E0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for MarkUnreadRequest()
{
  uint64_t result;

  result = qword_1ED2E2638;
  if (!qword_1ED2E2638)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD5AB378(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for MarkUnreadRequest();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD5AB3B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5AB3C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1AD5AB400()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5AB40C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

id sub_1AD5AB450()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __CFString *v16;
  id v17;
  __CFString *v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  __CFString **v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  objc_class *v31;
  char *v32;
  char *v33;
  id v34;
  __CFString *v35;
  id v36;
  void *v37;
  uint64_t v38;
  objc_class *v39;
  char *v40;
  char *v41;
  id v42;
  uint64_t v43;
  objc_class *v44;
  char *v45;
  char *v46;
  unint64_t v47;
  unint64_t v48;
  objc_class *v49;
  char *v50;
  char *v51;
  id v52;
  __CFString *v53;
  id v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  objc_class *v58;
  char *v59;
  char *v60;
  id v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  objc_class *v65;
  id v66;
  __CFString *v67;
  id v68;
  unint64_t v69;
  unint64_t v70;
  char v71;
  objc_class *IsRichLinkAttributeWrapper;
  char *v73;
  char *v74;
  id v75;
  id v76;
  unint64_t v77;
  unint64_t v78;
  char v79;
  objc_class *v80;
  char *v81;
  char *v82;
  unint64_t v83;
  unint64_t v84;
  objc_class *v85;
  char *v86;
  unint64_t v87;
  unint64_t v88;
  objc_class *v89;
  char *v90;
  unint64_t v91;
  unint64_t v92;
  objc_class *v93;
  char *v94;
  unint64_t v95;
  unint64_t v96;
  objc_class *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  id v103;
  id v104;
  id v105;
  __int128 v107;
  __CFString *v108;
  __CFString *v109;
  __CFString *v110;
  __CFString *v111;
  __CFString *v112;
  __CFString *v113;
  __CFString *v114;
  __CFString *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  __CFString *v121;
  uint64_t v122;
  __CFString *v123;
  __CFString *v124;
  __CFString *v125;
  __int128 v126;
  _BYTE *v127;
  id v128;
  uint64_t v129;
  __int128 v130[27];
  _BYTE v131[432];
  _BYTE v132[280];
  objc_super v133;
  objc_super v134;
  objc_super v135;
  objc_super v136;
  objc_super v137;
  objc_super v138;
  objc_super v139;
  objc_super v140;
  objc_super v141;
  objc_super v142;
  objc_super v143;
  objc_super v144;
  _OWORD v145[27];
  _BYTE v146[40];
  _QWORD v147[3];
  uint64_t v148;
  uint64_t v149;

  v1 = type metadata accessor for LinkAttribute(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v119 = (uint64_t)&v107 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v118 = (uint64_t)&v107 - v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v107 - v6;
  v8 = *v0;
  v9 = v0[1];
  v10 = v0[2];
  v11 = objc_allocWithZone(MEMORY[0x1E0CB3778]);
  swift_bridgeObjectRetain();
  v12 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  v128 = objc_msgSend(v11, sel_initWithString_, v12);

  v13 = v8;
  v14 = *(_QWORD *)(v8 + 16);
  if (v14)
  {
    v116 = v7;
    v117 = v1;
    v15 = v13 + 32;
    v108 = CFSTR("__kIMTextStrikethroughAttributeName");
    v109 = CFSTR("__kIMTextUnderlineAttributeName");
    v110 = CFSTR("__kIMTextItalicAttributeName");
    v111 = CFSTR("__kIMTextBoldAttributeName");
    v112 = CFSTR("__kIMTextEffectAttributeName");
    v113 = CFSTR("__kIMLinkIsRichLinkAttributeName");
    v114 = CFSTR("__kIMLinkAttributeName");
    v115 = CFSTR("__kIMMentionConfirmedMention");
    v121 = CFSTR("__kIMBreadcrumbTextMarkerAttributeName");
    v123 = CFSTR("__kIMBreadcrumbTextOptionFlags");
    v124 = CFSTR("__kIMMessagePartAttributeName");
    v127 = &v131[120];
    v125 = CFSTR("__kIMBaseWritingDirectionAttributeName");
    v122 = v13;
    swift_bridgeObjectRetain();
    v107 = xmmword_1AD648160;
    while (1)
    {
      sub_1AD0CFC4C(v15, (uint64_t)v147);
      v20 = v148;
      v21 = v149;
      __swift_project_boxed_opaque_existential_1(v147, v148);
      (*(void (**)(uint64_t, uint64_t))(v21 + 16))(v20, v21);
      sub_1AD63B870();
      sub_1AD63B870();
      v22 = sub_1AD63B87C();
      v129 = sub_1AD63B87C();
      sub_1AD0CFC4C((uint64_t)v147, (uint64_t)v146);
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1B30);
      if (swift_dynamicCast())
      {
        memcpy(v131, v145, sizeof(v131));
        sub_1AD29ADF4(v127, v132);
        v23 = sub_1AD2A0AE4((uint64_t)v132);
        v24 = MBDIMFileTransferAttributeName;
        if (v23 == 3)
        {
          sub_1AD2A0BBC((uint64_t)v132);
          v24 = MBDIMLivePhotoAttributeName;
        }
        v16 = *v24;
        memcpy(v130, v131, sizeof(v130));
        v17 = objc_allocWithZone((Class)type metadata accessor for _ObjCFileTransferAttributeWrapper());
        v18 = v16;
        sub_1AD29B0D8((uint64_t)v131);
        v19 = sub_1AD5ACE28(v130);
        objc_msgSend(v128, sel_addAttribute_value_range_, v18, v19, v22, v129);

        sub_1AD2836A0((uint64_t)v131);
        goto LABEL_4;
      }
      if (!swift_dynamicCast())
        break;
      v25 = *(_QWORD *)&v145[0];
      *(_QWORD *)&v126 = v15;
      v26 = v14;
      v27 = v10;
      v28 = v9;
      v29 = *((_QWORD *)&v145[0] + 1);
      v30 = v145[1];
      v31 = (objc_class *)type metadata accessor for _ObjCBaseWritingDirectionAttributeWrapper();
      v32 = (char *)objc_allocWithZone(v31);
      v33 = &v32[OBJC_IVAR___BlastDoorBaseWritingDirectionAttribute_baseWritingDirectionAttribute];
      *(_QWORD *)v33 = v25;
      *((_QWORD *)v33 + 1) = v29;
      v34 = v128;
      v33[16] = v30;
      v133.receiver = v32;
      v133.super_class = v31;
      v35 = v125;
      v36 = objc_msgSendSuper2(&v133, sel_init);
      v37 = v34;
      v9 = v28;
      v10 = v27;
      v14 = v26;
      v15 = v126;
      objc_msgSend(v37, sel_addAttribute_value_range_, v35, v36, v22, v129, v107);
LABEL_18:

LABEL_4:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v146);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v147);
      v15 += 40;
      if (!--v14)
      {
        swift_bridgeObjectRelease();
        goto LABEL_44;
      }
    }
    if (swift_dynamicCast())
    {
      v126 = v145[0];
      v38 = *(_QWORD *)&v145[1];
      v39 = (objc_class *)type metadata accessor for _ObjCMessagePartAttributeWrapper();
      v40 = (char *)objc_allocWithZone(v39);
      v41 = &v40[OBJC_IVAR___BlastDoorMessagePartAttribute_messagePartAttribute];
      *(_OWORD *)v41 = v126;
      *((_QWORD *)v41 + 2) = v38;
      v134.receiver = v40;
      v134.super_class = v39;
      v35 = v124;
      v42 = objc_msgSendSuper2(&v134, sel_init, (_QWORD)v107, *((_QWORD *)&v107 + 1));
    }
    else if (swift_dynamicCast())
    {
      v126 = v145[0];
      v43 = *(_QWORD *)&v145[1];
      v44 = (objc_class *)type metadata accessor for _ObjCBreadcrumbTextOptionFlagsAttributeWrapper();
      v45 = (char *)objc_allocWithZone(v44);
      v46 = &v45[OBJC_IVAR___BlastDoorBreadcrumbTextOptionFlagsAttribute_breadcrumbTextOptionFlagsAttribute];
      *(_OWORD *)v46 = v126;
      *((_QWORD *)v46 + 2) = v43;
      v135.receiver = v45;
      v135.super_class = v44;
      v35 = v123;
      v42 = objc_msgSendSuper2(&v135, sel_init, (_QWORD)v107, *((_QWORD *)&v107 + 1));
    }
    else
    {
      if (!swift_dynamicCast())
      {
        v120 = v22;
        if (swift_dynamicCast())
        {
          v126 = v145[0];
          v57 = *((_QWORD *)&v145[1] + 1);
          v56 = *(_QWORD *)&v145[1];
          v58 = (objc_class *)type metadata accessor for _ObjCMentionAttributeWrapper();
          v59 = (char *)objc_allocWithZone(v58);
          v60 = &v59[OBJC_IVAR___BlastDoorMentionAttribute_mentionAttribute];
          *(_OWORD *)v60 = v126;
          *((_OWORD *)v60 + 1) = __PAIR128__(v57, v56);
          v137.receiver = v59;
          v137.super_class = v58;
          v35 = v115;
          v61 = objc_msgSendSuper2(&v137, sel_init, v107);
        }
        else
        {
          v62 = (uint64_t)v116;
          if (swift_dynamicCast())
          {
            v63 = v118;
            sub_1AD5AC0A4(v62, v118);
            v64 = v119;
            *(_QWORD *)&v126 = v9;
            sub_1AD0D3D2C(v63, v119, type metadata accessor for LinkAttribute);
            v65 = (objc_class *)type metadata accessor for _ObjCLinkAttributeWrapper(0);
            v66 = objc_allocWithZone(v65);
            sub_1AD0D3D2C(v64, (uint64_t)v66 + OBJC_IVAR___BlastDoorLinkAttribute_linkAttribute, type metadata accessor for LinkAttribute);
            v138.receiver = v66;
            v138.super_class = v65;
            v67 = v114;
            v68 = objc_msgSendSuper2(&v138, sel_init);
            sub_1AD066230(v64, type metadata accessor for LinkAttribute);
            v9 = v126;
            objc_msgSend(v128, sel_addAttribute_value_range_, v67, v68, v120, v129);

            sub_1AD066230(v63, type metadata accessor for LinkAttribute);
            goto LABEL_4;
          }
          if (swift_dynamicCast())
          {
            v70 = *((_QWORD *)&v145[0] + 1);
            v69 = *(_QWORD *)&v145[0];
            *(_QWORD *)&v126 = v15;
            v71 = v145[1];
            IsRichLinkAttributeWrapper = (objc_class *)type metadata accessor for _ObjCLinkIsRichLinkAttributeWrapper();
            v73 = (char *)objc_allocWithZone(IsRichLinkAttributeWrapper);
            v74 = &v73[OBJC_IVAR___BlastDoorLinkIsRichLinkAttribute_linkIsRichLinkAttribute];
            *(_OWORD *)v74 = __PAIR128__(v70, v69);
            v74[16] = v71;
            v75 = v128;
            v139.receiver = v73;
            v139.super_class = IsRichLinkAttributeWrapper;
            v35 = v113;
            v76 = objc_msgSendSuper2(&v139, sel_init, v107);
LABEL_28:
            v36 = v76;
            v15 = v126;
            objc_msgSend(v75, sel_addAttribute_value_range_, v35, v76, v120, v129, v107);
            goto LABEL_18;
          }
          if (swift_dynamicCast())
          {
            v78 = *((_QWORD *)&v145[0] + 1);
            v77 = *(_QWORD *)&v145[0];
            *(_QWORD *)&v126 = v15;
            v79 = v145[1];
            v80 = (objc_class *)type metadata accessor for _ObjCTextEffectAttributeWrapper();
            v81 = (char *)objc_allocWithZone(v80);
            v82 = &v81[OBJC_IVAR___BlastDoorTextEffectAttribute_textEffectAttribute];
            *(_OWORD *)v82 = __PAIR128__(v78, v77);
            v82[16] = v79;
            v75 = v128;
            v140.receiver = v81;
            v140.super_class = v80;
            v35 = v112;
            v76 = objc_msgSendSuper2(&v140, sel_init, v107);
            goto LABEL_28;
          }
          if (swift_dynamicCast())
          {
            v84 = *((_QWORD *)&v145[0] + 1);
            v83 = *(_QWORD *)&v145[0];
            v85 = (objc_class *)type metadata accessor for _ObjCTextBoldAttributeWrapper();
            v86 = (char *)objc_allocWithZone(v85);
            *(_OWORD *)&v86[OBJC_IVAR___BlastDoorTextBoldAttribute_textBoldAttribute] = __PAIR128__(v84, v83);
            v141.receiver = v86;
            v141.super_class = v85;
            v35 = v111;
            v61 = objc_msgSendSuper2(&v141, sel_init, v107);
          }
          else if (swift_dynamicCast())
          {
            v88 = *((_QWORD *)&v145[0] + 1);
            v87 = *(_QWORD *)&v145[0];
            v89 = (objc_class *)type metadata accessor for _ObjCTextItalicAttributeWrapper();
            v90 = (char *)objc_allocWithZone(v89);
            *(_OWORD *)&v90[OBJC_IVAR___BlastDoorTextItalicAttribute_textItalicAttribute] = __PAIR128__(v88, v87);
            v142.receiver = v90;
            v142.super_class = v89;
            v35 = v110;
            v61 = objc_msgSendSuper2(&v142, sel_init, v107);
          }
          else if (swift_dynamicCast())
          {
            v92 = *((_QWORD *)&v145[0] + 1);
            v91 = *(_QWORD *)&v145[0];
            v93 = (objc_class *)type metadata accessor for _ObjCTextUnderlineAttributeWrapper();
            v94 = (char *)objc_allocWithZone(v93);
            *(_OWORD *)&v94[OBJC_IVAR___BlastDoorTextUnderlineAttribute_textUnderlineAttribute] = __PAIR128__(v92, v91);
            v143.receiver = v94;
            v143.super_class = v93;
            v35 = v109;
            v61 = objc_msgSendSuper2(&v143, sel_init, v107);
          }
          else
          {
            if (!swift_dynamicCast())
            {
              if (qword_1EECD1350 != -1)
                swift_once();
              __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
              v99 = swift_allocObject();
              *(_OWORD *)(v99 + 16) = v107;
              sub_1AD0CFC4C((uint64_t)v147, (uint64_t)v145);
              sub_1AD5AC01C((uint64_t)v145, (uint64_t)v130);
              if (*((_QWORD *)&v130[1] + 1))
              {
                sub_1AD00FA24(v130, (uint64_t)v131);
                sub_1AD0CFC4C((uint64_t)v131, (uint64_t)v130);
                v100 = sub_1AD63B7A4();
                v102 = v101;
                __swift_destroy_boxed_opaque_existential_1((uint64_t)v131);
              }
              else
              {
                sub_1AD5AC064((uint64_t)v130);
                v102 = 0xE300000000000000;
                v100 = 7104878;
              }
              sub_1AD5AC064((uint64_t)v145);
              *(_QWORD *)(v99 + 56) = MEMORY[0x1E0DEA968];
              *(_QWORD *)(v99 + 64) = sub_1AD0469B8();
              *(_QWORD *)(v99 + 32) = v100;
              *(_QWORD *)(v99 + 40) = v102;
              sub_1AD63BB94();
              sub_1AD63B480();
              swift_bridgeObjectRelease();
              goto LABEL_4;
            }
            v96 = *((_QWORD *)&v145[0] + 1);
            v95 = *(_QWORD *)&v145[0];
            v97 = (objc_class *)type metadata accessor for _ObjCTextStrikethroughAttributeWrapper();
            v98 = (char *)objc_allocWithZone(v97);
            *(_OWORD *)&v98[OBJC_IVAR___BlastDoorTextStrikethroughAttribute_textStrikethroughAttribute] = __PAIR128__(v96, v95);
            v144.receiver = v98;
            v144.super_class = v97;
            v35 = v108;
            v61 = objc_msgSendSuper2(&v144, sel_init, v107);
          }
        }
        v36 = v61;
        v52 = v128;
        v53 = v35;
        v54 = v36;
        v55 = v120;
        goto LABEL_17;
      }
      v126 = v145[0];
      v48 = *((_QWORD *)&v145[1] + 1);
      v47 = *(_QWORD *)&v145[1];
      v49 = (objc_class *)type metadata accessor for _ObjCBreadcrumbTextMarkerAttributeWrapper();
      v50 = (char *)objc_allocWithZone(v49);
      v51 = &v50[OBJC_IVAR___BlastDoorBreadcrumbTextMarkerAttribute_breadcrumbTextMarkerAttribute];
      *(_OWORD *)v51 = v126;
      *((_OWORD *)v51 + 1) = __PAIR128__(v48, v47);
      v136.receiver = v50;
      v136.super_class = v49;
      v35 = v121;
      v42 = objc_msgSendSuper2(&v136, sel_init, v107);
    }
    v36 = v42;
    v52 = v128;
    v53 = v35;
    v54 = v36;
    v55 = v22;
LABEL_17:
    objc_msgSend(v52, sel_addAttribute_value_range_, v53, v54, v55, v129, v107);
    goto LABEL_18;
  }
LABEL_44:
  v103 = objc_allocWithZone(MEMORY[0x1E0CB3498]);
  v104 = v128;
  v105 = objc_msgSend(v103, sel_initWithAttributedString_, v128);

  return v105;
}

uint64_t sub_1AD5AC01C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDE878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD5AC064(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDE878);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD5AC0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LinkAttribute(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD5AC158()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD5AC20C(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___BlastDoorFileTransferAttribute_attachments);
  swift_beginAccess();
  *v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5AC25C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___BlastDoorFileTransferAttribute_attachments);
  swift_beginAccess();
  *v3 = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD5AC2C4())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

void *sub_1AD5AC314()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___BlastDoorFileTransferAttribute_imageInfo);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1AD5AC36C(void *a1)
{
  sub_1AD5ACD0C(a1, &OBJC_IVAR___BlastDoorFileTransferAttribute_imageInfo);
}

uint64_t (*sub_1AD5AC378())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

id sub_1AD5AC404()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR___BlastDoorFileTransferAttribute_attachmentSubtype);
  swift_beginAccess();
  return *v1;
}

void sub_1AD5AC4A4(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR___BlastDoorFileTransferAttribute_attachmentSubtype);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_1AD5AC4F4(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR___BlastDoorFileTransferAttribute_attachmentSubtype);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_1AD5AC554())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_1AD5AC600()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  v1 = (uint64_t *)(v0 + OBJC_IVAR___BlastDoorFileTransferAttribute_name);
  swift_beginAccess();
  v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1AD5AC6BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + OBJC_IVAR___BlastDoorFileTransferAttribute_name);
  swift_beginAccess();
  *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5AC718(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = (_QWORD *)(*a2 + OBJC_IVAR___BlastDoorFileTransferAttribute_name);
  swift_beginAccess();
  *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD5AC780())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_1AD5AC808()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + OBJC_IVAR___BlastDoorFileTransferAttribute_datasize;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1AD5AC894(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(v1 + OBJC_IVAR___BlastDoorFileTransferAttribute_datasize);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1AD5AC8DC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_1AD5AC92C()
{
  return sub_1AD5ACA20(&OBJC_IVAR___BlastDoorFileTransferAttribute_utiType);
}

uint64_t sub_1AD5AC944(uint64_t a1, uint64_t a2)
{
  return sub_1AD5ACB00(a1, a2, &OBJC_IVAR___BlastDoorFileTransferAttribute_utiType);
}

uint64_t (*sub_1AD5AC950())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

id sub_1AD5AC9A0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  void *v4;

  v3 = a1 + *a3;
  swift_beginAccess();
  if (!*(_QWORD *)(v3 + 8))
    return 0;
  swift_bridgeObjectRetain();
  v4 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1AD5ACA14()
{
  return sub_1AD5ACA20(&OBJC_IVAR___BlastDoorFileTransferAttribute_mimeType);
}

uint64_t sub_1AD5ACA20(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  v2 = (uint64_t *)(v1 + *a1);
  swift_beginAccess();
  v3 = *v2;
  swift_bridgeObjectRetain();
  return v3;
}

uint64_t sub_1AD5ACA7C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;

  if (a3)
  {
    v6 = sub_1AD63B768();
    v8 = v7;
  }
  else
  {
    v6 = 0;
    v8 = 0;
  }
  v9 = (uint64_t *)(a1 + *a4);
  swift_beginAccess();
  *v9 = v6;
  v9[1] = v8;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5ACAF4(uint64_t a1, uint64_t a2)
{
  return sub_1AD5ACB00(a1, a2, &OBJC_IVAR___BlastDoorFileTransferAttribute_mimeType);
}

uint64_t sub_1AD5ACB00(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  _QWORD *v6;

  v6 = (_QWORD *)(v3 + *a3);
  swift_beginAccess();
  *v6 = a1;
  v6[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5ACB58(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v6 = *a1;
  v5 = a1[1];
  v7 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v7 = v6;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1AD5ACBBC())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

id sub_1AD5ACC0C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  id *v3;

  v3 = (id *)(a1 + *a3);
  swift_beginAccess();
  return *v3;
}

void *sub_1AD5ACC50()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR___BlastDoorFileTransferAttribute_legacyAnimoji);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1AD5ACCA8(uint64_t a1, uint64_t a2, void *a3, _QWORD *a4)
{
  void **v5;
  void *v6;
  id v7;

  v5 = (void **)(a1 + *a4);
  swift_beginAccess();
  v6 = *v5;
  *v5 = a3;
  v7 = a3;

}

void sub_1AD5ACD00(void *a1)
{
  sub_1AD5ACD0C(a1, &OBJC_IVAR___BlastDoorFileTransferAttribute_legacyAnimoji);
}

void sub_1AD5ACD0C(void *a1, _QWORD *a2)
{
  uint64_t v2;
  void **v4;
  void *v5;

  v4 = (void **)(v2 + *a2);
  swift_beginAccess();
  v5 = *v4;
  *v4 = a1;

}

void sub_1AD5ACD58(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  void *v5;
  void **v6;
  void *v7;
  id v8;

  v5 = *a1;
  v6 = (void **)(*a2 + *a5);
  swift_beginAccess();
  v7 = *v6;
  *v6 = v5;
  v8 = v5;

}

uint64_t (*sub_1AD5ACDB4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

id sub_1AD5ACDF8(const void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_1AD5ACE28(a1);
}

id sub_1AD5ACE28(const void *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void **v7;
  char *v8;
  char *v9;
  void **v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  objc_class *v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  objc_class *v23;
  char *v24;
  char *v25;
  id v26;
  void *v27;
  objc_class *v28;
  char *v29;
  id v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  void *v39;
  objc_class *v40;
  id result;
  uint64_t v42;
  void **v43;
  void **v44;
  char *v45;
  uint64_t *v46;
  char *v47;
  objc_super v48;
  objc_super v49;
  objc_super v50;
  objc_super v51;
  uint64_t v52;
  _QWORD v53[55];

  v3 = type metadata accessor for FileTransferAttribute.AttachmentInfo(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v53, a1, 0x1B0uLL);
  v7 = (void **)&v1[OBJC_IVAR___BlastDoorFileTransferAttribute_imageInfo];
  *(_QWORD *)&v1[OBJC_IVAR___BlastDoorFileTransferAttribute_imageInfo] = 0;
  v8 = &v1[OBJC_IVAR___BlastDoorFileTransferAttribute_utiType];
  *(_QWORD *)v8 = 0;
  *((_QWORD *)v8 + 1) = 0;
  v46 = (uint64_t *)v8;
  v9 = &v1[OBJC_IVAR___BlastDoorFileTransferAttribute_mimeType];
  *(_QWORD *)v9 = 0;
  *((_QWORD *)v9 + 1) = 0;
  v47 = v9;
  v10 = (void **)&v1[OBJC_IVAR___BlastDoorFileTransferAttribute_legacyAnimoji];
  *(_QWORD *)&v1[OBJC_IVAR___BlastDoorFileTransferAttribute_legacyAnimoji] = 0;
  v52 = MEMORY[0x1E0DEE9D8];
  v11 = v53[2];
  v12 = *(_QWORD *)(v53[2] + 16);
  if (v12)
  {
    v43 = v7;
    v44 = v10;
    v13 = v53[2] + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v14 = *(_QWORD *)(v4 + 72);
    v45 = v1;
    v15 = v1;
    v42 = v11;
    swift_bridgeObjectRetain();
    do
    {
      sub_1AD0D3D2C(v13, (uint64_t)v6, type metadata accessor for FileTransferAttribute.AttachmentInfo);
      v16 = (objc_class *)type metadata accessor for _ObjCFileTransferAttribute_AttachmentInfoWrapper(0);
      v17 = objc_allocWithZone(v16);
      sub_1AD0D3D2C((uint64_t)v6, (uint64_t)v17 + OBJC_IVAR___BlastDoorFileTransferAttribute_AttachmentInfo_fileTransferAttribute_AttachmentInfo, type metadata accessor for FileTransferAttribute.AttachmentInfo);
      v51.receiver = v17;
      v51.super_class = v16;
      objc_msgSendSuper2(&v51, sel_init);
      v18 = sub_1AD066230((uint64_t)v6, type metadata accessor for FileTransferAttribute.AttachmentInfo);
      MEMORY[0x1AF44A674](v18);
      if (*(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v52 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
        sub_1AD63B9D8();
      sub_1AD63B9F0();
      sub_1AD63B9CC();
      v13 += v14;
      --v12;
    }
    while (v12);
    swift_bridgeObjectRelease();
    v19 = v52;
    v10 = v44;
    v1 = v45;
    v7 = v43;
  }
  else
  {
    v20 = v1;
    v19 = MEMORY[0x1E0DEE9D8];
  }
  *(_QWORD *)&v1[OBJC_IVAR___BlastDoorFileTransferAttribute_attachments] = v19;
  if ((v53[5] & 1) == 0)
  {
    v22 = v53[3];
    v21 = v53[4];
    v23 = (objc_class *)type metadata accessor for _ObjCFileTransferAttribute_ImageInfoWrapper();
    v24 = (char *)objc_allocWithZone(v23);
    v25 = &v24[OBJC_IVAR___BlastDoorFileTransferAttribute_ImageInfo_fileTransferAttribute_ImageInfo];
    *(_QWORD *)v25 = v22;
    *((_QWORD *)v25 + 1) = v21;
    v48.receiver = v24;
    v48.super_class = v23;
    v26 = objc_msgSendSuper2(&v48, sel_init);
    swift_beginAccess();
    v27 = *v7;
    *v7 = v26;

  }
  v28 = (objc_class *)type metadata accessor for _ObjCEnumFileTransferAttributeAttachmentSubtypeWrapper();
  v29 = (char *)objc_allocWithZone(v28);
  sub_1AD29ADF4(&v53[15], &v29[OBJC_IVAR___BlastDoorFileTransferAttributeAttachmentSubtypeWrapper_fileTransferAttribute_AttachmentSubtype]);
  sub_1AD5AD838((uint64_t)&v53[15]);
  v50.receiver = v29;
  v50.super_class = v28;
  v30 = 0;
  *(_QWORD *)&v1[OBJC_IVAR___BlastDoorFileTransferAttribute_attachmentSubtype] = objc_msgSendSuper2(&v50, sel_init);
  if ((v53[14] & 1) == 0)
    v30 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithInteger_, v53[13]);
  v31 = v53[53];
  if (!v53[53]
    || (v32 = &v1[OBJC_IVAR___BlastDoorFileTransferAttribute_name],
        *(_QWORD *)v32 = v53[52],
        *((_QWORD *)v32 + 1) = v31,
        v33 = v53[10],
        *(_QWORD *)&v1[OBJC_IVAR___BlastDoorFileTransferAttribute_datasize] = v53[6],
        v33 == 1))
  {
    result = (id)sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v34 = v53[9];
    v35 = v46;
    swift_beginAccess();
    *v35 = v34;
    v35[1] = v33;
    swift_bridgeObjectRetain();
    sub_1AD003E48(v34, v33);
    swift_bridgeObjectRelease();
    v36 = v53[11];
    v37 = v53[12];
    v38 = v47;
    swift_beginAccess();
    *(_QWORD *)v38 = v36;
    *((_QWORD *)v38 + 1) = v37;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    sub_1AD2836A0((uint64_t)v53);
    swift_beginAccess();
    v39 = *v10;
    *v10 = v30;

    v40 = (objc_class *)type metadata accessor for _ObjCFileTransferAttributeWrapper();
    v49.receiver = v1;
    v49.super_class = v40;
    return objc_msgSendSuper2(&v49, sel_init);
  }
  return result;
}

uint64_t sub_1AD5AD2B4()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  id v3;
  id *v4;
  id v5;
  id v6;
  _QWORD *v7;

  v1 = v0;
  sub_1AD63BD38();
  sub_1AD63B810();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  swift_beginAccess();
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  swift_beginAccess();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E3198);
  sub_1AD63B798();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  v2 = (id *)(v0 + OBJC_IVAR___BlastDoorFileTransferAttribute_legacyAnimoji);
  swift_beginAccess();
  v3 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDE8C0);
  sub_1AD63B798();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  v4 = (id *)(v1 + OBJC_IVAR___BlastDoorFileTransferAttribute_attachmentSubtype);
  swift_beginAccess();
  v5 = *v4;
  v6 = objc_msgSend(v5, sel_description);
  sub_1AD63B768();

  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  v7 = (_QWORD *)(v1 + OBJC_IVAR___BlastDoorFileTransferAttribute_attachments);
  swift_beginAccess();
  if (*v7 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1AD63BE34();
    swift_bridgeObjectRelease();
  }
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  return 0;
}

id sub_1AD5AD680()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void sub_1AD5AD6A0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1AD5AD6F8()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for _ObjCFileTransferAttributeWrapper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1AD5AD7BC()
{
  const void *v0;
  id v1;
  _BYTE v3[432];
  _BYTE __dst[432];

  memcpy(__dst, v0, sizeof(__dst));
  memcpy(v3, v0, sizeof(v3));
  v1 = objc_allocWithZone((Class)type metadata accessor for _ObjCFileTransferAttributeWrapper());
  sub_1AD29B0D8((uint64_t)__dst);
  return sub_1AD5ACE28(v3);
}

uint64_t type metadata accessor for _ObjCFileTransferAttributeWrapper()
{
  return objc_opt_self();
}

uint64_t sub_1AD5AD838(uint64_t a1)
{
  __int128 v3;
  __int128 v4;

  v3 = *(_OWORD *)(a1 + 224);
  v4 = *(_OWORD *)(a1 + 240);
  sub_1AD29AEB4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a1 + 40), *(_QWORD *)(a1 + 48), *(_QWORD *)(a1 + 56), *(_QWORD *)(a1 + 64), *(_QWORD *)(a1 + 72), *(_QWORD *)(a1 + 80), *(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96), *(_QWORD *)(a1 + 104), *(_QWORD *)(a1 + 112), *(_QWORD *)(a1 + 120), *(_QWORD *)(a1 + 128), *(_QWORD *)(a1 + 136), *(_QWORD *)(a1 + 144),
    *(_QWORD *)(a1 + 152),
    *(_QWORD *)(a1 + 160),
    *(_QWORD *)(a1 + 168),
    *(_QWORD *)(a1 + 176),
    *(_QWORD *)(a1 + 184),
    *(_QWORD *)(a1 + 192),
    *(_QWORD *)(a1 + 200),
    *(_QWORD *)(a1 + 208),
    *(_QWORD *)(a1 + 216),
    v3,
    *((uint64_t *)&v3 + 1),
    v4,
    *((uint64_t *)&v4 + 1),
    *(_QWORD *)(a1 + 256),
    *(_QWORD *)(a1 + 264),
    *(_BYTE *)(a1 + 272));
  return a1;
}

id sub_1AD5AD8B8()
{
  const void *v0;
  id v1;
  _BYTE v3[432];
  _BYTE __dst[432];

  memcpy(__dst, v0, sizeof(__dst));
  memcpy(v3, v0, sizeof(v3));
  v1 = objc_allocWithZone((Class)type metadata accessor for _ObjCFileTransferAttributeWrapper());
  sub_1AD29B0D8((uint64_t)__dst);
  return sub_1AD5ACE28(v3);
}

uint64_t sub_1AD5AD914@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___BlastDoorFileTransferAttribute_attachments);
  swift_beginAccess();
  *a2 = *v3;
  return swift_bridgeObjectRetain();
}

id sub_1AD5AD96C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_1Tm_2(a1, &OBJC_IVAR___BlastDoorFileTransferAttribute_imageInfo, a2);
}

void sub_1AD5AD978(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1AD5ACD58(a1, a2, a3, a4, &OBJC_IVAR___BlastDoorFileTransferAttribute_imageInfo);
}

id sub_1AD5AD994@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR___BlastDoorFileTransferAttribute_attachmentSubtype);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1AD5AD9E8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___BlastDoorFileTransferAttribute_name);
  swift_beginAccess();
  v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD5ADA40@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t result;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR___BlastDoorFileTransferAttribute_datasize);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1AD5ADA90(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR___BlastDoorFileTransferAttribute_datasize);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t sub_1AD5ADADC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_9Tm_0(a1, &OBJC_IVAR___BlastDoorFileTransferAttribute_utiType, a2);
}

uint64_t sub_1AD5ADAE8(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5ACB58(a1, a2, a3, a4, &OBJC_IVAR___BlastDoorFileTransferAttribute_utiType);
}

uint64_t sub_1AD5ADB04@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_9Tm_0(a1, &OBJC_IVAR___BlastDoorFileTransferAttribute_mimeType, a2);
}

uint64_t keypath_get_9Tm_0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  v5 = v4[1];
  *a3 = *v4;
  a3[1] = v5;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD5ADB60(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5ACB58(a1, a2, a3, a4, &OBJC_IVAR___BlastDoorFileTransferAttribute_mimeType);
}

id sub_1AD5ADB7C@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_1Tm_2(a1, &OBJC_IVAR___BlastDoorFileTransferAttribute_legacyAnimoji, a2);
}

id keypath_get_1Tm_2@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, void **a3@<X8>)
{
  void **v4;
  void *v5;

  v4 = (void **)(*a1 + *a2);
  swift_beginAccess();
  v5 = *v4;
  *a3 = *v4;
  return v5;
}

void sub_1AD5ADBD4(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1AD5ACD58(a1, a2, a3, a4, &OBJC_IVAR___BlastDoorFileTransferAttribute_legacyAnimoji);
}

uint64_t sub_1AD5ADBF0()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD5ADBFC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t sub_1AD5ADC18()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t sub_1AD5ADC34()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t sub_1AD5ADC50()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t sub_1AD5ADC6C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t sub_1AD5ADC88()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t sub_1AD5ADCA4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t sub_1AD5ADCC0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t sub_1AD5ADCDC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t sub_1AD5ADCF8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t sub_1AD5ADD14()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t sub_1AD5ADD30()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t sub_1AD5ADD4C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t sub_1AD5ADD68()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t sub_1AD5ADD84()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t sub_1AD5ADDA0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x108))();
}

uint64_t sub_1AD5ADDBC()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x110))();
}

uint64_t sub_1AD5ADDD8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x118))();
}

uint64_t sub_1AD5ADDF4()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x120))();
}

uint64_t sub_1AD5ADE10()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x128))();
}

uint64_t sub_1AD5ADE2C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x130))();
}

uint64_t sub_1AD5ADE48()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t sub_1AD5ADE64()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

uint64_t sub_1AD5ADE80()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x148))();
}

uint64_t sub_1AD5ADE9C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 336))();
}

uint64_t sub_1AD5ADEA4@<X0>(uint64_t (**a1)(uint64_t *a1)@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2430);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2618);
  v3 = swift_initStackObject();
  *(_OWORD *)(v3 + 16) = xmmword_1AD648160;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2620);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AD696C30;
  v5 = sub_1AD2835D4();
  *(_QWORD *)(v4 + 32) = &type metadata for BaseWritingDirectionAttribute;
  *(_QWORD *)(v4 + 40) = v5;
  v6 = sub_1AD28354C();
  *(_QWORD *)(v4 + 48) = &type metadata for MessagePartAttribute;
  *(_QWORD *)(v4 + 56) = v6;
  v7 = sub_1AD282D14();
  *(_QWORD *)(v4 + 64) = &type metadata for FileTransferAttribute;
  *(_QWORD *)(v4 + 72) = v7;
  v8 = sub_1AD2834C4();
  *(_QWORD *)(v4 + 80) = &type metadata for BreadcrumbTextOptionFlagsAttribute;
  *(_QWORD *)(v4 + 88) = v8;
  v9 = sub_1AD28343C();
  *(_QWORD *)(v4 + 96) = &type metadata for BreadcrumbTextMarkerAttribute;
  *(_QWORD *)(v4 + 104) = v9;
  v10 = sub_1AD283390();
  *(_QWORD *)(v4 + 112) = &type metadata for MentionAttribute;
  *(_QWORD *)(v4 + 120) = v10;
  v11 = type metadata accessor for LinkAttribute(0);
  v12 = sub_1ACFF9724(&qword_1ED2E24A8, type metadata accessor for LinkAttribute, (uint64_t)&protocol conformance descriptor for LinkAttribute);
  *(_QWORD *)(v4 + 128) = v11;
  *(_QWORD *)(v4 + 136) = v12;
  v13 = sub_1AD283308();
  *(_QWORD *)(v4 + 144) = &type metadata for TextEffectAttribute;
  *(_QWORD *)(v4 + 152) = v13;
  v14 = sub_1AD283280();
  *(_QWORD *)(v4 + 160) = &type metadata for TextBoldAttribute;
  *(_QWORD *)(v4 + 168) = v14;
  v15 = sub_1AD2831F8();
  *(_QWORD *)(v4 + 176) = &type metadata for TextItalicAttribute;
  *(_QWORD *)(v4 + 184) = v15;
  v16 = sub_1AD283170();
  *(_QWORD *)(v4 + 192) = &type metadata for TextUnderlineAttribute;
  *(_QWORD *)(v4 + 200) = v16;
  v17 = sub_1AD2830E8();
  *(_QWORD *)(v4 + 208) = &type metadata for TextStrikethroughAttribute;
  *(_QWORD *)(v4 + 216) = v17;
  v18 = sub_1AD283060();
  *(_QWORD *)(v4 + 224) = &type metadata for LinkIsRichLinkAttribute;
  *(_QWORD *)(v4 + 232) = v18;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = v4;
  *(_QWORD *)(v3 + 32) = sub_1AD5EDC58;
  *(_QWORD *)(v3 + 40) = v19;
  v20 = sub_1AD28548C(v3);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v20;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2490);
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD5EDCA8;
  *(_QWORD *)(inited + 40) = v21;
  return sub_1AD280ADC((_QWORD *)inited, a1);
}

uint64_t sub_1AD5AE0C8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1[4];
  v2 = v1[5];
  v4 = v1[6];
  v5 = v1[7];
  v6 = v1[8];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  swift_retain();
  return sub_1AD0E2EC4(v4);
}

__n128 sub_1AD5AE110(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __n128 v6;

  v6 = *(__n128 *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 32);
  v4 = *(_QWORD *)(v1 + 48);
  swift_release();
  sub_1AD0096D4(v4);
  result = v6;
  *(_OWORD *)(v1 + 32) = *(_OWORD *)a1;
  *(__n128 *)(v1 + 48) = v6;
  *(_QWORD *)(v1 + 64) = v3;
  return result;
}

uint64_t sub_1AD5AE17C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[10];
  v3 = v1[11];
  *a1 = v1[9];
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD5AE1AC(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 72) = *a1;
  *(_QWORD *)(v1 + 88) = v3;
  return result;
}

uint64_t sub_1AD5AE1F0@<X0>(uint64_t *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = v1[6];
  if (v2 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = v1[7];
    v4 = v1[8];
    *a1 = v2;
    a1[1] = v3;
    a1[2] = v4;
    return sub_1AD00C45C(v2);
  }
  return result;
}

uint64_t sub_1AD5AE25C()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 88))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD5AE2B8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[60];
  v2 = v1[61];
  v4 = v1[62];
  v5 = v1[63];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 sub_1AD5AE2EC(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[31].n128_i64[0];
  v6 = v1[31].n128_i64[1];
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  v1[30] = *a1;
  v1[31].n128_u64[0] = v3;
  v1[31].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD5AE340()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 504) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 496);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t sub_1AD5AE3BC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[21];
  v3 = v1[22];
  *a1 = v1[20];
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD5AE3EC(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  v1[10] = *a1;
  v1[11].n128_u64[0] = v3;
  return result;
}

uint64_t sub_1AD5AE430()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 176))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t AudioMessage.$participantDestinationIdentifiers.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[4];
  v3 = v1[5];
  *a1 = v1[3];
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 AudioMessage.$participantDestinationIdentifiers.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 24) = *a1;
  *(_QWORD *)(v1 + 40) = v3;
  return result;
}

uint64_t AudioMessage.participantDestinationIdentifiers.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 40))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD5AE55C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, __int128 *a4@<X3>, __int128 *a5@<X4>, __int128 *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, char a12, uint64_t a13, char a14, uint64_t a15, char a16, __int128 *a17, char a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27,__int128 *a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32,char a33,char a34,uint64_t a35,char a36,char *a37,uint64_t a38,uint64_t a39)
{
  uint64_t v45;
  uint64_t v46;
  char v47;
  int *v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  _QWORD *v63;
  _QWORD *v64;
  uint64_t v65;
  __int128 v66;
  _QWORD *v67;
  uint64_t v68;
  uint64_t result;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  uint64_t v83;
  uint64_t v84;
  _BYTE v86[208];

  v81 = a17[1];
  v82 = *a17;
  v79 = a17[3];
  v80 = a17[2];
  v78 = *((_QWORD *)a17 + 8);
  v45 = *((_QWORD *)a4 + 2);
  v46 = *((_QWORD *)a4 + 3);
  v70 = *((_QWORD *)a5 + 2);
  v71 = *((_QWORD *)a5 + 3);
  v72 = *((_QWORD *)a6 + 2);
  v73 = *((_QWORD *)a6 + 3);
  v74 = *(_QWORD *)(a7 + 16);
  v75 = *(_QWORD *)(a7 + 24);
  v83 = *((_QWORD *)a28 + 2);
  v84 = *((_QWORD *)a28 + 3);
  sub_1AD00FF28(a29, (uint64_t)v86, &qword_1ED2E1B00);
  v47 = *a37;
  sub_1AD2A5214(a1, a9, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
  v48 = (int *)type metadata accessor for TextMessage(0);
  sub_1AD2A5214(a2, a9 + v48[5], type metadata accessor for TextMessage.MessageType);
  sub_1AD00FF28(a3, a9 + v48[6], &qword_1ED2E7140);
  v49 = *a4;
  v50 = *a5;
  v51 = *a6;
  v52 = a9 + v48[7];
  *(_QWORD *)(v52 + 16) = v45;
  *(_QWORD *)(v52 + 24) = v46;
  *(_OWORD *)v52 = v49;
  v53 = a9 + v48[8];
  *(_OWORD *)v53 = v50;
  *(_QWORD *)(v53 + 16) = v70;
  *(_QWORD *)(v53 + 24) = v71;
  v54 = a9 + v48[9];
  *(_OWORD *)v54 = v51;
  *(_QWORD *)(v54 + 16) = v72;
  *(_QWORD *)(v54 + 24) = v73;
  v55 = a9 + v48[10];
  *(_OWORD *)v55 = *(_OWORD *)a7;
  *(_QWORD *)(v55 + 16) = v74;
  *(_QWORD *)(v55 + 24) = v75;
  v56 = (_QWORD *)(a9 + v48[11]);
  *v56 = a8;
  v56[1] = a10;
  v57 = a9 + v48[12];
  *(_QWORD *)v57 = a11;
  *(_BYTE *)(v57 + 8) = a12 & 1;
  v58 = a9 + v48[13];
  *(_QWORD *)v58 = a13;
  *(_BYTE *)(v58 + 8) = a14 & 1;
  v59 = a9 + v48[14];
  *(_QWORD *)v59 = a15;
  *(_BYTE *)(v59 + 8) = a16 & 1;
  v60 = a9 + v48[15];
  *(_OWORD *)v60 = v82;
  *(_OWORD *)(v60 + 16) = v81;
  *(_OWORD *)(v60 + 32) = v80;
  *(_OWORD *)(v60 + 48) = v79;
  *(_QWORD *)(v60 + 64) = v78;
  *(_BYTE *)(a9 + v48[16]) = a18;
  v61 = (_QWORD *)(a9 + v48[17]);
  *v61 = a19;
  v61[1] = a20;
  v62 = (_QWORD *)(a9 + v48[18]);
  *v62 = a21;
  v62[1] = a22;
  v63 = (_QWORD *)(a9 + v48[19]);
  *v63 = a23;
  v63[1] = a24;
  v64 = (_QWORD *)(a9 + v48[20]);
  *v64 = a25;
  v64[1] = a26;
  *(_BYTE *)(a9 + v48[21]) = a27;
  v65 = a9 + v48[22];
  v66 = *a28;
  *(_QWORD *)(v65 + 16) = v83;
  *(_QWORD *)(v65 + 24) = v84;
  *(_OWORD *)v65 = v66;
  sub_1AD00FF28((uint64_t)v86, a9 + v48[23], &qword_1ED2E1B00);
  v67 = (_QWORD *)(a9 + v48[24]);
  *v67 = a30;
  v67[1] = a31;
  *(_BYTE *)(a9 + v48[25]) = a32;
  *(_BYTE *)(a9 + v48[26]) = a33;
  *(_BYTE *)(a9 + v48[27]) = a34;
  v68 = a9 + v48[28];
  *(_QWORD *)v68 = a35;
  *(_BYTE *)(v68 + 8) = a36 & 1;
  *(_BYTE *)(a9 + v48[29]) = v47;
  result = sub_1AD00FF28(a38, a9 + v48[30], (uint64_t *)&unk_1ED2E2D98);
  *(_QWORD *)(a9 + v48[31]) = a39;
  return result;
}

uint64_t TextMessage.$threadIdentifierGUID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t type metadata accessor for TextMessage(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E2038);
}

__n128 TextMessage.$threadIdentifierGUID.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 28));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t TextMessage.$threadOriginatorFallbackHash.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 32));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 TextMessage.$threadOriginatorFallbackHash.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 32));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t TextMessage.$expressiveSendStyleIdentifier.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 36));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 TextMessage.$expressiveSendStyleIdentifier.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 36));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t TextMessage.$groupID.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 40));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 TextMessage.$groupID.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 40));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t TextMessage.$lastPublisherOfOffGridStatus.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 88));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

__n128 TextMessage.$lastPublisherOfOffGridStatus.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 88));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t TextMessage.threadIdentifierGUID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for TextMessage(0) + 28);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t TextMessage.threadOriginatorFallbackHash.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for TextMessage(0) + 32);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t TextMessage.expressiveSendStyleIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for TextMessage(0) + 36);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t TextMessage.groupID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for TextMessage(0) + 40);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t TextMessage.lastPublisherOfOffGridStatus.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for TextMessage(0) + 88);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD5AEFBC@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD5AEFEC(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

_QWORD *sub_1AD5AF03C(_QWORD *a1)
{
  uint64_t v1;
  __int128 v3;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  _OWORD v11[15];
  uint64_t v12;

  sub_1AD0CFB8C((uint64_t)a1, (uint64_t)v11);
  sub_1AD009758(v1 + 32, &qword_1ED2E2680);
  v3 = v11[13];
  *(_OWORD *)(v1 + 224) = v11[12];
  *(_OWORD *)(v1 + 240) = v3;
  *(_OWORD *)(v1 + 256) = v11[14];
  *(_QWORD *)(v1 + 272) = v12;
  v4 = v11[9];
  *(_OWORD *)(v1 + 160) = v11[8];
  *(_OWORD *)(v1 + 176) = v4;
  v5 = v11[11];
  *(_OWORD *)(v1 + 192) = v11[10];
  *(_OWORD *)(v1 + 208) = v5;
  v6 = v11[5];
  *(_OWORD *)(v1 + 96) = v11[4];
  *(_OWORD *)(v1 + 112) = v6;
  v7 = v11[7];
  *(_OWORD *)(v1 + 128) = v11[6];
  *(_OWORD *)(v1 + 144) = v7;
  v8 = v11[1];
  *(_OWORD *)(v1 + 32) = v11[0];
  *(_OWORD *)(v1 + 48) = v8;
  v9 = v11[3];
  *(_OWORD *)(v1 + 64) = v11[2];
  *(_OWORD *)(v1 + 80) = v9;
  return sub_1AD046A30(a1);
}

uint64_t sub_1AD5AF0C8(uint64_t a1)
{
  uint64_t v1;
  void *v3;
  _BYTE __src[440];

  sub_1ACFF64C0(a1, (uint64_t)__src, &qword_1ED2E2FE8);
  v3 = (void *)(v1 + 32);
  sub_1AD009758((uint64_t)v3, &qword_1ED2E2FE8);
  memcpy(v3, __src, 0x1B8uLL);
  return sub_1AD009758(a1, &qword_1ED2E2FE8);
}

uint64_t sub_1AD5AF134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5AF1AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1 + 32, a1, &qword_1ED2E2FE8);
}

uint64_t TextMessage.MessageSummaryInfo.$sourceApplicationID.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[1];
  v2 = v1[2];
  v4 = v1[3];
  v5 = v1[4];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 TextMessage.MessageSummaryInfo.$sourceApplicationID.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_QWORD *)(v1 + 32);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_QWORD *)(v1 + 32) = v4;
  return result;
}

uint64_t TextMessage.MessageSummaryInfo.$associatedBalloonBundleID.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[5];
  v2 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 TextMessage.MessageSummaryInfo.$associatedBalloonBundleID.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 40) = *a1;
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v4;
  return result;
}

uint64_t TextMessage.MessageSummaryInfo.sourceApplicationID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 32) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 24);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t TextMessage.MessageSummaryInfo.associatedBalloonBundleID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 64) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t TextMessage.ScheduleType.rawValue.getter()
{
  char *v0;

  return qword_1AD6976E8[*v0];
}

uint64_t sub_1AD5AF3EC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(v1 + 32, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a1 + 192) = v23;
    *(_OWORD *)(a1 + 208) = v4;
    *(_OWORD *)(a1 + 224) = v25;
    *(_QWORD *)(a1 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a1 + 128) = v19;
    *(_OWORD *)(a1 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a1 + 160) = v21;
    *(_OWORD *)(a1 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a1 + 64) = v15;
    *(_OWORD *)(a1 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a1 + 96) = v17;
    *(_OWORD *)(a1 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a1 = v11;
    *(_OWORD *)(a1 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a1 + 32) = v13;
    *(_OWORD *)(a1 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5AF478()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD5AF4A4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD5AF4D8())()
{
  return nullsub_1;
}

uint64_t sub_1AD5AF4E8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD5AF514(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD5AF548())()
{
  return nullsub_1;
}

uint64_t sub_1AD5AF558(uint64_t *a1)
{
  return sub_1AD003A6C(*a1, a1[1], a1[2]);
}

uint64_t (*sub_1AD5AF584(uint64_t *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  a1[3] = (uint64_t)v1;
  v3 = v1[6];
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = v1[7];
    v5 = v1[8];
    *a1 = v3;
    a1[1] = v4;
    a1[2] = v5;
    sub_1AD00C45C(v3);
    return sub_1AD541778;
  }
  return result;
}

void (*sub_1AD5AF610(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = v1[5];
  v5 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  *v3 = v1[4];
  v3[1] = v4;
  v3[2] = v5;
  v3[3] = v6;
  v3[4] = v7;
  v3[5] = v1;
  swift_retain();
  sub_1AD0E2EC4(v5);
  return sub_1AD541940;
}

uint64_t sub_1AD5AF684()
{
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0();
}

uint64_t (*sub_1AD5AF6A4(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(_QWORD *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 88);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD541B30;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD5AF728(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[10];
  v4 = v1[11];
  *a1 = v1[9];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD541C28;
}

uint64_t sub_1AD5AF778()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD5AF780(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 96) = a1;
  return result;
}

uint64_t (*sub_1AD5AF7A8())()
{
  return nullsub_1;
}

uint64_t sub_1AD5AF7B8()
{
  return 0x6567617373654D3CLL;
}

uint64_t sub_1AD5AF7D4()
{
  return 0x6567617373654D3CLL;
}

uint64_t (*sub_1AD5AF7F4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD34BDE0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD5AF87C(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34BF10;
}

uint64_t sub_1AD5AF8E0(_QWORD *a1)
{
  uint64_t v1;
  char *v3;
  uint64_t result;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;

  v3 = (char *)malloc(0x1F8uLL);
  *a1 = v3;
  *((_QWORD *)v3 + 62) = v1;
  result = sub_1ACFF64C0(v1 + 32, (uint64_t)(v3 + 248), &qword_1ED2E2680);
  if (*((_QWORD *)v3 + 34))
  {
    v5 = *(_OWORD *)(v3 + 456);
    *((_OWORD *)v3 + 12) = *(_OWORD *)(v3 + 440);
    *((_OWORD *)v3 + 13) = v5;
    *((_OWORD *)v3 + 14) = *(_OWORD *)(v3 + 472);
    *((_QWORD *)v3 + 30) = *((_QWORD *)v3 + 61);
    v6 = *(_OWORD *)(v3 + 392);
    *((_OWORD *)v3 + 8) = *(_OWORD *)(v3 + 376);
    *((_OWORD *)v3 + 9) = v6;
    v7 = *(_OWORD *)(v3 + 424);
    *((_OWORD *)v3 + 10) = *(_OWORD *)(v3 + 408);
    *((_OWORD *)v3 + 11) = v7;
    v8 = *(_OWORD *)(v3 + 328);
    *((_OWORD *)v3 + 4) = *(_OWORD *)(v3 + 312);
    *((_OWORD *)v3 + 5) = v8;
    v9 = *(_OWORD *)(v3 + 360);
    *((_OWORD *)v3 + 6) = *(_OWORD *)(v3 + 344);
    *((_OWORD *)v3 + 7) = v9;
    v10 = *(_OWORD *)(v3 + 264);
    *(_OWORD *)v3 = *(_OWORD *)(v3 + 248);
    *((_OWORD *)v3 + 1) = v10;
    v11 = *(_OWORD *)(v3 + 296);
    result = (uint64_t)sub_1AD3AA16C;
    *((_OWORD *)v3 + 2) = *(_OWORD *)(v3 + 280);
    *((_OWORD *)v3 + 3) = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void (*sub_1AD5AF990(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x530uLL);
  *a1 = v3;
  v3[165] = v1;
  sub_1ACFF64C0(v1 + 32, (uint64_t)v3, &qword_1ED2E2FE8);
  return sub_1AD3AA348;
}

uint64_t sub_1AD5AF9E8()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD5AF9F0(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD5AF9F8())()
{
  return nullsub_1;
}

uint64_t sub_1AD5AFA08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1 + 8, a1, &qword_1ED2E23D0);
}

uint64_t sub_1AD5AFA2C(uint64_t a1)
{
  uint64_t v1;

  return sub_1ACFF6540(a1, v1 + 8, &qword_1ED2E23D0);
}

uint64_t (*sub_1AD5AFA4C())()
{
  return nullsub_1;
}

uint64_t sub_1AD5AFA5C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 504);
  if (v3 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(a1 + 496);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD5AFAC8(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD5AFAE8(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 504);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 496);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD5AFB74;
  }
  return result;
}

uint64_t sub_1AD5AFB74(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5AFBD8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[62];
  v8 = a2[63];
  swift_retain();
  sub_1AD003E48(v5, v6);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  a2[60] = v4;
  a2[61] = v3;
  a2[62] = v5;
  a2[63] = v6;
  return result;
}

void (*sub_1AD5AFC4C(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[60];
  v4 = v1[61];
  v6 = v1[62];
  v7 = v1[63];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD5AFCB0;
}

void sub_1AD5AFCB0(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[62];
  v9 = v4[63];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD003E48(v7, v3);
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[60] = v6;
    v4[61] = v5;
    v4[62] = v7;
    v4[63] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD003F24(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD003F24(v8, v9);
    v4[60] = v6;
    v4[61] = v5;
    v4[62] = v7;
    v4[63] = v3;
  }
  free(v2);
}

uint64_t sub_1AD5AFD70()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD5AFD78(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 512) = a1;
  return result;
}

uint64_t (*sub_1AD5AFDA0())()
{
  return nullsub_1;
}

uint64_t sub_1AD5AFDB0()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD5AFDDC(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*sub_1AD5AFE10())()
{
  return nullsub_1;
}

uint64_t sub_1AD5AFE20()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AD5AFE2C(uint64_t result, uint64_t a2, char a3)
{
  uint64_t v3;

  *(_QWORD *)(v3 + 16) = result;
  *(_QWORD *)(v3 + 24) = a2;
  *(_BYTE *)(v3 + 32) = a3 & 1;
  return result;
}

uint64_t (*sub_1AD5AFE3C())()
{
  return nullsub_1;
}

uint64_t sub_1AD5AFE4C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD5AFE78(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 40) = a1;
  *(_QWORD *)(v2 + 48) = a2;
  return result;
}

uint64_t (*sub_1AD5AFEAC())()
{
  return nullsub_1;
}

uint64_t sub_1AD5AFEBC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = *(_QWORD *)(v1 + 80);
  v3 = *(_QWORD *)(v1 + 88);
  v4 = *(_QWORD *)(v1 + 96);
  v5 = *(_QWORD *)(v1 + 104);
  v6 = *(_QWORD *)(v1 + 112);
  v7 = *(_QWORD *)(v1 + 120);
  v8 = *(_QWORD *)(v1 + 128);
  v9 = *(_QWORD *)(v1 + 136);
  v10 = *(_QWORD *)(v1 + 144);
  v11 = *(_QWORD *)(v1 + 152);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 56);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(v1 + 64);
  *(_QWORD *)(a1 + 24) = v2;
  *(_QWORD *)(a1 + 32) = v3;
  *(_QWORD *)(a1 + 40) = v4;
  *(_QWORD *)(a1 + 48) = v5;
  *(_QWORD *)(a1 + 56) = v6;
  *(_QWORD *)(a1 + 64) = v7;
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = v9;
  *(_QWORD *)(a1 + 88) = v10;
  *(_QWORD *)(a1 + 96) = v11;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1AD0E2EC4(v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD5AFF60(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  __n128 result;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  v7 = *a1;
  v5 = *((_QWORD *)a1 + 3);
  v6 = *((_QWORD *)a1 + 2);
  v9 = a1[3];
  v8 = *((_QWORD *)a1 + 8);
  v10 = *((_QWORD *)a1 + 12);
  v11 = *((_QWORD *)a1 + 11);
  v3 = *(_QWORD *)(v1 + 104);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD0096D4(v3);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v1 + 56) = v7;
  *(_QWORD *)(v1 + 72) = v6;
  *(_QWORD *)(v1 + 80) = v5;
  *(_OWORD *)(v1 + 88) = a1[2];
  *(_OWORD *)(v1 + 104) = v9;
  *(_QWORD *)(v1 + 120) = v8;
  result = *(__n128 *)((char *)a1 + 72);
  *(__n128 *)(v1 + 128) = result;
  *(_QWORD *)(v1 + 144) = v11;
  *(_QWORD *)(v1 + 152) = v10;
  return result;
}

uint64_t (*sub_1AD5B0068())()
{
  return nullsub_1;
}

uint64_t sub_1AD5B0078@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 176);
  if (v2)
  {
    *a2 = v2;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5B00D8()
{
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0();
}

uint64_t (*sub_1AD5B00F8(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(_QWORD *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 176);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD5B017C;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5B017C(_QWORD *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) == 0)
    return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(*a1);
  v2 = swift_bridgeObjectRetain();
  _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5B01C4(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[20] = v4;
  a2[21] = v3;
  a2[22] = v5;
  return result;
}

uint64_t (*sub_1AD5B0224(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[21];
  v4 = v1[22];
  *a1 = v1[20];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD5B0274;
}

uint64_t sub_1AD5B0274(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = (_QWORD *)a1[3];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v5[20] = v3;
    v5[21] = v2;
    v5[22] = v4;
    swift_bridgeObjectRelease();
    return swift_release();
  }
  else
  {
    swift_release();
    result = swift_bridgeObjectRelease();
    v5[20] = v3;
    v5[21] = v2;
    v5[22] = v4;
  }
  return result;
}

uint64_t AudioMessage.content.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *v1;
  v3 = v1[1];
  v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  return sub_1AD00C45C(v2);
}

__n128 AudioMessage.content.setter(__n128 *a1)
{
  uint64_t *v1;
  uint64_t v2;
  __n128 result;
  __n128 v4;

  v4 = *a1;
  v2 = a1[1].n128_i64[0];
  sub_1AD0096E4(*v1);
  result = v4;
  *(__n128 *)v1 = v4;
  v1[2] = v2;
  return result;
}

uint64_t (*AudioMessage.content.modify())()
{
  return nullsub_1;
}

uint64_t AudioMessage.participantDestinationIdentifiers.setter()
{
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0();
}

uint64_t (*AudioMessage.participantDestinationIdentifiers.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(_QWORD *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 40);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD4EC53C;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*AudioMessage.$participantDestinationIdentifiers.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[4];
  v4 = v1[5];
  *a1 = v1[3];
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD4EC634;
}

uint64_t AudioMessage.inlineAudioMessages.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t AudioMessage.inlineAudioMessages.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = a1;
  return result;
}

uint64_t (*AudioMessage.inlineAudioMessages.modify())()
{
  return nullsub_1;
}

BlastDoor::TextMessage::ScheduleType_optional __swiftcall TextMessage.ScheduleType.init(defaultingRawValue:)(Swift::Int_optional defaultingRawValue)
{
  char *v1;
  char v2;

  if (defaultingRawValue.is_nil)
  {
    *v1 = 5;
  }
  else
  {
    v2 = 0;
    switch(defaultingRawValue.value)
    {
      case 0:
        *v1 = 1;
        break;
      case 1:
        *v1 = 2;
        break;
      case 2:
        *v1 = 3;
        break;
      case 0xALL:
        v2 = 4;
        goto LABEL_8;
      default:
LABEL_8:
        *v1 = v2;
        break;
    }
  }
  return (BlastDoor::TextMessage::ScheduleType_optional)defaultingRawValue.value;
}

BlastDoor::TextMessage::ScheduleType_optional __swiftcall TextMessage.ScheduleType.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;

  if ((unint64_t)(rawValue + 1) > 0xB)
    *v1 = 5;
  else
    *v1 = byte_1AD6976D6[rawValue + 1];
  return (BlastDoor::TextMessage::ScheduleType_optional)rawValue;
}

BOOL sub_1AD5B0538(char *a1, char *a2)
{
  return qword_1AD6976E8[*a1] == qword_1AD6976E8[*a2];
}

uint64_t sub_1AD5B055C()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD5B05A8()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD5B05DC()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

BlastDoor::TextMessage::ScheduleType_optional sub_1AD5B0624(Swift::Int *a1)
{
  return TextMessage.ScheduleType.init(rawValue:)(*a1);
}

void sub_1AD5B062C(_QWORD *a1@<X8>)
{
  char *v1;

  *a1 = qword_1AD6976E8[*v1];
}

uint64_t sub_1AD5B0644()
{
  sub_1AD5EDBB8();
  return sub_1AD63B930();
}

uint64_t sub_1AD5B06A0()
{
  sub_1AD5EDBB8();
  return sub_1AD63B8D0();
}

uint64_t TextMessage.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD0D3D2C(v1, a1, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
}

uint64_t TextMessage.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD33F8D8(a1, v1, (uint64_t (*)(_QWORD))type metadata accessor for Metadata);
}

uint64_t (*TextMessage.metadata.modify())()
{
  return nullsub_1;
}

uint64_t TextMessage.messageSubType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TextMessage(0);
  return sub_1AD0D3D2C(v1 + *(int *)(v3 + 20), a1, type metadata accessor for TextMessage.MessageType);
}

uint64_t type metadata accessor for TextMessage.MessageType(uint64_t a1)
{
  return sub_1AD011E7C(a1, (uint64_t *)&unk_1ED2E2048);
}

uint64_t TextMessage.messageSubType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TextMessage(0);
  return sub_1AD33F8D8(a1, v1 + *(int *)(v3 + 20), type metadata accessor for TextMessage.MessageType);
}

uint64_t (*TextMessage.messageSubType.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.replyToGUID.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TextMessage(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 24), a1, &qword_1ED2E7140);
}

uint64_t TextMessage.replyToGUID.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TextMessage(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 24), &qword_1ED2E7140);
}

uint64_t (*TextMessage.replyToGUID.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t sub_1AD5B0894@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for TextMessage(0) + 28);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD5B091C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for TextMessage(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t TextMessage.threadIdentifierGUID.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TextMessage(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*TextMessage.threadIdentifierGUID.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for TextMessage(0) + 28);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD5B0A4C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for TextMessage(0) + 28));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD5B0AA0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for TextMessage(0) + 28));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*TextMessage.$threadIdentifierGUID.modify(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for TextMessage(0) + 28);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD5B0B9C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for TextMessage(0) + 32);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD5B0C24(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for TextMessage(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t TextMessage.threadOriginatorFallbackHash.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TextMessage(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*TextMessage.threadOriginatorFallbackHash.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for TextMessage(0) + 32);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD5B0D54@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for TextMessage(0) + 32));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD5B0DA8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for TextMessage(0) + 32));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*TextMessage.$threadOriginatorFallbackHash.modify(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for TextMessage(0) + 32);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD5B0EA4@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for TextMessage(0) + 36);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD5B0F2C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for TextMessage(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t TextMessage.expressiveSendStyleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TextMessage(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*TextMessage.expressiveSendStyleIdentifier.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for TextMessage(0) + 36);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD5B105C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for TextMessage(0) + 36));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD5B10B0(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for TextMessage(0) + 36));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*TextMessage.$expressiveSendStyleIdentifier.modify(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for TextMessage(0) + 36);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t sub_1AD5B11AC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for TextMessage(0) + 40);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD5B1234(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for TextMessage(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t TextMessage.groupID.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TextMessage(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*TextMessage.groupID.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for TextMessage(0) + 40);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD5B1364@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for TextMessage(0) + 40));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD5B13B8(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for TextMessage(0) + 40));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*TextMessage.$groupID.modify(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for TextMessage(0) + 40);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

uint64_t TextMessage.currentGroupName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 44));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextMessage.currentGroupName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextMessage(0) + 44));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TextMessage.currentGroupName.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.groupParticipantVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 48));
}

uint64_t TextMessage.groupParticipantVersion.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for TextMessage(0);
  v6 = v2 + *(int *)(result + 48);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*TextMessage.groupParticipantVersion.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.groupProtocolVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 52));
}

uint64_t TextMessage.groupProtocolVersion.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for TextMessage(0);
  v6 = v2 + *(int *)(result + 52);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*TextMessage.groupProtocolVersion.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.groupPhotoCreationTime.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 56));
}

uint64_t TextMessage.groupPhotoCreationTime.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for TextMessage(0);
  v6 = v2 + *(int *)(result + 56);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*TextMessage.groupPhotoCreationTime.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.MessageSummaryInfo.updatedDateWithServerTime.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t TextMessage.MessageSummaryInfo.updatedDateWithServerTime.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*TextMessage.MessageSummaryInfo.updatedDateWithServerTime.modify())()
{
  return nullsub_1;
}

uint64_t TextMessage.MessageSummaryInfo.hasBeenRetried.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t TextMessage.MessageSummaryInfo.hasBeenRetried.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

uint64_t (*TextMessage.MessageSummaryInfo.hasBeenRetried.modify())()
{
  return nullsub_1;
}

uint64_t TextMessage.MessageSummaryInfo.sourceApplicationID.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*TextMessage.MessageSummaryInfo.sourceApplicationID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 32);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 24);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3A3688;
  }
  return result;
}

void (*TextMessage.MessageSummaryInfo.$sourceApplicationID.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[1];
  v4 = v1[2];
  v6 = v1[3];
  v7 = v1[4];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD003F9C;
}

uint64_t TextMessage.MessageSummaryInfo.associatedBalloonBundleID.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*TextMessage.MessageSummaryInfo.associatedBalloonBundleID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 64);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 56);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD597D50;
  }
  return result;
}

void (*TextMessage.MessageSummaryInfo.$associatedBalloonBundleID.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[5];
  v4 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD597E8C;
}

uint64_t TextMessage.messageSummaryInfo.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 60));
  v4 = *v3;
  v5 = v3[1];
  v6 = v3[2];
  v7 = v3[3];
  v8 = v3[4];
  v9 = v3[5];
  v10 = v3[6];
  v11 = v3[7];
  v12 = v3[8];
  *a1 = v4;
  a1[1] = v5;
  a1[2] = v6;
  a1[3] = v7;
  a1[4] = v8;
  a1[5] = v9;
  a1[6] = v10;
  a1[7] = v11;
  a1[8] = v12;
  return sub_1AD290A0C(v4, v5, v6, v7, v8, v9, v10, v11, v12);
}

__n128 TextMessage.messageSummaryInfo.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  __n128 result;
  __n128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;

  v8 = *a1;
  v6 = a1[2];
  v7 = a1[1];
  v5 = (__n128)a1[3];
  v2 = *((_QWORD *)a1 + 8);
  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for TextMessage(0) + 60));
  sub_1AD290878(*v3, v3[1], v3[2], v3[3], v3[4], v3[5], v3[6], v3[7], v3[8]);
  *(_OWORD *)v3 = v8;
  *((_OWORD *)v3 + 1) = v7;
  result = v5;
  *((_OWORD *)v3 + 2) = v6;
  *((__n128 *)v3 + 3) = v5;
  v3[8] = v2;
  return result;
}

uint64_t (*TextMessage.messageSummaryInfo.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.isAutoReply.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 64));
}

uint64_t TextMessage.isAutoReply.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TextMessage(0);
  *(_BYTE *)(v1 + *(int *)(result + 64)) = a1;
  return result;
}

uint64_t (*TextMessage.isAutoReply.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.availabilityVerificationRecipientChannelIDPrefix.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 68));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextMessage.availabilityVerificationRecipientChannelIDPrefix.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextMessage(0) + 68));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TextMessage.availabilityVerificationRecipientChannelIDPrefix.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.availabilityVerificationRecipientEncryptionValidationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 72));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextMessage.availabilityVerificationRecipientEncryptionValidationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextMessage(0) + 72));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TextMessage.availabilityVerificationRecipientEncryptionValidationToken.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.availabilityOffGridRecipientSubscriptionValidationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 76));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextMessage.availabilityOffGridRecipientSubscriptionValidationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextMessage(0) + 76));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TextMessage.availabilityOffGridRecipientSubscriptionValidationToken.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.availabilityOffGridRecipientEncryptionValidationToken.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 80));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextMessage.availabilityOffGridRecipientEncryptionValidationToken.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextMessage(0) + 80));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TextMessage.availabilityOffGridRecipientEncryptionValidationToken.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.seenAsOffGrid.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 84));
}

uint64_t TextMessage.seenAsOffGrid.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TextMessage(0);
  *(_BYTE *)(v1 + *(int *)(result + 84)) = a1;
  return result;
}

uint64_t (*TextMessage.seenAsOffGrid.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t sub_1AD5B1E14@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for TextMessage(0) + 88);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD5B1E9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for TextMessage(0);
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t TextMessage.lastPublisherOfOffGridStatus.setter(uint64_t a1, uint64_t a2)
{
  type metadata accessor for TextMessage(0);
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*TextMessage.lastPublisherOfOffGridStatus.modify(uint64_t a1))(uint64_t *, char)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for TextMessage(0) + 88);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD14196C;
  }
  return result;
}

uint64_t sub_1AD5B1FCC@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for TextMessage(0) + 88));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD5B2020(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for TextMessage(0) + 88));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*TextMessage.$lastPublisherOfOffGridStatus.modify(_QWORD *a1))(uint64_t **, char)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for TextMessage(0) + 88);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD141B74;
}

_QWORD *TextMessage.nicknameInformation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD v5[25];

  v3 = type metadata accessor for TextMessage(0);
  sub_1AD00FF28(v1 + *(int *)(v3 + 92), (uint64_t)v5, &qword_1ED2E1B00);
  sub_1AD00FF28((uint64_t)v5, a1, &qword_1ED2E1B00);
  return sub_1AD290A74(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD290AE0);
}

uint64_t TextMessage.nicknameInformation.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _BYTE v4[200];
  _QWORD v5[25];

  sub_1AD00FF28(a1, (uint64_t)v4, &qword_1ED2E1B00);
  v2 = v1 + *(int *)(type metadata accessor for TextMessage(0) + 92);
  sub_1AD00FF28(v2, (uint64_t)v5, &qword_1ED2E1B00);
  sub_1AD290A74(v5, (void (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_1AD2908E0);
  return sub_1AD00FF28((uint64_t)v4, v2, &qword_1ED2E1B00);
}

uint64_t (*TextMessage.nicknameInformation.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.truncatedNicknameRecordKey.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 96));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TextMessage.truncatedNicknameRecordKey.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for TextMessage(0) + 96));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TextMessage.truncatedNicknameRecordKey.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.isExpirable.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 100));
}

uint64_t TextMessage.isExpirable.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TextMessage(0);
  *(_BYTE *)(v1 + *(int *)(result + 100)) = a1;
  return result;
}

uint64_t (*TextMessage.isExpirable.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.isSOS.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 104));
}

uint64_t TextMessage.isSOS.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TextMessage(0);
  *(_BYTE *)(v1 + *(int *)(result + 104)) = a1;
  return result;
}

uint64_t (*TextMessage.isSOS.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.isCritical.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 108));
}

uint64_t TextMessage.isCritical.setter(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TextMessage(0);
  *(_BYTE *)(v1 + *(int *)(result + 108)) = a1;
  return result;
}

uint64_t (*TextMessage.isCritical.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.replicationSourceID.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for TextMessage(0) + 112));
}

uint64_t TextMessage.replicationSourceID.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v6;

  result = type metadata accessor for TextMessage(0);
  v6 = v2 + *(int *)(result + 112);
  *(_QWORD *)v6 = a1;
  *(_BYTE *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*TextMessage.replicationSourceID.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.scheduleType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for TextMessage(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 116));
  return result;
}

uint64_t TextMessage.scheduleType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for TextMessage(0);
  *(_BYTE *)(v1 + *(int *)(result + 116)) = v2;
  return result;
}

uint64_t (*TextMessage.scheduleType.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.scheduledDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TextMessage(0);
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 120), a1, (uint64_t *)&unk_1ED2E2D98);
}

uint64_t TextMessage.scheduledDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for TextMessage(0);
  return sub_1ACFF6540(a1, v1 + *(int *)(v3 + 120), (uint64_t *)&unk_1ED2E2D98);
}

uint64_t (*TextMessage.scheduledDate.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.replicatedFallbackGUIDs.getter()
{
  type metadata accessor for TextMessage(0);
  return swift_bridgeObjectRetain();
}

uint64_t TextMessage.replicatedFallbackGUIDs.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for TextMessage(0) + 124);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*TextMessage.replicatedFallbackGUIDs.modify())(_QWORD)
{
  type metadata accessor for TextMessage(0);
  return nullsub_1;
}

uint64_t TextMessage.debugDescription.getter()
{
  sub_1AD63BD38();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63B810();
  type metadata accessor for TextMessage(0);
  type metadata accessor for TextMessage.MessageType(0);
  sub_1AD63BE04();
  sub_1AD63B810();
  type metadata accessor for Metadata();
  sub_1AD63BE04();
  sub_1AD63B810();
  return 0;
}

uint64_t sub_1AD5B279C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28D004, (uint64_t (*)(void))sub_1AD28D058);
}

uint64_t sub_1AD5B27B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2905CC, (uint64_t (*)(void))sub_1AD290610);
}

uint64_t sub_1AD5B27C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A2F40, (uint64_t (*)(void))sub_1AD2A2DA8);
}

uint64_t sub_1AD5B27D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A2EB8, (uint64_t (*)(void))sub_1AD2A2D20);
}

uint64_t sub_1AD5B27EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A2E74, (uint64_t (*)(void))sub_1AD2A2CDC);
}

uint64_t sub_1AD5B2800(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1ED2DA310, type metadata accessor for TextMessage.MessageType, (uint64_t)&protocol conformance descriptor for TextMessage.MessageType);
  result = sub_1ACFF9724(&qword_1ED2DA710, type metadata accessor for TextMessage.MessageType, (uint64_t)&protocol conformance descriptor for TextMessage.MessageType);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD5B2860()
{
  unint64_t result;

  result = qword_1EECDE8C8;
  if (!qword_1EECDE8C8)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for TextMessage.ScheduleType, &type metadata for TextMessage.ScheduleType);
    atomic_store(result, (unint64_t *)&qword_1EECDE8C8);
  }
  return result;
}

uint64_t sub_1AD5B28A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2909C8, (uint64_t (*)(void))sub_1AD290C0C);
}

uint64_t sub_1AD5B28B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD290834, (uint64_t (*)(void))sub_1AD290BC8);
}

uint64_t sub_1AD5B28CC(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1ACFF9724(&qword_1ED2E2028, type metadata accessor for TextMessage, (uint64_t)&protocol conformance descriptor for TextMessage);
  result = sub_1ACFF9724(&qword_1ED2E2030, type metadata accessor for TextMessage, (uint64_t)&protocol conformance descriptor for TextMessage);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD5B2930(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  v3 = a1[2];
  sub_1AD00C45C(*a1);
  return sub_1AD003A6C(v1, v2, v3);
}

uint64_t sub_1AD5B2988()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD5B29B0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[9];
  v3 = a1[10];
  v4 = a1[11];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD5B29E8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD5B2A24@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD5B2A58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  __int128 v12;
  __int128 v13;
  __int128 v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  uint64_t v26;

  result = sub_1ACFF64C0(a1 + 32, (uint64_t)&v11, &qword_1ED2E2680);
  if (*((_QWORD *)&v12 + 1))
  {
    v4 = v24;
    *(_OWORD *)(a2 + 192) = v23;
    *(_OWORD *)(a2 + 208) = v4;
    *(_OWORD *)(a2 + 224) = v25;
    *(_QWORD *)(a2 + 240) = v26;
    v5 = v20;
    *(_OWORD *)(a2 + 128) = v19;
    *(_OWORD *)(a2 + 144) = v5;
    v6 = v22;
    *(_OWORD *)(a2 + 160) = v21;
    *(_OWORD *)(a2 + 176) = v6;
    v7 = v16;
    *(_OWORD *)(a2 + 64) = v15;
    *(_OWORD *)(a2 + 80) = v7;
    v8 = v18;
    *(_OWORD *)(a2 + 96) = v17;
    *(_OWORD *)(a2 + 112) = v8;
    v9 = v12;
    *(_OWORD *)a2 = v11;
    *(_OWORD *)(a2 + 16) = v9;
    v10 = v14;
    *(_OWORD *)(a2 + 32) = v13;
    *(_OWORD *)(a2 + 48) = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5B2B04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACFF64C0(a1 + 32, a2, &qword_1ED2E2FE8);
}

uint64_t sub_1AD5B2B30(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD5B2B6C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[61];
  v3 = a1[62];
  v4 = a1[63];
  *a2 = a1[60];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD5B2BAC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD5B2BD4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[20];
  v3 = a1[21];
  v4 = a1[22];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD5B2C0C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD5B2C34@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[3];
  v3 = a1[4];
  v4 = a1[5];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD5B2CAC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD5B2CE8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  *a2 = a1[1];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD5B2D28(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD5B2D64@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  *a2 = a1[5];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t destroy for Message(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 48) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Message(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = v5;
  v7 = a2 + 48;
  v6 = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v6 > 1)
  {
    v8 = *(_QWORD *)(a2 + 56);
    v9 = *(_QWORD *)(a2 + 64);
    *(_QWORD *)(a1 + 48) = v6;
    *(_QWORD *)(a1 + 56) = v8;
    *(_QWORD *)(a1 + 64) = v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v7;
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(v7 + 16);
  }
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  v12 = *(_QWORD *)(a2 + 88);
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v12;
  *(_QWORD *)(a1 + 96) = v11;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Message(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  unint64_t v7;
  _OWORD *v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[5];
  a1[4] = a2[4];
  a1[5] = v4;
  swift_retain();
  swift_release();
  v5 = a1 + 6;
  v6 = a1[6];
  v8 = a2 + 6;
  v7 = a2[6];
  if (v6 != 1)
  {
    if (v7 == 1)
    {
      sub_1AD009758((uint64_t)(a1 + 6), &qword_1ED2E1AD0);
    }
    else
    {
      if (!v6)
      {
        if (!v7)
          goto LABEL_3;
LABEL_11:
        a1[6] = v7;
        a1[7] = a2[7];
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      }
      if (v7)
      {
        a1[6] = v7;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        a1[7] = a2[7];
        a1[8] = a2[8];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      sub_1AD00CC44((uint64_t)(a1 + 6));
    }
    v10 = a2[8];
    *v5 = *v8;
    a1[8] = v10;
    goto LABEL_12;
  }
  if (v7 > 1)
    goto LABEL_11;
LABEL_3:
  v9 = *v8;
  a1[8] = a2[8];
  *v5 = v9;
LABEL_12:
  v11 = a2[10];
  a1[9] = a2[9];
  a1[10] = v11;
  swift_retain();
  swift_release();
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Message(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  swift_release();
  v6 = *(_QWORD *)(a1 + 48);
  v7 = *(_QWORD *)(a2 + 48);
  if (v6 == 1)
    goto LABEL_8;
  if (v7 == 1)
  {
    sub_1AD009758(a1 + 48, &qword_1ED2E1AD0);
LABEL_8:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
    goto LABEL_9;
  }
  if (!v6)
    goto LABEL_8;
  if (!v7)
  {
    sub_1AD00CC44(a1 + 48);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 48) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  swift_bridgeObjectRelease();
LABEL_9:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Message(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 104))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Message(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 32) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Message()
{
  return &type metadata for Message;
}

uint64_t destroy for TypingIndicator(_QWORD *a1)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;

  if (a1[1])
  {
    swift_release();
    swift_bridgeObjectRelease();
    if (a1[8])
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 5));
      v2 = a1[15];
      v3 = a1[17];
      v4 = a1[19];
      v5 = a1[21];
      v6 = a1[25];
      v7 = a1[27];
      v8 = a1[29];
      if (v2 >> 1 != 0xFFFFFFFF
        || (v4 | (unint64_t)v3) > 1
        || v6 & 0xFFFFFFFFFFFFFEFELL | v5 & 0xFFFFFFFFFFFF00FELL
        || (v8 | v7) >= 2)
      {
        sub_1AD00E8B0(a1[12], a1[13], a1[14], v2, a1[16], v3, a1[18], v4, a1[20], v5, a1[22], a1[23], a1[24], v6, a1[26], v7, a1[28], v8, a1[30],
          a1[31],
          a1[32],
          a1[33],
          a1[34],
          a1[35]);
      }
    }
    sub_1AD00E8B0(a1[36], a1[37], a1[38], a1[39], a1[40], a1[41], a1[42], a1[43], a1[44], a1[45], a1[46], a1[47], a1[48], a1[49], a1[50], a1[51], a1[52], a1[53], a1[54],
      a1[55],
      a1[56],
      a1[57],
      a1[58],
      a1[59]);
  }
  swift_release();
  if (a1[63] != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for TypingIndicator(uint64_t a1, uint64_t a2)
{
  void *v4;
  const void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  uint64_t v45;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  unint64_t v78;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = (void *)(a1 + 8);
  v7 = *(_QWORD *)(a2 + 8);
  v5 = (const void *)(a2 + 8);
  v6 = v7;
  if (v7)
  {
    v8 = *(_QWORD *)(a2 + 16);
    v9 = *(_QWORD *)(a2 + 24);
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v8;
    v10 = *(_QWORD *)(a2 + 32);
    *(_QWORD *)(a1 + 24) = v9;
    *(_QWORD *)(a1 + 32) = v10;
    v11 = *(_QWORD *)(a2 + 64);
    swift_retain();
    swift_bridgeObjectRetain();
    if (v11)
    {
      v12 = *(_QWORD *)(a2 + 72);
      *(_QWORD *)(a1 + 64) = v11;
      *(_QWORD *)(a1 + 72) = v12;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v11 - 8))(a1 + 40, a2 + 40, v11);
      *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
      *(_BYTE *)(a1 + 88) = *(_BYTE *)(a2 + 88);
      v13 = *(_QWORD *)(a2 + 120);
      v14 = *(_QWORD *)(a2 + 136);
      v15 = *(_QWORD *)(a2 + 152);
      v16 = *(_QWORD *)(a2 + 232);
      if (v13 >> 1 != 0xFFFFFFFF
        || (v15 | (unint64_t)v14) > 1
        || *(_QWORD *)(a2 + 200) & 0xFFFFFFFFFFFFFEFELL | *(_QWORD *)(a2 + 168) & 0xFFFFFFFFFFFF00FELL
        || (v16 | *(_QWORD *)(a2 + 216)) >= 2)
      {
        v30 = *(_QWORD *)(a2 + 104);
        v31 = *(_QWORD *)(a2 + 128);
        v49 = *(_QWORD *)(a2 + 160);
        v53 = *(_QWORD *)(a2 + 176);
        v59 = *(_QWORD *)(a2 + 184);
        v61 = *(_QWORD *)(a2 + 192);
        v63 = *(_QWORD *)(a2 + 208);
        v65 = *(_QWORD *)(a2 + 224);
        v67 = *(_QWORD *)(a2 + 240);
        v69 = *(_QWORD *)(a2 + 248);
        v71 = *(_QWORD *)(a2 + 256);
        v73 = *(_QWORD *)(a2 + 264);
        v75 = *(_QWORD *)(a2 + 272);
        v77 = *(_QWORD *)(a2 + 280);
        v55 = *(_QWORD *)(a2 + 200);
        v57 = *(_QWORD *)(a2 + 216);
        v32 = *(_QWORD *)(a2 + 96);
        v47 = *(_QWORD *)(a2 + 168);
        v33 = *(_QWORD *)(a2 + 112);
        v51 = *(_QWORD *)(a2 + 232);
        v34 = *(_QWORD *)(a2 + 144);
        sub_1AD00FEAC(v32, v30, v33, v13, v31, v14, v34, v15, v49, v47, v53, v59, v61, v55, v63, v57, v65, v16, v67,
          v69,
          v71,
          v73,
          v75,
          v77);
        *(_QWORD *)(a1 + 96) = v32;
        *(_QWORD *)(a1 + 104) = v30;
        *(_QWORD *)(a1 + 112) = v33;
        *(_QWORD *)(a1 + 120) = v13;
        *(_QWORD *)(a1 + 128) = v31;
        *(_QWORD *)(a1 + 136) = v14;
        *(_QWORD *)(a1 + 144) = v34;
        *(_QWORD *)(a1 + 152) = v15;
        *(_QWORD *)(a1 + 160) = v49;
        *(_QWORD *)(a1 + 168) = v47;
        *(_QWORD *)(a1 + 176) = v53;
        *(_QWORD *)(a1 + 184) = v59;
        *(_QWORD *)(a1 + 192) = v61;
        *(_QWORD *)(a1 + 200) = v55;
        *(_QWORD *)(a1 + 208) = v63;
        *(_QWORD *)(a1 + 216) = v57;
        *(_QWORD *)(a1 + 224) = v65;
        *(_QWORD *)(a1 + 232) = v51;
        *(_QWORD *)(a1 + 240) = v67;
        *(_QWORD *)(a1 + 248) = v69;
        *(_QWORD *)(a1 + 256) = v71;
        *(_QWORD *)(a1 + 264) = v73;
        *(_QWORD *)(a1 + 272) = v75;
        *(_QWORD *)(a1 + 280) = v77;
      }
      else
      {
        v17 = *(_OWORD *)(a2 + 240);
        *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
        *(_OWORD *)(a1 + 240) = v17;
        v18 = *(_OWORD *)(a2 + 272);
        *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
        *(_OWORD *)(a1 + 272) = v18;
        v19 = *(_OWORD *)(a2 + 176);
        *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
        *(_OWORD *)(a1 + 176) = v19;
        v20 = *(_OWORD *)(a2 + 208);
        *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
        *(_OWORD *)(a1 + 208) = v20;
        v21 = *(_OWORD *)(a2 + 112);
        *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
        *(_OWORD *)(a1 + 112) = v21;
        v22 = *(_OWORD *)(a2 + 144);
        *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
        *(_OWORD *)(a1 + 144) = v22;
      }
    }
    else
    {
      v23 = *(_OWORD *)(a2 + 248);
      *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
      *(_OWORD *)(a1 + 248) = v23;
      *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
      *(_QWORD *)(a1 + 280) = *(_QWORD *)(a2 + 280);
      v24 = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = v24;
      v25 = *(_OWORD *)(a2 + 216);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 216) = v25;
      v26 = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = v26;
      v27 = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = v27;
      v28 = *(_OWORD *)(a2 + 56);
      *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
      *(_OWORD *)(a1 + 56) = v28;
      v29 = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = v29;
    }
    v35 = *(_QWORD *)(a2 + 328);
    v36 = *(_QWORD *)(a2 + 336);
    v48 = *(_QWORD *)(a2 + 352);
    v50 = *(_QWORD *)(a2 + 360);
    v52 = *(_QWORD *)(a2 + 368);
    v54 = *(_QWORD *)(a2 + 376);
    v56 = *(_QWORD *)(a2 + 384);
    v58 = *(_QWORD *)(a2 + 392);
    v60 = *(_QWORD *)(a2 + 400);
    v62 = *(_QWORD *)(a2 + 408);
    v64 = *(_QWORD *)(a2 + 416);
    v66 = *(_QWORD *)(a2 + 424);
    v68 = *(_QWORD *)(a2 + 432);
    v70 = *(_QWORD *)(a2 + 440);
    v72 = *(_QWORD *)(a2 + 448);
    v74 = *(_QWORD *)(a2 + 456);
    v76 = *(_QWORD *)(a2 + 464);
    v78 = *(_QWORD *)(a2 + 472);
    v37 = *(_QWORD *)(a2 + 288);
    v38 = *(_QWORD *)(a2 + 296);
    v39 = *(_QWORD *)(a2 + 304);
    v40 = *(_QWORD *)(a2 + 312);
    v41 = *(_QWORD *)(a2 + 320);
    v42 = *(_QWORD *)(a2 + 344);
    sub_1AD00FEAC(v37, v38, v39, v40, v41, v35, v36, v42, v48, v50, v52, v54, v56, v58, v60, v62, v64, v66, v68,
      v70,
      v72,
      v74,
      v76,
      v78);
    *(_QWORD *)(a1 + 288) = v37;
    *(_QWORD *)(a1 + 296) = v38;
    *(_QWORD *)(a1 + 304) = v39;
    *(_QWORD *)(a1 + 312) = v40;
    *(_QWORD *)(a1 + 320) = v41;
    *(_QWORD *)(a1 + 328) = v35;
    *(_QWORD *)(a1 + 336) = v36;
    *(_QWORD *)(a1 + 344) = v42;
    *(_QWORD *)(a1 + 352) = v48;
    *(_QWORD *)(a1 + 360) = v50;
    *(_QWORD *)(a1 + 368) = v52;
    *(_QWORD *)(a1 + 376) = v54;
    *(_QWORD *)(a1 + 384) = v56;
    *(_QWORD *)(a1 + 392) = v58;
    *(_QWORD *)(a1 + 400) = v60;
    *(_QWORD *)(a1 + 408) = v62;
    *(_QWORD *)(a1 + 416) = v64;
    *(_QWORD *)(a1 + 424) = v66;
    *(_QWORD *)(a1 + 432) = v68;
    *(_QWORD *)(a1 + 440) = v70;
    *(_QWORD *)(a1 + 448) = v72;
    *(_QWORD *)(a1 + 456) = v74;
    *(_QWORD *)(a1 + 464) = v76;
    *(_QWORD *)(a1 + 472) = v78;
  }
  else
  {
    memcpy(v4, v5, 0x1D8uLL);
  }
  v43 = *(_QWORD *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_QWORD *)(a1 + 488) = v43;
  v44 = (_OWORD *)(a2 + 496);
  v45 = *(_QWORD *)(a2 + 504);
  swift_retain();
  if (v45 == 1)
  {
    *(_OWORD *)(a1 + 496) = *v44;
  }
  else
  {
    *(_QWORD *)(a1 + 496) = *(_QWORD *)v44;
    *(_QWORD *)(a1 + 504) = v45;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(a1 + 512) = *(_QWORD *)(a2 + 512);
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for TypingIndicator(char *__dst, char *__src)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _OWORD *v8;
  __int128 *v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  __int128 *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  BOOL v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  uint64_t v34;
  __int128 *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __int128 v61;
  __int128 v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  __int128 v73;
  __int128 v74;
  __int128 v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  __int128 v86;
  __int128 v87;
  __int128 v88;
  __int128 v89;
  __int128 v90;
  __int128 v91;
  __int128 v92;
  __int128 v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  __int128 v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  __int128 v142;
  __int128 v143;
  __int128 v144;
  __int128 v145;
  __int128 v146;
  __int128 v147;
  __int128 v148;
  uint64_t v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  __int128 v167;
  __int128 v168;
  __int128 v169;
  __int128 v170;
  __int128 v171;
  __int128 v172;
  __int128 v173;
  uint64_t v174;
  unint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  unint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  unint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  unint64_t v266;
  unint64_t v267;
  uint64_t v268;
  unint64_t v269;
  unint64_t v270;
  unint64_t v271;
  uint64_t v272;
  uint64_t v273;
  unint64_t v274;

  *__dst = *__src;
  v4 = __dst + 8;
  v6 = __src + 8;
  v5 = *((_QWORD *)__src + 1);
  if (*((_QWORD *)__dst + 1))
  {
    if (v5)
    {
      v7 = *((_QWORD *)__src + 2);
      *((_QWORD *)__dst + 1) = v5;
      *((_QWORD *)__dst + 2) = v7;
      swift_retain();
      swift_release();
      *((_QWORD *)__dst + 3) = *((_QWORD *)__src + 3);
      *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v8 = __dst + 40;
      v9 = (__int128 *)(__src + 40);
      v10 = *((_QWORD *)__src + 8);
      if (*((_QWORD *)__dst + 8))
      {
        if (v10)
        {
          __swift_assign_boxed_opaque_existential_1((uint64_t *)__dst + 5, (uint64_t *)__src + 5);
          v11 = *((_QWORD *)__src + 10);
          __dst[88] = __src[88];
          *((_QWORD *)__dst + 10) = v11;
          v12 = __dst + 96;
          v13 = (__int128 *)(__src + 96);
          v14 = *((_QWORD *)__src + 15);
          v15 = *((_QWORD *)__src + 17);
          v16 = *((_QWORD *)__src + 19);
          v17 = *((_QWORD *)__src + 21);
          v18 = *((_QWORD *)__src + 25);
          v19 = *((_QWORD *)__src + 27);
          v20 = *((_QWORD *)__src + 29);
          v24 = v14 >> 1 == 0xFFFFFFFF
             && (v16 | (unint64_t)v15) < 2
             && (v18 & 0xFFFFFFFFFFFFFEFELL | v17 & 0xFFFFFFFFFFFF00FELL) == 0
             && (v20 | v19) < 2;
          if (*((_QWORD *)__dst + 15) >> 1 != 0xFFFFFFFFLL
            || (*((_QWORD *)__dst + 19) | *((_QWORD *)__dst + 17)) > 1
            || *((_QWORD *)__dst + 25) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)__dst + 21) & 0xFFFFFFFFFFFF00FELL
            || (*((_QWORD *)__dst + 29) | *((_QWORD *)__dst + 27)) >= 2)
          {
            if (v24)
            {
              sub_1AD148B34((uint64_t)(__dst + 96));
              v89 = *((_OWORD *)__src + 9);
              v91 = *v13;
              v90 = *((_OWORD *)__src + 7);
              *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
              *((_OWORD *)__dst + 9) = v89;
              *v12 = v91;
              *((_OWORD *)__dst + 7) = v90;
              v92 = *((_OWORD *)__src + 13);
              v94 = *((_OWORD *)__src + 10);
              v93 = *((_OWORD *)__src + 11);
              *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
              *((_OWORD *)__dst + 13) = v92;
              *((_OWORD *)__dst + 10) = v94;
              *((_OWORD *)__dst + 11) = v93;
              v95 = *((_OWORD *)__src + 17);
              v97 = *((_OWORD *)__src + 14);
              v96 = *((_OWORD *)__src + 15);
              *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
              *((_OWORD *)__dst + 17) = v95;
              *((_OWORD *)__dst + 14) = v97;
              *((_OWORD *)__dst + 15) = v96;
            }
            else
            {
              v189 = *((_QWORD *)__src + 13);
              v195 = *((_QWORD *)__src + 12);
              v183 = *((_QWORD *)__src + 14);
              v132 = *((_QWORD *)__src + 16);
              v133 = *((_QWORD *)__src + 18);
              v201 = *((_QWORD *)__src + 20);
              v207 = *((_QWORD *)__src + 22);
              v213 = *((_QWORD *)__src + 23);
              v219 = *((_QWORD *)__src + 24);
              v225 = *((_QWORD *)__src + 26);
              v231 = *((_QWORD *)__src + 28);
              v237 = *((_QWORD *)__src + 30);
              v243 = *((_QWORD *)__src + 31);
              v249 = *((_QWORD *)__src + 32);
              v255 = *((_QWORD *)__src + 33);
              v261 = *((_QWORD *)__src + 34);
              v267 = *((_QWORD *)__src + 35);
              v273 = *((_QWORD *)__src + 29);
              sub_1AD00FEAC(v195, v189, v183, v14, v132, v15, v133, v16, v201, v17, v207, v213, v219, v18, v225, v19, v231, v20, v237,
                v243,
                v249,
                v255,
                v261,
                v267);
              v134 = *((_QWORD *)__dst + 12);
              v135 = *((_QWORD *)__dst + 13);
              *((_QWORD *)__dst + 12) = v195;
              *((_QWORD *)__dst + 13) = v189;
              v136 = *((_QWORD *)__dst + 14);
              v137 = *((_QWORD *)__dst + 15);
              *((_QWORD *)__dst + 14) = v183;
              *((_QWORD *)__dst + 15) = v14;
              v138 = *((_QWORD *)__dst + 16);
              v139 = *((_QWORD *)__dst + 17);
              *((_QWORD *)__dst + 16) = v132;
              *((_QWORD *)__dst + 17) = v15;
              v140 = *((_QWORD *)__dst + 18);
              v141 = *((_QWORD *)__dst + 19);
              *((_QWORD *)__dst + 18) = v133;
              *((_QWORD *)__dst + 19) = v16;
              v142 = *((_OWORD *)__dst + 10);
              v143 = *((_OWORD *)__dst + 11);
              *((_QWORD *)__dst + 20) = v201;
              *((_QWORD *)__dst + 21) = v17;
              *((_QWORD *)__dst + 22) = v207;
              *((_QWORD *)__dst + 23) = v213;
              v144 = *((_OWORD *)__dst + 12);
              v145 = *((_OWORD *)__dst + 13);
              *((_QWORD *)__dst + 24) = v219;
              *((_QWORD *)__dst + 25) = v18;
              *((_QWORD *)__dst + 26) = v225;
              *((_QWORD *)__dst + 27) = v19;
              v146 = *((_OWORD *)__dst + 14);
              v147 = *((_OWORD *)__dst + 15);
              *((_QWORD *)__dst + 28) = v231;
              *((_QWORD *)__dst + 29) = v273;
              *((_QWORD *)__dst + 30) = v237;
              *((_QWORD *)__dst + 31) = v243;
              v148 = *((_OWORD *)__dst + 16);
              *((_QWORD *)__dst + 32) = v249;
              *((_QWORD *)__dst + 33) = v255;
              v149 = *((_QWORD *)__dst + 34);
              v150 = *((_QWORD *)__dst + 35);
              *((_QWORD *)__dst + 34) = v261;
              *((_QWORD *)__dst + 35) = v267;
              sub_1AD00E8B0(v134, v135, v136, v137, v138, v139, v140, v141, v142, *((uint64_t *)&v142 + 1), v143, *((uint64_t *)&v143 + 1), v144, *((uint64_t *)&v144 + 1), v145, *((uint64_t *)&v145 + 1), v146, *((unint64_t *)&v146 + 1), v147,
                *((uint64_t *)&v147 + 1),
                v148,
                *((uint64_t *)&v148 + 1),
                v149,
                v150);
            }
          }
          else if (v24)
          {
            v25 = *v13;
            v26 = *((_OWORD *)__src + 7);
            v27 = *((_OWORD *)__src + 9);
            *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
            *((_OWORD *)__dst + 9) = v27;
            *v12 = v25;
            *((_OWORD *)__dst + 7) = v26;
            v28 = *((_OWORD *)__src + 10);
            v29 = *((_OWORD *)__src + 11);
            v30 = *((_OWORD *)__src + 13);
            *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
            *((_OWORD *)__dst + 13) = v30;
            *((_OWORD *)__dst + 10) = v28;
            *((_OWORD *)__dst + 11) = v29;
            v31 = *((_OWORD *)__src + 14);
            v32 = *((_OWORD *)__src + 15);
            v33 = *((_OWORD *)__src + 17);
            *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
            *((_OWORD *)__dst + 17) = v33;
            *((_OWORD *)__dst + 14) = v31;
            *((_OWORD *)__dst + 15) = v32;
          }
          else
          {
            v128 = *((_QWORD *)__src + 16);
            v129 = *((_QWORD *)__src + 18);
            v182 = *((_QWORD *)__src + 14);
            v188 = *((_QWORD *)__src + 20);
            v200 = *((_QWORD *)__src + 22);
            v206 = *((_QWORD *)__src + 23);
            v218 = *((_QWORD *)__src + 24);
            v224 = *((_QWORD *)__src + 26);
            v230 = *((_QWORD *)__src + 28);
            v236 = *((_QWORD *)__src + 30);
            v242 = *((_QWORD *)__src + 31);
            v248 = *((_QWORD *)__src + 32);
            v254 = *((_QWORD *)__src + 33);
            v260 = *((_QWORD *)__src + 34);
            v266 = *((_QWORD *)__src + 35);
            v212 = *((_QWORD *)__src + 27);
            v130 = *((_QWORD *)__src + 12);
            v194 = *((_QWORD *)__src + 25);
            v131 = *((_QWORD *)__src + 13);
            v272 = *((_QWORD *)__src + 29);
            sub_1AD00FEAC(v130, v131, v182, v14, v128, v15, v129, v16, v188, v17, v200, v206, v218, v194, v224, v212, v230, v20, v236,
              v242,
              v248,
              v254,
              v260,
              v266);
            *((_QWORD *)__dst + 12) = v130;
            *((_QWORD *)__dst + 13) = v131;
            *((_QWORD *)__dst + 14) = v182;
            *((_QWORD *)__dst + 15) = v14;
            *((_QWORD *)__dst + 16) = v128;
            *((_QWORD *)__dst + 17) = v15;
            *((_QWORD *)__dst + 18) = v129;
            *((_QWORD *)__dst + 19) = v16;
            *((_QWORD *)__dst + 20) = v188;
            *((_QWORD *)__dst + 21) = v17;
            *((_QWORD *)__dst + 22) = v200;
            *((_QWORD *)__dst + 23) = v206;
            *((_QWORD *)__dst + 24) = v218;
            *((_QWORD *)__dst + 25) = v194;
            *((_QWORD *)__dst + 26) = v224;
            *((_QWORD *)__dst + 27) = v212;
            *((_QWORD *)__dst + 28) = v230;
            *((_QWORD *)__dst + 29) = v272;
            *((_QWORD *)__dst + 30) = v236;
            *((_QWORD *)__dst + 31) = v242;
            *((_QWORD *)__dst + 32) = v248;
            *((_QWORD *)__dst + 33) = v254;
            *((_QWORD *)__dst + 34) = v260;
            *((_QWORD *)__dst + 35) = v266;
          }
        }
        else
        {
          sub_1AD046A30((_QWORD *)__dst + 5);
          v65 = *(_OWORD *)(__src + 88);
          v67 = *v9;
          v66 = *(_OWORD *)(__src + 56);
          *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 72);
          *(_OWORD *)(__dst + 88) = v65;
          *v8 = v67;
          *(_OWORD *)(__dst + 56) = v66;
          v68 = *(_OWORD *)(__src + 152);
          v70 = *(_OWORD *)(__src + 104);
          v69 = *(_OWORD *)(__src + 120);
          *(_OWORD *)(__dst + 136) = *(_OWORD *)(__src + 136);
          *(_OWORD *)(__dst + 152) = v68;
          *(_OWORD *)(__dst + 104) = v70;
          *(_OWORD *)(__dst + 120) = v69;
          v71 = *(_OWORD *)(__src + 216);
          v73 = *(_OWORD *)(__src + 168);
          v72 = *(_OWORD *)(__src + 184);
          *(_OWORD *)(__dst + 200) = *(_OWORD *)(__src + 200);
          *(_OWORD *)(__dst + 216) = v71;
          *(_OWORD *)(__dst + 168) = v73;
          *(_OWORD *)(__dst + 184) = v72;
          v75 = *(_OWORD *)(__src + 248);
          v74 = *(_OWORD *)(__src + 264);
          v76 = *(_OWORD *)(__src + 232);
          *((_QWORD *)__dst + 35) = *((_QWORD *)__src + 35);
          *(_OWORD *)(__dst + 248) = v75;
          *(_OWORD *)(__dst + 264) = v74;
          *(_OWORD *)(__dst + 232) = v76;
        }
      }
      else if (v10)
      {
        *((_QWORD *)__dst + 8) = v10;
        *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
        (**(void (***)(char *, char *))(v10 - 8))(__dst + 40, __src + 40);
        v51 = *((_QWORD *)__src + 10);
        __dst[88] = __src[88];
        *((_QWORD *)__dst + 10) = v51;
        v52 = *((_QWORD *)__src + 15);
        v53 = *((_QWORD *)__src + 17);
        v54 = *((_QWORD *)__src + 19);
        v55 = *((_QWORD *)__src + 27);
        if (v52 >> 1 != 0xFFFFFFFF
          || (v54 | (unint64_t)v53) > 1
          || *((_QWORD *)__src + 25) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)__src + 21) & 0xFFFFFFFFFFFF00FELL
          || (*((_QWORD *)__src + 29) | (unint64_t)v55) >= 2)
        {
          v123 = *((_QWORD *)__src + 12);
          v124 = *((_QWORD *)__src + 16);
          v187 = *((_QWORD *)__src + 20);
          v205 = *((_QWORD *)__src + 22);
          v211 = *((_QWORD *)__src + 23);
          v223 = *((_QWORD *)__src + 24);
          v229 = *((_QWORD *)__src + 26);
          v235 = *((_QWORD *)__src + 28);
          v241 = *((_QWORD *)__src + 30);
          v247 = *((_QWORD *)__src + 31);
          v253 = *((_QWORD *)__src + 32);
          v259 = *((_QWORD *)__src + 33);
          v265 = *((_QWORD *)__src + 34);
          v271 = *((_QWORD *)__src + 35);
          v199 = *((_QWORD *)__src + 25);
          v125 = *((_QWORD *)__src + 13);
          v217 = *((_QWORD *)__src + 29);
          v181 = *((_QWORD *)__src + 21);
          v126 = *((_QWORD *)__src + 14);
          v193 = *((_QWORD *)__src + 27);
          v127 = *((_QWORD *)__src + 18);
          sub_1AD00FEAC(v123, v125, v126, v52, v124, v53, v127, v54, v187, v181, v205, v211, v223, v199, v229, v55, v235, v217, v241,
            v247,
            v253,
            v259,
            v265,
            v271);
          *((_QWORD *)__dst + 12) = v123;
          *((_QWORD *)__dst + 13) = v125;
          *((_QWORD *)__dst + 14) = v126;
          *((_QWORD *)__dst + 15) = v52;
          *((_QWORD *)__dst + 16) = v124;
          *((_QWORD *)__dst + 17) = v53;
          *((_QWORD *)__dst + 18) = v127;
          *((_QWORD *)__dst + 19) = v54;
          *((_QWORD *)__dst + 20) = v187;
          *((_QWORD *)__dst + 21) = v181;
          *((_QWORD *)__dst + 22) = v205;
          *((_QWORD *)__dst + 23) = v211;
          *((_QWORD *)__dst + 24) = v223;
          *((_QWORD *)__dst + 25) = v199;
          *((_QWORD *)__dst + 26) = v229;
          *((_QWORD *)__dst + 27) = v193;
          *((_QWORD *)__dst + 28) = v235;
          *((_QWORD *)__dst + 29) = v217;
          *((_QWORD *)__dst + 30) = v241;
          *((_QWORD *)__dst + 31) = v247;
          *((_QWORD *)__dst + 32) = v253;
          *((_QWORD *)__dst + 33) = v259;
          *((_QWORD *)__dst + 34) = v265;
          *((_QWORD *)__dst + 35) = v271;
        }
        else
        {
          v56 = *((_OWORD *)__src + 6);
          v57 = *((_OWORD *)__src + 7);
          v58 = *((_OWORD *)__src + 9);
          *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
          *((_OWORD *)__dst + 9) = v58;
          *((_OWORD *)__dst + 6) = v56;
          *((_OWORD *)__dst + 7) = v57;
          v59 = *((_OWORD *)__src + 10);
          v60 = *((_OWORD *)__src + 11);
          v61 = *((_OWORD *)__src + 13);
          *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
          *((_OWORD *)__dst + 13) = v61;
          *((_OWORD *)__dst + 10) = v59;
          *((_OWORD *)__dst + 11) = v60;
          v62 = *((_OWORD *)__src + 14);
          v63 = *((_OWORD *)__src + 15);
          v64 = *((_OWORD *)__src + 17);
          *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
          *((_OWORD *)__dst + 17) = v64;
          *((_OWORD *)__dst + 14) = v62;
          *((_OWORD *)__dst + 15) = v63;
        }
      }
      else
      {
        v111 = *v9;
        v112 = *(_OWORD *)(__src + 56);
        v113 = *(_OWORD *)(__src + 88);
        *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 72);
        *(_OWORD *)(__dst + 88) = v113;
        *v8 = v111;
        *(_OWORD *)(__dst + 56) = v112;
        v114 = *(_OWORD *)(__src + 104);
        v115 = *(_OWORD *)(__src + 120);
        v116 = *(_OWORD *)(__src + 152);
        *(_OWORD *)(__dst + 136) = *(_OWORD *)(__src + 136);
        *(_OWORD *)(__dst + 152) = v116;
        *(_OWORD *)(__dst + 104) = v114;
        *(_OWORD *)(__dst + 120) = v115;
        v117 = *(_OWORD *)(__src + 168);
        v118 = *(_OWORD *)(__src + 184);
        v119 = *(_OWORD *)(__src + 216);
        *(_OWORD *)(__dst + 200) = *(_OWORD *)(__src + 200);
        *(_OWORD *)(__dst + 216) = v119;
        *(_OWORD *)(__dst + 168) = v117;
        *(_OWORD *)(__dst + 184) = v118;
        v120 = *(_OWORD *)(__src + 232);
        v121 = *(_OWORD *)(__src + 248);
        v122 = *(_OWORD *)(__src + 264);
        *((_QWORD *)__dst + 35) = *((_QWORD *)__src + 35);
        *(_OWORD *)(__dst + 248) = v121;
        *(_OWORD *)(__dst + 264) = v122;
        *(_OWORD *)(__dst + 232) = v120;
      }
      v151 = *((_QWORD *)__src + 41);
      v152 = *((_QWORD *)__src + 42);
      v184 = *((_QWORD *)__src + 44);
      v190 = *((_QWORD *)__src + 45);
      v196 = *((_QWORD *)__src + 46);
      v202 = *((_QWORD *)__src + 47);
      v208 = *((_QWORD *)__src + 48);
      v214 = *((_QWORD *)__src + 49);
      v220 = *((_QWORD *)__src + 50);
      v226 = *((_QWORD *)__src + 51);
      v232 = *((_QWORD *)__src + 52);
      v238 = *((_QWORD *)__src + 53);
      v244 = *((_QWORD *)__src + 54);
      v250 = *((_QWORD *)__src + 55);
      v256 = *((_QWORD *)__src + 56);
      v262 = *((_QWORD *)__src + 57);
      v268 = *((_QWORD *)__src + 58);
      v274 = *((_QWORD *)__src + 59);
      v153 = *((_QWORD *)__src + 36);
      v154 = *((_QWORD *)__src + 37);
      v155 = *((_QWORD *)__src + 38);
      v156 = *((_QWORD *)__src + 39);
      v157 = *((_QWORD *)__src + 40);
      v158 = *((_QWORD *)__src + 43);
      sub_1AD00FEAC(v153, v154, v155, v156, v157, v151, v152, v158, v184, v190, v196, v202, v208, v214, v220, v226, v232, v238, v244,
        v250,
        v256,
        v262,
        v268,
        v274);
      v159 = *((_QWORD *)__dst + 36);
      v160 = *((_QWORD *)__dst + 37);
      *((_QWORD *)__dst + 36) = v153;
      *((_QWORD *)__dst + 37) = v154;
      v161 = *((_QWORD *)__dst + 38);
      v162 = *((_QWORD *)__dst + 39);
      *((_QWORD *)__dst + 38) = v155;
      *((_QWORD *)__dst + 39) = v156;
      v163 = *((_QWORD *)__dst + 40);
      v164 = *((_QWORD *)__dst + 41);
      *((_QWORD *)__dst + 40) = v157;
      *((_QWORD *)__dst + 41) = v151;
      v165 = *((_QWORD *)__dst + 42);
      v166 = *((_QWORD *)__dst + 43);
      *((_QWORD *)__dst + 42) = v152;
      *((_QWORD *)__dst + 43) = v158;
      v167 = *((_OWORD *)__dst + 22);
      v168 = *((_OWORD *)__dst + 23);
      *((_QWORD *)__dst + 44) = v184;
      *((_QWORD *)__dst + 45) = v190;
      *((_QWORD *)__dst + 46) = v196;
      *((_QWORD *)__dst + 47) = v202;
      v169 = *((_OWORD *)__dst + 24);
      v170 = *((_OWORD *)__dst + 25);
      *((_QWORD *)__dst + 48) = v208;
      *((_QWORD *)__dst + 49) = v214;
      *((_QWORD *)__dst + 50) = v220;
      *((_QWORD *)__dst + 51) = v226;
      v171 = *((_OWORD *)__dst + 26);
      v172 = *((_OWORD *)__dst + 27);
      *((_QWORD *)__dst + 52) = v232;
      *((_QWORD *)__dst + 53) = v238;
      *((_QWORD *)__dst + 54) = v244;
      *((_QWORD *)__dst + 55) = v250;
      v173 = *((_OWORD *)__dst + 28);
      *((_QWORD *)__dst + 56) = v256;
      *((_QWORD *)__dst + 57) = v262;
      v174 = *((_QWORD *)__dst + 58);
      v175 = *((_QWORD *)__dst + 59);
      *((_QWORD *)__dst + 58) = v268;
      *((_QWORD *)__dst + 59) = v274;
      sub_1AD00E8B0(v159, v160, v161, v162, v163, v164, v165, v166, v167, *((uint64_t *)&v167 + 1), v168, *((uint64_t *)&v168 + 1), v169, *((uint64_t *)&v169 + 1), v170, *((uint64_t *)&v170 + 1), v171, *((unint64_t *)&v171 + 1), v172,
        *((uint64_t *)&v172 + 1),
        v173,
        *((uint64_t *)&v173 + 1),
        v174,
        v175);
      goto LABEL_49;
    }
    sub_1AD29560C((_QWORD *)__dst + 1);
LABEL_31:
    memcpy(v4, v6, 0x1D8uLL);
    goto LABEL_49;
  }
  if (!v5)
    goto LABEL_31;
  v34 = *((_QWORD *)__src + 2);
  *((_QWORD *)__dst + 1) = v5;
  *((_QWORD *)__dst + 2) = v34;
  *((_QWORD *)__dst + 3) = *((_QWORD *)__src + 3);
  *((_QWORD *)__dst + 4) = *((_QWORD *)__src + 4);
  v35 = (__int128 *)(__src + 40);
  v36 = *((_QWORD *)__src + 8);
  swift_retain();
  swift_bridgeObjectRetain();
  if (v36)
  {
    *((_QWORD *)__dst + 8) = v36;
    *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
    (**(void (***)(char *, char *, uint64_t))(v36 - 8))(__dst + 40, __src + 40, v36);
    v37 = *((_QWORD *)__src + 10);
    __dst[88] = __src[88];
    *((_QWORD *)__dst + 10) = v37;
    v38 = *((_QWORD *)__src + 15);
    v39 = *((_QWORD *)__src + 17);
    v40 = *((_QWORD *)__src + 19);
    v41 = *((_QWORD *)__src + 27);
    if (v38 >> 1 != 0xFFFFFFFF
      || (v40 | (unint64_t)v39) > 1
      || *((_QWORD *)__src + 25) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)__src + 21) & 0xFFFFFFFFFFFF00FELL
      || (*((_QWORD *)__src + 29) | (unint64_t)v41) >= 2)
    {
      v98 = *((_QWORD *)__src + 12);
      v99 = *((_QWORD *)__src + 16);
      v185 = *((_QWORD *)__src + 20);
      v203 = *((_QWORD *)__src + 22);
      v209 = *((_QWORD *)__src + 23);
      v221 = *((_QWORD *)__src + 24);
      v227 = *((_QWORD *)__src + 26);
      v233 = *((_QWORD *)__src + 28);
      v239 = *((_QWORD *)__src + 30);
      v245 = *((_QWORD *)__src + 31);
      v251 = *((_QWORD *)__src + 32);
      v257 = *((_QWORD *)__src + 33);
      v263 = *((_QWORD *)__src + 34);
      v269 = *((_QWORD *)__src + 35);
      v197 = *((_QWORD *)__src + 25);
      v100 = *((_QWORD *)__src + 13);
      v215 = *((_QWORD *)__src + 29);
      v179 = *((_QWORD *)__src + 21);
      v101 = *((_QWORD *)__src + 14);
      v191 = *((_QWORD *)__src + 27);
      v102 = *((_QWORD *)__src + 18);
      sub_1AD00FEAC(v98, v100, v101, v38, v99, v39, v102, v40, v185, v179, v203, v209, v221, v197, v227, v41, v233, v215, v239,
        v245,
        v251,
        v257,
        v263,
        v269);
      *((_QWORD *)__dst + 12) = v98;
      *((_QWORD *)__dst + 13) = v100;
      *((_QWORD *)__dst + 14) = v101;
      *((_QWORD *)__dst + 15) = v38;
      *((_QWORD *)__dst + 16) = v99;
      *((_QWORD *)__dst + 17) = v39;
      *((_QWORD *)__dst + 18) = v102;
      *((_QWORD *)__dst + 19) = v40;
      *((_QWORD *)__dst + 20) = v185;
      *((_QWORD *)__dst + 21) = v179;
      *((_QWORD *)__dst + 22) = v203;
      *((_QWORD *)__dst + 23) = v209;
      *((_QWORD *)__dst + 24) = v221;
      *((_QWORD *)__dst + 25) = v197;
      *((_QWORD *)__dst + 26) = v227;
      *((_QWORD *)__dst + 27) = v191;
      *((_QWORD *)__dst + 28) = v233;
      *((_QWORD *)__dst + 29) = v215;
      *((_QWORD *)__dst + 30) = v239;
      *((_QWORD *)__dst + 31) = v245;
      *((_QWORD *)__dst + 32) = v251;
      *((_QWORD *)__dst + 33) = v257;
      *((_QWORD *)__dst + 34) = v263;
      *((_QWORD *)__dst + 35) = v269;
    }
    else
    {
      v42 = *((_OWORD *)__src + 6);
      v43 = *((_OWORD *)__src + 7);
      v44 = *((_OWORD *)__src + 9);
      *((_OWORD *)__dst + 8) = *((_OWORD *)__src + 8);
      *((_OWORD *)__dst + 9) = v44;
      *((_OWORD *)__dst + 6) = v42;
      *((_OWORD *)__dst + 7) = v43;
      v45 = *((_OWORD *)__src + 10);
      v46 = *((_OWORD *)__src + 11);
      v47 = *((_OWORD *)__src + 13);
      *((_OWORD *)__dst + 12) = *((_OWORD *)__src + 12);
      *((_OWORD *)__dst + 13) = v47;
      *((_OWORD *)__dst + 10) = v45;
      *((_OWORD *)__dst + 11) = v46;
      v48 = *((_OWORD *)__src + 14);
      v49 = *((_OWORD *)__src + 15);
      v50 = *((_OWORD *)__src + 17);
      *((_OWORD *)__dst + 16) = *((_OWORD *)__src + 16);
      *((_OWORD *)__dst + 17) = v50;
      *((_OWORD *)__dst + 14) = v48;
      *((_OWORD *)__dst + 15) = v49;
    }
  }
  else
  {
    v77 = *v35;
    v78 = *(_OWORD *)(__src + 56);
    v79 = *(_OWORD *)(__src + 88);
    *(_OWORD *)(__dst + 72) = *(_OWORD *)(__src + 72);
    *(_OWORD *)(__dst + 88) = v79;
    *(_OWORD *)(__dst + 40) = v77;
    *(_OWORD *)(__dst + 56) = v78;
    v80 = *(_OWORD *)(__src + 104);
    v81 = *(_OWORD *)(__src + 120);
    v82 = *(_OWORD *)(__src + 152);
    *(_OWORD *)(__dst + 136) = *(_OWORD *)(__src + 136);
    *(_OWORD *)(__dst + 152) = v82;
    *(_OWORD *)(__dst + 104) = v80;
    *(_OWORD *)(__dst + 120) = v81;
    v83 = *(_OWORD *)(__src + 168);
    v84 = *(_OWORD *)(__src + 184);
    v85 = *(_OWORD *)(__src + 216);
    *(_OWORD *)(__dst + 200) = *(_OWORD *)(__src + 200);
    *(_OWORD *)(__dst + 216) = v85;
    *(_OWORD *)(__dst + 168) = v83;
    *(_OWORD *)(__dst + 184) = v84;
    v86 = *(_OWORD *)(__src + 232);
    v87 = *(_OWORD *)(__src + 248);
    v88 = *(_OWORD *)(__src + 264);
    *((_QWORD *)__dst + 35) = *((_QWORD *)__src + 35);
    *(_OWORD *)(__dst + 248) = v87;
    *(_OWORD *)(__dst + 264) = v88;
    *(_OWORD *)(__dst + 232) = v86;
  }
  v103 = *((_QWORD *)__src + 41);
  v104 = *((_QWORD *)__src + 42);
  v180 = *((_QWORD *)__src + 44);
  v186 = *((_QWORD *)__src + 45);
  v192 = *((_QWORD *)__src + 46);
  v198 = *((_QWORD *)__src + 47);
  v204 = *((_QWORD *)__src + 48);
  v210 = *((_QWORD *)__src + 49);
  v216 = *((_QWORD *)__src + 50);
  v222 = *((_QWORD *)__src + 51);
  v228 = *((_QWORD *)__src + 52);
  v234 = *((_QWORD *)__src + 53);
  v240 = *((_QWORD *)__src + 54);
  v246 = *((_QWORD *)__src + 55);
  v252 = *((_QWORD *)__src + 56);
  v258 = *((_QWORD *)__src + 57);
  v264 = *((_QWORD *)__src + 58);
  v270 = *((_QWORD *)__src + 59);
  v105 = *((_QWORD *)__src + 36);
  v106 = *((_QWORD *)__src + 37);
  v107 = *((_QWORD *)__src + 38);
  v108 = *((_QWORD *)__src + 39);
  v109 = *((_QWORD *)__src + 40);
  v110 = *((_QWORD *)__src + 43);
  sub_1AD00FEAC(v105, v106, v107, v108, v109, v103, v104, v110, v180, v186, v192, v198, v204, v210, v216, v222, v228, v234, v240,
    v246,
    v252,
    v258,
    v264,
    v270);
  *((_QWORD *)__dst + 36) = v105;
  *((_QWORD *)__dst + 37) = v106;
  *((_QWORD *)__dst + 38) = v107;
  *((_QWORD *)__dst + 39) = v108;
  *((_QWORD *)__dst + 40) = v109;
  *((_QWORD *)__dst + 41) = v103;
  *((_QWORD *)__dst + 42) = v104;
  *((_QWORD *)__dst + 43) = v110;
  *((_QWORD *)__dst + 44) = v180;
  *((_QWORD *)__dst + 45) = v186;
  *((_QWORD *)__dst + 46) = v192;
  *((_QWORD *)__dst + 47) = v198;
  *((_QWORD *)__dst + 48) = v204;
  *((_QWORD *)__dst + 49) = v210;
  *((_QWORD *)__dst + 50) = v216;
  *((_QWORD *)__dst + 51) = v222;
  *((_QWORD *)__dst + 52) = v228;
  *((_QWORD *)__dst + 53) = v234;
  *((_QWORD *)__dst + 54) = v240;
  *((_QWORD *)__dst + 55) = v246;
  *((_QWORD *)__dst + 56) = v252;
  *((_QWORD *)__dst + 57) = v258;
  *((_QWORD *)__dst + 58) = v264;
  *((_QWORD *)__dst + 59) = v270;
LABEL_49:
  v176 = *((_QWORD *)__src + 61);
  *((_QWORD *)__dst + 60) = *((_QWORD *)__src + 60);
  *((_QWORD *)__dst + 61) = v176;
  swift_retain();
  swift_release();
  v177 = *((_QWORD *)__src + 63);
  if (*((_QWORD *)__dst + 63) != 1)
  {
    if (v177 != 1)
    {
      *((_QWORD *)__dst + 62) = *((_QWORD *)__src + 62);
      *((_QWORD *)__dst + 63) = *((_QWORD *)__src + 63);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_56;
    }
    sub_1AD009758((uint64_t)(__dst + 496), &qword_1ED2E3198);
    goto LABEL_54;
  }
  if (v177 == 1)
  {
LABEL_54:
    *((_OWORD *)__dst + 31) = *((_OWORD *)__src + 31);
    goto LABEL_56;
  }
  *((_QWORD *)__dst + 62) = *((_QWORD *)__src + 62);
  *((_QWORD *)__dst + 63) = *((_QWORD *)__src + 63);
  swift_bridgeObjectRetain();
LABEL_56:
  *((_QWORD *)__dst + 64) = *((_QWORD *)__src + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return __dst;
}

void *__swift_memcpy520_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x208uLL);
}

char *assignWithTake for TypingIndicator(char *__dst, char *__src)
{
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  __int128 v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  __int128 v47;
  uint64_t v48;
  unint64_t v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  unint64_t v73;
  uint64_t v74;
  __int128 v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;

  *__dst = *__src;
  v4 = __dst + 8;
  v6 = __src + 8;
  v5 = *((_QWORD *)__src + 1);
  if (!*((_QWORD *)__dst + 1))
    goto LABEL_15;
  if (!v5)
  {
    sub_1AD29560C((_QWORD *)__dst + 1);
LABEL_15:
    memcpy(v4, v6, 0x1D8uLL);
    goto LABEL_20;
  }
  v7 = *((_QWORD *)__src + 2);
  *((_QWORD *)__dst + 1) = v5;
  *((_QWORD *)__dst + 2) = v7;
  swift_release();
  v8 = *((_QWORD *)__src + 4);
  *((_QWORD *)__dst + 3) = *((_QWORD *)__src + 3);
  *((_QWORD *)__dst + 4) = v8;
  swift_bridgeObjectRelease();
  v9 = __dst + 40;
  v10 = __src + 40;
  if (!*((_QWORD *)__dst + 8))
  {
LABEL_17:
    v26 = *(_OWORD *)(__src + 248);
    *(_OWORD *)(__dst + 232) = *(_OWORD *)(__src + 232);
    *(_OWORD *)(__dst + 248) = v26;
    *(_OWORD *)(__dst + 264) = *(_OWORD *)(__src + 264);
    *((_QWORD *)__dst + 35) = *((_QWORD *)__src + 35);
    goto LABEL_18;
  }
  if (!*((_QWORD *)__src + 8))
  {
    sub_1AD046A30((_QWORD *)__dst + 5);
    goto LABEL_17;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(__dst + 40));
  v11 = *(_OWORD *)(__src + 56);
  *v9 = *v10;
  *(_OWORD *)(__dst + 56) = v11;
  *((_QWORD *)__dst + 9) = *((_QWORD *)__src + 9);
  *((_QWORD *)__dst + 10) = *((_QWORD *)__src + 10);
  __dst[88] = __src[88];
  v9 = __dst + 96;
  v10 = __src + 96;
  v12 = *((_QWORD *)__dst + 15);
  v13 = *((_QWORD *)__dst + 17);
  v14 = *((_QWORD *)__dst + 19);
  v15 = *((_QWORD *)__dst + 21);
  v16 = *((_QWORD *)__dst + 25);
  v17 = *((_QWORD *)__dst + 27);
  v18 = *((_QWORD *)__dst + 29);
  v19 = *((_QWORD *)__src + 15);
  v20 = *((_QWORD *)__src + 17);
  v21 = *((_QWORD *)__src + 19);
  v22 = *((_QWORD *)__src + 21);
  v23 = *((_QWORD *)__src + 25);
  v24 = *((_QWORD *)__src + 27);
  v25 = *((_QWORD *)__src + 29);
  if (v12 >> 1 != 0xFFFFFFFF
    || (v14 | (unint64_t)v13) > 1
    || v16 & 0xFFFFFFFFFFFFFEFELL | v15 & 0xFFFFFFFFFFFF00FELL
    || (v18 | v17) >= 2)
  {
    if (v19 >> 1 != 0xFFFFFFFF
      || (v21 | v20) > 1
      || v23 & 0xFFFFFFFFFFFFFEFELL | v22 & 0xFFFFFFFFFFFF00FELL
      || (v25 | v24) >= 2)
    {
      v59 = *((_QWORD *)__src + 14);
      v60 = *((_QWORD *)__src + 16);
      v61 = *((_QWORD *)__src + 18);
      v62 = *((_QWORD *)__src + 20);
      v63 = *((_QWORD *)__src + 24);
      v64 = *((_QWORD *)__src + 26);
      v65 = *((_QWORD *)__src + 28);
      v77 = *((_QWORD *)__dst + 13);
      v78 = *((_QWORD *)__dst + 12);
      v76 = *((_QWORD *)__dst + 14);
      v79 = *((_QWORD *)__dst + 16);
      v80 = *((_QWORD *)__dst + 18);
      v66 = *((_QWORD *)__dst + 20);
      v67 = *((_OWORD *)__dst + 11);
      v68 = *((_QWORD *)__dst + 24);
      v69 = *((_QWORD *)__dst + 26);
      v70 = *((_QWORD *)__dst + 28);
      v71 = *((_OWORD *)__dst + 15);
      v72 = *((_OWORD *)__dst + 16);
      v74 = *((_QWORD *)__dst + 34);
      v73 = *((_QWORD *)__dst + 35);
      *((_OWORD *)__dst + 6) = *((_OWORD *)__src + 6);
      *((_QWORD *)__dst + 14) = v59;
      *((_QWORD *)__dst + 15) = v19;
      *((_QWORD *)__dst + 16) = v60;
      *((_QWORD *)__dst + 17) = v20;
      *((_QWORD *)__dst + 18) = v61;
      *((_QWORD *)__dst + 19) = v21;
      *((_QWORD *)__dst + 20) = v62;
      *((_QWORD *)__dst + 21) = v22;
      *((_OWORD *)__dst + 11) = *((_OWORD *)__src + 11);
      *((_QWORD *)__dst + 24) = v63;
      *((_QWORD *)__dst + 25) = v23;
      *((_QWORD *)__dst + 26) = v64;
      *((_QWORD *)__dst + 27) = v24;
      *((_QWORD *)__dst + 28) = v65;
      *((_QWORD *)__dst + 29) = v25;
      v75 = *((_OWORD *)__src + 16);
      *((_OWORD *)__dst + 15) = *((_OWORD *)__src + 15);
      *((_OWORD *)__dst + 16) = v75;
      *((_OWORD *)__dst + 17) = *((_OWORD *)__src + 17);
      sub_1AD00E8B0(v78, v77, v76, v12, v79, v13, v80, v14, v66, v15, v67, *((uint64_t *)&v67 + 1), v68, v16, v69, v17, v70, v18, v71,
        *((uint64_t *)&v71 + 1),
        v72,
        *((uint64_t *)&v72 + 1),
        v74,
        v73);
      goto LABEL_19;
    }
    sub_1AD148B34((uint64_t)(__dst + 96));
  }
LABEL_18:
  v27 = v10[9];
  v9[8] = v10[8];
  v9[9] = v27;
  v28 = v10[11];
  v9[10] = v10[10];
  v9[11] = v28;
  v29 = v10[5];
  v9[4] = v10[4];
  v9[5] = v29;
  v30 = v10[7];
  v9[6] = v10[6];
  v9[7] = v30;
  v31 = v10[1];
  *v9 = *v10;
  v9[1] = v31;
  v32 = v10[3];
  v9[2] = v10[2];
  v9[3] = v32;
LABEL_19:
  v33 = *((_QWORD *)__dst + 36);
  v34 = *((_QWORD *)__dst + 37);
  v35 = *((_QWORD *)__dst + 38);
  v36 = *((_QWORD *)__dst + 39);
  v37 = *((_QWORD *)__dst + 40);
  v38 = *((_QWORD *)__dst + 41);
  v39 = *((_QWORD *)__dst + 42);
  v40 = *((_QWORD *)__dst + 43);
  v41 = *((_OWORD *)__dst + 22);
  v42 = *((_OWORD *)__dst + 23);
  v43 = *((_OWORD *)__dst + 24);
  v44 = *((_OWORD *)__dst + 25);
  v45 = *((_OWORD *)__dst + 26);
  v46 = *((_OWORD *)__dst + 27);
  v47 = *((_OWORD *)__dst + 28);
  v48 = *((_QWORD *)__dst + 58);
  v49 = *((_QWORD *)__dst + 59);
  v50 = *((_OWORD *)__src + 19);
  *((_OWORD *)__dst + 18) = *((_OWORD *)__src + 18);
  *((_OWORD *)__dst + 19) = v50;
  v51 = *((_OWORD *)__src + 21);
  *((_OWORD *)__dst + 20) = *((_OWORD *)__src + 20);
  *((_OWORD *)__dst + 21) = v51;
  v52 = *((_OWORD *)__src + 23);
  *((_OWORD *)__dst + 22) = *((_OWORD *)__src + 22);
  *((_OWORD *)__dst + 23) = v52;
  v53 = *((_OWORD *)__src + 25);
  *((_OWORD *)__dst + 24) = *((_OWORD *)__src + 24);
  *((_OWORD *)__dst + 25) = v53;
  v54 = *((_OWORD *)__src + 27);
  *((_OWORD *)__dst + 26) = *((_OWORD *)__src + 26);
  *((_OWORD *)__dst + 27) = v54;
  v55 = *((_OWORD *)__src + 29);
  *((_OWORD *)__dst + 28) = *((_OWORD *)__src + 28);
  *((_OWORD *)__dst + 29) = v55;
  sub_1AD00E8B0(v33, v34, v35, v36, v37, v38, v39, v40, v41, *((uint64_t *)&v41 + 1), v42, *((uint64_t *)&v42 + 1), v43, *((uint64_t *)&v43 + 1), v44, *((uint64_t *)&v44 + 1), v45, *((unint64_t *)&v45 + 1), v46,
    *((uint64_t *)&v46 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v48,
    v49);
LABEL_20:
  *((_OWORD *)__dst + 30) = *((_OWORD *)__src + 30);
  swift_release();
  v56 = __src + 496;
  if (*((_QWORD *)__dst + 63) != 1)
  {
    v57 = *((_QWORD *)__src + 63);
    if (v57 != 1)
    {
      *((_QWORD *)__dst + 62) = *v56;
      *((_QWORD *)__dst + 63) = v57;
      swift_bridgeObjectRelease();
      goto LABEL_25;
    }
    sub_1AD009758((uint64_t)(__dst + 496), &qword_1ED2E3198);
  }
  *((_OWORD *)__dst + 31) = *(_OWORD *)v56;
LABEL_25:
  *((_QWORD *)__dst + 64) = *((_QWORD *)__src + 64);
  swift_bridgeObjectRelease();
  return __dst;
}

uint64_t getEnumTagSinglePayload for TypingIndicator(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 520))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 480);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TypingIndicator(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 520) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 480) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 520) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TypingIndicator()
{
  return &type metadata for TypingIndicator;
}

ValueMetadata *type metadata accessor for TypingIndicator.Icon()
{
  return &type metadata for TypingIndicator.Icon;
}

uint64_t destroy for Sticker(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 104) >= 2uLL)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Sticker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  v8 = a2 + 104;
  v7 = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  v9 = *(_QWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 96) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v7 > 1)
  {
    v10 = *(_QWORD *)(a2 + 112);
    v11 = *(_QWORD *)(a2 + 120);
    *(_QWORD *)(a1 + 104) = v7;
    *(_QWORD *)(a1 + 112) = v10;
    *(_QWORD *)(a1 + 120) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 104) = *(_OWORD *)v8;
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(v8 + 16);
  }
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  v14 = *(_QWORD *)(a2 + 168);
  v13 = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 168) = v14;
  *(_QWORD *)(a1 + 176) = v13;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Sticker(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  unint64_t v8;
  _OWORD *v9;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v5;
  swift_retain();
  swift_release();
  v6 = (_OWORD *)(a1 + 104);
  v7 = *(_QWORD *)(a1 + 104);
  v9 = (_OWORD *)(a2 + 104);
  v8 = *(_QWORD *)(a2 + 104);
  if (v7 != 1)
  {
    if (v8 == 1)
    {
      sub_1AD009758(a1 + 104, &qword_1ED2E1AD0);
    }
    else
    {
      if (!v7)
      {
        if (!v8)
          goto LABEL_3;
LABEL_11:
        *(_QWORD *)(a1 + 104) = v8;
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_12;
      }
      if (v8)
      {
        *(_QWORD *)(a1 + 104) = v8;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
        *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_12;
      }
      sub_1AD00CC44(a1 + 104);
    }
    v11 = *(_QWORD *)(a2 + 120);
    *v6 = *v9;
    *(_QWORD *)(a1 + 120) = v11;
    goto LABEL_12;
  }
  if (v8 > 1)
    goto LABEL_11;
LABEL_3:
  v10 = *v9;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *v6 = v10;
LABEL_12:
  v12 = *(_QWORD *)(a2 + 136);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = v12;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = *(_QWORD *)(a2 + 168);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 168) = v13;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Sticker(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  swift_release();
  v8 = *(_QWORD *)(a1 + 104);
  v9 = *(_QWORD *)(a2 + 104);
  if (v8 == 1)
    goto LABEL_8;
  if (v9 == 1)
  {
    sub_1AD009758(a1 + 104, &qword_1ED2E1AD0);
LABEL_8:
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
    goto LABEL_9;
  }
  if (!v8)
    goto LABEL_8;
  if (!v9)
  {
    sub_1AD00CC44(a1 + 104);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 104) = v9;
  swift_bridgeObjectRelease();
  v10 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v10;
  swift_bridgeObjectRelease();
LABEL_9:
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  swift_release();
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  swift_release();
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Sticker(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 184))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 88);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Sticker(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 184) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 88) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 184) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Sticker()
{
  return &type metadata for Sticker;
}

ValueMetadata *type metadata accessor for AudioMessage()
{
  return &type metadata for AudioMessage;
}

uint64_t initializeBufferWithCopyOfBuffer for TextMessage(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) == 0)
  {
    v6 = sub_1AD63B084();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    v7 = (int *)type metadata accessor for Metadata();
    v8 = v7[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    v9[8] = v10[8];
    *((_BYTE *)a1 + v7[6]) = *((_BYTE *)a2 + v7[6]);
    *((_BYTE *)a1 + v7[7]) = *((_BYTE *)a2 + v7[7]);
    *(_WORD *)((char *)a1 + v7[8]) = *(_WORD *)((char *)a2 + v7[8]);
    type metadata accessor for TextMessage.MessageType(0);
    v11 = (char *)&loc_1AD5B5060 + 4 * word_1AD696C4C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v12 = *a2;
  *a1 = *a2;
  v13 = v12 + ((v5 + 16) & ~(unint64_t)v5);
  swift_retain();
  return v13;
}

uint64_t destroy for TextMessage(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  _QWORD *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  BOOL v15;
  BOOL v16;
  int *v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  uint64_t *v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  int *v39;
  char *v40;
  uint64_t v41;
  unsigned int (*v42)(void);
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  void (*v59)(uint64_t, uint64_t);
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t);
  char *v66;
  _QWORD *v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _QWORD *v89;
  uint64_t v90;
  _QWORD *v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  int *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  void (*v105)(uint64_t, uint64_t);
  uint64_t v106;
  uint64_t v107;
  int *v108;
  char *v109;
  char *v110;
  uint64_t v111;
  char *v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  char *v116;
  void (*v117)(uint64_t, uint64_t);
  uint64_t v118;
  char *v119;
  uint64_t v120;
  char *v121;
  int *v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  char *v126;
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  int *v142;
  char *v143;
  uint64_t v144;
  unsigned int (*v145)(char *, uint64_t, uint64_t);
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  unsigned int v151;
  void (*v152)(uint64_t, uint64_t);
  void (*v153)(uint64_t, uint64_t);
  void (*v154)(uint64_t, uint64_t);
  void (*v155)(uint64_t, uint64_t);
  unsigned int (*v156)(char *, uint64_t, uint64_t);
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  unsigned int (*v161)(void);
  uint64_t v162;
  uint64_t v163;

  v4 = sub_1AD63B084();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  v7 = (_QWORD *)(a1 + a2[5]);
  type metadata accessor for TextMessage.MessageType(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      if (v7[1])
      {
        swift_release();
        swift_bridgeObjectRelease();
        if (v7[8])
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(v7 + 5));
          v8 = v7[15];
          v9 = v7[17];
          v10 = v7[19];
          v11 = v7[21];
          v12 = v7[25];
          v13 = v7[27];
          v14 = v7[29];
          v15 = v8 >> 1 != 0xFFFFFFFF || (v10 | (unint64_t)v9) > 1;
          v16 = !v15 && (v12 & 0xFFFFFFFFFFFFFEFELL | v11 & 0xFFFFFFFFFFFF00FELL) == 0;
          if (!v16 || (v14 | v13) >= 2)
            sub_1AD00E8B0(v7[12], v7[13], v7[14], v8, v7[16], v9, v7[18], v10, v7[20], v11, v7[22], v7[23], v7[24], v12, v7[26], v13, v7[28], v14, v7[30],
              v7[31],
              v7[32],
              v7[33],
              v7[34],
              v7[35]);
        }
        sub_1AD00E8B0(v7[36], v7[37], v7[38], v7[39], v7[40], v7[41], v7[42], v7[43], v7[44], v7[45], v7[46], v7[47], v7[48], v7[49], v7[50], v7[51], v7[52], v7[53], v7[54],
          v7[55],
          v7[56],
          v7[57],
          v7[58],
          v7[59]);
      }
      swift_release();
      if (v7[63] != 1)
        swift_bridgeObjectRelease();
      goto LABEL_140;
    case 1u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (v7[6] >= 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_22;
    case 2u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      if (v7[13])
      {
        swift_bridgeObjectRelease();
        swift_release();
        if (v7[16] != 1)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_140;
    case 3u:
      type metadata accessor for BalloonPlugin.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v18 = (int *)type metadata accessor for MessagesAppBalloon();
          v19 = (char *)v7 + v18[5];
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v19, 1, v4))
            v6((uint64_t)v19, v4);
          swift_bridgeObjectRelease();
          v20 = (char *)v7 + v18[7];
          v21 = sub_1AD63AF28();
          v22 = *(_QWORD *)(v21 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
            (*(void (**)(char *, uint64_t))(v22 + 8))(v20, v21);
          if (*(_QWORD *)((char *)v7 + v18[8] + 8) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          v23 = (_QWORD *)((char *)v7 + v18[11]);
          if (v23[34] >> 1 != 0xFFFFFFFFLL
            || (v23[38] | v23[36]) > 1
            || v23[44] & 0xFFFFFFFFFFFFFEFELL | v23[40] & 0xFFFFFFFFFFFF00FELL
            || (v23[48] | v23[46]) >= 2)
          {
            if (v23[3])
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)v7 + v18[11]);
              v24 = v23[10];
              v25 = v23[12];
              v26 = v23[14];
              v27 = v23[16];
              v28 = v23[20];
              v29 = v23[22];
              v30 = v23[24];
              if (v24 >> 1 != 0xFFFFFFFF
                || (v26 | (unint64_t)v25) > 1
                || v28 & 0xFFFFFFFFFFFFFEFELL | v27 & 0xFFFFFFFFFFFF00FELL
                || (v30 | v29) >= 2)
              {
                sub_1AD00E8B0(v23[7], v23[8], v23[9], v24, v23[11], v25, v23[13], v26, v23[15], v27, v23[17], v23[18], v23[19], v28, v23[21], v29, v23[23], v30, v23[25],
                  v23[26],
                  v23[27],
                  v23[28],
                  v23[29],
                  v23[30]);
              }
            }
            v31 = v23[31];
            v32 = v23[32];
            v33 = v23 + 31;
            sub_1AD00E8B0(v31, v32, v33[2], v33[3], v33[4], v33[5], v33[6], v33[7], v33[8], v33[9], v33[10], v33[11], v33[12], v33[13], v33[14], v33[15], v33[16], v33[17], v33[18],
              v33[19],
              v33[20],
              v33[21],
              v33[22],
              v33[23]);
          }
          v34 = (char *)v7 + v18[12];
          swift_release();
          if (*((_QWORD *)v34 + 3) != 1)
            swift_bridgeObjectRelease();
          if (*(_QWORD *)((char *)v7 + v18[13] + 8) != 1)
            swift_bridgeObjectRelease();
          v35 = (_QWORD *)((char *)v7 + v18[14]);
          v36 = v35[1];
          if (v36 >> 60 != 15)
            sub_1AD00412C(*v35, v36);
          goto LABEL_134;
        case 1u:
          v6((uint64_t)v7, v4);
          v37 = (char *)v7 + *(int *)(type metadata accessor for Handwriting() + 20);
          v38 = sub_1AD63B03C();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v38 - 8) + 8))(v37, v38);
          goto LABEL_134;
        case 2u:
          v39 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
          if ((*(unsigned int (**)(_QWORD *, uint64_t, int *))(*((_QWORD *)v39 - 1) + 48))(v7, 1, v39))
            goto LABEL_135;
          v40 = (char *)v7 + v39[5];
          v41 = sub_1AD63AF28();
          v160 = *(_QWORD *)(v41 - 8);
          v42 = *(unsigned int (**)(void))(v160 + 48);
          if (!((unsigned int (*)(char *, uint64_t, uint64_t))v42)(v40, 1, v41))
            (*(void (**)(char *, uint64_t))(v160 + 8))(v40, v41);
          v43 = (char *)v7 + v39[6];
          if (!((unsigned int (*)(char *, uint64_t, uint64_t))v42)(v43, 1, v41))
            (*(void (**)(char *, uint64_t))(v160 + 8))(v43, v41);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v44 = (char *)v7 + v39[12];
          if (!((unsigned int (*)(char *, uint64_t, uint64_t))v42)(v44, 1, v41))
            (*(void (**)(char *, uint64_t))(v160 + 8))(v44, v41);
          v161 = v42;
          v162 = v41;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)((char *)v7 + v39[21] + 16) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v45 = (char *)v7 + v39[22];
          v46 = type metadata accessor for LinkPresentation.IconMetadata(0);
          v159 = v5;
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v46 - 8) + 48))(v45, 1, v46))
          {
            v47 = &v45[*(int *)(v46 + 20)];
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v47, 1, v41))
              (*(void (**)(char *, uint64_t))(v160 + 8))(v47, v41);
            swift_bridgeObjectRelease();
          }
          if (*(_QWORD *)((char *)v7 + v39[23] + 16) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v48 = (char *)v7 + v39[24];
          v49 = type metadata accessor for LinkPresentation.ARAssetMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v49 - 8) + 48))(v48, 1, v49))
          {
            v50 = &v48[*(int *)(v49 + 20)];
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v50, 1, v41))
              (*(void (**)(char *, uint64_t))(v160 + 8))(v50, v41);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (*(_QWORD *)((char *)v7 + v39[25] + 16) != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          v51 = (char *)v7 + v39[27];
          v52 = type metadata accessor for LinkPresentation.ImageMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v52 - 8) + 48))(v51, 1, v52))
          {
            v53 = &v51[*(int *)(v52 + 20)];
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v53, 1, v41))
              (*(void (**)(char *, uint64_t))(v160 + 8))(v53, v41);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v54 = (char *)v7 + v39[30];
          v55 = type metadata accessor for LinkPresentation.Video(0);
          v156 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48);
          if (!v156(v54, 1, v55))
          {
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v54, 1, v41))
              (*(void (**)(char *, uint64_t))(v160 + 8))(v54, v41);
            v56 = &v54[*(int *)(v55 + 20)];
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v56, 1, v41))
              (*(void (**)(char *, uint64_t))(v160 + 8))(v56, v41);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
          }
          v57 = (char *)v7 + v39[31];
          v58 = type metadata accessor for LinkPresentation.VideoMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v57, 1, v58))
          {
            v59 = v6;
            v60 = &v57[*(int *)(v58 + 20)];
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v60, 1, v162))
              (*(void (**)(char *, uint64_t))(v160 + 8))(v60, v162);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v6 = v59;
          }
          v61 = (char *)v7 + v39[32];
          v62 = type metadata accessor for LinkPresentation.Audio(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62))
          {
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v61, 1, v162))
              (*(void (**)(char *, uint64_t))(v160 + 8))(v61, v162);
            swift_bridgeObjectRelease();
          }
          v63 = (char *)v7 + v39[33];
          v64 = type metadata accessor for LinkPresentation.AudioMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v64 - 8) + 48))(v63, 1, v64))
          {
            v65 = v6;
            v66 = &v63[*(int *)(v64 + 20)];
            if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v66, 1, v162))
              (*(void (**)(char *, uint64_t))(v160 + 8))(v66, v162);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v6 = v65;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v67 = (_QWORD *)((char *)v7 + v39[41]);
          v68 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
          if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v68 - 8) + 48))(v67, 1, v68))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                v152 = v6;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[14] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v100 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
                v101 = (char *)v67 + v100[11];
                v102 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 48))(v101, 1, v102))
                {
                  v103 = &v101[*(int *)(v102 + 20)];
                  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v103, 1, v162))
                    (*(void (**)(char *, uint64_t))(v160 + 8))(v103, v162);
                  swift_bridgeObjectRelease();
                }
                v104 = (char *)v67 + v100[12];
                if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v104, 1, v162))
                  (*(void (**)(char *, uint64_t))(v160 + 8))(v104, v162);
                swift_bridgeObjectRelease();
                v6 = v152;
                if (*(_QWORD *)((char *)v67 + v100[14] + 8) != 1)
                  goto LABEL_311;
                break;
              case 1u:
                v105 = v6;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[10] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v106 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
                goto LABEL_236;
              case 2u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[10] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v107 = type metadata accessor for LinkPresentation.MusicVideoMetadata(0);
                goto LABEL_262;
              case 3u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[10] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v107 = type metadata accessor for LinkPresentation.ArtistMetadata(0);
                goto LABEL_262;
              case 4u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v108 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
                v109 = (char *)v67 + v108[8];
                if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v109, 1, v162))
                  (*(void (**)(char *, uint64_t))(v160 + 8))(v109, v162);
                swift_bridgeObjectRelease();
                if (*(_QWORD *)((char *)v67 + v108[10] + 16) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v110 = (char *)v67 + v108[11];
                v111 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 48))(v110, 1, v111))
                {
                  break;
                }
                v112 = &v110[*(int *)(v111 + 20)];
                if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v112, 1, v162))
                  (*(void (**)(char *, uint64_t))(v160 + 8))(v112, v162);
                goto LABEL_199;
              case 5u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[10] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v107 = type metadata accessor for LinkPresentation.RadioMetadata(0);
                goto LABEL_262;
              case 6u:
                v153 = v6;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[14] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                v113 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
                v114 = (char *)v67 + *(int *)(v113 + 48);
                v115 = v55;
                if (!v156(v114, 1, v55))
                {
                  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v114, 1, v162))
                    (*(void (**)(char *, uint64_t))(v160 + 8))(v114, v162);
                  v116 = &v114[*(int *)(v55 + 20)];
                  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(&v114[*(int *)(v115 + 20)], 1, v162))(*(void (**)(char *, uint64_t))(v160 + 8))(v116, v162);
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                }
                v6 = v153;
                if (*(_QWORD *)((char *)v67 + *(int *)(v113 + 56) + 16) != 1)
                  goto LABEL_311;
                break;
              case 7u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[10] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v107 = type metadata accessor for LinkPresentation.BookMetadata(0);
                goto LABEL_262;
              case 8u:
                v117 = v6;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[12] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v118 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
                v119 = (char *)v67 + *(int *)(v118 + 40);
                v120 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v120 - 8) + 48))(v119, 1, v120))
                {
                  v157 = &v119[*(int *)(v120 + 20)];
                  if (!v161())
                    (*(void (**)(char *, uint64_t))(v160 + 8))(v157, v162);
                  swift_bridgeObjectRelease();
                }
                v121 = (char *)v67 + *(int *)(v118 + 44);
                v6 = v117;
                if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v121, 1, v162))
                  (*(void (**)(char *, uint64_t))(v160 + 8))(v121, v162);
                break;
              case 9u:
                v154 = v6;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v122 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
                v123 = (char *)v67 + v122[9];
                v124 = sub_1AD63B03C();
                v125 = *(_QWORD *)(v124 - 8);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v125 + 48))(v123, 1, v124))
                  (*(void (**)(char *, uint64_t))(v125 + 8))(v123, v124);
                if (*(_QWORD *)((char *)v67 + v122[10] + 16) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v126 = (char *)v67 + v122[11];
                v127 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v127 - 8) + 48))(v126, 1, v127))
                {
                  v128 = &v126[*(int *)(v127 + 20)];
                  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v128, 1, v162))
                    (*(void (**)(char *, uint64_t))(v160 + 8))(v128, v162);
                  swift_bridgeObjectRelease();
                }
                goto LABEL_258;
              case 0xAu:
                v105 = v6;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[10] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v106 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
LABEL_236:
                v129 = (char *)v67 + *(int *)(v106 + 36);
                v130 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v130 - 8) + 48))(v129, 1, v130))
                {
                  v158 = &v129[*(int *)(v130 + 20)];
                  if (!v161())
                    (*(void (**)(char *, uint64_t))(v160 + 8))(v158, v162);
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                v6 = v105;
                break;
              case 0xBu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[12] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v131 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
                goto LABEL_263;
              case 0xCu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[10] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v107 = type metadata accessor for LinkPresentation.TVSeasonMetadata(0);
                goto LABEL_262;
              case 0xDu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[8] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v131 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
                goto LABEL_263;
              case 0xEu:
                v154 = v6;
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[10] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v132 = type metadata accessor for LinkPresentation.MovieMetadata(0);
                v133 = (char *)v67 + *(int *)(v132 + 36);
                v134 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 48))(v133, 1, v134))
                {
                  v135 = &v133[*(int *)(v134 + 20)];
                  if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v135, 1, v162))
                    (*(void (**)(char *, uint64_t))(v160 + 8))(v135, v162);
                  swift_bridgeObjectRelease();
                }
                if (*(_QWORD *)((char *)v67 + *(int *)(v132 + 40) + 16) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
LABEL_258:
                swift_bridgeObjectRelease();
                v6 = v154;
                break;
              case 0xFu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[10] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v107 = type metadata accessor for LinkPresentation.MovieBundleMetadata(0);
LABEL_262:
                v131 = *(int *)(v107 + 36);
LABEL_263:
                v136 = (char *)v67 + v131;
                v137 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v137 - 8) + 48))(v136, 1, v137))
                {
                  break;
                }
                v138 = &v136[*(int *)(v137 + 20)];
                if (!((unsigned int (*)(char *, uint64_t, uint64_t))v161)(v138, 1, v162))
                  (*(void (**)(char *, uint64_t))(v160 + 8))(v138, v162);
LABEL_199:
                swift_bridgeObjectRelease();
                break;
              case 0x10u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[8] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (v67[24] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                goto LABEL_199;
              case 0x11u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[8] != 1)
                  goto LABEL_311;
                break;
              case 0x12u:
                swift_bridgeObjectRelease();
                if (v67[4] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (v67[20] != 1)
                  goto LABEL_311;
                break;
              case 0x13u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[5] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                if (v67[24] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[47] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[67] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                if (v67[88] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (v67[104] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (v67[120] != 1)
                  goto LABEL_311;
                break;
              case 0x14u:
                swift_bridgeObjectRelease();
                if (v67[5] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (v67[21] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (v67[37] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[56] != 1)
                  goto LABEL_311;
                break;
              case 0x15u:
                swift_bridgeObjectRelease();
                if (v67[4] != 1)
                  goto LABEL_311;
                break;
              case 0x16u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[7] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (v67[23] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v139 = (char *)v67 + *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
                v140 = sub_1AD63B03C();
                v141 = *(_QWORD *)(v140 - 8);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v141 + 48))(v139, 1, v140))
                  (*(void (**)(char *, uint64_t))(v141 + 8))(v139, v140);
                break;
              case 0x17u:
              case 0x1Bu:
              case 0x1Du:
              case 0x1Fu:
              case 0x20u:
              case 0x21u:
                goto LABEL_199;
              case 0x18u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[10] != 1)
                  goto LABEL_311;
                break;
              case 0x19u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v67[6] != 1)
                  goto LABEL_311;
                break;
              case 0x1Au:
                v155 = v6;
                swift_bridgeObjectRelease();
                if (v67[7] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v142 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
                v143 = (char *)v67 + v142[9];
                v144 = sub_1AD63B03C();
                v163 = *(_QWORD *)(v144 - 8);
                v145 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48);
                if (!v145(v143, 1, v144))
                  (*(void (**)(char *, uint64_t))(v163 + 8))(v143, v144);
                v146 = (char *)v67 + v142[10];
                if (!v145(v146, 1, v144))
                  (*(void (**)(char *, uint64_t))(v163 + 8))(v146, v144);
                v147 = v142[11];
                goto LABEL_322;
              case 0x1Cu:
              case 0x22u:
LABEL_311:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                break;
              case 0x1Eu:
                v155 = v6;
                swift_bridgeObjectRelease();
                v148 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
                v149 = (char *)v67 + *(int *)(v148 + 20);
                v144 = sub_1AD63B03C();
                v163 = *(_QWORD *)(v144 - 8);
                v145 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v163 + 48);
                if (!v145(v149, 1, v144))
                  (*(void (**)(char *, uint64_t))(v163 + 8))(v149, v144);
                v147 = *(int *)(v148 + 24);
LABEL_322:
                v150 = (char *)v67 + v147;
                v151 = v145(v150, 1, v144);
                v6 = v155;
                if (!v151)
                  (*(void (**)(char *, uint64_t))(v163 + 8))(v150, v144);
                break;
              case 0x23u:
                swift_release();
                break;
              default:
                break;
            }
          }
          v69 = (char *)v7 + v39[42];
          v5 = v159;
          if (*((_QWORD *)v69 + 1) != 1)
          {
            swift_bridgeObjectRelease();
            if (*((_QWORD *)v69 + 4) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v70 = (char *)v7 + v39[43];
          v71 = type metadata accessor for CollaborationMetadata();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 48))(v70, 1, v71))
            goto LABEL_135;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v72 = &v70[*(int *)(v71 + 24)];
          v73 = sub_1AD63B03C();
          v74 = *(_QWORD *)(v73 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48))(v72, 1, v73))
            (*(void (**)(char *, uint64_t))(v74 + 8))(v72, v73);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v5 = v159;
          if (!*(_QWORD *)&v70[*(int *)(v71 + 40) + 112])
            goto LABEL_135;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_134:
          swift_bridgeObjectRelease();
LABEL_135:
          v82 = type metadata accessor for BalloonPlugin(0);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)((char *)v7 + *(int *)(v82 + 36)))
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_release();
          swift_bridgeObjectRelease();
          v83 = (char *)v7 + *(int *)(v82 + 44);
          swift_release();
          if (*((_QWORD *)v83 + 3) != 1)
            swift_bridgeObjectRelease();
          swift_release();
          break;
        case 3u:
          swift_release();
          v75 = (char *)v7 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
          v76 = sub_1AD63AF28();
          v77 = *(_QWORD *)(v76 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
            (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v76);
          v78 = type metadata accessor for CombinedPluginAttachmentInfo();
          sub_1AD00412C(*(_QWORD *)((char *)v7 + *(int *)(v78 + 20)), *(_QWORD *)((char *)v7 + *(int *)(v78 + 20) + 8));
          swift_release();
          swift_bridgeObjectRelease();
          sub_1AD00412C(*(_QWORD *)((char *)v7 + *(int *)(v78 + 32)), *(_QWORD *)((char *)v7 + *(int *)(v78 + 32) + 8));
          goto LABEL_135;
        case 4u:
          v6((uint64_t)v7, v4);
          v79 = (char *)v7 + *(int *)(type metadata accessor for DigitalTouchBalloon(0) + 20);
          type metadata accessor for DigitalTouchMessage(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 3u:
            case 5u:
            case 6u:
              goto LABEL_133;
            case 2u:
              swift_release();
              swift_release();
              swift_release();
              goto LABEL_135;
            case 4u:
              v80 = &v79[*(int *)(type metadata accessor for VideoMessage(0) + 20)];
              v81 = type metadata accessor for IntroBalloon(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v81 - 8) + 48))(v80, 1, v81))
              {
                v6((uint64_t)v80, v4);
                swift_release();
                swift_bridgeObjectRelease();
              }
LABEL_133:
              swift_release();
              goto LABEL_134;
            default:
              goto LABEL_135;
          }
        default:
          goto LABEL_135;
      }
      goto LABEL_140;
    case 4u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (v7[13] >= 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_140;
    case 5u:
      if (*v7)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_22:
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_140;
    case 6u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      if (v7[17])
      {
        swift_bridgeObjectRelease();
        swift_release();
        if (v7[20] != 1)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_140;
    case 7u:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (v7[16] >= 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v7[26])
      {
        swift_bridgeObjectRelease();
        swift_release();
        if (v7[29] != 1)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_140:
      swift_bridgeObjectRelease();
      break;
    default:
      break;
  }
  v84 = a1 + a2[6];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v84, 1, v4))
    v6(v84, v4);
  v85 = a1 + a2[7];
  swift_release();
  if (*(_QWORD *)(v85 + 24) != 1)
    swift_bridgeObjectRelease();
  v86 = a1 + a2[8];
  swift_release();
  if (*(_QWORD *)(v86 + 24) != 1)
    swift_bridgeObjectRelease();
  v87 = a1 + a2[9];
  swift_release();
  if (*(_QWORD *)(v87 + 24) != 1)
    swift_bridgeObjectRelease();
  v88 = a1 + a2[10];
  swift_release();
  if (*(_QWORD *)(v88 + 24) != 1)
    swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v89 = (_QWORD *)(a1 + a2[15]);
  if (v89[1])
  {
    swift_release();
    if (v89[4] != 1)
      swift_bridgeObjectRelease();
    swift_release();
    if (v89[8] != 1)
      swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v90 = a1 + a2[22];
  swift_release();
  if (*(_QWORD *)(v90 + 24) != 1)
    swift_bridgeObjectRelease();
  v91 = (_QWORD *)(a1 + a2[23]);
  if (*v91)
  {
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    v92 = v91[7];
    if (v92 >> 60 != 15)
      sub_1AD00412C(v91[6], v92);
    swift_bridgeObjectRelease();
    swift_release();
    v93 = v91[16];
    if (v93 >> 60 != 15 && (v93 & 0xF000000000000000) != 0xB000000000000000)
      sub_1AD00412C(v91[15], v93);
    swift_release();
    v94 = v91[20];
    if (v94 >> 60 != 15 && (v94 & 0xF000000000000000) != 0xB000000000000000)
      sub_1AD00412C(v91[19], v94);
    swift_release();
    v95 = v91[24];
    if (v95 >> 60 != 15 && (v95 & 0xF000000000000000) != 0xB000000000000000)
      sub_1AD00412C(v91[23], v95);
  }
  swift_bridgeObjectRelease();
  v96 = a1 + a2[30];
  v97 = sub_1AD63B03C();
  v98 = *(_QWORD *)(v97 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v98 + 48))(v96, 1, v97))
    (*(void (**)(uint64_t, uint64_t))(v98 + 8))(v96, v97);
  return swift_bridgeObjectRelease();
}

void initializeWithCopy for TextMessage(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;

  v4 = sub_1AD63B084();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = (int *)type metadata accessor for Metadata();
  v6 = v5[5];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_QWORD *)v7 = *(_QWORD *)v8;
  *(_BYTE *)(v7 + 8) = *(_BYTE *)(v8 + 8);
  *(_BYTE *)(a1 + v5[6]) = *(_BYTE *)(a2 + v5[6]);
  *(_BYTE *)(a1 + v5[7]) = *(_BYTE *)(a2 + v5[7]);
  *(_WORD *)(a1 + v5[8]) = *(_WORD *)(a2 + v5[8]);
  type metadata accessor for TextMessage.MessageType(0);
  v9 = (char *)sub_1AD5BD8B0 + 4 * word_1AD696D2C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1AD5BD8B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  __int128 v32;
  __int128 v33;
  __int128 v34;
  __int128 v35;
  __int128 v36;
  __int128 v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _OWORD *v73;
  uint64_t v74;
  void (*v75)(void *, const void *, uint64_t);
  uint64_t v76;
  void *v77;
  const void *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  _OWORD *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  _OWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  uint64_t v95;
  _OWORD *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  uint64_t v101;
  _OWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _OWORD *v122;
  uint64_t v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  _OWORD *v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  _QWORD *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  _QWORD *v135;
  _QWORD *v136;
  uint64_t v137;
  _QWORD *v138;
  _QWORD *v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  uint64_t *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  _QWORD *v149;
  uint64_t v150;
  _OWORD *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  __int128 v160;
  uint64_t *v161;
  unint64_t v162;
  __int128 v163;
  __int128 v164;
  __int128 v165;
  __int128 v166;
  __int128 v167;
  __int128 v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t *v171;
  unint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t *v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  _QWORD *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char v192;
  uint64_t v193;
  void *v194;
  const void *v195;
  uint64_t v196;
  uint64_t v197;
  unsigned int (*v198)(const void *, uint64_t, uint64_t);
  uint64_t v199;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  unint64_t v229;

  *(_BYTE *)v4 = *(_BYTE *)v5;
  v11 = v5[1];
  *(_QWORD *)(v10 - 120) = v2;
  if (v11)
  {
    *(_DWORD *)(v10 - 140) = v6;
    *(_QWORD *)(v10 - 128) = v1;
    *(_QWORD *)(v10 - 160) = v8;
    *(_QWORD *)(v10 - 176) = v9;
    v12 = v5[2];
    v13 = v5[3];
    *(_QWORD *)(v4 + 8) = v11;
    *(_QWORD *)(v4 + 16) = v12;
    v14 = v5[4];
    *(_QWORD *)(v4 + 24) = v13;
    *(_QWORD *)(v4 + 32) = v14;
    v15 = v5[8];
    swift_retain();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v10 - 152) = v7;
    *(_QWORD *)(v10 - 136) = v3;
    if (v15)
    {
      v16 = v5[9];
      *(_QWORD *)(v4 + 64) = v15;
      *(_QWORD *)(v4 + 72) = v16;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v15 - 8))(v4 + 40, (uint64_t)(v5 + 5), v15);
      *(_QWORD *)(v4 + 80) = v5[10];
      v17 = *((_BYTE *)v5 + 88);
      *(_QWORD *)(v10 - 192) = v4;
      *(_BYTE *)(v4 + 88) = v17;
      v18 = v5[15];
      v19 = v5[17];
      v20 = v5[19];
      v21 = v5[21];
      v22 = v5[25];
      v23 = v5[27];
      v24 = v5[29];
      if (v18 >> 1 != 0xFFFFFFFF
        || (v20 | (unint64_t)v19) > 1
        || v22 & 0xFFFFFFFFFFFFFEFELL | v21 & 0xFFFFFFFFFFFF00FELL
        || (v24 | v23) >= 2)
      {
        *(_QWORD *)(v10 - 168) = v0;
        v38 = *(_QWORD **)(v10 - 112);
        v40 = v38[12];
        v39 = v38[13];
        v41 = v38[14];
        v42 = v38[16];
        v43 = v38[18];
        v210 = v38[20];
        v216 = v38[22];
        v220 = v38[23];
        v222 = v38[24];
        v224 = v38[26];
        v226 = v38[28];
        v44 = v38[31];
        v228 = v38[30];
        v45 = v38[32];
        v46 = v38[33];
        *(_QWORD *)(v10 - 232) = v44;
        *(_QWORD *)(v10 - 224) = v45;
        v47 = v38[34];
        v48 = v38[35];
        *(_QWORD *)(v10 - 216) = v46;
        *(_QWORD *)(v10 - 208) = v47;
        *(_QWORD *)(v10 - 200) = v48;
        v203 = v23;
        v202 = v22;
        v201 = v21;
        v212 = v22;
        v214 = v24;
        v49 = v39;
        v218 = v23;
        v209 = v21;
        v50 = v41;
        v51 = v42;
        sub_1AD00FEAC(v40, v39, v41, v18, v42, v19, v43, v20, v210, v201, v216, v220, v222, v202, v224, v203, v226, v24, v228,
          v44,
          v45,
          v46,
          v47,
          v48);
        v4 = *(_QWORD *)(v10 - 192);
        *(_QWORD *)(v4 + 96) = v40;
        *(_QWORD *)(v4 + 104) = v49;
        *(_QWORD *)(v4 + 112) = v50;
        *(_QWORD *)(v4 + 120) = v18;
        *(_QWORD *)(v4 + 128) = v51;
        *(_QWORD *)(v4 + 136) = v19;
        *(_QWORD *)(v4 + 144) = v43;
        *(_QWORD *)(v4 + 152) = v20;
        v5 = v38;
        v0 = *(_QWORD *)(v10 - 168);
        *(_QWORD *)(v4 + 160) = v210;
        *(_QWORD *)(v4 + 168) = v209;
        *(_QWORD *)(v4 + 176) = v216;
        *(_QWORD *)(v4 + 184) = v220;
        *(_QWORD *)(v4 + 192) = v222;
        *(_QWORD *)(v4 + 200) = v212;
        *(_QWORD *)(v4 + 208) = v224;
        *(_QWORD *)(v4 + 216) = v218;
        *(_QWORD *)(v4 + 224) = v226;
        *(_QWORD *)(v4 + 232) = v214;
        *(_QWORD *)(v4 + 240) = v228;
        *(_QWORD *)(v4 + 248) = *(_QWORD *)(v10 - 232);
        *(_QWORD *)(v4 + 256) = *(_QWORD *)(v10 - 224);
        *(_QWORD *)(v4 + 264) = *(_QWORD *)(v10 - 216);
        *(_QWORD *)(v4 + 272) = *(_QWORD *)(v10 - 208);
        *(_QWORD *)(v4 + 280) = *(_QWORD *)(v10 - 200);
      }
      else
      {
        v4 = *(_QWORD *)(v10 - 192);
        v5 = *(_QWORD **)(v10 - 112);
        v25 = *((_OWORD *)v5 + 15);
        *(_OWORD *)(v4 + 224) = *((_OWORD *)v5 + 14);
        *(_OWORD *)(v4 + 240) = v25;
        v26 = *((_OWORD *)v5 + 17);
        *(_OWORD *)(v4 + 256) = *((_OWORD *)v5 + 16);
        *(_OWORD *)(v4 + 272) = v26;
        v27 = *((_OWORD *)v5 + 11);
        *(_OWORD *)(v4 + 160) = *((_OWORD *)v5 + 10);
        *(_OWORD *)(v4 + 176) = v27;
        v28 = *((_OWORD *)v5 + 13);
        *(_OWORD *)(v4 + 192) = *((_OWORD *)v5 + 12);
        *(_OWORD *)(v4 + 208) = v28;
        v29 = *((_OWORD *)v5 + 7);
        *(_OWORD *)(v4 + 96) = *((_OWORD *)v5 + 6);
        *(_OWORD *)(v4 + 112) = v29;
        v30 = *((_OWORD *)v5 + 9);
        *(_OWORD *)(v4 + 128) = *((_OWORD *)v5 + 8);
        *(_OWORD *)(v4 + 144) = v30;
      }
    }
    else
    {
      v31 = *(_OWORD *)(v5 + 31);
      *(_OWORD *)(v4 + 232) = *(_OWORD *)(v5 + 29);
      *(_OWORD *)(v4 + 248) = v31;
      *(_OWORD *)(v4 + 264) = *(_OWORD *)(v5 + 33);
      *(_QWORD *)(v4 + 280) = v5[35];
      v32 = *(_OWORD *)(v5 + 23);
      *(_OWORD *)(v4 + 168) = *(_OWORD *)(v5 + 21);
      *(_OWORD *)(v4 + 184) = v32;
      v33 = *(_OWORD *)(v5 + 27);
      *(_OWORD *)(v4 + 200) = *(_OWORD *)(v5 + 25);
      *(_OWORD *)(v4 + 216) = v33;
      v34 = *(_OWORD *)(v5 + 15);
      *(_OWORD *)(v4 + 104) = *(_OWORD *)(v5 + 13);
      *(_OWORD *)(v4 + 120) = v34;
      v35 = *(_OWORD *)(v5 + 19);
      *(_OWORD *)(v4 + 136) = *(_OWORD *)(v5 + 17);
      *(_OWORD *)(v4 + 152) = v35;
      v36 = *(_OWORD *)(v5 + 7);
      *(_OWORD *)(v4 + 40) = *(_OWORD *)(v5 + 5);
      *(_OWORD *)(v4 + 56) = v36;
      v37 = *(_OWORD *)(v5 + 11);
      *(_OWORD *)(v4 + 72) = *(_OWORD *)(v5 + 9);
      *(_OWORD *)(v4 + 88) = v37;
    }
    v52 = v5[36];
    v53 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 296);
    v54 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 304);
    v55 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 312);
    v56 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 320);
    v57 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 328);
    v58 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 336);
    v59 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 344);
    v211 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 352);
    v213 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 360);
    v215 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 368);
    v217 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 376);
    v219 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 384);
    v221 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 392);
    v223 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 400);
    v225 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 408);
    v227 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 416);
    v229 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 424);
    v60 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 432);
    v61 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 440);
    *(_QWORD *)(v10 - 232) = v60;
    *(_QWORD *)(v10 - 224) = v61;
    v62 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 448);
    v63 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 456);
    *(_QWORD *)(v10 - 216) = v62;
    *(_QWORD *)(v10 - 208) = v63;
    v64 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 464);
    v65 = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 472);
    *(_QWORD *)(v10 - 200) = v64;
    *(_QWORD *)(v10 - 192) = v65;
    v208 = v64;
    v206 = v62;
    v207 = v63;
    v204 = v60;
    v205 = v61;
    v66 = v52;
    v67 = v53;
    v68 = v54;
    v69 = v56;
    v70 = v58;
    v71 = v59;
    sub_1AD00FEAC(v52, v53, v54, v55, v56, v57, v58, v59, v211, v213, v215, v217, v219, v221, v223, v225, v227, v229, v204,
      v205,
      v206,
      v207,
      v208,
      v65);
    *(_QWORD *)(v4 + 288) = v66;
    *(_QWORD *)(v4 + 296) = v67;
    v5 = *(_QWORD **)(v10 - 112);
    *(_QWORD *)(v4 + 304) = v68;
    *(_QWORD *)(v4 + 312) = v55;
    *(_QWORD *)(v4 + 320) = v69;
    *(_QWORD *)(v4 + 328) = v57;
    *(_QWORD *)(v4 + 336) = v70;
    *(_QWORD *)(v4 + 344) = v71;
    *(_QWORD *)(v4 + 352) = v211;
    *(_QWORD *)(v4 + 360) = v213;
    *(_QWORD *)(v4 + 368) = v215;
    *(_QWORD *)(v4 + 376) = v217;
    *(_QWORD *)(v4 + 384) = v219;
    *(_QWORD *)(v4 + 392) = v221;
    *(_QWORD *)(v4 + 400) = v223;
    *(_QWORD *)(v4 + 408) = v225;
    *(_QWORD *)(v4 + 416) = v227;
    *(_QWORD *)(v4 + 424) = v229;
    *(_QWORD *)(v4 + 432) = *(_QWORD *)(v10 - 232);
    *(_QWORD *)(v4 + 440) = *(_QWORD *)(v10 - 224);
    *(_QWORD *)(v4 + 448) = *(_QWORD *)(v10 - 216);
    *(_QWORD *)(v4 + 456) = *(_QWORD *)(v10 - 208);
    *(_QWORD *)(v4 + 464) = *(_QWORD *)(v10 - 200);
    *(_QWORD *)(v4 + 472) = *(_QWORD *)(v10 - 192);
    v9 = *(int **)(v10 - 176);
    v8 = *(_QWORD *)(v10 - 160);
    v7 = *(_QWORD *)(v10 - 152);
    v1 = *(_QWORD *)(v10 - 128);
  }
  else
  {
    memcpy((void *)(v4 + 8), v5 + 1, 0x1D8uLL);
  }
  v72 = v5[61];
  *(_QWORD *)(v4 + 480) = v5[60];
  *(_QWORD *)(v4 + 488) = v72;
  v73 = v5 + 62;
  v74 = v5[63];
  swift_retain();
  if (v74 == 1)
  {
    *(_OWORD *)(v4 + 496) = *v73;
  }
  else
  {
    *(_QWORD *)(v4 + 496) = *(_QWORD *)v73;
    *(_QWORD *)(v4 + 504) = v74;
    swift_bridgeObjectRetain();
  }
  v75 = *(void (**)(void *, const void *, uint64_t))(v10 - 120);
  *(_QWORD *)(v4 + 512) = *(_QWORD *)(*(_QWORD *)(v10 - 112) + 512);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  v76 = v9[6];
  v77 = (void *)(v0 + v76);
  v78 = (const void *)(v1 + v76);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v1 + v76, 1, v8))
  {
    v79 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v77, v78, *(_QWORD *)(*(_QWORD *)(v79 - 8) + 64));
  }
  else
  {
    v75(v77, v78, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v77, 0, 1, v8);
  }
  v80 = v9[7];
  v81 = v0 + v80;
  v82 = (_QWORD *)(v1 + v80);
  v83 = v82[1];
  *(_QWORD *)v81 = *v82;
  *(_QWORD *)(v81 + 8) = v83;
  v84 = v82 + 2;
  v85 = v82[3];
  swift_retain();
  if (v85 == 1)
  {
    *(_OWORD *)(v81 + 16) = *v84;
  }
  else
  {
    *(_QWORD *)(v81 + 16) = *(_QWORD *)v84;
    *(_QWORD *)(v81 + 24) = v85;
    swift_bridgeObjectRetain();
  }
  v86 = v9[8];
  v87 = v0 + v86;
  v88 = (_QWORD *)(v1 + v86);
  v89 = v88[1];
  *(_QWORD *)v87 = *v88;
  *(_QWORD *)(v87 + 8) = v89;
  v90 = v88 + 2;
  v91 = v88[3];
  swift_retain();
  if (v91 == 1)
  {
    *(_OWORD *)(v87 + 16) = *v90;
  }
  else
  {
    *(_QWORD *)(v87 + 16) = *(_QWORD *)v90;
    *(_QWORD *)(v87 + 24) = v91;
    swift_bridgeObjectRetain();
  }
  v92 = v9[9];
  v93 = v0 + v92;
  v94 = (_QWORD *)(v1 + v92);
  v95 = v94[1];
  *(_QWORD *)v93 = *v94;
  *(_QWORD *)(v93 + 8) = v95;
  v96 = v94 + 2;
  v97 = v94[3];
  swift_retain();
  if (v97 == 1)
  {
    *(_OWORD *)(v93 + 16) = *v96;
  }
  else
  {
    *(_QWORD *)(v93 + 16) = *(_QWORD *)v96;
    *(_QWORD *)(v93 + 24) = v97;
    swift_bridgeObjectRetain();
  }
  v98 = v9[10];
  v99 = v0 + v98;
  v100 = (_QWORD *)(v1 + v98);
  v101 = v100[1];
  *(_QWORD *)v99 = *v100;
  *(_QWORD *)(v99 + 8) = v101;
  v102 = v100 + 2;
  v103 = v100[3];
  swift_retain();
  if (v103 == 1)
  {
    *(_OWORD *)(v99 + 16) = *v102;
  }
  else
  {
    *(_QWORD *)(v99 + 16) = *(_QWORD *)v102;
    *(_QWORD *)(v99 + 24) = v103;
    swift_bridgeObjectRetain();
  }
  v104 = v9[11];
  v105 = v9[12];
  v106 = (_QWORD *)(v0 + v104);
  v107 = (_QWORD *)(v1 + v104);
  v108 = v107[1];
  *v106 = *v107;
  v106[1] = v108;
  v109 = v0 + v105;
  v110 = v1 + v105;
  *(_QWORD *)v109 = *(_QWORD *)v110;
  *(_BYTE *)(v109 + 8) = *(_BYTE *)(v110 + 8);
  v111 = v9[13];
  v112 = v9[14];
  v113 = v0 + v111;
  v114 = v1 + v111;
  *(_QWORD *)v113 = *(_QWORD *)v114;
  *(_BYTE *)(v113 + 8) = *(_BYTE *)(v114 + 8);
  v115 = v0 + v112;
  v116 = v1 + v112;
  *(_QWORD *)v115 = *(_QWORD *)v116;
  *(_BYTE *)(v115 + 8) = *(_BYTE *)(v116 + 8);
  v117 = v9[15];
  v118 = v0 + v117;
  v119 = v1 + v117;
  v120 = *(_QWORD *)(v1 + v117 + 8);
  swift_bridgeObjectRetain();
  if (v120)
  {
    *(_WORD *)v118 = *(_WORD *)v119;
    v121 = *(_QWORD *)(v119 + 16);
    *(_QWORD *)(v118 + 8) = v120;
    *(_QWORD *)(v118 + 16) = v121;
    v122 = (_OWORD *)(v119 + 24);
    v123 = *(_QWORD *)(v119 + 32);
    swift_retain();
    if (v123 == 1)
    {
      *(_OWORD *)(v118 + 24) = *v122;
    }
    else
    {
      *(_QWORD *)(v118 + 24) = *(_QWORD *)v122;
      *(_QWORD *)(v118 + 32) = v123;
      swift_bridgeObjectRetain();
    }
    v126 = *(_QWORD *)(v119 + 48);
    *(_QWORD *)(v118 + 40) = *(_QWORD *)(v119 + 40);
    *(_QWORD *)(v118 + 48) = v126;
    v127 = (_OWORD *)(v119 + 56);
    v128 = *(_QWORD *)(v119 + 64);
    swift_retain();
    if (v128 == 1)
    {
      *(_OWORD *)(v118 + 56) = *v127;
    }
    else
    {
      *(_QWORD *)(v118 + 56) = *(_QWORD *)v127;
      *(_QWORD *)(v118 + 64) = v128;
      swift_bridgeObjectRetain();
    }
  }
  else
  {
    v124 = *(_OWORD *)(v119 + 48);
    *(_OWORD *)(v118 + 32) = *(_OWORD *)(v119 + 32);
    *(_OWORD *)(v118 + 48) = v124;
    *(_QWORD *)(v118 + 64) = *(_QWORD *)(v119 + 64);
    v125 = *(_OWORD *)(v119 + 16);
    *(_OWORD *)v118 = *(_OWORD *)v119;
    *(_OWORD *)(v118 + 16) = v125;
  }
  v129 = v9[17];
  *(_BYTE *)(v0 + v9[16]) = *(_BYTE *)(v1 + v9[16]);
  v130 = (_QWORD *)(v0 + v129);
  v131 = (_QWORD *)(v1 + v129);
  v132 = v131[1];
  *v130 = *v131;
  v130[1] = v132;
  v133 = v9[18];
  v134 = v9[19];
  v135 = (_QWORD *)(v0 + v133);
  v136 = (_QWORD *)(v1 + v133);
  v137 = v136[1];
  *v135 = *v136;
  v135[1] = v137;
  v138 = (_QWORD *)(v0 + v134);
  v139 = (_QWORD *)(v1 + v134);
  v140 = v139[1];
  *v138 = *v139;
  v138[1] = v140;
  v141 = v9[20];
  v142 = v9[21];
  v143 = (_QWORD *)(v0 + v141);
  v144 = (uint64_t *)(v1 + v141);
  v145 = *v144;
  v146 = v144[1];
  LOBYTE(v144) = *(_BYTE *)(v1 + v142);
  *v143 = v145;
  v143[1] = v146;
  *(_BYTE *)(v0 + v142) = (_BYTE)v144;
  v147 = v9[22];
  v148 = v0 + v147;
  v149 = (_QWORD *)(v1 + v147);
  v150 = v149[1];
  *(_QWORD *)v148 = *v149;
  *(_QWORD *)(v148 + 8) = v150;
  v151 = v149 + 2;
  v152 = v149[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v152 == 1)
  {
    *(_OWORD *)(v148 + 16) = *v151;
  }
  else
  {
    *(_QWORD *)(v148 + 16) = *(_QWORD *)v151;
    *(_QWORD *)(v148 + 24) = v152;
    swift_bridgeObjectRetain();
  }
  v153 = v9[23];
  v154 = v0 + v153;
  v155 = v1 + v153;
  v156 = *(_QWORD *)(v1 + v153);
  if (v156)
  {
    v157 = *(_QWORD *)(v155 + 8);
    v158 = *(_QWORD *)(v155 + 16);
    *(_QWORD *)v154 = v156;
    *(_QWORD *)(v154 + 8) = v157;
    *(_QWORD *)(v154 + 16) = v158;
    v159 = *(_QWORD *)(v155 + 40);
    v160 = *(_OWORD *)(v155 + 24);
    *(_OWORD *)(v10 - 112) = v160;
    *(_OWORD *)(v154 + 24) = v160;
    *(_QWORD *)(v154 + 40) = v159;
    v161 = (uint64_t *)(v155 + 48);
    v162 = *(_QWORD *)(v155 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v162 >> 60 == 15)
    {
      *(_OWORD *)(v154 + 48) = *(_OWORD *)v161;
    }
    else
    {
      v169 = *v161;
      sub_1AD0040A0(*v161, v162);
      *(_QWORD *)(v154 + 48) = v169;
      *(_QWORD *)(v154 + 56) = v162;
    }
    *(_BYTE *)(v154 + 64) = *(_BYTE *)(v155 + 64);
    *(_QWORD *)(v154 + 72) = *(_QWORD *)(v155 + 72);
    *(_BYTE *)(v154 + 80) = *(_BYTE *)(v155 + 80);
    *(_QWORD *)(v154 + 88) = *(_QWORD *)(v155 + 88);
    v170 = *(_QWORD *)(v155 + 112);
    *(_OWORD *)(v154 + 96) = *(_OWORD *)(v155 + 96);
    *(_QWORD *)(v154 + 112) = v170;
    v171 = (uint64_t *)(v155 + 120);
    v172 = *(_QWORD *)(v155 + 128);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v172 >> 60 == 11 || v172 >> 60 == 15)
    {
      *(_OWORD *)(v154 + 120) = *(_OWORD *)v171;
    }
    else
    {
      v173 = *v171;
      sub_1AD0040A0(*v171, v172);
      *(_QWORD *)(v154 + 120) = v173;
      *(_QWORD *)(v154 + 128) = v172;
    }
    v174 = *(_QWORD *)(v155 + 144);
    *(_QWORD *)(v154 + 136) = *(_QWORD *)(v155 + 136);
    *(_QWORD *)(v154 + 144) = v174;
    v175 = (uint64_t *)(v155 + 152);
    v176 = *(_QWORD *)(v155 + 160);
    swift_retain();
    if (v176 >> 60 == 11 || v176 >> 60 == 15)
    {
      *(_OWORD *)(v154 + 152) = *(_OWORD *)v175;
    }
    else
    {
      v177 = *v175;
      sub_1AD0040A0(*v175, v176);
      *(_QWORD *)(v154 + 152) = v177;
      *(_QWORD *)(v154 + 160) = v176;
    }
    v178 = *(_QWORD *)(v155 + 176);
    *(_QWORD *)(v154 + 168) = *(_QWORD *)(v155 + 168);
    *(_QWORD *)(v154 + 176) = v178;
    v179 = (uint64_t *)(v155 + 184);
    v180 = *(_QWORD *)(v155 + 192);
    swift_retain();
    if (v180 >> 60 == 11 || v180 >> 60 == 15)
    {
      *(_OWORD *)(v154 + 184) = *(_OWORD *)v179;
    }
    else
    {
      v181 = *v179;
      sub_1AD0040A0(*v179, v180);
      *(_QWORD *)(v154 + 184) = v181;
      *(_QWORD *)(v154 + 192) = v180;
    }
  }
  else
  {
    v163 = *(_OWORD *)(v155 + 176);
    *(_OWORD *)(v154 + 160) = *(_OWORD *)(v155 + 160);
    *(_OWORD *)(v154 + 176) = v163;
    *(_QWORD *)(v154 + 192) = *(_QWORD *)(v155 + 192);
    v164 = *(_OWORD *)(v155 + 112);
    *(_OWORD *)(v154 + 96) = *(_OWORD *)(v155 + 96);
    *(_OWORD *)(v154 + 112) = v164;
    v165 = *(_OWORD *)(v155 + 144);
    *(_OWORD *)(v154 + 128) = *(_OWORD *)(v155 + 128);
    *(_OWORD *)(v154 + 144) = v165;
    v166 = *(_OWORD *)(v155 + 48);
    *(_OWORD *)(v154 + 32) = *(_OWORD *)(v155 + 32);
    *(_OWORD *)(v154 + 48) = v166;
    v167 = *(_OWORD *)(v155 + 80);
    *(_OWORD *)(v154 + 64) = *(_OWORD *)(v155 + 64);
    *(_OWORD *)(v154 + 80) = v167;
    v168 = *(_OWORD *)(v155 + 16);
    *(_OWORD *)v154 = *(_OWORD *)v155;
    *(_OWORD *)(v154 + 16) = v168;
  }
  v182 = v9[24];
  v183 = v9[25];
  v184 = (_QWORD *)(v0 + v182);
  v185 = (_QWORD *)(v1 + v182);
  v186 = v185[1];
  *v184 = *v185;
  v184[1] = v186;
  *(_BYTE *)(v0 + v183) = *(_BYTE *)(v1 + v183);
  v187 = v9[27];
  *(_BYTE *)(v0 + v9[26]) = *(_BYTE *)(v1 + v9[26]);
  *(_BYTE *)(v0 + v187) = *(_BYTE *)(v1 + v187);
  v188 = v9[28];
  v189 = v9[29];
  v190 = v0 + v188;
  v191 = v1 + v188;
  *(_QWORD *)v190 = *(_QWORD *)v191;
  v192 = *(_BYTE *)(v1 + v189);
  *(_BYTE *)(v190 + 8) = *(_BYTE *)(v191 + 8);
  *(_BYTE *)(v0 + v189) = v192;
  v193 = v9[30];
  v194 = (void *)(v0 + v193);
  v195 = (const void *)(v1 + v193);
  v196 = sub_1AD63B03C();
  v197 = *(_QWORD *)(v196 - 8);
  v198 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v197 + 48);
  swift_bridgeObjectRetain();
  if (v198(v195, 1, v196))
  {
    v199 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v194, v195, *(_QWORD *)(*(_QWORD *)(v199 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v197 + 16))(v194, v195, v196);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v197 + 56))(v194, 0, 1, v196);
  }
  *(_QWORD *)(v0 + v9[31]) = *(_QWORD *)(v1 + v9[31]);
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t assignWithCopy for TextMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  _BYTE *v15;
  _BYTE *v16;
  char *v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  __int128 v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  uint64_t v83;
  _QWORD *v84;
  _QWORD *v85;
  uint64_t v86;
  _QWORD *v87;
  _QWORD *v88;
  uint64_t v89;
  _QWORD *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  unint64_t v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  __int128 v111;
  __int128 v112;
  __int128 v113;
  __int128 v114;
  __int128 v115;
  __int128 v116;
  __int128 v117;
  __int128 v118;
  __int128 v119;
  __int128 v120;
  __int128 v121;
  __int128 v122;
  __int128 v123;
  __int128 v124;
  __int128 v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t *v136;
  unint64_t v137;
  unint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  unint64_t v141;
  unint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  _OWORD *v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  _OWORD *v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t *v155;
  unint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  uint64_t v164;
  void *v165;
  void *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t (*v169)(void *, uint64_t, uint64_t);
  int v170;
  int v171;
  uint64_t v172;
  uint64_t v174;
  uint64_t v175;
  unint64_t v176;
  uint64_t v177;
  uint64_t v178;
  unint64_t v179;
  uint64_t v180;
  uint64_t v181;
  unint64_t v182;

  v6 = sub_1AD63B084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = *(_BYTE *)(v12 + 8);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = v13;
  *(_BYTE *)(a1 + v9[6]) = *(_BYTE *)(a2 + v9[6]);
  *(_BYTE *)(a1 + v9[7]) = *(_BYTE *)(a2 + v9[7]);
  v14 = v9[8];
  v15 = (_BYTE *)(a1 + v14);
  v16 = (_BYTE *)(a2 + v14);
  *v15 = *v16;
  v15[1] = v16[1];
  if (a1 != a2)
  {
    sub_1AD5CB45C(a1 + a3[5]);
    type metadata accessor for TextMessage.MessageType(0);
    v17 = (char *)&loc_1AD5C3EB8 + 4 * word_1AD696D9C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v18 = a3[6];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v22 = v21(a1 + v18, 1, v6);
  v23 = v21((uint64_t)v20, 1, v6);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v19, v20, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v19, v6);
LABEL_8:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_9;
  }
  v8((uint64_t)v19, (uint64_t)v20, v6);
LABEL_9:
  v25 = a3[7];
  v26 = (_QWORD *)(a1 + v25);
  v27 = a2 + v25;
  v28 = *(_QWORD *)(a2 + v25 + 8);
  *v26 = *(_QWORD *)(a2 + v25);
  v26[1] = v28;
  swift_retain();
  swift_release();
  v29 = *(_QWORD *)(v27 + 24);
  if (v26[3] == 1)
  {
    if (v29 != 1)
    {
      v26[2] = *(_QWORD *)(v27 + 16);
      v26[3] = *(_QWORD *)(v27 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  if (v29 == 1)
  {
    sub_1AD009758((uint64_t)(v26 + 2), &qword_1ED2E3198);
LABEL_14:
    *((_OWORD *)v26 + 1) = *(_OWORD *)(v27 + 16);
    goto LABEL_16;
  }
  v26[2] = *(_QWORD *)(v27 + 16);
  v26[3] = *(_QWORD *)(v27 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_16:
  v30 = a3[8];
  v31 = (_QWORD *)(a1 + v30);
  v32 = a2 + v30;
  v33 = *(_QWORD *)(a2 + v30 + 8);
  *v31 = *(_QWORD *)(a2 + v30);
  v31[1] = v33;
  swift_retain();
  swift_release();
  v34 = *(_QWORD *)(v32 + 24);
  if (v31[3] == 1)
  {
    if (v34 != 1)
    {
      v31[2] = *(_QWORD *)(v32 + 16);
      v31[3] = *(_QWORD *)(v32 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_23;
    }
    goto LABEL_21;
  }
  if (v34 == 1)
  {
    sub_1AD009758((uint64_t)(v31 + 2), &qword_1ED2E3198);
LABEL_21:
    *((_OWORD *)v31 + 1) = *(_OWORD *)(v32 + 16);
    goto LABEL_23;
  }
  v31[2] = *(_QWORD *)(v32 + 16);
  v31[3] = *(_QWORD *)(v32 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_23:
  v35 = a3[9];
  v36 = (_QWORD *)(a1 + v35);
  v37 = a2 + v35;
  v38 = *(_QWORD *)(a2 + v35 + 8);
  *v36 = *(_QWORD *)(a2 + v35);
  v36[1] = v38;
  swift_retain();
  swift_release();
  v39 = *(_QWORD *)(v37 + 24);
  if (v36[3] == 1)
  {
    if (v39 != 1)
    {
      v36[2] = *(_QWORD *)(v37 + 16);
      v36[3] = *(_QWORD *)(v37 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_30;
    }
    goto LABEL_28;
  }
  if (v39 == 1)
  {
    sub_1AD009758((uint64_t)(v36 + 2), &qword_1ED2E3198);
LABEL_28:
    *((_OWORD *)v36 + 1) = *(_OWORD *)(v37 + 16);
    goto LABEL_30;
  }
  v36[2] = *(_QWORD *)(v37 + 16);
  v36[3] = *(_QWORD *)(v37 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_30:
  v40 = a3[10];
  v41 = (_QWORD *)(a1 + v40);
  v42 = a2 + v40;
  v43 = *(_QWORD *)(a2 + v40 + 8);
  *v41 = *(_QWORD *)(a2 + v40);
  v41[1] = v43;
  swift_retain();
  swift_release();
  v44 = *(_QWORD *)(v42 + 24);
  if (v41[3] == 1)
  {
    if (v44 != 1)
    {
      v41[2] = *(_QWORD *)(v42 + 16);
      v41[3] = *(_QWORD *)(v42 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_37;
    }
    goto LABEL_35;
  }
  if (v44 == 1)
  {
    sub_1AD009758((uint64_t)(v41 + 2), &qword_1ED2E3198);
LABEL_35:
    *((_OWORD *)v41 + 1) = *(_OWORD *)(v42 + 16);
    goto LABEL_37;
  }
  v41[2] = *(_QWORD *)(v42 + 16);
  v41[3] = *(_QWORD *)(v42 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_37:
  v45 = a3[11];
  v46 = (_QWORD *)(a1 + v45);
  v47 = (_QWORD *)(a2 + v45);
  *v46 = *v47;
  v46[1] = v47[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v48 = a3[12];
  v49 = a1 + v48;
  v50 = (uint64_t *)(a2 + v48);
  v51 = *v50;
  *(_BYTE *)(v49 + 8) = *((_BYTE *)v50 + 8);
  *(_QWORD *)v49 = v51;
  v52 = a3[13];
  v53 = a1 + v52;
  v54 = a2 + v52;
  LOBYTE(v51) = *(_BYTE *)(v54 + 8);
  *(_QWORD *)v53 = *(_QWORD *)v54;
  *(_BYTE *)(v53 + 8) = v51;
  v55 = a3[14];
  v56 = a1 + v55;
  v57 = a2 + v55;
  LOBYTE(v51) = *(_BYTE *)(v57 + 8);
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_BYTE *)(v56 + 8) = v51;
  v58 = a3[15];
  v59 = a1 + v58;
  v60 = a2 + v58;
  v61 = *(_QWORD *)(a1 + v58 + 8);
  v62 = *(_QWORD *)(a2 + v58 + 8);
  if (!v61)
  {
    if (!v62)
    {
      *(_OWORD *)v59 = *(_OWORD *)v60;
      v70 = *(_OWORD *)(v60 + 16);
      v71 = *(_OWORD *)(v60 + 32);
      v72 = *(_OWORD *)(v60 + 48);
      *(_QWORD *)(v59 + 64) = *(_QWORD *)(v60 + 64);
      *(_OWORD *)(v59 + 32) = v71;
      *(_OWORD *)(v59 + 48) = v72;
      *(_OWORD *)(v59 + 16) = v70;
      goto LABEL_62;
    }
    *(_BYTE *)v59 = *(_BYTE *)v60;
    *(_BYTE *)(v59 + 1) = *(_BYTE *)(v60 + 1);
    v65 = *(_QWORD *)(v60 + 16);
    *(_QWORD *)(v59 + 8) = *(_QWORD *)(v60 + 8);
    *(_QWORD *)(v59 + 16) = v65;
    v66 = *(_QWORD *)(v60 + 32);
    swift_retain();
    if (v66 == 1)
    {
      *(_OWORD *)(v59 + 24) = *(_OWORD *)(v60 + 24);
    }
    else
    {
      *(_QWORD *)(v59 + 24) = *(_QWORD *)(v60 + 24);
      *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
      swift_bridgeObjectRetain();
    }
    v73 = *(_QWORD *)(v60 + 48);
    *(_QWORD *)(v59 + 40) = *(_QWORD *)(v60 + 40);
    *(_QWORD *)(v59 + 48) = v73;
    v74 = *(_QWORD *)(v60 + 64);
    swift_retain();
    if (v74 == 1)
    {
      *(_OWORD *)(v59 + 56) = *(_OWORD *)(v60 + 56);
      goto LABEL_62;
    }
    goto LABEL_57;
  }
  if (!v62)
  {
    sub_1AD5CB498(v59);
    *(_OWORD *)v59 = *(_OWORD *)v60;
    v68 = *(_OWORD *)(v60 + 32);
    v67 = *(_OWORD *)(v60 + 48);
    v69 = *(_OWORD *)(v60 + 16);
    *(_QWORD *)(v59 + 64) = *(_QWORD *)(v60 + 64);
    *(_OWORD *)(v59 + 32) = v68;
    *(_OWORD *)(v59 + 48) = v67;
    *(_OWORD *)(v59 + 16) = v69;
    goto LABEL_62;
  }
  *(_BYTE *)v59 = *(_BYTE *)v60;
  *(_BYTE *)(v59 + 1) = *(_BYTE *)(v60 + 1);
  v63 = *(_QWORD *)(v60 + 16);
  *(_QWORD *)(v59 + 8) = *(_QWORD *)(v60 + 8);
  *(_QWORD *)(v59 + 16) = v63;
  swift_retain();
  swift_release();
  v64 = *(_QWORD *)(v60 + 32);
  if (*(_QWORD *)(v59 + 32) == 1)
  {
    if (v64 != 1)
    {
      *(_QWORD *)(v59 + 24) = *(_QWORD *)(v60 + 24);
      *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_55;
    }
    goto LABEL_48;
  }
  if (v64 == 1)
  {
    sub_1AD009758(v59 + 24, &qword_1ED2E3198);
LABEL_48:
    *(_OWORD *)(v59 + 24) = *(_OWORD *)(v60 + 24);
    goto LABEL_55;
  }
  *(_QWORD *)(v59 + 24) = *(_QWORD *)(v60 + 24);
  *(_QWORD *)(v59 + 32) = *(_QWORD *)(v60 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_55:
  v75 = *(_QWORD *)(v60 + 48);
  *(_QWORD *)(v59 + 40) = *(_QWORD *)(v60 + 40);
  *(_QWORD *)(v59 + 48) = v75;
  swift_retain();
  swift_release();
  v76 = *(_QWORD *)(v60 + 64);
  if (*(_QWORD *)(v59 + 64) == 1)
  {
    if (v76 != 1)
    {
LABEL_57:
      *(_QWORD *)(v59 + 56) = *(_QWORD *)(v60 + 56);
      *(_QWORD *)(v59 + 64) = *(_QWORD *)(v60 + 64);
      swift_bridgeObjectRetain();
      goto LABEL_62;
    }
    goto LABEL_60;
  }
  if (v76 == 1)
  {
    sub_1AD009758(v59 + 56, &qword_1ED2E3198);
LABEL_60:
    *(_OWORD *)(v59 + 56) = *(_OWORD *)(v60 + 56);
    goto LABEL_62;
  }
  *(_QWORD *)(v59 + 56) = *(_QWORD *)(v60 + 56);
  *(_QWORD *)(v59 + 64) = *(_QWORD *)(v60 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_62:
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v77 = a3[17];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (_QWORD *)(a2 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80 = a3[18];
  v81 = (_QWORD *)(a1 + v80);
  v82 = (_QWORD *)(a2 + v80);
  *v81 = *v82;
  v81[1] = v82[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v83 = a3[19];
  v84 = (_QWORD *)(a1 + v83);
  v85 = (_QWORD *)(a2 + v83);
  *v84 = *v85;
  v84[1] = v85[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v86 = a3[20];
  v87 = (_QWORD *)(a1 + v86);
  v88 = (_QWORD *)(a2 + v86);
  *v87 = *v88;
  v87[1] = v88[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  v89 = a3[22];
  v90 = (_QWORD *)(a1 + v89);
  v91 = a2 + v89;
  v92 = *(_QWORD *)(a2 + v89 + 8);
  *v90 = *(_QWORD *)(a2 + v89);
  v90[1] = v92;
  swift_retain();
  swift_release();
  v93 = *(_QWORD *)(v91 + 24);
  if (v90[3] == 1)
  {
    if (v93 != 1)
    {
      v90[2] = *(_QWORD *)(v91 + 16);
      v90[3] = *(_QWORD *)(v91 + 24);
      swift_bridgeObjectRetain();
      goto LABEL_69;
    }
    goto LABEL_67;
  }
  if (v93 == 1)
  {
    sub_1AD009758((uint64_t)(v90 + 2), &qword_1ED2E3198);
LABEL_67:
    *((_OWORD *)v90 + 1) = *(_OWORD *)(v91 + 16);
    goto LABEL_69;
  }
  v90[2] = *(_QWORD *)(v91 + 16);
  v90[3] = *(_QWORD *)(v91 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_69:
  v94 = a3[23];
  v95 = a1 + v94;
  v96 = a2 + v94;
  v97 = *(_QWORD *)(a1 + v94);
  v98 = *(_QWORD *)(a2 + v94);
  if (!v97)
  {
    if (!v98)
    {
      *(_OWORD *)v95 = *(_OWORD *)v96;
      v117 = *(_OWORD *)(v96 + 16);
      v118 = *(_OWORD *)(v96 + 32);
      v119 = *(_OWORD *)(v96 + 64);
      *(_OWORD *)(v95 + 48) = *(_OWORD *)(v96 + 48);
      *(_OWORD *)(v95 + 64) = v119;
      *(_OWORD *)(v95 + 16) = v117;
      *(_OWORD *)(v95 + 32) = v118;
      v120 = *(_OWORD *)(v96 + 80);
      v121 = *(_OWORD *)(v96 + 96);
      v122 = *(_OWORD *)(v96 + 128);
      *(_OWORD *)(v95 + 112) = *(_OWORD *)(v96 + 112);
      *(_OWORD *)(v95 + 128) = v122;
      *(_OWORD *)(v95 + 80) = v120;
      *(_OWORD *)(v95 + 96) = v121;
      v123 = *(_OWORD *)(v96 + 144);
      v124 = *(_OWORD *)(v96 + 160);
      v125 = *(_OWORD *)(v96 + 176);
      *(_QWORD *)(v95 + 192) = *(_QWORD *)(v96 + 192);
      *(_OWORD *)(v95 + 160) = v124;
      *(_OWORD *)(v95 + 176) = v125;
      *(_OWORD *)(v95 + 144) = v123;
      goto LABEL_131;
    }
    v104 = *(_QWORD *)(v96 + 8);
    *(_QWORD *)v95 = v98;
    *(_QWORD *)(v95 + 8) = v104;
    *(_QWORD *)(v95 + 16) = *(_QWORD *)(v96 + 16);
    *(_QWORD *)(v95 + 24) = *(_QWORD *)(v96 + 24);
    v105 = *(_QWORD *)(v96 + 40);
    *(_QWORD *)(v95 + 32) = *(_QWORD *)(v96 + 32);
    *(_QWORD *)(v95 + 40) = v105;
    v106 = (uint64_t *)(v96 + 48);
    v107 = *(_QWORD *)(v96 + 56);
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    if (v107 >> 60 == 15)
    {
      *(_OWORD *)(v95 + 48) = *(_OWORD *)v106;
    }
    else
    {
      v126 = *v106;
      sub_1AD0040A0(*v106, v107);
      *(_QWORD *)(v95 + 48) = v126;
      *(_QWORD *)(v95 + 56) = v107;
    }
    *(_BYTE *)(v95 + 64) = *(_BYTE *)(v96 + 64);
    v127 = *(_QWORD *)(v96 + 72);
    *(_BYTE *)(v95 + 80) = *(_BYTE *)(v96 + 80);
    *(_QWORD *)(v95 + 72) = v127;
    *(_QWORD *)(v95 + 88) = *(_QWORD *)(v96 + 88);
    *(_QWORD *)(v95 + 96) = *(_QWORD *)(v96 + 96);
    v128 = *(_QWORD *)(v96 + 112);
    *(_QWORD *)(v95 + 104) = *(_QWORD *)(v96 + 104);
    *(_QWORD *)(v95 + 112) = v128;
    v129 = (uint64_t *)(v96 + 120);
    v130 = *(_QWORD *)(v96 + 128);
    swift_bridgeObjectRetain();
    swift_retain();
    if (v130 >> 60 == 11 || v130 >> 60 == 15)
    {
      *(_OWORD *)(v95 + 120) = *(_OWORD *)v129;
    }
    else
    {
      v145 = *v129;
      sub_1AD0040A0(*v129, v130);
      *(_QWORD *)(v95 + 120) = v145;
      *(_QWORD *)(v95 + 128) = v130;
    }
    v146 = *(_QWORD *)(v96 + 144);
    *(_QWORD *)(v95 + 136) = *(_QWORD *)(v96 + 136);
    *(_QWORD *)(v95 + 144) = v146;
    v147 = (_OWORD *)(v96 + 152);
    v148 = *(_QWORD *)(v96 + 160);
    swift_retain();
    if (v148 >> 60 == 11 || v148 >> 60 == 15)
    {
      *(_OWORD *)(v95 + 152) = *v147;
    }
    else
    {
      v149 = *(_QWORD *)v147;
      sub_1AD0040A0(v149, v148);
      *(_QWORD *)(v95 + 152) = v149;
      *(_QWORD *)(v95 + 160) = v148;
    }
    v150 = *(_QWORD *)(v96 + 176);
    *(_QWORD *)(v95 + 168) = *(_QWORD *)(v96 + 168);
    *(_QWORD *)(v95 + 176) = v150;
    v151 = (_OWORD *)(v96 + 184);
    v152 = *(_QWORD *)(v96 + 192);
    swift_retain();
    if (v152 >> 60 == 11 || v152 >> 60 == 15)
    {
      *(_OWORD *)(v95 + 184) = *v151;
      goto LABEL_131;
    }
    v153 = *(_QWORD *)v151;
    goto LABEL_127;
  }
  if (!v98)
  {
    sub_1AD5CB4C4((uint64_t *)v95);
    *(_OWORD *)v95 = *(_OWORD *)v96;
    v108 = *(_OWORD *)(v96 + 64);
    v110 = *(_OWORD *)(v96 + 16);
    v109 = *(_OWORD *)(v96 + 32);
    *(_OWORD *)(v95 + 48) = *(_OWORD *)(v96 + 48);
    *(_OWORD *)(v95 + 64) = v108;
    *(_OWORD *)(v95 + 16) = v110;
    *(_OWORD *)(v95 + 32) = v109;
    v111 = *(_OWORD *)(v96 + 128);
    v113 = *(_OWORD *)(v96 + 80);
    v112 = *(_OWORD *)(v96 + 96);
    *(_OWORD *)(v95 + 112) = *(_OWORD *)(v96 + 112);
    *(_OWORD *)(v95 + 128) = v111;
    *(_OWORD *)(v95 + 80) = v113;
    *(_OWORD *)(v95 + 96) = v112;
    v115 = *(_OWORD *)(v96 + 160);
    v114 = *(_OWORD *)(v96 + 176);
    v116 = *(_OWORD *)(v96 + 144);
    *(_QWORD *)(v95 + 192) = *(_QWORD *)(v96 + 192);
    *(_OWORD *)(v95 + 160) = v115;
    *(_OWORD *)(v95 + 176) = v114;
    *(_OWORD *)(v95 + 144) = v116;
    goto LABEL_131;
  }
  v99 = *(_QWORD *)(v96 + 8);
  *(_QWORD *)v95 = v98;
  *(_QWORD *)(v95 + 8) = v99;
  swift_retain();
  swift_release();
  *(_QWORD *)(v95 + 16) = *(_QWORD *)(v96 + 16);
  *(_QWORD *)(v95 + 24) = *(_QWORD *)(v96 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v100 = *(_QWORD *)(v96 + 40);
  *(_QWORD *)(v95 + 32) = *(_QWORD *)(v96 + 32);
  *(_QWORD *)(v95 + 40) = v100;
  swift_retain();
  swift_release();
  v101 = (uint64_t *)(v96 + 48);
  v102 = *(_QWORD *)(v96 + 56);
  if (*(_QWORD *)(v95 + 56) >> 60 == 15)
  {
    if (v102 >> 60 != 15)
    {
      v103 = *v101;
      sub_1AD0040A0(*v101, *(_QWORD *)(v96 + 56));
      *(_QWORD *)(v95 + 48) = v103;
      *(_QWORD *)(v95 + 56) = v102;
      goto LABEL_87;
    }
    goto LABEL_80;
  }
  if (v102 >> 60 == 15)
  {
    sub_1AD007EC0(v95 + 48);
LABEL_80:
    *(_OWORD *)(v95 + 48) = *(_OWORD *)v101;
    goto LABEL_87;
  }
  v131 = *v101;
  sub_1AD0040A0(*v101, *(_QWORD *)(v96 + 56));
  v132 = *(_QWORD *)(v95 + 48);
  v133 = *(_QWORD *)(v95 + 56);
  *(_QWORD *)(v95 + 48) = v131;
  *(_QWORD *)(v95 + 56) = v102;
  sub_1AD00412C(v132, v133);
LABEL_87:
  *(_BYTE *)(v95 + 64) = *(_BYTE *)(v96 + 64);
  v134 = *(_QWORD *)(v96 + 72);
  *(_BYTE *)(v95 + 80) = *(_BYTE *)(v96 + 80);
  *(_QWORD *)(v95 + 72) = v134;
  *(_QWORD *)(v95 + 88) = *(_QWORD *)(v96 + 88);
  *(_QWORD *)(v95 + 96) = *(_QWORD *)(v96 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v135 = *(_QWORD *)(v96 + 112);
  *(_QWORD *)(v95 + 104) = *(_QWORD *)(v96 + 104);
  *(_QWORD *)(v95 + 112) = v135;
  swift_retain();
  swift_release();
  v136 = (uint64_t *)(v96 + 120);
  v137 = *(_QWORD *)(v96 + 128);
  v138 = v137 & 0xF000000000000000;
  if (*(_QWORD *)(v95 + 128) >> 60 == 11)
  {
    if (v138 != 0xB000000000000000 && v137 >> 60 != 15)
      goto LABEL_101;
    goto LABEL_93;
  }
  if (v138 == 0xB000000000000000)
  {
    sub_1AD009758(v95 + 120, &qword_1ED2E3250);
    goto LABEL_93;
  }
  if (*(_QWORD *)(v95 + 128) >> 60 == 15)
  {
    if (v137 >> 60 != 15)
    {
LABEL_101:
      v143 = *v136;
      sub_1AD0040A0(*v136, *(_QWORD *)(v96 + 128));
      *(_QWORD *)(v95 + 120) = v143;
      *(_QWORD *)(v95 + 128) = v137;
      goto LABEL_94;
    }
LABEL_93:
    *(_OWORD *)(v95 + 120) = *(_OWORD *)v136;
    goto LABEL_94;
  }
  if (v137 >> 60 == 15)
  {
    sub_1AD007EC0(v95 + 120);
    goto LABEL_93;
  }
  v174 = *v136;
  sub_1AD0040A0(*v136, *(_QWORD *)(v96 + 128));
  v175 = *(_QWORD *)(v95 + 120);
  v176 = *(_QWORD *)(v95 + 128);
  *(_QWORD *)(v95 + 120) = v174;
  *(_QWORD *)(v95 + 128) = v137;
  sub_1AD00412C(v175, v176);
LABEL_94:
  v139 = *(_QWORD *)(v96 + 144);
  *(_QWORD *)(v95 + 136) = *(_QWORD *)(v96 + 136);
  *(_QWORD *)(v95 + 144) = v139;
  swift_retain();
  swift_release();
  v140 = (uint64_t *)(v96 + 152);
  v141 = *(_QWORD *)(v96 + 160);
  v142 = v141 & 0xF000000000000000;
  if (*(_QWORD *)(v95 + 160) >> 60 == 11)
  {
    if (v142 == 0xB000000000000000)
      goto LABEL_118;
LABEL_103:
    if (v141 >> 60 != 15)
    {
      v144 = *v140;
      sub_1AD0040A0(*v140, *(_QWORD *)(v96 + 160));
      *(_QWORD *)(v95 + 152) = v144;
      *(_QWORD *)(v95 + 160) = v141;
      goto LABEL_119;
    }
    goto LABEL_118;
  }
  if (v142 == 0xB000000000000000)
  {
    sub_1AD009758(v95 + 152, &qword_1ED2E3250);
LABEL_118:
    *(_OWORD *)(v95 + 152) = *(_OWORD *)v140;
    goto LABEL_119;
  }
  if (*(_QWORD *)(v95 + 160) >> 60 == 15)
    goto LABEL_103;
  if (v141 >> 60 == 15)
  {
    sub_1AD007EC0(v95 + 152);
    goto LABEL_118;
  }
  v177 = *v140;
  sub_1AD0040A0(*v140, *(_QWORD *)(v96 + 160));
  v178 = *(_QWORD *)(v95 + 152);
  v179 = *(_QWORD *)(v95 + 160);
  *(_QWORD *)(v95 + 152) = v177;
  *(_QWORD *)(v95 + 160) = v141;
  sub_1AD00412C(v178, v179);
LABEL_119:
  v154 = *(_QWORD *)(v96 + 176);
  *(_QWORD *)(v95 + 168) = *(_QWORD *)(v96 + 168);
  *(_QWORD *)(v95 + 176) = v154;
  swift_retain();
  swift_release();
  v155 = (uint64_t *)(v96 + 184);
  v152 = *(_QWORD *)(v96 + 192);
  v156 = v152 & 0xF000000000000000;
  if (*(_QWORD *)(v95 + 192) >> 60 == 11)
  {
    if (v156 == 0xB000000000000000)
      goto LABEL_130;
    goto LABEL_125;
  }
  if (v156 == 0xB000000000000000)
  {
    sub_1AD009758(v95 + 184, &qword_1ED2E3250);
    goto LABEL_130;
  }
  if (*(_QWORD *)(v95 + 192) >> 60 == 15)
  {
LABEL_125:
    if (v152 >> 60 != 15)
    {
      v153 = *v155;
LABEL_127:
      sub_1AD0040A0(v153, v152);
      *(_QWORD *)(v95 + 184) = v153;
      *(_QWORD *)(v95 + 192) = v152;
      goto LABEL_131;
    }
LABEL_130:
    *(_OWORD *)(v95 + 184) = *(_OWORD *)v155;
    goto LABEL_131;
  }
  if (v152 >> 60 == 15)
  {
    sub_1AD007EC0(v95 + 184);
    goto LABEL_130;
  }
  v180 = *v155;
  sub_1AD0040A0(*v155, *(_QWORD *)(v96 + 192));
  v181 = *(_QWORD *)(v95 + 184);
  v182 = *(_QWORD *)(v95 + 192);
  *(_QWORD *)(v95 + 184) = v180;
  *(_QWORD *)(v95 + 192) = v152;
  sub_1AD00412C(v181, v182);
LABEL_131:
  v157 = a3[24];
  v158 = (_QWORD *)(a1 + v157);
  v159 = (_QWORD *)(a2 + v157);
  *v158 = *v159;
  v158[1] = v159[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + a3[26]) = *(_BYTE *)(a2 + a3[26]);
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  v160 = a3[28];
  v161 = a1 + v160;
  v162 = (uint64_t *)(a2 + v160);
  v163 = *v162;
  *(_BYTE *)(v161 + 8) = *((_BYTE *)v162 + 8);
  *(_QWORD *)v161 = v163;
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  v164 = a3[30];
  v165 = (void *)(a1 + v164);
  v166 = (void *)(a2 + v164);
  v167 = sub_1AD63B03C();
  v168 = *(_QWORD *)(v167 - 8);
  v169 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v168 + 48);
  v170 = v169(v165, 1, v167);
  v171 = v169(v166, 1, v167);
  if (!v170)
  {
    if (!v171)
    {
      (*(void (**)(void *, void *, uint64_t))(v168 + 24))(v165, v166, v167);
      goto LABEL_137;
    }
    (*(void (**)(void *, uint64_t))(v168 + 8))(v165, v167);
    goto LABEL_136;
  }
  if (v171)
  {
LABEL_136:
    v172 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v165, v166, *(_QWORD *)(*(_QWORD *)(v172 - 8) + 64));
    goto LABEL_137;
  }
  (*(void (**)(void *, void *, uint64_t))(v168 + 16))(v165, v166, v167);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v168 + 56))(v165, 0, 1, v167);
LABEL_137:
  *(_QWORD *)(a1 + a3[31]) = *(_QWORD *)(a2 + a3[31]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1AD5CB45C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for TextMessage.MessageType(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD5CB498(uint64_t a1)
{
  destroy for TextMessage.MessageSummaryInfo(a1);
  return a1;
}

uint64_t *sub_1AD5CB4C4(uint64_t *a1)
{
  destroy for NicknameInformation(a1);
  return a1;
}

uint64_t initializeWithTake for TextMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  const void *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _OWORD *v24;
  _OWORD *v25;
  __int128 v26;
  _OWORD *v27;
  _OWORD *v28;
  __int128 v29;
  uint64_t v30;
  uint64_t v31;
  _OWORD *v32;
  _OWORD *v33;
  __int128 v34;
  _OWORD *v35;
  _OWORD *v36;
  __int128 v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _OWORD *v56;
  _OWORD *v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  __int128 v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  __int128 v67;
  __int128 v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void *v74;
  const void *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;

  v6 = sub_1AD63B084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_BYTE *)(a1 + v9[6]) = *(_BYTE *)(a2 + v9[6]);
  *(_BYTE *)(a1 + v9[7]) = *(_BYTE *)(a2 + v9[7]);
  *(_WORD *)(a1 + v9[8]) = *(_WORD *)(a2 + v9[8]);
  v13 = a3[5];
  v14 = (void *)(a1 + v13);
  v15 = (const void *)(a2 + v13);
  v16 = type metadata accessor for TextMessage.MessageType(0);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    type metadata accessor for BalloonPlugin.Payload(0);
    v17 = (char *)&loc_1AD5CB5FC + 4 * byte_1AD696E0C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  v18 = a3[6];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a2 + v18, 1, v6))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v8((uint64_t)v19, (uint64_t)v20, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
  }
  v22 = a3[7];
  v23 = a3[8];
  v24 = (_OWORD *)(a1 + v22);
  v25 = (_OWORD *)(a2 + v22);
  v26 = v25[1];
  *v24 = *v25;
  v24[1] = v26;
  v27 = (_OWORD *)(a1 + v23);
  v28 = (_OWORD *)(a2 + v23);
  v29 = v28[1];
  *v27 = *v28;
  v27[1] = v29;
  v30 = a3[9];
  v31 = a3[10];
  v32 = (_OWORD *)(a1 + v30);
  v33 = (_OWORD *)(a2 + v30);
  v34 = v33[1];
  *v32 = *v33;
  v32[1] = v34;
  v35 = (_OWORD *)(a1 + v31);
  v36 = (_OWORD *)(a2 + v31);
  v37 = v36[1];
  *v35 = *v36;
  v35[1] = v37;
  v38 = a3[12];
  *(_OWORD *)(a1 + a3[11]) = *(_OWORD *)(a2 + a3[11]);
  v39 = a1 + v38;
  v40 = a2 + v38;
  *(_QWORD *)v39 = *(_QWORD *)v40;
  *(_BYTE *)(v39 + 8) = *(_BYTE *)(v40 + 8);
  v41 = a3[13];
  v42 = a3[14];
  v43 = a1 + v41;
  v44 = a2 + v41;
  *(_QWORD *)v43 = *(_QWORD *)v44;
  *(_BYTE *)(v43 + 8) = *(_BYTE *)(v44 + 8);
  v45 = a1 + v42;
  v46 = a2 + v42;
  *(_QWORD *)v45 = *(_QWORD *)v46;
  *(_BYTE *)(v45 + 8) = *(_BYTE *)(v46 + 8);
  v47 = a3[15];
  v48 = a3[16];
  v49 = a1 + v47;
  v50 = a2 + v47;
  *(_QWORD *)(v49 + 64) = *(_QWORD *)(v50 + 64);
  v51 = *(_OWORD *)(v50 + 48);
  *(_OWORD *)(v49 + 32) = *(_OWORD *)(v50 + 32);
  *(_OWORD *)(v49 + 48) = v51;
  v52 = *(_OWORD *)(v50 + 16);
  *(_OWORD *)v49 = *(_OWORD *)v50;
  *(_OWORD *)(v49 + 16) = v52;
  *(_BYTE *)(a1 + v48) = *(_BYTE *)(a2 + v48);
  v53 = a3[18];
  *(_OWORD *)(a1 + a3[17]) = *(_OWORD *)(a2 + a3[17]);
  *(_OWORD *)(a1 + v53) = *(_OWORD *)(a2 + v53);
  v54 = a3[20];
  *(_OWORD *)(a1 + a3[19]) = *(_OWORD *)(a2 + a3[19]);
  *(_OWORD *)(a1 + v54) = *(_OWORD *)(a2 + v54);
  v55 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  v56 = (_OWORD *)(a1 + v55);
  v57 = (_OWORD *)(a2 + v55);
  v58 = v57[1];
  *v56 = *v57;
  v56[1] = v58;
  v59 = a3[23];
  v60 = a3[24];
  v61 = a1 + v59;
  v62 = a2 + v59;
  *(_QWORD *)(v61 + 192) = *(_QWORD *)(v62 + 192);
  v63 = *(_OWORD *)(v62 + 48);
  *(_OWORD *)(v61 + 32) = *(_OWORD *)(v62 + 32);
  *(_OWORD *)(v61 + 48) = v63;
  v64 = *(_OWORD *)(v62 + 16);
  *(_OWORD *)v61 = *(_OWORD *)v62;
  *(_OWORD *)(v61 + 16) = v64;
  v65 = *(_OWORD *)(v62 + 112);
  *(_OWORD *)(v61 + 96) = *(_OWORD *)(v62 + 96);
  *(_OWORD *)(v61 + 112) = v65;
  v66 = *(_OWORD *)(v62 + 80);
  *(_OWORD *)(v61 + 64) = *(_OWORD *)(v62 + 64);
  *(_OWORD *)(v61 + 80) = v66;
  v67 = *(_OWORD *)(v62 + 176);
  *(_OWORD *)(v61 + 160) = *(_OWORD *)(v62 + 160);
  *(_OWORD *)(v61 + 176) = v67;
  v68 = *(_OWORD *)(v62 + 144);
  *(_OWORD *)(v61 + 128) = *(_OWORD *)(v62 + 128);
  *(_OWORD *)(v61 + 144) = v68;
  *(_OWORD *)(a1 + v60) = *(_OWORD *)(a2 + v60);
  v69 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + v69) = *(_BYTE *)(a2 + v69);
  v70 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  v71 = a1 + v70;
  v72 = a2 + v70;
  *(_QWORD *)v71 = *(_QWORD *)v72;
  *(_BYTE *)(v71 + 8) = *(_BYTE *)(v72 + 8);
  v73 = a3[30];
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  v74 = (void *)(a1 + v73);
  v75 = (const void *)(a2 + v73);
  v76 = sub_1AD63B03C();
  v77 = *(_QWORD *)(v76 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v76))
  {
    v78 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v74, v75, *(_QWORD *)(*(_QWORD *)(v78 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v77 + 32))(v74, v75, v76);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v77 + 56))(v74, 0, 1, v76);
  }
  *(_QWORD *)(a1 + a3[31]) = *(_QWORD *)(a2 + a3[31]);
  return a1;
}

uint64_t assignWithTake for TextMessage(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  int *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  const void *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void *v21;
  const void *v22;
  uint64_t (*v23)(uint64_t, uint64_t, uint64_t);
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _OWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _OWORD *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  uint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  _OWORD *v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _OWORD *v102;
  unint64_t v103;
  unint64_t v104;
  __int128 v105;
  __int128 v106;
  __int128 v107;
  __int128 v108;
  __int128 v109;
  __int128 v110;
  uint64_t v111;
  uint64_t v112;
  _OWORD *v113;
  unint64_t v114;
  unint64_t v115;
  _OWORD *v116;
  unint64_t v117;
  unint64_t v118;
  _OWORD *v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  _QWORD *v123;
  uint64_t *v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  void *v132;
  void *v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t (*v136)(void *, uint64_t, uint64_t);
  int v137;
  int v138;
  uint64_t v139;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  void *v144;

  v6 = sub_1AD63B084();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = (int *)type metadata accessor for Metadata();
  v10 = v9[5];
  v11 = a1 + v10;
  v12 = a2 + v10;
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *(_BYTE *)(v11 + 8) = *(_BYTE *)(v12 + 8);
  *(_BYTE *)(a1 + v9[6]) = *(_BYTE *)(a2 + v9[6]);
  *(_BYTE *)(a1 + v9[7]) = *(_BYTE *)(a2 + v9[7]);
  v13 = v9[8];
  v14 = (_BYTE *)(a1 + v13);
  v15 = (_BYTE *)(a2 + v13);
  *v14 = *v15;
  v14[1] = v15[1];
  if (a1 != a2)
  {
    v16 = a3[5];
    v17 = (const void *)(a2 + v16);
    v144 = (void *)(a1 + v16);
    sub_1AD5CB45C(a1 + v16);
    v18 = type metadata accessor for TextMessage.MessageType(0);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      type metadata accessor for BalloonPlugin.Payload(0);
      v19 = (char *)&loc_1AD5CED50 + 4 * byte_1AD696E50[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    memcpy(v144, v17, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  }
  v20 = a3[6];
  v21 = (void *)(a1 + v20);
  v22 = (const void *)(a2 + v20);
  v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v24 = v23(a1 + v20, 1, v6);
  v25 = v23((uint64_t)v22, 1, v6);
  if (v24)
  {
    if (!v25)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v21, v22, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v21, 0, 1, v6);
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  if (v25)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v21, v6);
LABEL_10:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    goto LABEL_11;
  }
  v8((uint64_t)v21, (uint64_t)v22, v6);
LABEL_11:
  v27 = a3[7];
  v28 = a1 + v27;
  v29 = a2 + v27;
  *(_OWORD *)(a1 + v27) = *(_OWORD *)(a2 + v27);
  swift_release();
  v30 = (_OWORD *)(v29 + 16);
  if (*(_QWORD *)(v28 + 24) == 1)
  {
LABEL_14:
    *(_OWORD *)(v28 + 16) = *v30;
    goto LABEL_16;
  }
  v31 = *(_QWORD *)(v29 + 24);
  if (v31 == 1)
  {
    sub_1AD009758(v28 + 16, &qword_1ED2E3198);
    goto LABEL_14;
  }
  *(_QWORD *)(v28 + 16) = *(_QWORD *)v30;
  *(_QWORD *)(v28 + 24) = v31;
  swift_bridgeObjectRelease();
LABEL_16:
  v32 = a3[8];
  v33 = a1 + v32;
  v34 = a2 + v32;
  *(_OWORD *)(a1 + v32) = *(_OWORD *)(a2 + v32);
  swift_release();
  v35 = (_OWORD *)(v34 + 16);
  if (*(_QWORD *)(v33 + 24) == 1)
  {
LABEL_19:
    *(_OWORD *)(v33 + 16) = *v35;
    goto LABEL_21;
  }
  v36 = *(_QWORD *)(v34 + 24);
  if (v36 == 1)
  {
    sub_1AD009758(v33 + 16, &qword_1ED2E3198);
    goto LABEL_19;
  }
  *(_QWORD *)(v33 + 16) = *(_QWORD *)v35;
  *(_QWORD *)(v33 + 24) = v36;
  swift_bridgeObjectRelease();
LABEL_21:
  v37 = a3[9];
  v38 = a1 + v37;
  v39 = a2 + v37;
  *(_OWORD *)(a1 + v37) = *(_OWORD *)(a2 + v37);
  swift_release();
  v40 = (_OWORD *)(v39 + 16);
  if (*(_QWORD *)(v38 + 24) == 1)
  {
LABEL_24:
    *(_OWORD *)(v38 + 16) = *v40;
    goto LABEL_26;
  }
  v41 = *(_QWORD *)(v39 + 24);
  if (v41 == 1)
  {
    sub_1AD009758(v38 + 16, &qword_1ED2E3198);
    goto LABEL_24;
  }
  *(_QWORD *)(v38 + 16) = *(_QWORD *)v40;
  *(_QWORD *)(v38 + 24) = v41;
  swift_bridgeObjectRelease();
LABEL_26:
  v42 = a3[10];
  v43 = a1 + v42;
  v44 = a2 + v42;
  *(_OWORD *)(a1 + v42) = *(_OWORD *)(a2 + v42);
  swift_release();
  v45 = (_OWORD *)(v44 + 16);
  if (*(_QWORD *)(v43 + 24) == 1)
  {
LABEL_29:
    *(_OWORD *)(v43 + 16) = *v45;
    goto LABEL_31;
  }
  v46 = *(_QWORD *)(v44 + 24);
  if (v46 == 1)
  {
    sub_1AD009758(v43 + 16, &qword_1ED2E3198);
    goto LABEL_29;
  }
  *(_QWORD *)(v43 + 16) = *(_QWORD *)v45;
  *(_QWORD *)(v43 + 24) = v46;
  swift_bridgeObjectRelease();
LABEL_31:
  v47 = a3[11];
  v48 = (_QWORD *)(a1 + v47);
  v49 = (uint64_t *)(a2 + v47);
  v51 = *v49;
  v50 = v49[1];
  *v48 = v51;
  v48[1] = v50;
  swift_bridgeObjectRelease();
  v52 = a3[12];
  v53 = a3[13];
  v54 = a1 + v52;
  v55 = a2 + v52;
  *(_QWORD *)v54 = *(_QWORD *)v55;
  *(_BYTE *)(v54 + 8) = *(_BYTE *)(v55 + 8);
  v56 = a1 + v53;
  v57 = a2 + v53;
  *(_QWORD *)v56 = *(_QWORD *)v57;
  *(_BYTE *)(v56 + 8) = *(_BYTE *)(v57 + 8);
  v58 = a3[14];
  v59 = a3[15];
  v60 = a1 + v58;
  v61 = a2 + v58;
  *(_QWORD *)v60 = *(_QWORD *)v61;
  *(_BYTE *)(v60 + 8) = *(_BYTE *)(v61 + 8);
  v62 = a1 + v59;
  v63 = a2 + v59;
  if (!*(_QWORD *)(a1 + v59 + 8))
  {
LABEL_38:
    v68 = *(_OWORD *)(v63 + 48);
    *(_OWORD *)(v62 + 32) = *(_OWORD *)(v63 + 32);
    *(_OWORD *)(v62 + 48) = v68;
    *(_QWORD *)(v62 + 64) = *(_QWORD *)(v63 + 64);
    v69 = *(_OWORD *)(v63 + 16);
    *(_OWORD *)v62 = *(_OWORD *)v63;
    *(_OWORD *)(v62 + 16) = v69;
    goto LABEL_46;
  }
  v64 = *(_QWORD *)(v63 + 8);
  if (!v64)
  {
    sub_1AD5CB498(a1 + v59);
    goto LABEL_38;
  }
  *(_WORD *)v62 = *(_WORD *)v63;
  v65 = *(_QWORD *)(v63 + 16);
  *(_QWORD *)(v62 + 8) = v64;
  *(_QWORD *)(v62 + 16) = v65;
  swift_release();
  v66 = (_OWORD *)(v63 + 24);
  if (*(_QWORD *)(v62 + 32) == 1)
  {
LABEL_36:
    *(_OWORD *)(v62 + 24) = *v66;
    goto LABEL_41;
  }
  v67 = *(_QWORD *)(v63 + 32);
  if (v67 == 1)
  {
    sub_1AD009758(v62 + 24, &qword_1ED2E3198);
    goto LABEL_36;
  }
  *(_QWORD *)(v62 + 24) = *(_QWORD *)v66;
  *(_QWORD *)(v62 + 32) = v67;
  swift_bridgeObjectRelease();
LABEL_41:
  *(_OWORD *)(v62 + 40) = *(_OWORD *)(v63 + 40);
  swift_release();
  v70 = (_OWORD *)(v63 + 56);
  if (*(_QWORD *)(v62 + 64) == 1)
  {
LABEL_44:
    *(_OWORD *)(v62 + 56) = *v70;
    goto LABEL_46;
  }
  v71 = *(_QWORD *)(v63 + 64);
  if (v71 == 1)
  {
    sub_1AD009758(v62 + 56, &qword_1ED2E3198);
    goto LABEL_44;
  }
  *(_QWORD *)(v62 + 56) = *(_QWORD *)v70;
  *(_QWORD *)(v62 + 64) = v71;
  swift_bridgeObjectRelease();
LABEL_46:
  v72 = a3[17];
  *(_BYTE *)(a1 + a3[16]) = *(_BYTE *)(a2 + a3[16]);
  v73 = (_QWORD *)(a1 + v72);
  v74 = (uint64_t *)(a2 + v72);
  v76 = *v74;
  v75 = v74[1];
  *v73 = v76;
  v73[1] = v75;
  swift_bridgeObjectRelease();
  v77 = a3[18];
  v78 = (_QWORD *)(a1 + v77);
  v79 = (uint64_t *)(a2 + v77);
  v81 = *v79;
  v80 = v79[1];
  *v78 = v81;
  v78[1] = v80;
  swift_bridgeObjectRelease();
  v82 = a3[19];
  v83 = (_QWORD *)(a1 + v82);
  v84 = (uint64_t *)(a2 + v82);
  v86 = *v84;
  v85 = v84[1];
  *v83 = v86;
  v83[1] = v85;
  swift_bridgeObjectRelease();
  v87 = a3[20];
  v88 = (_QWORD *)(a1 + v87);
  v89 = (uint64_t *)(a2 + v87);
  v91 = *v89;
  v90 = v89[1];
  *v88 = v91;
  v88[1] = v90;
  swift_bridgeObjectRelease();
  v92 = a3[22];
  *(_BYTE *)(a1 + a3[21]) = *(_BYTE *)(a2 + a3[21]);
  v93 = a1 + v92;
  v94 = a2 + v92;
  *(_OWORD *)(a1 + v92) = *(_OWORD *)(a2 + v92);
  swift_release();
  v95 = (_OWORD *)(v94 + 16);
  if (*(_QWORD *)(v93 + 24) == 1)
  {
LABEL_49:
    *(_OWORD *)(v93 + 16) = *v95;
    goto LABEL_51;
  }
  v96 = *(_QWORD *)(v94 + 24);
  if (v96 == 1)
  {
    sub_1AD009758(v93 + 16, &qword_1ED2E3198);
    goto LABEL_49;
  }
  *(_QWORD *)(v93 + 16) = *(_QWORD *)v95;
  *(_QWORD *)(v93 + 24) = v96;
  swift_bridgeObjectRelease();
LABEL_51:
  v97 = a3[23];
  v98 = a1 + v97;
  v99 = a2 + v97;
  if (!*(_QWORD *)(a1 + v97))
  {
LABEL_58:
    v105 = *(_OWORD *)(v99 + 176);
    *(_OWORD *)(v98 + 160) = *(_OWORD *)(v99 + 160);
    *(_OWORD *)(v98 + 176) = v105;
    *(_QWORD *)(v98 + 192) = *(_QWORD *)(v99 + 192);
    v106 = *(_OWORD *)(v99 + 112);
    *(_OWORD *)(v98 + 96) = *(_OWORD *)(v99 + 96);
    *(_OWORD *)(v98 + 112) = v106;
    v107 = *(_OWORD *)(v99 + 144);
    *(_OWORD *)(v98 + 128) = *(_OWORD *)(v99 + 128);
    *(_OWORD *)(v98 + 144) = v107;
    v108 = *(_OWORD *)(v99 + 48);
    *(_OWORD *)(v98 + 32) = *(_OWORD *)(v99 + 32);
    *(_OWORD *)(v98 + 48) = v108;
    v109 = *(_OWORD *)(v99 + 80);
    *(_OWORD *)(v98 + 64) = *(_OWORD *)(v99 + 64);
    *(_OWORD *)(v98 + 80) = v109;
    v110 = *(_OWORD *)(v99 + 16);
    *(_OWORD *)v98 = *(_OWORD *)v99;
    *(_OWORD *)(v98 + 16) = v110;
    goto LABEL_81;
  }
  if (!*(_QWORD *)v99)
  {
    sub_1AD5CB4C4((uint64_t *)v98);
    goto LABEL_58;
  }
  v100 = *(_QWORD *)(v99 + 8);
  *(_QWORD *)v98 = *(_QWORD *)v99;
  *(_QWORD *)(v98 + 8) = v100;
  swift_release();
  v101 = *(_QWORD *)(v99 + 24);
  *(_QWORD *)(v98 + 16) = *(_QWORD *)(v99 + 16);
  *(_QWORD *)(v98 + 24) = v101;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v98 + 32) = *(_OWORD *)(v99 + 32);
  swift_release();
  v102 = (_OWORD *)(v99 + 48);
  v103 = *(_QWORD *)(v98 + 56);
  if (v103 >> 60 == 15)
  {
LABEL_56:
    *(_OWORD *)(v98 + 48) = *v102;
    goto LABEL_60;
  }
  v104 = *(_QWORD *)(v99 + 56);
  if (v104 >> 60 == 15)
  {
    sub_1AD007EC0(v98 + 48);
    goto LABEL_56;
  }
  v111 = *(_QWORD *)(v98 + 48);
  *(_QWORD *)(v98 + 48) = *(_QWORD *)v102;
  *(_QWORD *)(v98 + 56) = v104;
  sub_1AD00412C(v111, v103);
LABEL_60:
  *(_BYTE *)(v98 + 64) = *(_BYTE *)(v99 + 64);
  *(_QWORD *)(v98 + 72) = *(_QWORD *)(v99 + 72);
  *(_BYTE *)(v98 + 80) = *(_BYTE *)(v99 + 80);
  v112 = *(_QWORD *)(v99 + 96);
  *(_QWORD *)(v98 + 88) = *(_QWORD *)(v99 + 88);
  *(_QWORD *)(v98 + 96) = v112;
  swift_bridgeObjectRelease();
  *(_OWORD *)(v98 + 104) = *(_OWORD *)(v99 + 104);
  swift_release();
  v113 = (_OWORD *)(v99 + 120);
  v114 = *(_QWORD *)(v98 + 128);
  if (v114 >> 60 == 11)
  {
LABEL_66:
    *(_OWORD *)(v98 + 120) = *v113;
    goto LABEL_67;
  }
  v115 = *(_QWORD *)(v99 + 128);
  if (v115 >> 60 == 11)
  {
    sub_1AD009758(v98 + 120, &qword_1ED2E3250);
    goto LABEL_66;
  }
  if (v114 >> 60 == 15)
    goto LABEL_66;
  if (v115 >> 60 == 15)
  {
    sub_1AD007EC0(v98 + 120);
    goto LABEL_66;
  }
  v141 = *(_QWORD *)(v98 + 120);
  *(_QWORD *)(v98 + 120) = *(_QWORD *)v113;
  *(_QWORD *)(v98 + 128) = v115;
  sub_1AD00412C(v141, v114);
LABEL_67:
  *(_OWORD *)(v98 + 136) = *(_OWORD *)(v99 + 136);
  swift_release();
  v116 = (_OWORD *)(v99 + 152);
  v117 = *(_QWORD *)(v98 + 160);
  if (v117 >> 60 == 11)
  {
LABEL_73:
    *(_OWORD *)(v98 + 152) = *v116;
    goto LABEL_74;
  }
  v118 = *(_QWORD *)(v99 + 160);
  if (v118 >> 60 == 11)
  {
    sub_1AD009758(v98 + 152, &qword_1ED2E3250);
    goto LABEL_73;
  }
  if (v117 >> 60 == 15)
    goto LABEL_73;
  if (v118 >> 60 == 15)
  {
    sub_1AD007EC0(v98 + 152);
    goto LABEL_73;
  }
  v142 = *(_QWORD *)(v98 + 152);
  *(_QWORD *)(v98 + 152) = *(_QWORD *)v116;
  *(_QWORD *)(v98 + 160) = v118;
  sub_1AD00412C(v142, v117);
LABEL_74:
  *(_OWORD *)(v98 + 168) = *(_OWORD *)(v99 + 168);
  swift_release();
  v119 = (_OWORD *)(v99 + 184);
  v120 = *(_QWORD *)(v98 + 192);
  if (v120 >> 60 == 11)
  {
LABEL_80:
    *(_OWORD *)(v98 + 184) = *v119;
    goto LABEL_81;
  }
  v121 = *(_QWORD *)(v99 + 192);
  if (v121 >> 60 == 11)
  {
    sub_1AD009758(v98 + 184, &qword_1ED2E3250);
    goto LABEL_80;
  }
  if (v120 >> 60 == 15)
    goto LABEL_80;
  if (v121 >> 60 == 15)
  {
    sub_1AD007EC0(v98 + 184);
    goto LABEL_80;
  }
  v143 = *(_QWORD *)(v98 + 184);
  *(_QWORD *)(v98 + 184) = *(_QWORD *)v119;
  *(_QWORD *)(v98 + 192) = v121;
  sub_1AD00412C(v143, v120);
LABEL_81:
  v122 = a3[24];
  v123 = (_QWORD *)(a1 + v122);
  v124 = (uint64_t *)(a2 + v122);
  v126 = *v124;
  v125 = v124[1];
  *v123 = v126;
  v123[1] = v125;
  swift_bridgeObjectRelease();
  v127 = a3[26];
  *(_BYTE *)(a1 + a3[25]) = *(_BYTE *)(a2 + a3[25]);
  *(_BYTE *)(a1 + v127) = *(_BYTE *)(a2 + v127);
  v128 = a3[28];
  *(_BYTE *)(a1 + a3[27]) = *(_BYTE *)(a2 + a3[27]);
  v129 = a1 + v128;
  v130 = a2 + v128;
  *(_BYTE *)(v129 + 8) = *(_BYTE *)(v130 + 8);
  *(_QWORD *)v129 = *(_QWORD *)v130;
  v131 = a3[30];
  *(_BYTE *)(a1 + a3[29]) = *(_BYTE *)(a2 + a3[29]);
  v132 = (void *)(a1 + v131);
  v133 = (void *)(a2 + v131);
  v134 = sub_1AD63B03C();
  v135 = *(_QWORD *)(v134 - 8);
  v136 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v135 + 48);
  v137 = v136(v132, 1, v134);
  v138 = v136(v133, 1, v134);
  if (!v137)
  {
    if (!v138)
    {
      (*(void (**)(void *, void *, uint64_t))(v135 + 40))(v132, v133, v134);
      goto LABEL_87;
    }
    (*(void (**)(void *, uint64_t))(v135 + 8))(v132, v134);
    goto LABEL_86;
  }
  if (v138)
  {
LABEL_86:
    v139 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v132, v133, *(_QWORD *)(*(_QWORD *)(v139 - 8) + 64));
    goto LABEL_87;
  }
  (*(void (**)(void *, void *, uint64_t))(v135 + 32))(v132, v133, v134);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v135 + 56))(v132, 0, 1, v134);
LABEL_87:
  *(_QWORD *)(a1 + a3[31]) = *(_QWORD *)(a2 + a3[31]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TextMessage()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5D28C8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;

  v6 = type metadata accessor for Metadata();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = type metadata accessor for TextMessage.MessageType(0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v13 = a3[5];
LABEL_12:
    v10 = a1 + v13;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  v12 = *(_QWORD *)(v14 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v14;
    v13 = a3[6];
    goto LABEL_12;
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    v12 = *(_QWORD *)(v8 - 8);
    v13 = a3[30];
    goto LABEL_12;
  }
  v15 = *(_QWORD *)(a1 + a3[7]);
  if (v15 >= 0xFFFFFFFF)
    LODWORD(v15) = -1;
  return (v15 + 1);
}

uint64_t storeEnumTagSinglePayload for TextMessage()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5D29CC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;

  v8 = type metadata accessor for Metadata();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    v13 = type metadata accessor for TextMessage.MessageType(0);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[5];
    }
    else
    {
      result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
      v14 = *(_QWORD *)(result - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = result;
        v15 = a4[6];
      }
      else
      {
        if (a3 == 0x7FFFFFFF)
        {
          *(_QWORD *)(a1 + a4[7]) = (a2 - 1);
          return result;
        }
        v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
        v14 = *(_QWORD *)(v10 - 8);
        v15 = a4[30];
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1AD5D2AC0()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  type metadata accessor for Metadata();
  if (v0 <= 0x3F)
  {
    type metadata accessor for TextMessage.MessageType(319);
    if (v1 <= 0x3F)
    {
      sub_1ACFFECF8(319, qword_1ED2E7158, (void (*)(uint64_t))MEMORY[0x1E0CB0998]);
      if (v2 <= 0x3F)
      {
        sub_1ACFFECF8(319, (unint64_t *)&qword_1ED2E5320, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for TextMessage.MessageType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_1AD5D2C70 + 4 * word_1AD696E94[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for TextMessage.MessageType(char *a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  char *v28;
  uint64_t *v29;
  unint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  int *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  unsigned int (*v38)(char *, uint64_t, uint64_t);
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  unsigned int (*v52)(char *, uint64_t, uint64_t);
  char *v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  void (*v75)(char *, uint64_t);
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  int *v81;
  char *v82;
  uint64_t v83;
  char *v84;
  char *v85;
  uint64_t v86;
  uint64_t v87;
  int *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  char *v92;
  char *v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  char *v97;
  char *v98;
  int *v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  char *v108;
  uint64_t v109;
  char *v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  int *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  unsigned int (*v123)(char *, uint64_t, uint64_t);
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      if (*((_QWORD *)a1 + 1))
      {
        swift_release();
        swift_bridgeObjectRelease();
        if (*((_QWORD *)a1 + 8))
        {
          __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 40));
          v3 = *((_QWORD *)a1 + 15);
          v4 = *((_QWORD *)a1 + 17);
          v5 = *((_QWORD *)a1 + 19);
          v6 = *((_QWORD *)a1 + 21);
          v7 = *((_QWORD *)a1 + 25);
          v8 = *((_QWORD *)a1 + 27);
          v9 = *((_QWORD *)a1 + 29);
          if (v3 >> 1 != 0xFFFFFFFF
            || (v5 | (unint64_t)v4) > 1
            || v7 & 0xFFFFFFFFFFFFFEFELL | v6 & 0xFFFFFFFFFFFF00FELL
            || (v9 | v8) >= 2)
          {
            sub_1AD00E8B0(*((_QWORD *)a1 + 12), *((_QWORD *)a1 + 13), *((_QWORD *)a1 + 14), v3, *((_QWORD *)a1 + 16), v4, *((_QWORD *)a1 + 18), v5, *((_QWORD *)a1 + 20), v6, *((_QWORD *)a1 + 22), *((_QWORD *)a1 + 23), *((_QWORD *)a1 + 24), v7, *((_QWORD *)a1 + 26), v8, *((_QWORD *)a1 + 28), v9, *((_QWORD *)a1 + 30),
              *((_QWORD *)a1 + 31),
              *((_QWORD *)a1 + 32),
              *((_QWORD *)a1 + 33),
              *((_QWORD *)a1 + 34),
              *((_QWORD *)a1 + 35));
          }
        }
        sub_1AD00E8B0(*((_QWORD *)a1 + 36), *((_QWORD *)a1 + 37), *((_QWORD *)a1 + 38), *((_QWORD *)a1 + 39), *((_QWORD *)a1 + 40), *((_QWORD *)a1 + 41), *((_QWORD *)a1 + 42), *((_QWORD *)a1 + 43), *((_QWORD *)a1 + 44), *((_QWORD *)a1 + 45), *((_QWORD *)a1 + 46), *((_QWORD *)a1 + 47), *((_QWORD *)a1 + 48), *((_QWORD *)a1 + 49), *((_QWORD *)a1 + 50), *((_QWORD *)a1 + 51), *((_QWORD *)a1 + 52), *((_QWORD *)a1 + 53), *((_QWORD *)a1 + 54),
          *((_QWORD *)a1 + 55),
          *((_QWORD *)a1 + 56),
          *((_QWORD *)a1 + 57),
          *((_QWORD *)a1 + 58),
          *((_QWORD *)a1 + 59));
      }
      swift_release();
      if (*((_QWORD *)a1 + 63) != 1)
        swift_bridgeObjectRelease();
      goto LABEL_133;
    case 1:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (*((_QWORD *)a1 + 6) >= 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_15;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)a1 + 13))
      {
        swift_bridgeObjectRelease();
        swift_release();
        if (*((_QWORD *)a1 + 16) != 1)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_133;
    case 3:
      type metadata accessor for BalloonPlugin.Payload(0);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          swift_bridgeObjectRelease();
          v10 = (int *)type metadata accessor for MessagesAppBalloon();
          v11 = &a1[v10[5]];
          v12 = sub_1AD63B084();
          v13 = *(_QWORD *)(v12 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
            (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
          swift_bridgeObjectRelease();
          v14 = &a1[v10[7]];
          v15 = sub_1AD63AF28();
          v16 = *(_QWORD *)(v15 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15))
            (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
          if (*(_QWORD *)&a1[v10[8] + 8] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          v17 = &a1[v10[11]];
          if (*((_QWORD *)v17 + 34) >> 1 != 0xFFFFFFFFLL
            || (*((_QWORD *)v17 + 38) | *((_QWORD *)v17 + 36)) > 1
            || *((_QWORD *)v17 + 44) & 0xFFFFFFFFFFFFFEFELL | *((_QWORD *)v17 + 40) & 0xFFFFFFFFFFFF00FELL
            || (*((_QWORD *)v17 + 48) | *((_QWORD *)v17 + 46)) >= 2)
          {
            if (*((_QWORD *)v17 + 3))
            {
              __swift_destroy_boxed_opaque_existential_1((uint64_t)&a1[v10[11]]);
              v18 = *((_QWORD *)v17 + 10);
              v19 = *((_QWORD *)v17 + 12);
              v20 = *((_QWORD *)v17 + 14);
              v21 = *((_QWORD *)v17 + 16);
              v22 = *((_QWORD *)v17 + 20);
              v23 = *((_QWORD *)v17 + 22);
              v24 = *((_QWORD *)v17 + 24);
              if (v18 >> 1 != 0xFFFFFFFF
                || (v20 | (unint64_t)v19) > 1
                || v22 & 0xFFFFFFFFFFFFFEFELL | v21 & 0xFFFFFFFFFFFF00FELL
                || (v24 | v23) >= 2)
              {
                sub_1AD00E8B0(*((_QWORD *)v17 + 7), *((_QWORD *)v17 + 8), *((_QWORD *)v17 + 9), v18, *((_QWORD *)v17 + 11), v19, *((_QWORD *)v17 + 13), v20, *((_QWORD *)v17 + 15), v21, *((_QWORD *)v17 + 17), *((_QWORD *)v17 + 18), *((_QWORD *)v17 + 19), v22, *((_QWORD *)v17 + 21), v23, *((_QWORD *)v17 + 23), v24, *((_QWORD *)v17 + 25),
                  *((_QWORD *)v17 + 26),
                  *((_QWORD *)v17 + 27),
                  *((_QWORD *)v17 + 28),
                  *((_QWORD *)v17 + 29),
                  *((_QWORD *)v17 + 30));
              }
            }
            v25 = *((_QWORD *)v17 + 31);
            v26 = *((_QWORD *)v17 + 32);
            v27 = v17 + 248;
            sub_1AD00E8B0(v25, v26, v27[2], v27[3], v27[4], v27[5], v27[6], v27[7], v27[8], v27[9], v27[10], v27[11], v27[12], v27[13], v27[14], v27[15], v27[16], v27[17], v27[18],
              v27[19],
              v27[20],
              v27[21],
              v27[22],
              v27[23]);
          }
          v28 = &a1[v10[12]];
          swift_release();
          if (*((_QWORD *)v28 + 3) != 1)
            swift_bridgeObjectRelease();
          if (*(_QWORD *)&a1[v10[13] + 8] != 1)
            swift_bridgeObjectRelease();
          v29 = (uint64_t *)&a1[v10[14]];
          v30 = v29[1];
          if (v30 >> 60 != 15)
            sub_1AD00412C(*v29, v30);
          goto LABEL_127;
        case 1u:
          v31 = sub_1AD63B084();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v31 - 8) + 8))(a1, v31);
          v32 = &a1[*(int *)(type metadata accessor for Handwriting() + 20)];
          v33 = sub_1AD63B03C();
          (*(void (**)(char *, uint64_t))(*(_QWORD *)(v33 - 8) + 8))(v32, v33);
          goto LABEL_127;
        case 2u:
          v34 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
          if ((*(unsigned int (**)(char *, uint64_t, int *))(*((_QWORD *)v34 - 1) + 48))(a1, 1, v34))
            goto LABEL_128;
          v35 = &a1[v34[5]];
          v36 = sub_1AD63AF28();
          v37 = *(_QWORD *)(v36 - 8);
          v38 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48);
          if (!v38(v35, 1, v36))
            (*(void (**)(char *, uint64_t))(v37 + 8))(v35, v36);
          v39 = &a1[v34[6]];
          if (!v38(v39, 1, v36))
            (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v36);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v40 = &a1[v34[12]];
          if (!v38(v40, 1, v36))
            (*(void (**)(char *, uint64_t))(v37 + 8))(v40, v36);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)&a1[v34[21] + 16] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v41 = &a1[v34[22]];
          v42 = type metadata accessor for LinkPresentation.IconMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v42 - 8) + 48))(v41, 1, v42))
          {
            v43 = &v41[*(int *)(v42 + 20)];
            if (!v38(v43, 1, v36))
              (*(void (**)(char *, uint64_t))(v37 + 8))(v43, v36);
            swift_bridgeObjectRelease();
          }
          if (*(_QWORD *)&a1[v34[23] + 16] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v44 = &a1[v34[24]];
          v45 = type metadata accessor for LinkPresentation.ARAssetMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 48))(v44, 1, v45))
          {
            v46 = &v44[*(int *)(v45 + 20)];
            if (!v38(v46, 1, v36))
              (*(void (**)(char *, uint64_t))(v37 + 8))(v46, v36);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          if (*(_QWORD *)&a1[v34[25] + 16] != 1)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          v47 = &a1[v34[27]];
          v48 = type metadata accessor for LinkPresentation.ImageMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 48))(v47, 1, v48))
          {
            v49 = &v47[*(int *)(v48 + 20)];
            if (!v38(v49, 1, v36))
              (*(void (**)(char *, uint64_t))(v37 + 8))(v49, v36);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v50 = &a1[v34[30]];
          v51 = type metadata accessor for LinkPresentation.Video(0);
          v52 = *(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48);
          if (!v52(v50, 1, v51))
          {
            if (!v38(v50, 1, v36))
              (*(void (**)(char *, uint64_t))(v37 + 8))(v50, v36);
            v53 = &v50[*(int *)(v51 + 20)];
            if (!v38(v53, 1, v36))
              (*(void (**)(char *, uint64_t))(v37 + 8))(v53, v36);
            swift_bridgeObjectRelease();
            swift_release();
            swift_bridgeObjectRelease();
          }
          v54 = &a1[v34[31]];
          v55 = type metadata accessor for LinkPresentation.VideoMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 48))(v54, 1, v55))
          {
            v56 = &v54[*(int *)(v55 + 20)];
            if (!v38(v56, 1, v36))
              (*(void (**)(char *, uint64_t))(v37 + 8))(v56, v36);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v57 = &a1[v34[32]];
          v58 = type metadata accessor for LinkPresentation.Audio(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 48))(v57, 1, v58))
          {
            if (!v38(v57, 1, v36))
              (*(void (**)(char *, uint64_t))(v37 + 8))(v57, v36);
            swift_bridgeObjectRelease();
          }
          v59 = &a1[v34[33]];
          v60 = type metadata accessor for LinkPresentation.AudioMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v60 - 8) + 48))(v59, 1, v60))
          {
            v61 = &v59[*(int *)(v60 + 20)];
            if (!v38(v61, 1, v36))
              (*(void (**)(char *, uint64_t))(v37 + 8))(v61, v36);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v62 = &a1[v34[41]];
          v63 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v63 - 8) + 48))(v62, 1, v63))
          {
            switch(swift_getEnumCaseMultiPayload())
            {
              case 0u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 14) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v81 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
                v82 = &v62[v81[11]];
                v83 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 48))(v82, 1, v83))
                {
                  v84 = &v82[*(int *)(v83 + 20)];
                  if (!v38(v84, 1, v36))
                    (*(void (**)(char *, uint64_t))(v37 + 8))(v84, v36);
                  swift_bridgeObjectRelease();
                }
                v85 = &v62[v81[12]];
                if (!v38(v85, 1, v36))
                  (*(void (**)(char *, uint64_t))(v37 + 8))(v85, v36);
                swift_bridgeObjectRelease();
                if (*(_QWORD *)&v62[v81[14] + 8] != 1)
                  goto LABEL_269;
                break;
              case 1u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 10) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v86 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
                goto LABEL_194;
              case 2u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 10) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v87 = type metadata accessor for LinkPresentation.MusicVideoMetadata(0);
                goto LABEL_220;
              case 3u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 10) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v87 = type metadata accessor for LinkPresentation.ArtistMetadata(0);
                goto LABEL_220;
              case 4u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v88 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
                v89 = &v62[v88[8]];
                if (!v38(v89, 1, v36))
                  (*(void (**)(char *, uint64_t))(v37 + 8))(v89, v36);
                swift_bridgeObjectRelease();
                if (*(_QWORD *)&v62[v88[10] + 16] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v90 = v88[11];
                goto LABEL_221;
              case 5u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 10) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v87 = type metadata accessor for LinkPresentation.RadioMetadata(0);
                goto LABEL_220;
              case 6u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 14) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                v91 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
                v92 = &v62[*(int *)(v91 + 48)];
                if (!v52(v92, 1, v51))
                {
                  if (!v38(v92, 1, v36))
                    (*(void (**)(char *, uint64_t))(v37 + 8))(v92, v36);
                  v93 = &v92[*(int *)(v51 + 20)];
                  if (!v38(v93, 1, v36))
                    (*(void (**)(char *, uint64_t))(v37 + 8))(v93, v36);
                  swift_bridgeObjectRelease();
                  swift_release();
                  swift_bridgeObjectRelease();
                }
                if (*(_QWORD *)&v62[*(int *)(v91 + 56) + 16] != 1)
                  goto LABEL_269;
                break;
              case 7u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 10) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v87 = type metadata accessor for LinkPresentation.BookMetadata(0);
                goto LABEL_220;
              case 8u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 12) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v94 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
                v95 = &v62[*(int *)(v94 + 40)];
                v96 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v96 - 8) + 48))(v95, 1, v96))
                {
                  v97 = &v95[*(int *)(v96 + 20)];
                  if (!v38(v97, 1, v36))
                    (*(void (**)(char *, uint64_t))(v37 + 8))(v97, v36);
                  swift_bridgeObjectRelease();
                }
                v98 = &v62[*(int *)(v94 + 44)];
                if (!v38(v98, 1, v36))
                  (*(void (**)(char *, uint64_t))(v37 + 8))(v98, v36);
                break;
              case 9u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                v99 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
                v100 = &v62[v99[9]];
                v101 = sub_1AD63B03C();
                v102 = *(_QWORD *)(v101 - 8);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v102 + 48))(v100, 1, v101))
                  (*(void (**)(char *, uint64_t))(v102 + 8))(v100, v101);
                if (*(_QWORD *)&v62[v99[10] + 16] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v103 = &v62[v99[11]];
                v104 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 48))(v103, 1, v104))
                {
                  v105 = &v103[*(int *)(v104 + 20)];
                  if (!v38(v105, 1, v36))
                    (*(void (**)(char *, uint64_t))(v37 + 8))(v105, v36);
                  swift_bridgeObjectRelease();
                }
                goto LABEL_229;
              case 0xAu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 10) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v86 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
LABEL_194:
                v106 = &v62[*(int *)(v86 + 36)];
                v107 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v107 - 8) + 48))(v106, 1, v107))
                {
                  v108 = &v106[*(int *)(v107 + 20)];
                  if (!v38(v108, 1, v36))
                    (*(void (**)(char *, uint64_t))(v37 + 8))(v108, v36);
                  swift_bridgeObjectRelease();
                }
                goto LABEL_229;
              case 0xBu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 12) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v90 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
                goto LABEL_221;
              case 0xCu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 10) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v87 = type metadata accessor for LinkPresentation.TVSeasonMetadata(0);
                goto LABEL_220;
              case 0xDu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 8) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v90 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
                goto LABEL_221;
              case 0xEu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 10) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v109 = type metadata accessor for LinkPresentation.MovieMetadata(0);
                v110 = &v62[*(int *)(v109 + 36)];
                v111 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 48))(v110, 1, v111))
                {
                  v112 = &v110[*(int *)(v111 + 20)];
                  if (!v38(v112, 1, v36))
                    (*(void (**)(char *, uint64_t))(v37 + 8))(v112, v36);
                  swift_bridgeObjectRelease();
                }
                if (*(_QWORD *)&v62[*(int *)(v109 + 40) + 16] != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                goto LABEL_229;
              case 0xFu:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 10) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v87 = type metadata accessor for LinkPresentation.MovieBundleMetadata(0);
LABEL_220:
                v90 = *(int *)(v87 + 36);
LABEL_221:
                v113 = &v62[v90];
                v114 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v114 - 8) + 48))(v113, 1, v114))
                {
                  break;
                }
                v115 = &v113[*(int *)(v114 + 20)];
                if (!v38(v115, 1, v36))
                  (*(void (**)(char *, uint64_t))(v37 + 8))(v115, v36);
LABEL_229:
                swift_bridgeObjectRelease();
                break;
              case 0x10u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 8) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (*((_QWORD *)v62 + 24) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                goto LABEL_229;
              case 0x11u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 8) != 1)
                  goto LABEL_269;
                break;
              case 0x12u:
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 4) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (*((_QWORD *)v62 + 20) != 1)
                  goto LABEL_269;
                break;
              case 0x13u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 5) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 24) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 47) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 67) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 88) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (*((_QWORD *)v62 + 104) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (*((_QWORD *)v62 + 120) != 1)
                  goto LABEL_269;
                break;
              case 0x14u:
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 5) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (*((_QWORD *)v62 + 21) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (*((_QWORD *)v62 + 37) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 56) != 1)
                  goto LABEL_269;
                break;
              case 0x15u:
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 4) != 1)
                  goto LABEL_269;
                break;
              case 0x16u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 7) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                if (*((_QWORD *)v62 + 23) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v116 = &v62[*(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36)];
                v117 = sub_1AD63B03C();
                v118 = *(_QWORD *)(v117 - 8);
                if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v118 + 48))(v116, 1, v117))
                  (*(void (**)(char *, uint64_t))(v118 + 8))(v116, v117);
                break;
              case 0x17u:
              case 0x1Bu:
              case 0x1Du:
              case 0x1Fu:
              case 0x20u:
              case 0x21u:
                goto LABEL_229;
              case 0x18u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 10) != 1)
                  goto LABEL_269;
                break;
              case 0x19u:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 6) != 1)
                  goto LABEL_269;
                break;
              case 0x1Au:
                swift_bridgeObjectRelease();
                if (*((_QWORD *)v62 + 7) != 1)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                }
                v119 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
                v120 = &v62[v119[9]];
                v121 = sub_1AD63B03C();
                v122 = *(_QWORD *)(v121 - 8);
                v123 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48);
                if (!v123(v120, 1, v121))
                  (*(void (**)(char *, uint64_t))(v122 + 8))(v120, v121);
                v124 = &v62[v119[10]];
                if (!v123(v124, 1, v121))
                  (*(void (**)(char *, uint64_t))(v122 + 8))(v124, v121);
                v125 = v119[11];
                goto LABEL_280;
              case 0x1Cu:
              case 0x22u:
LABEL_269:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                break;
              case 0x1Eu:
                swift_bridgeObjectRelease();
                v126 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
                v127 = &v62[*(int *)(v126 + 20)];
                v121 = sub_1AD63B03C();
                v122 = *(_QWORD *)(v121 - 8);
                v123 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v122 + 48);
                if (!v123(v127, 1, v121))
                  (*(void (**)(char *, uint64_t))(v122 + 8))(v127, v121);
                v125 = *(int *)(v126 + 24);
LABEL_280:
                v128 = &v62[v125];
                if (!v123(v128, 1, v121))
                  (*(void (**)(char *, uint64_t))(v122 + 8))(v128, v121);
                break;
              case 0x23u:
                swift_release();
                break;
              default:
                break;
            }
          }
          v64 = &a1[v34[42]];
          if (*((_QWORD *)v64 + 1) != 1)
          {
            swift_bridgeObjectRelease();
            if (*((_QWORD *)v64 + 4) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          v65 = &a1[v34[43]];
          v66 = type metadata accessor for CollaborationMetadata();
          if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v66 - 8) + 48))(v65, 1, v66))
            goto LABEL_128;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          v67 = &v65[*(int *)(v66 + 24)];
          v68 = sub_1AD63B03C();
          v69 = *(_QWORD *)(v68 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v69 + 48))(v67, 1, v68))
            (*(void (**)(char *, uint64_t))(v69 + 8))(v67, v68);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (!*(_QWORD *)&v65[*(int *)(v66 + 40) + 112])
            goto LABEL_128;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_127:
          swift_bridgeObjectRelease();
LABEL_128:
          v79 = type metadata accessor for BalloonPlugin(0);
          swift_release();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (*(_QWORD *)&a1[*(int *)(v79 + 36)])
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          swift_release();
          swift_bridgeObjectRelease();
          v80 = &a1[*(int *)(v79 + 44)];
          swift_release();
          if (*((_QWORD *)v80 + 3) != 1)
            swift_bridgeObjectRelease();
          swift_release();
          break;
        case 3u:
          swift_release();
          v70 = &a1[*(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28)];
          v71 = sub_1AD63AF28();
          v72 = *(_QWORD *)(v71 - 8);
          if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v70, 1, v71))
            (*(void (**)(char *, uint64_t))(v72 + 8))(v70, v71);
          v73 = type metadata accessor for CombinedPluginAttachmentInfo();
          sub_1AD00412C(*(_QWORD *)&a1[*(int *)(v73 + 20)], *(_QWORD *)&a1[*(int *)(v73 + 20) + 8]);
          swift_release();
          swift_bridgeObjectRelease();
          sub_1AD00412C(*(_QWORD *)&a1[*(int *)(v73 + 32)], *(_QWORD *)&a1[*(int *)(v73 + 32) + 8]);
          goto LABEL_128;
        case 4u:
          v74 = sub_1AD63B084();
          v75 = *(void (**)(char *, uint64_t))(*(_QWORD *)(v74 - 8) + 8);
          v75(a1, v74);
          v76 = &a1[*(int *)(type metadata accessor for DigitalTouchBalloon(0) + 20)];
          type metadata accessor for DigitalTouchMessage(0);
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
            case 1u:
            case 3u:
            case 5u:
            case 6u:
              goto LABEL_126;
            case 2u:
              swift_release();
              swift_release();
              swift_release();
              goto LABEL_128;
            case 4u:
              v77 = &v76[*(int *)(type metadata accessor for VideoMessage(0) + 20)];
              v78 = type metadata accessor for IntroBalloon(0);
              if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v78 - 8) + 48))(v77, 1, v78))
              {
                v75(v77, v74);
                swift_release();
                swift_bridgeObjectRelease();
              }
LABEL_126:
              swift_release();
              goto LABEL_127;
            default:
              goto LABEL_128;
          }
        default:
          goto LABEL_128;
      }
      goto LABEL_133;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (*((_QWORD *)a1 + 13) >= 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_133;
    case 5:
      if (*(_QWORD *)a1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_15:
      swift_release();
      swift_bridgeObjectRelease();
      goto LABEL_133;
    case 6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)a1 + 17))
      {
        swift_bridgeObjectRelease();
        swift_release();
        if (*((_QWORD *)a1 + 20) != 1)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      goto LABEL_133;
    case 7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      if (*((_QWORD *)a1 + 16) >= 2uLL)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*((_QWORD *)a1 + 26))
      {
        swift_bridgeObjectRelease();
        swift_release();
        if (*((_QWORD *)a1 + 29) != 1)
          swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
LABEL_133:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for TextMessage.MessageType()
{
  char *v0;

  v0 = (char *)sub_1AD5DAA30 + 4 * word_1AD696F6E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1AD5DAA30()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  __int128 v27;
  __int128 v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  _OWORD *v74;
  uint64_t v75;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  unint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;

  *(_BYTE *)v0 = *(_BYTE *)v1;
  v5 = *(_QWORD *)(v1 + 8);
  if (v5)
  {
    v6 = *(_QWORD *)(v1 + 16);
    v7 = *(_QWORD *)(v1 + 24);
    *(_QWORD *)(v0 + 8) = v5;
    *(_QWORD *)(v0 + 16) = v6;
    v8 = *(_QWORD *)(v1 + 32);
    *(_QWORD *)(v0 + 24) = v7;
    *(_QWORD *)(v0 + 32) = v8;
    v9 = *(_QWORD *)(v1 + 64);
    swift_retain();
    swift_bridgeObjectRetain();
    *(_QWORD *)(v4 - 104) = v3;
    *(_DWORD *)(v4 - 92) = v2;
    if (v9)
    {
      v10 = *(_QWORD *)(v1 + 72);
      *(_QWORD *)(v0 + 64) = v9;
      *(_QWORD *)(v0 + 72) = v10;
      (**(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8))(v0 + 40, v1 + 40, v9);
      *(_QWORD *)(v0 + 80) = *(_QWORD *)(v1 + 80);
      *(_BYTE *)(v0 + 88) = *(_BYTE *)(v1 + 88);
      v11 = *(_QWORD *)(v1 + 120);
      v12 = *(_QWORD *)(v1 + 136);
      v13 = *(_QWORD *)(v1 + 152);
      v14 = *(_QWORD *)(v1 + 168);
      v15 = *(_QWORD *)(v1 + 200);
      v16 = *(_QWORD *)(v1 + 216);
      v17 = *(_QWORD *)(v1 + 232);
      if (v11 >> 1 != 0xFFFFFFFF
        || (v13 | (unint64_t)v12) > 1
        || v15 & 0xFFFFFFFFFFFFFEFELL | v14 & 0xFFFFFFFFFFFF00FELL
        || (v17 | v16) >= 2)
      {
        v31 = *(_QWORD *)(v1 + 96);
        v32 = *(_QWORD *)(v1 + 104);
        v33 = *(_QWORD *)(v1 + 112);
        v34 = *(_QWORD *)(v1 + 128);
        v35 = *(_QWORD *)(v1 + 144);
        v86 = *(_QWORD *)(v1 + 160);
        v36 = *(_QWORD *)(v1 + 184);
        v94 = *(_QWORD *)(v1 + 176);
        v37 = *(_QWORD *)(v1 + 192);
        *(_QWORD *)(v4 - 200) = v36;
        *(_QWORD *)(v4 - 192) = v37;
        v38 = *(_QWORD *)(v1 + 208);
        v39 = *(_QWORD *)(v1 + 224);
        *(_QWORD *)(v4 - 184) = v38;
        *(_QWORD *)(v4 - 176) = v39;
        v40 = *(_QWORD *)(v1 + 240);
        v41 = *(_QWORD *)(v1 + 248);
        *(_QWORD *)(v4 - 168) = v40;
        *(_QWORD *)(v4 - 160) = v41;
        v42 = *(_QWORD *)(v1 + 256);
        v43 = *(_QWORD *)(v1 + 264);
        *(_QWORD *)(v4 - 152) = v42;
        *(_QWORD *)(v4 - 144) = v43;
        v44 = *(_QWORD *)(v1 + 272);
        v45 = *(_QWORD *)(v1 + 280);
        *(_QWORD *)(v4 - 136) = v44;
        *(_QWORD *)(v4 - 128) = v45;
        v79 = v16;
        v78 = v15;
        v77 = v14;
        v88 = v14;
        v90 = v15;
        v46 = v31;
        v47 = v32;
        v96 = v16;
        v48 = v34;
        v92 = v17;
        sub_1AD00FEAC(v31, v32, v33, v11, v34, v12, v35, v13, v86, v77, v94, v36, v37, v78, v38, v79, v39, v17, v40,
          v41,
          v42,
          v43,
          v44,
          v45);
        *(_QWORD *)(v0 + 96) = v46;
        *(_QWORD *)(v0 + 104) = v47;
        *(_QWORD *)(v0 + 112) = v33;
        *(_QWORD *)(v0 + 120) = v11;
        *(_QWORD *)(v0 + 128) = v48;
        *(_QWORD *)(v0 + 136) = v12;
        *(_QWORD *)(v0 + 144) = v35;
        *(_QWORD *)(v0 + 152) = v13;
        *(_QWORD *)(v0 + 160) = v86;
        *(_QWORD *)(v0 + 168) = v88;
        *(_QWORD *)(v0 + 176) = v94;
        *(_QWORD *)(v0 + 184) = *(_QWORD *)(v4 - 200);
        *(_QWORD *)(v0 + 192) = *(_QWORD *)(v4 - 192);
        *(_QWORD *)(v0 + 200) = v90;
        *(_QWORD *)(v0 + 208) = *(_QWORD *)(v4 - 184);
        *(_QWORD *)(v0 + 216) = v96;
        *(_QWORD *)(v0 + 224) = *(_QWORD *)(v4 - 176);
        *(_QWORD *)(v0 + 232) = v92;
        *(_QWORD *)(v0 + 240) = *(_QWORD *)(v4 - 168);
        *(_QWORD *)(v0 + 248) = *(_QWORD *)(v4 - 160);
        *(_QWORD *)(v0 + 256) = *(_QWORD *)(v4 - 152);
        *(_QWORD *)(v0 + 264) = *(_QWORD *)(v4 - 144);
        *(_QWORD *)(v0 + 272) = *(_QWORD *)(v4 - 136);
        *(_QWORD *)(v0 + 280) = *(_QWORD *)(v4 - 128);
      }
      else
      {
        v18 = *(_OWORD *)(v1 + 240);
        *(_OWORD *)(v0 + 224) = *(_OWORD *)(v1 + 224);
        *(_OWORD *)(v0 + 240) = v18;
        v19 = *(_OWORD *)(v1 + 272);
        *(_OWORD *)(v0 + 256) = *(_OWORD *)(v1 + 256);
        *(_OWORD *)(v0 + 272) = v19;
        v20 = *(_OWORD *)(v1 + 176);
        *(_OWORD *)(v0 + 160) = *(_OWORD *)(v1 + 160);
        *(_OWORD *)(v0 + 176) = v20;
        v21 = *(_OWORD *)(v1 + 208);
        *(_OWORD *)(v0 + 192) = *(_OWORD *)(v1 + 192);
        *(_OWORD *)(v0 + 208) = v21;
        v22 = *(_OWORD *)(v1 + 112);
        *(_OWORD *)(v0 + 96) = *(_OWORD *)(v1 + 96);
        *(_OWORD *)(v0 + 112) = v22;
        v23 = *(_OWORD *)(v1 + 144);
        *(_OWORD *)(v0 + 128) = *(_OWORD *)(v1 + 128);
        *(_OWORD *)(v0 + 144) = v23;
      }
    }
    else
    {
      v24 = *(_OWORD *)(v1 + 248);
      *(_OWORD *)(v0 + 232) = *(_OWORD *)(v1 + 232);
      *(_OWORD *)(v0 + 248) = v24;
      *(_OWORD *)(v0 + 264) = *(_OWORD *)(v1 + 264);
      *(_QWORD *)(v0 + 280) = *(_QWORD *)(v1 + 280);
      v25 = *(_OWORD *)(v1 + 184);
      *(_OWORD *)(v0 + 168) = *(_OWORD *)(v1 + 168);
      *(_OWORD *)(v0 + 184) = v25;
      v26 = *(_OWORD *)(v1 + 216);
      *(_OWORD *)(v0 + 200) = *(_OWORD *)(v1 + 200);
      *(_OWORD *)(v0 + 216) = v26;
      v27 = *(_OWORD *)(v1 + 120);
      *(_OWORD *)(v0 + 104) = *(_OWORD *)(v1 + 104);
      *(_OWORD *)(v0 + 120) = v27;
      v28 = *(_OWORD *)(v1 + 152);
      *(_OWORD *)(v0 + 136) = *(_OWORD *)(v1 + 136);
      *(_OWORD *)(v0 + 152) = v28;
      v29 = *(_OWORD *)(v1 + 56);
      *(_OWORD *)(v0 + 40) = *(_OWORD *)(v1 + 40);
      *(_OWORD *)(v0 + 56) = v29;
      v30 = *(_OWORD *)(v1 + 88);
      *(_OWORD *)(v0 + 72) = *(_OWORD *)(v1 + 72);
      *(_OWORD *)(v0 + 88) = v30;
    }
    v49 = *(_QWORD *)(v1 + 288);
    v50 = *(_QWORD *)(v1 + 296);
    v51 = *(_QWORD *)(v1 + 304);
    v52 = *(_QWORD *)(v1 + 312);
    v53 = *(_QWORD *)(v1 + 320);
    v54 = *(_QWORD *)(v1 + 328);
    v56 = *(_QWORD *)(v1 + 336);
    v55 = *(_QWORD *)(v1 + 344);
    v87 = *(_QWORD *)(v1 + 352);
    v89 = *(_QWORD *)(v1 + 360);
    v91 = *(_QWORD *)(v1 + 368);
    v93 = *(_QWORD *)(v1 + 376);
    v95 = *(_QWORD *)(v1 + 384);
    v97 = *(_QWORD *)(v1 + 392);
    v57 = *(_QWORD *)(v1 + 400);
    v58 = *(_QWORD *)(v1 + 408);
    *(_QWORD *)(v4 - 200) = v57;
    *(_QWORD *)(v4 - 192) = v58;
    v59 = *(_QWORD *)(v1 + 416);
    v60 = *(_QWORD *)(v1 + 424);
    *(_QWORD *)(v4 - 184) = v59;
    *(_QWORD *)(v4 - 176) = v60;
    v61 = *(_QWORD *)(v1 + 432);
    v62 = *(_QWORD *)(v1 + 440);
    *(_QWORD *)(v4 - 168) = v61;
    *(_QWORD *)(v4 - 160) = v62;
    v63 = *(_QWORD *)(v1 + 448);
    v64 = *(_QWORD *)(v1 + 456);
    *(_QWORD *)(v4 - 152) = v63;
    *(_QWORD *)(v4 - 144) = v64;
    v65 = *(_QWORD *)(v1 + 464);
    v66 = *(_QWORD *)(v1 + 472);
    *(_QWORD *)(v4 - 136) = v65;
    *(_QWORD *)(v4 - 128) = v66;
    v84 = v65;
    v85 = v66;
    v82 = v63;
    v83 = v64;
    v80 = v61;
    v81 = v62;
    v67 = v49;
    v68 = v50;
    v69 = v51;
    v70 = v52;
    v71 = v53;
    v72 = v55;
    sub_1AD00FEAC(v49, v50, v51, v52, v53, v54, v56, v55, v87, v89, v91, v93, v95, v97, v57, v58, v59, v60, v80,
      v81,
      v82,
      v83,
      v84,
      v85);
    *(_QWORD *)(v0 + 288) = v67;
    *(_QWORD *)(v0 + 296) = v68;
    *(_QWORD *)(v0 + 304) = v69;
    *(_QWORD *)(v0 + 312) = v70;
    *(_QWORD *)(v0 + 320) = v71;
    *(_QWORD *)(v0 + 328) = v54;
    *(_QWORD *)(v0 + 336) = v56;
    *(_QWORD *)(v0 + 344) = v72;
    *(_QWORD *)(v0 + 352) = v87;
    *(_QWORD *)(v0 + 360) = v89;
    *(_QWORD *)(v0 + 368) = v91;
    *(_QWORD *)(v0 + 376) = v93;
    *(_QWORD *)(v0 + 384) = v95;
    *(_QWORD *)(v0 + 392) = v97;
    *(_QWORD *)(v0 + 400) = *(_QWORD *)(v4 - 200);
    *(_QWORD *)(v0 + 408) = *(_QWORD *)(v4 - 192);
    *(_QWORD *)(v0 + 416) = *(_QWORD *)(v4 - 184);
    *(_QWORD *)(v0 + 424) = *(_QWORD *)(v4 - 176);
    *(_QWORD *)(v0 + 432) = *(_QWORD *)(v4 - 168);
    *(_QWORD *)(v0 + 440) = *(_QWORD *)(v4 - 160);
    *(_QWORD *)(v0 + 448) = *(_QWORD *)(v4 - 152);
    *(_QWORD *)(v0 + 456) = *(_QWORD *)(v4 - 144);
    *(_QWORD *)(v0 + 464) = *(_QWORD *)(v4 - 136);
    *(_QWORD *)(v0 + 472) = *(_QWORD *)(v4 - 128);
  }
  else
  {
    memcpy((void *)(v0 + 8), (const void *)(v1 + 8), 0x1D8uLL);
  }
  v73 = *(_QWORD *)(v1 + 488);
  *(_QWORD *)(v0 + 480) = *(_QWORD *)(v1 + 480);
  *(_QWORD *)(v0 + 488) = v73;
  v74 = (_OWORD *)(v1 + 496);
  v75 = *(_QWORD *)(v1 + 504);
  swift_retain();
  if (v75 == 1)
  {
    *(_OWORD *)(v0 + 496) = *v74;
  }
  else
  {
    *(_QWORD *)(v0 + 496) = *(_QWORD *)v74;
    *(_QWORD *)(v0 + 504) = v75;
    swift_bridgeObjectRetain();
  }
  *(_QWORD *)(v0 + 512) = *(_QWORD *)(v1 + 512);
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for TextMessage.MessageType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_1AD5CB45C(result);
    v2 = (char *)&loc_1AD5E076C + 4 * word_1AD696FDE[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void *initializeWithTake for TextMessage.MessageType(void *a1, const void *a2, uint64_t a3)
{
  char *v6;

  if (swift_getEnumCaseMultiPayload() == 3)
  {
    type metadata accessor for BalloonPlugin.Payload(0);
    v6 = (char *)&loc_1AD5E6E8C + 4 * byte_1AD69704E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  return a1;
}

void *assignWithTake for TextMessage.MessageType(void *a1, const void *a2, uint64_t a3)
{
  char *v6;

  if (a1 != a2)
  {
    sub_1AD5CB45C((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      type metadata accessor for BalloonPlugin.Payload(0);
      v6 = (char *)&loc_1AD5EA2AC + 4 * byte_1AD697092[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

uint64_t sub_1AD5ED650()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BalloonPlugin(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for TextMessage.ScheduleType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD5ED748 + 4 * byte_1AD6970DB[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD5ED77C + 4 * byte_1AD6970D6[v4]))();
}

uint64_t sub_1AD5ED77C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5ED784(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5ED78CLL);
  return result;
}

uint64_t sub_1AD5ED798(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5ED7A0);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD5ED7A4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5ED7AC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for TextMessage.ScheduleType()
{
  return &type metadata for TextMessage.ScheduleType;
}

uint64_t destroy for TextMessage.MessageSummaryInfo(uint64_t a1)
{
  uint64_t result;

  swift_release();
  if (*(_QWORD *)(a1 + 32) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  result = *(_QWORD *)(a1 + 64);
  if (result != 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t initializeWithCopy for TextMessage.MessageSummaryInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;

  *(_WORD *)a1 = *(_WORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = (_OWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  swift_retain();
  if (v6 == 1)
  {
    *(_OWORD *)(a1 + 24) = *v5;
  }
  else
  {
    *(_QWORD *)(a1 + 24) = *(_QWORD *)v5;
    *(_QWORD *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
  }
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = (_OWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  swift_retain();
  if (v9 == 1)
  {
    *(_OWORD *)(a1 + 56) = *v8;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)v8;
    *(_QWORD *)(a1 + 64) = v9;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for TextMessage.MessageSummaryInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 32);
  if (*(_QWORD *)(a1 + 32) == 1)
  {
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
      *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v5 == 1)
  {
    sub_1AD009758(a1 + 24, &qword_1ED2E3198);
LABEL_6:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) != 1)
  {
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(a1 + 56, &qword_1ED2E3198);
    goto LABEL_13;
  }
  if (v7 == 1)
  {
LABEL_13:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    return a1;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithTake for TextMessage.MessageSummaryInfo(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  v4 = (_OWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 32) == 1)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 32);
  if (v5 == 1)
  {
    sub_1AD009758(a1 + 24, &qword_1ED2E3198);
LABEL_4:
    *(_OWORD *)(a1 + 24) = *v4;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 24) = *(_QWORD *)v4;
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v6 = (_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 64) != 1)
  {
    v7 = *(_QWORD *)(a2 + 64);
    if (v7 != 1)
    {
      *(_QWORD *)(a1 + 56) = *v6;
      *(_QWORD *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_1AD009758(a1 + 56, &qword_1ED2E3198);
  }
  *(_OWORD *)(a1 + 56) = *(_OWORD *)v6;
  return a1;
}

uint64_t getEnumTagSinglePayload for TextMessage.MessageSummaryInfo(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 72))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TextMessage.MessageSummaryInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextMessage.MessageSummaryInfo()
{
  return &type metadata for TextMessage.MessageSummaryInfo;
}

unint64_t sub_1AD5EDBB8()
{
  unint64_t result;

  result = qword_1EECDE8D0;
  if (!qword_1EECDE8D0)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for TextMessage.ScheduleType, &type metadata for TextMessage.ScheduleType);
    atomic_store(result, (unint64_t *)&qword_1EECDE8D0);
  }
  return result;
}

uint64_t sub_1AD5EDBFC(__int128 *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *a2;
  v5 = *a1;
  v6 = v2;
  return sub_1AD4ECAA8((uint64_t *)&v5, v3) & 1;
}

uint64_t sub_1AD5EDC34()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD5EDC58(__int128 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;

  v2 = *((_QWORD *)a1 + 2);
  v3 = *(_QWORD *)(v1 + 16);
  v5 = *a1;
  v6 = v2;
  return sub_1AD4ECAA8((uint64_t *)&v5, v3) & 1;
}

uint64_t sub_1AD5EDC90(uint64_t *a1, uint64_t *a2)
{
  return sub_1AD37D990(*a1, a1[1], a1[2], *a2);
}

uint64_t sub_1AD5EDCA8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AD37D990(*a1, a1[1], a1[2], *(_QWORD *)(v1 + 16));
}

_QWORD *sub_1AD5EDCC0(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a1)
    v4 = a2 - a1;
  else
    v4 = 0;
  result = a3(&v6, a1, v4);
  if (!v3)
    return (_QWORD *)v6;
  return result;
}

uint64_t sub_1AD5EDD0C()
{
  void *v0;
  id v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  void *v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  id v12;
  uint64_t v13;
  char *v14;
  char *v15;
  BOOL v16;
  unint64_t v17;
  id v18;
  unint64_t v19;
  id v20;
  void *v21;
  id v23[3];

  v23[2] = *(id *)MEMORY[0x1E0C80C00];
  v23[0] = (id)47;
  v23[1] = (id)0xE100000000000000;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7330);
  sub_1AD00F8EC();
  sub_1AD63B720();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  v1 = objc_msgSend((id)objc_opt_self(), sel_fileHandleForReadingAtPath_, v0);

  if (v1)
  {
    v2 = objc_msgSend(v1, sel_seekToEndOfFile);
    v23[0] = 0;
    if (objc_msgSend(v1, sel_seekToOffset_error_, 0, v23))
    {
      v3 = v23[0];
    }
    else
    {
      v5 = v23[0];
      v6 = (void *)sub_1AD63AE50();

      swift_willThrow();
    }
    v7 = sub_1AD63BB58();
    v9 = v8;
    if (v8 >> 60 != 15)
    {
      v10 = v7;
      LOBYTE(v23[0]) = 12;
      if (Data.hasValidHeader(for:)((BlastDoor::ImageHeader)v23))
      {
        v11 = sub_1AD5EE0B4();
        if ((v11 & 0x80000000) == 0)
        {
          while (1)
          {
            v13 = v11;
            v14 = (char *)objc_msgSend(v1, sel_offsetInFile);
            v15 = &v14[v13];
            if (__CFADD__(v13, v14))
            {
              __break(1u);
LABEL_26:
              __break(1u);
LABEL_27:
              __break(1u);
LABEL_28:
              __break(1u);
            }
            v16 = __CFADD__(v15, 8);
            v17 = (unint64_t)(v15 + 8);
            if (v16)
              goto LABEL_26;
            if (v17 >= (unint64_t)v2)
              goto LABEL_20;
            if (sub_1AD5EE284() != 3)
              break;
            v18 = objc_msgSend(v1, sel_offsetInFile);
            v19 = (unint64_t)v18 + v13;
            if (__CFADD__(v18, v13))
              goto LABEL_27;
            if (v19 >= 0xFFFFFFFFFFFFFFFCLL)
              goto LABEL_28;
            v23[0] = 0;
            if (objc_msgSend(v1, sel_seekToOffset_error_, v19 + 4, v23))
            {
              v12 = v23[0];
            }
            else
            {
              v20 = v23[0];
              v21 = (void *)sub_1AD63AE50();

              swift_willThrow();
            }
            v11 = sub_1AD5EE0B4();
            if ((v11 & 0x80000000) != 0)
              goto LABEL_20;
          }
          sub_1AD004118(v10, v9);
          v4 = 1;
          goto LABEL_22;
        }
      }
LABEL_20:
      sub_1AD004118(v10, v9);
    }
    v4 = 0;
LABEL_22:
    sub_1AD5EDFE8(v1);

    return v4;
  }
  return 0;
}

void sub_1AD5EDFE8(void *a1)
{
  id v1;
  id v2;
  void *v3;
  id v4[2];

  v4[1] = *(id *)MEMORY[0x1E0C80C00];
  v4[0] = 0;
  if (objc_msgSend(a1, sel_closeAndReturnError_, v4))
  {
    v1 = v4[0];
  }
  else
  {
    v2 = v4[0];
    v3 = (void *)sub_1AD63AE50();

    swift_willThrow();
  }
}

uint64_t sub_1AD5EE0B4()
{
  unint64_t v0;

  sub_1AD63BB58();
  if (v0 >> 60 != 15)
    __asm { BR              X10 }
  return 0xFFFFFFFFLL;
}

uint64_t sub_1AD5EE284()
{
  unint64_t v0;

  sub_1AD63BB58();
  if (v0 >> 60 != 15)
    __asm { BR              X10 }
  return 3;
}

uint64_t sub_1AD5EE604(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *(*a4)(uint64_t *__return_ptr, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  result = sub_1AD63ADA8();
  v9 = result;
  if (result)
  {
    result = sub_1AD63ADCC();
    if (__OFSUB__(a1, result))
    {
LABEL_15:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_15;
  }
  v12 = sub_1AD63ADC0();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  result = (uint64_t)sub_1AD5EDCC0(v9, v15, a4);
  if (v4)
    return v16;
  return result;
}

uint64_t sub_1AD5EE6B0(uint64_t a1, unint64_t a2)
{
  uint64_t v4;

  sub_1AD0040A0(a1, a2);
  sub_1AD5EE75C(a1, a2);
  sub_1AD00412C(a1, a2);
  v4 = sub_1AD63B7E0();
  swift_release();
  return v4;
}

uint64_t sub_1AD5EE724@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1AD63B7E0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1AD5EE75C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = sub_1AD63AFDC();
  MEMORY[0x1E0C80A78](v3);
  __asm { BR              X10 }
}

_QWORD *sub_1AD5EE7D8()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  uint64_t v7;

  if (BYTE6(v0))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2688);
    v4 = (_QWORD *)swift_allocObject();
    v6 = _swift_stdlib_malloc_size(v4);
    v4[2] = BYTE6(v0);
    v4[3] = 2 * v6 - 64;
    sub_1AD0040A0(v2, v0);
    v7 = sub_1AD63AF70();
    sub_1AD00412C(v2, v0);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, v1);
    if (v7 != BYTE6(v0))
    {
      __break(1u);
      JUMPOUT(0x1AD5EE8ACLL);
    }
  }
  return v4;
}

uint64_t sub_1AD5EE8C4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1AD63B7E0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1AD5EE8F8(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDE8E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD5EE938()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_1AD63B420();
  __swift_allocate_value_buffer(v0, qword_1EED83C00);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EED83C00);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1D8);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDB1E0);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD648170;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "exportedPCSData";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x1E0D3EF08];
  v9 = sub_1AD63B3FC();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "shareePublicKeyData";
  *((_QWORD *)v11 + 1) = 19;
  v11[16] = 2;
  v10();
  return sub_1AD63B408();
}

uint64_t sub_1AD5EEA88()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_1AD63B294();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 2 || result == 1)
    {
      type metadata accessor for PCSManateeShareInvitation();
      sub_1AD63B2B8();
    }
    v0 = 0;
  }
  return result;
}

uint64_t sub_1AD5EEB34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = sub_1AD5EEBA0(v0);
  if (!v1)
  {
    sub_1AD5EEC3C(v0);
    return sub_1AD63B234();
  }
  return result;
}

uint64_t sub_1AD5EEBA0(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for PCSManateeShareInvitation();
  v3 = a1 + *(int *)(result + 20);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    sub_1AD0040A0(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    sub_1AD63B384();
    return sub_1AD004118(v5, v4);
  }
  return result;
}

uint64_t sub_1AD5EEC3C(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  result = type metadata accessor for PCSManateeShareInvitation();
  v3 = a1 + *(int *)(result + 24);
  v4 = *(_QWORD *)(v3 + 8);
  if (v4 >> 60 != 15)
  {
    v5 = *(_QWORD *)v3;
    sub_1AD0040A0(*(_QWORD *)v3, *(_QWORD *)(v3 + 8));
    sub_1AD63B384();
    return sub_1AD004118(v5, v4);
  }
  return result;
}

double sub_1AD5EECD8@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  uint64_t v5;

  sub_1AD63B240();
  result = 0.0;
  v5 = *(int *)(a1 + 24);
  *(_OWORD *)(a2 + *(int *)(a1 + 20)) = xmmword_1AD67A180;
  *(_OWORD *)(a2 + v5) = xmmword_1AD67A180;
  return result;
}

unint64_t sub_1AD5EED10()
{
  return 0xD000000000000019;
}

uint64_t sub_1AD5EED2C()
{
  return sub_1AD5EEA88();
}

uint64_t sub_1AD5EED40()
{
  return sub_1AD5EEB34();
}

uint64_t sub_1AD5EED54()
{
  sub_1ACFF9724(&qword_1EECDE900, (uint64_t (*)(uint64_t))type metadata accessor for PCSManateeShareInvitation, (uint64_t)&unk_1AD6977E8);
  return sub_1AD63B27C();
}

uint64_t sub_1AD5EEDA4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  if (qword_1EECD1630 != -1)
    swift_once();
  v2 = sub_1AD63B420();
  v3 = __swift_project_value_buffer(v2, (uint64_t)qword_1EED83C00);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_1AD5EEE14()
{
  sub_1ACFF9724((unint64_t *)&qword_1EECDD308, (uint64_t (*)(uint64_t))type metadata accessor for PCSManateeShareInvitation, (uint64_t)&unk_1AD697820);
  return sub_1AD63B354();
}

uint64_t sub_1AD5EEE54()
{
  sub_1ACFF9724((unint64_t *)&qword_1EECDD308, (uint64_t (*)(uint64_t))type metadata accessor for PCSManateeShareInvitation, (uint64_t)&unk_1AD697820);
  return sub_1AD63B360();
}

uint64_t sub_1AD5EEEA8()
{
  return sub_1ACFF9724(&qword_1EECDE8E8, (uint64_t (*)(uint64_t))type metadata accessor for PCSManateeShareInvitation, (uint64_t)&unk_1AD697730);
}

uint64_t type metadata accessor for PCSManateeShareInvitation()
{
  uint64_t result;

  result = qword_1EECDE908;
  if (!qword_1EECDE908)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD5EEF10()
{
  return sub_1ACFF9724((unint64_t *)&qword_1EECDD308, (uint64_t (*)(uint64_t))type metadata accessor for PCSManateeShareInvitation, (uint64_t)&unk_1AD697820);
}

uint64_t sub_1AD5EEF3C()
{
  return sub_1ACFF9724(&qword_1EECDE8F0, (uint64_t (*)(uint64_t))type metadata accessor for PCSManateeShareInvitation, (uint64_t)&unk_1AD697758);
}

uint64_t sub_1AD5EEF68()
{
  return sub_1ACFF9724(&qword_1EECDE8F8, (uint64_t (*)(uint64_t))type metadata accessor for PCSManateeShareInvitation, (uint64_t)&unk_1AD697798);
}

uint64_t sub_1AD5EEF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  char v18;
  char v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  char v28;
  char v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  char *v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  uint64_t v35;

  v4 = sub_1AD63B24C();
  v35 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v34 = (char *)&v34 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v34 - v7;
  v9 = type metadata accessor for PCSManateeShareInvitation();
  v10 = *(int *)(v9 + 20);
  v11 = *(_QWORD *)(a1 + v10);
  v12 = *(_QWORD *)(a1 + v10 + 8);
  v13 = (uint64_t *)(a2 + v10);
  v14 = *v13;
  v15 = v13[1];
  if (v12 >> 60 != 15)
  {
    if (v15 >> 60 != 15)
    {
      sub_1AD00408C(v11, v12);
      sub_1AD00408C(v14, v15);
      sub_1AD3DB778(v11, v12);
      v19 = v18;
      sub_1AD004118(v14, v15);
      sub_1AD004118(v11, v12);
      if ((v19 & 1) == 0)
        goto LABEL_13;
      goto LABEL_7;
    }
LABEL_5:
    sub_1AD00408C(v11, v12);
    sub_1AD00408C(v14, v15);
    sub_1AD004118(v11, v12);
    v16 = v14;
    v17 = v15;
LABEL_12:
    sub_1AD004118(v16, v17);
    goto LABEL_13;
  }
  if (v15 >> 60 != 15)
    goto LABEL_5;
LABEL_7:
  v20 = *(int *)(v9 + 24);
  v21 = *(_QWORD *)(a1 + v20);
  v22 = *(_QWORD *)(a1 + v20 + 8);
  v23 = (uint64_t *)(a2 + v20);
  v24 = *v23;
  v25 = v23[1];
  if (v22 >> 60 == 15)
  {
    if (v25 >> 60 == 15)
      goto LABEL_16;
    goto LABEL_11;
  }
  if (v25 >> 60 == 15)
  {
LABEL_11:
    sub_1AD00408C(v21, v22);
    sub_1AD00408C(v24, v25);
    sub_1AD004118(v21, v22);
    v16 = v24;
    v17 = v25;
    goto LABEL_12;
  }
  sub_1AD00408C(v21, v22);
  sub_1AD00408C(v24, v25);
  sub_1AD3DB778(v21, v22);
  v29 = v28;
  sub_1AD004118(v24, v25);
  sub_1AD004118(v21, v22);
  if ((v29 & 1) != 0)
  {
LABEL_16:
    v30 = v35;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v35 + 16);
    v31(v8, a1, v4);
    v32 = v34;
    v31(v34, a2, v4);
    sub_1ACFF9724(&qword_1EECDAEC8, (uint64_t (*)(uint64_t))MEMORY[0x1E0D3E998], MEMORY[0x1E0D3E9A8]);
    v26 = sub_1AD63B738();
    v33 = *(void (**)(char *, uint64_t))(v30 + 8);
    v33(v32, v4);
    v33(v8, v4);
    return v26 & 1;
  }
LABEL_13:
  v26 = 0;
  return v26 & 1;
}

uint64_t *sub_1AD5EF23C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  unint64_t v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1AD63B24C();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = *(int *)(a3 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = *((_QWORD *)v10 + 1);
    if (v11 >> 60 == 15)
    {
      *(_OWORD *)v9 = *(_OWORD *)v10;
    }
    else
    {
      v13 = *(_QWORD *)v10;
      sub_1AD0040A0(*(_QWORD *)v10, *((_QWORD *)v10 + 1));
      *(_QWORD *)v9 = v13;
      *((_QWORD *)v9 + 1) = v11;
    }
    v14 = *(int *)(a3 + 24);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = *((_QWORD *)v16 + 1);
    if (v17 >> 60 == 15)
    {
      *(_OWORD *)v15 = *(_OWORD *)v16;
    }
    else
    {
      v18 = *(_QWORD *)v16;
      sub_1AD0040A0(*(_QWORD *)v16, *((_QWORD *)v16 + 1));
      *(_QWORD *)v15 = v18;
      *((_QWORD *)v15 + 1) = v17;
    }
  }
  return a1;
}

uint64_t sub_1AD5EF338(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t *)(a2 + v7);
  v10 = v9[1];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)v8 = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_1AD0040A0(*v9, v9[1]);
    *(_QWORD *)v8 = v11;
    *(_QWORD *)(v8 + 8) = v10;
  }
  v12 = *(int *)(a3 + 24);
  v13 = a1 + v12;
  v14 = (uint64_t *)(a2 + v12);
  v15 = v14[1];
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)v13 = *(_OWORD *)v14;
  }
  else
  {
    v16 = *v14;
    sub_1AD0040A0(*v14, v14[1]);
    *(_QWORD *)v13 = v16;
    *(_QWORD *)(v13 + 8) = v15;
  }
  return a1;
}

uint64_t sub_1AD5EF408(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = (uint64_t *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v10 = *(_QWORD *)(a2 + v7 + 8);
  if (*(_QWORD *)(a1 + v7 + 8) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      v11 = *v9;
      sub_1AD0040A0(v11, v10);
      *v8 = v11;
      v8[1] = v10;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v10 >> 60 == 15)
  {
    sub_1AD007EC0((uint64_t)v8);
LABEL_6:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_8;
  }
  v12 = *v9;
  sub_1AD0040A0(v12, v10);
  v13 = *v8;
  v14 = v8[1];
  *v8 = v12;
  v8[1] = v10;
  sub_1AD00412C(v13, v14);
LABEL_8:
  v15 = *(int *)(a3 + 24);
  v16 = (uint64_t *)(a1 + v15);
  v17 = (uint64_t *)(a2 + v15);
  v18 = *(_QWORD *)(a2 + v15 + 8);
  if (*(_QWORD *)(a1 + v15 + 8) >> 60 != 15)
  {
    if (v18 >> 60 != 15)
    {
      v20 = *v17;
      sub_1AD0040A0(v20, v18);
      v21 = *v16;
      v22 = v16[1];
      *v16 = v20;
      v16[1] = v18;
      sub_1AD00412C(v21, v22);
      return a1;
    }
    sub_1AD007EC0((uint64_t)v16);
    goto LABEL_13;
  }
  if (v18 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)v16 = *(_OWORD *)v17;
    return a1;
  }
  v19 = *v17;
  sub_1AD0040A0(v19, v18);
  *v16 = v19;
  v16[1] = v18;
  return a1;
}

uint64_t sub_1AD5EF560(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;

  v6 = sub_1AD63B24C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = *(_QWORD *)(a1 + v7 + 8);
  if (v10 >> 60 == 15)
    goto LABEL_4;
  v11 = *(_QWORD *)(v9 + 8);
  if (v11 >> 60 == 15)
  {
    sub_1AD007EC0(v8);
LABEL_4:
    *(_OWORD *)v8 = *(_OWORD *)v9;
    goto LABEL_6;
  }
  v12 = *(_QWORD *)v8;
  *(_QWORD *)v8 = *(_QWORD *)v9;
  *(_QWORD *)(v8 + 8) = v11;
  sub_1AD00412C(v12, v10);
LABEL_6:
  v13 = *(int *)(a3 + 24);
  v14 = (uint64_t *)(a1 + v13);
  v15 = (uint64_t *)(a2 + v13);
  v16 = *(_QWORD *)(a1 + v13 + 8);
  if (v16 >> 60 != 15)
  {
    v17 = v15[1];
    if (v17 >> 60 != 15)
    {
      v18 = *v14;
      *v14 = *v15;
      v14[1] = v17;
      sub_1AD00412C(v18, v16);
      return a1;
    }
    sub_1AD007EC0((uint64_t)v14);
  }
  *(_OWORD *)v14 = *(_OWORD *)v15;
  return a1;
}

uint64_t sub_1AD5EF658()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5EF664(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  BOOL v10;
  unsigned int v11;

  v6 = sub_1AD63B24C();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8) >> 60;
  v10 = ((4 * (_DWORD)v9) & 0xC) == 0;
  v11 = ((4 * v9) & 0xC | (v9 >> 2)) ^ 0xF;
  if (v10)
    return 0;
  else
    return v11;
}

uint64_t sub_1AD5EF6EC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5EF6F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;

  result = sub_1AD63B24C();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  v10 = (_QWORD *)(a1 + *(int *)(a4 + 20));
  *v10 = 0;
  v10[1] = (unint64_t)((~(_DWORD)a2 >> 2) & 3 | (4 * ~(_DWORD)a2)) << 60;
  return result;
}

uint64_t sub_1AD5EF780()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63B24C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

id sub_1AD5EF7F4()
{
  uint64_t v0;
  objc_class *v1;
  char *v2;
  objc_super v4;

  v1 = (objc_class *)type metadata accessor for _ObjCMachImageWrapper();
  v2 = (char *)objc_allocWithZone(v1);
  *(_QWORD *)&v2[OBJC_IVAR___BlastDoorMachImage_image] = v0;
  v4.receiver = v2;
  v4.super_class = v1;
  swift_retain();
  return objc_msgSendSuper2(&v4, sel_init);
}

uint64_t type metadata accessor for _ObjCMachImageWrapper()
{
  return objc_opt_self();
}

CGImageRef sub_1AD5EF89C()
{
  return sub_1AD59DE78();
}

id sub_1AD5EF9C0()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void sub_1AD5EF9E0()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1AD5EFA38()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_1AD5EFA7C()
{
  uint64_t *v0;
  uint64_t v1;
  objc_class *v2;
  char *v3;
  objc_super v5;

  v1 = *v0;
  v2 = (objc_class *)type metadata accessor for _ObjCMachImageWrapper();
  v3 = (char *)objc_allocWithZone(v2);
  *(_QWORD *)&v3[OBJC_IVAR___BlastDoorMachImage_image] = v1;
  v5.receiver = v3;
  v5.super_class = v2;
  swift_retain();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t sub_1AD5EFAD8()
{
  return swift_lookUpClassMethod();
}

uint64_t RCSFileInfo.$fileSize.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 16);
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_BYTE *)(v1 + 32);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 8);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 RCSFileInfo.$fileSize.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  *(__n128 *)(v1 + 8) = *a1;
  *(_QWORD *)(v1 + 24) = v3;
  *(_BYTE *)(v1 + 32) = v4;
  return result;
}

uint64_t RCSFileInfo.$fileName.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[5];
  v2 = v1[6];
  v4 = v1[7];
  v5 = v1[8];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 RCSFileInfo.$fileName.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 40) = *a1;
  *(_QWORD *)(v1 + 56) = v3;
  *(_QWORD *)(v1 + 64) = v4;
  return result;
}

uint64_t RCSFileInfo.$contentType.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[10];
  v4 = v1[11];
  v3 = v1[12];
  *a1 = v1[9];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 RCSFileInfo.$contentType.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 72) = *a1;
  *(_QWORD *)(v1 + 88) = v3;
  *(_QWORD *)(v1 + 96) = v4;
  return result;
}

uint64_t RCSFileInfo.$url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RCSFileInfo();
  return sub_1ACFF64C0(v1 + *(int *)(v3 + 36), a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t type metadata accessor for RCSFileInfo()
{
  uint64_t result;

  result = qword_1EECDE930;
  if (!qword_1EECDE930)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t RCSFileInfo.$url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v8;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACFF64C0(a1, (uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  v6 = type metadata accessor for RCSFileInfo();
  sub_1AD326FE8((uint64_t)v5, v1 + *(int *)(v6 + 36));
  return sub_1AD009758(a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t RCSFileInfo.$playingLengthInSeconds.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for RCSFileInfo() + 44));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = (_BYTE)v3;
  return swift_retain();
}

__n128 RCSFileInfo.$playingLengthInSeconds.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 *v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  v6 = (__n128 *)(v1 + *(int *)(type metadata accessor for RCSFileInfo() + 44));
  swift_release();
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v3;
  v6[1].n128_u8[8] = v4;
  v6[1].n128_u8[9] = v5;
  return result;
}

uint64_t RCSFileInfo.fileSize.getter()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
    return *(_QWORD *)(v0 + 24);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t RCSFileInfo.fileName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 64) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 56);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t RCSFileInfo.contentType.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 96))
  {
    v1 = *(_QWORD *)(v0 + 88);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t RCSFileInfo.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v1 + *(int *)(type metadata accessor for RCSFileInfo() + 36);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(v6 + *(int *)(v7 + 28), (uint64_t)v5, &qword_1ED2E1A40);
  v8 = sub_1AD63AF28();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v5, 1, v8) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a1, v5, v8);
  sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t RCSFileInfo.playingLengthInSeconds.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for RCSFileInfo() + 44);
  if ((*(_BYTE *)(v1 + 25) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

BlastDoor::RCSFileInfo::FileType_optional __swiftcall RCSFileInfo.FileType.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (BlastDoor::RCSFileInfo::FileType_optional)sub_1AD333AC4(v1);
}

uint64_t RCSFileInfo.FileType.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x69616E626D756874;
  else
    return 1701603686;
}

uint64_t sub_1AD5F0144(char *a1, char *a2)
{
  return sub_1AD435FAC(*a1, *a2);
}

uint64_t sub_1AD5F0150()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD5F01CC()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5F0224()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

BlastDoor::RCSFileInfo::FileType_optional sub_1AD5F029C(Swift::String *a1)
{
  return RCSFileInfo.FileType.init(rawValue:)(*a1);
}

void sub_1AD5F02A8(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 1701603686;
  if (*v1)
    v2 = 0x69616E626D756874;
  v3 = 0xE400000000000000;
  if (*v1)
    v3 = 0xE90000000000006CLL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AD5F02E4()
{
  sub_1AD5F29CC();
  return sub_1AD63B924();
}

uint64_t sub_1AD5F0340()
{
  sub_1AD5F29CC();
  return sub_1AD63B8C4();
}

BlastDoor::RCSFileInfo::FileDisposition_optional __swiftcall RCSFileInfo.FileDisposition.init(rawValue:)(Swift::String rawValue)
{
  char *v1;

  return (BlastDoor::RCSFileInfo::FileDisposition_optional)sub_1AD333AC4(v1);
}

uint64_t RCSFileInfo.FileDisposition.rawValue.getter()
{
  _BYTE *v0;

  if (*v0)
    return 0x656D686361747461;
  else
    return 0x7265646E6572;
}

uint64_t sub_1AD5F03D4(char *a1, char *a2)
{
  return sub_1AD43604C(*a1, *a2);
}

uint64_t sub_1AD5F03E0()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD5F0460()
{
  sub_1AD63B7F8();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5F04BC()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  swift_bridgeObjectRelease();
  return sub_1AD63C4F4();
}

BlastDoor::RCSFileInfo::FileDisposition_optional sub_1AD5F0538(Swift::String *a1)
{
  return RCSFileInfo.FileDisposition.init(rawValue:)(*a1);
}

void sub_1AD5F0544(uint64_t *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = 0x7265646E6572;
  if (*v1)
    v2 = 0x656D686361747461;
  v3 = 0xE600000000000000;
  if (*v1)
    v3 = 0xEA0000000000746ELL;
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1AD5F0584()
{
  sub_1AD5F2988();
  return sub_1AD63B924();
}

uint64_t sub_1AD5F05E0()
{
  sub_1AD5F2988();
  return sub_1AD63B8C4();
}

void RCSFileInfo.fileType.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *RCSFileInfo.fileType.setter(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*RCSFileInfo.fileType.modify())()
{
  return nullsub_1;
}

void RCSFileInfo.fileDisposition.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *RCSFileInfo.fileDisposition.setter(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*RCSFileInfo.fileDisposition.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD5F067C@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  if ((*(_BYTE *)(result + 32) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(result + 24);
  }
  return result;
}

uint64_t RCSFileInfo.fileSize.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))(v1 + 8);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 24) = a1;
    *(_BYTE *)(v1 + 32) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*RCSFileInfo.fileSize.modify(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 32) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 24);
    return sub_1AD5F0820;
  }
  return result;
}

uint64_t sub_1AD5F0820(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v2 = *a1;
  v1 = a1[1];
  v3 = *(uint64_t (**)(uint64_t *))(v1 + 8);
  v6 = *a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 24) = v2;
    *(_BYTE *)(v1 + 32) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*RCSFileInfo.$fileSize.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = *(_BYTE *)(v1 + 32);
  *v3 = *(_QWORD *)(v1 + 8);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD5F094C;
}

void sub_1AD5F094C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v2 = *a1;
  v3 = (*a1)[4];
  v5 = **a1;
  v4 = (*a1)[1];
  v6 = (*a1)[2];
  v7 = *((_BYTE *)*a1 + 24);
  if ((a2 & 1) != 0)
  {
    swift_retain();
    swift_release();
    *(_QWORD *)(v3 + 8) = v5;
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v6;
    *(_BYTE *)(v3 + 32) = v7;
    swift_release();
  }
  else
  {
    swift_release();
    *(_QWORD *)(v3 + 8) = v5;
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v6;
    *(_BYTE *)(v3 + 32) = v7;
  }
  free(v2);
}

uint64_t RCSFileInfo.fileName.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*RCSFileInfo.fileName.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 64);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 56);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD597D50;
  }
  return result;
}

void (*RCSFileInfo.$fileName.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[5];
  v4 = v1[6];
  v6 = v1[7];
  v7 = v1[8];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD597E8C;
}

uint64_t sub_1AD5F0AE8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 96);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 88);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t RCSFileInfo.contentType.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*RCSFileInfo.contentType.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 96);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 88);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD5F0BF8;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5F0BF8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5F0C5C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[9] = v4;
  a2[10] = v3;
  a2[11] = v6;
  a2[12] = v5;
  return result;
}

void (*RCSFileInfo.$contentType.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[10];
  v6 = v1[11];
  v5 = v1[12];
  *v3 = v1[9];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD5F0D2C;
}

void sub_1AD5F0D2C(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[9] = v6;
    v4[10] = v5;
    v4[11] = v7;
    v4[12] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[9] = v6;
    v4[10] = v5;
    v4[11] = v7;
    v4[12] = v3;
  }
  free(v2);
}

uint64_t sub_1AD5F0DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = a1 + *(int *)(type metadata accessor for RCSFileInfo() + 36);
  v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(v7 + *(int *)(v8 + 28), (uint64_t)v6, &qword_1ED2E1A40);
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v6, v9);
  sub_1AD009758((uint64_t)v6, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD5F0F00(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  void (*v9)(char *, uint64_t, uint64_t);
  uint64_t v11;

  v2 = sub_1AD63AF28();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v11 - v7;
  v9 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
  v9((char *)&v11 - v7, a1, v2);
  v9(v6, (uint64_t)v8, v2);
  type metadata accessor for RCSFileInfo();
  sub_1AD003344((uint64_t)v6);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
}

uint64_t RCSFileInfo.url.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t (**v8)(char *);
  uint64_t v9;
  void (*v10)(char *, uint64_t);
  uint64_t result;
  _QWORD *v12;
  uint64_t v13;

  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, a1, v3);
  v8 = (uint64_t (**)(char *))(v1 + *(int *)(type metadata accessor for RCSFileInfo() + 36));
  if (((*v8)(v6) & 1) != 0)
  {
    v9 = (uint64_t)v8 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    sub_1AD009758(v9, &qword_1ED2E1A40);
    v7((char *)v9, (uint64_t)v6, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
    v10 = *(void (**)(char *, uint64_t))(v4 + 8);
    v10(v6, v3);
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(a1, v3);
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v12 = 0x6E776F6E6B6E753CLL;
    v12[1] = 0xE90000000000003ELL;
    v12[2] = 0xD00000000000001CLL;
    v12[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*RCSFileInfo.url.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*result)(uint64_t *, char);

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_1AD63AF28();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(type metadata accessor for RCSFileInfo() + 36);
  *((_DWORD *)v3 + 12) = v10;
  v11 = v1 + v10;
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  *((_DWORD *)v3 + 13) = v12;
  sub_1ACFF64C0(v11 + v12, (uint64_t)v5, &qword_1ED2E1A40);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
    result = (void (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    return sub_1AD329A38;
  }
  return result;
}

uint64_t sub_1AD5F12D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v12 - v8;
  sub_1ACFF64C0(a1, (uint64_t)&v12 - v8, (uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0((uint64_t)v9, (uint64_t)v7, (uint64_t *)&unk_1ED2E1A30);
  v10 = type metadata accessor for RCSFileInfo();
  sub_1AD326FE8((uint64_t)v7, a2 + *(int *)(v10 + 36));
  return sub_1AD009758((uint64_t)v9, (uint64_t *)&unk_1ED2E1A30);
}

void (*RCSFileInfo.$url.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) - 8) + 64);
  v3[1] = malloc(v4);
  v3[2] = malloc(v4);
  v5 = malloc(v4);
  v3[3] = v5;
  v6 = *(int *)(type metadata accessor for RCSFileInfo() + 36);
  *((_DWORD *)v3 + 8) = v6;
  sub_1ACFF64C0(v1 + v6, (uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  return sub_1AD329DAC;
}

uint64_t RCSFileInfo.untilDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RCSFileInfo() + 40);
  v4 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RCSFileInfo.untilDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RCSFileInfo() + 40);
  v4 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RCSFileInfo.untilDate.modify())(_QWORD)
{
  type metadata accessor for RCSFileInfo();
  return nullsub_1;
}

uint64_t sub_1AD5F1504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = type metadata accessor for RCSFileInfo();
  v5 = a1 + *(int *)(result + 44);
  if ((*(_BYTE *)(v5 + 25) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_BYTE *)(v5 + 24);
    *(_QWORD *)a2 = *(_QWORD *)(v5 + 16);
    *(_BYTE *)(a2 + 8) = v6 & 1;
  }
  return result;
}

uint64_t RCSFileInfo.playingLengthInSeconds.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  char v10;

  v4 = a2 & 1;
  v5 = v2 + *(int *)(type metadata accessor for RCSFileInfo() + 44);
  v6 = *(uint64_t (**)(uint64_t *))v5;
  v9 = a1;
  v10 = v4;
  result = v6(&v9);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = v4;
    *(_BYTE *)(v5 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v8 = 0x6E776F6E6B6E753CLL;
    v8[1] = 0xE90000000000003ELL;
    v8[2] = 0xD00000000000001CLL;
    v8[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*RCSFileInfo.playingLengthInSeconds.modify(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for RCSFileInfo() + 44);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_BYTE *)(v4 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_BYTE *)(a1 + 8) = v5 & 1;
    return sub_1AD0132BC;
  }
  return result;
}

uint64_t sub_1AD5F1718@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for RCSFileInfo() + 44));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD5F1768(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *((_BYTE *)a1 + 25);
  v7 = a2 + *(int *)(type metadata accessor for RCSFileInfo() + 44);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v2;
  *(_QWORD *)(v7 + 16) = v4;
  *(_BYTE *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 25) = v6;
  return result;
}

void (*RCSFileInfo.$playingLengthInSeconds.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for RCSFileInfo() + 44);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  LOBYTE(v5) = *((_BYTE *)v5 + 25);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = v9;
  *((_BYTE *)v3 + 25) = (_BYTE)v5;
  swift_retain();
  return sub_1AD013594;
}

unint64_t sub_1AD5F1864()
{
  unint64_t result;

  result = qword_1EECDE920;
  if (!qword_1EECDE920)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for RCSFileInfo.FileType, &type metadata for RCSFileInfo.FileType);
    atomic_store(result, (unint64_t *)&qword_1EECDE920);
  }
  return result;
}

unint64_t sub_1AD5F18AC()
{
  unint64_t result;

  result = qword_1EECDE928;
  if (!qword_1EECDE928)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for RCSFileInfo.FileDisposition, &type metadata for RCSFileInfo.FileDisposition);
    atomic_store(result, (unint64_t *)&qword_1EECDE928);
  }
  return result;
}

uint64_t sub_1AD5F18F0(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD5F193C(&qword_1EECD41F0, (uint64_t)&protocol conformance descriptor for RCSFileInfo);
  result = sub_1AD5F193C(&qword_1EECD4208, (uint64_t)&protocol conformance descriptor for RCSFileInfo);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD5F193C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for RCSFileInfo();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD5F1980(uint64_t *a1)
{
  return sub_1AD00387C(*a1);
}

uint64_t sub_1AD5F19A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 32);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD5F19C4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v3;
  *(_QWORD *)(a2 + 24) = v5;
  *(_BYTE *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_1AD5F1A20(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD5F1A5C@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[6];
  v3 = a1[7];
  v4 = a1[8];
  *a2 = a1[5];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t sub_1AD5F1A9C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD5F1AD8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[9];
  v3 = a1[10];
  v5 = a1[11];
  v4 = a1[12];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD5F1B14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  v4 = type metadata accessor for RCSFileInfo();
  return sub_1ACFF64C0(a1 + *(int *)(v4 + 36), a2, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t sub_1AD5F1B5C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  type metadata accessor for RCSFileInfo();
  return sub_1AD003180(v1, v2);
}

_BYTE *initializeBufferWithCopyOfBuffer for RCSFileInfo(_BYTE *a1, uint64_t *a2, int *a3)
{
  _BYTE *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  const void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_BYTE *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    a1[1] = *((_BYTE *)a2 + 1);
    v7 = a2[2];
    *((_QWORD *)v4 + 1) = a2[1];
    *((_QWORD *)v4 + 2) = v7;
    *((_QWORD *)v4 + 3) = a2[3];
    v4[32] = *((_BYTE *)a2 + 32);
    v8 = a2[6];
    *((_QWORD *)v4 + 5) = a2[5];
    *((_QWORD *)v4 + 6) = v8;
    v9 = a2 + 7;
    v10 = a2[8];
    swift_retain();
    swift_retain();
    if (v10 == 1)
    {
      *(_OWORD *)(v4 + 56) = *v9;
    }
    else
    {
      *((_QWORD *)v4 + 7) = *(_QWORD *)v9;
      *((_QWORD *)v4 + 8) = v10;
      swift_bridgeObjectRetain();
    }
    v12 = a2[10];
    *((_QWORD *)v4 + 9) = a2[9];
    *((_QWORD *)v4 + 10) = v12;
    v13 = a2[12];
    *((_QWORD *)v4 + 11) = a2[11];
    *((_QWORD *)v4 + 12) = v13;
    v14 = a3[9];
    v15 = &v4[v14];
    v16 = (uint64_t)a2 + v14;
    v17 = *(uint64_t *)((char *)a2 + v14 + 8);
    *v15 = *(uint64_t *)((char *)a2 + v14);
    v15[1] = v17;
    swift_retain();
    swift_bridgeObjectRetain();
    swift_retain();
    v18 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    v19 = (char *)v15 + v18;
    v20 = (const void *)(v16 + v18);
    v21 = sub_1AD63AF28();
    v22 = *(_QWORD *)(v21 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v22 + 48))(v20, 1, v21))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, const void *, uint64_t))(v22 + 16))(v19, v20, v21);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v22 + 56))(v19, 0, 1, v21);
    }
    v24 = a3[10];
    v25 = &v4[v24];
    v26 = (uint64_t)a2 + v24;
    v27 = sub_1AD63B03C();
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(v25, v26, v27);
    v28 = a3[11];
    v29 = &v4[v28];
    v30 = (uint64_t)a2 + v28;
    v31 = *(_QWORD *)(v30 + 8);
    *(_QWORD *)v29 = *(_QWORD *)v30;
    *((_QWORD *)v29 + 1) = v31;
    *((_QWORD *)v29 + 2) = *(_QWORD *)(v30 + 16);
    *((_WORD *)v29 + 12) = *(_WORD *)(v30 + 24);
  }
  swift_retain();
  return v4;
}

uint64_t destroy for RCSFileInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_release();
  swift_release();
  if (*(_QWORD *)(a1 + 64) != 1)
    swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 36);
  swift_release();
  v5 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6))
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v5, v6);
  v8 = a1 + *(int *)(a2 + 40);
  v9 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  return swift_release();
}

uint64_t initializeWithCopy for RCSFileInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  const void *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v7 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = (_OWORD *)(a2 + 56);
  v9 = *(_QWORD *)(a2 + 64);
  swift_retain();
  swift_retain();
  if (v9 == 1)
  {
    *(_OWORD *)(a1 + 56) = *v8;
  }
  else
  {
    *(_QWORD *)(a1 + 56) = *(_QWORD *)v8;
    *(_QWORD *)(a1 + 64) = v9;
    swift_bridgeObjectRetain();
  }
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  v11 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v11;
  v12 = a3[9];
  v13 = (_QWORD *)(a1 + v12);
  v14 = a2 + v12;
  v15 = *(_QWORD *)(a2 + v12 + 8);
  *v13 = *(_QWORD *)(a2 + v12);
  v13[1] = v15;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  v16 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v17 = (char *)v13 + v16;
  v18 = (const void *)(v14 + v16);
  v19 = sub_1AD63AF28();
  v20 = *(_QWORD *)(v19 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v20 + 16))(v17, v18, v19);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
  }
  v22 = a3[10];
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  v26 = a3[11];
  v27 = a1 + v26;
  v28 = a2 + v26;
  v29 = *(_QWORD *)(v28 + 8);
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_QWORD *)(v27 + 8) = v29;
  *(_QWORD *)(v27 + 16) = *(_QWORD *)(v28 + 16);
  *(_WORD *)(v27 + 24) = *(_WORD *)(v28 + 24);
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for RCSFileInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(char *, uint64_t, uint64_t);
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_retain();
  swift_release();
  v7 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v7;
  v8 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v8;
  swift_retain();
  swift_release();
  v9 = *(_QWORD *)(a2 + 64);
  if (*(_QWORD *)(a1 + 64) == 1)
  {
    if (v9 != 1)
    {
      *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
      *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 == 1)
  {
    sub_1AD009758(a1 + 56, &qword_1ED2E3198);
LABEL_6:
    *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v11 = a3[9];
  v12 = (_QWORD *)(a1 + v11);
  v13 = a2 + v11;
  v14 = *(_QWORD *)(a2 + v11 + 8);
  *v12 = *(_QWORD *)(a2 + v11);
  v12[1] = v14;
  swift_retain();
  swift_release();
  v15 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v16 = (char *)v12 + v15;
  v17 = (char *)(v13 + v15);
  v18 = sub_1AD63AF28();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
  v21 = v20(v16, 1, v18);
  v22 = v20(v17, 1, v18);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 24))(v16, v17, v18);
      goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v19 + 8))(v16, v18);
    goto LABEL_13;
  }
  if (v22)
  {
LABEL_13:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_14;
  }
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v16, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v16, 0, 1, v18);
LABEL_14:
  v24 = a3[10];
  v25 = a1 + v24;
  v26 = a2 + v24;
  v27 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 24))(v25, v26, v27);
  v28 = a3[11];
  v29 = a1 + v28;
  v30 = a2 + v28;
  v31 = *(_QWORD *)(a2 + v28 + 8);
  *(_QWORD *)v29 = *(_QWORD *)(a2 + v28);
  *(_QWORD *)(v29 + 8) = v31;
  swift_retain();
  swift_release();
  v32 = *(_QWORD *)(v30 + 16);
  *(_WORD *)(v29 + 24) = *(_WORD *)(v30 + 24);
  *(_QWORD *)(v29 + 16) = v32;
  return a1;
}

uint64_t initializeWithTake for RCSFileInfo(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  const void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  _OWORD *v21;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v6 = a3[9];
  v7 = a1 + v6;
  v8 = a2 + v6;
  *(_OWORD *)(a1 + v6) = *(_OWORD *)(a2 + v6);
  v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v10 = (void *)(v7 + v9);
  v11 = (const void *)(v8 + v9);
  v12 = sub_1AD63AF28();
  v13 = *(_QWORD *)(v12 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v13 + 32))(v10, v11, v12);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  }
  v15 = a3[10];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  v19 = a3[11];
  v20 = (_OWORD *)(a1 + v19);
  v21 = (_OWORD *)(a2 + v19);
  *v20 = *v21;
  *(_OWORD *)((char *)v20 + 10) = *(_OWORD *)((char *)v21 + 10);
  return a1;
}

uint64_t assignWithTake for RCSFileInfo(uint64_t a1, uint64_t a2, int *a3)
{
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(void *, uint64_t, uint64_t);
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_release();
  v6 = (_OWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 64) == 1)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 64);
  if (v7 == 1)
  {
    sub_1AD009758(a1 + 56, &qword_1ED2E3198);
LABEL_4:
    *(_OWORD *)(a1 + 56) = *v6;
    goto LABEL_6;
  }
  *(_QWORD *)(a1 + 56) = *(_QWORD *)v6;
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
LABEL_6:
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  v9 = a3[9];
  v10 = a1 + v9;
  v11 = a2 + v9;
  *(_OWORD *)(a1 + v9) = *(_OWORD *)(a2 + v9);
  swift_release();
  v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v13 = (void *)(v10 + v12);
  v14 = (void *)(v11 + v12);
  v15 = sub_1AD63AF28();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v16 + 48);
  v18 = v17(v13, 1, v15);
  v19 = v17(v14, 1, v15);
  if (!v18)
  {
    if (!v19)
    {
      (*(void (**)(void *, void *, uint64_t))(v16 + 40))(v13, v14, v15);
      goto LABEL_12;
    }
    (*(void (**)(void *, uint64_t))(v16 + 8))(v13, v15);
    goto LABEL_11;
  }
  if (v19)
  {
LABEL_11:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_12;
  }
  (*(void (**)(void *, void *, uint64_t))(v16 + 32))(v13, v14, v15);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
LABEL_12:
  v21 = a3[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  v25 = a3[11];
  v26 = a1 + v25;
  v27 = a2 + v25;
  *(_OWORD *)(a1 + v25) = *(_OWORD *)v27;
  swift_release();
  *(_QWORD *)(v26 + 16) = *(_QWORD *)(v27 + 16);
  *(_WORD *)(v26 + 24) = *(_WORD *)(v27 + 24);
  return a1;
}

uint64_t getEnumTagSinglePayload for RCSFileInfo()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5F26A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 36);
    }
    else
    {
      v10 = sub_1AD63B03C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(a1 + v11, a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for RCSFileInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5F2750(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 36);
    }
    else
    {
      v10 = sub_1AD63B03C();
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 40);
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(v5 + v11, a2, a2, v10);
  }
  return result;
}

void sub_1AD5F27F0()
{
  unint64_t v0;
  unint64_t v1;

  sub_1AD32DF60(319);
  if (v0 <= 0x3F)
  {
    sub_1AD63B03C();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

ValueMetadata *type metadata accessor for RCSFileInfo.FileType()
{
  return &type metadata for RCSFileInfo.FileType;
}

uint64_t _s9BlastDoor11RCSFileInfoV8FileTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD5F2908 + 4 * byte_1AD69793D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD5F293C + 4 * byte_1AD697938[v4]))();
}

uint64_t sub_1AD5F293C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F2944(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5F294CLL);
  return result;
}

uint64_t sub_1AD5F2958(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5F2960);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD5F2964(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F296C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RCSFileInfo.FileDisposition()
{
  return &type metadata for RCSFileInfo.FileDisposition;
}

unint64_t sub_1AD5F2988()
{
  unint64_t result;

  result = qword_1EECDE940;
  if (!qword_1EECDE940)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for RCSFileInfo.FileDisposition, &type metadata for RCSFileInfo.FileDisposition);
    atomic_store(result, (unint64_t *)&qword_1EECDE940);
  }
  return result;
}

unint64_t sub_1AD5F29CC()
{
  unint64_t result;

  result = qword_1EECDE948;
  if (!qword_1EECDE948)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for RCSFileInfo.FileType, &type metadata for RCSFileInfo.FileType);
    atomic_store(result, (unint64_t *)&qword_1EECDE948);
  }
  return result;
}

uint64_t sub_1AD5F2A10()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1AD5F2A98();
  v1 = v0;
  v3 = v2;
  v4 = sub_1AD63AFA0();
  sub_1AD00412C(v1, v3);
  return v4;
}

uint64_t sub_1AD5F2A54()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  sub_1AD5F2A98();
  v1 = v0;
  v3 = v2;
  v4 = sub_1AD63AFA0();
  sub_1AD00412C(v1, v3);
  return v4;
}

void sub_1AD5F2A98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  _QWORD v16[12];

  v1 = type metadata accessor for PersistenceEvent(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v16[1] = (char *)v16 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v16[3] = (char *)v16 - v4;
  v5 = type metadata accessor for MembershipEvent(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  MEMORY[0x1E0C80A78](v6);
  v16[2] = (char *)v16 - v7;
  v8 = type metadata accessor for MentionEvent(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  MEMORY[0x1E0C80A78](v9);
  v10 = type metadata accessor for ChangeEvent(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  MEMORY[0x1E0C80A78](v11);
  v12 = type metadata accessor for CollaborationHighlightEvent(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v16 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36F8]), sel_initRequiringSecureCoding_, 1);
  sub_1AD0D3D2C(v0, (uint64_t)v14, type metadata accessor for CollaborationHighlightEvent);
  v15 = (char *)&loc_1AD5F2C90 + *((int *)qword_1AD5F3178 + swift_getEnumCaseMultiPayload());
  __asm { BR              X10 }
}

uint64_t sub_1AD5F2CA0()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  objc_class *v6;
  void *v7;
  id v8;
  id v9;
  id v10;
  uint64_t v11;

  sub_1AD2A5214(v0, v2, type metadata accessor for ChangeEvent);
  v5 = (void *)sub_1AD63B744();
  v6 = (objc_class *)type metadata accessor for ChangeEventSecureCoding(0);
  v7 = v1;
  objc_msgSend(v1, sel_setClassName_forClass_, v5, swift_getObjCClassFromMetadata());

  sub_1AD0D3D2C(v2, v3, type metadata accessor for ChangeEvent);
  v8 = objc_allocWithZone(v6);
  sub_1AD0D3D2C(v3, (uint64_t)v8 + OBJC_IVAR____TtC9BlastDoor23ChangeEventSecureCoding_changeEvent, type metadata accessor for ChangeEvent);
  *(_QWORD *)(v4 - 144) = v8;
  *(_QWORD *)(v4 - 136) = v6;
  v9 = objc_msgSendSuper2((objc_super *)(v4 - 144), sel_init);
  sub_1AD066230(v3, type metadata accessor for ChangeEvent);
  objc_msgSend(v1, sel_encodeObject_forKey_, v9, *MEMORY[0x1E0CB2CD0]);

  v10 = objc_msgSend(v1, sel_encodedData);
  v11 = sub_1AD63AFB8();

  sub_1AD066230(v2, type metadata accessor for ChangeEvent);
  return v11;
}

uint64_t sub_1AD5F318C()
{
  swift_beginAccess();
  return byte_1EECDE950;
}

uint64_t sub_1AD5F320C(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EECDE950 = a1;
  return result;
}

uint64_t (*sub_1AD5F3294())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_1AD5F32D4@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD5F3B04(&OBJC_IVAR____TtC9BlastDoor23ChangeEventSecureCoding_changeEvent, type metadata accessor for ChangeEvent, a1);
}

uint64_t sub_1AD5F32E8(uint64_t a1)
{
  return sub_1AD5F3B74(a1, &OBJC_IVAR____TtC9BlastDoor23ChangeEventSecureCoding_changeEvent, type metadata accessor for ChangeEvent);
}

uint64_t (*sub_1AD5F32FC())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

id sub_1AD5F3340(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_1AD5F3370(a1);
}

id sub_1AD5F3370(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  void *v17;
  id v18;
  id v19;
  char v20;
  char *v21;
  uint64_t v22;
  objc_class *v23;
  uint64_t v25;
  id v26;
  objc_super v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD32F2CC(0, (unint64_t *)&unk_1EECDE960);
  v10 = v1;
  v11 = (void *)sub_1AD63BC18();
  if (!v11)
  {

LABEL_7:
    type metadata accessor for ChangeEventSecureCoding(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  v12 = v11;
  v26 = a1;
  v13 = objc_msgSend(v11, sel_absoluteString);
  if (v13)
  {
    v14 = v13;
    sub_1AD63B768();

  }
  sub_1AD63AF04();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {

    sub_1AD0D0888((uint64_t)v5);
    goto LABEL_7;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16(v9, v5, v6);
  v17 = (void *)sub_1AD63B744();
  v18 = v26;
  v19 = objc_msgSend(v26, sel_decodeIntegerForKey_, v17);

  if (v19 == (id)2)
    v20 = 2;
  else
    v20 = v19 == (id)1;
  v21 = &v10[OBJC_IVAR____TtC9BlastDoor23ChangeEventSecureCoding_changeEvent];
  v22 = type metadata accessor for ChangeEvent(0);
  v16(&v21[*(int *)(v22 + 20)], v9, v6);
  *v21 = v20;

  v23 = (objc_class *)type metadata accessor for ChangeEventSecureCoding(0);
  v27.receiver = v10;
  v27.super_class = v23;
  v15 = objc_msgSendSuper2(&v27, sel_init);

  return v15;
}

uint64_t type metadata accessor for ChangeEventSecureCoding(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1EECDE980);
}

void sub_1AD5F364C(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unsigned __int8 *v6;
  char *v7;
  uint64_t v8;
  id v9;
  void *v10;
  id v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;

  v3 = type metadata accessor for ChangeEvent(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = (unsigned __int8 *)(v1 + OBJC_IVAR____TtC9BlastDoor23ChangeEventSecureCoding_changeEvent);
  swift_beginAccess();
  sub_1AD0D3D2C((uint64_t)v6, (uint64_t)v5, type metadata accessor for ChangeEvent);
  v7 = &v5[*(int *)(v3 + 20)];
  sub_1AD63AE74();
  v8 = sub_1AD63AF28();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = objc_allocWithZone(MEMORY[0x1E0C99E98]);
  v10 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  v11 = objc_msgSend(v9, sel_initWithString_, v10);

  v12 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  v13 = *v6;
  v14 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v13, v14);

}

id sub_1AD5F3844()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void sub_1AD5F3864()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1AD5F38BC()
{
  return sub_1AD5F4340(type metadata accessor for ChangeEventSecureCoding);
}

uint64_t sub_1AD5F38F0()
{
  swift_beginAccess();
  return byte_1EECDE951;
}

uint64_t sub_1AD5F3970(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EECDE951 = a1;
  return result;
}

uint64_t (*sub_1AD5F39F8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_1AD5F3A38(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), _QWORD *a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v15;

  v10 = a5(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v15 - v11;
  sub_1AD0D3D2C(a1, (uint64_t)&v15 - v11, a5);
  v13 = *a2 + *a6;
  swift_beginAccess();
  sub_1AD33F8D8((uint64_t)v12, v13, a5);
  return swift_endAccess();
}

uint64_t sub_1AD5F3AF0@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD5F3B04(&OBJC_IVAR____TtC9BlastDoor24MentionEventSecureCoding_mentionEvent, type metadata accessor for MentionEvent, a1);
}

uint64_t sub_1AD5F3B04@<X0>(_QWORD *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;

  v6 = v3 + *a1;
  swift_beginAccess();
  return sub_1AD0D3D2C(v6, a3, a2);
}

uint64_t sub_1AD5F3B60(uint64_t a1)
{
  return sub_1AD5F3B74(a1, &OBJC_IVAR____TtC9BlastDoor24MentionEventSecureCoding_mentionEvent, type metadata accessor for MentionEvent);
}

uint64_t sub_1AD5F3B74(uint64_t a1, _QWORD *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v6;

  v6 = v3 + *a2;
  swift_beginAccess();
  sub_1AD33F8D8(a1, v6, a3);
  return swift_endAccess();
}

uint64_t (*sub_1AD5F3BD8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

id sub_1AD5F3C1C(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_1AD5F3C4C(a1);
}

id sub_1AD5F3C4C(void *a1)
{
  void *v1;
  void *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  void *v12;
  void *v13;
  id v14;
  void *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  void *v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  __int128 v25;
  objc_class *v26;
  id v27;
  __int128 v29;
  __int128 v30;
  objc_super v31;
  _OWORD v32[2];
  uint64_t v33;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1AD63AF28();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD32F2CC(0, (unint64_t *)&unk_1EECDE960);
  v11 = v2;
  v12 = (void *)sub_1AD63BC18();
  if (!v12)
  {

LABEL_14:
    type metadata accessor for MentionEventSecureCoding(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  v13 = v12;
  v14 = objc_msgSend(v12, sel_absoluteString);
  if (v14)
  {
    v15 = v14;
    sub_1AD63B768();

  }
  sub_1AD63AF04();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {

    sub_1AD0D0888((uint64_t)v6);
    goto LABEL_14;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
  v16(v10, v6, v7);
  sub_1AD32F2CC(0, &qword_1EECDE720);
  v17 = sub_1AD63BC18();
  if (!v17
    || (v18 = (void *)v17, v32[0] = 0uLL, sub_1AD63B75C(), v18, (v19 = *((_QWORD *)&v32[0] + 1)) == 0))
  {

LABEL_13:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_14;
  }
  v20 = *(_QWORD *)&v32[0];
  sub_1AD32F2CC(0, (unint64_t *)&unk_1EECDE970);
  v21 = (void *)sub_1AD63BC18();
  if (!v21)
  {

    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  sub_1AD4214CC(v21, (uint64_t *)v32);

  v29 = v32[1];
  v30 = v32[0];
  v22 = v33;
  v23 = &v11[OBJC_IVAR____TtC9BlastDoor24MentionEventSecureCoding_mentionEvent];
  v24 = type metadata accessor for MentionEvent(0);
  v16(&v23[*(int *)(v24 + 24)], v10, v7);
  *(_QWORD *)v23 = v20;
  *((_QWORD *)v23 + 1) = v19;
  v25 = v29;
  *((_OWORD *)v23 + 1) = v30;
  *((_OWORD *)v23 + 2) = v25;
  *((_QWORD *)v23 + 6) = v22;

  v26 = (objc_class *)type metadata accessor for MentionEventSecureCoding(0);
  v31.receiver = v11;
  v31.super_class = v26;
  v27 = objc_msgSendSuper2(&v31, sel_init);

  return v27;
}

uint64_t type metadata accessor for MentionEventSecureCoding(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1EECDE998);
}

void sub_1AD5F3FC0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void *v9;
  void *v10;
  void *v11;
  void *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  void *v18;
  void *v19;
  void *v20;
  id v21;
  id v22;
  void *v23;
  uint64_t v24;

  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = (char *)(v1 + OBJC_IVAR____TtC9BlastDoor24MentionEventSecureCoding_mentionEvent);
  swift_beginAccess();
  v8 = type metadata accessor for MentionEvent(0);
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, &v7[*(int *)(v8 + 24)], v3);
  v9 = (void *)sub_1AD63AE98();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  v10 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v9, v10);

  swift_bridgeObjectRetain();
  v11 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  v12 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v11, v12);

  v13 = *((_QWORD *)v7 + 4);
  if (v13)
  {
    v14 = *((_QWORD *)v7 + 2);
    v15 = *((_QWORD *)v7 + 3);
    v17 = *((_QWORD *)v7 + 5);
    v16 = *((_QWORD *)v7 + 6);
    swift_bridgeObjectRetain();
    sub_1AD0040A0(v14, v15);
    sub_1AD00408C(v17, v16);
    sub_1AD5A33D0(v14, v15, v13, v17, v16);
    v18 = (void *)sub_1AD63AFA0();
    v19 = (void *)sub_1AD63B990();
    swift_bridgeObjectRelease();
    if (v16 >> 60 == 15)
    {
      v20 = 0;
    }
    else
    {
      v20 = (void *)sub_1AD63AFA0();
      sub_1AD004118(v17, v16);
    }
    v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CD7438]), sel_initWithRootHash_publicKeys_trackingPreventionSalt_, v18, v19, v20);
    sub_1AD00412C(v14, v15);

    sub_1AD286A04(v14, v15, v13, v17, v16);
    v22 = v21;
    v23 = (void *)sub_1AD63B744();
    objc_msgSend(a1, sel_encodeObject_forKey_, v22, v23);

  }
}

void sub_1AD5F42DC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1AD5F4334()
{
  return sub_1AD5F4340(type metadata accessor for MentionEventSecureCoding);
}

id sub_1AD5F4340(uint64_t (*a1)(_QWORD))
{
  void *v1;
  objc_super v3;

  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  return objc_msgSendSuper2(&v3, sel_dealloc);
}

uint64_t sub_1AD5F43A0()
{
  swift_beginAccess();
  return byte_1EECDE952;
}

uint64_t sub_1AD5F4420(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EECDE952 = a1;
  return result;
}

uint64_t (*sub_1AD5F44A8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_1AD5F44E8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD5F3B04(&OBJC_IVAR____TtC9BlastDoor27MembershipEventSecureCoding_membershipEvent, type metadata accessor for MembershipEvent, a1);
}

uint64_t sub_1AD5F44FC(uint64_t a1)
{
  return sub_1AD5F3B74(a1, &OBJC_IVAR____TtC9BlastDoor27MembershipEventSecureCoding_membershipEvent, type metadata accessor for MembershipEvent);
}

uint64_t (*sub_1AD5F4510())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

id sub_1AD5F4554(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_1AD5F4584(a1);
}

id sub_1AD5F4584(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  void *v17;
  id v18;
  id v19;
  char v20;
  char *v21;
  uint64_t v22;
  objc_class *v23;
  uint64_t v25;
  id v26;
  objc_super v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD32F2CC(0, (unint64_t *)&unk_1EECDE960);
  v10 = v1;
  v11 = (void *)sub_1AD63BC18();
  if (!v11)
  {

LABEL_7:
    type metadata accessor for MembershipEventSecureCoding(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  v12 = v11;
  v26 = a1;
  v13 = objc_msgSend(v11, sel_absoluteString);
  if (v13)
  {
    v14 = v13;
    sub_1AD63B768();

  }
  sub_1AD63AF04();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {

    sub_1AD0D0888((uint64_t)v5);
    goto LABEL_7;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16(v9, v5, v6);
  v17 = (void *)sub_1AD63B744();
  v18 = v26;
  v19 = objc_msgSend(v26, sel_decodeIntegerForKey_, v17);

  if (v19 == (id)2)
    v20 = 2;
  else
    v20 = v19 == (id)1;
  v21 = &v10[OBJC_IVAR____TtC9BlastDoor27MembershipEventSecureCoding_membershipEvent];
  v22 = type metadata accessor for MembershipEvent(0);
  v16(&v21[*(int *)(v22 + 20)], v9, v6);
  *v21 = v20;

  v23 = (objc_class *)type metadata accessor for MembershipEventSecureCoding(0);
  v27.receiver = v10;
  v27.super_class = v23;
  v15 = objc_msgSendSuper2(&v27, sel_init);

  return v15;
}

uint64_t type metadata accessor for MembershipEventSecureCoding(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1EECDE9B0);
}

void sub_1AD5F4858(void *a1)
{
  sub_1AD5F4E3C(a1, type metadata accessor for MembershipEvent, &OBJC_IVAR____TtC9BlastDoor27MembershipEventSecureCoding_membershipEvent);
}

void sub_1AD5F48D8()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1AD5F4930()
{
  return sub_1AD5F4340(type metadata accessor for MembershipEventSecureCoding);
}

uint64_t sub_1AD5F4964()
{
  swift_beginAccess();
  return byte_1EECDE953;
}

uint64_t sub_1AD5F49E4(char a1)
{
  uint64_t result;

  result = swift_beginAccess();
  byte_1EECDE953 = a1;
  return result;
}

uint64_t (*sub_1AD5F4A6C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

uint64_t sub_1AD5F4AAC@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD5F3B04(&OBJC_IVAR____TtC9BlastDoor28PersistenceEventSecureCoding_persistenceEvent, type metadata accessor for PersistenceEvent, a1);
}

uint64_t sub_1AD5F4AC0(uint64_t a1)
{
  return sub_1AD5F3B74(a1, &OBJC_IVAR____TtC9BlastDoor28PersistenceEventSecureCoding_persistenceEvent, type metadata accessor for PersistenceEvent);
}

uint64_t (*sub_1AD5F4AD4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess_0;
}

id sub_1AD5F4B18(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_allocWithZone(v1);
  return sub_1AD5F4B48(a1);
}

id sub_1AD5F4B48(void *a1)
{
  void *v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  void *v11;
  void *v12;
  id v13;
  void *v14;
  id v15;
  void (*v16)(char *, char *, uint64_t);
  void *v17;
  id v18;
  id v19;
  char v20;
  char *v21;
  uint64_t v22;
  objc_class *v23;
  uint64_t v25;
  id v26;
  objc_super v27;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AD63AF28();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1AD32F2CC(0, (unint64_t *)&unk_1EECDE960);
  v10 = v1;
  v11 = (void *)sub_1AD63BC18();
  if (!v11)
  {

LABEL_7:
    type metadata accessor for PersistenceEventSecureCoding(0);
    swift_deallocPartialClassInstance();
    return 0;
  }
  v12 = v11;
  v26 = a1;
  v13 = objc_msgSend(v11, sel_absoluteString);
  if (v13)
  {
    v14 = v13;
    sub_1AD63B768();

  }
  sub_1AD63AF04();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {

    sub_1AD0D0888((uint64_t)v5);
    goto LABEL_7;
  }
  v16 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
  v16(v9, v5, v6);
  v17 = (void *)sub_1AD63B744();
  v18 = v26;
  v19 = objc_msgSend(v26, sel_decodeIntegerForKey_, v17);

  if ((unint64_t)v19 >= 5)
    v20 = 0;
  else
    v20 = (char)v19;
  v21 = &v10[OBJC_IVAR____TtC9BlastDoor28PersistenceEventSecureCoding_persistenceEvent];
  v22 = type metadata accessor for PersistenceEvent(0);
  v16(&v21[*(int *)(v22 + 20)], v9, v6);
  *v21 = v20;

  v23 = (objc_class *)type metadata accessor for PersistenceEventSecureCoding(0);
  v27.receiver = v10;
  v27.super_class = v23;
  v15 = objc_msgSendSuper2(&v27, sel_init);

  return v15;
}

uint64_t type metadata accessor for PersistenceEventSecureCoding(uint64_t a1)
{
  return sub_1AD011E7C(a1, qword_1EECDE9C8);
}

void sub_1AD5F4E10(void *a1)
{
  sub_1AD5F4E3C(a1, type metadata accessor for PersistenceEvent, &OBJC_IVAR____TtC9BlastDoor28PersistenceEventSecureCoding_persistenceEvent);
}

void sub_1AD5F4E3C(void *a1, uint64_t (*a2)(_QWORD), _QWORD *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unsigned __int8 *v10;
  char *v11;
  void *v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  void *v16;
  uint64_t v17;

  v7 = a2(0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v17 - v8;
  v10 = (unsigned __int8 *)(v3 + *a3);
  swift_beginAccess();
  sub_1AD0D3D2C((uint64_t)v10, (uint64_t)v9, a2);
  v11 = &v9[*(int *)(v7 + 20)];
  v12 = (void *)sub_1AD63AE98();
  v13 = sub_1AD63AF28();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v11, v13);
  v14 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeObject_forKey_, v12, v14);

  v15 = *v10;
  v16 = (void *)sub_1AD63B744();
  objc_msgSend(a1, sel_encodeInteger_forKey_, v15, v16);

}

void sub_1AD5F4FDC()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id sub_1AD5F5034()
{
  return sub_1AD5F4340(type metadata accessor for PersistenceEventSecureCoding);
}

uint64_t sub_1AD5F5040@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_2(a1, &OBJC_IVAR____TtC9BlastDoor23ChangeEventSecureCoding_changeEvent, type metadata accessor for ChangeEvent, a2);
}

uint64_t sub_1AD5F5054(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5F3A38(a1, a2, a3, a4, type metadata accessor for ChangeEvent, &OBJC_IVAR____TtC9BlastDoor23ChangeEventSecureCoding_changeEvent);
}

uint64_t sub_1AD5F5078@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_2(a1, &OBJC_IVAR____TtC9BlastDoor24MentionEventSecureCoding_mentionEvent, type metadata accessor for MentionEvent, a2);
}

uint64_t sub_1AD5F508C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5F3A38(a1, a2, a3, a4, type metadata accessor for MentionEvent, &OBJC_IVAR____TtC9BlastDoor24MentionEventSecureCoding_mentionEvent);
}

uint64_t sub_1AD5F50B0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_2(a1, &OBJC_IVAR____TtC9BlastDoor27MembershipEventSecureCoding_membershipEvent, type metadata accessor for MembershipEvent, a2);
}

uint64_t sub_1AD5F50C4(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5F3A38(a1, a2, a3, a4, type metadata accessor for MembershipEvent, &OBJC_IVAR____TtC9BlastDoor27MembershipEventSecureCoding_membershipEvent);
}

uint64_t sub_1AD5F50E8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_getTm_2(a1, &OBJC_IVAR____TtC9BlastDoor28PersistenceEventSecureCoding_persistenceEvent, type metadata accessor for PersistenceEvent, a2);
}

uint64_t sub_1AD5F50FC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5F3A38(a1, a2, a3, a4, type metadata accessor for PersistenceEvent, &OBJC_IVAR____TtC9BlastDoor28PersistenceEventSecureCoding_persistenceEvent);
}

uint64_t sub_1AD5F5120()
{
  return type metadata accessor for ChangeEventSecureCoding(0);
}

uint64_t sub_1AD5F5128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD4DFD5C(a1, a2, a3, type metadata accessor for ChangeEvent);
}

uint64_t sub_1AD5F5134()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD5F5140()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x58))();
}

uint64_t sub_1AD5F515C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x60))();
}

uint64_t sub_1AD5F5178()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x68))();
}

uint64_t sub_1AD5F5194()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 120))();
}

uint64_t sub_1AD5F519C()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x80))();
}

uint64_t sub_1AD5F51B8()
{
  return type metadata accessor for MentionEventSecureCoding(0);
}

uint64_t sub_1AD5F51C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD4DFD5C(a1, a2, a3, type metadata accessor for MentionEvent);
}

uint64_t sub_1AD5F51CC()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD5F51D8()
{
  return type metadata accessor for MembershipEventSecureCoding(0);
}

uint64_t sub_1AD5F51E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD4DFD5C(a1, a2, a3, type metadata accessor for MembershipEvent);
}

uint64_t sub_1AD5F51EC()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD5F5220()
{
  return type metadata accessor for PersistenceEventSecureCoding(0);
}

uint64_t sub_1AD5F5228(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD4DFD5C(a1, a2, a3, type metadata accessor for PersistenceEvent);
}

uint64_t sub_1AD5F5234()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD5F5288()
{
  sub_1AD5F60E4();
  return sub_1AD63B930();
}

uint64_t sub_1AD5F52E4()
{
  sub_1AD5F60E4();
  return sub_1AD63B8D0();
}

void sub_1AD5F5330(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *sub_1AD5F533C(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*sub_1AD5F5348())()
{
  return nullsub_1;
}

void sub_1AD5F5358(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 1);
}

_BYTE *sub_1AD5F5364(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = *result;
  return result;
}

uint64_t (*sub_1AD5F5370())()
{
  return nullsub_1;
}

void sub_1AD5F5380(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 2);
}

_BYTE *sub_1AD5F538C(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 2) = *result;
  return result;
}

uint64_t (*sub_1AD5F5398())()
{
  return nullsub_1;
}

void sub_1AD5F53A8(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 3);
}

_BYTE *sub_1AD5F53B4(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 3) = *result;
  return result;
}

uint64_t (*sub_1AD5F53C0())()
{
  return nullsub_1;
}

void sub_1AD5F53D0(_DWORD *a1@<X8>)
{
  _DWORD *v1;

  *a1 = *v1;
}

_DWORD *sub_1AD5F53DC(_DWORD *result)
{
  _DWORD *v1;

  *v1 = *result;
  return result;
}

uint64_t (*sub_1AD5F53E8())()
{
  return nullsub_1;
}

unint64_t sub_1AD5F53F8@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD5F540C()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1AD5F5414@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD5F53F8(*a1, a2);
}

uint64_t sub_1AD5F541C()
{
  sub_1AD5F60A0();
  return sub_1AD63B930();
}

uint64_t sub_1AD5F5478()
{
  sub_1AD5F60A0();
  return sub_1AD63B8D0();
}

uint64_t sub_1AD5F54C4@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if ((unint64_t)(result + 3) >= 4)
    v2 = 4;
  else
    v2 = -(char)result;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD5F54E4()
{
  unsigned __int8 *v0;

  return -(uint64_t)*v0;
}

BOOL sub_1AD5F54F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 == *a1;
}

uint64_t sub_1AD5F5504()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD5F5548()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD5F5574()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD5F55B4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD5F54C4(*a1, a2);
}

void sub_1AD5F55BC(_QWORD *a1@<X8>)
{
  unsigned __int8 *v1;

  *a1 = -(uint64_t)*v1;
}

uint64_t sub_1AD5F55CC()
{
  sub_1AD5F605C();
  return sub_1AD63B930();
}

uint64_t sub_1AD5F5628()
{
  sub_1AD5F605C();
  return sub_1AD63B8D0();
}

uint64_t sub_1AD5F5674@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

uint64_t sub_1AD5F56C8()
{
  return 0x342E325F5055;
}

uint64_t sub_1AD5F56DC()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD5F5728()
{
  return sub_1AD63B7F8();
}

uint64_t sub_1AD5F573C()
{
  sub_1AD63C4AC();
  sub_1AD63B7F8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD5F5784@<X0>(BOOL *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_1AD63BE94();
  result = swift_bridgeObjectRelease();
  *a1 = v2 != 0;
  return result;
}

void sub_1AD5F57D4(_QWORD *a1@<X8>)
{
  *a1 = 0x342E325F5055;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1AD5F57EC()
{
  sub_1AD5F6018();
  return sub_1AD63B924();
}

uint64_t sub_1AD5F5848()
{
  sub_1AD5F6018();
  return sub_1AD63B8C4();
}

void sub_1AD5F5894(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *sub_1AD5F58A0(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*sub_1AD5F58AC())()
{
  return nullsub_1;
}

uint64_t sub_1AD5F58BC()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD5F58C4(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*sub_1AD5F58EC())()
{
  return nullsub_1;
}

uint64_t sub_1AD5F58FC()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t sub_1AD5F5904(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

uint64_t (*sub_1AD5F590C())()
{
  return nullsub_1;
}

uint64_t sub_1AD5F591C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 17);
}

uint64_t sub_1AD5F5924(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 17) = result;
  return result;
}

uint64_t (*sub_1AD5F592C())()
{
  return nullsub_1;
}

uint64_t sub_1AD5F593C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 18);
}

uint64_t sub_1AD5F5944(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 18) = result;
  return result;
}

uint64_t (*sub_1AD5F594C())()
{
  return nullsub_1;
}

void sub_1AD5F595C(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 19);
}

_BYTE *sub_1AD5F5968(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 19) = *result;
  return result;
}

uint64_t (*sub_1AD5F5974())()
{
  return nullsub_1;
}

uint64_t sub_1AD5F5984()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 20);
}

uint64_t sub_1AD5F598C(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 20) = result;
  return result;
}

uint64_t (*sub_1AD5F5994())()
{
  return nullsub_1;
}

void sub_1AD5F59A4(_DWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_DWORD *)(v1 + 21);
}

_DWORD *sub_1AD5F59B0(_DWORD *result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 21) = *result;
  return result;
}

uint64_t (*sub_1AD5F59BC())()
{
  return nullsub_1;
}

unint64_t sub_1AD5F59D0()
{
  unint64_t result;

  result = qword_1EECDE9E0;
  if (!qword_1EECDE9E0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD697D00, &type metadata for ServicesDataOffCharacteristic.DataOffBehavior);
    atomic_store(result, (unint64_t *)&qword_1EECDE9E0);
  }
  return result;
}

uint64_t sub_1AD5F5A14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28FC28, (uint64_t (*)(void))sub_1AD28FC6C);
}

uint64_t sub_1AD5F5A28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28FDE4, (uint64_t (*)(void))sub_1AD28FF18);
}

unint64_t sub_1AD5F5A40()
{
  unint64_t result;

  result = qword_1EECDE9E8;
  if (!qword_1EECDE9E8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD697E28, &type metadata for ServicesCharacteristic.StandaloneMsgAuth);
    atomic_store(result, (unint64_t *)&qword_1EECDE9E8);
  }
  return result;
}

unint64_t sub_1AD5F5A88()
{
  unint64_t result;

  result = qword_1EECDE9F0;
  if (!qword_1EECDE9F0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD697F18, &type metadata for ServicesCharacteristic.RCSDisabledState);
    atomic_store(result, (unint64_t *)&qword_1EECDE9F0);
  }
  return result;
}

unint64_t sub_1AD5F5AD0()
{
  unint64_t result;

  result = qword_1EECDE9F8;
  if (!qword_1EECDE9F8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698008, &type metadata for ServicesCharacteristic.RCSProfileVersion);
    atomic_store(result, (unint64_t *)&qword_1EECDE9F8);
  }
  return result;
}

uint64_t sub_1AD5F5B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28E428, (uint64_t (*)(void))sub_1AD28E52C);
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for ServicesDataOffCharacteristic()
{
  return &type metadata for ServicesDataOffCharacteristic;
}

ValueMetadata *type metadata accessor for ServicesDataOffCharacteristic.DataOffBehavior()
{
  return &type metadata for ServicesDataOffCharacteristic.DataOffBehavior;
}

uint64_t _s9BlastDoor29ServicesDataOffCharacteristicVwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v3;
  int v4;
  int v5;

  if (!a2)
    return 0;
  if (a2 >= 0xFD && a1[4])
    return (*(_DWORD *)a1 + 253);
  if (*a1 <= 3u)
    v3 = 3;
  else
    v3 = *a1;
  v4 = v3 - 4;
  if (*a1 < 3u)
    v5 = -1;
  else
    v5 = v4;
  return (v5 + 1);
}

uint64_t _s9BlastDoor29ServicesDataOffCharacteristicVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_DWORD *)result = a2 - 253;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 4) = 0;
    if (a2)
      *(_BYTE *)result = a2 + 3;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServicesExtCharacteristic()
{
  return &type metadata for ServicesExtCharacteristic;
}

uint64_t initializeWithCopy for ServicesCharacteristic(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 21) = *(_DWORD *)(a2 + 21);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ServicesCharacteristic(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_BYTE *)(a1 + 17) = *(_BYTE *)(a2 + 17);
  *(_BYTE *)(a1 + 18) = *(_BYTE *)(a2 + 18);
  *(_BYTE *)(a1 + 19) = *(_BYTE *)(a2 + 19);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 21) = *(_DWORD *)(a2 + 21);
  return a1;
}

uint64_t assignWithTake for ServicesCharacteristic(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 20) = *(_BYTE *)(a2 + 20);
  *(_DWORD *)(a1 + 21) = *(_DWORD *)(a2 + 21);
  return a1;
}

uint64_t getEnumTagSinglePayload for ServicesCharacteristic(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 25))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ServicesCharacteristic(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_BYTE *)(result + 24) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 25) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ServicesCharacteristic()
{
  return &type metadata for ServicesCharacteristic;
}

uint64_t _s9BlastDoor22ServicesCharacteristicV17StandaloneMsgAuthOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD5F5E30 + 4 * byte_1AD697CE5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD5F5E64 + 4 * byte_1AD697CE0[v4]))();
}

uint64_t sub_1AD5F5E64(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F5E6C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5F5E74);
  return result;
}

uint64_t sub_1AD5F5E80(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5F5E88);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD5F5E8C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F5E94(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServicesCharacteristic.StandaloneMsgAuth()
{
  return &type metadata for ServicesCharacteristic.StandaloneMsgAuth;
}

uint64_t storeEnumTagSinglePayload for ServicesCharacteristic.RCSDisabledState(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD5F5EFC + 4 * byte_1AD697CEF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD5F5F30 + 4 * byte_1AD697CEA[v4]))();
}

uint64_t sub_1AD5F5F30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F5F38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5F5F40);
  return result;
}

uint64_t sub_1AD5F5F4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5F5F54);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD5F5F58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F5F60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ServicesCharacteristic.RCSDisabledState()
{
  return &type metadata for ServicesCharacteristic.RCSDisabledState;
}

uint64_t storeEnumTagSinglePayload for ServicesCharacteristic.RCSProfileVersion(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AD5F5FBC + 4 * byte_1AD697CF4[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AD5F5FDC + 4 * byte_1AD697CF9[v4]))();
}

_BYTE *sub_1AD5F5FBC(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AD5F5FDC(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD5F5FE4(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD5F5FEC(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD5F5FF4(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD5F5FFC(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ServicesCharacteristic.RCSProfileVersion()
{
  return &type metadata for ServicesCharacteristic.RCSProfileVersion;
}

unint64_t sub_1AD5F6018()
{
  unint64_t result;

  result = qword_1EECDEA00;
  if (!qword_1EECDEA00)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698070, &type metadata for ServicesCharacteristic.RCSProfileVersion);
    atomic_store(result, (unint64_t *)&qword_1EECDEA00);
  }
  return result;
}

unint64_t sub_1AD5F605C()
{
  unint64_t result;

  result = qword_1EECDEA08;
  if (!qword_1EECDEA08)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD697F80, &type metadata for ServicesCharacteristic.RCSDisabledState);
    atomic_store(result, (unint64_t *)&qword_1EECDEA08);
  }
  return result;
}

unint64_t sub_1AD5F60A0()
{
  unint64_t result;

  result = qword_1EECDEA10;
  if (!qword_1EECDEA10)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD697E90, &type metadata for ServicesCharacteristic.StandaloneMsgAuth);
    atomic_store(result, (unint64_t *)&qword_1EECDEA10);
  }
  return result;
}

unint64_t sub_1AD5F60E4()
{
  unint64_t result;

  result = qword_1EECDEA18;
  if (!qword_1EECDEA18)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD697D68, &type metadata for ServicesDataOffCharacteristic.DataOffBehavior);
    atomic_store(result, (unint64_t *)&qword_1EECDEA18);
  }
  return result;
}

CGColorSpaceRef sub_1AD5F6134()
{
  CGColorSpaceRef result;

  result = CGColorSpaceCreateWithName((CFStringRef)*MEMORY[0x1E0C9D960]);
  if (result)
    qword_1EECDEA20 = (uint64_t)result;
  else
    __break(1u);
  return result;
}

void sub_1AD5F6164(CGColor *a1@<X0>, uint64_t a2@<X8>)
{
  CGColorSpace *v4;
  CGColorRef CopyByMatchingToColorSpace;
  CGColorRef v6;
  uint64_t v7;
  unint64_t v8;
  _BYTE *v9;
  _BYTE *v10;
  _BYTE *v11;
  double v12;
  uint64_t v13;
  __int128 v14;

  v4 = CGColorGetColorSpace(a1);

  if (!v4)
  {
    sub_1AD5F62F8();
    swift_allocError();
    *v10 = 0;
LABEL_11:
    swift_willThrow();
    goto LABEL_12;
  }
  if (qword_1EECD1638 != -1)
    swift_once();
  CopyByMatchingToColorSpace = CGColorCreateCopyByMatchingToColorSpace((CGColorSpaceRef)qword_1EECDEA20, kCGRenderingIntentDefault, a1, 0);
  if (!CopyByMatchingToColorSpace)
  {
    sub_1AD5F62F8();
    swift_allocError();
    *v11 = 1;
    goto LABEL_11;
  }
  v6 = CopyByMatchingToColorSpace;
  v7 = sub_1AD63BB34();
  if (!v7)
  {
LABEL_8:
    sub_1AD5F62F8();
    swift_allocError();
    *v9 = 2;
    swift_willThrow();

LABEL_12:
    return;
  }
  v8 = *(_QWORD *)(v7 + 16);
  if (v8 < 3)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v12 = 1.0;
  if (v8 != 3)
    v12 = *(double *)(v7 + 56);
  v14 = *(_OWORD *)(v7 + 32);
  v13 = *(_QWORD *)(v7 + 48);

  swift_bridgeObjectRelease();
  *(_OWORD *)a2 = v14;
  *(_QWORD *)(a2 + 16) = v13;
  *(double *)(a2 + 24) = v12;
}

unint64_t sub_1AD5F62F8()
{
  unint64_t result;

  result = qword_1EECDEA28;
  if (!qword_1EECDEA28)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6982B8, &type metadata for ColorError);
    atomic_store(result, (unint64_t *)&qword_1EECDEA28);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for ColorError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD5F6388 + 4 * byte_1AD69823D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD5F63BC + 4 * asc_1AD698238[v4]))();
}

uint64_t sub_1AD5F63BC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F63C4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5F63CCLL);
  return result;
}

uint64_t sub_1AD5F63D8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5F63E0);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD5F63E4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F63EC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ColorError()
{
  return &type metadata for ColorError;
}

unint64_t sub_1AD5F640C()
{
  unint64_t result;

  result = qword_1EECDEA30;
  if (!qword_1EECDEA30)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698290, &type metadata for ColorError);
    atomic_store(result, (unint64_t *)&qword_1EECDEA30);
  }
  return result;
}

xpc_object_t XPCEncoder.__allocating_init(dictionary:)(void *a1)
{
  uint64_t v2;
  xpc_object_t result;
  xpc_object_t v4;

  v2 = swift_allocObject();
  *(_WORD *)(v2 + 16) = 0;
  *(_OWORD *)(v2 + 24) = 0u;
  *(_OWORD *)(v2 + 40) = 0u;
  *(_QWORD *)(v2 + 56) = 0;
  if (!a1)
  {
    v4 = 0;
    goto LABEL_5;
  }
  result = xpc_dictionary_create_reply(a1);
  if (result)
  {
    v4 = result;
    swift_unknownObjectRelease();
LABEL_5:
    *(_QWORD *)(v2 + 64) = v4;
    return (xpc_object_t)v2;
  }
  __break(1u);
  return result;
}

BOOL static XPCEncoder.DataEncodingStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t XPCEncoder.DataEncodingStrategy.hash(into:)()
{
  return sub_1AD63C4B8();
}

uint64_t XPCEncoder.DataEncodingStrategy.hashValue.getter()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

BOOL static XPCEncoder.UUIDEncodingStrategy.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t XPCEncoder.UUIDEncodingStrategy.hash(into:)()
{
  return sub_1AD63C4B8();
}

uint64_t XPCEncoder.UUIDEncodingStrategy.hashValue.getter()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

xpc_object_t XPCEncoder.init(dictionary:)(void *a1)
{
  uint64_t v1;
  xpc_object_t result;
  xpc_object_t v3;

  *(_WORD *)(v1 + 16) = 0;
  *(_OWORD *)(v1 + 24) = 0u;
  *(_OWORD *)(v1 + 40) = 0u;
  *(_QWORD *)(v1 + 56) = 0;
  if (!a1)
  {
    v3 = 0;
    goto LABEL_5;
  }
  result = xpc_dictionary_create_reply(a1);
  if (result)
  {
    v3 = result;
    swift_unknownObjectRelease();
LABEL_5:
    *(_QWORD *)(v1 + 64) = v3;
    return (xpc_object_t)v1;
  }
  __break(1u);
  return result;
}

uint64_t *sub_1AD5F6638(uint64_t *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v12;
  uint64_t *v13;
  uint64_t *v14;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v6 = (*(_QWORD *(**)(uint64_t *__return_ptr))(*v2 + 120))(&v20);
  (*(void (**)(uint64_t *__return_ptr, _QWORD *))(*v2 + 144))(&v16, v6);
  BYTE1(v20) = v16;
  swift_beginAccess();
  sub_1AD5F68AC((uint64_t)(v2 + 3), (uint64_t)&v16);
  v7 = v2[8];
  v8 = type metadata accessor for _XPCEncoder();
  swift_allocObject();
  swift_unknownObjectRetain();
  v9 = sub_1AD5F6964((char *)&v20, (uint64_t)&v16, v7);
  v18 = v8;
  v19 = sub_1ACFF9724(qword_1ED2E7498, (uint64_t (*)(uint64_t))type metadata accessor for _XPCEncoder, (uint64_t)&unk_1AD6985D8);
  v16 = v9;
  swift_retain();
  v10 = a1;
  sub_1AD63B6A8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v16);
  if (!v3)
  {
    v10 = *(uint64_t **)(v9 + 72);
    if (v10)
    {
      swift_unknownObjectRetain();
      swift_release();
      return v10;
    }
    v12 = sub_1AD63BDA4();
    swift_allocError();
    v14 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEA40);
    v14[3] = a2;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v14);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_0, a1, a2);
    v16 = 0;
    v17 = 0xE000000000000000;
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    v16 = 0x6576656C2D706F54;
    v17 = 0xEA0000000000206CLL;
    sub_1AD63C578();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v10 = &v16;
    sub_1AD63B810();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v12 - 8) + 104))(v14, *MEMORY[0x1E0DEC4B0], v12);
    swift_willThrow();
  }
  swift_release();
  return v10;
}

uint64_t sub_1AD5F68AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E73E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for _XPCEncoder()
{
  return objc_opt_self();
}

uint64_t XPCEncoder.deinit()
{
  uint64_t v0;

  sub_1AD5F6A5C(v0 + 24);
  swift_unknownObjectRelease();
  return v0;
}

uint64_t XPCEncoder.__deallocating_deinit()
{
  uint64_t v0;

  sub_1AD5F6A5C(v0 + 24);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD5F6964(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v7;
  char v8;
  uint64_t v9;
  unint64_t v10;
  int v11;

  v4 = v3;
  v7 = *a1;
  v8 = a1[1];
  v9 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v4 + 16) = MEMORY[0x1E0DEE9D8];
  v10 = sub_1AD4391D4(v9);
  *(_OWORD *)(v4 + 32) = 0u;
  *(_QWORD *)(v4 + 24) = v10;
  *(_OWORD *)(v4 + 48) = 0u;
  *(_OWORD *)(v4 + 64) = 0u;
  *(_BYTE *)(v4 + 80) = v7;
  *(_BYTE *)(v4 + 81) = v8;
  swift_beginAccess();
  sub_1AD5FA248(a2, v4 + 32);
  swift_endAccess();
  if (a3)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    v11 = sub_1AD0E1E64();
    swift_unknownObjectRelease();
    sub_1AD5F6A5C(a2);
    if (v11 == 7)
      *(_QWORD *)(v4 + 72) = a3;
    swift_unknownObjectRelease();
  }
  else
  {
    sub_1AD5F6A5C(a2);
  }
  return v4;
}

uint64_t sub_1AD5F6A5C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E73E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1AD5F6AA0()
{
  unint64_t result;

  result = qword_1EECDEA48;
  if (!qword_1EECDEA48)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for XPCEncoder.DataEncodingStrategy, &type metadata for XPCEncoder.DataEncodingStrategy);
    atomic_store(result, (unint64_t *)&qword_1EECDEA48);
  }
  return result;
}

unint64_t sub_1AD5F6AE8()
{
  unint64_t result;

  result = qword_1EECDEA50;
  if (!qword_1EECDEA50)
  {
    result = MEMORY[0x1AF44BDF0](&protocol conformance descriptor for XPCEncoder.UUIDEncodingStrategy, &type metadata for XPCEncoder.UUIDEncodingStrategy);
    atomic_store(result, (unint64_t *)&qword_1EECDEA50);
  }
  return result;
}

_QWORD *sub_1AD5F6B2C@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(**(_QWORD **)a1 + 120))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1AD5F6B6C(char *a1, uint64_t *a2)
{
  uint64_t v2;
  char v4;

  v2 = *a2;
  v4 = *a1;
  return (*(uint64_t (**)(char *))(*(_QWORD *)v2 + 128))(&v4);
}

_QWORD *sub_1AD5F6BA8@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  _QWORD *result;
  uint64_t v4;

  result = (*(_QWORD *(**)(uint64_t *__return_ptr))(**(_QWORD **)a1 + 144))(&v4);
  *a2 = v4;
  return result;
}

uint64_t sub_1AD5F6BE8(char *a1, uint64_t *a2)
{
  uint64_t v2;
  char v4;

  v2 = *a2;
  v4 = *a1;
  return (*(uint64_t (**)(char *))(*(_QWORD *)v2 + 152))(&v4);
}

uint64_t type metadata accessor for XPCEncoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for XPCEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of XPCEncoder.__allocating_init(dictionary:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t dispatch thunk of XPCEncoder.dataEncodingStrategy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of XPCEncoder.dataEncodingStrategy.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of XPCEncoder.dataEncodingStrategy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of XPCEncoder.uuidEncodingStrategy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of XPCEncoder.uuidEncodingStrategy.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of XPCEncoder.uuidEncodingStrategy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of XPCEncoder.encode<A>(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t storeEnumTagSinglePayload for XPCEncoder.DataEncodingStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD5F6D08 + 4 * byte_1AD698305[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD5F6D3C + 4 * byte_1AD698300[v4]))();
}

uint64_t sub_1AD5F6D3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F6D44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5F6D4CLL);
  return result;
}

uint64_t sub_1AD5F6D58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5F6D60);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD5F6D64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F6D6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCEncoder.DataEncodingStrategy()
{
  return &type metadata for XPCEncoder.DataEncodingStrategy;
}

uint64_t storeEnumTagSinglePayload for XPCEncoder.UUIDEncodingStrategy(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD5F6DD4 + 4 * byte_1AD69830F[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD5F6E08 + 4 * byte_1AD69830A[v4]))();
}

uint64_t sub_1AD5F6E08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F6E10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5F6E18);
  return result;
}

uint64_t sub_1AD5F6E24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5F6E2CLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD5F6E30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5F6E38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCEncoder.UUIDEncodingStrategy()
{
  return &type metadata for XPCEncoder.UUIDEncodingStrategy;
}

uint64_t sub_1AD5F6E54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;

  if (!*(_QWORD *)(v3 + 72))
    goto LABEL_4;
  swift_getObjectType();
  swift_unknownObjectRetain();
  if (sub_1AD0E1E64() != 7)
  {
    __break(1u);
LABEL_4:
    *(_QWORD *)(v3 + 72) = xpc_dictionary_create(0, 0, 0);
    swift_unknownObjectRetain();
    swift_unknownObjectRelease();
  }
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  sub_1AD5F6FB4(v3);
  v7 = type metadata accessor for _XPCKeyedEncodingContainer(0, a2, a3, v6);
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1AF44BDF0](&unk_1AD698690, v7);
  sub_1AD63C0BC();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F6FB4(uint64_t a1)
{
  uint64_t result;

  swift_getObjectType();
  if (sub_1AD0E1E64() == 7)
    return a1;
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD5F7058@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  xpc_object_t v4;
  uint64_t v5;
  uint64_t result;

  v2 = v1;
  v4 = *(xpc_object_t *)(v1 + 72);
  if (v4)
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    if (sub_1AD0E1E64() == 6)
      goto LABEL_5;
    __break(1u);
  }
  v4 = xpc_array_create(0, 0);
  *(_QWORD *)(v2 + 72) = v4;
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
LABEL_5:
  v5 = *(_QWORD *)(v2 + 16);
  swift_getObjectType();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (sub_1AD0E1E64() == 6)
  {
    a1[3] = &type metadata for _XPCUnkeyedEncodingContainer;
    a1[4] = sub_1AD5FA290();
    result = swift_unknownObjectRelease();
    *a1 = v2;
    a1[1] = v4;
    a1[2] = v5;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

xpc_object_t sub_1AD5F7194(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t DynamicType;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  xpc_object_t v12;
  void *v13;
  void *v14;
  xpc_object_t v15;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  _QWORD v20[5];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  DynamicType = swift_getDynamicType();
  if (DynamicType == MEMORY[0x1E0CB0338])
  {
    sub_1AD0CFC4C((uint64_t)a1, (uint64_t)v20);
    __swift_instantiateConcreteTypeFromMangledName(qword_1ED2E6548);
    swift_dynamicCast();
    v12 = sub_1AD5F7508(v18, v19);
    sub_1AD00412C(v18, v19);
  }
  else
  {
    v5 = DynamicType;
    if (DynamicType == __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7148))
    {
      sub_1AD0CFC4C((uint64_t)a1, (uint64_t)v20);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED2E6548);
      swift_dynamicCast();
      v13 = (void *)xpc_mach_send_create();
      v12 = xpc_dictionary_create(0, 0, 0);
      xpc_dictionary_set_value(v12, "mpr_p", v13);
      swift_unknownObjectRelease();
    }
    else if (v5 == __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7150))
    {
      sub_1AD0CFC4C((uint64_t)a1, (uint64_t)v20);
      __swift_instantiateConcreteTypeFromMangledName(qword_1ED2E6548);
      swift_dynamicCast();
      swift_beginAccess();
      swift_retain();
      v14 = (void *)xpc_mach_send_create();
      v12 = xpc_dictionary_create(0, 0, 0);
      xpc_dictionary_set_value(v12, "mpr_p", v14);
      swift_unknownObjectRelease();
      v15 = xpc_int64_create(*(_QWORD *)(v17 + 24));
      xpc_dictionary_set_value(v12, "mpr_s", v15);
      swift_release_n();
      swift_unknownObjectRelease();
    }
    else
    {
      v6 = *(_BYTE *)(v1 + 80);
      v7 = *(_BYTE *)(v1 + 81);
      swift_beginAccess();
      sub_1AD5F68AC(v1 + 32, (uint64_t)v20);
      v8 = type metadata accessor for _XPCEncoder();
      v9 = swift_allocObject();
      v10 = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v9 + 16) = MEMORY[0x1E0DEE9D8];
      *(_QWORD *)(v9 + 24) = sub_1AD4391D4(v10);
      *(_OWORD *)(v9 + 48) = 0u;
      *(_OWORD *)(v9 + 64) = 0u;
      *(_OWORD *)(v9 + 32) = 0u;
      *(_BYTE *)(v9 + 80) = v6;
      *(_BYTE *)(v9 + 81) = v7;
      swift_beginAccess();
      sub_1AD5FA248((uint64_t)v20, v9 + 32);
      swift_endAccess();
      sub_1AD5F6A5C((uint64_t)v20);
      v11 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
      v20[3] = v8;
      v20[4] = sub_1ACFF9724(qword_1ED2E7498, (uint64_t (*)(uint64_t))type metadata accessor for _XPCEncoder, (uint64_t)&unk_1AD6985D8);
      v20[0] = v9;
      swift_retain();
      v12 = v11;
      sub_1AD63B6A8();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
      if (!v2)
      {
        v12 = *(xpc_object_t *)(v9 + 72);
        if (v12)
          swift_unknownObjectRetain();
        else
          v12 = xpc_null_create();
      }
      swift_release();
    }
  }
  return v12;
}

xpc_object_t sub_1AD5F7508(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  xpc_object_t v9;
  uint64_t v10;

  v5 = sub_1AD63B630();
  MEMORY[0x1E0C80A78](v5);
  if (*(_BYTE *)(v2 + 80))
  {
    if (*(_BYTE *)(v2 + 80) == 1)
      __asm { BR              X10 }
    sub_1AD63AFAC();
    v10 = sub_1AD63B7B0();
    v9 = xpc_string_create((const char *)(v10 + 32));
    swift_bridgeObjectRelease();
    swift_release();
  }
  else
  {
    v6 = sub_1AD63BDA4();
    swift_allocError();
    v8 = v7;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEA40);
    v8[3] = MEMORY[0x1E0CB0338];
    *v8 = a1;
    v8[1] = a2;
    v9 = *(xpc_object_t *)(v2 + 16);
    sub_1AD0040A0(a1, a2);
    swift_bridgeObjectRetain();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v6 - 8) + 104))(v8, *MEMORY[0x1E0DEC4B0], v6);
    swift_willThrow();
  }
  return v9;
}

uint64_t sub_1AD5F78A8()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD5F6A5C(v0 + 32);
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD5F78E4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD5F78F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F6E54(a1, a2, a3);
}

uint64_t sub_1AD5F7910@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AD5F7058(a1);
}

void sub_1AD5F7930(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  if (*(_QWORD *)(*v1 + 72))
  {
    __break(1u);
  }
  else
  {
    a1[3] = type metadata accessor for _XPCEncoder();
    a1[4] = sub_1ACFF9724(&qword_1ED2E6630, (uint64_t (*)(uint64_t))type metadata accessor for _XPCEncoder, (uint64_t)&unk_1AD698510);
    *a1 = v3;
    swift_retain();
  }
}

uint64_t sub_1AD5F7998@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + 32;
  swift_beginAccess();
  return sub_1AD5F68AC(v3, a1);
}

uint64_t sub_1AD5F79E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *boxed_opaque_existential_0;
  xpc_object_t v8;
  uint64_t result;
  uint64_t v10[5];

  v10[4] = a3;
  v10[3] = a2;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(boxed_opaque_existential_0, a1, a2);
  v8 = sub_1AD5F7194(v10);
  result = __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  if (!v4)
  {
    *(_QWORD *)(v3 + 72) = v8;
    return swift_unknownObjectRelease();
  }
  return result;
}

uint64_t sub_1AD5F7A68()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD5F7A74()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  *(_QWORD *)(v1 + 72) = xpc_null_create();
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7AAC(char a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = xpc_BOOL_create(a1 & 1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7AE8()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  xpc_object_t v3;

  v1 = *v0;
  v2 = sub_1AD63B7B0();
  v3 = xpc_string_create((const char *)(v2 + 32));
  swift_release();
  *(_QWORD *)(v1 + 72) = v3;
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7B3C(double a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = xpc_double_create(a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7B74(float a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = xpc_double_create(a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7BB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F7D64(a1, a2, a3, (uint64_t (*)(void))MEMORY[0x1E0C86568]);
}

uint64_t sub_1AD5F7BCC(char a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = xpc_int64_create(a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7C08(__int16 a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = xpc_int64_create(a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7C44(int a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = xpc_int64_create(a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7C80()
{
  return sub_1AD63C2FC();
}

uint64_t sub_1AD5F7C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F7D64(a1, a2, a3, (uint64_t (*)(void))MEMORY[0x1E0C867B0]);
}

uint64_t sub_1AD5F7CB0(unsigned __int8 a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = xpc_uint64_create(a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7CEC(unsigned __int16 a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = xpc_uint64_create(a1);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7D28(uint64_t value)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *(_QWORD *)(v2 + 72) = xpc_uint64_create(value);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7D64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t *v4;
  uint64_t v5;

  v5 = *v4;
  *(_QWORD *)(v5 + 72) = a4();
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F7D9C()
{
  return sub_1AD63C308();
}

uint64_t sub_1AD5F7DB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F79E4(a1, a2, a3);
}

uint64_t sub_1AD5F7DD0(uint64_t a1, ValueMetadata *a2, unint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  size_t count;
  _QWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  xpc_object_t v13;
  void *v14;
  xpc_object_t xarray;
  uint64_t v18;
  __int128 v19;
  ValueMetadata *v20;
  unint64_t v21;
  size_t v22;

  v4 = v3;
  xarray = *(xpc_object_t *)(v3 + 8);
  count = xpc_array_get_count(xarray);
  *(_QWORD *)&v19 = 0x207865646E49;
  *((_QWORD *)&v19 + 1) = 0xE600000000000000;
  v22 = count;
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  v8 = *(_QWORD **)(v3 + 16);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v8 = sub_1AD3CACBC(0, v8[2] + 1, 1, v8);
  v10 = v8[2];
  v9 = v8[3];
  if (v10 >= v9 >> 1)
    v8 = sub_1AD3CACBC((_QWORD *)(v9 > 1), v10 + 1, 1, v8);
  v20 = &type metadata for XPCCodingKey;
  v21 = sub_1AD46F2A0();
  v11 = swift_allocObject();
  *(_QWORD *)&v19 = v11;
  *(_QWORD *)(v11 + 16) = 0x207865646E49;
  *(_QWORD *)(v11 + 24) = 0xE600000000000000;
  *(_QWORD *)(v11 + 32) = count;
  *(_BYTE *)(v11 + 40) = 0;
  v8[2] = v10 + 1;
  sub_1AD00FA24(&v19, (uint64_t)&v8[5 * v10 + 4]);
  *(_QWORD *)(v4 + 16) = v8;
  v20 = a2;
  v21 = a3;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v19);
  (*((void (**)(uint64_t *, uint64_t, ValueMetadata *))a2[-1].Description + 2))(boxed_opaque_existential_0, a1, a2);
  v13 = sub_1AD5F7194(&v19);
  if (v18)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
  }
  else
  {
    v14 = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v19);
    xpc_array_append_value(xarray, v14);
    swift_unknownObjectRelease();
  }
  return sub_1AD5F8400(v4);
}

uint64_t sub_1AD5F7F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  void *v7;
  size_t count;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  xpc_object_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v20;
  uint64_t v21;
  ValueMetadata *v22;
  unint64_t v23;
  size_t v24;

  v4 = v3;
  v7 = (void *)v3[1];
  count = xpc_array_get_count(v7);
  *(_QWORD *)&v20 = 0x207865646E49;
  *((_QWORD *)&v20 + 1) = 0xE600000000000000;
  v24 = count;
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  v9 = (_QWORD *)v3[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v9 = sub_1AD3CACBC(0, v9[2] + 1, 1, v9);
  v11 = v9[2];
  v10 = v9[3];
  if (v11 >= v10 >> 1)
    v9 = sub_1AD3CACBC((_QWORD *)(v10 > 1), v11 + 1, 1, v9);
  v22 = &type metadata for XPCCodingKey;
  v23 = sub_1AD46F2A0();
  v12 = swift_allocObject();
  *(_QWORD *)&v20 = v12;
  *(_QWORD *)(v12 + 16) = 0x207865646E49;
  *(_QWORD *)(v12 + 24) = 0xE600000000000000;
  *(_QWORD *)(v12 + 32) = count;
  *(_BYTE *)(v12 + 40) = 0;
  v9[2] = v11 + 1;
  sub_1AD00FA24(&v20, (uint64_t)&v9[5 * v11 + 4]);
  v4[2] = (uint64_t)v9;
  v13 = xpc_dictionary_create(0, 0, 0);
  xpc_array_append_value(v7, v13);
  v14 = *v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  *(_QWORD *)&v20 = sub_1AD5F6FB4(v14);
  *((_QWORD *)&v20 + 1) = v15;
  v21 = v16;
  v18 = type metadata accessor for _XPCKeyedEncodingContainer(0, a2, a3, v17);
  swift_retain();
  swift_unknownObjectRetain();
  swift_bridgeObjectRetain();
  MEMORY[0x1AF44BDF0](&unk_1AD698690, v18);
  sub_1AD63C0BC();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  swift_unknownObjectRelease();
  return sub_1AD5F8400((uint64_t)v4);
}

uint64_t sub_1AD5F81DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t *v2;
  void *v4;
  size_t count;
  _QWORD *v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  xpc_object_t v10;
  uint64_t v11;
  uint64_t result;
  __int128 v13;
  ValueMetadata *v14;
  unint64_t v15;
  size_t v16;

  v2 = v1;
  v4 = (void *)v1[1];
  count = xpc_array_get_count(v4);
  *(_QWORD *)&v13 = 0x207865646E49;
  *((_QWORD *)&v13 + 1) = 0xE600000000000000;
  v16 = count;
  sub_1AD63C0D4();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  v6 = (_QWORD *)v1[2];
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v6 = sub_1AD3CACBC(0, v6[2] + 1, 1, v6);
  v8 = v6[2];
  v7 = v6[3];
  if (v8 >= v7 >> 1)
    v6 = sub_1AD3CACBC((_QWORD *)(v7 > 1), v8 + 1, 1, v6);
  v14 = &type metadata for XPCCodingKey;
  v15 = sub_1AD46F2A0();
  v9 = swift_allocObject();
  *(_QWORD *)&v13 = v9;
  *(_QWORD *)(v9 + 16) = 0x207865646E49;
  *(_QWORD *)(v9 + 24) = 0xE600000000000000;
  *(_QWORD *)(v9 + 32) = count;
  *(_BYTE *)(v9 + 40) = 0;
  v6[2] = v8 + 1;
  sub_1AD00FA24(&v13, (uint64_t)&v6[5 * v8 + 4]);
  v1[2] = (uint64_t)v6;
  v10 = xpc_array_create(0, 0);
  xpc_array_append_value(v4, v10);
  v11 = *v2;
  swift_getObjectType();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (sub_1AD0E1E64() == 6)
  {
    a1[3] = &type metadata for _XPCUnkeyedEncodingContainer;
    a1[4] = sub_1AD5FA290();
    swift_unknownObjectRelease();
    *a1 = v11;
    a1[1] = v10;
    a1[2] = v6;
    return sub_1AD5F8400((uint64_t)v2);
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5F8400(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD **)(a1 + 16);
  if (!v2[2])
  {
    __break(1u);
LABEL_6:
    result = (uint64_t)sub_1AD48AD3C(v2);
    v2 = (_QWORD *)result;
    v4 = *(_QWORD *)(result + 16);
    if (v4)
      goto LABEL_4;
    goto LABEL_7;
  }
  v1 = a1;
  result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
    goto LABEL_6;
  v4 = v2[2];
  if (v4)
  {
LABEL_4:
    v5 = v4 - 1;
    result = __swift_destroy_boxed_opaque_existential_1((uint64_t)&v2[5 * v4 - 1]);
    v2[2] = v5;
    *(_QWORD *)(v1 + 16) = v2;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

size_t sub_1AD5F847C()
{
  uint64_t v0;

  return xpc_array_get_count(*(xpc_object_t *)(v0 + 8));
}

uint64_t sub_1AD5F8484()
{
  uint64_t v0;
  void *v1;
  xpc_object_t v2;

  v1 = *(void **)(v0 + 8);
  v2 = xpc_null_create();
  xpc_array_append_value(v1, v2);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F84CC(char a1)
{
  uint64_t v1;
  void *v2;
  xpc_object_t v3;

  v2 = *(void **)(v1 + 8);
  v3 = xpc_BOOL_create(a1 & 1);
  xpc_array_append_value(v2, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F8518()
{
  uint64_t v0;
  void *v1;
  uint64_t v2;
  xpc_object_t v3;

  v1 = *(void **)(v0 + 8);
  v2 = sub_1AD63B7B0();
  v3 = xpc_string_create((const char *)(v2 + 32));
  swift_release();
  xpc_array_append_value(v1, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F8574(double a1)
{
  uint64_t v1;
  void *v2;
  xpc_object_t v3;

  v2 = *(void **)(v1 + 8);
  v3 = xpc_double_create(a1);
  xpc_array_append_value(v2, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F85BC(float a1)
{
  uint64_t v1;
  void *v2;
  xpc_object_t v3;

  v2 = *(void **)(v1 + 8);
  v3 = xpc_double_create(a1);
  xpc_array_append_value(v2, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F8608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F881C(a1, a2, a3, (uint64_t (*)(void))MEMORY[0x1E0C86568]);
}

uint64_t sub_1AD5F8624(char a1)
{
  uint64_t v1;
  void *v2;
  xpc_object_t v3;

  v2 = *(void **)(v1 + 8);
  v3 = xpc_int64_create(a1);
  xpc_array_append_value(v2, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F8670(__int16 a1)
{
  uint64_t v1;
  void *v2;
  xpc_object_t v3;

  v2 = *(void **)(v1 + 8);
  v3 = xpc_int64_create(a1);
  xpc_array_append_value(v2, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F86BC(int a1)
{
  uint64_t v1;
  void *v2;
  xpc_object_t v3;

  v2 = *(void **)(v1 + 8);
  v3 = xpc_int64_create(a1);
  xpc_array_append_value(v2, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F8708()
{
  return sub_1AD63C284();
}

uint64_t sub_1AD5F871C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F881C(a1, a2, a3, (uint64_t (*)(void))MEMORY[0x1E0C867B0]);
}

uint64_t sub_1AD5F8738(unsigned __int8 a1)
{
  uint64_t v1;
  void *v2;
  xpc_object_t v3;

  v2 = *(void **)(v1 + 8);
  v3 = xpc_uint64_create(a1);
  xpc_array_append_value(v2, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F8784(unsigned __int16 a1)
{
  uint64_t v1;
  void *v2;
  xpc_object_t v3;

  v2 = *(void **)(v1 + 8);
  v3 = xpc_uint64_create(a1);
  xpc_array_append_value(v2, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F87D0(uint64_t value)
{
  uint64_t v1;
  void *v2;
  xpc_object_t v3;

  v2 = *(void **)(v1 + 8);
  v3 = xpc_uint64_create(value);
  xpc_array_append_value(v2, v3);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F881C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  void *v5;
  void *v6;

  v5 = *(void **)(v4 + 8);
  v6 = (void *)a4();
  xpc_array_append_value(v5, v6);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F8864()
{
  return sub_1AD63C290();
}

uint64_t sub_1AD5F8878(uint64_t a1, ValueMetadata *a2, unint64_t a3)
{
  return sub_1AD5F7DD0(a1, a2, a3);
}

uint64_t sub_1AD5F888C()
{
  return sub_1AD63C1AC();
}

uint64_t sub_1AD5F88B4()
{
  return sub_1AD63C1D0();
}

uint64_t sub_1AD5F88DC()
{
  return sub_1AD63C1C4();
}

uint64_t sub_1AD5F8904()
{
  return sub_1AD63C1DC();
}

uint64_t sub_1AD5F892C()
{
  return sub_1AD63C1E8();
}

uint64_t sub_1AD5F8954()
{
  return sub_1AD63C1F4();
}

uint64_t sub_1AD5F897C()
{
  return sub_1AD63C20C();
}

uint64_t sub_1AD5F89A4()
{
  return sub_1AD63C218();
}

uint64_t sub_1AD5F89CC()
{
  return sub_1AD63C224();
}

uint64_t sub_1AD5F89F4()
{
  return sub_1AD63C230();
}

uint64_t sub_1AD5F8A1C()
{
  return sub_1AD63C248();
}

uint64_t sub_1AD5F8A44()
{
  return sub_1AD63C200();
}

uint64_t sub_1AD5F8A6C()
{
  return sub_1AD63C23C();
}

uint64_t sub_1AD5F8A94()
{
  return sub_1AD63C254();
}

uint64_t sub_1AD5F8ABC()
{
  return sub_1AD63C260();
}

uint64_t sub_1AD5F8AE4()
{
  return sub_1AD63C26C();
}

uint64_t sub_1AD5F8B0C()
{
  return sub_1AD63C278();
}

uint64_t sub_1AD5F8B34()
{
  return sub_1AD63C1B8();
}

uint64_t sub_1AD5F8B6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v3 = *v1;
  v4 = (void *)v1[1];
  swift_retain();
  xpc_array_get_count(v4);
  v5 = type metadata accessor for _XPCSuperUnkeyedEncoder();
  swift_allocObject();
  swift_unknownObjectRetain();
  v6 = sub_1AD5FA370(v3);
  swift_release();
  swift_unknownObjectRelease();
  a1[3] = v5;
  result = sub_1ACFF9724((unint64_t *)&unk_1EECDEA58, (uint64_t (*)(uint64_t))type metadata accessor for _XPCSuperUnkeyedEncoder, (uint64_t)&unk_1AD6985D8);
  a1[4] = result;
  *a1 = v6;
  return result;
}

uint64_t sub_1AD5F8C1C(void *a1, _QWORD *a2, uint64_t a3, void *a4)
{
  uint64_t v6;

  __swift_project_boxed_opaque_existential_1(a2, a2[3]);
  sub_1AD63C548();
  v6 = sub_1AD63B7B0();
  swift_bridgeObjectRelease();
  xpc_dictionary_set_value(a4, (const char *)(v6 + 32), a1);
  return swift_release();
}

uint64_t sub_1AD5F8C94(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  void *v6;
  xpc_object_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v12[5];

  v5 = *v2;
  v6 = (void *)v2[1];
  v7 = xpc_null_create();
  v9 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a2 + 24);
  v12[3] = v9;
  v12[4] = v8;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(boxed_opaque_existential_0, a1, v9);
  sub_1AD5F8C1C(v7, v12, v5, v6);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
}

uint64_t sub_1AD5F8D40(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  xpc_object_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[5];

  v6 = *v3;
  v7 = (void *)v3[1];
  v8 = xpc_BOOL_create(a1 & 1);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v13[3] = v10;
  v13[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  sub_1AD5F8C1C(v8, v13, v6, v7);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1AD5F8DF0(char a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  xpc_object_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[5];

  v6 = *v3;
  v7 = (void *)v3[1];
  v8 = xpc_int64_create(a1);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v13[3] = v10;
  v13[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  sub_1AD5F8C1C(v8, v13, v6, v7);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1AD5F8EA0(__int16 a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  xpc_object_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[5];

  v6 = *v3;
  v7 = (void *)v3[1];
  v8 = xpc_int64_create(a1);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v13[3] = v10;
  v13[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  sub_1AD5F8C1C(v8, v13, v6, v7);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1AD5F8F50(int a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  xpc_object_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[5];

  v6 = *v3;
  v7 = (void *)v3[1];
  v8 = xpc_int64_create(a1);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v13[3] = v10;
  v13[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  sub_1AD5F8C1C(v8, v13, v6, v7);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1AD5F9000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t *v4;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14[5];

  v7 = *v4;
  v8 = (void *)v4[1];
  v9 = (void *)a4();
  v11 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(a3 + 24);
  v14[3] = v11;
  v14[4] = v10;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v14);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(boxed_opaque_existential_0, a2, v11);
  sub_1AD5F8C1C(v9, v14, v7, v8);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
}

uint64_t sub_1AD5F90AC(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  xpc_object_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[5];

  v6 = *v3;
  v7 = (void *)v3[1];
  v8 = xpc_uint64_create(a1);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v13[3] = v10;
  v13[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  sub_1AD5F8C1C(v8, v13, v6, v7);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1AD5F915C(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  xpc_object_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[5];

  v6 = *v3;
  v7 = (void *)v3[1];
  v8 = xpc_uint64_create(a1);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v13[3] = v10;
  v13[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  sub_1AD5F8C1C(v8, v13, v6, v7);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1AD5F920C(uint64_t value, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  xpc_object_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[5];

  v6 = *v3;
  v7 = (void *)v3[1];
  v8 = xpc_uint64_create(value);
  v10 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(a3 + 24);
  v13[3] = v10;
  v13[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a2, v10);
  sub_1AD5F8C1C(v8, v13, v6, v7);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1AD5F92BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v7;
  void *v8;
  uint64_t v9;
  xpc_object_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v15[5];

  v7 = *v4;
  v8 = (void *)v4[1];
  v9 = sub_1AD63B7B0();
  v10 = xpc_string_create((const char *)(v9 + 32));
  swift_release();
  v12 = *(_QWORD *)(a4 + 16);
  v11 = *(_QWORD *)(a4 + 24);
  v15[3] = v12;
  v15[4] = v11;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v15);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(boxed_opaque_existential_0, a3, v12);
  sub_1AD5F8C1C(v10, v15, v7, v8);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
}

uint64_t sub_1AD5F937C(uint64_t a1, uint64_t a2, double a3)
{
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  xpc_object_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[5];

  v6 = *v3;
  v7 = (void *)v3[1];
  v8 = xpc_double_create(a3);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v13[3] = v10;
  v13[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a1, v10);
  sub_1AD5F8C1C(v8, v13, v6, v7);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1AD5F9428(uint64_t a1, uint64_t a2, float a3)
{
  uint64_t *v3;
  uint64_t v6;
  void *v7;
  xpc_object_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13[5];

  v6 = *v3;
  v7 = (void *)v3[1];
  v8 = xpc_double_create(a3);
  v10 = *(_QWORD *)(a2 + 16);
  v9 = *(_QWORD *)(a2 + 24);
  v13[3] = v10;
  v13[4] = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(boxed_opaque_existential_0, a1, v10);
  sub_1AD5F8C1C(v8, v13, v6, v7);
  swift_unknownObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
}

uint64_t sub_1AD5F94D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  char *v17;
  _QWORD *v18;
  uint64_t *v19;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v21;
  unint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  void *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v29;
  xpc_object_t v30;
  void *v31;
  uint64_t *v32;
  _QWORD *v34;
  _QWORD v35[2];
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41[3];
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);

  v37 = a1;
  v6 = v5;
  v40 = a5;
  v9 = *(_QWORD *)(a3 + 16);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)v35 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v35 - v14;
  v16 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  v36 = v17;
  v44 = v16;
  ((void (*)(char *))v16)((char *)v35 - v14);
  v19 = v5 + 2;
  v18 = (_QWORD *)v5[2];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v19 = (uint64_t)v18;
  v39 = a4;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v18 = sub_1AD3CACBC(0, v18[2] + 1, 1, v18);
    *v19 = (uint64_t)v18;
  }
  v22 = v18[2];
  v21 = v18[3];
  v23 = v44;
  if (v22 >= v21 >> 1)
  {
    v34 = sub_1AD3CACBC((_QWORD *)(v21 > 1), v22 + 1, 1, v18);
    v23 = v44;
    *v19 = (uint64_t)v34;
  }
  v23(v13, v15, v9);
  v24 = *(_QWORD *)(a3 + 24);
  sub_1AD5FA2F8(v22, (uint64_t)v13, v19, v9, v24);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  v25 = (void *)v6[1];
  v35[1] = v6[2];
  v26 = *v6;
  v27 = v39;
  v42 = v39;
  v43 = v40;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v41);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16))(boxed_opaque_existential_0, v37, v27);
  v29 = v38;
  v30 = sub_1AD5F7194(v41);
  if (!v29)
  {
    v31 = v30;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
    v42 = v9;
    v43 = v24;
    v32 = __swift_allocate_boxed_opaque_existential_0(v41);
    v44((char *)v32, v36, v9);
    sub_1AD5F8C1C(v31, v41, v26, v25);
    swift_unknownObjectRelease();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  return sub_1AD5F8400((uint64_t)v6);
}

uint64_t sub_1AD5F96F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t *v6;
  uint64_t *v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  xpc_object_t v16;
  uint64_t v17;
  void *v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t *boxed_opaque_existential_0;
  void (*v22)(uint64_t *, uint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v39;
  uint64_t v40;
  uint64_t *v41;
  xpc_object_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[5];

  v7 = v6;
  v44 = a4;
  v45 = a5;
  v43 = a6;
  v10 = *(_QWORD *)(a3 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](a1);
  v39 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - v14;
  v16 = xpc_dictionary_create(0, 0, 0);
  v17 = *v6;
  v18 = (void *)v7[1];
  v41 = v7;
  v19 = v7 + 2;
  v20 = *(_QWORD *)(a3 + 24);
  v46[3] = v10;
  v46[4] = v20;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v46);
  v40 = v11;
  v22 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v11 + 16);
  v22(boxed_opaque_existential_0, a2, v10);
  v42 = v16;
  v23 = v20;
  sub_1AD5F8C1C(v16, v46, v17, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v46);
  v22((uint64_t *)v15, a2, v10);
  v24 = (_QWORD *)*v19;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v19 = (uint64_t)v24;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v24 = sub_1AD3CACBC(0, v24[2] + 1, 1, v24);
    *v19 = (uint64_t)v24;
  }
  v27 = v24[2];
  v26 = v24[3];
  if (v27 >= v26 >> 1)
    *v19 = (uint64_t)sub_1AD3CACBC((_QWORD *)(v26 > 1), v27 + 1, 1, v24);
  v28 = (uint64_t)v39;
  v22((uint64_t *)v39, (uint64_t)v15, v10);
  sub_1AD5FA2F8(v27, v28, v19, v10, v23);
  (*(void (**)(char *, uint64_t))(v40 + 8))(v15, v10);
  v29 = (uint64_t)v41;
  v30 = *v41;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  v31 = v30;
  v33 = v44;
  v32 = v45;
  v46[0] = sub_1AD5F6FB4(v31);
  v46[1] = v34;
  v46[2] = v35;
  v37 = type metadata accessor for _XPCKeyedEncodingContainer(0, v33, v32, v36);
  MEMORY[0x1AF44BDF0](&unk_1AD698690, v37);
  sub_1AD63C0BC();
  sub_1AD5F8400(v29);
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD5F9970@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  xpc_object_t v12;
  void *v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t *boxed_opaque_existential_0;
  void (*v18)(uint64_t *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  _QWORD *v22;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t result;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t *v36;
  uint64_t v37[5];

  v4 = v3;
  v32 = a1;
  v36 = a3;
  v6 = *(_QWORD *)(a2 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v33 = (char *)&v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v32 - v10;
  v12 = xpc_array_create(0, 0);
  v14 = *v4;
  v13 = (void *)v4[1];
  v35 = v4;
  v15 = v4 + 2;
  v16 = *(_QWORD *)(a2 + 24);
  v37[3] = v6;
  v37[4] = v16;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v37);
  v34 = v7;
  v18 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v7 + 16);
  v19 = v32;
  v18(boxed_opaque_existential_0, v32, v6);
  v20 = v16;
  v21 = v11;
  sub_1AD5F8C1C(v12, v37, v14, v13);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v37);
  v18((uint64_t *)v11, v19, v6);
  v22 = (_QWORD *)*v15;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v15 = (uint64_t)v22;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v22 = sub_1AD3CACBC(0, v22[2] + 1, 1, v22);
    *v15 = (uint64_t)v22;
  }
  v25 = v22[2];
  v24 = v22[3];
  if (v25 >= v24 >> 1)
    *v15 = (uint64_t)sub_1AD3CACBC((_QWORD *)(v24 > 1), v25 + 1, 1, v22);
  v26 = (uint64_t)v33;
  v18((uint64_t *)v33, (uint64_t)v21, v6);
  sub_1AD5FA2F8(v25, v26, v15, v6, v20);
  (*(void (**)(char *, uint64_t))(v34 + 8))(v21, v6);
  v27 = (uint64_t)v35;
  v28 = v35[2];
  v29 = *v35;
  swift_getObjectType();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  if (sub_1AD0E1E64() == 6)
  {
    v30 = v36;
    v36[3] = (uint64_t)&type metadata for _XPCUnkeyedEncodingContainer;
    v30[4] = sub_1AD5FA290();
    *v30 = v29;
    v30[1] = (uint64_t)v12;
    v30[2] = v28;
    sub_1AD5F8400(v27);
    return swift_unknownObjectRelease();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5F9C0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v4 = *v1;
  v3 = v1[1];
  v5 = type metadata accessor for _XPCSuperKeyedEncoder();
  v6 = swift_allocObject();
  swift_retain();
  swift_unknownObjectRetain();
  v7 = sub_1AD5FA478(v4, 0x7265707573, 0xE500000000000000, 0, 1, v3, v6);
  swift_release();
  swift_unknownObjectRelease();
  a1[3] = v5;
  result = sub_1ACFF9724(&qword_1EECDEA68, (uint64_t (*)(uint64_t))type metadata accessor for _XPCSuperKeyedEncoder, (uint64_t)&unk_1AD6985D8);
  a1[4] = result;
  *a1 = v7;
  return result;
}

uint64_t sub_1AD5F9CD0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v4 = *v1;
  v3 = v1[1];
  swift_retain();
  swift_unknownObjectRetain();
  v5 = sub_1AD5FA648(v4, v3);
  swift_release();
  swift_unknownObjectRelease();
  a1[3] = type metadata accessor for _XPCSuperKeyedEncoder();
  result = sub_1ACFF9724(&qword_1EECDEA68, (uint64_t (*)(uint64_t))type metadata accessor for _XPCSuperKeyedEncoder, (uint64_t)&unk_1AD6985D8);
  a1[4] = result;
  *a1 = v5;
  return result;
}

uint64_t sub_1AD5F9D6C(uint64_t a1, uint64_t a2)
{
  return sub_1AD5F8C94(a1, a2);
}

uint64_t sub_1AD5F9D80(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F8D40(a1, a2, a3);
}

uint64_t sub_1AD5F9D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5F92BC(a1, a2, a3, a4);
}

uint64_t sub_1AD5F9DA8(uint64_t a1, uint64_t a2, double a3)
{
  return sub_1AD5F937C(a1, a2, a3);
}

uint64_t sub_1AD5F9DBC(uint64_t a1, uint64_t a2, float a3)
{
  return sub_1AD5F9428(a1, a2, a3);
}

uint64_t sub_1AD5F9DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F9000(a1, a2, a3, (uint64_t (*)(void))MEMORY[0x1E0C86568]);
}

uint64_t sub_1AD5F9DEC(char a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F8DF0(a1, a2, a3);
}

uint64_t sub_1AD5F9E00(__int16 a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F8EA0(a1, a2, a3);
}

uint64_t sub_1AD5F9E14(int a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F8F50(a1, a2, a3);
}

uint64_t sub_1AD5F9E28()
{
  return sub_1AD63C41C();
}

uint64_t sub_1AD5F9E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F9000(a1, a2, a3, (uint64_t (*)(void))MEMORY[0x1E0C867B0]);
}

uint64_t sub_1AD5F9E58(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F90AC(a1, a2, a3);
}

uint64_t sub_1AD5F9E6C(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F915C(a1, a2, a3);
}

uint64_t sub_1AD5F9E80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD5F920C(a1, a2, a3);
}

uint64_t sub_1AD5F9E94()
{
  return sub_1AD63C428();
}

uint64_t sub_1AD5F9EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1AD5F94D8(a1, a2, a5, a3, a4);
}

uint64_t sub_1AD5F9ECC()
{
  return sub_1AD63C410();
}

uint64_t sub_1AD5F9EF4()
{
  return sub_1AD63C3A4();
}

uint64_t sub_1AD5F9F08()
{
  return sub_1AD63C398();
}

uint64_t sub_1AD5F9F1C()
{
  return sub_1AD63C3B0();
}

uint64_t sub_1AD5F9F34(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5FA098(a1, a2, a3, a4, MEMORY[0x1E0DED8E8]);
}

uint64_t sub_1AD5F9F50()
{
  return sub_1AD63C3BC();
}

uint64_t sub_1AD5F9F68(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5FA020(a1, a2, a3, a4, MEMORY[0x1E0DED908]);
}

uint64_t sub_1AD5F9F84(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5FA05C(a1, a2, a3, a4, MEMORY[0x1E0DED910]);
}

uint64_t sub_1AD5F9FA0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5FA098(a1, a2, a3, a4, MEMORY[0x1E0DED918]);
}

uint64_t sub_1AD5F9FBC()
{
  return sub_1AD63C3E0();
}

uint64_t sub_1AD5F9FD4()
{
  return sub_1AD63C3EC();
}

uint64_t sub_1AD5F9FEC()
{
  return sub_1AD63C3C8();
}

uint64_t sub_1AD5FA004(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5FA020(a1, a2, a3, a4, MEMORY[0x1E0DED928]);
}

uint64_t sub_1AD5FA020(__int16 a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(a1 & 0x1FF);
}

uint64_t sub_1AD5FA040(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5FA05C(a1, a2, a3, a4, MEMORY[0x1E0DED938]);
}

uint64_t sub_1AD5FA05C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  return a5(a1 & 0x1FFFF);
}

uint64_t sub_1AD5FA07C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5FA098(a1, a2, a3, a4, MEMORY[0x1E0DED940]);
}

uint64_t sub_1AD5FA098(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  return a5(a1 | ((HIDWORD(a1) & 1) << 32));
}

uint64_t sub_1AD5FA0C0()
{
  return sub_1AD63C3F8();
}

uint64_t sub_1AD5FA0D8()
{
  return sub_1AD63C404();
}

uint64_t sub_1AD5FA0F0()
{
  return sub_1AD63C3D4();
}

uint64_t sub_1AD5FA118@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  return sub_1AD5F96F8(a1, a2, a5, a3, a4, a6);
}

uint64_t type metadata accessor for _XPCSuperKeyedEncoder()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _XPCSuperUnkeyedEncoder()
{
  return objc_opt_self();
}

uint64_t storeEnumTagSinglePayload for XPCEncoder.Options(_WORD *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 65281 <= 0xFFFEFFFF)
    v3 = 2;
  else
    v3 = 4;
  if (a3 + 65281 < 0xFF0000)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD5FA1C8 + 4 * byte_1AD698319[v4]))();
  *a1 = a2 - 255;
  return ((uint64_t (*)(void))((char *)sub_1AD5FA1FC + 4 * byte_1AD698314[v4]))();
}

uint64_t sub_1AD5FA1FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AD5FA204(uint64_t result, int a2)
{
  *(_WORD *)(result + 2) = 0;
  if (a2)
    JUMPOUT(0x1AD5FA20CLL);
  return result;
}

uint64_t sub_1AD5FA218(uint64_t result, int a2)
{
  *(_DWORD *)(result + 2) = 0;
  if (!a2)
    JUMPOUT(0x1AD5FA220);
  *(_BYTE *)(result + 1) = a2 + 1;
  return result;
}

uint64_t sub_1AD5FA224(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 2) = v1;
  return result;
}

uint64_t sub_1AD5FA22C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 2) = v1;
  return result;
}

ValueMetadata *type metadata accessor for XPCEncoder.Options()
{
  return &type metadata for XPCEncoder.Options;
}

uint64_t sub_1AD5FA248(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E73E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_1AD5FA290()
{
  unint64_t result;

  result = qword_1ED2E21C0;
  if (!qword_1ED2E21C0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698808, &type metadata for _XPCUnkeyedEncodingContainer);
    atomic_store(result, (unint64_t *)&qword_1ED2E21C0);
  }
  return result;
}

uint64_t type metadata accessor for _XPCKeyedEncodingContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _XPCKeyedEncodingContainer);
}

ValueMetadata *type metadata accessor for _XPCUnkeyedEncodingContainer()
{
  return &type metadata for _XPCUnkeyedEncodingContainer;
}

uint64_t sub_1AD5FA2F8(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;

  v13 = a4;
  v14 = a5;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(boxed_opaque_existential_0, a2, a4);
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return sub_1AD00FA24(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_1AD5FA370(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  char v4;
  char v5;
  uint64_t v6;
  _BYTE v7[40];

  swift_getObjectType();
  result = sub_1AD0E1E64();
  if (result == 6)
  {
    v4 = *(_BYTE *)(a1 + 80);
    v5 = *(_BYTE *)(a1 + 81);
    swift_beginAccess();
    sub_1AD5F68AC(a1 + 32, (uint64_t)v7);
    v6 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 16) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(v1 + 24) = sub_1AD4391D4(v6);
    *(_OWORD *)(v1 + 48) = 0u;
    *(_OWORD *)(v1 + 64) = 0u;
    *(_OWORD *)(v1 + 32) = 0u;
    *(_BYTE *)(v1 + 80) = v4;
    *(_BYTE *)(v1 + 81) = v5;
    swift_beginAccess();
    sub_1AD5FA248((uint64_t)v7, v1 + 32);
    swift_endAccess();
    sub_1AD5F6A5C((uint64_t)v7);
    return v1;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5FA454()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD5FA478(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result;
  char v10;
  char v11;
  uint64_t v12;
  _BYTE v13[40];

  swift_bridgeObjectRelease();
  swift_getObjectType();
  result = sub_1AD0E1E64();
  if (result == 7)
  {
    v10 = *(_BYTE *)(a1 + 80);
    v11 = *(_BYTE *)(a1 + 81);
    swift_beginAccess();
    sub_1AD5F68AC(a1 + 32, (uint64_t)v13);
    v12 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a7 + 16) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a7 + 24) = sub_1AD4391D4(v12);
    *(_OWORD *)(a7 + 48) = 0u;
    *(_OWORD *)(a7 + 64) = 0u;
    *(_OWORD *)(a7 + 32) = 0u;
    *(_BYTE *)(a7 + 80) = v10;
    *(_BYTE *)(a7 + 81) = v11;
    swift_beginAccess();
    sub_1AD5FA248((uint64_t)v13, a7 + 32);
    swift_endAccess();
    sub_1AD5F6A5C((uint64_t)v13);
    return a7;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5FA564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  char v6;
  char v7;
  uint64_t v8;
  _BYTE v9[40];

  swift_getObjectType();
  result = sub_1AD0E1E64();
  if (result == 7)
  {
    v6 = *(_BYTE *)(a1 + 80);
    v7 = *(_BYTE *)(a1 + 81);
    swift_beginAccess();
    sub_1AD5F68AC(a1 + 32, (uint64_t)v9);
    v8 = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a3 + 16) = MEMORY[0x1E0DEE9D8];
    *(_QWORD *)(a3 + 24) = sub_1AD4391D4(v8);
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_BYTE *)(a3 + 80) = v6;
    *(_BYTE *)(a3 + 81) = v7;
    swift_beginAccess();
    sub_1AD5FA248((uint64_t)v9, a3 + 32);
    swift_endAccess();
    sub_1AD5F6A5C((uint64_t)v9);
    return a3;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5FA648(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  type metadata accessor for _XPCSuperKeyedEncoder();
  v4 = swift_allocObject();
  return sub_1AD5FA564(a1, a2, v4);
}

uint64_t BitmapDecoder.__allocating_init(configuration:)()
{
  return swift_allocObject();
}

uint64_t BitmapDecoder.decode(from:)(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;

  v5 = a1;
  v6 = a2;
  sub_1AD0040A0(a1, a2);
  sub_1AD00FA3C((uint64_t)&v5);
  v3 = v2;
  sub_1AD00412C(v5, v6);
  return v3;
}

uint64_t BitmapDecoder.decode(from:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  unint64_t v9;

  v2 = sub_1AD63AF40();
  if (!v0)
  {
    v4 = v2;
    v5 = v3;
    v8 = v2;
    v9 = v3;
    sub_1AD0040A0(v2, v3);
    sub_1AD00FA3C((uint64_t)&v8);
    v1 = v6;
    sub_1AD00412C(v8, v9);
    sub_1AD00412C(v4, v5);
  }
  return v1;
}

uint64_t BitmapEncoder.__allocating_init(configuration:maxPixelDimension:)(uint64_t a1, char a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  *(_BYTE *)(v4 + 24) = 1;
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = a1;
  *(_BYTE *)(v4 + 24) = a2 & 1;
  return v4;
}

uint64_t BitmapEncoder.__allocating_init(configuration:)()
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 24) = 1;
  return result;
}

uint64_t BitmapEncoder.maxPixelDimension.getter()
{
  uint64_t v0;

  swift_beginAccess();
  return *(_QWORD *)(v0 + 16);
}

uint64_t BitmapEncoder.maxPixelDimension.setter(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t (*BitmapEncoder.maxPixelDimension.modify())()
{
  swift_beginAccess();
  return j__swift_endAccess_0;
}

uint64_t BitmapEncoder.init(configuration:)()
{
  uint64_t v0;
  uint64_t result;

  result = v0;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  return result;
}

uint64_t BitmapEncoder.init(configuration:maxPixelDimension:)(uint64_t a1, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = 0;
  *(_BYTE *)(v2 + 24) = 1;
  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_BYTE *)(v2 + 24) = a2 & 1;
  return v2;
}

void BitmapEncoder.encode(imageSource:to:)(CGImageSource *a1)
{
  sub_1AD5FBA18(a1);
}

void BitmapEncoder.encode(image:to:)(CGImage *a1)
{
  uint64_t v1;
  int64_t Width;
  int64_t Height;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;

  Width = CGImageGetWidth(a1);
  Height = CGImageGetHeight(a1);
  sub_1AD5FB974(a1, (double)Width, (double)Height);
  if (!v1)
  {
    v7 = v5;
    v8 = v6;
    sub_1AD63AFC4();
    sub_1AD00412C(v7, v8);
  }
}

const __CFDictionary *BitmapEncoder.encode(imageSource:)(CGImageSource *a1)
{
  uint64_t v1;
  uint64_t v2;
  double v3;
  double v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  double v11;
  double v12;
  double v13;
  double v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  const __CFString *v21;
  __CFString *v22;
  uint64_t v23;
  const __CFDictionary *v24;
  const __CFDictionary *v25;
  double v26;
  double v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t inited;
  uint64_t v34;
  void *v35;
  uint64_t v36;
  void **v37;
  void *v38;
  void **v39;
  void *v40;
  void **v41;
  void *v42;
  void **v43;
  void *v44;
  void **v45;
  void *v46;
  uint64_t v47;
  uint64_t v48;
  id v49;
  id v50;
  id v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  CGImageRef ImageAtIndex;
  const __CFDictionary *v59;
  uint64_t v60;
  __int16 v61;
  const __CFDictionary *v62;
  unint64_t v63;
  uint64_t v64;
  _QWORD v65[5];
  CGImageSourceRef v66;

  v2 = v1;
  v66 = a1;
  sub_1AD33B66C((uint64_t)v65);
  v3 = *(double *)&v65[2];
  v4 = *(double *)&v65[3];
  sub_1AD63BB64();
  if (qword_1ED2DAD30 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1AD648160;
  *(double *)v65 = v3;
  *(double *)&v65[1] = v4;
  type metadata accessor for CGSize(0);
  v6 = sub_1AD63B7A4();
  v8 = v7;
  *(_QWORD *)(v5 + 56) = MEMORY[0x1E0DEA968];
  v9 = sub_1AD0469B8();
  *(_QWORD *)(v5 + 64) = v9;
  *(_QWORD *)(v5 + 32) = v6;
  *(_QWORD *)(v5 + 40) = v8;
  sub_1AD63B48C();
  swift_bridgeObjectRelease();
  swift_beginAccess();
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    v10 = MEMORY[0x1E0DEA968];
    sub_1AD63BB64();
    sub_1AD63B48C();
    v11 = v3;
    v12 = v4;
  }
  else
  {
    sub_1AD0D2488(*(_QWORD *)(v1 + 16), v3, v4);
    v11 = v13;
    v12 = v14;
    sub_1AD63BB64();
    v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_1AD648170;
    v16 = sub_1AD63B7A4();
    v17 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v15 + 64) = v9;
    *(_QWORD *)(v15 + 32) = v16;
    *(_QWORD *)(v15 + 40) = v18;
    if ((*(_BYTE *)(v2 + 24) & 1) != 0)
    {
      v19 = 0xE300000000000000;
      v20 = 7104878;
    }
    else
    {
      v20 = sub_1AD63B7A4();
    }
    v10 = v17;
    *(_QWORD *)(v15 + 96) = v17;
    *(_QWORD *)(v15 + 104) = v9;
    *(_QWORD *)(v15 + 72) = v20;
    *(_QWORD *)(v15 + 80) = v19;
    sub_1AD63B48C();
    swift_bridgeObjectRelease();
  }
  v21 = (id)CGImageSourceGetType(v66);
  if (v21)
  {
    v22 = (__CFString *)v21;
    v23 = sub_1AD63B768();
    v25 = v24;

  }
  else
  {
    v23 = 0;
    v25 = 0;
  }
  type metadata accessor for EncoderUtils();
  v26 = sub_1AD0D0B8C(v23, (uint64_t)v25, v3, v4, v11, v12);
  if (v64)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    v28 = v26;
    v62 = v25;
    sub_1AD63BB64();
    v29 = swift_allocObject();
    *(_OWORD *)(v29 + 16) = xmmword_1AD648160;
    v30 = sub_1AD63B7A4();
    v31 = v10;
    *(_QWORD *)(v29 + 56) = v10;
    *(_QWORD *)(v29 + 64) = v9;
    v63 = v9;
    *(_QWORD *)(v29 + 32) = v30;
    *(_QWORD *)(v29 + 40) = v32;
    sub_1AD63B48C();
    swift_bridgeObjectRelease();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2E10);
    inited = swift_initStackObject();
    v34 = inited;
    *(_OWORD *)(inited + 16) = xmmword_1AD679140;
    v35 = (void *)*MEMORY[0x1E0CBD288];
    *(_QWORD *)(inited + 32) = *MEMORY[0x1E0CBD288];
    v36 = MEMORY[0x1E0DEAFA0];
    v37 = (void **)MEMORY[0x1E0CBD178];
    *(_BYTE *)(inited + 40) = 1;
    v38 = *v37;
    *(_QWORD *)(inited + 64) = v36;
    *(_QWORD *)(inited + 72) = v38;
    v39 = (void **)MEMORY[0x1E0CBD190];
    *(_BYTE *)(inited + 80) = 0;
    v40 = *v39;
    *(_QWORD *)(inited + 104) = v36;
    *(_QWORD *)(inited + 112) = v40;
    v41 = (void **)MEMORY[0x1E0CBD2B8];
    *(_BYTE *)(inited + 120) = 1;
    v42 = *v41;
    *(_QWORD *)(inited + 144) = v36;
    *(_QWORD *)(inited + 152) = v42;
    v43 = (void **)MEMORY[0x1E0CBD240];
    *(_BYTE *)(inited + 160) = 0;
    v44 = *v43;
    *(_QWORD *)(inited + 184) = v36;
    *(_QWORD *)(inited + 192) = v44;
    v45 = (void **)MEMORY[0x1E0CBD290];
    *(_BYTE *)(inited + 200) = 0;
    v46 = *v45;
    *(_QWORD *)(inited + 224) = v36;
    *(_QWORD *)(inited + 232) = v46;
    v47 = MEMORY[0x1E0DEB418];
    v48 = *(_QWORD *)&v28;
    if (v28 <= 0.0)
      v48 = 2;
    else
      v47 = MEMORY[0x1E0DEF040];
    *(_QWORD *)(inited + 264) = v47;
    *(_QWORD *)(inited + 240) = v48;
    v49 = v35;
    v50 = v38;
    v51 = v40;
    v52 = v42;
    v53 = v44;
    v54 = v46;
    sub_1AD438F14(v34);
    sub_1AD63BB64();
    v55 = swift_allocObject();
    *(_OWORD *)(v55 + 16) = xmmword_1AD648160;
    type metadata accessor for CFString(0);
    sub_1AD32EFC0();
    sub_1AD63B69C();
    v56 = sub_1AD63B7A4();
    *(_QWORD *)(v55 + 56) = v31;
    *(_QWORD *)(v55 + 64) = v63;
    *(_QWORD *)(v55 + 32) = v56;
    *(_QWORD *)(v55 + 40) = v57;
    sub_1AD63B48C();
    swift_bridgeObjectRelease();
    v25 = (const __CFDictionary *)sub_1AD63B678();
    ImageAtIndex = CGImageSourceCreateImageAtIndex(v66, 0, v25);
    swift_bridgeObjectRelease();

    if (ImageAtIndex)
    {
      swift_bridgeObjectRelease();
      sub_1AD5FB974(ImageAtIndex, v11, v12);
      v25 = v59;

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v62)
      {
        swift_bridgeObjectRelease();
        sub_1AD0D0080();
        swift_allocError();
        v61 = 1281;
      }
      else
      {
        sub_1AD0D0080();
        swift_allocError();
        v61 = 1537;
      }
      *(_WORD *)v60 = v61;
      *(_QWORD *)(v60 + 8) = 0;
      swift_willThrow();
    }
  }
  return v25;
}

void BitmapEncoder.encode(image:destinationSize:orientation:)(void *a1, double a2, double a3)
{
  sub_1AD5FB974(a1, a2, a3);
}

void BitmapEncoder.encode(image:)(CGImage *a1)
{
  int64_t Width;
  int64_t Height;

  Width = CGImageGetWidth(a1);
  Height = CGImageGetHeight(a1);
  sub_1AD5FB974(a1, (double)Width, (double)Height);
}

uint64_t BitmapEncoder.encode(pixelBuffer:to:)()
{
  uint64_t v0;

  sub_1AD0D0080();
  swift_allocError();
  *(_WORD *)v0 = 1281;
  *(_QWORD *)(v0 + 8) = 0;
  return swift_willThrow();
}

uint64_t BitmapEncoder.encode(pixelBuffer:)()
{
  uint64_t v0;

  sub_1AD0D0080();
  swift_allocError();
  *(_WORD *)v0 = 1281;
  *(_QWORD *)(v0 + 8) = 0;
  return swift_willThrow();
}

uint64_t BitmapEncoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BitmapEncoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_1AD5FB17C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = 0;
  *(_BYTE *)(result + 24) = 1;
  *a1 = result;
  return result;
}

void sub_1AD5FB1B8(CGImageSource *a1)
{
  sub_1AD5FBA18(a1);
}

const __CFDictionary *sub_1AD5FB1CC(CGImageSource *a1)
{
  return BitmapEncoder.encode(imageSource:)(a1);
}

void sub_1AD5FB1EC(CGImage *a1)
{
  uint64_t v1;
  int64_t Width;
  int64_t Height;
  uint64_t v5;
  uint64_t v6;
  CGImage *v7;
  __int128 v8;
  __int128 v9;
  __int128 v10;

  Width = CGImageGetWidth(a1);
  Height = CGImageGetHeight(a1);
  sub_1AD14010C((double)Width, (double)Height);
  if (!v1)
  {
    *(_QWORD *)&v9 = sub_1AD0E1910(v5);
    *((_QWORD *)&v9 + 1) = v6;
    sub_1AD5FB70C((uint64_t)&v9);
    v10 = v9;
    v7 = a1;
    sub_1AD5FB3B4((uint64_t)&v10);
    v8 = v10;
    sub_1AD63AFC4();
    sub_1AD00412C(v8, *((unint64_t *)&v8 + 1));
  }
}

void sub_1AD5FB2D4(CGImage *a1)
{
  uint64_t v1;
  int64_t Width;
  int64_t Height;
  uint64_t v5;
  uint64_t v6;
  CGImage *v7;
  __int128 v8;
  __int128 v9;

  Width = CGImageGetWidth(a1);
  Height = CGImageGetHeight(a1);
  sub_1AD14010C((double)Width, (double)Height);
  if (!v1)
  {
    *(_QWORD *)&v8 = sub_1AD0E1910(v5);
    *((_QWORD *)&v8 + 1) = v6;
    sub_1AD5FB70C((uint64_t)&v8);
    v9 = v8;
    v7 = a1;
    sub_1AD5FB3B4((uint64_t)&v9);
  }
}

uint64_t BitmapDecoder.init(configuration:)()
{
  uint64_t v0;

  return v0;
}

uint64_t BitmapDecoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BitmapDecoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void sub_1AD5FB3B4(uint64_t a1)
{
  __asm { BR              X12 }
}

void sub_1AD5FB424(uint64_t a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  void *v3;
  int v4;
  double v5;
  double v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned __int8 v14;
  unsigned __int8 v15;
  unsigned __int8 v16;

  v12 = v1;
  LOWORD(v13) = a1;
  BYTE2(v13) = BYTE2(a1);
  HIBYTE(v13) = BYTE3(a1);
  v14 = BYTE4(a1);
  v15 = BYTE5(a1);
  v16 = BYTE6(a1);
  sub_1AD140A94(v6, v5, (uint64_t)v3, (uint64_t)&v12, (uint64_t)&v12 + BYTE6(a1), v4);
  v7 = v12;
  v8 = v13;
  v9 = v14;
  v10 = v15;
  v11 = v16;

  *v2 = v7;
  v2[1] = v8 | (v9 << 32) | (v10 << 40) | (v11 << 48);
}

void sub_1AD5FB648(int *a1, void *a2, int a3, double a4, double a5)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  sub_1AD63AF64();
  v10 = *a1;
  v11 = a1[1];
  if ((int)v11 < (int)v10)
  {
    __break(1u);
    goto LABEL_9;
  }
  v12 = sub_1AD63ADA8();
  if (!v12)
  {
LABEL_10:
    __break(1u);
    return;
  }
  v13 = v12;
  v14 = sub_1AD63ADCC();
  v15 = v10 - v14;
  if (__OFSUB__(v10, v14))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v16 = v11 - v10;
  v17 = sub_1AD63ADC0();
  if (v17 >= v16)
    v18 = v16;
  else
    v18 = v17;
  sub_1AD140A94(a4, a5, (uint64_t)a2, v13 + v15, v13 + v15 + v18, a3);

}

void sub_1AD5FB70C(uint64_t a1)
{
  __asm { BR              X13 }
}

void *sub_1AD5FB768(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t __b, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  int v27;
  void *result;
  unint64_t v29;
  uint64_t v30;
  unsigned int v31;
  unsigned __int8 v32;
  unsigned __int8 v33;
  unsigned __int8 v34;

  v30 = v25;
  LOWORD(v31) = v24;
  BYTE2(v31) = BYTE2(v24);
  HIBYTE(v31) = BYTE3(v24);
  v32 = BYTE4(v24);
  v33 = BYTE5(v24);
  v34 = BYTE6(v24);
  result = memset(&v30, v27, BYTE6(v24));
  v29 = v31 | ((unint64_t)v32 << 32) | ((unint64_t)v33 << 40) | ((unint64_t)v34 << 48);
  *v26 = v30;
  v26[1] = v29;
  return result;
}

char *sub_1AD5FB8F4(int *a1, int a2)
{
  char *result;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  size_t v11;

  result = (char *)sub_1AD63AF64();
  v5 = *a1;
  v6 = a1[1];
  if ((int)v6 < (int)v5)
  {
    __break(1u);
    goto LABEL_9;
  }
  result = (char *)sub_1AD63ADA8();
  if (!result)
  {
LABEL_10:
    __break(1u);
    return result;
  }
  v7 = result;
  result = (char *)sub_1AD63ADCC();
  v8 = v5 - (_QWORD)result;
  if (__OFSUB__(v5, result))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = v6 - v5;
  v10 = sub_1AD63ADC0();
  if (v10 >= v9)
    v11 = v9;
  else
    v11 = v10;
  return (char *)memset(&v7[v8], a2, v11);
}

void sub_1AD5FB974(void *a1, double a2, double a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id v7;
  __int128 v8;
  __int128 v9;

  sub_1AD14010C(a2, a3);
  if (!v3)
  {
    *(_QWORD *)&v8 = sub_1AD0E1910(v5);
    *((_QWORD *)&v8 + 1) = v6;
    sub_1AD5FB70C((uint64_t)&v8);
    v9 = v8;
    v7 = a1;
    sub_1AD5FB3B4((uint64_t)&v9);
  }
}

void sub_1AD5FBA18(CGImageSource *a1)
{
  uint64_t v1;
  CGImage *ImageAtIndex;
  CGImage *v3;
  int64_t Width;
  int64_t Height;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  ImageAtIndex = CGImageSourceCreateImageAtIndex(a1, 0, 0);
  if (ImageAtIndex)
  {
    v3 = ImageAtIndex;
    Width = CGImageGetWidth(ImageAtIndex);
    Height = CGImageGetHeight(v3);
    sub_1AD5FB974(v3, (double)Width, (double)Height);
    if (!v1)
    {
      v8 = v6;
      v9 = v7;
      sub_1AD63AFC4();
      sub_1AD00412C(v8, v9);
    }

  }
  else
  {
    sub_1AD0D0080();
    swift_allocError();
    *(_WORD *)v10 = 1281;
    *(_QWORD *)(v10 + 8) = 0;
    swift_willThrow();
  }
}

uint64_t type metadata accessor for BitmapEncoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for BitmapEncoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BitmapEncoder.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t dispatch thunk of BitmapEncoder.__allocating_init(configuration:maxPixelDimension:)(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 96))(a1, a2 & 1);
}

uint64_t type metadata accessor for BitmapDecoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for BitmapDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BitmapDecoder.__allocating_init(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_1AD5FBB70@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD5FBBA0(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD5FBBF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD5FBC68()
{
  sub_1AD5FD7BC();
  return sub_1AD63B930();
}

uint64_t sub_1AD5FBCC4()
{
  sub_1AD5FD7BC();
  return sub_1AD63B8D0();
}

uint64_t (*sub_1AD5FBD10())()
{
  return nullsub_1;
}

uint64_t sub_1AD5FBD20()
{
  sub_1AD5FD778();
  return sub_1AD63B930();
}

uint64_t sub_1AD5FBD7C()
{
  sub_1AD5FD778();
  return sub_1AD63B8D0();
}

uint64_t (*sub_1AD5FBDC8())()
{
  return nullsub_1;
}

unint64_t sub_1AD5FBDD8@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t sub_1AD5FBDEC@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD5FBDD8(*a1, a2);
}

uint64_t sub_1AD5FBDF4()
{
  sub_1AD5FD734();
  return sub_1AD63B930();
}

uint64_t sub_1AD5FBE50()
{
  sub_1AD5FD734();
  return sub_1AD63B8D0();
}

uint64_t (*sub_1AD5FBE9C())()
{
  return nullsub_1;
}

unint64_t sub_1AD5FBEAC@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD5FBEC0()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_1AD5FBEC8@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD5FBEAC(*a1, a2);
}

uint64_t sub_1AD5FBED0()
{
  sub_1AD5FD6F0();
  return sub_1AD63B930();
}

uint64_t sub_1AD5FBF2C()
{
  sub_1AD5FD6F0();
  return sub_1AD63B8D0();
}

void sub_1AD5FBF78(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *sub_1AD5FBF84(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*sub_1AD5FBF90())()
{
  return nullsub_1;
}

uint64_t (*sub_1AD5FBFA4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD34BDE0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD5FC02C(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34BF10;
}

uint64_t sub_1AD5FC090@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IMDispositionNotification() + 20);
  v4 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t type metadata accessor for IMDispositionNotification()
{
  uint64_t result;

  result = qword_1EECDEAA0;
  if (!qword_1EECDEAA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD5FC114(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for IMDispositionNotification() + 20);
  v4 = sub_1AD63B03C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*sub_1AD5FC15C())(_QWORD)
{
  type metadata accessor for IMDispositionNotification();
  return nullsub_1;
}

uint64_t sub_1AD5FC184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IMDispositionNotification() + 24);
  return sub_1AD009710(v3, a1);
}

uint64_t sub_1AD5FC1B4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IMDispositionNotification() + 24);
  return sub_1AD5FC1E4(a1, v3);
}

uint64_t sub_1AD5FC1E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*sub_1AD5FC22C())(_QWORD)
{
  type metadata accessor for IMDispositionNotification();
  return nullsub_1;
}

uint64_t sub_1AD5FC254@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IMDispositionNotification() + 28);
  return sub_1AD009710(v3, a1);
}

uint64_t sub_1AD5FC284(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IMDispositionNotification() + 28);
  return sub_1AD5FC1E4(a1, v3);
}

uint64_t (*sub_1AD5FC2B4())(_QWORD)
{
  type metadata accessor for IMDispositionNotification();
  return nullsub_1;
}

uint64_t sub_1AD5FC2DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for IMDispositionNotification();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t sub_1AD5FC30C(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for IMDispositionNotification();
  *(_BYTE *)(v1 + *(int *)(result + 32)) = v2;
  return result;
}

uint64_t (*sub_1AD5FC338())(_QWORD)
{
  type metadata accessor for IMDispositionNotification();
  return nullsub_1;
}

uint64_t sub_1AD5FC360@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  unsigned int v4;

  result = type metadata accessor for IMDispositionNotification();
  v4 = *(unsigned __int8 *)(v1 + *(int *)(result + 32));
  if (v4 >= 0x40)
    LOBYTE(v4) = 4;
  *a1 = v4;
  return result;
}

uint64_t sub_1AD5FC39C@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  unsigned int v4;
  BOOL v5;
  char v6;

  result = type metadata accessor for IMDispositionNotification();
  v4 = *(unsigned __int8 *)(v1 + *(int *)(result + 32));
  v5 = (v4 & 0xC0) != 0x40 || v4 >= 0xFC;
  v6 = v4 & 0x3F;
  if (v5)
    v6 = 3;
  *a1 = v6;
  return result;
}

uint64_t sub_1AD5FC3E8@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  unsigned int v4;
  BOOL v5;
  char v6;

  result = type metadata accessor for IMDispositionNotification();
  v4 = *(unsigned __int8 *)(v1 + *(int *)(result + 32));
  v5 = (v4 & 0xC0) != 0x80 || v4 >= 0xFC;
  v6 = v4 & 0x3F;
  if (v5)
    v6 = 4;
  *a1 = v6;
  return result;
}

uint64_t sub_1AD5FC434@<X0>(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  char v4;

  result = type metadata accessor for IMDispositionNotification();
  v4 = *(_BYTE *)(v1 + *(int *)(result + 32)) & 0x3F;
  if ((*(_BYTE *)(v1 + *(int *)(result + 32)) + 64) >= 0x3Cu)
    v4 = 4;
  *a1 = v4;
  return result;
}

unint64_t sub_1AD5FC480()
{
  unint64_t result;

  result = qword_1EECDEA70;
  if (!qword_1EECDEA70)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6989F0, &type metadata for IMDispositionNotification.DeliveryNotification.Status);
    atomic_store(result, (unint64_t *)&qword_1EECDEA70);
  }
  return result;
}

uint64_t sub_1AD5FC4C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A27A8, (uint64_t (*)(void))sub_1AD2A2654);
}

unint64_t sub_1AD5FC4DC()
{
  unint64_t result;

  result = qword_1EECDEA78;
  if (!qword_1EECDEA78)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698AFC, &type metadata for IMDispositionNotification.InterworkingNotification.Status);
    atomic_store(result, (unint64_t *)&qword_1EECDEA78);
  }
  return result;
}

uint64_t sub_1AD5FC520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A26DC, (uint64_t (*)(void))sub_1AD2A2588);
}

unint64_t sub_1AD5FC538()
{
  unint64_t result;

  result = qword_1EECDEA80;
  if (!qword_1EECDEA80)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698C08, &type metadata for IMDispositionNotification.DisplayNotification.Status);
    atomic_store(result, (unint64_t *)&qword_1EECDEA80);
  }
  return result;
}

uint64_t sub_1AD5FC57C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A2764, (uint64_t (*)(void))sub_1AD2A2610);
}

unint64_t sub_1AD5FC594()
{
  unint64_t result;

  result = qword_1EECDEA88;
  if (!qword_1EECDEA88)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698D14, &type metadata for IMDispositionNotification.ProcessingNotification.Status);
    atomic_store(result, (unint64_t *)&qword_1EECDEA88);
  }
  return result;
}

uint64_t sub_1AD5FC5D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2A2720, (uint64_t (*)(void))sub_1AD2A25CC);
}

uint64_t sub_1AD5FC5EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28DB94, (uint64_t (*)(void))sub_1AD28DBD8);
}

uint64_t sub_1AD5FC600(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD5FC64C(&qword_1EECDEA90, (uint64_t)&unk_1AD6523E8);
  result = sub_1AD5FC64C(&qword_1EECDEA98, (uint64_t)&unk_1AD652410);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD5FC64C(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IMDispositionNotification();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD5FC690(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD5FC6CC@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

_QWORD *sub_1AD5FC700(_QWORD *a1, char *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *(_QWORD *)a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v9 = *((_QWORD *)a2 + 1);
    v8 = *((_QWORD *)a2 + 2);
    *a1 = v5;
    a1[1] = v9;
    v10 = *((_QWORD *)a2 + 3);
    a1[2] = v8;
    a1[3] = v10;
    v11 = a3[5];
    v12 = (char *)a1 + v11;
    v13 = &a2[v11];
    v14 = sub_1AD63B03C();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_retain();
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    v16 = a3[6];
    v17 = (char *)a1 + v16;
    v18 = &a2[v16];
    v19 = sub_1AD63AF28();
    v20 = *(_QWORD *)(v19 - 8);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
    if (v21(v18, 1, v19))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v17, v18, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v17, 0, 1, v19);
    }
    v23 = a3[7];
    v24 = (char *)a1 + v23;
    v25 = &a2[v23];
    if (v21(&a2[v23], 1, v19))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v24, v25, v19);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v24, 0, 1, v19);
    }
    *((_BYTE *)a1 + a3[8]) = a2[a3[8]];
  }
  return a1;
}

uint64_t sub_1AD5FC8C4(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t result;

  swift_release();
  swift_bridgeObjectRelease();
  v4 = a1 + a2[5];
  v5 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  v6 = a1 + a2[6];
  v7 = sub_1AD63AF28();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7))
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  v10 = a1 + a2[7];
  result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v9)(v10, 1, v7);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  return result;
}

_QWORD *sub_1AD5FC9A4(_QWORD *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int (*v18)(char *, uint64_t, uint64_t);
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = *((_QWORD *)a2 + 1);
  *a1 = *(_QWORD *)a2;
  a1[1] = v6;
  v7 = *((_QWORD *)a2 + 3);
  a1[2] = *((_QWORD *)a2 + 2);
  a1[3] = v7;
  v8 = a3[5];
  v9 = (char *)a1 + v8;
  v10 = &a2[v8];
  v11 = sub_1AD63B03C();
  v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
  swift_retain();
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  v13 = a3[6];
  v14 = (char *)a1 + v13;
  v15 = &a2[v13];
  v16 = sub_1AD63AF28();
  v17 = *(_QWORD *)(v16 - 8);
  v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48);
  if (v18(v15, 1, v16))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v14, v15, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v14, 0, 1, v16);
  }
  v20 = a3[7];
  v21 = (char *)a1 + v20;
  v22 = &a2[v20];
  if (v18(&a2[v20], 1, v16))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 16))(v21, v22, v16);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v17 + 56))(v21, 0, 1, v16);
  }
  *((_BYTE *)a1 + a3[8]) = a2[a3[8]];
  return a1;
}

char *sub_1AD5FCB3C(char *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(char *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;

  v6 = a2[1];
  *(_QWORD *)a1 = *a2;
  *((_QWORD *)a1 + 1) = v6;
  swift_retain();
  swift_release();
  *((_QWORD *)a1 + 2) = a2[2];
  *((_QWORD *)a1 + 3) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = &a1[v7];
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63B03C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = &a1[v11];
  v13 = (char *)a2 + v11;
  v14 = sub_1AD63AF28();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v12, v13, v14);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v12, v13, v14);
LABEL_7:
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = (char *)a2 + v20;
  v23 = v16(&a1[v20], 1, v14);
  v24 = v16(v22, 1, v14);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 24))(v21, v22, v14);
      goto LABEL_13;
    }
    (*(void (**)(char *, uint64_t))(v15 + 8))(v21, v14);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v21, v22, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
LABEL_13:
  a1[a3[8]] = *((_BYTE *)a2 + a3[8]);
  return a1;
}

_OWORD *sub_1AD5FCD70(_OWORD *a1, char *a2, int *a3)
{
  __int128 v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int (*v16)(char *, uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v6 = *((_OWORD *)a2 + 1);
  *a1 = *(_OWORD *)a2;
  a1[1] = v6;
  v7 = a3[5];
  v8 = (char *)a1 + v7;
  v9 = &a2[v7];
  v10 = sub_1AD63B03C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[6];
  v12 = (char *)a1 + v11;
  v13 = &a2[v11];
  v14 = sub_1AD63AF28();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48);
  if (v16(v13, 1, v14))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  v18 = a3[7];
  v19 = (char *)a1 + v18;
  v20 = &a2[v18];
  if (v16(&a2[v18], 1, v14))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v19, v20, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v19, 0, 1, v14);
  }
  *((_BYTE *)a1 + a3[8]) = a2[a3[8]];
  return a1;
}

uint64_t sub_1AD5FCEE4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(void *, uint64_t, uint64_t);
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void *v21;
  void *v22;
  int v23;
  int v24;
  uint64_t v25;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  v6 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v6;
  swift_bridgeObjectRelease();
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1AD63B03C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = (void *)(a1 + v11);
  v13 = (void *)(a2 + v11);
  v14 = sub_1AD63AF28();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v15 + 48);
  v17 = v16(v12, 1, v14);
  v18 = v16(v13, 1, v14);
  if (v17)
  {
    if (!v18)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v12, v13, v14);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v18)
  {
    (*(void (**)(void *, uint64_t))(v15 + 8))(v12, v14);
LABEL_6:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v12, v13, v14);
LABEL_7:
  v20 = a3[7];
  v21 = (void *)(a1 + v20);
  v22 = (void *)(a2 + v20);
  v23 = v16((void *)(a1 + v20), 1, v14);
  v24 = v16(v22, 1, v14);
  if (!v23)
  {
    if (!v24)
    {
      (*(void (**)(void *, void *, uint64_t))(v15 + 40))(v21, v22, v14);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v15 + 8))(v21, v14);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v15 + 32))(v21, v22, v14);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v21, 0, 1, v14);
LABEL_13:
  *(_BYTE *)(a1 + a3[8]) = *(_BYTE *)(a2 + a3[8]);
  return a1;
}

uint64_t sub_1AD5FD100()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD5FD10C(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1AD63B03C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = *(int *)(a3 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a3 + 24);
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t sub_1AD5FD1B0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD5FD1BC(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1AD63B03C();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = *(int *)(a4 + 20);
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      v9 = *(_QWORD *)(v10 - 8);
      v11 = *(int *)(a4 + 24);
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1AD5FD25C()
{
  unint64_t v0;
  unint64_t v1;

  sub_1AD63B03C();
  if (v0 <= 0x3F)
  {
    sub_1AD5FD2F8();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_1AD5FD2F8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED2E1D00)
  {
    sub_1AD63AF28();
    v0 = sub_1AD63BC48();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED2E1D00);
  }
}

ValueMetadata *type metadata accessor for IMDispositionNotification.DeliveryNotification()
{
  return &type metadata for IMDispositionNotification.DeliveryNotification;
}

ValueMetadata *type metadata accessor for IMDispositionNotification.DeliveryNotification.Status()
{
  return &type metadata for IMDispositionNotification.DeliveryNotification.Status;
}

ValueMetadata *type metadata accessor for IMDispositionNotification.InterworkingNotification()
{
  return &type metadata for IMDispositionNotification.InterworkingNotification;
}

ValueMetadata *type metadata accessor for IMDispositionNotification.InterworkingNotification.Status()
{
  return &type metadata for IMDispositionNotification.InterworkingNotification.Status;
}

ValueMetadata *type metadata accessor for IMDispositionNotification.DisplayNotification()
{
  return &type metadata for IMDispositionNotification.DisplayNotification;
}

uint64_t _s9BlastDoor25IMDispositionNotificationV19DisplayNotificationV6StatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD5FD3F0 + 4 * byte_1AD6989D5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD5FD424 + 4 * byte_1AD6989D0[v4]))();
}

uint64_t sub_1AD5FD424(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5FD42C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5FD434);
  return result;
}

uint64_t sub_1AD5FD440(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5FD448);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD5FD44C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5FD454(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IMDispositionNotification.DisplayNotification.Status()
{
  return &type metadata for IMDispositionNotification.DisplayNotification.Status;
}

ValueMetadata *type metadata accessor for IMDispositionNotification.ProcessingNotification()
{
  return &type metadata for IMDispositionNotification.ProcessingNotification;
}

uint64_t _s9BlastDoor25IMDispositionNotificationV20DeliveryNotificationV6StatusOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD5FD4CC + 4 * byte_1AD6989DF[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD5FD500 + 4 * byte_1AD6989DA[v4]))();
}

uint64_t sub_1AD5FD500(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5FD508(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5FD510);
  return result;
}

uint64_t sub_1AD5FD51C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5FD524);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD5FD528(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5FD530(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IMDispositionNotification.ProcessingNotification.Status()
{
  return &type metadata for IMDispositionNotification.ProcessingNotification.Status;
}

uint64_t getEnumTagSinglePayload for IMDispositionNotification.DispositionNotification(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;

  if (!a2)
    return 0;
  if (a2 < 0x3D)
    goto LABEL_17;
  if (a2 + 195 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 195) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 195;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 195;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 195;
  }
LABEL_17:
  v6 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v6 >= 0x3C)
    v6 = -1;
  return v6 + 1;
}

uint64_t storeEnumTagSinglePayload for IMDispositionNotification.DispositionNotification(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 195 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 195) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0x3D)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0x3C)
    return ((uint64_t (*)(void))((char *)&loc_1AD5FD634 + 4 * byte_1AD6989E9[v4]))();
  *a1 = a2 - 61;
  return ((uint64_t (*)(void))((char *)sub_1AD5FD668 + 4 * byte_1AD6989E4[v4]))();
}

uint64_t sub_1AD5FD668(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5FD670(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5FD678);
  return result;
}

uint64_t sub_1AD5FD690(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5FD698);
  *(_BYTE *)result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
  return result;
}

uint64_t sub_1AD5FD69C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5FD6A4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5FD6B0(unsigned __int8 *a1)
{
  return *a1 >> 6;
}

_BYTE *sub_1AD5FD6BC(_BYTE *result)
{
  *result &= 0x3Fu;
  return result;
}

_BYTE *sub_1AD5FD6CC(_BYTE *result, char a2)
{
  *result = *result & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for IMDispositionNotification.DispositionNotification()
{
  return &type metadata for IMDispositionNotification.DispositionNotification;
}

unint64_t sub_1AD5FD6F0()
{
  unint64_t result;

  result = qword_1EECDEAB0;
  if (!qword_1EECDEAB0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698D7C, &type metadata for IMDispositionNotification.ProcessingNotification.Status);
    atomic_store(result, (unint64_t *)&qword_1EECDEAB0);
  }
  return result;
}

unint64_t sub_1AD5FD734()
{
  unint64_t result;

  result = qword_1EECDEAB8;
  if (!qword_1EECDEAB8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698C70, &type metadata for IMDispositionNotification.DisplayNotification.Status);
    atomic_store(result, (unint64_t *)&qword_1EECDEAB8);
  }
  return result;
}

unint64_t sub_1AD5FD778()
{
  unint64_t result;

  result = qword_1EECDEAC0;
  if (!qword_1EECDEAC0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698B64, &type metadata for IMDispositionNotification.InterworkingNotification.Status);
    atomic_store(result, (unint64_t *)&qword_1EECDEAC0);
  }
  return result;
}

unint64_t sub_1AD5FD7BC()
{
  unint64_t result;

  result = qword_1EECDEAC8;
  if (!qword_1EECDEAC8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD698A58, &type metadata for IMDispositionNotification.DeliveryNotification.Status);
    atomic_store(result, (unint64_t *)&qword_1EECDEAC8);
  }
  return result;
}

uint64_t GroupContext.$participantDestinationIdentifiers.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 GroupContext.$participantDestinationIdentifiers.setter(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  return result;
}

uint64_t GroupContext.$groupID.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1[3];
  v2 = v1[4];
  v4 = v1[5];
  v5 = v1[6];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD003E48(v4, v5);
}

__n128 GroupContext.$groupID.setter(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(_QWORD *)(v1 + 48);
  swift_release();
  sub_1AD003F24(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 24) = *a1;
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 48) = v4;
  return result;
}

uint64_t GroupContext.participantDestinationIdentifiers.getter()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t GroupContext.groupID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 48) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v1 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain();
    return v1;
  }
  return result;
}

uint64_t (*GroupContext.participantDestinationIdentifiers.modify(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(_QWORD *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD0E0D6C;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*GroupContext.$participantDestinationIdentifiers.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[1];
  v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD0E0ED4;
}

uint64_t GroupContext.groupID.setter(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*GroupContext.groupID.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 48);
  if (v3 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 40);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD3F5380;
  }
  return result;
}

void (*GroupContext.$groupID.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[3];
  v4 = v1[4];
  v6 = v1[5];
  v7 = v1[6];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD003E48(v6, v7);
  return sub_1AD3F54BC;
}

uint64_t GroupContext.currentGroupName.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t GroupContext.currentGroupName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 56) = a1;
  *(_QWORD *)(v2 + 64) = a2;
  return result;
}

uint64_t (*GroupContext.currentGroupName.modify())()
{
  return nullsub_1;
}

uint64_t GroupContext.groupParticipantVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 72);
}

uint64_t GroupContext.groupParticipantVersion.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 72) = result;
  *(_BYTE *)(v2 + 80) = a2 & 1;
  return result;
}

uint64_t (*GroupContext.groupParticipantVersion.modify())()
{
  return nullsub_1;
}

uint64_t GroupContext.groupProtocolVersion.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 88);
}

uint64_t GroupContext.groupProtocolVersion.setter(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 88) = result;
  *(_BYTE *)(v2 + 96) = a2 & 1;
  return result;
}

uint64_t (*GroupContext.groupProtocolVersion.modify())()
{
  return nullsub_1;
}

unint64_t sub_1AD5FDCB4(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD28D1F0();
  result = sub_1AD28D278();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD5FDCE4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD5FDD0C@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD5FDD44(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v1, v2);
}

uint64_t sub_1AD5FDD80@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[4];
  v3 = a1[5];
  v4 = a1[6];
  *a2 = a1[3];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD003E48(v3, v4);
}

uint64_t destroy for GroupContext(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 48) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for GroupContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = (_OWORD *)(a2 + 40);
  v7 = *(_QWORD *)(a2 + 48);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v7 == 1)
  {
    *(_OWORD *)(a1 + 40) = *v6;
  }
  else
  {
    *(_QWORD *)(a1 + 40) = *(_QWORD *)v6;
    *(_QWORD *)(a1 + 48) = v7;
    swift_bridgeObjectRetain();
  }
  v8 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v8;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GroupContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 48);
  if (*(_QWORD *)(a1 + 48) != 1)
  {
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
      *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1AD0256E4(a1 + 40);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
LABEL_8:
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = v7;
  v8 = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = v8;
  return a1;
}

uint64_t assignWithTake for GroupContext(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v4 = (_QWORD *)(a2 + 40);
  if (*(_QWORD *)(a1 + 48) != 1)
  {
    v5 = *(_QWORD *)(a2 + 48);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 40) = *v4;
      *(_QWORD *)(a1 + 48) = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AD0256E4(a1 + 40);
  }
  *(_OWORD *)(a1 + 40) = *(_OWORD *)v4;
LABEL_6:
  v6 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_BYTE *)(a1 + 80) = *(_BYTE *)(a2 + 80);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_BYTE *)(a1 + 96) = *(_BYTE *)(a2 + 96);
  return a1;
}

uint64_t getEnumTagSinglePayload for GroupContext(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 97))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GroupContext(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 96) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 97) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 97) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for GroupContext()
{
  return &type metadata for GroupContext;
}

uint64_t sub_1AD5FE17C@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (uint64_t *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    v4 = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1AD5FE1D0@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  int v4;
  unsigned __int8 *v5;
  int v6;
  int v7;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = 0;
    v5 = (unsigned __int8 *)(a1 + 32);
    do
    {
      v7 = *v5++;
      v6 = v7;
      if ((v7 & ~v4) == 0)
        v6 = 0;
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    LOBYTE(v4) = 0;
  }
  result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

uint64_t sub_1AD5FE224()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD5FE22C@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 2)
    v2 = 2;
  else
    v2 = result == 1;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD5FE248@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = result;
  if (result >= 3u)
    v2 = 3;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD5FE260@<X0>(unsigned __int8 *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD5FE248(*a1, a2);
}

uint64_t sub_1AD5FE268()
{
  sub_1AD5FEF20();
  return sub_1AD63B954();
}

uint64_t sub_1AD5FE2C4()
{
  sub_1AD5FEF20();
  return sub_1AD63B8F4();
}

void sub_1AD5FE310(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

uint64_t sub_1AD5FE31C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t sub_1AD5FE324()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t sub_1AD5FE32C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t sub_1AD5FE334()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD5FE360@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  __int128 v11;
  __int128 v12;

  v2 = *(_QWORD *)(v1 + 56);
  v3 = *(_QWORD *)(v1 + 64);
  v4 = *(_QWORD *)(v1 + 72);
  v5 = *(_QWORD *)(v1 + 80);
  v6 = *(_QWORD *)(v1 + 88);
  v7 = *(_BYTE *)(v1 + 128);
  v8 = *(_QWORD *)(v1 + 136);
  v9 = *(_BYTE *)(v1 + 144);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 48);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  *(_QWORD *)(a1 + 40) = v6;
  v11 = *(_OWORD *)(v1 + 96);
  v12 = *(_OWORD *)(v1 + 112);
  *(_OWORD *)(a1 + 48) = v11;
  *(_OWORD *)(a1 + 64) = v12;
  *(_BYTE *)(a1 + 80) = v7;
  *(_QWORD *)(a1 + 88) = v8;
  *(_BYTE *)(a1 + 96) = v9;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1AD003E48(v6, v11);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD5FE3F0()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 145);
}

uint64_t sub_1AD5FE3F8()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD5FE400(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD5FE408())()
{
  return nullsub_1;
}

uint64_t sub_1AD5FE418@<X0>(uint64_t result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_1AD5FE420(_BYTE *a1@<X8>)
{
  *a1 = 1;
}

void sub_1AD5FE42C(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

void sub_1AD5FE438(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

void sub_1AD5FE444(_BYTE *a1@<X8>)
{
  *a1 = 16;
}

void sub_1AD5FE450(_BYTE *a1@<X8>)
{
  *a1 = 32;
}

void sub_1AD5FE45C(_BYTE *a1@<X8>)
{
  *a1 = 64;
}

void sub_1AD5FE468()
{
  byte_1EECDEAD0 = 125;
}

uint64_t sub_1AD5FE4D0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  if (qword_1EECD1640 != -1)
    result = swift_once();
  *a1 = byte_1EECDEAD0;
  return result;
}

BOOL sub_1AD5FE520(int a1)
{
  if (qword_1EECD1640 != -1)
    swift_once();
  return (a1 & (byte_1EECDEAD0 ^ 0xFF)) == 0;
}

_BYTE *sub_1AD5FE578@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1AD5FE584()
{
  sub_1AD5FE8A4();
  return sub_1AD63B954();
}

uint64_t sub_1AD5FE5E0()
{
  sub_1AD5FE8A4();
  return sub_1AD63B8F4();
}

_BYTE *sub_1AD5FE62C@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 | *result;
  return result;
}

_BYTE *sub_1AD5FE640@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & *result;
  return result;
}

_BYTE *sub_1AD5FE654@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1AD5FE668(_BYTE *a1, unsigned __int8 *a2)
{
  _BYTE *v2;
  int v3;
  int v4;

  v3 = *a2;
  v4 = *v2;
  if ((v4 & v3) != v3)
    *v2 = v4 | v3;
  *a1 = v3;
  return (v4 & v3) != v3;
}

unsigned __int8 *sub_1AD5FE698@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  v5 = v4 & v3;
  if ((v4 & v3) != 0)
    *v2 = v4 & ~(_BYTE)v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

unsigned __int8 *sub_1AD5FE6C4@<X0>(unsigned __int8 *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;
  int v3;
  int v4;
  int v5;

  v3 = *result;
  v4 = *v2;
  *v2 = v4 | v3;
  v5 = v4 & v3;
  *a2 = v5;
  a2[1] = v5 == 0;
  return result;
}

_BYTE *sub_1AD5FE6E8(_BYTE *result)
{
  _BYTE *v1;

  *v1 |= *result;
  return result;
}

_BYTE *sub_1AD5FE6FC(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= *result;
  return result;
}

_BYTE *sub_1AD5FE710(_BYTE *result)
{
  _BYTE *v1;

  *v1 ^= *result;
  return result;
}

_BYTE *sub_1AD5FE724@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v2;

  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1AD5FE738(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*v1 & ~*a1) == 0;
}

BOOL sub_1AD5FE74C(_BYTE *a1)
{
  _BYTE *v1;

  return (*v1 & *a1) == 0;
}

BOOL sub_1AD5FE760(unsigned __int8 *a1)
{
  unsigned __int8 *v1;

  return (*a1 & ~*v1) == 0;
}

BOOL sub_1AD5FE774()
{
  _BYTE *v0;

  return *v0 == 0;
}

_BYTE *sub_1AD5FE784(_BYTE *result)
{
  _BYTE *v1;

  *v1 &= ~*result;
  return result;
}

unsigned __int8 *sub_1AD5FE798@<X0>(unsigned __int8 *result@<X0>, _WORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_1AD5FE7AC()
{
  unint64_t result;

  result = qword_1EECDEAD8;
  if (!qword_1EECDEAD8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69900C, &type metadata for SyndicationAction.ItemType);
    atomic_store(result, (unint64_t *)&qword_1EECDEAD8);
  }
  return result;
}

uint64_t sub_1AD5FE7F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28D1AC, (uint64_t (*)(void))sub_1AD28D234);
}

uint64_t sub_1AD5FE804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD5FE818, (uint64_t (*)(void))sub_1AD5FE85C);
}

unint64_t sub_1AD5FE818()
{
  unint64_t result;

  result = qword_1EECDEAE0;
  if (!qword_1EECDEAE0)
  {
    result = MEMORY[0x1AF44BDF0]("\tPh8̊d8", &type metadata for SyndicationAction);
    atomic_store(result, (unint64_t *)&qword_1EECDEAE0);
  }
  return result;
}

unint64_t sub_1AD5FE85C()
{
  unint64_t result;

  result = qword_1EECDEAE8;
  if (!qword_1EECDEAE8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD652190, &type metadata for SyndicationAction);
    atomic_store(result, (unint64_t *)&qword_1EECDEAE8);
  }
  return result;
}

unint64_t sub_1AD5FE8A4()
{
  unint64_t result;

  result = qword_1EECDEAF0;
  if (!qword_1EECDEAF0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6992A4, &type metadata for SyndicationAction.ActionType);
    atomic_store(result, (unint64_t *)&qword_1EECDEAF0);
  }
  return result;
}

unint64_t sub_1AD5FE8EC()
{
  unint64_t result;

  result = qword_1EECDEAF8;
  if (!qword_1EECDEAF8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6991DC, &type metadata for SyndicationAction.ActionType);
    atomic_store(result, (unint64_t *)&qword_1EECDEAF8);
  }
  return result;
}

unint64_t sub_1AD5FE934()
{
  unint64_t result;

  result = qword_1EECDEB00;
  if (!qword_1EECDEB00)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6992DC, &type metadata for SyndicationAction.ActionType);
    atomic_store(result, (unint64_t *)&qword_1EECDEB00);
  }
  return result;
}

unint64_t sub_1AD5FE97C()
{
  unint64_t result;

  result = qword_1EECDEB08;
  if (!qword_1EECDEB08)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699304, &type metadata for SyndicationAction.ActionType);
    atomic_store(result, (unint64_t *)&qword_1EECDEB08);
  }
  return result;
}

uint64_t destroy for SyndicationAction(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  if (*(_QWORD *)(a1 + 96) != 1)
    swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SyndicationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t v7;
  uint64_t v8;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v4 = *(_QWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 56) = v4;
  v5 = *(_QWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 80) = v5;
  v6 = (_OWORD *)(a2 + 88);
  v7 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  if (v7 == 1)
  {
    *(_OWORD *)(a1 + 88) = *v6;
  }
  else
  {
    *(_QWORD *)(a1 + 88) = *(_QWORD *)v6;
    *(_QWORD *)(a1 + 96) = v7;
    swift_bridgeObjectRetain();
  }
  v8 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v8;
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SyndicationAction(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v4;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) != 1)
  {
    if (v6 != 1)
    {
      *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
      *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_8;
    }
    sub_1AD0256E4(a1 + 88);
    goto LABEL_6;
  }
  if (v6 == 1)
  {
LABEL_6:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    goto LABEL_8;
  }
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
LABEL_8:
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 120) = v7;
  v8 = *(_QWORD *)(a2 + 136);
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_QWORD *)(a1 + 136) = v8;
  *(_BYTE *)(a1 + 145) = *(_BYTE *)(a2 + 145);
  return a1;
}

uint64_t assignWithTake for SyndicationAction(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_release();
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  v4 = (_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 96) != 1)
  {
    v5 = *(_QWORD *)(a2 + 96);
    if (v5 != 1)
    {
      *(_QWORD *)(a1 + 88) = *v4;
      *(_QWORD *)(a1 + 96) = v5;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_1AD0256E4(a1 + 88);
  }
  *(_OWORD *)(a1 + 88) = *(_OWORD *)v4;
LABEL_6:
  v6 = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 104) = *(_QWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 112) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  *(_BYTE *)(a1 + 128) = *(_BYTE *)(a2 + 128);
  *(_QWORD *)(a1 + 136) = *(_QWORD *)(a2 + 136);
  *(_WORD *)(a1 + 144) = *(_WORD *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for SyndicationAction(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 146))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SyndicationAction(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 144) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 146) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 48) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 146) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SyndicationAction()
{
  return &type metadata for SyndicationAction;
}

uint64_t storeEnumTagSinglePayload for SyndicationAction.ItemType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD5FEE90 + 4 * byte_1AD699005[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD5FEEC4 + 4 * asc_1AD699000[v4]))();
}

uint64_t sub_1AD5FEEC4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5FEECC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD5FEED4);
  return result;
}

uint64_t sub_1AD5FEEE0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD5FEEE8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD5FEEEC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD5FEEF4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SyndicationAction.ItemType()
{
  return &type metadata for SyndicationAction.ItemType;
}

ValueMetadata *type metadata accessor for SyndicationAction.ActionType()
{
  return &type metadata for SyndicationAction.ActionType;
}

unint64_t sub_1AD5FEF20()
{
  unint64_t result;

  result = qword_1EECDEB10;
  if (!qword_1EECDEB10)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699074, &type metadata for SyndicationAction.ItemType);
    atomic_store(result, (unint64_t *)&qword_1EECDEB10);
  }
  return result;
}

uint64_t BinaryDecoder.__allocating_init()()
{
  return swift_allocObject();
}

void BinaryDecoder.decode<A>(_:from:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  id v10;
  void *v11;
  id v12;

  v10 = objc_allocWithZone(MEMORY[0x1E0C99DB0]);
  sub_1AD0040A0(a2, a3);
  v11 = (void *)sub_1AD63AFA0();
  v12 = objc_msgSend(v10, sel_initWithData_, v11);
  sub_1AD00412C(a2, a3);

  (*(void (**)(uint64_t, id, uint64_t, uint64_t))(*(_QWORD *)v5 + 80))(a4, v12, a4, a5);
}

uint64_t sub_1AD5FF044(uint64_t result)
{
  void *v1;
  void *v2;
  id v3;
  void **v4;
  _BYTE *v5;
  _BYTE *v6;

  if (result < 8)
  {
    __break(1u);
  }
  else
  {
    v2 = v1;
    v3 = (id)result;
    if ((objc_msgSend(v1, sel_hasBytesAvailable) & 1) != 0)
    {
      v4 = (void **)swift_slowAlloc();
      if (objc_msgSend(v2, sel_read_maxLength_, v4, v3) == v3)
      {
        v3 = *v4;
      }
      else
      {
        sub_1AD5FFCD0();
        swift_allocError();
        *v6 = 1;
        swift_willThrow();
      }
      MEMORY[0x1AF44BED4](v4, -1, -1);
    }
    else
    {
      sub_1AD5FFCD0();
      swift_allocError();
      *v5 = 0;
      swift_willThrow();
    }
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_1AD5FF150(uint64_t result)
{
  void *v1;
  void *v2;
  id v3;
  unsigned __int8 *v4;
  _BYTE *v5;
  _BYTE *v6;

  if (result < 1)
  {
    __break(1u);
  }
  else
  {
    v2 = v1;
    v3 = (id)result;
    if ((objc_msgSend(v1, sel_hasBytesAvailable) & 1) != 0)
    {
      v4 = (unsigned __int8 *)swift_slowAlloc();
      if (objc_msgSend(v2, sel_read_maxLength_, v4, v3) == v3)
      {
        v3 = (id)*v4;
      }
      else
      {
        sub_1AD5FFCD0();
        swift_allocError();
        *v6 = 1;
        swift_willThrow();
      }
      MEMORY[0x1AF44BED4](v4, -1, -1);
    }
    else
    {
      sub_1AD5FFCD0();
      swift_allocError();
      *v5 = 0;
      swift_willThrow();
    }
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_1AD5FF25C(uint64_t result)
{
  void *v1;
  void *v2;
  id v3;
  unsigned __int16 *v4;
  _BYTE *v5;
  _BYTE *v6;

  if (result < 2)
  {
    __break(1u);
  }
  else
  {
    v2 = v1;
    v3 = (id)result;
    if ((objc_msgSend(v1, sel_hasBytesAvailable) & 1) != 0)
    {
      v4 = (unsigned __int16 *)swift_slowAlloc();
      if (objc_msgSend(v2, sel_read_maxLength_, v4, v3) == v3)
      {
        v3 = (id)*v4;
      }
      else
      {
        sub_1AD5FFCD0();
        swift_allocError();
        *v6 = 1;
        swift_willThrow();
      }
      MEMORY[0x1AF44BED4](v4, -1, -1);
    }
    else
    {
      sub_1AD5FFCD0();
      swift_allocError();
      *v5 = 0;
      swift_willThrow();
    }
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_1AD5FF368(uint64_t result)
{
  void *v1;
  void *v2;
  id v3;
  unsigned int *v4;
  _BYTE *v5;
  _BYTE *v6;

  if (result < 4)
  {
    __break(1u);
  }
  else
  {
    v2 = v1;
    v3 = (id)result;
    if ((objc_msgSend(v1, sel_hasBytesAvailable) & 1) != 0)
    {
      v4 = (unsigned int *)swift_slowAlloc();
      if (objc_msgSend(v2, sel_read_maxLength_, v4, v3) == v3)
      {
        v3 = (id)*v4;
      }
      else
      {
        sub_1AD5FFCD0();
        swift_allocError();
        *v6 = 1;
        swift_willThrow();
      }
      MEMORY[0x1AF44BED4](v4, -1, -1);
    }
    else
    {
      sub_1AD5FFCD0();
      swift_allocError();
      *v5 = 0;
      swift_willThrow();
    }
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_1AD5FF474(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  void (*v6)(unint64_t *__return_ptr, uint64_t, uint64_t);
  id v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t inited;
  unint64_t v12;
  id v13;
  unint64_t v15;

  v6 = *(void (**)(unint64_t *__return_ptr, uint64_t, uint64_t))(a4 + 24);
  v7 = a2;
  v6(&v15, a3, a4);
  v8 = v15;
  type metadata accessor for _BinaryDecoder();
  v9 = swift_allocObject();
  v10 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + 16) = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)(v9 + 24) = sub_1AD4391D4(v10);
  *(_QWORD *)(v9 + 32) = v7;
  *(_BYTE *)(v9 + 40) = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2740);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD64DF60;
  *(_QWORD *)(inited + 32) = v7;
  v15 = inited;
  sub_1AD63B9CC();
  v12 = v15;
  v13 = v7;
  sub_1AD49936C(v12, (uint64_t (*)(uint64_t))sub_1AD5FF640);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD5FF588()
{
  type metadata accessor for _BinaryDecoder();
  sub_1AD5FFC90((unint64_t *)&qword_1ED2DA970, (uint64_t)&unk_1AD699610);
  swift_retain();
  return sub_1AD63BB10();
}

uint64_t BinaryDecoder.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t type metadata accessor for _BinaryDecoder()
{
  return objc_opt_self();
}

uint64_t sub_1AD5FF640()
{
  return sub_1AD5FF588();
}

uint64_t BinaryDecoder.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BinaryDecoder.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BinaryDecoder()
{
  return objc_opt_self();
}

uint64_t method lookup function for BinaryDecoder()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BinaryDecoder.decode<A>(_:from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 80))();
}

uint64_t dispatch thunk of BinaryDecoder.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1AD5FF6D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  v4 = type metadata accessor for _BinaryDecoder.KeyedContainer(0, a2, a3, a4);
  swift_retain();
  MEMORY[0x1AF44BDF0](&unk_1AD699688, v4);
  return sub_1AD63BFB4();
}

uint64_t sub_1AD5FF74C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1AD5FF780(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5FF6D4(a1, a2, a3, a4);
}

uint64_t sub_1AD5FF7A0@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AD5FF7E8(&qword_1EECDEB18, (uint64_t)&unk_1AD6993E8, a1);
}

uint64_t sub_1AD5FF7C4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1AD5FF7E8(&qword_1ED2DA978, (uint64_t)&unk_1AD699558, a1);
}

uint64_t sub_1AD5FF7E8@<X0>(unint64_t *a1@<X2>, uint64_t a2@<X3>, _QWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t v7;

  v7 = *v3;
  a3[3] = type metadata accessor for _BinaryDecoder();
  a3[4] = sub_1AD5FFC90(a1, a2);
  *a3 = v7;
  return swift_retain();
}

void sub_1AD5FF854()
{
  sub_1AD5FF934();
}

uint64_t sub_1AD5FF868()
{
  uint64_t v0;
  id v1;
  uint64_t v2;

  v1 = *(id *)(*(_QWORD *)v0 + 32);
  v2 = sub_1AD5FF150(1);

  return v2;
}

void sub_1AD5FF8BC()
{
  sub_1AD5FF99C();
}

void sub_1AD5FF8D0()
{
  sub_1AD5FFA08();
}

uint64_t sub_1AD5FF8E4(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD6993E8, a1);
  return sub_1AD63C2D8();
}

void sub_1AD5FF934()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 32);
  sub_1AD5FF044(8);

}

void sub_1AD5FF99C()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 32);
  sub_1AD5FF25C(2);

}

void sub_1AD5FFA08()
{
  uint64_t v0;
  id v1;

  v1 = *(id *)(*(_QWORD *)v0 + 32);
  sub_1AD5FF368(4);

}

uint64_t sub_1AD5FFA70(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD6993E8, a1);
  return sub_1AD63C2E4();
}

uint64_t sub_1AD5FFAC0()
{
  return sub_1AD5FF588();
}

uint64_t sub_1AD5FFAE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5FF6D4(a1, a2, a3, a4);
}

uint64_t sub_1AD5FFAF4()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(*(_QWORD *)v0 + 32), sel_hasBytesAvailable) ^ 1;
}

uint64_t sub_1AD5FFB1C()
{
  return 0;
}

uint64_t sub_1AD5FFB24(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD699558, a1);
  return sub_1AD63C2D8();
}

uint64_t sub_1AD5FFB74(uint64_t a1)
{
  MEMORY[0x1AF44BDF0](&unk_1AD699558, a1);
  return sub_1AD63C2E4();
}

uint64_t sub_1AD5FFBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1AD5FFAE0(a1, a2, a3, a4);
}

uint64_t sub_1AD5FFBE4@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;

  v5 = *v2;
  a2[3] = type metadata accessor for _BinaryDecoder();
  a2[4] = a1;
  *a2 = v5;
  return swift_retain();
}

uint64_t sub_1AD5FFC30@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;

  v3 = *v1;
  a1[3] = type metadata accessor for _BinaryDecoder();
  a1[4] = sub_1AD5FFC90((unint64_t *)&qword_1ED2DA970, (uint64_t)&unk_1AD699610);
  *a1 = v3;
  return swift_retain();
}

uint64_t sub_1AD5FFC90(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for _BinaryDecoder();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1AD5FFCD0()
{
  unint64_t result;

  result = qword_1EECDEB20;
  if (!qword_1EECDEB20)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD688038, &type metadata for StreamError);
    atomic_store(result, (unint64_t *)&qword_1EECDEB20);
  }
  return result;
}

uint64_t sub_1AD5FFD14()
{
  return sub_1AD5FF588();
}

uint64_t sub_1AD5FFD40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1AD5FF6D4(a1, a5, a7, a4);
}

uint64_t sub_1AD5FFD68@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  a2[3] = type metadata accessor for _BinaryDecoder();
  a2[4] = sub_1AD5FFC90(&qword_1EECDEB18, (uint64_t)&unk_1AD6993E8);
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_1AD5FFDC8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  a2[3] = type metadata accessor for _BinaryDecoder();
  a2[4] = sub_1AD5FFC90((unint64_t *)&qword_1ED2DA970, (uint64_t)&unk_1AD699610);
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_1AD5FFE28@<X0>(uint64_t a1@<X1>, _QWORD *a2@<X8>)
{
  a2[3] = type metadata accessor for _BinaryDecoder();
  a2[4] = sub_1AD5FFC90((unint64_t *)&qword_1ED2DA970, (uint64_t)&unk_1AD699610);
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_1AD5FFE88()
{
  return MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1AD5FFE94()
{
  return sub_1AD600328();
}

uint64_t sub_1AD5FFEA0()
{
  uint64_t v0;
  char v1;
  char v3;

  sub_1AD5FFD14();
  if (!v0)
    v1 = v3;
  return v1 & 1;
}

uint64_t sub_1AD5FFEF4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD5FFD14();
  if (!v0)
    return v2;
  return result;
}

double sub_1AD5FFF44()
{
  uint64_t v0;
  double result;
  double v2;

  sub_1AD5FFD14();
  if (!v0)
    return v2;
  return result;
}

float sub_1AD5FFF94()
{
  uint64_t v0;
  float result;
  float v2;

  sub_1AD5FFD14();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1AD5FFFE4()
{
  return sub_1AD600224();
}

uint64_t sub_1AD600008()
{
  return sub_1AD6000E0();
}

uint64_t sub_1AD60002C()
{
  return sub_1AD60014C();
}

uint64_t sub_1AD600050()
{
  return sub_1AD6001B8();
}

uint64_t sub_1AD600074()
{
  return sub_1AD600224();
}

uint64_t sub_1AD600098()
{
  return sub_1AD600224();
}

uint64_t sub_1AD6000BC()
{
  return sub_1AD6000E0();
}

uint64_t sub_1AD6000E0()
{
  uint64_t v0;
  uint64_t result;
  unsigned __int8 v2;

  result = sub_1AD5FFD14();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1AD600128()
{
  return sub_1AD60014C();
}

uint64_t sub_1AD60014C()
{
  uint64_t v0;
  uint64_t result;
  unsigned __int16 v2;

  result = sub_1AD5FFD14();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1AD600194()
{
  return sub_1AD6001B8();
}

uint64_t sub_1AD6001B8()
{
  uint64_t v0;
  uint64_t result;
  unsigned int v2;

  result = sub_1AD5FFD14();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1AD600200()
{
  return sub_1AD600224();
}

uint64_t sub_1AD600224()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_1AD5FFD14();
  if (!v0)
    return v2;
  return result;
}

uint64_t sub_1AD60026C()
{
  return sub_1AD5FFD14();
}

uint64_t sub_1AD600294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;

  return sub_1AD5FFD40(a1, a2, *v5, *(_QWORD *)(a5 + 16), a3, *(_QWORD *)(a5 + 24), a4);
}

uint64_t sub_1AD6002BC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1AD5FFD68(*v1, a1);
}

uint64_t sub_1AD6002DC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1AD5FFDC8(*v1, a1);
}

uint64_t sub_1AD6002FC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_1AD5FFE28(*v1, a1);
}

uint64_t type metadata accessor for _BinaryDecoder.KeyedContainer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _BinaryDecoder.KeyedContainer);
}

uint64_t sub_1AD600328()
{
  return sub_1AD63B9E4();
}

uint64_t sub_1AD600334()
{
  return sub_1AD5FF868();
}

uint64_t sub_1AD600348()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1AD600350(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD600358())()
{
  return nullsub_1;
}

uint64_t sub_1AD600368()
{
  return 0x746E756F4378616DLL;
}

uint64_t sub_1AD600380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 0x746E756F4378616DLL && a2 == 0xE800000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1AD600414()
{
  sub_1AD60054C();
  return sub_1AD63C560();
}

uint64_t sub_1AD60043C()
{
  sub_1AD60054C();
  return sub_1AD63C56C();
}

uint64_t sub_1AD600464(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEB28);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD60054C();
  sub_1AD63C53C();
  sub_1AD63C050();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_1AD60054C()
{
  unint64_t result;

  result = qword_1EECDEB30;
  if (!qword_1EECDEB30)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699B10, &type metadata for AnimatedImageMetadata.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEB30);
  }
  return result;
}

uint64_t sub_1AD600590@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEB38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD60054C();
  sub_1AD63C524();
  if (!v2)
  {
    v9 = sub_1AD63BF3C();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AD600694@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AD600590(a1, a2);
}

uint64_t sub_1AD6006A8(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEB28);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD60054C();
  sub_1AD63C53C();
  sub_1AD63C050();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1AD600790()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD600798(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*sub_1AD6007C0())()
{
  return nullsub_1;
}

double sub_1AD6007D0()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void sub_1AD6007D8(double a1, double a2)
{
  uint64_t v2;

  *(double *)(v2 + 8) = a1;
  *(double *)(v2 + 16) = a2;
}

uint64_t (*sub_1AD6007E0())()
{
  return nullsub_1;
}

uint64_t sub_1AD6007F0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD60081C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  return result;
}

uint64_t (*sub_1AD600850())()
{
  return nullsub_1;
}

uint64_t sub_1AD600860()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x7A69536C65786970;
  if (*v0 != 1)
    v1 = 0x7453657079547475;
  if (*v0)
    return v1;
  else
    return 0x6E6F697461727564;
}

uint64_t sub_1AD6008C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD60143C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD6008EC()
{
  sub_1AD600B04();
  return sub_1AD63C560();
}

uint64_t sub_1AD600914()
{
  sub_1AD600B04();
  return sub_1AD63C56C();
}

uint64_t sub_1AD60093C(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[2];
  uint64_t v14;
  uint64_t v15;
  char v16;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEB40);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *v1;
  v9 = v1[1];
  v10 = v1[2];
  v11 = v1[3];
  v13[0] = v1[4];
  v13[1] = v11;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD600B04();
  sub_1AD63C53C();
  v14 = v8;
  v16 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD5458);
  sub_1AD600D8C(&qword_1EECD5478, MEMORY[0x1E0DEB080], MEMORY[0x1E0DEAF10]);
  sub_1AD63C068();
  if (!v2)
  {
    v14 = v9;
    v15 = v10;
    v16 = 1;
    type metadata accessor for CGSize(0);
    sub_1AD5A1134(&qword_1ED2DAB80, MEMORY[0x1E0C9B9F0]);
    sub_1AD63C068();
    LOBYTE(v14) = 2;
    sub_1AD63C020();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AD600B04()
{
  unint64_t result;

  result = qword_1EECDEB48;
  if (!qword_1EECDEB48)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699AC0, &type metadata for AnimatedImageMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEB48);
  }
  return result;
}

uint64_t sub_1AD600B48@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v16[2];
  char v17;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEB50);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD600B04();
  sub_1AD63C524();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD5458);
  v17 = 0;
  sub_1AD600D8C(&qword_1EECD5460, MEMORY[0x1E0DEB0A8], MEMORY[0x1E0DEAF40]);
  sub_1AD63BF54();
  v9 = v16[0];
  type metadata accessor for CGSize(0);
  v17 = 1;
  sub_1AD5A1134(&qword_1ED2E2690, MEMORY[0x1E0C9BA08]);
  swift_bridgeObjectRetain();
  sub_1AD63BF54();
  v10 = v16[0];
  v11 = v16[1];
  LOBYTE(v16[0]) = 2;
  v13 = sub_1AD63BF0C();
  v15 = v14;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v10;
  a2[2] = v11;
  a2[3] = v13;
  a2[4] = v15;
  swift_bridgeObjectRetain();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD600D8C(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EECD5458);
    v8 = a2;
    result = MEMORY[0x1AF44BDF0](a3, v7, &v8);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD600DEC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return sub_1AD600B48(a1, a2);
}

uint64_t sub_1AD600E00(_QWORD *a1)
{
  return sub_1AD60093C(a1);
}

uint64_t sub_1AD600E14@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>, double a6@<D1>)
{
  *(_QWORD *)a4 = result;
  *(double *)(a4 + 8) = a5;
  *(double *)(a4 + 16) = a6;
  *(_QWORD *)(a4 + 24) = a2;
  *(_QWORD *)(a4 + 32) = a3;
  return result;
}

uint64_t sub_1AD600E24@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

unint64_t sub_1AD600E30()
{
  unint64_t result;

  result = qword_1EECDEB58;
  if (!qword_1EECDEB58)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699824, &type metadata for AnimatedImageMetadata.Constraints);
    atomic_store(result, (unint64_t *)&qword_1EECDEB58);
  }
  return result;
}

unint64_t sub_1AD600E78()
{
  unint64_t result;

  result = qword_1EECDEB60;
  if (!qword_1EECDEB60)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69984C, &type metadata for AnimatedImageMetadata.Constraints);
    atomic_store(result, (unint64_t *)&qword_1EECDEB60);
  }
  return result;
}

unint64_t sub_1AD600EBC(uint64_t a1)
{
  unint64_t result;

  result = sub_1AD600EE0();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AD600EE0()
{
  unint64_t result;

  result = qword_1EECDEB68;
  if (!qword_1EECDEB68)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6998A0, &type metadata for AnimatedImageMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECDEB68);
  }
  return result;
}

unint64_t sub_1AD600F24(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD600F50();
  result = sub_1AD600F94();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD600F50()
{
  unint64_t result;

  result = qword_1EECDEB70;
  if (!qword_1EECDEB70)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6998BC, &type metadata for AnimatedImageMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECDEB70);
  }
  return result;
}

unint64_t sub_1AD600F94()
{
  unint64_t result;

  result = qword_1EECDEB78;
  if (!qword_1EECDEB78)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6998E4, &type metadata for AnimatedImageMetadata);
    atomic_store(result, (unint64_t *)&qword_1EECDEB78);
  }
  return result;
}

uint64_t destroy for AnimatedImageMetadata()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for AnimatedImageMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for AnimatedImageMetadata(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for AnimatedImageMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for AnimatedImageMetadata()
{
  return &type metadata for AnimatedImageMetadata;
}

ValueMetadata *type metadata accessor for AnimatedImageMetadata.Constraints()
{
  return &type metadata for AnimatedImageMetadata.Constraints;
}

uint64_t storeEnumTagSinglePayload for AnimatedImageMetadata.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD601170 + 4 * byte_1AD699815[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD6011A4 + 4 * byte_1AD699810[v4]))();
}

uint64_t sub_1AD6011A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD6011AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD6011B4);
  return result;
}

uint64_t sub_1AD6011C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD6011C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD6011CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD6011D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for AnimatedImageMetadata.CodingKeys()
{
  return &type metadata for AnimatedImageMetadata.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for AnimatedImageMetadata.Constraints.CodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1AD601230 + 4 * byte_1AD69981A[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1AD601250 + 4 * byte_1AD69981F[v4]))();
}

_BYTE *sub_1AD601230(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1AD601250(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD601258(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD601260(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1AD601268(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1AD601270(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for AnimatedImageMetadata.Constraints.CodingKeys()
{
  return &type metadata for AnimatedImageMetadata.Constraints.CodingKeys;
}

unint64_t sub_1AD601290()
{
  unint64_t result;

  result = qword_1EECDEB80;
  if (!qword_1EECDEB80)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6999E0, &type metadata for AnimatedImageMetadata.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEB80);
  }
  return result;
}

unint64_t sub_1AD6012D8()
{
  unint64_t result;

  result = qword_1EECDEB88;
  if (!qword_1EECDEB88)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699A98, &type metadata for AnimatedImageMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEB88);
  }
  return result;
}

unint64_t sub_1AD601320()
{
  unint64_t result;

  result = qword_1EECDEB90;
  if (!qword_1EECDEB90)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699A08, &type metadata for AnimatedImageMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEB90);
  }
  return result;
}

unint64_t sub_1AD601368()
{
  unint64_t result;

  result = qword_1EECDEB98;
  if (!qword_1EECDEB98)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699A30, &type metadata for AnimatedImageMetadata.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEB98);
  }
  return result;
}

unint64_t sub_1AD6013B0()
{
  unint64_t result;

  result = qword_1EECDEBA0;
  if (!qword_1EECDEBA0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699950, &type metadata for AnimatedImageMetadata.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEBA0);
  }
  return result;
}

unint64_t sub_1AD6013F8()
{
  unint64_t result;

  result = qword_1EECDEBA8;
  if (!qword_1EECDEBA8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699978, &type metadata for AnimatedImageMetadata.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEBA8);
  }
  return result;
}

uint64_t sub_1AD60143C(uint64_t a1, uint64_t a2)
{
  char v5;

  if (a1 == 0x6E6F697461727564 && a2 == 0xE900000000000073 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7A69536C65786970 && a2 == 0xE900000000000065 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x7453657079547475 && a2 == 0xEC000000676E6972)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v5 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v5 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_1AD6015BC@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, _QWORD *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

void sub_1AD6015CC(void *a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  id v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  id v28;
  unint64_t *v29;
  id v30;
  id v31;
  id v32;
  id v33;
  id v34;
  unint64_t v35;
  unint64_t v36;
  char *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t *v40;
  id v41;
  uint64_t v42;
  char v43;
  id v44;
  id v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;

  v39 = a3;
  v40 = a4;
  v36 = a2;
  v5 = sub_1AD63BD8C();
  v38 = *(_QWORD *)(v5 - 8);
  v6 = MEMORY[0x1E0C80A78](v5);
  v37 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v36 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v36 - v11;
  sub_1AD63BB7C();
  if (qword_1ED2E7540 != -1)
    swift_once();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1AD648160;
  v45 = a1;
  v14 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
  v15 = sub_1AD63B7A4();
  v17 = v16;
  *(_QWORD *)(v13 + 56) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v13 + 64) = sub_1AD0469B8();
  *(_QWORD *)(v13 + 32) = v15;
  *(_QWORD *)(v13 + 40) = v17;
  sub_1AD63B48C();
  swift_bridgeObjectRelease();
  v41 = a1;
  v18 = a1;
  if (swift_dynamicCast())
  {

    swift_bridgeObjectRelease();
LABEL_7:
    v22 = (unint64_t)v45;
    v23 = v46;
    v24 = v47;
    v25 = v48;
    v27 = v49;
    v26 = v50;
    v28 = v41;
LABEL_8:

LABEL_9:
    v29 = v40;
    goto LABEL_10;
  }

  v41 = a1;
  v19 = a1;
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    v20 = v38;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v10, v12, v5);
    v21 = (uint64_t)v37;
    (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v37, v10, v5);
    sub_1AD601C90(v21, &v45);

    (*(void (**)(char *, uint64_t))(v20 + 8))(v10, v5);
    goto LABEL_7;
  }

  v41 = a1;
  v30 = a1;
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    v27 = (unint64_t)v45;
    v26 = v46;
    swift_bridgeObjectRelease();

    v22 = 0xD000000000000022;
    v23 = 0x80000001AD6B4020;
    v25 = 0xEC00000065756C61;
    v24 = 0x5664696C61766E69;
    goto LABEL_9;
  }

  v44 = a1;
  v31 = a1;
  if (swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    sub_1AD6020FC((uint64_t)v41, v42, v43);

    v22 = (unint64_t)v45;
    v23 = v46;
    v24 = v47;
    v25 = v48;
    v27 = v49;
    v26 = v50;
    v28 = v44;
    goto LABEL_8;
  }

  v41 = a1;
  v32 = a1;
  sub_1AD601AE4();
  if (swift_dynamicCast())
  {
    v33 = v44;
    v34 = objc_msgSend(v44, sel_domain);
    sub_1AD63B768();

    v45 = (id)0xD000000000000014;
    v46 = 0x80000001AD6B4000;
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v22 = (unint64_t)v45;
    v23 = v46;
    v45 = objc_msgSend(v33, sel_code);
    v24 = sub_1AD63C0D4();
    v25 = v35;

  }
  else
  {

    v45 = 0;
    v46 = 0xE000000000000000;
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    v45 = (id)0xD000000000000014;
    v46 = 0x80000001AD6B4000;
    swift_getErrorValue();
    swift_getDynamicType();
    sub_1AD63C578();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v22 = (unint64_t)v45;
    v23 = v46;

    v25 = 0xEB00000000657079;
    v24 = 0x546E776F6E6B6E55;
  }
  v26 = v39;
  v29 = v40;
  v27 = v36;
LABEL_10:
  *v29 = v22;
  v29[1] = v23;
  v29[2] = v24;
  v29[3] = v25;
  v29[4] = v27;
  v29[5] = v26;
}

unint64_t sub_1AD601AE4()
{
  unint64_t result;

  result = qword_1EECDB380;
  if (!qword_1EECDB380)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EECDB380);
  }
  return result;
}

void sub_1AD601B20(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v8 = objc_msgSend(a1, sel_domain);
  sub_1AD63B768();

  sub_1AD63B810();
  swift_bridgeObjectRelease();
  objc_msgSend(a1, sel_code);
  v9 = sub_1AD63C0D4();
  v11 = v10;

  *a4 = 0xD000000000000014;
  a4[1] = 0x80000001AD6B4000;
  a4[2] = v9;
  a4[3] = v11;
  a4[4] = a2;
  a4[5] = a3;
}

uint64_t sub_1AD601C0C()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD601C38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD601C64()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD601C90@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __int128 *v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  char *v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t result;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  _QWORD v31[4];

  v4 = sub_1AD63BD80();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1AD63BD8C();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (__int128 *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(__int128 *, uint64_t, uint64_t))(v9 + 16))(v11, a1, v8);
  v12 = (*(uint64_t (**)(__int128 *, uint64_t))(v9 + 88))(v11, v8);
  if (v12 == *MEMORY[0x1E0DEC450])
  {
    (*(void (**)(__int128 *, uint64_t))(v9 + 96))(v11, v8);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, (char *)v11 + *(int *)(v13 + 48), v4);
    v14 = sub_1AD602800();
    v16 = v15;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = 0xEC00000068637461;
    v18 = 0x6D73694D65707974;
  }
  else if (v12 == *MEMORY[0x1E0DEC460])
  {
    (*(void (**)(__int128 *, uint64_t))(v9 + 96))(v11, v8);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, (char *)v11 + *(int *)(v19 + 48), v4);
    v14 = sub_1AD602800();
    v16 = v20;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = 0xED0000646E756F46;
    v18 = 0x746F4E65756C6176;
  }
  else if (v12 == *MEMORY[0x1E0DEC448])
  {
    (*(void (**)(__int128 *, uint64_t))(v9 + 96))(v11, v8);
    v21 = (char *)v11 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    sub_1AD00FA24(v11, (uint64_t)v31);
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v21, v4);
    v27 = sub_1AD602800();
    v28 = a1;
    v23 = v22;
    v29 = 46;
    v30 = 0xE100000000000000;
    __swift_project_boxed_opaque_existential_1(v31, v31[3]);
    sub_1AD63C548();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v29 = v27;
    v30 = v23;
    swift_bridgeObjectRetain();
    a1 = v28;
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v14 = v29;
    v16 = v30;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
    v17 = 0xEB00000000646E75;
    v18 = 0x6F46746F4E79656BLL;
  }
  else if (v12 == *MEMORY[0x1E0DEC458])
  {
    (*(void (**)(__int128 *, uint64_t))(v9 + 96))(v11, v8);
    (*(void (**)(char *, __int128 *, uint64_t))(v5 + 32))(v7, v11, v4);
    v14 = sub_1AD602800();
    v16 = v24;
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v17 = 0xED00006465747075;
    v18 = 0x72726F4361746164;
  }
  else
  {
    (*(void (**)(__int128 *, uint64_t))(v9 + 8))(v11, v8);
    v17 = 0xEB00000000657079;
    v18 = 0x546E776F6E6B6E55;
    v16 = 0xEA00000000007965;
    v14 = 0x4B6E776F6E6B6E55;
  }
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  *a2 = 0xD000000000000021;
  a2[1] = 0x80000001AD6B4050;
  a2[2] = v18;
  a2[3] = v17;
  a2[4] = v14;
  a2[5] = v16;
  return result;
}

uint64_t sub_1AD60208C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = *a1;
  v4 = a1[1];
  result = swift_bridgeObjectRelease();
  *(_QWORD *)a2 = 0xD000000000000022;
  *(_QWORD *)(a2 + 8) = 0x80000001AD6B4020;
  strcpy((char *)(a2 + 16), "invalidValue");
  *(_BYTE *)(a2 + 29) = 0;
  *(_WORD *)(a2 + 30) = -5120;
  *(_QWORD *)(a2 + 32) = v3;
  *(_QWORD *)(a2 + 40) = v4;
  return result;
}

void sub_1AD6020FC(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X12 }
}

uint64_t sub_1AD602168()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  swift_bridgeObjectRetain();
  sub_1AD63BD38();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  result = sub_1AD32F0C8(v4, v3, 0);
  *v2 = v5 + 8;
  v2[1] = 0x80000001AD6B40D0;
  v2[2] = v5 + 4;
  v2[3] = 0x80000001AD6B4120;
  v2[4] = v1;
  v2[5] = v0;
  return result;
}

uint64_t sub_1AD602324()
{
  _BYTE *v0;
  uint64_t v1;

  v1 = 0x707954726F727265;
  if (*v0 != 1)
    v1 = 0x6874615079656BLL;
  if (*v0)
    return v1;
  else
    return 0x6E69616D6F64;
}

uint64_t sub_1AD602380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD603780(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD6023A4()
{
  sub_1AD602990();
  return sub_1AD63C560();
}

uint64_t sub_1AD6023CC()
{
  sub_1AD602990();
  return sub_1AD63C56C();
}

uint64_t sub_1AD6023F4(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[6];
  char v12;
  char v13;
  char v14;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4E8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v11[3] = v1[3];
  v11[4] = v7;
  v8 = v1[4];
  v11[1] = v1[5];
  v11[2] = v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD602990();
  sub_1AD63C53C();
  v14 = 0;
  v9 = v11[5];
  sub_1AD63C020();
  if (!v9)
  {
    v13 = 1;
    sub_1AD63C020();
    v12 = 2;
    sub_1AD63BFD8();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1AD60255C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA5F8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD602990();
  sub_1AD63C524();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_1AD63BF0C();
  v11 = v10;
  v24 = v9;
  v26 = 1;
  swift_bridgeObjectRetain();
  v12 = sub_1AD63BF0C();
  v14 = v13;
  v22 = v12;
  v25 = 2;
  swift_bridgeObjectRetain();
  v23 = v14;
  v15 = sub_1AD63BEC4();
  v17 = v16;
  v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD602788@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AD60255C(a1, a2);
}

uint64_t sub_1AD60279C(_QWORD *a1)
{
  return sub_1AD6023F4(a1);
}

uint64_t sub_1AD6027B0()
{
  sub_1AD6038D8();
  return sub_1AD63C464();
}

uint64_t sub_1AD6027D8()
{
  sub_1AD6038D8();
  return sub_1AD63C458();
}

uint64_t sub_1AD602800()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD v12[4];
  uint64_t v13;

  v0 = sub_1AD63BD74();
  v1 = *(_QWORD *)(v0 + 16);
  if (v1)
  {
    v13 = MEMORY[0x1E0DEE9D8];
    sub_1AD1474DC(0, v1, 0);
    v2 = v0 + 32;
    v3 = v13;
    do
    {
      sub_1AD0CFC4C(v2, (uint64_t)v12);
      __swift_project_boxed_opaque_existential_1(v12, v12[3]);
      v4 = sub_1AD63C548();
      v6 = v5;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AD1474DC(0, *(_QWORD *)(v3 + 16) + 1, 1);
        v3 = v13;
      }
      v8 = *(_QWORD *)(v3 + 16);
      v7 = *(_QWORD *)(v3 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_1AD1474DC(v7 > 1, v8 + 1, 1);
        v3 = v13;
      }
      *(_QWORD *)(v3 + 16) = v8 + 1;
      v9 = v3 + 16 * v8;
      *(_QWORD *)(v9 + 32) = v4;
      *(_QWORD *)(v9 + 40) = v6;
      v2 += 40;
      --v1;
    }
    while (v1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = MEMORY[0x1E0DEE9D8];
  }
  v12[0] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7330);
  sub_1AD00F8EC();
  v10 = sub_1AD63B720();
  swift_bridgeObjectRelease();
  return v10;
}

unint64_t sub_1AD602990()
{
  unint64_t result;

  result = qword_1ED2E20A0;
  if (!qword_1ED2E20A0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699D20, &type metadata for Explosion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E20A0);
  }
  return result;
}

uint64_t sub_1AD6029D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  __int128 *v15;
  void (*v16)(__int128 *, uint64_t, uint64_t);
  int v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char *v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v8 = sub_1AD63BD80();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = sub_1AD63BD8C();
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v12);
  v15 = (__int128 *)((char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = *(void (**)(__int128 *, uint64_t, uint64_t))(v13 + 16);
  v33 = a3;
  v16(v15, a3, v12);
  v17 = (*(uint64_t (**)(__int128 *, uint64_t))(v13 + 88))(v15, v12);
  if (v17 == *MEMORY[0x1E0DEC450])
  {
    (*(void (**)(__int128 *, uint64_t))(v13 + 96))(v15, v12);
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, (char *)v15 + *(int *)(v18 + 48), v8);
    v19 = sub_1AD602E3C(a1, a2);
    v21 = v20;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v22 = 0xEC00000068637461;
    v23 = 0x6D73694D65707974;
  }
  else if (v17 == *MEMORY[0x1E0DEC460])
  {
    (*(void (**)(__int128 *, uint64_t))(v13 + 96))(v15, v12);
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, (char *)v15 + *(int *)(v24 + 48), v8);
    v19 = sub_1AD602E3C(a1, a2);
    v21 = v25;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v22 = 0xED0000646E756F46;
    v23 = 0x746F4E65756C6176;
  }
  else if (v17 == *MEMORY[0x1E0DEC448])
  {
    (*(void (**)(__int128 *, uint64_t))(v13 + 96))(v15, v12);
    v26 = (char *)v15 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(qword_1EECDC7A8) + 48);
    sub_1AD00FA24(v15, (uint64_t)&v36);
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v26, v8);
    v32 = sub_1AD602E3C(a1, a2);
    v28 = v27;
    swift_bridgeObjectRelease();
    v34 = 46;
    v35 = 0xE100000000000000;
    __swift_project_boxed_opaque_existential_1(&v36, v38);
    sub_1AD63C548();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v34 = v32;
    v35 = v28;
    swift_bridgeObjectRetain();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v19 = v34;
    v21 = v35;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v36);
    v22 = 0xEB00000000646E75;
    v23 = 0x6F46746F4E79656BLL;
  }
  else if (v17 == *MEMORY[0x1E0DEC458])
  {
    (*(void (**)(__int128 *, uint64_t))(v13 + 96))(v15, v12);
    (*(void (**)(char *, __int128 *, uint64_t))(v9 + 32))(v11, v15, v8);
    v19 = sub_1AD602E3C(a1, a2);
    v21 = v29;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    v22 = 0xED00006465747075;
    v23 = 0x72726F4361746164;
  }
  else
  {
    v36 = a1;
    v37 = a2;
    swift_bridgeObjectRetain();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v19 = v36;
    v21 = v37;
    (*(void (**)(__int128 *, uint64_t))(v13 + 8))(v15, v12);
    v22 = 0xEB00000000657079;
    v23 = 0x546E776F6E6B6E55;
  }
  result = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8))(v33, v12);
  *a4 = 0xD000000000000021;
  a4[1] = 0x80000001AD6B4050;
  a4[2] = v23;
  a4[3] = v22;
  a4[4] = v19;
  a4[5] = v21;
  return result;
}

uint64_t sub_1AD602E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD v17[4];
  uint64_t v18;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E5310);
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v4 + 32) = a1;
  *(_QWORD *)(v4 + 40) = a2;
  swift_bridgeObjectRetain();
  v5 = sub_1AD63BD74();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6)
  {
    v18 = MEMORY[0x1E0DEE9D8];
    sub_1AD1474DC(0, v6, 0);
    v7 = v5 + 32;
    v8 = v18;
    do
    {
      sub_1AD0CFC4C(v7, (uint64_t)v17);
      __swift_project_boxed_opaque_existential_1(v17, v17[3]);
      v9 = sub_1AD63C548();
      v11 = v10;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1AD1474DC(0, *(_QWORD *)(v8 + 16) + 1, 1);
        v8 = v18;
      }
      v13 = *(_QWORD *)(v8 + 16);
      v12 = *(_QWORD *)(v8 + 24);
      if (v13 >= v12 >> 1)
      {
        sub_1AD1474DC(v12 > 1, v13 + 1, 1);
        v8 = v18;
      }
      *(_QWORD *)(v8 + 16) = v13 + 1;
      v14 = v8 + 16 * v13;
      *(_QWORD *)(v14 + 32) = v9;
      *(_QWORD *)(v14 + 40) = v11;
      v7 += 40;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v8 = MEMORY[0x1E0DEE9D8];
  }
  v17[0] = v4;
  sub_1AD603630(v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7330);
  sub_1AD00F8EC();
  v15 = sub_1AD63B720();
  swift_bridgeObjectRelease();
  return v15;
}

unint64_t sub_1AD60301C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t inited;
  uint64_t v9;
  uint64_t v11;

  v2 = *v0;
  v1 = v0[1];
  v4 = v0[2];
  v3 = v0[3];
  v5 = v0[5];
  v11 = *v0;
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  v6 = v11;
  v7 = v1;
  if (v5)
  {
    sub_1AD63B810();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    v6 = v11;
    v7 = v1;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA600);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD64CE50;
  *(_QWORD *)(inited + 32) = 0x6F69736F6C707865;
  *(_QWORD *)(inited + 40) = 0xEF6E69616D6F446ELL;
  v9 = MEMORY[0x1E0DEA968];
  *(_QWORD *)(inited + 48) = v2;
  *(_QWORD *)(inited + 56) = v1;
  *(_QWORD *)(inited + 72) = v9;
  *(_QWORD *)(inited + 80) = 0xD000000000000012;
  *(_QWORD *)(inited + 88) = 0x80000001AD6B4080;
  *(_QWORD *)(inited + 96) = v4;
  *(_QWORD *)(inited + 104) = v3;
  *(_QWORD *)(inited + 120) = v9;
  *(_QWORD *)(inited + 128) = 0x74654D726F727265;
  *(_QWORD *)(inited + 168) = v9;
  *(_QWORD *)(inited + 136) = 0xEB00000000636972;
  *(_QWORD *)(inited + 144) = v6;
  *(_QWORD *)(inited + 152) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_1AD439A5C(inited);
}

uint64_t destroy for Explosion()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for Explosion(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for Explosion(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for Explosion(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Explosion()
{
  return &type metadata for Explosion;
}

uint64_t storeEnumTagSinglePayload for Explosion.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1AD603370 + 4 * byte_1AD699B69[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1AD6033A4 + 4 * byte_1AD699B64[v4]))();
}

uint64_t sub_1AD6033A4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD6033AC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD6033B4);
  return result;
}

uint64_t sub_1AD6033C0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD6033C8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1AD6033CC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD6033D4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Explosion.CodingKeys()
{
  return &type metadata for Explosion.CodingKeys;
}

unint64_t sub_1AD6033F4()
{
  unint64_t result;

  result = qword_1EECDEBB0;
  if (!qword_1EECDEBB0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699CF8, &type metadata for Explosion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEBB0);
  }
  return result;
}

unint64_t sub_1AD60343C()
{
  unint64_t result;

  result = qword_1ED2E20B0;
  if (!qword_1ED2E20B0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699C68, &type metadata for Explosion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E20B0);
  }
  return result;
}

unint64_t sub_1AD603484()
{
  unint64_t result;

  result = qword_1ED2E20A8;
  if (!qword_1ED2E20A8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699C90, &type metadata for Explosion.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED2E20A8);
  }
  return result;
}

uint64_t sub_1AD6034C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1AD3CACBC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7480);
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1AD63BE64();
  __break(1u);
  return result;
}

uint64_t sub_1AD603630(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  int64_t v14;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_18;
  }
  if (v4 <= v5)
    v14 = v4 + v2;
  else
    v14 = v4;
  v3 = sub_1AD3CBA00(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
LABEL_5:
  v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2)
    goto LABEL_24;
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
  v11 = v3[2];
  v12 = __OFADD__(v11, v2);
  v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1AD63BE64();
  __break(1u);
  return result;
}

uint64_t sub_1AD603780(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6E69616D6F64 && a2 == 0xE600000000000000;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954726F727265 && a2 == 0xE900000000000065 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6874615079656BLL && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

unint64_t sub_1AD6038D8()
{
  unint64_t result;

  result = qword_1ED2DA5C8;
  if (!qword_1ED2DA5C8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699C00, &type metadata for Explosion);
    atomic_store(result, (unint64_t *)&qword_1ED2DA5C8);
  }
  return result;
}

uint64_t sub_1AD60391C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t inited;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(_BYTE *, uint64_t, uint64_t);
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE v23[48];

  v2 = type metadata accessor for SwiftRegexValidator();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = MEMORY[0x1E0C80A78](v2);
  v6 = &v23[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v5);
  v8 = &v23[-v7];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A00);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  if (qword_1EECD15B0 != -1)
    swift_once();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v11 = __swift_project_value_buffer(v10, (uint64_t)qword_1EED83B28);
  v12 = *(void (**)(_BYTE *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  v12(v8, v11, v10);
  sub_1AD49D738((uint64_t)v8, (uint64_t)v6);
  v13 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v14 = swift_allocObject();
  sub_1AD49D780((uint64_t)v6, v14 + v13);
  sub_1AD49D7C4((uint64_t)v8);
  if (qword_1EECD1690 != -1)
    swift_once();
  v15 = __swift_project_value_buffer(v10, (uint64_t)qword_1EED83C80);
  v12(v8, v15, v10);
  sub_1AD49D738((uint64_t)v8, (uint64_t)v6);
  v16 = swift_allocObject();
  sub_1AD49D780((uint64_t)v6, v16 + v13);
  sub_1AD49D7C4((uint64_t)v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1AD648170;
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1AD28D960;
  *(_QWORD *)(v18 + 24) = v14;
  *(_QWORD *)(v17 + 32) = sub_1AD2F5214;
  *(_QWORD *)(v17 + 40) = v18;
  v19 = swift_allocObject();
  *(_QWORD *)(v19 + 16) = sub_1AD28D960;
  *(_QWORD *)(v19 + 24) = v16;
  *(_QWORD *)(v17 + 48) = sub_1AD3246BC;
  *(_QWORD *)(v17 + 56) = v19;
  v20 = swift_allocObject();
  *(_QWORD *)(v20 + 16) = v17;
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = sub_1AD32466C;
  *(_QWORD *)(v21 + 24) = v20;
  *(_QWORD *)(inited + 32) = sub_1AD324674;
  *(_QWORD *)(inited + 40) = v21;
  return sub_1AD2808C4((_QWORD *)inited, a1);
}

uint64_t sub_1AD603BD0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[1];
  v3 = v1[2];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD603C00(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  return result;
}

uint64_t sub_1AD603C44()
{
  uint64_t v0;
  uint64_t result;

  if (*(_QWORD *)(v0 + 16))
    return swift_bridgeObjectRetain();
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t (*sub_1AD603CA4(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(_QWORD *, char);

  a1[1] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  if (v3)
  {
    *a1 = v3;
    swift_bridgeObjectRetain();
    return sub_1AD0E0D6C;
  }
  else
  {
    result = (uint64_t (*)(_QWORD *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD603D28(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[1];
  v4 = v1[2];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v1;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD0E0ED4;
}

unint64_t sub_1AD603D78(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD28E914();
  result = sub_1AD28EA6C();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD603DA8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return _s9BlastDoor10TapMessageV4tapsSayAA06SingleC0VGvs_0(v0);
}

uint64_t sub_1AD603DD0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

ValueMetadata *type metadata accessor for PublicUserIdentityListCharacteristic()
{
  return &type metadata for PublicUserIdentityListCharacteristic;
}

uint64_t sub_1AD603E1C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD603E40()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD603E6C@<X0>(uint64_t (**a1)()@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648160;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = 0;
  *(_BYTE *)(v3 + 24) = 1;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1AD648170;
  v5 = swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1AD60423C;
  *(_QWORD *)(v5 + 24) = v3;
  *(_QWORD *)(v4 + 32) = sub_1AD2F5214;
  *(_QWORD *)(v4 + 40) = v5;
  v6 = swift_allocObject();
  *(_QWORD *)(v6 + 16) = sub_1AD284780;
  *(_QWORD *)(v6 + 24) = 0;
  *(_QWORD *)(v4 + 48) = sub_1AD3246BC;
  *(_QWORD *)(v4 + 56) = v6;
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v4;
  *(_QWORD *)(inited + 32) = sub_1AD32466C;
  *(_QWORD *)(inited + 40) = v7;
  return sub_1AD280838((_QWORD *)inited, a1);
}

uint64_t sub_1AD603F94@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD603FC4(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD604014()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD604090(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD34BDE0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD604118(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34BF10;
}

unint64_t sub_1AD60417C(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD28BE74();
  result = sub_1AD28BF54();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD6041AC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD6041E8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

ValueMetadata *type metadata accessor for GroupID()
{
  return &type metadata for GroupID;
}

uint64_t sub_1AD60422C()
{
  return swift_deallocObject();
}

BOOL sub_1AD60423C(uint64_t *a1)
{
  uint64_t v1;

  return sub_1AD53A4F4(a1, v1 + 16);
}

uint64_t sub_1AD604244()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD604268()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD604290()
{
  unsigned __int8 *v0;

  return *v0 + 1;
}

uint64_t sub_1AD60429C()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD6042A4()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double sub_1AD6042AC()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t sub_1AD6042B4()
{
  sub_1AD60442C();
  return sub_1AD63C560();
}

uint64_t sub_1AD6042DC()
{
  sub_1AD60442C();
  return sub_1AD63C56C();
}

uint64_t sub_1AD604304(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE v8[16];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEBB8);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD60442C();
  sub_1AD63C53C();
  v8[15] = 0;
  sub_1AD63C050();
  if (!v1)
  {
    v8[14] = 1;
    sub_1AD63C038();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_1AD60442C()
{
  unint64_t result;

  result = qword_1EECDEBC0;
  if (!qword_1EECDEBC0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A3A0, &type metadata for WorkoutPreview.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEBC0);
  }
  return result;
}

uint64_t sub_1AD604470@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE v13[16];

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEBC8);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD60442C();
  sub_1AD63C524();
  if (!v2)
  {
    v13[15] = 0;
    v9 = sub_1AD63BF3C();
    v13[14] = 1;
    sub_1AD63BF24();
    v11 = v10;
    (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
}

uint64_t sub_1AD6045C8@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1AD604470(a1, a2);
}

uint64_t sub_1AD6045DC(_QWORD *a1)
{
  return sub_1AD604304(a1);
}

unint64_t sub_1AD6045F0@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v2;

  v2 = 0x40302010000uLL >> (8 * result);
  if (result >= 6)
    LOBYTE(v2) = 0;
  *a2 = v2;
  return result;
}

unint64_t sub_1AD604610@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  unint64_t v2;

  v2 = 0x40302010005uLL >> (8 * result);
  if (result >= 6)
    LOBYTE(v2) = 5;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD604638()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD60467C()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD6046A8()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

unint64_t sub_1AD6046E8@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  return sub_1AD604610(*a1, a2);
}

uint64_t sub_1AD6046F0()
{
  sub_1AD605AEC();
  return sub_1AD63B930();
}

uint64_t sub_1AD60474C()
{
  sub_1AD605AEC();
  return sub_1AD63B8D0();
}

unint64_t sub_1AD604798@<X0>(unint64_t result@<X0>, _BYTE *a2@<X8>)
{
  char v2;

  if (result >= 4)
    v2 = 0;
  else
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t sub_1AD6047A8@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 4;
  if (result < 4)
    v2 = result;
  *a2 = v2;
  return result;
}

unint64_t sub_1AD6047BC@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1AD6047A8(*a1, a2);
}

uint64_t sub_1AD6047C4()
{
  sub_1AD605AA8();
  return sub_1AD63B93C();
}

uint64_t sub_1AD604820()
{
  sub_1AD605AA8();
  return sub_1AD63B8DC();
}

uint64_t sub_1AD60486C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1AD604874(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD60487C())()
{
  return nullsub_1;
}

uint64_t sub_1AD60488C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t sub_1AD604894(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

uint64_t (*sub_1AD60489C())()
{
  return nullsub_1;
}

void sub_1AD6048AC(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 9);
}

_BYTE *sub_1AD6048B8(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 9) = *result;
  return result;
}

uint64_t (*sub_1AD6048C4())()
{
  return nullsub_1;
}

uint64_t sub_1AD6048D4()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1AD604900(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t (*sub_1AD604934())()
{
  return nullsub_1;
}

void sub_1AD604944(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 32);
}

_BYTE *sub_1AD604950(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 32) = *result;
  return result;
}

uint64_t (*sub_1AD60495C())()
{
  return nullsub_1;
}

uint64_t sub_1AD60496C@<X0>(uint64_t result@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X5>, uint64_t a7@<X8>)
{
  char v7;
  char v8;

  v7 = *a3;
  v8 = *a6;
  *(_QWORD *)a7 = result;
  *(_BYTE *)(a7 + 8) = a2;
  *(_BYTE *)(a7 + 9) = v7;
  *(_QWORD *)(a7 + 16) = a4;
  *(_QWORD *)(a7 + 24) = a5;
  *(_BYTE *)(a7 + 32) = v8;
  return result;
}

uint64_t sub_1AD60498C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1AD6049C8 + 4 * byte_1AD699DF0[a1]))(0x7974697669746361, 0xEC00000065707954);
}

uint64_t sub_1AD6049C8()
{
  return 0x726F6F646E497369;
}

unint64_t sub_1AD6049E0()
{
  return 0xD000000000000011;
}

unint64_t sub_1AD604A08()
{
  return 0xD000000000000012;
}

uint64_t sub_1AD604A28()
{
  unsigned __int8 *v0;

  return sub_1AD60498C(*v0);
}

uint64_t sub_1AD604A30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1AD605890(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1AD604A54()
{
  sub_1AD604C8C();
  return sub_1AD63C560();
}

uint64_t sub_1AD604A7C()
{
  sub_1AD604C8C();
  return sub_1AD63C56C();
}

uint64_t sub_1AD604AA4(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  int v8;
  uint64_t v9;
  char v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  char v17;
  char v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEBD0);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 *)(v1 + 8);
  v15 = *(unsigned __int8 *)(v1 + 9);
  v16 = v8;
  v9 = *(_QWORD *)(v1 + 16);
  v13 = *(_QWORD *)(v1 + 24);
  v14 = v9;
  HIDWORD(v12) = *(unsigned __int8 *)(v1 + 32);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD604C8C();
  sub_1AD63C53C();
  v23 = 0;
  sub_1AD63C05C();
  if (!v2)
  {
    v10 = v15;
    v22 = 1;
    sub_1AD63C02C();
    v21 = v10;
    v20 = 2;
    sub_1AD604CD0();
    sub_1AD63C068();
    v19 = 3;
    sub_1AD63C020();
    v18 = BYTE4(v12);
    v17 = 4;
    sub_1AD604D14();
    sub_1AD63C068();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1AD604C8C()
{
  unint64_t result;

  result = qword_1EECDEBD8;
  if (!qword_1EECDEBD8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A350, &type metadata for WorkoutPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEBD8);
  }
  return result;
}

unint64_t sub_1AD604CD0()
{
  unint64_t result;

  result = qword_1EECDEBE0;
  if (!qword_1EECDEBE0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699F58, &type metadata for WorkoutPreview.ConfigurationType);
    atomic_store(result, (unint64_t *)&qword_1EECDEBE0);
  }
  return result;
}

unint64_t sub_1AD604D14()
{
  unint64_t result;

  result = qword_1EECDEBE8;
  if (!qword_1EECDEBE8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A074, &type metadata for WorkoutPreview.GoalTypeIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EECDEBE8);
  }
  return result;
}

uint64_t sub_1AD604D58@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  char v21;
  char v22;
  char v23;
  char v24;
  unsigned __int8 v25;
  char v26;
  char v27;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEBF0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD604C8C();
  sub_1AD63C524();
  if (v2)
    return __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  v27 = 0;
  v9 = sub_1AD63BF48();
  v26 = 1;
  v10 = sub_1AD63BF18();
  v24 = 2;
  sub_1AD604FB0();
  sub_1AD63BF54();
  v20 = v25;
  v23 = 3;
  v11 = sub_1AD63BF0C();
  v13 = v12;
  v18 = v11;
  v21 = 4;
  sub_1AD604FF4();
  v19 = v13;
  swift_bridgeObjectRetain();
  sub_1AD63BF54();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  v14 = v22;
  *(_QWORD *)a2 = v9;
  *(_BYTE *)(a2 + 8) = v10 & 1;
  *(_BYTE *)(a2 + 9) = v20;
  v15 = v19;
  *(_QWORD *)(a2 + 16) = v18;
  *(_QWORD *)(a2 + 24) = v15;
  *(_BYTE *)(a2 + 32) = v14;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1AD604FB0()
{
  unint64_t result;

  result = qword_1EECDEBF8;
  if (!qword_1EECDEBF8)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699F30, &type metadata for WorkoutPreview.ConfigurationType);
    atomic_store(result, (unint64_t *)&qword_1EECDEBF8);
  }
  return result;
}

unint64_t sub_1AD604FF4()
{
  unint64_t result;

  result = qword_1EECDEC00;
  if (!qword_1EECDEC00)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A04C, &type metadata for WorkoutPreview.GoalTypeIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EECDEC00);
  }
  return result;
}

uint64_t sub_1AD605038@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1AD604D58(a1, a2);
}

uint64_t sub_1AD60504C(_QWORD *a1)
{
  return sub_1AD604AA4(a1);
}

uint64_t sub_1AD605060@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(_QWORD *)a2 = result;
  *(double *)(a2 + 8) = a3;
  return result;
}

unint64_t sub_1AD605070()
{
  unint64_t result;

  result = qword_1EECDEC08;
  if (!qword_1EECDEC08)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699E64, &type metadata for WorkoutPreview.ConfigurationType);
    atomic_store(result, (unint64_t *)&qword_1EECDEC08);
  }
  return result;
}

uint64_t sub_1AD6050B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD604FB0, (uint64_t (*)(void))sub_1AD604CD0);
}

unint64_t sub_1AD6050CC()
{
  unint64_t result;

  result = qword_1EECDEC10;
  if (!qword_1EECDEC10)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699F80, &type metadata for WorkoutPreview.GoalTypeIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EECDEC10);
  }
  return result;
}

uint64_t sub_1AD605110(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD604FF4, (uint64_t (*)(void))sub_1AD604D14);
}

unint64_t sub_1AD605128()
{
  unint64_t result;

  result = qword_1EECDEC18;
  if (!qword_1EECDEC18)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699E14, &type metadata for WorkoutPreview.Constraints);
    atomic_store(result, (unint64_t *)&qword_1EECDEC18);
  }
  return result;
}

unint64_t sub_1AD605170()
{
  unint64_t result;

  result = qword_1EECDEC20;
  if (!qword_1EECDEC20)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699E3C, &type metadata for WorkoutPreview.Constraints);
    atomic_store(result, (unint64_t *)&qword_1EECDEC20);
  }
  return result;
}

unint64_t sub_1AD6051B4(uint64_t a1)
{
  unint64_t result;

  result = sub_1AD6051D8();
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

unint64_t sub_1AD6051D8()
{
  unint64_t result;

  result = qword_1EECDEC28;
  if (!qword_1EECDEC28)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A0C8, &type metadata for WorkoutPreview);
    atomic_store(result, (unint64_t *)&qword_1EECDEC28);
  }
  return result;
}

uint64_t sub_1AD60521C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD605230, (uint64_t (*)(void))sub_1AD605274);
}

unint64_t sub_1AD605230()
{
  unint64_t result;

  result = qword_1EECDEC30;
  if (!qword_1EECDEC30)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A0E4, &type metadata for WorkoutPreview);
    atomic_store(result, (unint64_t *)&qword_1EECDEC30);
  }
  return result;
}

unint64_t sub_1AD605274()
{
  unint64_t result;

  result = qword_1EECDEC38;
  if (!qword_1EECDEC38)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A10C, &type metadata for WorkoutPreview);
    atomic_store(result, (unint64_t *)&qword_1EECDEC38);
  }
  return result;
}

uint64_t initializeWithCopy for WorkoutPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v3;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for WorkoutPreview(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for WorkoutPreview(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for WorkoutPreview(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 33))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WorkoutPreview(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_BYTE *)(result + 32) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 33) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 33) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPreview()
{
  return &type metadata for WorkoutPreview;
}

ValueMetadata *type metadata accessor for WorkoutPreview.Constraints()
{
  return &type metadata for WorkoutPreview.Constraints;
}

ValueMetadata *type metadata accessor for WorkoutPreview.ConfigurationType()
{
  return &type metadata for WorkoutPreview.ConfigurationType;
}

uint64_t storeEnumTagSinglePayload for WorkoutPreview.GoalTypeIdentifier(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1AD6054C8 + 4 * byte_1AD699DFA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1AD6054FC + 4 * byte_1AD699DF5[v4]))();
}

uint64_t sub_1AD6054FC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD605504(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD60550CLL);
  return result;
}

uint64_t sub_1AD605518(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD605520);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1AD605524(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD60552C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPreview.GoalTypeIdentifier()
{
  return &type metadata for WorkoutPreview.GoalTypeIdentifier;
}

uint64_t _s9BlastDoor14WorkoutPreviewV17ConfigurationTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_1AD605594 + 4 * byte_1AD699E04[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_1AD6055C8 + 4 * byte_1AD699DFF[v4]))();
}

uint64_t sub_1AD6055C8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD6055D0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD6055D8);
  return result;
}

uint64_t sub_1AD6055E4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD6055ECLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_1AD6055F0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD6055F8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPreview.CodingKeys()
{
  return &type metadata for WorkoutPreview.CodingKeys;
}

uint64_t storeEnumTagSinglePayload for WorkoutPreview.Constraints.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD605660 + 4 * byte_1AD699E0E[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD605694 + 4 * byte_1AD699E09[v4]))();
}

uint64_t sub_1AD605694(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD60569C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD6056A4);
  return result;
}

uint64_t sub_1AD6056B0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD6056B8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD6056BC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD6056C4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WorkoutPreview.Constraints.CodingKeys()
{
  return &type metadata for WorkoutPreview.Constraints.CodingKeys;
}

unint64_t sub_1AD6056E4()
{
  unint64_t result;

  result = qword_1EECDEC40;
  if (!qword_1EECDEC40)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A270, &type metadata for WorkoutPreview.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEC40);
  }
  return result;
}

unint64_t sub_1AD60572C()
{
  unint64_t result;

  result = qword_1EECDEC48;
  if (!qword_1EECDEC48)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A328, &type metadata for WorkoutPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEC48);
  }
  return result;
}

unint64_t sub_1AD605774()
{
  unint64_t result;

  result = qword_1EECDEC50;
  if (!qword_1EECDEC50)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A298, &type metadata for WorkoutPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEC50);
  }
  return result;
}

unint64_t sub_1AD6057BC()
{
  unint64_t result;

  result = qword_1EECDEC58;
  if (!qword_1EECDEC58)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A2C0, &type metadata for WorkoutPreview.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEC58);
  }
  return result;
}

unint64_t sub_1AD605804()
{
  unint64_t result;

  result = qword_1EECDEC60;
  if (!qword_1EECDEC60)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A1E0, &type metadata for WorkoutPreview.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEC60);
  }
  return result;
}

unint64_t sub_1AD60584C()
{
  unint64_t result;

  result = qword_1EECDEC68;
  if (!qword_1EECDEC68)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A208, &type metadata for WorkoutPreview.Constraints.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EECDEC68);
  }
  return result;
}

uint64_t sub_1AD605890(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x7974697669746361 && a2 == 0xEC00000065707954;
  if (v2 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726F6F646E497369 && a2 == 0xE800000000000000 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6B15C0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001AD6B15E0 || (sub_1AD63C2A8() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001AD6B1600)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    v6 = sub_1AD63C2A8();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 4;
    else
      return 5;
  }
}

unint64_t sub_1AD605AA8()
{
  unint64_t result;

  result = qword_1EECDEC70;
  if (!qword_1EECDEC70)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699FE8, &type metadata for WorkoutPreview.GoalTypeIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EECDEC70);
  }
  return result;
}

unint64_t sub_1AD605AEC()
{
  unint64_t result;

  result = qword_1EECDEC78;
  if (!qword_1EECDEC78)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD699ECC, &type metadata for WorkoutPreview.ConfigurationType);
    atomic_store(result, (unint64_t *)&qword_1EECDEC78);
  }
  return result;
}

uint64_t (*sub_1AD605B30())(_QWORD *a1)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E19F8);
  v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1AD679240;
  *(_QWORD *)(v0 + 32) = sub_1AD324644;
  *(_QWORD *)(v0 + 40) = 0;
  *(_QWORD *)(v0 + 48) = sub_1AD324644;
  *(_QWORD *)(v0 + 56) = 0;
  *(_QWORD *)(v0 + 64) = sub_1ACFF3800;
  *(_QWORD *)(v0 + 72) = 0;
  v1 = swift_allocObject();
  *(_BYTE *)(v1 + 16) = 1;
  *(_QWORD *)(v0 + 80) = sub_1AD0097D0;
  *(_QWORD *)(v0 + 88) = v1;
  v2 = swift_allocObject();
  *(_QWORD *)(v2 + 16) = v0;
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1AD32466C;
  *(_QWORD *)(v3 + 24) = v2;
  return sub_1AD2F5214;
}

uint64_t sub_1AD605C04()
{
  return swift_deallocObject();
}

uint64_t sub_1AD605C14()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1AD605C38()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD605C5C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t (**v3)(void);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v15;

  v7 = *a2;
  v6 = a2[1];
  v9 = a2[2];
  v8 = a2[3];
  v10 = *(_QWORD *)(a3 + 16);
  if ((sub_1AD499734(a1, *v3) & 1) != 0)
  {
    v11 = (char *)v3 + *(int *)(a3 + 28);
    v12 = sub_1AD63BC48();
    (*(void (**)(char *, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
    v13 = *(_QWORD *)(v10 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v11, a1, v10);
    return (*(uint64_t (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v11, 0, 1, v10);
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v15 = v7;
    v15[1] = v6;
    v15[2] = v9;
    v15[3] = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
}

uint64_t sub_1AD605D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  v5 = *(_QWORD *)(a1 + 16);
  v6 = sub_1AD63BC48();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v12 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v12 - v8, v2 + *(int *)(a1 + 28), v6);
  v10 = *(_QWORD *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v5) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a2, v9, v5);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD605E74()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1AD63BC48();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AD605EF0(_QWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  char v12;
  int v13;
  unsigned int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  if (v5)
    v6 = v5 - 1;
  else
    v6 = 0;
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = v6;
  if (v5)
    v8 = *(_QWORD *)(v4 + 64);
  else
    v8 = *(_QWORD *)(v4 + 64) + 1;
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v4 + 80);
  v10 = a2 - v7;
  if (a2 <= v7)
    goto LABEL_28;
  v11 = v8 + ((v9 + 16) & ~v9);
  v12 = 8 * v11;
  if (v11 <= 3)
  {
    v15 = ((v10 + ~(-1 << v12)) >> v12) + 1;
    if (HIWORD(v15))
    {
      v13 = *(_DWORD *)((char *)a1 + v11);
      if (!v13)
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 > 0xFF)
    {
      v13 = *(unsigned __int16 *)((char *)a1 + v11);
      if (!*(_WORD *)((char *)a1 + v11))
        goto LABEL_28;
      goto LABEL_21;
    }
    if (v15 < 2)
    {
LABEL_28:
      if ((v6 & 0x80000000) != 0)
      {
        v18 = (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v9 + 16) & ~v9);
        if (v18 >= 2)
          return v18 - 1;
        else
          return 0;
      }
      else
      {
        v17 = *a1;
        if (*a1 >= 0xFFFFFFFFuLL)
          LODWORD(v17) = -1;
        return (v17 + 1);
      }
    }
  }
  v13 = *((unsigned __int8 *)a1 + v11);
  if (!*((_BYTE *)a1 + v11))
    goto LABEL_28;
LABEL_21:
  v16 = (v13 - 1) << v12;
  if (v11 > 3)
    v16 = 0;
  if ((_DWORD)v11)
  {
    if (v11 > 3)
      LODWORD(v11) = 4;
    __asm { BR              X12 }
  }
  return v7 + v16 + 1;
}

void sub_1AD60606C(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  size_t v12;
  BOOL v13;
  unsigned int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;

  v6 = 0u;
  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  if (v8)
    v9 = v8 - 1;
  else
    v9 = 0;
  if (v9 <= 0x7FFFFFFF)
    v10 = 0x7FFFFFFF;
  else
    v10 = v9;
  v11 = *(_QWORD *)(v7 + 64);
  if (!v8)
    ++v11;
  v12 = ((*(unsigned __int8 *)(v7 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)) + v11;
  v13 = a3 >= v10;
  v14 = a3 - v10;
  if (v14 != 0 && v13)
  {
    if (v12 > 3)
    {
      v6 = 1u;
      if (v10 < a2)
        goto LABEL_19;
      goto LABEL_26;
    }
    v15 = ((v14 + ~(-1 << (8 * v12))) >> (8 * v12)) + 1;
    if (HIWORD(v15))
    {
      v6 = 4u;
      if (v10 < a2)
      {
LABEL_19:
        v16 = ~v10 + a2;
        if (v12 < 4)
        {
          if ((_DWORD)v12)
          {
            v17 = v16 & ~(-1 << (8 * v12));
            bzero(a1, v12);
            if ((_DWORD)v12 == 3)
            {
              *a1 = v17;
              *((_BYTE *)a1 + 2) = BYTE2(v17);
            }
            else if ((_DWORD)v12 == 2)
            {
              *a1 = v17;
            }
            else
            {
              *(_BYTE *)a1 = v17;
            }
          }
        }
        else
        {
          bzero(a1, v12);
          *(_DWORD *)a1 = v16;
        }
        __asm { BR              X10 }
      }
LABEL_26:
      __asm { BR              X15 }
    }
    if (v15 >= 0x100)
      v6 = 2;
    else
      v6 = v15 > 1;
  }
  if (v10 < a2)
    goto LABEL_19;
  goto LABEL_26;
}

void sub_1AD6062C0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
}

void sub_1AD6062C8()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
}

void sub_1AD6062E8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1AD6062F0()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1AD606300()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t type metadata accessor for Untrusted(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Untrusted);
}

uint64_t sub_1AD606318@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 8);
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_BYTE *)(v1 + 24);
  *(_QWORD *)a1 = *(_QWORD *)v1;
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD606334(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD606378@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(v1 + 40);
  v3 = *(_QWORD *)(v1 + 48);
  v4 = *(_BYTE *)(v1 + 56);
  *(_QWORD *)a1 = *(_QWORD *)(v1 + 32);
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = v3;
  *(_BYTE *)(a1 + 24) = v4;
  return swift_retain();
}

__n128 sub_1AD606394(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unsigned __int8 v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  swift_release();
  result = *a1;
  v1[2] = *a1;
  v1[3].n128_u64[0] = v3;
  v1[3].n128_u8[8] = v4;
  return result;
}

uint64_t sub_1AD6063D8()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 24) & 1) == 0)
    return *(_QWORD *)(v0 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD606438()
{
  uint64_t v0;
  uint64_t result;

  if ((*(_BYTE *)(v0 + 56) & 1) == 0)
    return *(_QWORD *)(v0 + 48);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD606498(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))v1;
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 16) = a1;
    *(_BYTE *)(v1 + 24) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD606564(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 24) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 16);
    return sub_1AD415B88;
  }
  return result;
}

void (*sub_1AD6065D8(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 8);
  v5 = *(_QWORD *)(v1 + 16);
  v6 = *(_BYTE *)(v1 + 24);
  *v3 = *(_QWORD *)v1;
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD39B914;
}

uint64_t sub_1AD60663C(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v3)(uint64_t *);
  uint64_t result;
  _QWORD *v5;
  uint64_t v6;

  v3 = *(uint64_t (**)(uint64_t *))(v1 + 32);
  v6 = a1;
  result = v3(&v6);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v1 + 48) = a1;
    *(_BYTE *)(v1 + 56) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v5 = 0x6E776F6E6B6E753CLL;
    v5[1] = 0xE90000000000003ELL;
    v5[2] = 0xD00000000000001CLL;
    v5[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD606708(_QWORD *a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t (*result)(uint64_t *);

  a1[1] = v1;
  if ((*(_BYTE *)(v1 + 56) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a1 = *(_QWORD *)(v1 + 48);
    return sub_1AD48E74C;
  }
  return result;
}

void (*sub_1AD60677C(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(_QWORD *)(v1 + 40);
  v5 = *(_QWORD *)(v1 + 48);
  v6 = *(_BYTE *)(v1 + 56);
  *v3 = *(_QWORD *)(v1 + 32);
  v3[1] = v4;
  v3[2] = v5;
  *((_BYTE *)v3 + 24) = v6;
  swift_retain();
  return sub_1AD39BC84;
}

unint64_t sub_1AD6067E0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD2900AC();
  result = sub_1AD290298();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD606810(uint64_t *a1)
{
  return sub_1AD00387C(*a1);
}

uint64_t sub_1AD606834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_BYTE *)(a1 + 24);
  *(_QWORD *)a2 = *(_QWORD *)a1;
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD606854(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_QWORD *)(a2 + 16) = v5;
  *(_BYTE *)(a2 + 24) = v6;
  return result;
}

uint64_t sub_1AD6068B0(uint64_t *a1)
{
  return sub_1AD00387C(*a1);
}

uint64_t sub_1AD6068D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 40);
  v3 = *(_QWORD *)(a1 + 48);
  v4 = *(_BYTE *)(a1 + 56);
  *(_QWORD *)a2 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a2 + 8) = v2;
  *(_QWORD *)(a2 + 16) = v3;
  *(_BYTE *)(a2 + 24) = v4;
  return swift_retain();
}

uint64_t sub_1AD6068F4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = *((_BYTE *)a1 + 24);
  swift_retain();
  result = swift_release();
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v3;
  *(_QWORD *)(a2 + 48) = v5;
  *(_BYTE *)(a2 + 56) = v6;
  return result;
}

ValueMetadata *type metadata accessor for VersionCharacteristic()
{
  return &type metadata for VersionCharacteristic;
}

uint64_t sub_1AD60695C@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD60698C(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD6069DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD606A58(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD34BDE0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD606AE0(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34BF10;
}

unint64_t sub_1AD606B44(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD28C020();
  result = sub_1AD28C064();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD606B74(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD606BB0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

ValueMetadata *type metadata accessor for GroupDisplayName()
{
  return &type metadata for GroupDisplayName;
}

uint64_t GroupContext.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 48);
  v3 = *(_BYTE *)(v0 + 80);
  if ((*(_BYTE *)(v0 + 96) & 1) == 0)
  {
    sub_1AD63C0D4();
    if ((v3 & 1) != 0)
      goto LABEL_5;
    goto LABEL_3;
  }
  if ((*(_BYTE *)(v0 + 80) & 1) == 0)
LABEL_3:
    sub_1AD63C0D4();
LABEL_5:
  sub_1AD63BD38();
  sub_1AD63B810();
  sub_1AD63B810();
  sub_1AD63B810();
  if (v2 == 1)
    goto LABEL_8;
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  swift_bridgeObjectRetain();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  if (!v1)
  {
LABEL_8:
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7330);
    sub_1AD00F8EC();
    sub_1AD63B720();
    swift_bridgeObjectRelease();
    sub_1AD63B810();
    swift_bridgeObjectRelease();
    return 0;
  }
  return result;
}

uint64_t sub_1AD606F08@<X0>(uint64_t (**a1)(uint64_t)@<X8>)
{
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A18);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1AD648170;
  v3 = sub_1AD043FDC((uint64_t)&unk_1E5CBF790);
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v3;
  swift_arrayDestroy();
  *(_QWORD *)(inited + 32) = sub_1AD28D484;
  *(_QWORD *)(inited + 40) = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2438);
  v5 = swift_initStackObject();
  *(_QWORD *)(v5 + 32) = 0x64756F6C6369;
  *(_OWORD *)(v5 + 16) = xmmword_1AD648160;
  *(_QWORD *)(v5 + 40) = 0xE600000000000000;
  *(_QWORD *)(v5 + 48) = &unk_1E5CBF760;
  v6 = sub_1AD0440D4(v5);
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2610);
  swift_arrayDestroy();
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = v6;
  *(_QWORD *)(inited + 48) = sub_1AD32DFD8;
  *(_QWORD *)(inited + 56) = v7;
  return sub_1AD2809E4((_QWORD *)inited, a1);
}

uint64_t sub_1AD607054@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1ACFF64C0(v1, a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t sub_1AD607078(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v3 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1ACFF64C0(a1, (uint64_t)v5, (uint64_t *)&unk_1ED2E1A30);
  sub_1AD326FE8((uint64_t)v5, v1);
  return sub_1AD009758(a1, (uint64_t *)&unk_1ED2E1A30);
}

uint64_t sub_1AD607104@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 24));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v6;
  a1[3] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t type metadata accessor for CombinedPluginAttachmentInfo()
{
  uint64_t result;

  result = qword_1ED2E2058;
  if (!qword_1ED2E2058)
    return swift_getSingletonMetadata();
  return result;
}

__n128 sub_1AD607184(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 24));
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD6071E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30);
  sub_1ACFF64C0(v1 + *(int *)(v6 + 28), (uint64_t)v5, &qword_1ED2E1A40);
  v7 = sub_1AD63AF28();
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v7) != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a1, v5, v7);
  sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD6072FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 24);
  if (*(_QWORD *)(v1 + 24))
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD607384(uint64_t a1)
{
  uint64_t (**v1)(char *);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  void (*v7)(char *, uint64_t, uint64_t);
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t result;
  _QWORD *v11;
  uint64_t v12;

  v3 = sub_1AD63AF28();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v7(v6, a1, v3);
  if (((*v1)(v6) & 1) != 0)
  {
    v8 = (uint64_t)v1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    sub_1AD009758(v8, &qword_1ED2E1A40);
    v7((char *)v8, (uint64_t)v6, v3);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v8, 0, 1, v3);
    v9 = *(void (**)(char *, uint64_t))(v4 + 8);
    v9(v6, v3);
    return ((uint64_t (*)(uint64_t, uint64_t))v9)(a1, v3);
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v11 = 0x6E776F6E6B6E753CLL;
    v11[1] = 0xE90000000000003ELL;
    v11[2] = 0xD00000000000001CLL;
    v11[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

void (*sub_1AD607508(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  void (*result)(uint64_t *, char);

  v3 = malloc(0x38uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = sub_1AD63AF28();
  v3[2] = v6;
  v7 = *(_QWORD *)(v6 - 8);
  v3[3] = v7;
  v8 = *(_QWORD *)(v7 + 64);
  v3[4] = malloc(v8);
  v9 = malloc(v8);
  v3[5] = v9;
  v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  *((_DWORD *)v3 + 12) = v10;
  sub_1ACFF64C0(v1 + v10, (uint64_t)v5, &qword_1ED2E1A40);
  if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1AD009758((uint64_t)v5, &qword_1ED2E1A40);
    result = (void (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    (*(void (**)(void *, void *, uint64_t))(v7 + 32))(v9, v5, v6);
    return sub_1AD34B3CC;
  }
  return result;
}

void (*sub_1AD607660(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) - 8) + 64);
  a1[1] = (uint64_t)malloc(v3);
  a1[2] = (uint64_t)malloc(v3);
  v4 = malloc(v3);
  a1[3] = (uint64_t)v4;
  sub_1ACFF64C0(v1, (uint64_t)v4, (uint64_t *)&unk_1ED2E1A30);
  return sub_1AD34B700;
}

uint64_t sub_1AD6076E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 20);
  v2 = *(_QWORD *)v1;
  sub_1AD0040A0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1AD607724(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 20);
  result = sub_1AD00412C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD607768())(_QWORD)
{
  type metadata accessor for CombinedPluginAttachmentInfo();
  return nullsub_1;
}

uint64_t sub_1AD607790@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 24);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4)
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD607814(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for CombinedPluginAttachmentInfo();
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v2, v1);
}

uint64_t sub_1AD607860(uint64_t a1, uint64_t a2)
{
  type metadata accessor for CombinedPluginAttachmentInfo();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD6078A4(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5)
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD012060;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD607940@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 24));
  v4 = v3[1];
  v6 = v3[2];
  v5 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v6;
  a2[3] = v5;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD607988(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 24));
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v5;
  v6[3] = v4;
  return result;
}

void (*sub_1AD607A04(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 24);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v8 = v5[2];
  v7 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v8;
  v3[3] = v7;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD0122A8;
}

uint64_t sub_1AD607A7C()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 28));
}

uint64_t sub_1AD607A9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for CombinedPluginAttachmentInfo();
  *(_QWORD *)(v1 + *(int *)(result + 28)) = a1;
  return result;
}

uint64_t (*sub_1AD607AC8())(_QWORD)
{
  type metadata accessor for CombinedPluginAttachmentInfo();
  return nullsub_1;
}

uint64_t sub_1AD607AF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 32);
  v2 = *(_QWORD *)v1;
  sub_1AD0040A0(*(_QWORD *)v1, *(_QWORD *)(v1 + 8));
  return v2;
}

uint64_t sub_1AD607B30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;

  v5 = v2 + *(int *)(type metadata accessor for CombinedPluginAttachmentInfo() + 32);
  result = sub_1AD00412C(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
  *(_QWORD *)v5 = a1;
  *(_QWORD *)(v5 + 8) = a2;
  return result;
}

uint64_t (*sub_1AD607B74())(_QWORD)
{
  type metadata accessor for CombinedPluginAttachmentInfo();
  return nullsub_1;
}

uint64_t sub_1AD607B9C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD607BE8(&qword_1EECD72A0, (uint64_t)&unk_1AD650318);
  result = sub_1AD607BE8(&qword_1EECD7278, (uint64_t)&unk_1AD650340);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD607BE8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CombinedPluginAttachmentInfo();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD607C30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1ACFF64C0(a1, a2, (uint64_t *)&unk_1ED2E1A30);
}

_QWORD *sub_1AD607C64(_QWORD *a1, uint64_t *a2, int *a3)
{
  int v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t *v27;
  uint64_t *v28;
  uint64_t v29;
  unint64_t v30;

  v4 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  v5 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    *a1 = v5;
    a1 = (_QWORD *)(v5 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v8 = a2[1];
    *a1 = v5;
    a1[1] = v8;
    swift_retain();
    v9 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_1AD63AF28();
    v13 = *(_QWORD *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
    }
    v15 = a3[5];
    v16 = (_QWORD *)((char *)a1 + v15);
    v17 = (uint64_t *)((char *)a2 + v15);
    v18 = *v17;
    v19 = v17[1];
    sub_1AD0040A0(*v17, v19);
    *v16 = v18;
    v16[1] = v19;
    v20 = a3[6];
    v21 = a3[7];
    v22 = (_QWORD *)((char *)a1 + v20);
    v23 = (uint64_t *)((char *)a2 + v20);
    v24 = v23[1];
    *v22 = *v23;
    v22[1] = v24;
    v25 = v23[3];
    v22[2] = v23[2];
    v22[3] = v25;
    *(_QWORD *)((char *)a1 + v21) = *(uint64_t *)((char *)a2 + v21);
    v26 = a3[8];
    v27 = (_QWORD *)((char *)a1 + v26);
    v28 = (uint64_t *)((char *)a2 + v26);
    v29 = *v28;
    v30 = v28[1];
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1AD0040A0(v29, v30);
    *v27 = v29;
    v27[1] = v30;
  }
  return a1;
}

uint64_t sub_1AD607DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_release();
  v4 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v5 = sub_1AD63AF28();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  sub_1AD00412C(*(_QWORD *)(a1 + *(int *)(a2 + 20)), *(_QWORD *)(a1 + *(int *)(a2 + 20) + 8));
  swift_release();
  swift_bridgeObjectRelease();
  return sub_1AD00412C(*(_QWORD *)(a1 + *(int *)(a2 + 32)), *(_QWORD *)(a1 + *(int *)(a2 + 32) + 8));
}

_QWORD *sub_1AD607E98(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t *v26;
  uint64_t v27;
  unint64_t v28;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63AF28();
  v11 = *(_QWORD *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  v13 = a3[5];
  v14 = (_QWORD *)((char *)a1 + v13);
  v15 = (_QWORD *)((char *)a2 + v13);
  v16 = *v15;
  v17 = v15[1];
  sub_1AD0040A0(*v15, v17);
  *v14 = v16;
  v14[1] = v17;
  v18 = a3[6];
  v19 = a3[7];
  v20 = (_QWORD *)((char *)a1 + v18);
  v21 = (_QWORD *)((char *)a2 + v18);
  v22 = v21[1];
  *v20 = *v21;
  v20[1] = v22;
  v23 = v21[3];
  v20[2] = v21[2];
  v20[3] = v23;
  *(_QWORD *)((char *)a1 + v19) = *(_QWORD *)((char *)a2 + v19);
  v24 = a3[8];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v27 = *v26;
  v28 = v26[1];
  swift_retain();
  swift_bridgeObjectRetain();
  sub_1AD0040A0(v27, v28);
  *v25 = v27;
  v25[1] = v28;
  return a1;
}

_QWORD *sub_1AD607FE4(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t *v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t *v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_retain();
  swift_release();
  v7 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_1AD63AF28();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 24))(v8, v9, v10);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
LABEL_7:
  v16 = a3[5];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = *v18;
  v20 = v18[1];
  sub_1AD0040A0(*v18, v20);
  v21 = *v17;
  v22 = v17[1];
  *v17 = v19;
  v17[1] = v20;
  sub_1AD00412C(v21, v22);
  v23 = a3[6];
  v24 = (_QWORD *)((char *)a1 + v23);
  v25 = (char *)a2 + v23;
  v26 = *(_QWORD *)((char *)a2 + v23 + 8);
  *v24 = *(_QWORD *)((char *)a2 + v23);
  v24[1] = v26;
  swift_retain();
  swift_release();
  v24[2] = *((_QWORD *)v25 + 2);
  v24[3] = *((_QWORD *)v25 + 3);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v27 = a3[8];
  v28 = (_QWORD *)((char *)a1 + v27);
  v29 = (_QWORD *)((char *)a2 + v27);
  v30 = *v29;
  v31 = v29[1];
  sub_1AD0040A0(*v29, v31);
  v32 = *v28;
  v33 = v28[1];
  *v28 = v30;
  v28[1] = v31;
  sub_1AD00412C(v32, v33);
  return a1;
}

_OWORD *sub_1AD6081B8(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  __int128 v15;
  uint64_t v16;

  *a1 = *a2;
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  *(_OWORD *)((char *)a1 + a3[5]) = *(_OWORD *)((char *)a2 + a3[5]);
  v13 = (_OWORD *)((char *)a1 + v12);
  v14 = (_OWORD *)((char *)a2 + v12);
  v15 = v14[1];
  *v13 = *v14;
  v13[1] = v15;
  v16 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v16) = *(_OWORD *)((char *)a2 + v16);
  return a1;
}

_OWORD *sub_1AD6082C0(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(char *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;

  *a1 = *a2;
  swift_release();
  v6 = *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_1AD63AF28();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (!v12)
  {
    if (!v13)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v7, v8, v9);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v7, v8, v9);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
LABEL_7:
  v15 = a3[5];
  v16 = *(_QWORD *)((char *)a1 + v15);
  v17 = *(_QWORD *)((char *)a1 + v15 + 8);
  *(_OWORD *)((char *)a1 + v15) = *(_OWORD *)((char *)a2 + v15);
  sub_1AD00412C(v16, v17);
  v18 = a3[6];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  *(_OWORD *)((char *)a1 + v18) = *(_OWORD *)((char *)a2 + v18);
  swift_release();
  v21 = *((_QWORD *)v20 + 3);
  *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
  *((_QWORD *)v19 + 3) = v21;
  swift_bridgeObjectRelease();
  v22 = a3[8];
  *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
  v23 = *(_QWORD *)((char *)a1 + v22);
  v24 = *(_QWORD *)((char *)a1 + v22 + 8);
  *(_OWORD *)((char *)a1 + v22) = *(_OWORD *)((char *)a2 + v22);
  sub_1AD00412C(v23, v24);
  return a1;
}

uint64_t sub_1AD608450()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD60845C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1AD6084DC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD6084E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A20);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_1AD608564()
{
  unint64_t v0;

  sub_1AD32DF60(319);
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1AD6085F0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t ReadReceipt.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1AD00B904(v1, a1);
}

uint64_t ReadReceipt.metadata.setter(uint64_t a1)
{
  uint64_t v1;

  return sub_1AD00B950(a1, v1);
}

uint64_t (*ReadReceipt.metadata.modify())()
{
  return nullsub_1;
}

uint64_t sub_1AD60863C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD6086C4(&qword_1ED2DA4D8, (uint64_t)&protocol conformance descriptor for ReadReceipt);
  result = sub_1AD6086C4(&qword_1ED2DA4E0, (uint64_t)&protocol conformance descriptor for ReadReceipt);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for ReadReceipt()
{
  uint64_t result;

  result = qword_1ED2E2068;
  if (!qword_1ED2E2068)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD6086C4(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t Receipt;

  result = *a1;
  if (!result)
  {
    Receipt = type metadata accessor for ReadReceipt();
    result = MEMORY[0x1AF44BDF0](a2, Receipt);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ReadReceipt()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD608710(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ReadReceipt()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD608758(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Metadata();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1AD608798(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_1AD6087E0(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

_QWORD *sub_1AD608804(uint64_t a1)
{
  return sub_1AD60887C(a1, (void (*)(_QWORD *))sub_1AD0D3088, type metadata accessor for UnpackResponseSessionFinishedMessage);
}

_QWORD *sub_1AD608840(uint64_t a1)
{
  return sub_1AD60887C(a1, (void (*)(_QWORD *))sub_1AD0D349C, type metadata accessor for EncoderErrorResponseMessage);
}

_QWORD *sub_1AD60887C(uint64_t a1, void (*a2)(_QWORD *), uint64_t (*a3)(_QWORD))
{
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t *boxed_opaque_existential_0;
  _QWORD v18[5];
  uint64_t v19;

  v8 = (*(_QWORD *(**)(uint64_t *__return_ptr))(*v3 + 120))(&v19);
  (*(void (**)(_QWORD *__return_ptr, _QWORD *))(*v3 + 144))(v18, v8);
  BYTE1(v19) = v18[0];
  swift_beginAccess();
  sub_1ACFF64C0((uint64_t)(v3 + 3), (uint64_t)v18, &qword_1ED2E73E0);
  v9 = v3[8];
  v10 = type metadata accessor for _XPCEncoder();
  swift_allocObject();
  swift_unknownObjectRetain();
  v11 = sub_1AD5F6964((char *)&v19, (uint64_t)v18, v9);
  v18[3] = v10;
  v18[4] = sub_1ACFF9724(qword_1ED2E7498, (uint64_t (*)(uint64_t))type metadata accessor for _XPCEncoder, (uint64_t)&unk_1AD6985D8);
  v18[0] = v11;
  swift_retain();
  v12 = (_QWORD *)a1;
  a2(v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  if (!v4)
  {
    v12 = *(_QWORD **)(v11 + 72);
    if (v12)
    {
      swift_unknownObjectRetain();
      swift_release();
      return v12;
    }
    v14 = sub_1AD63BDA4();
    swift_allocError();
    v16 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEA40);
    v16[3] = a3(0);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v16);
    sub_1AD0D3D2C(a1, (uint64_t)boxed_opaque_existential_0, a3);
    v18[0] = 0;
    v18[1] = 0xE000000000000000;
    v12 = v18;
    sub_1AD63BD38();
    swift_bridgeObjectRelease();
    sub_1AD63BD68();
    (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v14 - 8) + 104))(v16, *MEMORY[0x1E0DEC4B0], v14);
    swift_willThrow();
  }
  swift_release();
  return v12;
}

uint64_t sub_1AD608AB4(uint64_t a1)
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1AD60A428(a1);
    return swift_release();
  }
  return result;
}

void sub_1AD608B10(void *a1, int a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  os_log_type_t v26;
  NSObject *v27;
  _BOOL4 v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  id v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint8_t *v39;
  unsigned int (*v40)(char *, uint64_t, uint64_t);
  char *v41;
  os_log_type_t v42;
  NSObject *v43;
  void (*v44)(char *, char *, uint64_t);
  uint8_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  void (*v50)(char *, uint64_t);
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  uint64_t v59;
  void (**v60)(uint64_t);
  _xpc_connection_s *v61;
  xpc_object_t v62;
  _xpc_connection_s *v63;
  NSObject *v64;
  void *v65;
  uint8_t *v66;
  char *v67;
  uint64_t v68;
  char *v69;
  uint64_t v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  int v76;
  void (*v77)(uint64_t);
  unsigned int (*v78)(char *, uint64_t, uint64_t);
  xpc_object_t v79;
  uint64_t v80;
  uint64_t aBlock[7];

  v6 = v5;
  v76 = a2;
  v79 = a1;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  v73 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v10);
  v78 = (unsigned int (*)(char *, uint64_t, uint64_t))((char *)&v66 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0C80A78](v11);
  v74 = v15;
  v75 = (uint64_t)&v66 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v66 - v16;
  v18 = sub_1AD63B084();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v69 = (char *)&v66 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v66 - v23;
  MEMORY[0x1E0C80A78](v22);
  v71 = (char *)&v66 - v25;
  v26 = sub_1AD63BB64();
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  v27 = qword_1ED2E7530;
  v28 = os_log_type_enabled((os_log_t)qword_1ED2E7530, v26);
  v77 = a4;
  v72 = a3;
  if (v28)
  {
    swift_retain_n();
    v29 = swift_slowAlloc();
    v70 = a5;
    v30 = (uint8_t *)v29;
    v31 = swift_slowAlloc();
    v68 = v19;
    v32 = v31;
    v67 = v24;
    *(_DWORD *)v30 = 136446210;
    v66 = v30 + 4;
    v33 = v18;
    v80 = v6[4];
    v34 = (void *)v80;
    aBlock[0] = v31;
    type metadata accessor for BlastDoorInstanceType(0);
    v35 = v34;
    v36 = sub_1AD63B7A4();
    v80 = sub_1AD43D1D0(v36, v37, aBlock);
    v18 = v33;
    a3 = v72;
    v24 = v67;
    sub_1AD63BC60();
    swift_release_n();
    a4 = v77;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1ACFC8000, v27, v26, "Sending xpc to BlastDoor instance type (%{public}s)", v30, 0xCu);
    swift_arrayDestroy();
    v38 = v32;
    v19 = v68;
    MEMORY[0x1AF44BED4](v38, -1, -1);
    v39 = v30;
    a5 = v70;
    MEMORY[0x1AF44BED4](v39, -1, -1);
  }
  sub_1ACFF64C0(a3, (uint64_t)v17, &qword_1ED2E7140);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1AD009758((uint64_t)v17, &qword_1ED2E7140);
    v40 = v78;
  }
  else
  {
    v41 = v71;
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v71, v17, v18);
    v42 = sub_1AD63BB64();
    v43 = qword_1ED2E7530;
    v44 = *(void (**)(char *, char *, uint64_t))(v19 + 16);
    v44(v24, v41, v18);
    if (os_log_type_enabled(v43, v42))
    {
      v45 = (uint8_t *)swift_slowAlloc();
      v46 = swift_slowAlloc();
      v67 = (char *)v44;
      v47 = v46;
      aBlock[0] = v46;
      v68 = v19;
      *(_DWORD *)v45 = 136446210;
      v70 = a5;
      sub_1ACFF9724((unint64_t *)&unk_1EECDEDA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v48 = sub_1AD63C0D4();
      v80 = sub_1AD43D1D0(v48, v49, aBlock);
      a5 = v70;
      sub_1AD63BC60();
      swift_bridgeObjectRelease();
      v50 = *(void (**)(char *, uint64_t))(v68 + 8);
      v50(v24, v18);
      _os_log_impl(&dword_1ACFC8000, v43, v42, "Stashing reply block for session (%{public}s)", v45, 0xCu);
      swift_arrayDestroy();
      v51 = v47;
      v44 = (void (*)(char *, char *, uint64_t))v67;
      MEMORY[0x1AF44BED4](v51, -1, -1);
      MEMORY[0x1AF44BED4](v45, -1, -1);
    }
    else
    {
      v50 = *(void (**)(char *, uint64_t))(v19 + 8);
      v50(v24, v18);
    }
    v40 = v78;
    v52 = (uint64_t)v69;
    v53 = v71;
    v44(v69, v71, v18);
    v54 = swift_allocObject();
    a4 = v77;
    *(_QWORD *)(v54 + 16) = v77;
    *(_QWORD *)(v54 + 24) = a5;
    swift_beginAccess();
    swift_retain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v80 = v6[10];
    v6[10] = 0x8000000000000000;
    sub_1AD43F7D0((uint64_t)sub_1AD60B090, v54, v52, isUniquelyReferenced_nonNull_native);
    v6[10] = v80;
    swift_bridgeObjectRelease();
    v50((char *)v52, v18);
    swift_endAccess();
    v50(v53, v18);
    a3 = v72;
  }
  v56 = v75;
  sub_1ACFF64C0(a3, v75, &qword_1ED2E7140);
  sub_1ACFF64C0(v56, (uint64_t)v40, &qword_1ED2E7140);
  v57 = (*(unsigned __int8 *)(v73 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  v58 = (v74 + v57 + 7) & 0xFFFFFFFFFFFFFFF8;
  v59 = swift_allocObject();
  *(_QWORD *)(v59 + 16) = v6;
  sub_1AD0D3040(v56, v59 + v57);
  v60 = (void (**)(uint64_t))(v59 + v58);
  *v60 = a4;
  v60[1] = (void (*)(uint64_t))a5;
  if ((v76 & 1) != 0)
  {
    v61 = (_xpc_connection_s *)v6[2];
    swift_retain();
    swift_retain();
    v62 = xpc_connection_send_message_with_reply_sync(v61, v79);
    sub_1AD6091E0((uint64_t)v62, (uint64_t)v6, v40, a4, a5);
    swift_release();
    swift_unknownObjectRelease();
    sub_1AD009758((uint64_t)v40, &qword_1ED2E7140);
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_1AD009758((uint64_t)v40, &qword_1ED2E7140);
    v63 = (_xpc_connection_s *)v6[2];
    v64 = v6[3];
    aBlock[4] = (uint64_t)sub_1AD60B010;
    aBlock[5] = v59;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1AD608798;
    aBlock[3] = (uint64_t)&block_descriptor_6;
    v65 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    xpc_connection_send_message_with_reply(v63, v79, v64, v65);
    swift_release();
    _Block_release(v65);
  }
}

uint64_t sub_1AD6091E0(uint64_t a1, uint64_t a2, unsigned int (*a3)(char *, uint64_t, uint64_t), void (*a4)(uint64_t), uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  unsigned int (*v42)(char *, uint64_t, uint64_t);
  char *v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(uint64_t, _QWORD, uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unsigned int v51;
  uint64_t v52;
  uint64_t v53;
  unsigned int v54;
  char *v55;
  os_log_type_t v56;
  NSObject *v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  void (*v63)(char *, uint64_t);
  uint64_t v64;
  unint64_t v65;
  uint64_t v66;
  void (*v67)(char *, uint64_t);
  char v69;
  void (*v70)(char *, uint64_t);
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  unint64_t v75;
  void (*v76)(uint64_t);
  void (*v77)(char *, char *, uint64_t);
  void (*v78)(char *, char *, uint64_t);
  char *v79;
  char *v80;
  char *v81;
  char *v82;
  char *v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  void (*v94)(uint64_t);
  uint64_t v95;
  unsigned int (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  uint64_t v99[4];

  v93 = a5;
  v94 = a4;
  v96 = a3;
  v91 = a2;
  v87 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7130);
  MEMORY[0x1E0C80A78](v87);
  v88 = (uint64_t)&v77 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  v8 = MEMORY[0x1E0C80A78](v7);
  v92 = (uint64_t)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v85 = (uint64_t)&v77 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v89 = (uint64_t)&v77 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v86 = (uint64_t)&v77 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v77 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v77 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v77 - v22;
  v95 = sub_1AD63B084();
  v97 = *(_QWORD *)(v95 - 8);
  v24 = MEMORY[0x1E0C80A78](v95);
  v90 = (char *)&v77 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)&v77 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v77 - v30;
  v32 = MEMORY[0x1E0C80A78](v29);
  v34 = (char *)&v77 - v33;
  MEMORY[0x1E0C80A78](v32);
  v36 = (char *)&v77 - v35;
  swift_getObjectType();
  v37 = sub_1AD0E1E64();
  if (v37 != 7)
  {
    v38 = v95;
    v39 = v96;
    v40 = v97;
    v41 = a1;
    if (v37 == 13)
      sub_1AD60ABA8();
    goto LABEL_20;
  }
  v83 = v18;
  v80 = v31;
  v81 = v34;
  v79 = v28;
  v82 = v36;
  v84 = v21;
  v39 = v96;
  sub_1ACFF64C0((uint64_t)v96, (uint64_t)v23, &qword_1ED2E7140);
  v40 = v97;
  v42 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v97 + 48);
  v38 = v95;
  if (v42(v23, 1, v95) == 1)
  {
    sub_1AD009758((uint64_t)v23, &qword_1ED2E7140);
    v41 = a1;
    goto LABEL_20;
  }
  v43 = v82;
  v77 = *(void (**)(char *, char *, uint64_t))(v40 + 32);
  v77(v82, v23, v38);
  v44 = (uint64_t)v84;
  v41 = a1;
  sub_1AD0E2374(2);
  v45 = (uint64_t)v83;
  v78 = *(void (**)(char *, char *, uint64_t))(v40 + 16);
  v78(v83, v43, v38);
  v46 = *(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v40 + 56);
  v47 = v45;
  v46(v45, 0, 1, v38);
  v48 = v88;
  v49 = v44;
  v50 = v88 + *(int *)(v87 + 48);
  sub_1ACFF64C0(v47, v88, &qword_1ED2E7140);
  sub_1ACFF64C0(v44, v50, &qword_1ED2E7140);
  if (v42((char *)v48, 1, v38) == 1)
  {
    sub_1AD009758(v47, &qword_1ED2E7140);
    v51 = v42((char *)v50, 1, v38);
    v52 = v89;
    if (v51 == 1)
    {
      sub_1AD009758(v48, &qword_1ED2E7140);
LABEL_19:
      sub_1AD009758(v49, &qword_1ED2E7140);
      v40 = v97;
      (*(void (**)(char *, uint64_t))(v97 + 8))(v43, v38);
LABEL_20:
      v94(v41);
      v71 = v92;
      sub_1ACFF64C0((uint64_t)v39, v92, &qword_1ED2E7140);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v40 + 48))(v71, 1, v38) == 1)
        return sub_1AD009758(v71, &qword_1ED2E7140);
      v72 = (uint64_t)v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v40 + 32))(v90, v71, v38);
      swift_beginAccess();
      v73 = sub_1AD43D95C(v72);
      swift_endAccess();
      sub_1AD28D974(v73);
      return (*(uint64_t (**)(uint64_t, uint64_t))(v40 + 8))(v72, v38);
    }
    goto LABEL_11;
  }
  v53 = v86;
  sub_1ACFF64C0(v48, v86, &qword_1ED2E7140);
  v54 = v42((char *)v50, 1, v38);
  v55 = v81;
  if (v54 == 1)
  {
    sub_1AD009758((uint64_t)v83, &qword_1ED2E7140);
    (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v53, v38);
    v52 = v89;
LABEL_11:
    sub_1AD009758(v48, (uint64_t *)&unk_1ED2E7130);
    goto LABEL_12;
  }
  v77(v81, (char *)v50, v38);
  sub_1ACFF9724((unint64_t *)&qword_1EECD22B8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
  v69 = sub_1AD63B738();
  v70 = *(void (**)(char *, uint64_t))(v97 + 8);
  v70(v55, v38);
  sub_1AD009758((uint64_t)v83, &qword_1ED2E7140);
  v70((char *)v53, v38);
  v49 = (uint64_t)v84;
  sub_1AD009758(v48, &qword_1ED2E7140);
  v52 = v89;
  if ((v69 & 1) != 0)
    goto LABEL_19;
LABEL_12:
  v96 = v42;
  v56 = sub_1AD63BB7C();
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  v57 = qword_1ED2E7530;
  v58 = v80;
  v59 = v78;
  v78(v80, v43, v38);
  sub_1ACFF64C0(v49, v52, &qword_1ED2E7140);
  if (os_log_type_enabled(v57, v56))
  {
    v60 = swift_slowAlloc();
    v94 = (void (*)(uint64_t))swift_slowAlloc();
    v99[0] = (uint64_t)v94;
    *(_DWORD *)v60 = 136446466;
    sub_1ACFF9724((unint64_t *)&unk_1EECDEDA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v61 = sub_1AD63C0D4();
    v98 = sub_1AD43D1D0(v61, v62, v99);
    sub_1AD63BC60();
    swift_bridgeObjectRelease();
    v63 = *(void (**)(char *, uint64_t))(v97 + 8);
    v63(v58, v38);
    *(_WORD *)(v60 + 12) = 2082;
    v64 = v85;
    sub_1ACFF64C0(v52, v85, &qword_1ED2E7140);
    if (v96((char *)v64, 1, v38) == 1)
    {
      sub_1AD009758(v64, &qword_1ED2E7140);
      v65 = 0xE300000000000000;
      v66 = 7104878;
    }
    else
    {
      v74 = v79;
      v77(v79, (char *)v64, v38);
      v59(v81, v74, v38);
      v66 = sub_1AD63B7A4();
      v65 = v75;
      v63(v74, v38);
    }
    v98 = sub_1AD43D1D0(v66, v65, v99);
    sub_1AD63BC60();
    swift_bridgeObjectRelease();
    sub_1AD009758(v89, &qword_1ED2E7140);
    _os_log_impl(&dword_1ACFC8000, v57, v56, "Passed in session (%{public}s) is not the same as the response (%{public}s)", (uint8_t *)v60, 0x16u);
    v76 = v94;
    swift_arrayDestroy();
    MEMORY[0x1AF44BED4](v76, -1, -1);
    MEMORY[0x1AF44BED4](v60, -1, -1);
    sub_1AD009758((uint64_t)v84, &qword_1ED2E7140);
    return ((uint64_t (*)(char *, uint64_t))v63)(v82, v38);
  }
  else
  {
    sub_1AD009758(v52, &qword_1ED2E7140);
    v67 = *(void (**)(char *, uint64_t))(v97 + 8);
    v67(v58, v38);
    sub_1AD009758(v49, &qword_1ED2E7140);
    return ((uint64_t (*)(char *, uint64_t))v67)(v43, v38);
  }
}

uint64_t sub_1AD609A98(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  NSObject *v34;
  uint64_t v35;
  _BOOL4 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  char v54;
  uint64_t v55;
  void *v56;
  xpc_object_t reply;
  xpc_object_t v58;
  uint64_t v59;
  _QWORD *v60;
  uint64_t v61;
  uint64_t result;
  uint64_t v63;
  os_log_type_t v64;
  NSObject *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  os_log_t v83;
  int v84;
  char *v85;
  char *v86;
  char *v87;
  void (*v88)(char *, _QWORD, uint64_t, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  char *v92;
  uint64_t v93;
  uint64_t v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100[3];
  uint64_t v101;
  uint64_t v102[5];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDEC88);
  v3 = MEMORY[0x1E0C80A78](v2);
  v93 = (uint64_t)&v81 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v96 = (uint64_t)&v81 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v94 = (uint64_t)&v81 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v95 = (char *)&v81 - v10;
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v81 - v11;
  v13 = type metadata accessor for UnpackResponseSessionFinishedMessage(0);
  v98 = *(_QWORD *)(v13 - 8);
  v99 = v13;
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v81 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v81 - v18;
  v20 = MEMORY[0x1E0C80A78](v17);
  v22 = (char *)&v81 - v21;
  v23 = MEMORY[0x1E0C80A78](v20);
  v25 = (char *)&v81 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v81 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v81 - v29;
  type metadata accessor for XPCDecoder();
  v31 = swift_allocObject();
  *(_WORD *)(v31 + 16) = 0;
  sub_1AD6372D8(a1);
  v86 = v25;
  v92 = v28;
  v87 = v22;
  v85 = v16;
  v91 = v19;
  v32 = v98;
  v88 = *(void (**)(char *, _QWORD, uint64_t, uint64_t))(v98 + 56);
  v89 = v31;
  v88(v12, 0, 1, v99);
  sub_1AD60AED0((uint64_t)v12, (uint64_t)v30);
  v33 = sub_1AD63BB64();
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  v34 = qword_1ED2E7530;
  v35 = (uint64_t)v92;
  sub_1AD0D3D2C((uint64_t)v30, (uint64_t)v92, type metadata accessor for UnpackResponseSessionFinishedMessage);
  v36 = os_log_type_enabled(v34, (os_log_type_t)v33);
  v37 = (uint64_t)v91;
  v90 = v30;
  if (v36)
  {
    v83 = v34;
    swift_unknownObjectRetain_n();
    v38 = swift_slowAlloc();
    v82 = swift_slowAlloc();
    v102[0] = v82;
    *(_DWORD *)v38 = 136446466;
    swift_getObjectType();
    sub_1AD0E228C(0);
    v40 = (uint64_t)v87;
    v84 = v33;
    if (v39)
    {
      v100[0] = v39;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2CE0);
      v41 = sub_1AD63B7A4();
      v43 = v42;
    }
    else
    {
      v43 = 0xE300000000000000;
      v41 = 7104878;
    }
    v45 = (uint64_t)v95;
    v100[0] = sub_1AD43D1D0(v41, v43, v102);
    sub_1AD63BC60();
    swift_unknownObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v38 + 12) = 2082;
    sub_1AD0D3D2C((uint64_t)v92, v45, type metadata accessor for UnpackResponseSessionFinishedMessage);
    v46 = v99;
    v88((char *)v45, 0, 1, v99);
    v47 = v94;
    sub_1ACFF64C0(v45, v94, &qword_1EECDEC88);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v47, 1, v46) == 1)
    {
      sub_1AD009758(v47, &qword_1EECDEC88);
      v48 = 0xE300000000000000;
      v44 = v97;
      v49 = 7104878;
    }
    else
    {
      v50 = (uint64_t)v86;
      sub_1AD60AED0(v47, (uint64_t)v86);
      sub_1AD0D3D2C(v50, v40, type metadata accessor for UnpackResponseSessionFinishedMessage);
      v49 = sub_1AD63B7A4();
      v48 = v51;
      sub_1AD60AF14(v50);
      v44 = v97;
    }
    sub_1AD009758(v45, &qword_1EECDEC88);
    v100[0] = sub_1AD43D1D0(v49, v48, v102);
    sub_1AD63BC60();
    swift_bridgeObjectRelease();
    sub_1AD60AF14((uint64_t)v92);
    _os_log_impl(&dword_1ACFC8000, v83, (os_log_type_t)v84, "Received session end message for unpacker: %{public}s with sessionEnd message: %{public}s", (uint8_t *)v38, 0x16u);
    v52 = v82;
    swift_arrayDestroy();
    MEMORY[0x1AF44BED4](v52, -1, -1);
    MEMORY[0x1AF44BED4](v38, -1, -1);
    v37 = (uint64_t)v91;
  }
  else
  {
    sub_1AD60AF14(v35);
    v44 = v97;
  }
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(v44 + 80) + 16)
    && (swift_bridgeObjectRetain(), sub_1AD0DFC64((uint64_t)v90), v54 = v53, swift_bridgeObjectRelease(), (v54 & 1) != 0))
  {
    type metadata accessor for XPCEncoder();
    v55 = swift_allocObject();
    *(_WORD *)(v55 + 16) = 0;
    *(_OWORD *)(v55 + 24) = 0u;
    *(_OWORD *)(v55 + 40) = 0u;
    *(_QWORD *)(v55 + 56) = 0;
    v56 = (void *)swift_unknownObjectRetain();
    reply = xpc_dictionary_create_reply(v56);
    if (reply)
    {
      v58 = reply;
      swift_unknownObjectRelease();
      *(_QWORD *)(v55 + 64) = v58;
      v59 = (uint64_t)v90;
      v60 = sub_1AD60887C((uint64_t)v90, (void (*)(_QWORD *))sub_1AD0D3088, type metadata accessor for UnpackResponseSessionFinishedMessage);
      xpc_connection_send_message(*(xpc_connection_t *)(v44 + 16), v60);
      swift_beginAccess();
      v61 = sub_1AD43D95C(v59);
      swift_endAccess();
      sub_1AD28D974(v61);
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      sub_1AD60AF14(v59);
      return 1;
    }
    else
    {
      __break(1u);
      result = swift_unexpectedError();
      __break(1u);
    }
  }
  else
  {
    v63 = v32;
    v64 = sub_1AD63BB64();
    v65 = qword_1ED2E7530;
    v66 = (uint64_t)v90;
    sub_1AD0D3D2C((uint64_t)v90, v37, type metadata accessor for UnpackResponseSessionFinishedMessage);
    if (os_log_type_enabled(v65, v64))
    {
      swift_unknownObjectRetain_n();
      v67 = swift_slowAlloc();
      v68 = swift_slowAlloc();
      v100[0] = v68;
      *(_DWORD *)v67 = 136446466;
      swift_getObjectType();
      sub_1AD0E228C(0);
      if (v69)
      {
        v101 = v69;
        __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2CE0);
        v70 = sub_1AD63B7A4();
        v72 = v71;
      }
      else
      {
        v72 = 0xE300000000000000;
        v70 = 7104878;
      }
      v101 = sub_1AD43D1D0(v70, v72, v100);
      sub_1AD63BC60();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v67 + 12) = 2082;
      v73 = v96;
      sub_1AD0D3D2C(v37, v96, type metadata accessor for UnpackResponseSessionFinishedMessage);
      v74 = v99;
      v88((char *)v73, 0, 1, v99);
      v75 = v73;
      v76 = v93;
      sub_1ACFF64C0(v75, v93, &qword_1EECDEC88);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v63 + 48))(v76, 1, v74) == 1)
      {
        sub_1AD009758(v76, &qword_1EECDEC88);
        v77 = 0xE300000000000000;
        v78 = 7104878;
      }
      else
      {
        v79 = (uint64_t)v85;
        sub_1AD60AED0(v76, (uint64_t)v85);
        sub_1AD0D3D2C(v79, (uint64_t)v87, type metadata accessor for UnpackResponseSessionFinishedMessage);
        v78 = sub_1AD63B7A4();
        v77 = v80;
        sub_1AD60AF14(v79);
      }
      sub_1AD009758(v96, &qword_1EECDEC88);
      v101 = sub_1AD43D1D0(v78, v77, v100);
      sub_1AD63BC60();
      swift_bridgeObjectRelease();
      sub_1AD60AF14((uint64_t)v91);
      _os_log_impl(&dword_1ACFC8000, v65, v64, "Could not find current session: %{public}s with message: %{public}s", (uint8_t *)v67, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1AF44BED4](v68, -1, -1);
      MEMORY[0x1AF44BED4](v67, -1, -1);
      swift_release();
    }
    else
    {
      swift_release();
      sub_1AD60AF14(v37);
    }
    sub_1AD60AF14(v66);
    return 0;
  }
  return result;
}

void sub_1AD60A428(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  int v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int v18;
  NSObject *v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  os_log_type_t v26;
  NSObject *v27;
  uint8_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  os_log_type_t v35;
  NSObject *v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  char v45;
  void (*v46)(uint64_t *);
  uint64_t v47;
  int v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52[3];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1AD63B084();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v47 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getObjectType();
  v10 = sub_1AD0E1E64();
  if (v10 == 7)
  {
    swift_beginAccess();
    if (*(_QWORD *)(*(_QWORD *)(v1 + 80) + 16))
    {
      if ((sub_1AD609A98(a1) & 1) == 0)
      {
        v49 = (uint64_t *)(v1 + 80);
        v18 = sub_1AD63BB64();
        if (qword_1ED2E7540[0] != -1)
          swift_once();
        v19 = qword_1ED2E7530;
        if (os_log_type_enabled((os_log_t)qword_1ED2E7530, (os_log_type_t)v18))
        {
          v48 = v18;
          swift_unknownObjectRetain_n();
          v20 = (uint8_t *)swift_slowAlloc();
          v21 = swift_slowAlloc();
          v51 = v21;
          *(_DWORD *)v20 = 136446210;
          sub_1AD0E228C(0);
          v47 = v21;
          if (v22)
          {
            v50 = v22;
            __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2CE0);
            v23 = sub_1AD63B7A4();
            v25 = v24;
          }
          else
          {
            v23 = 7104878;
            v25 = 0xE300000000000000;
          }
          v50 = sub_1AD43D1D0(v23, v25, &v51);
          sub_1AD63BC60();
          swift_unknownObjectRelease_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1ACFC8000, v19, (os_log_type_t)v48, "Received session response for unpacker: %{public}s", v20, 0xCu);
          v34 = v47;
          swift_arrayDestroy();
          MEMORY[0x1AF44BED4](v34, -1, -1);
          MEMORY[0x1AF44BED4](v20, -1, -1);
        }
        sub_1AD0E2374(2);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
        {
          sub_1AD009758((uint64_t)v5, &qword_1ED2E7140);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
          v35 = sub_1AD63BB64();
          v36 = qword_1ED2E7530;
          if (os_log_type_enabled((os_log_t)qword_1ED2E7530, v35))
          {
            swift_unknownObjectRetain_n();
            v37 = (uint8_t *)swift_slowAlloc();
            v38 = swift_slowAlloc();
            v51 = v38;
            *(_DWORD *)v37 = 136446210;
            sub_1AD0E228C(2);
            if (v39)
            {
              v50 = v39;
              __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2CE0);
              v40 = sub_1AD63B7A4();
              v42 = v41;
            }
            else
            {
              v40 = 7104878;
              v42 = 0xE300000000000000;
            }
            v50 = sub_1AD43D1D0(v40, v42, &v51);
            sub_1AD63BC60();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            _os_log_impl(&dword_1ACFC8000, v36, v35, "    For session: %{public}s", v37, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1AF44BED4](v38, -1, -1);
            MEMORY[0x1AF44BED4](v37, -1, -1);
          }
          v43 = *v49;
          if (*(_QWORD *)(*v49 + 16))
          {
            swift_bridgeObjectRetain();
            v44 = sub_1AD0DFC64((uint64_t)v9);
            if ((v45 & 1) != 0)
            {
              v46 = *(void (**)(uint64_t *))(*(_QWORD *)(v43 + 56) + 16 * v44);
              swift_retain();
              swift_bridgeObjectRelease();
              v51 = a1;
              v46(&v51);
              swift_release();
            }
            else
            {
              swift_bridgeObjectRelease();
            }
          }
          (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
        }
      }
    }
    else
    {
      v26 = sub_1AD63BB64();
      if (qword_1ED2E7540[0] != -1)
        swift_once();
      v27 = qword_1ED2E7530;
      if (os_log_type_enabled((os_log_t)qword_1ED2E7530, v26))
      {
        swift_unknownObjectRetain_n();
        v28 = (uint8_t *)swift_slowAlloc();
        v29 = swift_slowAlloc();
        v51 = v29;
        *(_DWORD *)v28 = 136446210;
        sub_1AD0E228C(0);
        if (v30)
        {
          v50 = v30;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E2CE0);
          v31 = sub_1AD63B7A4();
          v33 = v32;
        }
        else
        {
          v31 = 7104878;
          v33 = 0xE300000000000000;
        }
        v50 = sub_1AD43D1D0(v31, v33, &v51);
        sub_1AD63BC60();
        swift_unknownObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1ACFC8000, v27, v26, "Received handle event when no session was present: %{public}s", v28, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1AF44BED4](v29, -1, -1);
        MEMORY[0x1AF44BED4](v28, -1, -1);
      }
    }
  }
  else if (v10 == 13)
  {
    sub_1AD60ABA8();
    if (qword_1ED2E32E8[0] != -1)
      swift_once();
    v11 = sub_1AD63B4B0();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED2E3090);
    swift_unknownObjectRetain_n();
    v12 = sub_1AD63B498();
    v13 = sub_1AD63BB7C();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v52[0] = v15;
      *(_DWORD *)v14 = 136315138;
      LOBYTE(v51) = sub_1AD0E2098();
      v16 = sub_1AD63B7A4();
      v51 = sub_1AD43D1D0(v16, v17, v52);
      sub_1AD63BC60();
      swift_unknownObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1ACFC8000, v12, v13, "Got an XPC Error: %s", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF44BED4](v15, -1, -1);
      MEMORY[0x1AF44BED4](v14, -1, -1);

    }
    else
    {

      swift_unknownObjectRelease_n();
    }
  }
}

void sub_1AD60ABA8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  uint64_t v7;
  uint64_t v8;

  if (xpc_connection_copy_invalidation_reason())
  {
    v0 = sub_1AD63B81C();
    v2 = v1;
    if (qword_1ED2E32E8[0] != -1)
      swift_once();
    v3 = sub_1AD63B4B0();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED2E3090);
    swift_bridgeObjectRetain();
    v4 = sub_1AD63B498();
    v5 = sub_1AD63BB7C();
    if (os_log_type_enabled(v4, v5))
    {
      v6 = (uint8_t *)swift_slowAlloc();
      v7 = swift_slowAlloc();
      v8 = v7;
      *(_DWORD *)v6 = 136315138;
      swift_bridgeObjectRetain();
      sub_1AD43D1D0(v0, v2, &v8);
      sub_1AD63BC60();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1ACFC8000, v4, v5, "XPC Connection invalid with reason: %s", v6, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1AF44BED4](v7, -1, -1);
      MEMORY[0x1AF44BED4](v6, -1, -1);

    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1AD60AD50()
{
  uint64_t v0;

  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for XPCConnection()
{
  return objc_opt_self();
}

__n128 sub_1AD60ADAC@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  __n128 result;
  __int128 v4;

  v2 = *(_DWORD *)(*(_QWORD *)v1 + 72);
  result = *(__n128 *)(*(_QWORD *)v1 + 40);
  v4 = *(_OWORD *)(*(_QWORD *)v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(_DWORD *)(a1 + 32) = v2;
  return result;
}

void sub_1AD60ADC8()
{
  uint64_t v0;
  _xpc_connection_s *v1;
  uint64_t v2;
  void *v3;
  _QWORD v4[6];

  v1 = *(_xpc_connection_s **)(*(_QWORD *)v0 + 16);
  v2 = swift_allocObject();
  swift_weakInit();
  v4[4] = sub_1AD60AEC8;
  v4[5] = v2;
  v4[0] = MEMORY[0x1E0C809B0];
  v4[1] = 1107296256;
  v4[2] = sub_1AD608798;
  v4[3] = &block_descriptor_3;
  v3 = _Block_copy(v4);
  swift_release();
  xpc_connection_set_event_handler(v1, v3);
  _Block_release(v3);
  xpc_connection_activate(v1);
}

void sub_1AD60AE84(void *a1, int a2, uint64_t a3, void (*a4)(uint64_t), uint64_t a5)
{
  sub_1AD608B10(a1, a2, a3, a4, a5);
}

uint64_t sub_1AD60AEA4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1AD60AEC8(uint64_t a1)
{
  return sub_1AD608AB4(a1);
}

uint64_t sub_1AD60AED0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for UnpackResponseSessionFinishedMessage(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1AD60AF14(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for UnpackResponseSessionFinishedMessage(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1AD60AF50()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140) - 8);
  v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  v3 = sub_1AD63B084();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3))
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD60B010(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140) - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = v1 + ((*(_QWORD *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8);
  return sub_1AD6091E0(a1, *(_QWORD *)(v1 + 16), (unsigned int (*)(char *, uint64_t, uint64_t))(v1 + v4), *(void (**)(uint64_t))v5, *(_QWORD *)(v5 + 8));
}

uint64_t sub_1AD60B06C()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1AD60B090(_QWORD *a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD))(v1 + 16))(*a1);
}

id sub_1AD60B0B4(_xpc_connection_s *a1, void *a2, void *a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v12;
  id v13;
  id v14;
  void *v15;
  id v16;
  id result;
  id v18;
  id v19;
  pid_t pid;

  *(_QWORD *)(v3 + 80) = sub_1AD439040(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v3 + 16) = a1;
  *(_QWORD *)(v3 + 24) = a3;
  *(_QWORD *)(v3 + 32) = a2;
  v7 = sub_1AD63B768();
  v9 = v8;
  if (v7 == sub_1AD63B768() && v9 == v10)
  {
    swift_unknownObjectRetain();
    v18 = a3;
    v19 = a2;
    swift_bridgeObjectRelease_n();
    goto LABEL_9;
  }
  v12 = sub_1AD63C2A8();
  swift_unknownObjectRetain();
  v13 = a3;
  v14 = a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
LABEL_9:
    xpc_connection_get_audit_token();
    pid = xpc_connection_get_pid(a1);
    *(_OWORD *)(v3 + 40) = 0u;
    *(_OWORD *)(v3 + 56) = 0u;
    *(_DWORD *)(v3 + 72) = pid;
    return (id)v3;
  }
  sub_1AD63B768();
  swift_unknownObjectRetain();
  v15 = (void *)sub_1AD63B744();
  swift_bridgeObjectRelease();
  v16 = objc_msgSend(v15, sel_UTF8String);
  result = v15;
  if (v16)
  {
    blastdoor_xpc_connection_set_instance(a1);
    swift_unknownObjectRelease();
    goto LABEL_9;
  }
  __break(1u);
  return result;
}

void blastdoor_xpc_connection_set_instance(void *a1)
{
  id v1;

  v1 = a1;
  xpc_connection_set_instance();

}

uint64_t sub_1AD60B2A8(char *a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_1AD60B7AC(a1);
  return v2;
}

void sub_1AD60B2FC(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  int v10;
  int v11;
  void *v12;
  uint64_t v13;
  int v14;
  int v15;
  uint64_t v16;

  v5 = v3;
  v9 = sub_1AD60B530();
  if (!v4)
  {
    a1(v9);
    if ((*(_BYTE *)(v3 + 40) & 1) == 0)
    {
      v10 = sandbox_extension_release();
      if (v10 == sub_1AD63B5F4())
      {
        *(_QWORD *)(v5 + 32) = 0;
        *(_BYTE *)(v5 + 40) = 1;
        return;
      }
      v11 = MEMORY[0x1AF44A2D8]();
      sub_1AD39E828();
      v12 = (void *)swift_allocError();
      *(_DWORD *)v13 = v11;
      *(_BYTE *)(v13 + 4) = 0;
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a3, a2);
      if ((*(_BYTE *)(v5 + 40) & 1) != 0)
      {
        sub_1AD63BB64();
        if (qword_1ED2E7540[0] != -1)
          swift_once();
        sub_1AD63B48C();
      }
      else
      {
        v14 = sandbox_extension_release();
        if (v14 != sub_1AD63B5F4())
        {
          v15 = MEMORY[0x1AF44A2D8]();
          sub_1AD39E828();
          swift_allocError();
          *(_DWORD *)v16 = v15;
          *(_BYTE *)(v16 + 4) = 0;
          swift_willThrow();

          return;
        }
        *(_QWORD *)(v5 + 32) = 0;
        *(_BYTE *)(v5 + 40) = 1;
      }
      swift_willThrow();
      return;
    }
    sub_1AD63BB64();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    sub_1AD63B48C();
  }
}

uint64_t sub_1AD60B530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  int v3;
  uint64_t v4;

  if (*(_BYTE *)(v0 + 40) == 1)
  {
    sub_1AD63B7B0();
    v1 = sandbox_extension_consume();
    result = swift_release();
    if (v1 == -1)
    {
      v3 = MEMORY[0x1AF44A2D8](result);
      sub_1AD39E828();
      swift_allocError();
      *(_DWORD *)v4 = v3;
      *(_BYTE *)(v4 + 4) = 0;
      return swift_willThrow();
    }
    else
    {
      *(_QWORD *)(v0 + 32) = v1;
      *(_BYTE *)(v0 + 40) = 0;
    }
  }
  else
  {
    sub_1AD63BB64();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    return sub_1AD63B48C();
  }
  return result;
}

uint64_t sub_1AD60B634()
{
  uint64_t v0;
  uint64_t result;
  int v2;
  int v3;
  uint64_t v4;

  if ((*(_BYTE *)(v0 + 40) & 1) != 0)
  {
    sub_1AD63BB64();
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    return sub_1AD63B48C();
  }
  else
  {
    v2 = sandbox_extension_release();
    result = sub_1AD63B5F4();
    if (v2 == (_DWORD)result)
    {
      *(_QWORD *)(v0 + 32) = 0;
      *(_BYTE *)(v0 + 40) = 1;
    }
    else
    {
      v3 = MEMORY[0x1AF44A2D8]();
      sub_1AD39E828();
      swift_allocError();
      *(_DWORD *)v4 = v3;
      *(_BYTE *)(v4 + 4) = 0;
      return swift_willThrow();
    }
  }
  return result;
}

BOOL sub_1AD60B728(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1AD60B740()
{
  return sub_1AD63C4B8();
}

uint64_t sub_1AD60B768()
{
  sub_1AD63C4AC();
  sub_1AD63C4B8();
  return sub_1AD63C4F4();
}

uint64_t sub_1AD60B7AC(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v1;
  v3 = *a1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  if ((v3 & 1) != 0)
  {
    if (*MEMORY[0x1E0C80008])
      goto LABEL_5;
    __break(1u);
  }
  result = *MEMORY[0x1E0C80000];
  if (!*MEMORY[0x1E0C80000])
  {
    __break(1u);
    return result;
  }
LABEL_5:
  sub_1AD63B81C();
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7330);
  sub_1AD00F8EC();
  sub_1AD63B720();
  swift_bridgeObjectRelease();
  sub_1AD63B810();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1AD63B7B0();
  swift_bridgeObjectRelease();
  sub_1AD63B7B0();
  swift_bridgeObjectRelease();
  v5 = (void *)sandbox_extension_issue_file();
  swift_release();
  swift_release();
  if (v5)
  {
    *(_QWORD *)(v2 + 16) = sub_1AD63B81C();
    *(_QWORD *)(v2 + 24) = v6;
    free(v5);
  }
  else
  {
    sub_1AD39E828();
    swift_allocError();
    *(_DWORD *)v7 = 0;
    *(_BYTE *)(v7 + 4) = 1;
    swift_willThrow();
    swift_deallocPartialClassInstance();
  }
  return v2;
}

uint64_t sub_1AD60B98C()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD60B9A8()
{
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1AD60B9CC(_QWORD *a1)
{
  return sub_1AD60BB40(a1);
}

uint64_t sub_1AD60B9E0(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD63C530();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1AD63C2F0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1AD60BA7C@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD60BB40(a1);
  if (!v2)
    *a2 = result;
  return result;
}

uint64_t sub_1AD60BAA4(_QWORD *a1)
{
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD63C530();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  sub_1AD63C2F0();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
}

uint64_t sub_1AD60BB40(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[4];

  v3 = a1[4];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1AD63C518();
  if (!v1)
  {
    __swift_project_boxed_opaque_existential_1(v8, v8[3]);
    v5 = sub_1AD63C2B4();
    v7 = v6;
    type metadata accessor for SandboxExtension();
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 24) = v7;
    *(_QWORD *)(v3 + 32) = 0;
    *(_BYTE *)(v3 + 40) = 1;
    *(_QWORD *)(v3 + 16) = v5;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
  return v3;
}

unint64_t sub_1AD60BC2C()
{
  unint64_t result;

  result = qword_1EECDEC90;
  if (!qword_1EECDEC90)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69A64C, &type metadata for SandboxExtensionClass);
    atomic_store(result, (unint64_t *)&qword_1EECDEC90);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for SandboxExtensionClass(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD60BCBC + 4 * byte_1AD69A645[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD60BCF0 + 4 * byte_1AD69A640[v4]))();
}

uint64_t sub_1AD60BCF0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD60BCF8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD60BD00);
  return result;
}

uint64_t sub_1AD60BD0C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD60BD14);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD60BD18(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD60BD20(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SandboxExtensionClass()
{
  return &type metadata for SandboxExtensionClass;
}

uint64_t type metadata accessor for SandboxExtension()
{
  return objc_opt_self();
}

uint64_t sub_1AD60BD5C()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1AD60BD68()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

ValueMetadata *type metadata accessor for SandboxExtension.State()
{
  return &type metadata for SandboxExtension.State;
}

uint64_t getEnumTagSinglePayload for SandboxExtensionError(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 5))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for SandboxExtensionError(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 4) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 5) = v3;
  return result;
}

uint64_t sub_1AD60BDDC(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 4))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_1AD60BDF8(uint64_t result, int a2)
{
  if (a2)
  {
    *(_DWORD *)result = a2 - 1;
    *(_BYTE *)(result + 4) = 1;
  }
  else
  {
    *(_BYTE *)(result + 4) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SandboxExtensionError()
{
  return &type metadata for SandboxExtensionError;
}

uint64_t sub_1AD60BE28@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[4];
  v4 = v1[5];
  v3 = v1[6];
  *a1 = v1[3];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD60BE58(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 24) = *a1;
  *(_QWORD *)(v1 + 40) = v3;
  *(_QWORD *)(v1 + 48) = v4;
  return result;
}

uint64_t sub_1AD60BEA8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[8];
  v4 = v1[9];
  v3 = v1[10];
  *a1 = v1[7];
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD60BED8(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *(__n128 *)(v1 + 56) = *a1;
  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v4;
  return result;
}

uint64_t sub_1AD60BF28@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[14];
  v2 = v1[15];
  v4 = v1[16];
  v5 = v1[17];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD285EE4(v4, v5);
}

__n128 sub_1AD60BF5C(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = v1[8].n128_i64[0];
  v6 = v1[8].n128_u64[1];
  swift_release();
  sub_1AD009794(v5, v6);
  result = *a1;
  v1[7] = *a1;
  v1[8].n128_u64[0] = v3;
  v1[8].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD60BFB0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v3 = v1[19];
  v2 = v1[20];
  v4 = v1[21];
  v5 = v1[22];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v5;
  swift_retain();
  return sub_1AD285EE4(v4, v5);
}

__n128 sub_1AD60BFE4(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = *(_QWORD *)(v1 + 168);
  v6 = *(_QWORD *)(v1 + 176);
  swift_release();
  sub_1AD009794(v5, v6);
  result = *a1;
  *(__n128 *)(v1 + 152) = *a1;
  *(_QWORD *)(v1 + 168) = v3;
  *(_QWORD *)(v1 + 176) = v4;
  return result;
}

uint64_t sub_1AD60C038()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 48))
  {
    v1 = *(_QWORD *)(v0 + 40);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD60C0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 80))
  {
    v1 = *(_QWORD *)(v0 + 72);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD60C128()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 136);
  if (v1 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 128);
    sub_1AD00408C(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD60C1AC()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = *(_QWORD *)(v0 + 176);
  if (v1 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v0 + 168);
    sub_1AD00408C(v2, v1);
    return v2;
  }
  return result;
}

uint64_t sub_1AD60C230()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  char isUniquelyReferenced_nonNull_native;
  char v13;
  uint64_t v14;
  char v15;
  char v16;
  char v17;
  uint64_t v18;
  char v19;
  char v20;
  char v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  int v34;
  int v35;
  int v36;
  unint64_t v37;
  char v38;
  char v39;
  _OWORD v40[2];
  __int128 v41;
  uint64_t v42;

  v1 = *v0;
  v2 = v0[1];
  v3 = v0[2];
  v4 = v0[5];
  v5 = v0[6];
  v6 = v0[9];
  v7 = v0[10];
  v8 = v0[11];
  v9 = v0[12];
  v33 = *((unsigned __int8 *)v0 + 104);
  v34 = *((unsigned __int8 *)v0 + 105);
  v10 = v0[17];
  v35 = *((unsigned __int8 *)v0 + 106);
  v36 = *((unsigned __int8 *)v0 + 144);
  v29 = v0[16];
  v30 = v0[21];
  v37 = v0[22];
  v31 = v0[23];
  v32 = v0[25];
  v38 = *((_BYTE *)v0 + 192);
  v39 = *((_BYTE *)v0 + 208);
  v42 = MEMORY[0x1E0DEBB98];
  *(_QWORD *)&v41 = v1;
  sub_1AD002F7C(&v41, v40);
  v11 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v40, 118, 0xE100000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  if (v3 >> 60 != 15)
  {
    v42 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v41 = v2;
    *((_QWORD *)&v41 + 1) = v3;
    sub_1AD002F7C(&v41, v40);
    sub_1AD00408C(v2, v3);
    sub_1AD0040A0(v2, v3);
    v13 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v40, 98, 0xE100000000000000, v13);
    swift_bridgeObjectRelease();
    sub_1AD004118(v2, v3);
  }
  if (!v5)
    goto LABEL_26;
  v14 = MEMORY[0x1E0DEA968];
  v42 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v41 = v4;
  *((_QWORD *)&v41 + 1) = v5;
  sub_1AD002F7C(&v41, v40);
  swift_bridgeObjectRetain();
  v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v40, 115, 0xE100000000000000, v15);
  swift_bridgeObjectRelease();
  if (!v7)
    goto LABEL_26;
  v42 = v14;
  *(_QWORD *)&v41 = v6;
  *((_QWORD *)&v41 + 1) = v7;
  sub_1AD002F7C(&v41, v40);
  swift_bridgeObjectRetain();
  v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v40, 112, 0xE100000000000000, v16);
  swift_bridgeObjectRelease();
  if (v9 >> 60 != 15)
  {
    v42 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v41 = v8;
    *((_QWORD *)&v41 + 1) = v9;
    sub_1AD002F7C(&v41, v40);
    sub_1AD00408C(v8, v9);
    sub_1AD0040A0(v8, v9);
    v17 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v40, 99, 0xE100000000000000, v17);
    swift_bridgeObjectRelease();
    sub_1AD004118(v8, v9);
  }
  v18 = MEMORY[0x1E0DEAFA0];
  if (v33 != 2)
  {
    v42 = MEMORY[0x1E0DEAFA0];
    LOBYTE(v41) = v33 & 1;
    sub_1AD002F7C(&v41, v40);
    v19 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v40, 25443, 0xE200000000000000, v19);
    swift_bridgeObjectRelease();
  }
  if (v34 != 2)
  {
    v42 = v18;
    LOBYTE(v41) = v34 & 1;
    sub_1AD002F7C(&v41, v40);
    v20 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v40, 26989, 0xE200000000000000, v20);
    swift_bridgeObjectRelease();
  }
  if (v35 != 2)
  {
    v42 = v18;
    LOBYTE(v41) = v35 & 1;
    sub_1AD002F7C(&v41, v40);
    v21 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v40, 7500147, 0xE300000000000000, v21);
    swift_bridgeObjectRelease();
  }
  if (v10 >> 60 == 11)
    goto LABEL_26;
  if (v10 >> 60 != 15)
  {
    v42 = MEMORY[0x1E0CB0338];
    *(_QWORD *)&v41 = v29;
    *((_QWORD *)&v41 + 1) = v10;
    sub_1AD002F7C(&v41, v40);
    sub_1AD285EE4(v29, v10);
    sub_1AD0040A0(v29, v10);
    v22 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v40, 0xD00000000000001ALL, 0x80000001AD6A7F30, v22);
    swift_bridgeObjectRelease();
    sub_1AD009794(v29, v10);
  }
  if (v36 != 2)
  {
    v42 = v18;
    LOBYTE(v41) = v36 & 1;
    sub_1AD002F7C(&v41, v40);
    v23 = swift_isUniquelyReferenced_nonNull_native();
    sub_1AD43F448(v40, 1835819888, 0xE400000000000000, v23);
    swift_bridgeObjectRelease();
  }
  if (v37 >> 60 == 11)
  {
LABEL_26:
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    if (v37 >> 60 != 15)
    {
      v42 = MEMORY[0x1E0CB0338];
      *(_QWORD *)&v41 = v30;
      *((_QWORD *)&v41 + 1) = v37;
      sub_1AD002F7C(&v41, v40);
      sub_1AD285EE4(v30, v37);
      sub_1AD00408C(v30, v37);
      v24 = swift_isUniquelyReferenced_nonNull_native();
      sub_1AD43F448(v40, 107, 0xE100000000000000, v24);
      swift_bridgeObjectRelease();
      sub_1AD009794(v30, v37);
    }
    v25 = MEMORY[0x1E0DEB418];
    if ((v38 & 1) == 0)
    {
      v42 = MEMORY[0x1E0DEB418];
      *(_QWORD *)&v41 = v31;
      sub_1AD002F7C(&v41, v40);
      v26 = swift_isUniquelyReferenced_nonNull_native();
      sub_1AD43F448(v40, 29555, 0xE200000000000000, v26);
      swift_bridgeObjectRelease();
    }
    if ((v39 & 1) == 0)
    {
      v42 = v25;
      *(_QWORD *)&v41 = v32;
      sub_1AD002F7C(&v41, v40);
      v27 = swift_isUniquelyReferenced_nonNull_native();
      sub_1AD43F448(v40, 29043, 0xE200000000000000, v27);
      swift_bridgeObjectRelease();
    }
    return v11;
  }
  return result;
}

uint64_t sub_1AD60C82C()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t sub_1AD60C834(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*sub_1AD60C83C())()
{
  return nullsub_1;
}

uint64_t sub_1AD60C84C()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + 16));
  return v1;
}

uint64_t sub_1AD60C87C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD004118(*(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  return result;
}

uint64_t (*sub_1AD60C8B0())()
{
  return nullsub_1;
}

uint64_t sub_1AD60C8C0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *(_QWORD *)(a1 + 48);
  if (v3)
  {
    *a2 = *(_QWORD *)(a1 + 40);
    a2[1] = v3;
    return swift_bridgeObjectRetain();
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD60C928(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD60C948(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 48);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 40);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD60C9D0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t sub_1AD60C9D0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = *a1;
  v2 = a1[1];
  if ((a2 & 1) == 0)
    return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(*a1, v2);
  swift_bridgeObjectRetain();
  _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v3, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AD60CA34(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v6 = a1[2];
  v5 = a1[3];
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  result = swift_bridgeObjectRelease();
  a2[3] = v4;
  a2[4] = v3;
  a2[5] = v6;
  a2[6] = v5;
  return result;
}

void (*sub_1AD60CAA0(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[4];
  v6 = v1[5];
  v5 = v1[6];
  *v3 = v1[3];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD60CB04;
}

void sub_1AD60CB04(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    swift_release();
    swift_bridgeObjectRelease();
    v4[3] = v6;
    v4[4] = v5;
    v4[5] = v7;
    v4[6] = v3;
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_release();
    swift_bridgeObjectRelease();
    v4[3] = v6;
    v4[4] = v5;
    v4[5] = v7;
    v4[6] = v3;
  }
  free(v2);
}

uint64_t sub_1AD60CBAC(uint64_t a1, uint64_t a2)
{
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(a1, a2);
}

uint64_t (*sub_1AD60CBCC(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 80);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 72);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD33A6A8;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD60CC54(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[8];
  v6 = v1[9];
  v5 = v1[10];
  *v3 = v1[7];
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD33A7DC;
}

uint64_t sub_1AD60CCB8()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 88);
  sub_1AD00408C(v1, *(_QWORD *)(v0 + 96));
  return v1;
}

uint64_t sub_1AD60CCE8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  result = sub_1AD004118(*(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 96));
  *(_QWORD *)(v2 + 88) = a1;
  *(_QWORD *)(v2 + 96) = a2;
  return result;
}

uint64_t (*sub_1AD60CD1C())()
{
  return nullsub_1;
}

uint64_t sub_1AD60CD2C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 104);
}

uint64_t sub_1AD60CD34(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 104) = result;
  return result;
}

uint64_t (*sub_1AD60CD3C())()
{
  return nullsub_1;
}

uint64_t sub_1AD60CD4C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 105);
}

uint64_t sub_1AD60CD54(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 105) = result;
  return result;
}

uint64_t (*sub_1AD60CD5C())()
{
  return nullsub_1;
}

uint64_t sub_1AD60CD6C()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 106);
}

uint64_t sub_1AD60CD74(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 106) = result;
  return result;
}

uint64_t (*sub_1AD60CD7C())()
{
  return nullsub_1;
}

uint64_t sub_1AD60CD8C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 136);
  if (v2 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 128);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD00408C(v3, v2);
  }
  return result;
}

uint64_t sub_1AD60CDF8(uint64_t a1, uint64_t a2)
{
  return sub_1AD003258(a1, a2);
}

uint64_t (*sub_1AD60CE18(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 136);
  if (v2 >> 60 == 11)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 128);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD00408C(v4, v2);
    return sub_1AD60CEA4;
  }
  return result;
}

uint64_t sub_1AD60CEA4(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003258(*a1, v3);
  sub_1AD00408C(*a1, v3);
  sub_1AD003258(v2, v3);
  return sub_1AD004118(v2, v3);
}

uint64_t sub_1AD60CF10(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[16];
  v8 = a2[17];
  swift_retain();
  sub_1AD285EE4(v5, v6);
  swift_release();
  result = sub_1AD009794(v7, v8);
  a2[14] = v4;
  a2[15] = v3;
  a2[16] = v5;
  a2[17] = v6;
  return result;
}

void (*sub_1AD60CF84(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[14];
  v4 = v1[15];
  v6 = v1[16];
  v7 = v1[17];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD285EE4(v6, v7);
  return sub_1AD60CFE8;
}

void sub_1AD60CFE8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[16];
  v9 = v4[17];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD285EE4(v7, v3);
    swift_release();
    sub_1AD009794(v8, v9);
    v4[14] = v6;
    v4[15] = v5;
    v4[16] = v7;
    v4[17] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD009794(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD009794(v8, v9);
    v4[14] = v6;
    v4[15] = v5;
    v4[16] = v7;
    v4[17] = v3;
  }
  free(v2);
}

uint64_t sub_1AD60D0A8()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 144);
}

uint64_t sub_1AD60D0B0(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 144) = result;
  return result;
}

uint64_t (*sub_1AD60D0B8())()
{
  return nullsub_1;
}

uint64_t sub_1AD60D0C8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 176);
  if (v2 >> 60 == 11)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(a1 + 168);
    *a2 = v3;
    a2[1] = v2;
    return sub_1AD00408C(v3, v2);
  }
  return result;
}

uint64_t sub_1AD60D134(uint64_t a1, uint64_t a2)
{
  return sub_1AD003258(a1, a2);
}

uint64_t (*sub_1AD60D154(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v4;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v2 = *(_QWORD *)(v1 + 176);
  if (v2 >> 60 == 11)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v4 = *(_QWORD *)(v1 + 168);
    *a1 = v4;
    a1[1] = v2;
    sub_1AD00408C(v4, v2);
    return sub_1AD60D1E0;
  }
  return result;
}

uint64_t sub_1AD60D1E0(uint64_t *a1, char a2)
{
  uint64_t v2;
  unint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) == 0)
    return sub_1AD003258(*a1, v3);
  sub_1AD00408C(*a1, v3);
  sub_1AD003258(v2, v3);
  return sub_1AD004118(v2, v3);
}

uint64_t sub_1AD60D24C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v4 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v6 = a1[3];
  v7 = a2[21];
  v8 = a2[22];
  swift_retain();
  sub_1AD285EE4(v5, v6);
  swift_release();
  result = sub_1AD009794(v7, v8);
  a2[19] = v4;
  a2[20] = v3;
  a2[21] = v5;
  a2[22] = v6;
  return result;
}

void (*sub_1AD60D2C0(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v5 = v1[19];
  v4 = v1[20];
  v6 = v1[21];
  v7 = v1[22];
  *v3 = v5;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v7;
  swift_retain();
  sub_1AD285EE4(v6, v7);
  return sub_1AD60D324;
}

void sub_1AD60D324(uint64_t **a1, char a2)
{
  uint64_t *v2;
  unint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  v2 = *a1;
  v3 = (*a1)[3];
  v4 = (_QWORD *)(*a1)[4];
  v6 = **a1;
  v5 = (*a1)[1];
  v7 = (*a1)[2];
  v8 = v4[21];
  v9 = v4[22];
  if ((a2 & 1) != 0)
  {
    swift_retain();
    sub_1AD285EE4(v7, v3);
    swift_release();
    sub_1AD009794(v8, v9);
    v4[19] = v6;
    v4[20] = v5;
    v4[21] = v7;
    v4[22] = v3;
    v10 = v2[2];
    v11 = v2[3];
    swift_release();
    sub_1AD009794(v10, v11);
  }
  else
  {
    swift_release();
    sub_1AD009794(v8, v9);
    v4[19] = v6;
    v4[20] = v5;
    v4[21] = v7;
    v4[22] = v3;
  }
  free(v2);
}

uint64_t sub_1AD60D3E4()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 184);
}

uint64_t sub_1AD60D3F0(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 184) = result;
  *(_BYTE *)(v2 + 192) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD60D400())()
{
  return nullsub_1;
}

uint64_t sub_1AD60D410()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 200);
}

uint64_t sub_1AD60D41C(uint64_t result, char a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 200) = result;
  *(_BYTE *)(v2 + 208) = a2 & 1;
  return result;
}

uint64_t (*sub_1AD60D42C())()
{
  return nullsub_1;
}

uint64_t sub_1AD60D43C()
{
  uint64_t v0;

  sub_1AD60C230();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD60D48C()
{
  uint64_t v0;

  sub_1AD60C230();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

unint64_t sub_1AD60D4DC(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD29B8F4();
  result = sub_1AD29B7A0();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD60D50C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD60D548@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[3];
  v3 = a1[4];
  v5 = a1[5];
  v4 = a1[6];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD60D580(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD60D5BC@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = a1[7];
  v3 = a1[8];
  v5 = a1[9];
  v4 = a1[10];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD60D5F4(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD00408C(*a1, v2);
  return sub_1AD003258(v1, v2);
}

uint64_t sub_1AD60D634@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[15];
  v3 = a1[16];
  v4 = a1[17];
  *a2 = a1[14];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD285EE4(v3, v4);
}

uint64_t sub_1AD60D674(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_1AD00408C(*a1, v2);
  return sub_1AD003258(v1, v2);
}

uint64_t sub_1AD60D6B4@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v2 = a1[20];
  v3 = a1[21];
  v4 = a1[22];
  *a2 = a1[19];
  a2[1] = v2;
  a2[2] = v3;
  a2[3] = v4;
  swift_retain();
  return sub_1AD285EE4(v3, v4);
}

uint64_t destroy for IDSSessionAccept(uint64_t *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  unint64_t v6;

  v2 = a1[2];
  if (v2 >> 60 != 15)
    sub_1AD00412C(a1[1], v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  v3 = a1[12];
  if (v3 >> 60 != 15)
    sub_1AD00412C(a1[11], v3);
  swift_release();
  v4 = a1[17];
  if (v4 >> 60 != 15 && (v4 & 0xF000000000000000) != 0xB000000000000000)
    sub_1AD00412C(a1[16], v4);
  result = swift_release();
  v6 = a1[22];
  if (v6 >> 60 != 15 && (v6 & 0xF000000000000000) != 0xB000000000000000)
    return sub_1AD00412C(a1[21], v6);
  return result;
}

uint64_t initializeWithCopy for IDSSessionAccept(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (uint64_t *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 8) = *(_OWORD *)v4;
  }
  else
  {
    v6 = *v4;
    sub_1AD0040A0(*v4, *(_QWORD *)(a2 + 16));
    *(_QWORD *)(a1 + 8) = v6;
    *(_QWORD *)(a1 + 16) = v5;
  }
  v7 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  v8 = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = v8;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v9 = (uint64_t *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 96);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_1AD0040A0(*v9, v10);
    *(_QWORD *)(a1 + 88) = v11;
    *(_QWORD *)(a1 + 96) = v10;
  }
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_WORD *)(a1 + 105) = *(_WORD *)(a2 + 105);
  v12 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v12;
  v13 = (uint64_t *)(a2 + 128);
  v14 = *(_QWORD *)(a2 + 136);
  swift_retain();
  if (v14 >> 60 == 11 || v14 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v13;
  }
  else
  {
    v15 = *v13;
    sub_1AD0040A0(*v13, v14);
    *(_QWORD *)(a1 + 128) = v15;
    *(_QWORD *)(a1 + 136) = v14;
  }
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v16 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v16;
  v17 = (uint64_t *)(a2 + 168);
  v18 = *(_QWORD *)(a2 + 176);
  swift_retain();
  if (v18 >> 60 == 11 || v18 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)v17;
  }
  else
  {
    v19 = *v17;
    sub_1AD0040A0(*v17, v18);
    *(_QWORD *)(a1 + 168) = v19;
    *(_QWORD *)(a1 + 176) = v18;
  }
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  return a1;
}

uint64_t assignWithCopy for IDSSessionAccept(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  uint64_t *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = (uint64_t *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  if (*(_QWORD *)(a1 + 16) >> 60 == 15)
  {
    if (v6 >> 60 != 15)
    {
      v7 = *v5;
      sub_1AD0040A0(*v5, *(_QWORD *)(a2 + 16));
      *(_QWORD *)(a1 + 8) = v7;
      *(_QWORD *)(a1 + 16) = v6;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v6 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 8);
LABEL_6:
    *v4 = *(_OWORD *)v5;
    goto LABEL_8;
  }
  v8 = *v5;
  sub_1AD0040A0(*v5, *(_QWORD *)(a2 + 16));
  v9 = *(_QWORD *)(a1 + 8);
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 8) = v8;
  *(_QWORD *)(a1 + 16) = v6;
  sub_1AD00412C(v9, v10);
LABEL_8:
  v11 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v11;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v12;
  swift_retain();
  swift_release();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v13 = (uint64_t *)(a2 + 88);
  v14 = *(_QWORD *)(a2 + 96);
  if (*(_QWORD *)(a1 + 96) >> 60 == 15)
  {
    if (v14 >> 60 != 15)
    {
      v15 = *v13;
      sub_1AD0040A0(*v13, *(_QWORD *)(a2 + 96));
      *(_QWORD *)(a1 + 88) = v15;
      *(_QWORD *)(a1 + 96) = v14;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v14 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 88);
LABEL_13:
    *(_OWORD *)(a1 + 88) = *(_OWORD *)v13;
    goto LABEL_15;
  }
  v16 = *v13;
  sub_1AD0040A0(*v13, *(_QWORD *)(a2 + 96));
  v17 = *(_QWORD *)(a1 + 88);
  v18 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v16;
  *(_QWORD *)(a1 + 96) = v14;
  sub_1AD00412C(v17, v18);
LABEL_15:
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_BYTE *)(a1 + 105) = *(_BYTE *)(a2 + 105);
  *(_BYTE *)(a1 + 106) = *(_BYTE *)(a2 + 106);
  v19 = *(_QWORD *)(a2 + 120);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)(a2 + 112);
  *(_QWORD *)(a1 + 120) = v19;
  swift_retain();
  swift_release();
  v20 = (uint64_t *)(a2 + 128);
  v21 = *(_QWORD *)(a2 + 136);
  v22 = v21 & 0xF000000000000000;
  if (*(_QWORD *)(a1 + 136) >> 60 == 11)
  {
    if (v22 == 0xB000000000000000)
      goto LABEL_25;
LABEL_21:
    if (v21 >> 60 != 15)
    {
      v23 = *v20;
      sub_1AD0040A0(*v20, *(_QWORD *)(a2 + 136));
      *(_QWORD *)(a1 + 128) = v23;
      *(_QWORD *)(a1 + 136) = v21;
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v22 == 0xB000000000000000)
  {
    sub_1AD338C44(a1 + 128);
LABEL_25:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v20;
    goto LABEL_26;
  }
  if (*(_QWORD *)(a1 + 136) >> 60 == 15)
    goto LABEL_21;
  if (v21 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 128);
    goto LABEL_25;
  }
  v32 = *v20;
  sub_1AD0040A0(*v20, *(_QWORD *)(a2 + 136));
  v33 = *(_QWORD *)(a1 + 128);
  v34 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 128) = v32;
  *(_QWORD *)(a1 + 136) = v21;
  sub_1AD00412C(v33, v34);
LABEL_26:
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  v24 = *(_QWORD *)(a2 + 160);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 160) = v24;
  swift_retain();
  swift_release();
  v25 = (uint64_t *)(a2 + 168);
  v26 = *(_QWORD *)(a2 + 176);
  v27 = v26 & 0xF000000000000000;
  if (*(_QWORD *)(a1 + 176) >> 60 == 11)
  {
    if (v27 == 0xB000000000000000)
      goto LABEL_36;
  }
  else
  {
    if (v27 == 0xB000000000000000)
    {
      sub_1AD338C44(a1 + 168);
LABEL_36:
      *(_OWORD *)(a1 + 168) = *(_OWORD *)v25;
      goto LABEL_37;
    }
    if (*(_QWORD *)(a1 + 176) >> 60 != 15)
    {
      if (v26 >> 60 != 15)
      {
        v35 = *v25;
        sub_1AD0040A0(*v25, *(_QWORD *)(a2 + 176));
        v36 = *(_QWORD *)(a1 + 168);
        v37 = *(_QWORD *)(a1 + 176);
        *(_QWORD *)(a1 + 168) = v35;
        *(_QWORD *)(a1 + 176) = v26;
        sub_1AD00412C(v36, v37);
        goto LABEL_37;
      }
      sub_1AD007EC0(a1 + 168);
      goto LABEL_36;
    }
  }
  if (v26 >> 60 == 15)
    goto LABEL_36;
  v28 = *v25;
  sub_1AD0040A0(*v25, *(_QWORD *)(a2 + 176));
  *(_QWORD *)(a1 + 168) = v28;
  *(_QWORD *)(a1 + 176) = v26;
LABEL_37:
  v29 = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 184) = v29;
  v30 = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = v30;
  return a1;
}

uint64_t assignWithTake for IDSSessionAccept(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _OWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  _QWORD *v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = (_OWORD *)(a1 + 8);
  v5 = (_OWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  if (v6 >> 60 == 15)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 16);
  if (v7 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 8);
LABEL_4:
    *v4 = *v5;
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)v5;
  *(_QWORD *)(a1 + 16) = v7;
  sub_1AD00412C(v8, v6);
LABEL_6:
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  v9 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v9;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  v10 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v10;
  swift_bridgeObjectRelease();
  v11 = (_OWORD *)(a2 + 88);
  v12 = *(_QWORD *)(a1 + 96);
  if (v12 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 88) = *v11;
    goto LABEL_11;
  }
  v13 = *(_QWORD *)(a2 + 96);
  if (v13 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 88);
    goto LABEL_9;
  }
  v14 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)v11;
  *(_QWORD *)(a1 + 96) = v13;
  sub_1AD00412C(v14, v12);
LABEL_11:
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_WORD *)(a1 + 105) = *(_WORD *)(a2 + 105);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  swift_release();
  v15 = (_OWORD *)(a2 + 128);
  v16 = *(_QWORD *)(a1 + 136);
  if (v16 >> 60 == 11)
  {
LABEL_17:
    *(_OWORD *)(a1 + 128) = *v15;
    goto LABEL_18;
  }
  v17 = *(_QWORD *)(a2 + 136);
  if (v17 >> 60 == 11)
  {
    sub_1AD338C44(a1 + 128);
    goto LABEL_17;
  }
  if (v16 >> 60 == 15)
    goto LABEL_17;
  if (v17 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 128);
    goto LABEL_17;
  }
  v22 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)v15;
  *(_QWORD *)(a1 + 136) = v17;
  sub_1AD00412C(v22, v16);
LABEL_18:
  *(_BYTE *)(a1 + 144) = *(_BYTE *)(a2 + 144);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_release();
  v18 = (_QWORD *)(a2 + 168);
  v19 = *(_QWORD *)(a1 + 176);
  if (v19 >> 60 != 11)
  {
    v20 = *(_QWORD *)(a2 + 176);
    if (v20 >> 60 == 11)
    {
      sub_1AD338C44(a1 + 168);
    }
    else if (v19 >> 60 != 15)
    {
      if (v20 >> 60 != 15)
      {
        v23 = *(_QWORD *)(a1 + 168);
        *(_QWORD *)(a1 + 168) = *v18;
        *(_QWORD *)(a1 + 176) = v20;
        sub_1AD00412C(v23, v19);
        goto LABEL_25;
      }
      sub_1AD007EC0(a1 + 168);
    }
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)v18;
LABEL_25:
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_BYTE *)(a1 + 208) = *(_BYTE *)(a2 + 208);
  return a1;
}

uint64_t getEnumTagSinglePayload for IDSSessionAccept(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 209))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for IDSSessionAccept(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 200) = 0;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 208) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 209) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 24) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 209) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for IDSSessionAccept()
{
  return &type metadata for IDSSessionAccept;
}

uint64_t sub_1AD60E004(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2820FC, (uint64_t (*)(void))sub_1AD28236C);
}

uint64_t sub_1AD60E018(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD282140, (uint64_t (*)(void))sub_1AD2823B0);
}

uint64_t sub_1AD60E02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD282034, (uint64_t (*)(void))sub_1AD2822A4);
}

uint64_t sub_1AD60E040(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD282184, (uint64_t (*)(void))sub_1AD2823F4);
}

uint64_t sub_1AD60E054(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD2821C8, (uint64_t (*)(void))sub_1AD282438);
}

uint64_t sub_1AD60E068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD28220C, (uint64_t (*)(void))sub_1AD28247C);
}

uint64_t sub_1AD60E07C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD002D9C(a1, a2, a3, (uint64_t (*)(void))sub_1AD282250, (uint64_t (*)(void))sub_1AD2824C0);
}

uint64_t destroy for APSUserPayload(uint64_t *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;

  swift_release();
  v2 = a1[9];
  if (v2 >> 60 != 15)
    sub_1AD00412C(a1[8], v2);
  v3 = a1[11];
  if (v3 >> 60 != 15)
    sub_1AD00412C(a1[10], v3);
  v4 = a1[13];
  if (v4 >> 60 != 15)
    sub_1AD00412C(a1[12], v4);
  v5 = a1[15];
  if (v5 >> 60 != 15)
    sub_1AD00412C(a1[14], v5);
  v6 = a1[17];
  if (v6 >> 60 != 15)
    sub_1AD00412C(a1[16], v6);
  swift_bridgeObjectRelease();
  v7 = a1[21];
  if (v7 >> 60 != 15)
    sub_1AD00412C(a1[20], v7);
  swift_bridgeObjectRelease();
  v8 = a1[30];
  if (v8 >> 60 != 15)
    sub_1AD00412C(a1[29], v8);
  v9 = a1[33];
  if (v9 >> 60 != 15)
    sub_1AD00412C(a1[32], v9);
  v10 = a1[35];
  if (v10 >> 60 != 15)
    sub_1AD00412C(a1[34], v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v11 = a1[43];
  if (v11 >> 60 != 15)
    sub_1AD00412C(a1[42], v11);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v12 = a1[65];
  if (v12 >> 60 != 15)
    sub_1AD00412C(a1[64], v12);
  v13 = a1[67];
  if (v13 >> 60 != 15)
    sub_1AD00412C(a1[66], v13);
  v14 = a1[71];
  if (v14 >> 60 != 15)
    sub_1AD00412C(a1[70], v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15 = a1[87];
  if (v15 >> 60 != 15)
    sub_1AD00412C(a1[86], v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v16 = a1[119];
  if (v16 >> 60 != 15)
    sub_1AD00412C(a1[118], v16);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[149] != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  v17 = a1[161];
  if (v17 >> 60 != 15)
    sub_1AD00412C(a1[160], v17);
  swift_bridgeObjectRelease();
  v18 = a1[165];
  if (v18 >> 60 != 15)
    sub_1AD00412C(a1[164], v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19 = a1[176];
  if (v19 >> 60 != 15)
    sub_1AD00412C(a1[175], v19);
  v20 = a1[178];
  if (v20 >> 60 != 15)
    sub_1AD00412C(a1[177], v20);
  swift_bridgeObjectRelease();
  v21 = a1[196];
  if (v21 >> 60 != 15)
    sub_1AD00412C(a1[195], v21);
  v22 = a1[198];
  if (v22 >> 60 != 15)
    sub_1AD00412C(a1[197], v22);
  v23 = a1[202];
  if (v23 >> 60 != 15)
    sub_1AD00412C(a1[201], v23);
  v24 = a1[204];
  if (v24 >> 60 != 15)
    sub_1AD00412C(a1[203], v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v25 = a1[219];
  if (v25 >> 60 != 15)
    sub_1AD00412C(a1[218], v25);
  swift_bridgeObjectRelease();
  v26 = a1[229];
  if (v26 >> 60 != 15)
    sub_1AD00412C(a1[228], v26);
  v27 = a1[231];
  if (v27 >> 60 != 15)
    sub_1AD00412C(a1[230], v27);
  v28 = a1[235];
  if (v28 >> 60 != 15)
    sub_1AD00412C(a1[234], v28);
  v29 = a1[237];
  if (v29 >> 60 != 15)
    sub_1AD00412C(a1[236], v29);
  v30 = a1[239];
  if (v30 >> 60 != 15)
    sub_1AD00412C(a1[238], v30);
  v31 = a1[243];
  if (v31 >> 60 != 15)
    sub_1AD00412C(a1[242], v31);
  v32 = a1[247];
  if (v32 >> 60 != 15)
    sub_1AD00412C(a1[246], v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v33 = a1[261];
  if (v33 >> 60 != 15)
    sub_1AD00412C(a1[260], v33);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for APSUserPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t *v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t *v49;
  unint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  unint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t *v60;
  unint64_t v61;
  uint64_t v62;
  uint64_t v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t *v67;
  unint64_t v68;
  uint64_t v69;
  _OWORD *v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  unint64_t v77;
  uint64_t v78;
  _OWORD *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  unint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  unint64_t v89;
  uint64_t v90;
  uint64_t *v91;
  unint64_t v92;
  uint64_t v93;
  _OWORD *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t *v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t *v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t *v103;
  unint64_t v104;
  uint64_t v105;
  uint64_t *v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t *v109;
  unint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t *v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t *v120;
  uint64_t v121;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  v5 = (_OWORD *)(a2 + 64);
  v6 = *(_QWORD *)(a2 + 72);
  swift_retain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 64) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_1AD0040A0(v7, v6);
    *(_QWORD *)(a1 + 64) = v7;
    *(_QWORD *)(a1 + 72) = v6;
  }
  v8 = (uint64_t *)(a2 + 80);
  v9 = *(_QWORD *)(a2 + 88);
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v8;
  }
  else
  {
    v10 = *v8;
    sub_1AD0040A0(*v8, *(_QWORD *)(a2 + 88));
    *(_QWORD *)(a1 + 80) = v10;
    *(_QWORD *)(a1 + 88) = v9;
  }
  v11 = (uint64_t *)(a2 + 96);
  v12 = *(_QWORD *)(a2 + 104);
  if (v12 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v11;
  }
  else
  {
    v13 = *v11;
    sub_1AD0040A0(*v11, *(_QWORD *)(a2 + 104));
    *(_QWORD *)(a1 + 96) = v13;
    *(_QWORD *)(a1 + 104) = v12;
  }
  v14 = (uint64_t *)(a2 + 112);
  v15 = *(_QWORD *)(a2 + 120);
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v14;
  }
  else
  {
    v16 = *v14;
    sub_1AD0040A0(*v14, *(_QWORD *)(a2 + 120));
    *(_QWORD *)(a1 + 112) = v16;
    *(_QWORD *)(a1 + 120) = v15;
  }
  v17 = (uint64_t *)(a2 + 128);
  v18 = *(_QWORD *)(a2 + 136);
  if (v18 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v17;
  }
  else
  {
    v19 = *v17;
    sub_1AD0040A0(*v17, *(_QWORD *)(a2 + 136));
    *(_QWORD *)(a1 + 128) = v19;
    *(_QWORD *)(a1 + 136) = v18;
  }
  v20 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v20;
  v21 = (_OWORD *)(a2 + 160);
  v22 = *(_QWORD *)(a2 + 168);
  swift_bridgeObjectRetain();
  if (v22 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 160) = *v21;
  }
  else
  {
    v23 = *(_QWORD *)v21;
    sub_1AD0040A0(v23, v22);
    *(_QWORD *)(a1 + 160) = v23;
    *(_QWORD *)(a1 + 168) = v22;
  }
  v24 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v24;
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  v25 = (_OWORD *)(a2 + 232);
  v26 = *(_QWORD *)(a2 + 240);
  swift_bridgeObjectRetain();
  if (v26 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 232) = *v25;
  }
  else
  {
    v27 = *(_QWORD *)v25;
    sub_1AD0040A0(v27, v26);
    *(_QWORD *)(a1 + 232) = v27;
    *(_QWORD *)(a1 + 240) = v26;
  }
  *(_WORD *)(a1 + 248) = *(_WORD *)(a2 + 248);
  v28 = (uint64_t *)(a2 + 256);
  v29 = *(_QWORD *)(a2 + 264);
  if (v29 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 256) = *(_OWORD *)v28;
  }
  else
  {
    v30 = *v28;
    sub_1AD0040A0(*v28, *(_QWORD *)(a2 + 264));
    *(_QWORD *)(a1 + 256) = v30;
    *(_QWORD *)(a1 + 264) = v29;
  }
  v31 = (uint64_t *)(a2 + 272);
  v32 = *(_QWORD *)(a2 + 280);
  if (v32 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 272) = *(_OWORD *)v31;
  }
  else
  {
    v33 = *v31;
    sub_1AD0040A0(*v31, *(_QWORD *)(a2 + 280));
    *(_QWORD *)(a1 + 272) = v33;
    *(_QWORD *)(a1 + 280) = v32;
  }
  v34 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v34;
  v35 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v35;
  v36 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v36;
  v37 = (uint64_t *)(a2 + 336);
  v38 = *(_QWORD *)(a2 + 344);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v38 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 336) = *(_OWORD *)v37;
  }
  else
  {
    v39 = *v37;
    sub_1AD0040A0(*v37, v38);
    *(_QWORD *)(a1 + 336) = v39;
    *(_QWORD *)(a1 + 344) = v38;
  }
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
  v40 = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = v40;
  v41 = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = v41;
  v42 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v42;
  v43 = *(_QWORD *)(a2 + 424);
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  *(_QWORD *)(a1 + 424) = v43;
  v44 = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = v44;
  v45 = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v45;
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
  v46 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v46;
  v120 = (uint64_t *)(a2 + 512);
  v47 = *(_QWORD *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v47 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 512) = *(_OWORD *)v120;
  }
  else
  {
    v48 = *v120;
    sub_1AD0040A0(*v120, v47);
    *(_QWORD *)(a1 + 512) = v48;
    *(_QWORD *)(a1 + 520) = v47;
  }
  v49 = (uint64_t *)(a2 + 528);
  v50 = *(_QWORD *)(a2 + 536);
  if (v50 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 528) = *(_OWORD *)v49;
  }
  else
  {
    v51 = *v49;
    sub_1AD0040A0(*v49, *(_QWORD *)(a2 + 536));
    *(_QWORD *)(a1 + 528) = v51;
    *(_QWORD *)(a1 + 536) = v50;
  }
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  v52 = (uint64_t *)(a2 + 560);
  v53 = *(_QWORD *)(a2 + 568);
  if (v53 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 560) = *(_OWORD *)v52;
  }
  else
  {
    v54 = *v52;
    sub_1AD0040A0(*v52, *(_QWORD *)(a2 + 568));
    *(_QWORD *)(a1 + 560) = v54;
    *(_QWORD *)(a1 + 568) = v53;
  }
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_BYTE *)(a1 + 632) = *(_BYTE *)(a2 + 632);
  v55 = *(_QWORD *)(a2 + 640);
  *(_BYTE *)(a1 + 648) = *(_BYTE *)(a2 + 648);
  *(_QWORD *)(a1 + 640) = v55;
  *(_BYTE *)(a1 + 664) = *(_BYTE *)(a2 + 664);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  v56 = (uint64_t *)(a2 + 688);
  v57 = *(_QWORD *)(a2 + 696);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v57 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 688) = *(_OWORD *)v56;
  }
  else
  {
    v58 = *v56;
    sub_1AD0040A0(*v56, v57);
    *(_QWORD *)(a1 + 688) = v58;
    *(_QWORD *)(a1 + 696) = v57;
  }
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_BYTE *)(a1 + 728) = *(_BYTE *)(a2 + 728);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  v59 = *(_QWORD *)(a2 + 768);
  *(_BYTE *)(a1 + 776) = *(_BYTE *)(a2 + 776);
  *(_QWORD *)(a1 + 768) = v59;
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  *(_BYTE *)(a1 + 808) = *(_BYTE *)(a2 + 808);
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
  *(_BYTE *)(a1 + 824) = *(_BYTE *)(a2 + 824);
  *(_BYTE *)(a1 + 840) = *(_BYTE *)(a2 + 840);
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
  *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
  *(_BYTE *)(a1 + 904) = *(_BYTE *)(a2 + 904);
  *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
  *(_DWORD *)(a1 + 905) = *(_DWORD *)(a2 + 905);
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  v60 = (uint64_t *)(a2 + 944);
  v61 = *(_QWORD *)(a2 + 952);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v61 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 944) = *(_OWORD *)v60;
  }
  else
  {
    v62 = *v60;
    sub_1AD0040A0(*v60, v61);
    *(_QWORD *)(a1 + 944) = v62;
    *(_QWORD *)(a1 + 952) = v61;
  }
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_BYTE *)(a1 + 1048) = *(_BYTE *)(a2 + 1048);
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(a2 + 1056);
  *(_QWORD *)(a1 + 1064) = *(_QWORD *)(a2 + 1064);
  *(_QWORD *)(a1 + 1072) = *(_QWORD *)(a2 + 1072);
  *(_BYTE *)(a1 + 1080) = *(_BYTE *)(a2 + 1080);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  v63 = *(_QWORD *)(a2 + 1104);
  *(_BYTE *)(a1 + 1112) = *(_BYTE *)(a2 + 1112);
  *(_QWORD *)(a1 + 1104) = v63;
  *(_BYTE *)(a1 + 1113) = *(_BYTE *)(a2 + 1113);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  *(_BYTE *)(a1 + 1144) = *(_BYTE *)(a2 + 1144);
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
  *(_BYTE *)(a1 + 1160) = *(_BYTE *)(a2 + 1160);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(a2 + 1152);
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
  v121 = *(_QWORD *)(a2 + 1192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v121 == 1)
  {
    v64 = *(_OWORD *)(a2 + 1232);
    *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
    *(_OWORD *)(a1 + 1232) = v64;
    v65 = *(_OWORD *)(a2 + 1264);
    *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
    *(_OWORD *)(a1 + 1264) = v65;
    v66 = *(_OWORD *)(a2 + 1200);
    *(_OWORD *)(a1 + 1184) = *(_OWORD *)(a2 + 1184);
    *(_OWORD *)(a1 + 1200) = v66;
  }
  else
  {
    *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
    *(_QWORD *)(a1 + 1192) = v121;
    *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
    *(_QWORD *)(a1 + 1208) = *(_QWORD *)(a2 + 1208);
    *(_QWORD *)(a1 + 1216) = *(_QWORD *)(a2 + 1216);
    *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
    *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
    *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
    *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
    *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
    *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
    *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v67 = (uint64_t *)(a2 + 1280);
  v68 = *(_QWORD *)(a2 + 1288);
  if (v68 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1280) = *(_OWORD *)v67;
  }
  else
  {
    v69 = *v67;
    sub_1AD0040A0(*v67, *(_QWORD *)(a2 + 1288));
    *(_QWORD *)(a1 + 1280) = v69;
    *(_QWORD *)(a1 + 1288) = v68;
  }
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
  v70 = (_OWORD *)(a2 + 1312);
  v71 = *(_QWORD *)(a2 + 1320);
  swift_bridgeObjectRetain();
  if (v71 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1312) = *v70;
  }
  else
  {
    v72 = *(_QWORD *)v70;
    sub_1AD0040A0(v72, v71);
    *(_QWORD *)(a1 + 1312) = v72;
    *(_QWORD *)(a1 + 1320) = v71;
  }
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  *(_BYTE *)(a1 + 1336) = *(_BYTE *)(a2 + 1336);
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_QWORD *)(a1 + 1352) = *(_QWORD *)(a2 + 1352);
  *(_BYTE *)(a1 + 1360) = *(_BYTE *)(a2 + 1360);
  *(_WORD *)(a1 + 1361) = *(_WORD *)(a2 + 1361);
  *(_BYTE *)(a1 + 1376) = *(_BYTE *)(a2 + 1376);
  *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
  v73 = (uint64_t *)(a2 + 1400);
  v74 = *(_QWORD *)(a2 + 1408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v74 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1400) = *(_OWORD *)v73;
  }
  else
  {
    v75 = *v73;
    sub_1AD0040A0(*v73, v74);
    *(_QWORD *)(a1 + 1400) = v75;
    *(_QWORD *)(a1 + 1408) = v74;
  }
  v76 = (uint64_t *)(a2 + 1416);
  v77 = *(_QWORD *)(a2 + 1424);
  if (v77 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1416) = *(_OWORD *)v76;
  }
  else
  {
    v78 = *v76;
    sub_1AD0040A0(*v76, *(_QWORD *)(a2 + 1424));
    *(_QWORD *)(a1 + 1416) = v78;
    *(_QWORD *)(a1 + 1424) = v77;
  }
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_BYTE *)(a1 + 1440) = *(_BYTE *)(a2 + 1440);
  *(_WORD *)(a1 + 1441) = *(_WORD *)(a2 + 1441);
  *(_QWORD *)(a1 + 1448) = *(_QWORD *)(a2 + 1448);
  *(_BYTE *)(a1 + 1456) = *(_BYTE *)(a2 + 1456);
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
  *(_WORD *)(a1 + 1472) = *(_WORD *)(a2 + 1472);
  *(_BYTE *)(a1 + 1488) = *(_BYTE *)(a2 + 1488);
  *(_QWORD *)(a1 + 1480) = *(_QWORD *)(a2 + 1480);
  *(_BYTE *)(a1 + 1504) = *(_BYTE *)(a2 + 1504);
  *(_QWORD *)(a1 + 1496) = *(_QWORD *)(a2 + 1496);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  *(_BYTE *)(a1 + 1536) = *(_BYTE *)(a2 + 1536);
  *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
  *(_BYTE *)(a1 + 1552) = *(_BYTE *)(a2 + 1552);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  v79 = (_OWORD *)(a2 + 1560);
  v80 = *(_QWORD *)(a2 + 1568);
  swift_bridgeObjectRetain();
  if (v80 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1560) = *v79;
  }
  else
  {
    v81 = *(_QWORD *)v79;
    sub_1AD0040A0(v81, v80);
    *(_QWORD *)(a1 + 1560) = v81;
    *(_QWORD *)(a1 + 1568) = v80;
  }
  v82 = (uint64_t *)(a2 + 1576);
  v83 = *(_QWORD *)(a2 + 1584);
  if (v83 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1576) = *(_OWORD *)v82;
  }
  else
  {
    v84 = *v82;
    sub_1AD0040A0(*v82, *(_QWORD *)(a2 + 1584));
    *(_QWORD *)(a1 + 1576) = v84;
    *(_QWORD *)(a1 + 1584) = v83;
  }
  *(_QWORD *)(a1 + 1592) = *(_QWORD *)(a2 + 1592);
  *(_BYTE *)(a1 + 1600) = *(_BYTE *)(a2 + 1600);
  v85 = (uint64_t *)(a2 + 1608);
  v86 = *(_QWORD *)(a2 + 1616);
  if (v86 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1608) = *(_OWORD *)v85;
  }
  else
  {
    v87 = *v85;
    sub_1AD0040A0(*v85, *(_QWORD *)(a2 + 1616));
    *(_QWORD *)(a1 + 1608) = v87;
    *(_QWORD *)(a1 + 1616) = v86;
  }
  v88 = (uint64_t *)(a2 + 1624);
  v89 = *(_QWORD *)(a2 + 1632);
  if (v89 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1624) = *(_OWORD *)v88;
  }
  else
  {
    v90 = *v88;
    sub_1AD0040A0(*v88, *(_QWORD *)(a2 + 1632));
    *(_QWORD *)(a1 + 1624) = v90;
    *(_QWORD *)(a1 + 1632) = v89;
  }
  *(_QWORD *)(a1 + 1640) = *(_QWORD *)(a2 + 1640);
  *(_BYTE *)(a1 + 1648) = *(_BYTE *)(a2 + 1648);
  *(_QWORD *)(a1 + 1656) = *(_QWORD *)(a2 + 1656);
  *(_BYTE *)(a1 + 1664) = *(_BYTE *)(a2 + 1664);
  *(_QWORD *)(a1 + 1672) = *(_QWORD *)(a2 + 1672);
  *(_QWORD *)(a1 + 1680) = *(_QWORD *)(a2 + 1680);
  *(_QWORD *)(a1 + 1688) = *(_QWORD *)(a2 + 1688);
  *(_QWORD *)(a1 + 1696) = *(_QWORD *)(a2 + 1696);
  *(_QWORD *)(a1 + 1704) = *(_QWORD *)(a2 + 1704);
  *(_QWORD *)(a1 + 1712) = *(_QWORD *)(a2 + 1712);
  *(_BYTE *)(a1 + 1720) = *(_BYTE *)(a2 + 1720);
  *(_WORD *)(a1 + 1721) = *(_WORD *)(a2 + 1721);
  *(_QWORD *)(a1 + 1728) = *(_QWORD *)(a2 + 1728);
  *(_BYTE *)(a1 + 1736) = *(_BYTE *)(a2 + 1736);
  v91 = (uint64_t *)(a2 + 1744);
  v92 = *(_QWORD *)(a2 + 1752);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v92 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1744) = *(_OWORD *)v91;
  }
  else
  {
    v93 = *v91;
    sub_1AD0040A0(*v91, v92);
    *(_QWORD *)(a1 + 1744) = v93;
    *(_QWORD *)(a1 + 1752) = v92;
  }
  *(_QWORD *)(a1 + 1760) = *(_QWORD *)(a2 + 1760);
  *(_WORD *)(a1 + 1768) = *(_WORD *)(a2 + 1768);
  *(_QWORD *)(a1 + 1776) = *(_QWORD *)(a2 + 1776);
  *(_QWORD *)(a1 + 1784) = *(_QWORD *)(a2 + 1784);
  *(_QWORD *)(a1 + 1792) = *(_QWORD *)(a2 + 1792);
  *(_BYTE *)(a1 + 1800) = *(_BYTE *)(a2 + 1800);
  *(_BYTE *)(a1 + 1816) = *(_BYTE *)(a2 + 1816);
  *(_QWORD *)(a1 + 1808) = *(_QWORD *)(a2 + 1808);
  v94 = (_OWORD *)(a2 + 1824);
  v95 = *(_QWORD *)(a2 + 1832);
  swift_bridgeObjectRetain();
  if (v95 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1824) = *v94;
  }
  else
  {
    v96 = *(_QWORD *)v94;
    sub_1AD0040A0(v96, v95);
    *(_QWORD *)(a1 + 1824) = v96;
    *(_QWORD *)(a1 + 1832) = v95;
  }
  v97 = (uint64_t *)(a2 + 1840);
  v98 = *(_QWORD *)(a2 + 1848);
  if (v98 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1840) = *(_OWORD *)v97;
  }
  else
  {
    v99 = *v97;
    sub_1AD0040A0(*v97, *(_QWORD *)(a2 + 1848));
    *(_QWORD *)(a1 + 1840) = v99;
    *(_QWORD *)(a1 + 1848) = v98;
  }
  *(_QWORD *)(a1 + 1856) = *(_QWORD *)(a2 + 1856);
  *(_BYTE *)(a1 + 1864) = *(_BYTE *)(a2 + 1864);
  v100 = (uint64_t *)(a2 + 1872);
  v101 = *(_QWORD *)(a2 + 1880);
  if (v101 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1872) = *(_OWORD *)v100;
  }
  else
  {
    v102 = *v100;
    sub_1AD0040A0(*v100, *(_QWORD *)(a2 + 1880));
    *(_QWORD *)(a1 + 1872) = v102;
    *(_QWORD *)(a1 + 1880) = v101;
  }
  v103 = (uint64_t *)(a2 + 1888);
  v104 = *(_QWORD *)(a2 + 1896);
  if (v104 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1888) = *(_OWORD *)v103;
  }
  else
  {
    v105 = *v103;
    sub_1AD0040A0(*v103, *(_QWORD *)(a2 + 1896));
    *(_QWORD *)(a1 + 1888) = v105;
    *(_QWORD *)(a1 + 1896) = v104;
  }
  v106 = (uint64_t *)(a2 + 1904);
  v107 = *(_QWORD *)(a2 + 1912);
  if (v107 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1904) = *(_OWORD *)v106;
  }
  else
  {
    v108 = *v106;
    sub_1AD0040A0(*v106, *(_QWORD *)(a2 + 1912));
    *(_QWORD *)(a1 + 1904) = v108;
    *(_QWORD *)(a1 + 1912) = v107;
  }
  *(_QWORD *)(a1 + 1920) = *(_QWORD *)(a2 + 1920);
  *(_BYTE *)(a1 + 1928) = *(_BYTE *)(a2 + 1928);
  v109 = (uint64_t *)(a2 + 1936);
  v110 = *(_QWORD *)(a2 + 1944);
  if (v110 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1936) = *(_OWORD *)v109;
  }
  else
  {
    v111 = *v109;
    sub_1AD0040A0(*v109, *(_QWORD *)(a2 + 1944));
    *(_QWORD *)(a1 + 1936) = v111;
    *(_QWORD *)(a1 + 1944) = v110;
  }
  *(_QWORD *)(a1 + 1952) = *(_QWORD *)(a2 + 1952);
  *(_BYTE *)(a1 + 1960) = *(_BYTE *)(a2 + 1960);
  v112 = (uint64_t *)(a2 + 1968);
  v113 = *(_QWORD *)(a2 + 1976);
  if (v113 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 1968) = *(_OWORD *)v112;
  }
  else
  {
    v114 = *v112;
    sub_1AD0040A0(*v112, *(_QWORD *)(a2 + 1976));
    *(_QWORD *)(a1 + 1968) = v114;
    *(_QWORD *)(a1 + 1976) = v113;
  }
  *(_QWORD *)(a1 + 1984) = *(_QWORD *)(a2 + 1984);
  *(_QWORD *)(a1 + 1992) = *(_QWORD *)(a2 + 1992);
  *(_QWORD *)(a1 + 2000) = *(_QWORD *)(a2 + 2000);
  *(_BYTE *)(a1 + 2008) = *(_BYTE *)(a2 + 2008);
  *(_QWORD *)(a1 + 2016) = *(_QWORD *)(a2 + 2016);
  *(_BYTE *)(a1 + 2024) = *(_BYTE *)(a2 + 2024);
  *(_QWORD *)(a1 + 2032) = *(_QWORD *)(a2 + 2032);
  *(_BYTE *)(a1 + 2040) = *(_BYTE *)(a2 + 2040);
  v115 = *(_QWORD *)(a2 + 2048);
  *(_BYTE *)(a1 + 2056) = *(_BYTE *)(a2 + 2056);
  *(_QWORD *)(a1 + 2048) = v115;
  *(_QWORD *)(a1 + 2064) = *(_QWORD *)(a2 + 2064);
  *(_QWORD *)(a1 + 2072) = *(_QWORD *)(a2 + 2072);
  v116 = (uint64_t *)(a2 + 2080);
  v117 = *(_QWORD *)(a2 + 2088);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v117 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 2080) = *(_OWORD *)v116;
  }
  else
  {
    v118 = *v116;
    sub_1AD0040A0(*v116, v117);
    *(_QWORD *)(a1 + 2080) = v118;
    *(_QWORD *)(a1 + 2088) = v117;
  }
  *(_QWORD *)(a1 + 2096) = *(_QWORD *)(a2 + 2096);
  *(_BYTE *)(a1 + 2104) = *(_BYTE *)(a2 + 2104);
  *(_QWORD *)(a1 + 2112) = *(_QWORD *)(a2 + 2112);
  *(_QWORD *)(a1 + 2120) = *(_QWORD *)(a2 + 2120);
  *(_BYTE *)(a1 + 2128) = *(_BYTE *)(a2 + 2128);
  *(_QWORD *)(a1 + 2136) = *(_QWORD *)(a2 + 2136);
  *(_WORD *)(a1 + 2144) = *(_WORD *)(a2 + 2144);
  *(_BYTE *)(a1 + 2146) = *(_BYTE *)(a2 + 2146);
  *(_QWORD *)(a1 + 2152) = *(_QWORD *)(a2 + 2152);
  *(_QWORD *)(a1 + 2160) = *(_QWORD *)(a2 + 2160);
  *(_BYTE *)(a1 + 2168) = *(_BYTE *)(a2 + 2168);
  *(_QWORD *)(a1 + 2176) = *(_QWORD *)(a2 + 2176);
  *(_BYTE *)(a1 + 2184) = *(_BYTE *)(a2 + 2184);
  *(_QWORD *)(a1 + 2192) = *(_QWORD *)(a2 + 2192);
  *(_WORD *)(a1 + 2200) = *(_WORD *)(a2 + 2200);
  *(_BYTE *)(a1 + 2202) = *(_BYTE *)(a2 + 2202);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for APSUserPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t *v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t *v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t *v38;
  unint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t *v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t *v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  unint64_t v63;
  uint64_t *v64;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t *v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  unint64_t v84;
  uint64_t v85;
  uint64_t *v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  unint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  _OWORD *v122;
  _OWORD *v123;
  uint64_t v124;
  __int128 v125;
  __int128 v126;
  __int128 v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  uint64_t *v133;
  unint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  unint64_t v138;
  uint64_t *v139;
  unint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  unint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t *v147;
  unint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t *v153;
  unint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  unint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t *v166;
  unint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t *v172;
  unint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  uint64_t *v179;
  unint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  unint64_t v184;
  uint64_t *v185;
  unint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  unint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t *v195;
  unint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  unint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t *v204;
  unint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  unint64_t v209;
  uint64_t *v210;
  unint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  unint64_t v215;
  uint64_t v216;
  uint64_t *v217;
  unint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  unint64_t v222;
  uint64_t *v223;
  unint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  unint64_t v228;
  uint64_t *v229;
  unint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  unint64_t v234;
  uint64_t v235;
  uint64_t *v236;
  unint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  unint64_t v241;
  uint64_t v242;
  uint64_t *v243;
  unint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  unint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t *v253;
  unint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  unint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v6;
  v7 = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = v7;
  v8 = (uint64_t *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) >> 60 == 15)
  {
    if (v9 >> 60 != 15)
    {
      v10 = *v8;
      sub_1AD0040A0(*v8, *(_QWORD *)(a2 + 72));
      *(_QWORD *)(a1 + 64) = v10;
      *(_QWORD *)(a1 + 72) = v9;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v9 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 64);
LABEL_6:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v8;
    goto LABEL_8;
  }
  v11 = *v8;
  sub_1AD0040A0(*v8, *(_QWORD *)(a2 + 72));
  v12 = *(_QWORD *)(a1 + 64);
  v13 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v11;
  *(_QWORD *)(a1 + 72) = v9;
  sub_1AD00412C(v12, v13);
LABEL_8:
  v14 = (uint64_t *)(a2 + 80);
  v15 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88) >> 60 == 15)
  {
    if (v15 >> 60 != 15)
    {
      v16 = *v14;
      sub_1AD0040A0(*v14, *(_QWORD *)(a2 + 88));
      *(_QWORD *)(a1 + 80) = v16;
      *(_QWORD *)(a1 + 88) = v15;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v15 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 80);
LABEL_13:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v14;
    goto LABEL_15;
  }
  v17 = *v14;
  sub_1AD0040A0(*v14, *(_QWORD *)(a2 + 88));
  v18 = *(_QWORD *)(a1 + 80);
  v19 = *(_QWORD *)(a1 + 88);
  *(_QWORD *)(a1 + 80) = v17;
  *(_QWORD *)(a1 + 88) = v15;
  sub_1AD00412C(v18, v19);
LABEL_15:
  v20 = (uint64_t *)(a2 + 96);
  v21 = *(_QWORD *)(a2 + 104);
  if (*(_QWORD *)(a1 + 104) >> 60 == 15)
  {
    if (v21 >> 60 != 15)
    {
      v22 = *v20;
      sub_1AD0040A0(*v20, *(_QWORD *)(a2 + 104));
      *(_QWORD *)(a1 + 96) = v22;
      *(_QWORD *)(a1 + 104) = v21;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v21 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 96);
LABEL_20:
    *(_OWORD *)(a1 + 96) = *(_OWORD *)v20;
    goto LABEL_22;
  }
  v23 = *v20;
  sub_1AD0040A0(*v20, *(_QWORD *)(a2 + 104));
  v24 = *(_QWORD *)(a1 + 96);
  v25 = *(_QWORD *)(a1 + 104);
  *(_QWORD *)(a1 + 96) = v23;
  *(_QWORD *)(a1 + 104) = v21;
  sub_1AD00412C(v24, v25);
LABEL_22:
  v26 = (uint64_t *)(a2 + 112);
  v27 = *(_QWORD *)(a2 + 120);
  if (*(_QWORD *)(a1 + 120) >> 60 == 15)
  {
    if (v27 >> 60 != 15)
    {
      v28 = *v26;
      sub_1AD0040A0(*v26, *(_QWORD *)(a2 + 120));
      *(_QWORD *)(a1 + 112) = v28;
      *(_QWORD *)(a1 + 120) = v27;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v27 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 112);
LABEL_27:
    *(_OWORD *)(a1 + 112) = *(_OWORD *)v26;
    goto LABEL_29;
  }
  v29 = *v26;
  sub_1AD0040A0(*v26, *(_QWORD *)(a2 + 120));
  v30 = *(_QWORD *)(a1 + 112);
  v31 = *(_QWORD *)(a1 + 120);
  *(_QWORD *)(a1 + 112) = v29;
  *(_QWORD *)(a1 + 120) = v27;
  sub_1AD00412C(v30, v31);
LABEL_29:
  v32 = (uint64_t *)(a2 + 128);
  v33 = *(_QWORD *)(a2 + 136);
  if (*(_QWORD *)(a1 + 136) >> 60 == 15)
  {
    if (v33 >> 60 != 15)
    {
      v34 = *v32;
      sub_1AD0040A0(*v32, *(_QWORD *)(a2 + 136));
      *(_QWORD *)(a1 + 128) = v34;
      *(_QWORD *)(a1 + 136) = v33;
      goto LABEL_36;
    }
    goto LABEL_34;
  }
  if (v33 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 128);
LABEL_34:
    *(_OWORD *)(a1 + 128) = *(_OWORD *)v32;
    goto LABEL_36;
  }
  v35 = *v32;
  sub_1AD0040A0(*v32, *(_QWORD *)(a2 + 136));
  v36 = *(_QWORD *)(a1 + 128);
  v37 = *(_QWORD *)(a1 + 136);
  *(_QWORD *)(a1 + 128) = v35;
  *(_QWORD *)(a1 + 136) = v33;
  sub_1AD00412C(v36, v37);
LABEL_36:
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = *(_QWORD *)(a2 + 152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v38 = (uint64_t *)(a2 + 160);
  v39 = *(_QWORD *)(a2 + 168);
  if (*(_QWORD *)(a1 + 168) >> 60 == 15)
  {
    if (v39 >> 60 != 15)
    {
      v40 = *v38;
      sub_1AD0040A0(*v38, *(_QWORD *)(a2 + 168));
      *(_QWORD *)(a1 + 160) = v40;
      *(_QWORD *)(a1 + 168) = v39;
      goto LABEL_43;
    }
    goto LABEL_41;
  }
  if (v39 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 160);
LABEL_41:
    *(_OWORD *)(a1 + 160) = *(_OWORD *)v38;
    goto LABEL_43;
  }
  v41 = *v38;
  sub_1AD0040A0(*v38, *(_QWORD *)(a2 + 168));
  v42 = *(_QWORD *)(a1 + 160);
  v43 = *(_QWORD *)(a1 + 168);
  *(_QWORD *)(a1 + 160) = v41;
  *(_QWORD *)(a1 + 168) = v39;
  sub_1AD00412C(v42, v43);
LABEL_43:
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = *(_QWORD *)(a2 + 184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  v44 = *(_QWORD *)(a2 + 200);
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  *(_QWORD *)(a1 + 200) = v44;
  v45 = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  *(_QWORD *)(a1 + 216) = v45;
  v46 = (uint64_t *)(a2 + 232);
  v47 = *(_QWORD *)(a2 + 240);
  if (*(_QWORD *)(a1 + 240) >> 60 == 15)
  {
    if (v47 >> 60 != 15)
    {
      v48 = *v46;
      sub_1AD0040A0(*v46, *(_QWORD *)(a2 + 240));
      *(_QWORD *)(a1 + 232) = v48;
      *(_QWORD *)(a1 + 240) = v47;
      goto LABEL_50;
    }
    goto LABEL_48;
  }
  if (v47 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 232);
LABEL_48:
    *(_OWORD *)(a1 + 232) = *(_OWORD *)v46;
    goto LABEL_50;
  }
  v49 = *v46;
  sub_1AD0040A0(*v46, *(_QWORD *)(a2 + 240));
  v50 = *(_QWORD *)(a1 + 232);
  v51 = *(_QWORD *)(a1 + 240);
  *(_QWORD *)(a1 + 232) = v49;
  *(_QWORD *)(a1 + 240) = v47;
  sub_1AD00412C(v50, v51);
LABEL_50:
  *(_BYTE *)(a1 + 248) = *(_BYTE *)(a2 + 248);
  *(_BYTE *)(a1 + 249) = *(_BYTE *)(a2 + 249);
  v52 = (uint64_t *)(a2 + 256);
  v53 = *(_QWORD *)(a2 + 264);
  if (*(_QWORD *)(a1 + 264) >> 60 == 15)
  {
    if (v53 >> 60 != 15)
    {
      v54 = *v52;
      sub_1AD0040A0(*v52, *(_QWORD *)(a2 + 264));
      *(_QWORD *)(a1 + 256) = v54;
      *(_QWORD *)(a1 + 264) = v53;
      goto LABEL_57;
    }
    goto LABEL_55;
  }
  if (v53 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 256);
LABEL_55:
    *(_OWORD *)(a1 + 256) = *(_OWORD *)v52;
    goto LABEL_57;
  }
  v55 = *v52;
  sub_1AD0040A0(*v52, *(_QWORD *)(a2 + 264));
  v56 = *(_QWORD *)(a1 + 256);
  v57 = *(_QWORD *)(a1 + 264);
  *(_QWORD *)(a1 + 256) = v55;
  *(_QWORD *)(a1 + 264) = v53;
  sub_1AD00412C(v56, v57);
LABEL_57:
  v58 = (uint64_t *)(a2 + 272);
  v59 = *(_QWORD *)(a2 + 280);
  if (*(_QWORD *)(a1 + 280) >> 60 == 15)
  {
    if (v59 >> 60 != 15)
    {
      v60 = *v58;
      sub_1AD0040A0(*v58, *(_QWORD *)(a2 + 280));
      *(_QWORD *)(a1 + 272) = v60;
      *(_QWORD *)(a1 + 280) = v59;
      goto LABEL_64;
    }
    goto LABEL_62;
  }
  if (v59 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 272);
LABEL_62:
    *(_OWORD *)(a1 + 272) = *(_OWORD *)v58;
    goto LABEL_64;
  }
  v61 = *v58;
  sub_1AD0040A0(*v58, *(_QWORD *)(a2 + 280));
  v62 = *(_QWORD *)(a1 + 272);
  v63 = *(_QWORD *)(a1 + 280);
  *(_QWORD *)(a1 + 272) = v61;
  *(_QWORD *)(a1 + 280) = v59;
  sub_1AD00412C(v62, v63);
LABEL_64:
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = *(_QWORD *)(a2 + 296);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = *(_QWORD *)(a2 + 312);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = *(_QWORD *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v64 = (uint64_t *)(a2 + 336);
  v65 = *(_QWORD *)(a2 + 344);
  if (*(_QWORD *)(a1 + 344) >> 60 == 15)
  {
    if (v65 >> 60 != 15)
    {
      v66 = *v64;
      sub_1AD0040A0(*v64, *(_QWORD *)(a2 + 344));
      *(_QWORD *)(a1 + 336) = v66;
      *(_QWORD *)(a1 + 344) = v65;
      goto LABEL_71;
    }
    goto LABEL_69;
  }
  if (v65 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 336);
LABEL_69:
    *(_OWORD *)(a1 + 336) = *(_OWORD *)v64;
    goto LABEL_71;
  }
  v67 = *v64;
  sub_1AD0040A0(*v64, *(_QWORD *)(a2 + 344));
  v68 = *(_QWORD *)(a1 + 336);
  v69 = *(_QWORD *)(a1 + 344);
  *(_QWORD *)(a1 + 336) = v67;
  *(_QWORD *)(a1 + 344) = v65;
  sub_1AD00412C(v68, v69);
LABEL_71:
  v70 = *(_QWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
  *(_QWORD *)(a1 + 352) = v70;
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = *(_QWORD *)(a2 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = *(_QWORD *)(a2 + 392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = *(_QWORD *)(a2 + 408);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = *(_QWORD *)(a2 + 440);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = *(_QWORD *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v71 = *(_QWORD *)(a2 + 464);
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  *(_QWORD *)(a1 + 464) = v71;
  v72 = *(_QWORD *)(a2 + 480);
  *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
  *(_QWORD *)(a1 + 480) = v72;
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = *(_QWORD *)(a2 + 504);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v73 = (uint64_t *)(a2 + 512);
  v74 = *(_QWORD *)(a2 + 520);
  if (*(_QWORD *)(a1 + 520) >> 60 == 15)
  {
    if (v74 >> 60 != 15)
    {
      v75 = *v73;
      sub_1AD0040A0(*v73, *(_QWORD *)(a2 + 520));
      *(_QWORD *)(a1 + 512) = v75;
      *(_QWORD *)(a1 + 520) = v74;
      goto LABEL_78;
    }
    goto LABEL_76;
  }
  if (v74 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 512);
LABEL_76:
    *(_OWORD *)(a1 + 512) = *(_OWORD *)v73;
    goto LABEL_78;
  }
  v76 = *v73;
  sub_1AD0040A0(*v73, *(_QWORD *)(a2 + 520));
  v77 = *(_QWORD *)(a1 + 512);
  v78 = *(_QWORD *)(a1 + 520);
  *(_QWORD *)(a1 + 512) = v76;
  *(_QWORD *)(a1 + 520) = v74;
  sub_1AD00412C(v77, v78);
LABEL_78:
  v79 = (uint64_t *)(a2 + 528);
  v80 = *(_QWORD *)(a2 + 536);
  if (*(_QWORD *)(a1 + 536) >> 60 == 15)
  {
    if (v80 >> 60 != 15)
    {
      v81 = *v79;
      sub_1AD0040A0(*v79, *(_QWORD *)(a2 + 536));
      *(_QWORD *)(a1 + 528) = v81;
      *(_QWORD *)(a1 + 536) = v80;
      goto LABEL_85;
    }
    goto LABEL_83;
  }
  if (v80 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 528);
LABEL_83:
    *(_OWORD *)(a1 + 528) = *(_OWORD *)v79;
    goto LABEL_85;
  }
  v82 = *v79;
  sub_1AD0040A0(*v79, *(_QWORD *)(a2 + 536));
  v83 = *(_QWORD *)(a1 + 528);
  v84 = *(_QWORD *)(a1 + 536);
  *(_QWORD *)(a1 + 528) = v82;
  *(_QWORD *)(a1 + 536) = v80;
  sub_1AD00412C(v83, v84);
LABEL_85:
  v85 = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  *(_QWORD *)(a1 + 544) = v85;
  v86 = (uint64_t *)(a2 + 560);
  v87 = *(_QWORD *)(a2 + 568);
  if (*(_QWORD *)(a1 + 568) >> 60 == 15)
  {
    if (v87 >> 60 != 15)
    {
      v88 = *v86;
      sub_1AD0040A0(*v86, *(_QWORD *)(a2 + 568));
      *(_QWORD *)(a1 + 560) = v88;
      *(_QWORD *)(a1 + 568) = v87;
      goto LABEL_92;
    }
    goto LABEL_90;
  }
  if (v87 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 560);
LABEL_90:
    *(_OWORD *)(a1 + 560) = *(_OWORD *)v86;
    goto LABEL_92;
  }
  v89 = *v86;
  sub_1AD0040A0(*v86, *(_QWORD *)(a2 + 568));
  v90 = *(_QWORD *)(a1 + 560);
  v91 = *(_QWORD *)(a1 + 568);
  *(_QWORD *)(a1 + 560) = v89;
  *(_QWORD *)(a1 + 568) = v87;
  sub_1AD00412C(v90, v91);
LABEL_92:
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v92 = *(_QWORD *)(a2 + 624);
  *(_BYTE *)(a1 + 632) = *(_BYTE *)(a2 + 632);
  *(_QWORD *)(a1 + 624) = v92;
  v93 = *(_QWORD *)(a2 + 640);
  *(_BYTE *)(a1 + 648) = *(_BYTE *)(a2 + 648);
  *(_QWORD *)(a1 + 640) = v93;
  v94 = *(_QWORD *)(a2 + 656);
  *(_BYTE *)(a1 + 664) = *(_BYTE *)(a2 + 664);
  *(_QWORD *)(a1 + 656) = v94;
  v95 = *(_QWORD *)(a2 + 672);
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  *(_QWORD *)(a1 + 672) = v95;
  v96 = (uint64_t *)(a2 + 688);
  v97 = *(_QWORD *)(a2 + 696);
  if (*(_QWORD *)(a1 + 696) >> 60 == 15)
  {
    if (v97 >> 60 != 15)
    {
      v98 = *v96;
      sub_1AD0040A0(*v96, *(_QWORD *)(a2 + 696));
      *(_QWORD *)(a1 + 688) = v98;
      *(_QWORD *)(a1 + 696) = v97;
      goto LABEL_99;
    }
    goto LABEL_97;
  }
  if (v97 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 688);
LABEL_97:
    *(_OWORD *)(a1 + 688) = *(_OWORD *)v96;
    goto LABEL_99;
  }
  v99 = *v96;
  sub_1AD0040A0(*v96, *(_QWORD *)(a2 + 696));
  v100 = *(_QWORD *)(a1 + 688);
  v101 = *(_QWORD *)(a1 + 696);
  *(_QWORD *)(a1 + 688) = v99;
  *(_QWORD *)(a1 + 696) = v97;
  sub_1AD00412C(v100, v101);
LABEL_99:
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v102 = *(_QWORD *)(a2 + 720);
  *(_BYTE *)(a1 + 728) = *(_BYTE *)(a2 + 728);
  *(_QWORD *)(a1 + 720) = v102;
  v103 = *(_QWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
  *(_QWORD *)(a1 + 736) = v103;
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v104 = *(_QWORD *)(a2 + 768);
  *(_BYTE *)(a1 + 776) = *(_BYTE *)(a2 + 776);
  *(_QWORD *)(a1 + 768) = v104;
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v105 = *(_QWORD *)(a2 + 800);
  *(_BYTE *)(a1 + 808) = *(_BYTE *)(a2 + 808);
  *(_QWORD *)(a1 + 800) = v105;
  v106 = *(_QWORD *)(a2 + 816);
  *(_BYTE *)(a1 + 824) = *(_BYTE *)(a2 + 824);
  *(_QWORD *)(a1 + 816) = v106;
  v107 = *(_QWORD *)(a2 + 832);
  *(_BYTE *)(a1 + 840) = *(_BYTE *)(a2 + 840);
  *(_QWORD *)(a1 + 832) = v107;
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v108 = *(_QWORD *)(a2 + 864);
  *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
  *(_QWORD *)(a1 + 864) = v108;
  v109 = *(_QWORD *)(a2 + 880);
  *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
  *(_QWORD *)(a1 + 880) = v109;
  v110 = *(_QWORD *)(a2 + 896);
  *(_BYTE *)(a1 + 904) = *(_BYTE *)(a2 + 904);
  *(_QWORD *)(a1 + 896) = v110;
  *(_BYTE *)(a1 + 905) = *(_BYTE *)(a2 + 905);
  *(_BYTE *)(a1 + 906) = *(_BYTE *)(a2 + 906);
  *(_BYTE *)(a1 + 907) = *(_BYTE *)(a2 + 907);
  *(_BYTE *)(a1 + 908) = *(_BYTE *)(a2 + 908);
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v111 = (uint64_t *)(a2 + 944);
  v112 = *(_QWORD *)(a2 + 952);
  if (*(_QWORD *)(a1 + 952) >> 60 == 15)
  {
    if (v112 >> 60 != 15)
    {
      v113 = *v111;
      sub_1AD0040A0(*v111, *(_QWORD *)(a2 + 952));
      *(_QWORD *)(a1 + 944) = v113;
      *(_QWORD *)(a1 + 952) = v112;
      goto LABEL_106;
    }
    goto LABEL_104;
  }
  if (v112 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 944);
LABEL_104:
    *(_OWORD *)(a1 + 944) = *(_OWORD *)v111;
    goto LABEL_106;
  }
  v114 = *v111;
  sub_1AD0040A0(*v111, *(_QWORD *)(a2 + 952));
  v115 = *(_QWORD *)(a1 + 944);
  v116 = *(_QWORD *)(a1 + 952);
  *(_QWORD *)(a1 + 944) = v114;
  *(_QWORD *)(a1 + 952) = v112;
  sub_1AD00412C(v115, v116);
LABEL_106:
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v117 = *(_QWORD *)(a2 + 1040);
  *(_BYTE *)(a1 + 1048) = *(_BYTE *)(a2 + 1048);
  *(_QWORD *)(a1 + 1040) = v117;
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(a2 + 1056);
  *(_QWORD *)(a1 + 1064) = *(_QWORD *)(a2 + 1064);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v118 = *(_QWORD *)(a2 + 1072);
  *(_BYTE *)(a1 + 1080) = *(_BYTE *)(a2 + 1080);
  *(_QWORD *)(a1 + 1072) = v118;
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v119 = *(_QWORD *)(a2 + 1104);
  *(_BYTE *)(a1 + 1112) = *(_BYTE *)(a2 + 1112);
  *(_QWORD *)(a1 + 1104) = v119;
  *(_BYTE *)(a1 + 1113) = *(_BYTE *)(a2 + 1113);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v120 = *(_QWORD *)(a2 + 1136);
  *(_BYTE *)(a1 + 1144) = *(_BYTE *)(a2 + 1144);
  *(_QWORD *)(a1 + 1136) = v120;
  v121 = *(_QWORD *)(a2 + 1152);
  *(_BYTE *)(a1 + 1160) = *(_BYTE *)(a2 + 1160);
  *(_QWORD *)(a1 + 1152) = v121;
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v122 = (_OWORD *)(a1 + 1184);
  v123 = (_OWORD *)(a2 + 1184);
  v124 = *(_QWORD *)(a2 + 1192);
  if (*(_QWORD *)(a1 + 1192) == 1)
  {
    if (v124 == 1)
    {
      v125 = *(_OWORD *)(a2 + 1200);
      *v122 = *v123;
      *(_OWORD *)(a1 + 1200) = v125;
      v126 = *(_OWORD *)(a2 + 1216);
      v127 = *(_OWORD *)(a2 + 1232);
      v128 = *(_OWORD *)(a2 + 1264);
      *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
      *(_OWORD *)(a1 + 1264) = v128;
      *(_OWORD *)(a1 + 1216) = v126;
      *(_OWORD *)(a1 + 1232) = v127;
    }
    else
    {
      *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
      *(_QWORD *)(a1 + 1192) = *(_QWORD *)(a2 + 1192);
      *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
      *(_QWORD *)(a1 + 1208) = *(_QWORD *)(a2 + 1208);
      *(_QWORD *)(a1 + 1216) = *(_QWORD *)(a2 + 1216);
      *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
      *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
      *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
      *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
      *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
      *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
      *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
  }
  else if (v124 == 1)
  {
    sub_1AD3F77C0(a1 + 1184);
    v129 = *(_OWORD *)(a2 + 1200);
    *v122 = *v123;
    *(_OWORD *)(a1 + 1200) = v129;
    v130 = *(_OWORD *)(a2 + 1264);
    v132 = *(_OWORD *)(a2 + 1216);
    v131 = *(_OWORD *)(a2 + 1232);
    *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
    *(_OWORD *)(a1 + 1264) = v130;
    *(_OWORD *)(a1 + 1216) = v132;
    *(_OWORD *)(a1 + 1232) = v131;
  }
  else
  {
    *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
    *(_QWORD *)(a1 + 1192) = *(_QWORD *)(a2 + 1192);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
    *(_QWORD *)(a1 + 1208) = *(_QWORD *)(a2 + 1208);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 1216) = *(_QWORD *)(a2 + 1216);
    *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
    *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
    *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
    *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  v133 = (uint64_t *)(a2 + 1280);
  v134 = *(_QWORD *)(a2 + 1288);
  if (*(_QWORD *)(a1 + 1288) >> 60 == 15)
  {
    if (v134 >> 60 != 15)
    {
      v135 = *v133;
      sub_1AD0040A0(*v133, *(_QWORD *)(a2 + 1288));
      *(_QWORD *)(a1 + 1280) = v135;
      *(_QWORD *)(a1 + 1288) = v134;
      goto LABEL_120;
    }
    goto LABEL_118;
  }
  if (v134 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1280);
LABEL_118:
    *(_OWORD *)(a1 + 1280) = *(_OWORD *)v133;
    goto LABEL_120;
  }
  v136 = *v133;
  sub_1AD0040A0(*v133, *(_QWORD *)(a2 + 1288));
  v137 = *(_QWORD *)(a1 + 1280);
  v138 = *(_QWORD *)(a1 + 1288);
  *(_QWORD *)(a1 + 1280) = v136;
  *(_QWORD *)(a1 + 1288) = v134;
  sub_1AD00412C(v137, v138);
LABEL_120:
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v139 = (uint64_t *)(a2 + 1312);
  v140 = *(_QWORD *)(a2 + 1320);
  if (*(_QWORD *)(a1 + 1320) >> 60 == 15)
  {
    if (v140 >> 60 != 15)
    {
      v141 = *v139;
      sub_1AD0040A0(*v139, *(_QWORD *)(a2 + 1320));
      *(_QWORD *)(a1 + 1312) = v141;
      *(_QWORD *)(a1 + 1320) = v140;
      goto LABEL_127;
    }
    goto LABEL_125;
  }
  if (v140 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1312);
LABEL_125:
    *(_OWORD *)(a1 + 1312) = *(_OWORD *)v139;
    goto LABEL_127;
  }
  v142 = *v139;
  sub_1AD0040A0(*v139, *(_QWORD *)(a2 + 1320));
  v143 = *(_QWORD *)(a1 + 1312);
  v144 = *(_QWORD *)(a1 + 1320);
  *(_QWORD *)(a1 + 1312) = v142;
  *(_QWORD *)(a1 + 1320) = v140;
  sub_1AD00412C(v143, v144);
LABEL_127:
  v145 = *(_QWORD *)(a2 + 1328);
  *(_BYTE *)(a1 + 1336) = *(_BYTE *)(a2 + 1336);
  *(_QWORD *)(a1 + 1328) = v145;
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_QWORD *)(a1 + 1352) = *(_QWORD *)(a2 + 1352);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1360) = *(_BYTE *)(a2 + 1360);
  *(_BYTE *)(a1 + 1361) = *(_BYTE *)(a2 + 1361);
  *(_BYTE *)(a1 + 1362) = *(_BYTE *)(a2 + 1362);
  v146 = *(_QWORD *)(a2 + 1368);
  *(_BYTE *)(a1 + 1376) = *(_BYTE *)(a2 + 1376);
  *(_QWORD *)(a1 + 1368) = v146;
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v147 = (uint64_t *)(a2 + 1400);
  v148 = *(_QWORD *)(a2 + 1408);
  if (*(_QWORD *)(a1 + 1408) >> 60 == 15)
  {
    if (v148 >> 60 != 15)
    {
      v149 = *v147;
      sub_1AD0040A0(*v147, *(_QWORD *)(a2 + 1408));
      *(_QWORD *)(a1 + 1400) = v149;
      *(_QWORD *)(a1 + 1408) = v148;
      goto LABEL_134;
    }
    goto LABEL_132;
  }
  if (v148 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1400);
LABEL_132:
    *(_OWORD *)(a1 + 1400) = *(_OWORD *)v147;
    goto LABEL_134;
  }
  v150 = *v147;
  sub_1AD0040A0(*v147, *(_QWORD *)(a2 + 1408));
  v151 = *(_QWORD *)(a1 + 1400);
  v152 = *(_QWORD *)(a1 + 1408);
  *(_QWORD *)(a1 + 1400) = v150;
  *(_QWORD *)(a1 + 1408) = v148;
  sub_1AD00412C(v151, v152);
LABEL_134:
  v153 = (uint64_t *)(a2 + 1416);
  v154 = *(_QWORD *)(a2 + 1424);
  if (*(_QWORD *)(a1 + 1424) >> 60 == 15)
  {
    if (v154 >> 60 != 15)
    {
      v155 = *v153;
      sub_1AD0040A0(*v153, *(_QWORD *)(a2 + 1424));
      *(_QWORD *)(a1 + 1416) = v155;
      *(_QWORD *)(a1 + 1424) = v154;
      goto LABEL_141;
    }
    goto LABEL_139;
  }
  if (v154 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1416);
LABEL_139:
    *(_OWORD *)(a1 + 1416) = *(_OWORD *)v153;
    goto LABEL_141;
  }
  v156 = *v153;
  sub_1AD0040A0(*v153, *(_QWORD *)(a2 + 1424));
  v157 = *(_QWORD *)(a1 + 1416);
  v158 = *(_QWORD *)(a1 + 1424);
  *(_QWORD *)(a1 + 1416) = v156;
  *(_QWORD *)(a1 + 1424) = v154;
  sub_1AD00412C(v157, v158);
LABEL_141:
  v159 = *(_QWORD *)(a2 + 1432);
  *(_BYTE *)(a1 + 1440) = *(_BYTE *)(a2 + 1440);
  *(_QWORD *)(a1 + 1432) = v159;
  *(_BYTE *)(a1 + 1441) = *(_BYTE *)(a2 + 1441);
  *(_BYTE *)(a1 + 1442) = *(_BYTE *)(a2 + 1442);
  v160 = *(_QWORD *)(a2 + 1448);
  *(_BYTE *)(a1 + 1456) = *(_BYTE *)(a2 + 1456);
  *(_QWORD *)(a1 + 1448) = v160;
  v161 = *(_QWORD *)(a2 + 1464);
  *(_BYTE *)(a1 + 1472) = *(_BYTE *)(a2 + 1472);
  *(_QWORD *)(a1 + 1464) = v161;
  *(_BYTE *)(a1 + 1473) = *(_BYTE *)(a2 + 1473);
  v162 = *(_QWORD *)(a2 + 1480);
  *(_BYTE *)(a1 + 1488) = *(_BYTE *)(a2 + 1488);
  *(_QWORD *)(a1 + 1480) = v162;
  v163 = *(_QWORD *)(a2 + 1496);
  *(_BYTE *)(a1 + 1504) = *(_BYTE *)(a2 + 1504);
  *(_QWORD *)(a1 + 1496) = v163;
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v164 = *(_QWORD *)(a2 + 1528);
  *(_BYTE *)(a1 + 1536) = *(_BYTE *)(a2 + 1536);
  *(_QWORD *)(a1 + 1528) = v164;
  v165 = *(_QWORD *)(a2 + 1544);
  *(_BYTE *)(a1 + 1552) = *(_BYTE *)(a2 + 1552);
  *(_QWORD *)(a1 + 1544) = v165;
  v166 = (uint64_t *)(a2 + 1560);
  v167 = *(_QWORD *)(a2 + 1568);
  if (*(_QWORD *)(a1 + 1568) >> 60 == 15)
  {
    if (v167 >> 60 != 15)
    {
      v168 = *v166;
      sub_1AD0040A0(*v166, *(_QWORD *)(a2 + 1568));
      *(_QWORD *)(a1 + 1560) = v168;
      *(_QWORD *)(a1 + 1568) = v167;
      goto LABEL_148;
    }
    goto LABEL_146;
  }
  if (v167 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1560);
LABEL_146:
    *(_OWORD *)(a1 + 1560) = *(_OWORD *)v166;
    goto LABEL_148;
  }
  v169 = *v166;
  sub_1AD0040A0(*v166, *(_QWORD *)(a2 + 1568));
  v170 = *(_QWORD *)(a1 + 1560);
  v171 = *(_QWORD *)(a1 + 1568);
  *(_QWORD *)(a1 + 1560) = v169;
  *(_QWORD *)(a1 + 1568) = v167;
  sub_1AD00412C(v170, v171);
LABEL_148:
  v172 = (uint64_t *)(a2 + 1576);
  v173 = *(_QWORD *)(a2 + 1584);
  if (*(_QWORD *)(a1 + 1584) >> 60 == 15)
  {
    if (v173 >> 60 != 15)
    {
      v174 = *v172;
      sub_1AD0040A0(*v172, *(_QWORD *)(a2 + 1584));
      *(_QWORD *)(a1 + 1576) = v174;
      *(_QWORD *)(a1 + 1584) = v173;
      goto LABEL_155;
    }
    goto LABEL_153;
  }
  if (v173 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1576);
LABEL_153:
    *(_OWORD *)(a1 + 1576) = *(_OWORD *)v172;
    goto LABEL_155;
  }
  v175 = *v172;
  sub_1AD0040A0(*v172, *(_QWORD *)(a2 + 1584));
  v176 = *(_QWORD *)(a1 + 1576);
  v177 = *(_QWORD *)(a1 + 1584);
  *(_QWORD *)(a1 + 1576) = v175;
  *(_QWORD *)(a1 + 1584) = v173;
  sub_1AD00412C(v176, v177);
LABEL_155:
  v178 = *(_QWORD *)(a2 + 1592);
  *(_BYTE *)(a1 + 1600) = *(_BYTE *)(a2 + 1600);
  *(_QWORD *)(a1 + 1592) = v178;
  v179 = (uint64_t *)(a2 + 1608);
  v180 = *(_QWORD *)(a2 + 1616);
  if (*(_QWORD *)(a1 + 1616) >> 60 == 15)
  {
    if (v180 >> 60 != 15)
    {
      v181 = *v179;
      sub_1AD0040A0(*v179, *(_QWORD *)(a2 + 1616));
      *(_QWORD *)(a1 + 1608) = v181;
      *(_QWORD *)(a1 + 1616) = v180;
      goto LABEL_162;
    }
    goto LABEL_160;
  }
  if (v180 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1608);
LABEL_160:
    *(_OWORD *)(a1 + 1608) = *(_OWORD *)v179;
    goto LABEL_162;
  }
  v182 = *v179;
  sub_1AD0040A0(*v179, *(_QWORD *)(a2 + 1616));
  v183 = *(_QWORD *)(a1 + 1608);
  v184 = *(_QWORD *)(a1 + 1616);
  *(_QWORD *)(a1 + 1608) = v182;
  *(_QWORD *)(a1 + 1616) = v180;
  sub_1AD00412C(v183, v184);
LABEL_162:
  v185 = (uint64_t *)(a2 + 1624);
  v186 = *(_QWORD *)(a2 + 1632);
  if (*(_QWORD *)(a1 + 1632) >> 60 == 15)
  {
    if (v186 >> 60 != 15)
    {
      v187 = *v185;
      sub_1AD0040A0(*v185, *(_QWORD *)(a2 + 1632));
      *(_QWORD *)(a1 + 1624) = v187;
      *(_QWORD *)(a1 + 1632) = v186;
      goto LABEL_169;
    }
    goto LABEL_167;
  }
  if (v186 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1624);
LABEL_167:
    *(_OWORD *)(a1 + 1624) = *(_OWORD *)v185;
    goto LABEL_169;
  }
  v188 = *v185;
  sub_1AD0040A0(*v185, *(_QWORD *)(a2 + 1632));
  v189 = *(_QWORD *)(a1 + 1624);
  v190 = *(_QWORD *)(a1 + 1632);
  *(_QWORD *)(a1 + 1624) = v188;
  *(_QWORD *)(a1 + 1632) = v186;
  sub_1AD00412C(v189, v190);
LABEL_169:
  v191 = *(_QWORD *)(a2 + 1640);
  *(_BYTE *)(a1 + 1648) = *(_BYTE *)(a2 + 1648);
  *(_QWORD *)(a1 + 1640) = v191;
  v192 = *(_QWORD *)(a2 + 1656);
  *(_BYTE *)(a1 + 1664) = *(_BYTE *)(a2 + 1664);
  *(_QWORD *)(a1 + 1656) = v192;
  *(_QWORD *)(a1 + 1672) = *(_QWORD *)(a2 + 1672);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1680) = *(_QWORD *)(a2 + 1680);
  *(_QWORD *)(a1 + 1688) = *(_QWORD *)(a2 + 1688);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1696) = *(_QWORD *)(a2 + 1696);
  *(_QWORD *)(a1 + 1704) = *(_QWORD *)(a2 + 1704);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v193 = *(_QWORD *)(a2 + 1712);
  *(_BYTE *)(a1 + 1720) = *(_BYTE *)(a2 + 1720);
  *(_QWORD *)(a1 + 1712) = v193;
  *(_BYTE *)(a1 + 1721) = *(_BYTE *)(a2 + 1721);
  *(_BYTE *)(a1 + 1722) = *(_BYTE *)(a2 + 1722);
  v194 = *(_QWORD *)(a2 + 1728);
  *(_BYTE *)(a1 + 1736) = *(_BYTE *)(a2 + 1736);
  *(_QWORD *)(a1 + 1728) = v194;
  v195 = (uint64_t *)(a2 + 1744);
  v196 = *(_QWORD *)(a2 + 1752);
  if (*(_QWORD *)(a1 + 1752) >> 60 == 15)
  {
    if (v196 >> 60 != 15)
    {
      v197 = *v195;
      sub_1AD0040A0(*v195, *(_QWORD *)(a2 + 1752));
      *(_QWORD *)(a1 + 1744) = v197;
      *(_QWORD *)(a1 + 1752) = v196;
      goto LABEL_176;
    }
    goto LABEL_174;
  }
  if (v196 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1744);
LABEL_174:
    *(_OWORD *)(a1 + 1744) = *(_OWORD *)v195;
    goto LABEL_176;
  }
  v198 = *v195;
  sub_1AD0040A0(*v195, *(_QWORD *)(a2 + 1752));
  v199 = *(_QWORD *)(a1 + 1744);
  v200 = *(_QWORD *)(a1 + 1752);
  *(_QWORD *)(a1 + 1744) = v198;
  *(_QWORD *)(a1 + 1752) = v196;
  sub_1AD00412C(v199, v200);
LABEL_176:
  v201 = *(_QWORD *)(a2 + 1760);
  *(_BYTE *)(a1 + 1768) = *(_BYTE *)(a2 + 1768);
  *(_QWORD *)(a1 + 1760) = v201;
  *(_BYTE *)(a1 + 1769) = *(_BYTE *)(a2 + 1769);
  *(_QWORD *)(a1 + 1776) = *(_QWORD *)(a2 + 1776);
  *(_QWORD *)(a1 + 1784) = *(_QWORD *)(a2 + 1784);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v202 = *(_QWORD *)(a2 + 1792);
  *(_BYTE *)(a1 + 1800) = *(_BYTE *)(a2 + 1800);
  *(_QWORD *)(a1 + 1792) = v202;
  v203 = *(_QWORD *)(a2 + 1808);
  *(_BYTE *)(a1 + 1816) = *(_BYTE *)(a2 + 1816);
  *(_QWORD *)(a1 + 1808) = v203;
  v204 = (uint64_t *)(a2 + 1824);
  v205 = *(_QWORD *)(a2 + 1832);
  if (*(_QWORD *)(a1 + 1832) >> 60 == 15)
  {
    if (v205 >> 60 != 15)
    {
      v206 = *v204;
      sub_1AD0040A0(*v204, *(_QWORD *)(a2 + 1832));
      *(_QWORD *)(a1 + 1824) = v206;
      *(_QWORD *)(a1 + 1832) = v205;
      goto LABEL_183;
    }
    goto LABEL_181;
  }
  if (v205 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1824);
LABEL_181:
    *(_OWORD *)(a1 + 1824) = *(_OWORD *)v204;
    goto LABEL_183;
  }
  v207 = *v204;
  sub_1AD0040A0(*v204, *(_QWORD *)(a2 + 1832));
  v208 = *(_QWORD *)(a1 + 1824);
  v209 = *(_QWORD *)(a1 + 1832);
  *(_QWORD *)(a1 + 1824) = v207;
  *(_QWORD *)(a1 + 1832) = v205;
  sub_1AD00412C(v208, v209);
LABEL_183:
  v210 = (uint64_t *)(a2 + 1840);
  v211 = *(_QWORD *)(a2 + 1848);
  if (*(_QWORD *)(a1 + 1848) >> 60 == 15)
  {
    if (v211 >> 60 != 15)
    {
      v212 = *v210;
      sub_1AD0040A0(*v210, *(_QWORD *)(a2 + 1848));
      *(_QWORD *)(a1 + 1840) = v212;
      *(_QWORD *)(a1 + 1848) = v211;
      goto LABEL_190;
    }
    goto LABEL_188;
  }
  if (v211 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1840);
LABEL_188:
    *(_OWORD *)(a1 + 1840) = *(_OWORD *)v210;
    goto LABEL_190;
  }
  v213 = *v210;
  sub_1AD0040A0(*v210, *(_QWORD *)(a2 + 1848));
  v214 = *(_QWORD *)(a1 + 1840);
  v215 = *(_QWORD *)(a1 + 1848);
  *(_QWORD *)(a1 + 1840) = v213;
  *(_QWORD *)(a1 + 1848) = v211;
  sub_1AD00412C(v214, v215);
LABEL_190:
  v216 = *(_QWORD *)(a2 + 1856);
  *(_BYTE *)(a1 + 1864) = *(_BYTE *)(a2 + 1864);
  *(_QWORD *)(a1 + 1856) = v216;
  v217 = (uint64_t *)(a2 + 1872);
  v218 = *(_QWORD *)(a2 + 1880);
  if (*(_QWORD *)(a1 + 1880) >> 60 == 15)
  {
    if (v218 >> 60 != 15)
    {
      v219 = *v217;
      sub_1AD0040A0(*v217, *(_QWORD *)(a2 + 1880));
      *(_QWORD *)(a1 + 1872) = v219;
      *(_QWORD *)(a1 + 1880) = v218;
      goto LABEL_197;
    }
    goto LABEL_195;
  }
  if (v218 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1872);
LABEL_195:
    *(_OWORD *)(a1 + 1872) = *(_OWORD *)v217;
    goto LABEL_197;
  }
  v220 = *v217;
  sub_1AD0040A0(*v217, *(_QWORD *)(a2 + 1880));
  v221 = *(_QWORD *)(a1 + 1872);
  v222 = *(_QWORD *)(a1 + 1880);
  *(_QWORD *)(a1 + 1872) = v220;
  *(_QWORD *)(a1 + 1880) = v218;
  sub_1AD00412C(v221, v222);
LABEL_197:
  v223 = (uint64_t *)(a2 + 1888);
  v224 = *(_QWORD *)(a2 + 1896);
  if (*(_QWORD *)(a1 + 1896) >> 60 == 15)
  {
    if (v224 >> 60 != 15)
    {
      v225 = *v223;
      sub_1AD0040A0(*v223, *(_QWORD *)(a2 + 1896));
      *(_QWORD *)(a1 + 1888) = v225;
      *(_QWORD *)(a1 + 1896) = v224;
      goto LABEL_204;
    }
    goto LABEL_202;
  }
  if (v224 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1888);
LABEL_202:
    *(_OWORD *)(a1 + 1888) = *(_OWORD *)v223;
    goto LABEL_204;
  }
  v226 = *v223;
  sub_1AD0040A0(*v223, *(_QWORD *)(a2 + 1896));
  v227 = *(_QWORD *)(a1 + 1888);
  v228 = *(_QWORD *)(a1 + 1896);
  *(_QWORD *)(a1 + 1888) = v226;
  *(_QWORD *)(a1 + 1896) = v224;
  sub_1AD00412C(v227, v228);
LABEL_204:
  v229 = (uint64_t *)(a2 + 1904);
  v230 = *(_QWORD *)(a2 + 1912);
  if (*(_QWORD *)(a1 + 1912) >> 60 == 15)
  {
    if (v230 >> 60 != 15)
    {
      v231 = *v229;
      sub_1AD0040A0(*v229, *(_QWORD *)(a2 + 1912));
      *(_QWORD *)(a1 + 1904) = v231;
      *(_QWORD *)(a1 + 1912) = v230;
      goto LABEL_211;
    }
    goto LABEL_209;
  }
  if (v230 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1904);
LABEL_209:
    *(_OWORD *)(a1 + 1904) = *(_OWORD *)v229;
    goto LABEL_211;
  }
  v232 = *v229;
  sub_1AD0040A0(*v229, *(_QWORD *)(a2 + 1912));
  v233 = *(_QWORD *)(a1 + 1904);
  v234 = *(_QWORD *)(a1 + 1912);
  *(_QWORD *)(a1 + 1904) = v232;
  *(_QWORD *)(a1 + 1912) = v230;
  sub_1AD00412C(v233, v234);
LABEL_211:
  v235 = *(_QWORD *)(a2 + 1920);
  *(_BYTE *)(a1 + 1928) = *(_BYTE *)(a2 + 1928);
  *(_QWORD *)(a1 + 1920) = v235;
  v236 = (uint64_t *)(a2 + 1936);
  v237 = *(_QWORD *)(a2 + 1944);
  if (*(_QWORD *)(a1 + 1944) >> 60 == 15)
  {
    if (v237 >> 60 != 15)
    {
      v238 = *v236;
      sub_1AD0040A0(*v236, *(_QWORD *)(a2 + 1944));
      *(_QWORD *)(a1 + 1936) = v238;
      *(_QWORD *)(a1 + 1944) = v237;
      goto LABEL_218;
    }
    goto LABEL_216;
  }
  if (v237 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1936);
LABEL_216:
    *(_OWORD *)(a1 + 1936) = *(_OWORD *)v236;
    goto LABEL_218;
  }
  v239 = *v236;
  sub_1AD0040A0(*v236, *(_QWORD *)(a2 + 1944));
  v240 = *(_QWORD *)(a1 + 1936);
  v241 = *(_QWORD *)(a1 + 1944);
  *(_QWORD *)(a1 + 1936) = v239;
  *(_QWORD *)(a1 + 1944) = v237;
  sub_1AD00412C(v240, v241);
LABEL_218:
  v242 = *(_QWORD *)(a2 + 1952);
  *(_BYTE *)(a1 + 1960) = *(_BYTE *)(a2 + 1960);
  *(_QWORD *)(a1 + 1952) = v242;
  v243 = (uint64_t *)(a2 + 1968);
  v244 = *(_QWORD *)(a2 + 1976);
  if (*(_QWORD *)(a1 + 1976) >> 60 == 15)
  {
    if (v244 >> 60 != 15)
    {
      v245 = *v243;
      sub_1AD0040A0(*v243, *(_QWORD *)(a2 + 1976));
      *(_QWORD *)(a1 + 1968) = v245;
      *(_QWORD *)(a1 + 1976) = v244;
      goto LABEL_225;
    }
    goto LABEL_223;
  }
  if (v244 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1968);
LABEL_223:
    *(_OWORD *)(a1 + 1968) = *(_OWORD *)v243;
    goto LABEL_225;
  }
  v246 = *v243;
  sub_1AD0040A0(*v243, *(_QWORD *)(a2 + 1976));
  v247 = *(_QWORD *)(a1 + 1968);
  v248 = *(_QWORD *)(a1 + 1976);
  *(_QWORD *)(a1 + 1968) = v246;
  *(_QWORD *)(a1 + 1976) = v244;
  sub_1AD00412C(v247, v248);
LABEL_225:
  *(_QWORD *)(a1 + 1984) = *(_QWORD *)(a2 + 1984);
  *(_QWORD *)(a1 + 1992) = *(_QWORD *)(a2 + 1992);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v249 = *(_QWORD *)(a2 + 2000);
  *(_BYTE *)(a1 + 2008) = *(_BYTE *)(a2 + 2008);
  *(_QWORD *)(a1 + 2000) = v249;
  v250 = *(_QWORD *)(a2 + 2016);
  *(_BYTE *)(a1 + 2024) = *(_BYTE *)(a2 + 2024);
  *(_QWORD *)(a1 + 2016) = v250;
  v251 = *(_QWORD *)(a2 + 2032);
  *(_BYTE *)(a1 + 2040) = *(_BYTE *)(a2 + 2040);
  *(_QWORD *)(a1 + 2032) = v251;
  v252 = *(_QWORD *)(a2 + 2048);
  *(_BYTE *)(a1 + 2056) = *(_BYTE *)(a2 + 2056);
  *(_QWORD *)(a1 + 2048) = v252;
  *(_QWORD *)(a1 + 2064) = *(_QWORD *)(a2 + 2064);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 2072) = *(_QWORD *)(a2 + 2072);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v253 = (uint64_t *)(a2 + 2080);
  v254 = *(_QWORD *)(a2 + 2088);
  if (*(_QWORD *)(a1 + 2088) >> 60 != 15)
  {
    if (v254 >> 60 != 15)
    {
      v256 = *v253;
      sub_1AD0040A0(*v253, *(_QWORD *)(a2 + 2088));
      v257 = *(_QWORD *)(a1 + 2080);
      v258 = *(_QWORD *)(a1 + 2088);
      *(_QWORD *)(a1 + 2080) = v256;
      *(_QWORD *)(a1 + 2088) = v254;
      sub_1AD00412C(v257, v258);
      goto LABEL_232;
    }
    sub_1AD007EC0(a1 + 2080);
    goto LABEL_230;
  }
  if (v254 >> 60 == 15)
  {
LABEL_230:
    *(_OWORD *)(a1 + 2080) = *(_OWORD *)v253;
    goto LABEL_232;
  }
  v255 = *v253;
  sub_1AD0040A0(*v253, *(_QWORD *)(a2 + 2088));
  *(_QWORD *)(a1 + 2080) = v255;
  *(_QWORD *)(a1 + 2088) = v254;
LABEL_232:
  v259 = *(_QWORD *)(a2 + 2096);
  *(_BYTE *)(a1 + 2104) = *(_BYTE *)(a2 + 2104);
  *(_QWORD *)(a1 + 2096) = v259;
  *(_QWORD *)(a1 + 2112) = *(_QWORD *)(a2 + 2112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v260 = *(_QWORD *)(a2 + 2120);
  *(_BYTE *)(a1 + 2128) = *(_BYTE *)(a2 + 2128);
  *(_QWORD *)(a1 + 2120) = v260;
  v261 = *(_QWORD *)(a2 + 2136);
  *(_BYTE *)(a1 + 2144) = *(_BYTE *)(a2 + 2144);
  *(_QWORD *)(a1 + 2136) = v261;
  *(_BYTE *)(a1 + 2145) = *(_BYTE *)(a2 + 2145);
  *(_BYTE *)(a1 + 2146) = *(_BYTE *)(a2 + 2146);
  *(_QWORD *)(a1 + 2152) = *(_QWORD *)(a2 + 2152);
  *(_QWORD *)(a1 + 2160) = *(_QWORD *)(a2 + 2160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 2168) = *(_BYTE *)(a2 + 2168);
  v262 = *(_QWORD *)(a2 + 2176);
  *(_BYTE *)(a1 + 2184) = *(_BYTE *)(a2 + 2184);
  *(_QWORD *)(a1 + 2176) = v262;
  v263 = *(_QWORD *)(a2 + 2192);
  *(_BYTE *)(a1 + 2200) = *(_BYTE *)(a2 + 2200);
  *(_QWORD *)(a1 + 2192) = v263;
  *(_BYTE *)(a1 + 2201) = *(_BYTE *)(a2 + 2201);
  *(_BYTE *)(a1 + 2202) = *(_BYTE *)(a2 + 2202);
  return a1;
}

void *__swift_memcpy2203_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x89BuLL);
}

uint64_t assignWithTake for APSUserPayload(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _OWORD *v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  _OWORD *v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _OWORD *v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  _OWORD *v34;
  unint64_t v35;
  unint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  _OWORD *v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  unint64_t v56;
  unint64_t v57;
  uint64_t v58;
  _OWORD *v59;
  unint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _OWORD *v63;
  unint64_t v64;
  unint64_t v65;
  uint64_t v66;
  _OWORD *v67;
  unint64_t v68;
  unint64_t v69;
  uint64_t v70;
  _OWORD *v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  uint64_t v75;
  __int128 v76;
  __int128 v77;
  __int128 v78;
  _OWORD *v79;
  unint64_t v80;
  unint64_t v81;
  uint64_t v82;
  _OWORD *v83;
  unint64_t v84;
  unint64_t v85;
  uint64_t v86;
  _OWORD *v87;
  unint64_t v88;
  unint64_t v89;
  uint64_t v90;
  _OWORD *v91;
  unint64_t v92;
  unint64_t v93;
  uint64_t v94;
  _OWORD *v95;
  unint64_t v96;
  unint64_t v97;
  uint64_t v98;
  _OWORD *v99;
  unint64_t v100;
  unint64_t v101;
  uint64_t v102;
  _OWORD *v103;
  unint64_t v104;
  unint64_t v105;
  uint64_t v106;
  _OWORD *v107;
  unint64_t v108;
  unint64_t v109;
  uint64_t v110;
  _OWORD *v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  _OWORD *v115;
  unint64_t v116;
  unint64_t v117;
  uint64_t v118;
  _OWORD *v119;
  unint64_t v120;
  unint64_t v121;
  uint64_t v122;
  _OWORD *v123;
  unint64_t v124;
  unint64_t v125;
  uint64_t v126;
  _OWORD *v127;
  unint64_t v128;
  unint64_t v129;
  uint64_t v130;
  _OWORD *v131;
  unint64_t v132;
  unint64_t v133;
  uint64_t v134;
  _OWORD *v135;
  unint64_t v136;
  unint64_t v137;
  uint64_t v138;
  _OWORD *v139;
  unint64_t v140;
  unint64_t v141;
  uint64_t v142;
  _QWORD *v143;
  unint64_t v144;
  unint64_t v145;
  uint64_t v146;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 56) = *(_BYTE *)(a2 + 56);
  v4 = (_OWORD *)(a2 + 64);
  v5 = *(_QWORD *)(a1 + 72);
  if (v5 >> 60 == 15)
    goto LABEL_4;
  v6 = *(_QWORD *)(a2 + 72);
  if (v6 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 64);
LABEL_4:
    *(_OWORD *)(a1 + 64) = *v4;
    goto LABEL_6;
  }
  v7 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)v4;
  *(_QWORD *)(a1 + 72) = v6;
  sub_1AD00412C(v7, v5);
LABEL_6:
  v8 = (_OWORD *)(a2 + 80);
  v9 = *(_QWORD *)(a1 + 88);
  if (v9 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 80) = *v8;
    goto LABEL_11;
  }
  v10 = *(_QWORD *)(a2 + 88);
  if (v10 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 80);
    goto LABEL_9;
  }
  v11 = *(_QWORD *)(a1 + 80);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)v8;
  *(_QWORD *)(a1 + 88) = v10;
  sub_1AD00412C(v11, v9);
LABEL_11:
  v12 = (_OWORD *)(a2 + 96);
  v13 = *(_QWORD *)(a1 + 104);
  if (v13 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 96) = *v12;
    goto LABEL_16;
  }
  v14 = *(_QWORD *)(a2 + 104);
  if (v14 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 96);
    goto LABEL_14;
  }
  v15 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 96) = *(_QWORD *)v12;
  *(_QWORD *)(a1 + 104) = v14;
  sub_1AD00412C(v15, v13);
LABEL_16:
  v16 = (_OWORD *)(a2 + 112);
  v17 = *(_QWORD *)(a1 + 120);
  if (v17 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)(a1 + 112) = *v16;
    goto LABEL_21;
  }
  v18 = *(_QWORD *)(a2 + 120);
  if (v18 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 112);
    goto LABEL_19;
  }
  v19 = *(_QWORD *)(a1 + 112);
  *(_QWORD *)(a1 + 112) = *(_QWORD *)v16;
  *(_QWORD *)(a1 + 120) = v18;
  sub_1AD00412C(v19, v17);
LABEL_21:
  v20 = (_OWORD *)(a2 + 128);
  v21 = *(_QWORD *)(a1 + 136);
  if (v21 >> 60 == 15)
  {
LABEL_24:
    *(_OWORD *)(a1 + 128) = *v20;
    goto LABEL_26;
  }
  v22 = *(_QWORD *)(a2 + 136);
  if (v22 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 128);
    goto LABEL_24;
  }
  v23 = *(_QWORD *)(a1 + 128);
  *(_QWORD *)(a1 + 128) = *(_QWORD *)v20;
  *(_QWORD *)(a1 + 136) = v22;
  sub_1AD00412C(v23, v21);
LABEL_26:
  v24 = *(_QWORD *)(a2 + 152);
  *(_QWORD *)(a1 + 144) = *(_QWORD *)(a2 + 144);
  *(_QWORD *)(a1 + 152) = v24;
  swift_bridgeObjectRelease();
  v25 = (_OWORD *)(a2 + 160);
  v26 = *(_QWORD *)(a1 + 168);
  if (v26 >> 60 == 15)
  {
LABEL_29:
    *(_OWORD *)(a1 + 160) = *v25;
    goto LABEL_31;
  }
  v27 = *(_QWORD *)(a2 + 168);
  if (v27 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 160);
    goto LABEL_29;
  }
  v28 = *(_QWORD *)(a1 + 160);
  *(_QWORD *)(a1 + 160) = *(_QWORD *)v25;
  *(_QWORD *)(a1 + 168) = v27;
  sub_1AD00412C(v28, v26);
LABEL_31:
  v29 = *(_QWORD *)(a2 + 184);
  *(_QWORD *)(a1 + 176) = *(_QWORD *)(a2 + 176);
  *(_QWORD *)(a1 + 184) = v29;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 192) = *(_BYTE *)(a2 + 192);
  *(_QWORD *)(a1 + 200) = *(_QWORD *)(a2 + 200);
  *(_WORD *)(a1 + 208) = *(_WORD *)(a2 + 208);
  *(_QWORD *)(a1 + 216) = *(_QWORD *)(a2 + 216);
  *(_BYTE *)(a1 + 224) = *(_BYTE *)(a2 + 224);
  v30 = (_OWORD *)(a2 + 232);
  v31 = *(_QWORD *)(a1 + 240);
  if (v31 >> 60 == 15)
  {
LABEL_34:
    *(_OWORD *)(a1 + 232) = *v30;
    goto LABEL_36;
  }
  v32 = *(_QWORD *)(a2 + 240);
  if (v32 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 232);
    goto LABEL_34;
  }
  v33 = *(_QWORD *)(a1 + 232);
  *(_QWORD *)(a1 + 232) = *(_QWORD *)v30;
  *(_QWORD *)(a1 + 240) = v32;
  sub_1AD00412C(v33, v31);
LABEL_36:
  *(_WORD *)(a1 + 248) = *(_WORD *)(a2 + 248);
  v34 = (_OWORD *)(a2 + 256);
  v35 = *(_QWORD *)(a1 + 264);
  if (v35 >> 60 == 15)
  {
LABEL_39:
    *(_OWORD *)(a1 + 256) = *v34;
    goto LABEL_41;
  }
  v36 = *(_QWORD *)(a2 + 264);
  if (v36 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 256);
    goto LABEL_39;
  }
  v37 = *(_QWORD *)(a1 + 256);
  *(_QWORD *)(a1 + 256) = *(_QWORD *)v34;
  *(_QWORD *)(a1 + 264) = v36;
  sub_1AD00412C(v37, v35);
LABEL_41:
  v38 = (_OWORD *)(a2 + 272);
  v39 = *(_QWORD *)(a1 + 280);
  if (v39 >> 60 == 15)
  {
LABEL_44:
    *(_OWORD *)(a1 + 272) = *v38;
    goto LABEL_46;
  }
  v40 = *(_QWORD *)(a2 + 280);
  if (v40 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 272);
    goto LABEL_44;
  }
  v41 = *(_QWORD *)(a1 + 272);
  *(_QWORD *)(a1 + 272) = *(_QWORD *)v38;
  *(_QWORD *)(a1 + 280) = v40;
  sub_1AD00412C(v41, v39);
LABEL_46:
  v42 = *(_QWORD *)(a2 + 296);
  *(_QWORD *)(a1 + 288) = *(_QWORD *)(a2 + 288);
  *(_QWORD *)(a1 + 296) = v42;
  swift_bridgeObjectRelease();
  v43 = *(_QWORD *)(a2 + 312);
  *(_QWORD *)(a1 + 304) = *(_QWORD *)(a2 + 304);
  *(_QWORD *)(a1 + 312) = v43;
  swift_bridgeObjectRelease();
  v44 = *(_QWORD *)(a2 + 328);
  *(_QWORD *)(a1 + 320) = *(_QWORD *)(a2 + 320);
  *(_QWORD *)(a1 + 328) = v44;
  swift_bridgeObjectRelease();
  v45 = (_OWORD *)(a2 + 336);
  v46 = *(_QWORD *)(a1 + 344);
  if (v46 >> 60 == 15)
  {
LABEL_49:
    *(_OWORD *)(a1 + 336) = *v45;
    goto LABEL_51;
  }
  v47 = *(_QWORD *)(a2 + 344);
  if (v47 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 336);
    goto LABEL_49;
  }
  v48 = *(_QWORD *)(a1 + 336);
  *(_QWORD *)(a1 + 336) = *(_QWORD *)v45;
  *(_QWORD *)(a1 + 344) = v47;
  sub_1AD00412C(v48, v46);
LABEL_51:
  *(_QWORD *)(a1 + 352) = *(_QWORD *)(a2 + 352);
  *(_BYTE *)(a1 + 360) = *(_BYTE *)(a2 + 360);
  v49 = *(_QWORD *)(a2 + 376);
  *(_QWORD *)(a1 + 368) = *(_QWORD *)(a2 + 368);
  *(_QWORD *)(a1 + 376) = v49;
  swift_bridgeObjectRelease();
  v50 = *(_QWORD *)(a2 + 392);
  *(_QWORD *)(a1 + 384) = *(_QWORD *)(a2 + 384);
  *(_QWORD *)(a1 + 392) = v50;
  swift_bridgeObjectRelease();
  v51 = *(_QWORD *)(a2 + 408);
  *(_QWORD *)(a1 + 400) = *(_QWORD *)(a2 + 400);
  *(_QWORD *)(a1 + 408) = v51;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 416) = *(_QWORD *)(a2 + 416);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 424) = *(_QWORD *)(a2 + 424);
  swift_bridgeObjectRelease();
  v52 = *(_QWORD *)(a2 + 440);
  *(_QWORD *)(a1 + 432) = *(_QWORD *)(a2 + 432);
  *(_QWORD *)(a1 + 440) = v52;
  swift_bridgeObjectRelease();
  v53 = *(_QWORD *)(a2 + 456);
  *(_QWORD *)(a1 + 448) = *(_QWORD *)(a2 + 448);
  *(_QWORD *)(a1 + 456) = v53;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 464) = *(_QWORD *)(a2 + 464);
  *(_BYTE *)(a1 + 472) = *(_BYTE *)(a2 + 472);
  *(_QWORD *)(a1 + 480) = *(_QWORD *)(a2 + 480);
  *(_BYTE *)(a1 + 488) = *(_BYTE *)(a2 + 488);
  v54 = *(_QWORD *)(a2 + 504);
  *(_QWORD *)(a1 + 496) = *(_QWORD *)(a2 + 496);
  *(_QWORD *)(a1 + 504) = v54;
  swift_bridgeObjectRelease();
  v55 = (_OWORD *)(a2 + 512);
  v56 = *(_QWORD *)(a1 + 520);
  if (v56 >> 60 == 15)
  {
LABEL_54:
    *(_OWORD *)(a1 + 512) = *v55;
    goto LABEL_56;
  }
  v57 = *(_QWORD *)(a2 + 520);
  if (v57 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 512);
    goto LABEL_54;
  }
  v58 = *(_QWORD *)(a1 + 512);
  *(_QWORD *)(a1 + 512) = *(_QWORD *)v55;
  *(_QWORD *)(a1 + 520) = v57;
  sub_1AD00412C(v58, v56);
LABEL_56:
  v59 = (_OWORD *)(a2 + 528);
  v60 = *(_QWORD *)(a1 + 536);
  if (v60 >> 60 == 15)
  {
LABEL_59:
    *(_OWORD *)(a1 + 528) = *v59;
    goto LABEL_61;
  }
  v61 = *(_QWORD *)(a2 + 536);
  if (v61 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 528);
    goto LABEL_59;
  }
  v62 = *(_QWORD *)(a1 + 528);
  *(_QWORD *)(a1 + 528) = *(_QWORD *)v59;
  *(_QWORD *)(a1 + 536) = v61;
  sub_1AD00412C(v62, v60);
LABEL_61:
  *(_QWORD *)(a1 + 544) = *(_QWORD *)(a2 + 544);
  *(_BYTE *)(a1 + 552) = *(_BYTE *)(a2 + 552);
  v63 = (_OWORD *)(a2 + 560);
  v64 = *(_QWORD *)(a1 + 568);
  if (v64 >> 60 == 15)
  {
LABEL_64:
    *(_OWORD *)(a1 + 560) = *v63;
    goto LABEL_66;
  }
  v65 = *(_QWORD *)(a2 + 568);
  if (v65 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 560);
    goto LABEL_64;
  }
  v66 = *(_QWORD *)(a1 + 560);
  *(_QWORD *)(a1 + 560) = *(_QWORD *)v63;
  *(_QWORD *)(a1 + 568) = v65;
  sub_1AD00412C(v66, v64);
LABEL_66:
  *(_QWORD *)(a1 + 576) = *(_QWORD *)(a2 + 576);
  *(_QWORD *)(a1 + 584) = *(_QWORD *)(a2 + 584);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 592) = *(_QWORD *)(a2 + 592);
  *(_QWORD *)(a1 + 600) = *(_QWORD *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 608) = *(_QWORD *)(a2 + 608);
  *(_QWORD *)(a1 + 616) = *(_QWORD *)(a2 + 616);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 624) = *(_QWORD *)(a2 + 624);
  *(_BYTE *)(a1 + 632) = *(_BYTE *)(a2 + 632);
  *(_QWORD *)(a1 + 640) = *(_QWORD *)(a2 + 640);
  *(_BYTE *)(a1 + 648) = *(_BYTE *)(a2 + 648);
  *(_QWORD *)(a1 + 656) = *(_QWORD *)(a2 + 656);
  *(_BYTE *)(a1 + 664) = *(_BYTE *)(a2 + 664);
  *(_BYTE *)(a1 + 680) = *(_BYTE *)(a2 + 680);
  v67 = (_OWORD *)(a2 + 688);
  *(_QWORD *)(a1 + 672) = *(_QWORD *)(a2 + 672);
  v68 = *(_QWORD *)(a1 + 696);
  if (v68 >> 60 == 15)
  {
LABEL_69:
    *(_OWORD *)(a1 + 688) = *v67;
    goto LABEL_71;
  }
  v69 = *(_QWORD *)(a2 + 696);
  if (v69 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 688);
    goto LABEL_69;
  }
  v70 = *(_QWORD *)(a1 + 688);
  *(_QWORD *)(a1 + 688) = *(_QWORD *)v67;
  *(_QWORD *)(a1 + 696) = v69;
  sub_1AD00412C(v70, v68);
LABEL_71:
  *(_QWORD *)(a1 + 704) = *(_QWORD *)(a2 + 704);
  *(_QWORD *)(a1 + 712) = *(_QWORD *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 720) = *(_QWORD *)(a2 + 720);
  *(_BYTE *)(a1 + 728) = *(_BYTE *)(a2 + 728);
  *(_QWORD *)(a1 + 736) = *(_QWORD *)(a2 + 736);
  *(_BYTE *)(a1 + 744) = *(_BYTE *)(a2 + 744);
  *(_QWORD *)(a1 + 752) = *(_QWORD *)(a2 + 752);
  *(_QWORD *)(a1 + 760) = *(_QWORD *)(a2 + 760);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 768) = *(_QWORD *)(a2 + 768);
  *(_BYTE *)(a1 + 776) = *(_BYTE *)(a2 + 776);
  *(_QWORD *)(a1 + 784) = *(_QWORD *)(a2 + 784);
  *(_QWORD *)(a1 + 792) = *(_QWORD *)(a2 + 792);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 800) = *(_QWORD *)(a2 + 800);
  *(_BYTE *)(a1 + 808) = *(_BYTE *)(a2 + 808);
  *(_QWORD *)(a1 + 816) = *(_QWORD *)(a2 + 816);
  *(_BYTE *)(a1 + 824) = *(_BYTE *)(a2 + 824);
  *(_QWORD *)(a1 + 832) = *(_QWORD *)(a2 + 832);
  *(_BYTE *)(a1 + 840) = *(_BYTE *)(a2 + 840);
  *(_QWORD *)(a1 + 848) = *(_QWORD *)(a2 + 848);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 856) = *(_QWORD *)(a2 + 856);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 864) = *(_QWORD *)(a2 + 864);
  *(_BYTE *)(a1 + 872) = *(_BYTE *)(a2 + 872);
  *(_QWORD *)(a1 + 880) = *(_QWORD *)(a2 + 880);
  *(_BYTE *)(a1 + 888) = *(_BYTE *)(a2 + 888);
  *(_QWORD *)(a1 + 896) = *(_QWORD *)(a2 + 896);
  *(_BYTE *)(a1 + 904) = *(_BYTE *)(a2 + 904);
  *(_DWORD *)(a1 + 905) = *(_DWORD *)(a2 + 905);
  *(_QWORD *)(a1 + 912) = *(_QWORD *)(a2 + 912);
  *(_QWORD *)(a1 + 920) = *(_QWORD *)(a2 + 920);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 928) = *(_QWORD *)(a2 + 928);
  *(_QWORD *)(a1 + 936) = *(_QWORD *)(a2 + 936);
  swift_bridgeObjectRelease();
  v71 = (_OWORD *)(a2 + 944);
  v72 = *(_QWORD *)(a1 + 952);
  if (v72 >> 60 == 15)
  {
LABEL_74:
    *(_OWORD *)(a1 + 944) = *v71;
    goto LABEL_76;
  }
  v73 = *(_QWORD *)(a2 + 952);
  if (v73 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 944);
    goto LABEL_74;
  }
  v74 = *(_QWORD *)(a1 + 944);
  *(_QWORD *)(a1 + 944) = *(_QWORD *)v71;
  *(_QWORD *)(a1 + 952) = v73;
  sub_1AD00412C(v74, v72);
LABEL_76:
  *(_QWORD *)(a1 + 960) = *(_QWORD *)(a2 + 960);
  *(_QWORD *)(a1 + 968) = *(_QWORD *)(a2 + 968);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 976) = *(_QWORD *)(a2 + 976);
  *(_QWORD *)(a1 + 984) = *(_QWORD *)(a2 + 984);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 992) = *(_QWORD *)(a2 + 992);
  *(_QWORD *)(a1 + 1000) = *(_QWORD *)(a2 + 1000);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1008) = *(_QWORD *)(a2 + 1008);
  *(_QWORD *)(a1 + 1016) = *(_QWORD *)(a2 + 1016);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1024) = *(_QWORD *)(a2 + 1024);
  *(_QWORD *)(a1 + 1032) = *(_QWORD *)(a2 + 1032);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1040) = *(_QWORD *)(a2 + 1040);
  *(_BYTE *)(a1 + 1048) = *(_BYTE *)(a2 + 1048);
  *(_QWORD *)(a1 + 1056) = *(_QWORD *)(a2 + 1056);
  *(_QWORD *)(a1 + 1064) = *(_QWORD *)(a2 + 1064);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1072) = *(_QWORD *)(a2 + 1072);
  *(_BYTE *)(a1 + 1080) = *(_BYTE *)(a2 + 1080);
  *(_QWORD *)(a1 + 1088) = *(_QWORD *)(a2 + 1088);
  *(_QWORD *)(a1 + 1096) = *(_QWORD *)(a2 + 1096);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1104) = *(_QWORD *)(a2 + 1104);
  *(_WORD *)(a1 + 1112) = *(_WORD *)(a2 + 1112);
  *(_QWORD *)(a1 + 1120) = *(_QWORD *)(a2 + 1120);
  *(_QWORD *)(a1 + 1128) = *(_QWORD *)(a2 + 1128);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1136) = *(_QWORD *)(a2 + 1136);
  *(_BYTE *)(a1 + 1144) = *(_BYTE *)(a2 + 1144);
  *(_QWORD *)(a1 + 1152) = *(_QWORD *)(a2 + 1152);
  *(_BYTE *)(a1 + 1160) = *(_BYTE *)(a2 + 1160);
  *(_QWORD *)(a1 + 1168) = *(_QWORD *)(a2 + 1168);
  *(_QWORD *)(a1 + 1176) = *(_QWORD *)(a2 + 1176);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(a1 + 1192) == 1)
  {
LABEL_79:
    v76 = *(_OWORD *)(a2 + 1232);
    *(_OWORD *)(a1 + 1216) = *(_OWORD *)(a2 + 1216);
    *(_OWORD *)(a1 + 1232) = v76;
    v77 = *(_OWORD *)(a2 + 1264);
    *(_OWORD *)(a1 + 1248) = *(_OWORD *)(a2 + 1248);
    *(_OWORD *)(a1 + 1264) = v77;
    v78 = *(_OWORD *)(a2 + 1200);
    *(_OWORD *)(a1 + 1184) = *(_OWORD *)(a2 + 1184);
    *(_OWORD *)(a1 + 1200) = v78;
    goto LABEL_81;
  }
  v75 = *(_QWORD *)(a2 + 1192);
  if (v75 == 1)
  {
    sub_1AD3F77C0(a1 + 1184);
    goto LABEL_79;
  }
  *(_QWORD *)(a1 + 1184) = *(_QWORD *)(a2 + 1184);
  *(_QWORD *)(a1 + 1192) = v75;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1200) = *(_QWORD *)(a2 + 1200);
  *(_QWORD *)(a1 + 1208) = *(_QWORD *)(a2 + 1208);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1216) = *(_QWORD *)(a2 + 1216);
  *(_QWORD *)(a1 + 1224) = *(_QWORD *)(a2 + 1224);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1232) = *(_QWORD *)(a2 + 1232);
  *(_QWORD *)(a1 + 1240) = *(_QWORD *)(a2 + 1240);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1248) = *(_QWORD *)(a2 + 1248);
  *(_QWORD *)(a1 + 1256) = *(_QWORD *)(a2 + 1256);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1264) = *(_QWORD *)(a2 + 1264);
  *(_QWORD *)(a1 + 1272) = *(_QWORD *)(a2 + 1272);
  swift_bridgeObjectRelease();
LABEL_81:
  v79 = (_OWORD *)(a2 + 1280);
  v80 = *(_QWORD *)(a1 + 1288);
  if (v80 >> 60 == 15)
  {
LABEL_84:
    *(_OWORD *)(a1 + 1280) = *v79;
    goto LABEL_86;
  }
  v81 = *(_QWORD *)(a2 + 1288);
  if (v81 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1280);
    goto LABEL_84;
  }
  v82 = *(_QWORD *)(a1 + 1280);
  *(_QWORD *)(a1 + 1280) = *(_QWORD *)v79;
  *(_QWORD *)(a1 + 1288) = v81;
  sub_1AD00412C(v82, v80);
LABEL_86:
  *(_QWORD *)(a1 + 1296) = *(_QWORD *)(a2 + 1296);
  *(_QWORD *)(a1 + 1304) = *(_QWORD *)(a2 + 1304);
  swift_bridgeObjectRelease();
  v83 = (_OWORD *)(a2 + 1312);
  v84 = *(_QWORD *)(a1 + 1320);
  if (v84 >> 60 == 15)
  {
LABEL_89:
    *(_OWORD *)(a1 + 1312) = *v83;
    goto LABEL_91;
  }
  v85 = *(_QWORD *)(a2 + 1320);
  if (v85 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1312);
    goto LABEL_89;
  }
  v86 = *(_QWORD *)(a1 + 1312);
  *(_QWORD *)(a1 + 1312) = *(_QWORD *)v83;
  *(_QWORD *)(a1 + 1320) = v85;
  sub_1AD00412C(v86, v84);
LABEL_91:
  *(_QWORD *)(a1 + 1328) = *(_QWORD *)(a2 + 1328);
  *(_BYTE *)(a1 + 1336) = *(_BYTE *)(a2 + 1336);
  *(_QWORD *)(a1 + 1344) = *(_QWORD *)(a2 + 1344);
  *(_QWORD *)(a1 + 1352) = *(_QWORD *)(a2 + 1352);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 1360) = *(_BYTE *)(a2 + 1360);
  *(_WORD *)(a1 + 1361) = *(_WORD *)(a2 + 1361);
  *(_QWORD *)(a1 + 1368) = *(_QWORD *)(a2 + 1368);
  *(_BYTE *)(a1 + 1376) = *(_BYTE *)(a2 + 1376);
  *(_QWORD *)(a1 + 1384) = *(_QWORD *)(a2 + 1384);
  *(_QWORD *)(a1 + 1392) = *(_QWORD *)(a2 + 1392);
  swift_bridgeObjectRelease();
  v87 = (_OWORD *)(a2 + 1400);
  v88 = *(_QWORD *)(a1 + 1408);
  if (v88 >> 60 == 15)
  {
LABEL_94:
    *(_OWORD *)(a1 + 1400) = *v87;
    goto LABEL_96;
  }
  v89 = *(_QWORD *)(a2 + 1408);
  if (v89 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1400);
    goto LABEL_94;
  }
  v90 = *(_QWORD *)(a1 + 1400);
  *(_QWORD *)(a1 + 1400) = *(_QWORD *)v87;
  *(_QWORD *)(a1 + 1408) = v89;
  sub_1AD00412C(v90, v88);
LABEL_96:
  v91 = (_OWORD *)(a2 + 1416);
  v92 = *(_QWORD *)(a1 + 1424);
  if (v92 >> 60 == 15)
  {
LABEL_99:
    *(_OWORD *)(a1 + 1416) = *v91;
    goto LABEL_101;
  }
  v93 = *(_QWORD *)(a2 + 1424);
  if (v93 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1416);
    goto LABEL_99;
  }
  v94 = *(_QWORD *)(a1 + 1416);
  *(_QWORD *)(a1 + 1416) = *(_QWORD *)v91;
  *(_QWORD *)(a1 + 1424) = v93;
  sub_1AD00412C(v94, v92);
LABEL_101:
  *(_QWORD *)(a1 + 1432) = *(_QWORD *)(a2 + 1432);
  *(_BYTE *)(a1 + 1440) = *(_BYTE *)(a2 + 1440);
  *(_WORD *)(a1 + 1441) = *(_WORD *)(a2 + 1441);
  *(_QWORD *)(a1 + 1448) = *(_QWORD *)(a2 + 1448);
  *(_BYTE *)(a1 + 1456) = *(_BYTE *)(a2 + 1456);
  *(_QWORD *)(a1 + 1464) = *(_QWORD *)(a2 + 1464);
  *(_WORD *)(a1 + 1472) = *(_WORD *)(a2 + 1472);
  *(_BYTE *)(a1 + 1488) = *(_BYTE *)(a2 + 1488);
  *(_QWORD *)(a1 + 1480) = *(_QWORD *)(a2 + 1480);
  *(_BYTE *)(a1 + 1504) = *(_BYTE *)(a2 + 1504);
  *(_QWORD *)(a1 + 1496) = *(_QWORD *)(a2 + 1496);
  *(_QWORD *)(a1 + 1512) = *(_QWORD *)(a2 + 1512);
  *(_QWORD *)(a1 + 1520) = *(_QWORD *)(a2 + 1520);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1528) = *(_QWORD *)(a2 + 1528);
  *(_BYTE *)(a1 + 1536) = *(_BYTE *)(a2 + 1536);
  *(_QWORD *)(a1 + 1544) = *(_QWORD *)(a2 + 1544);
  *(_BYTE *)(a1 + 1552) = *(_BYTE *)(a2 + 1552);
  v95 = (_OWORD *)(a2 + 1560);
  v96 = *(_QWORD *)(a1 + 1568);
  if (v96 >> 60 == 15)
  {
LABEL_104:
    *(_OWORD *)(a1 + 1560) = *v95;
    goto LABEL_106;
  }
  v97 = *(_QWORD *)(a2 + 1568);
  if (v97 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1560);
    goto LABEL_104;
  }
  v98 = *(_QWORD *)(a1 + 1560);
  *(_QWORD *)(a1 + 1560) = *(_QWORD *)v95;
  *(_QWORD *)(a1 + 1568) = v97;
  sub_1AD00412C(v98, v96);
LABEL_106:
  v99 = (_OWORD *)(a2 + 1576);
  v100 = *(_QWORD *)(a1 + 1584);
  if (v100 >> 60 == 15)
  {
LABEL_109:
    *(_OWORD *)(a1 + 1576) = *v99;
    goto LABEL_111;
  }
  v101 = *(_QWORD *)(a2 + 1584);
  if (v101 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1576);
    goto LABEL_109;
  }
  v102 = *(_QWORD *)(a1 + 1576);
  *(_QWORD *)(a1 + 1576) = *(_QWORD *)v99;
  *(_QWORD *)(a1 + 1584) = v101;
  sub_1AD00412C(v102, v100);
LABEL_111:
  *(_QWORD *)(a1 + 1592) = *(_QWORD *)(a2 + 1592);
  *(_BYTE *)(a1 + 1600) = *(_BYTE *)(a2 + 1600);
  v103 = (_OWORD *)(a2 + 1608);
  v104 = *(_QWORD *)(a1 + 1616);
  if (v104 >> 60 == 15)
  {
LABEL_114:
    *(_OWORD *)(a1 + 1608) = *v103;
    goto LABEL_116;
  }
  v105 = *(_QWORD *)(a2 + 1616);
  if (v105 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1608);
    goto LABEL_114;
  }
  v106 = *(_QWORD *)(a1 + 1608);
  *(_QWORD *)(a1 + 1608) = *(_QWORD *)v103;
  *(_QWORD *)(a1 + 1616) = v105;
  sub_1AD00412C(v106, v104);
LABEL_116:
  v107 = (_OWORD *)(a2 + 1624);
  v108 = *(_QWORD *)(a1 + 1632);
  if (v108 >> 60 == 15)
  {
LABEL_119:
    *(_OWORD *)(a1 + 1624) = *v107;
    goto LABEL_121;
  }
  v109 = *(_QWORD *)(a2 + 1632);
  if (v109 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1624);
    goto LABEL_119;
  }
  v110 = *(_QWORD *)(a1 + 1624);
  *(_QWORD *)(a1 + 1624) = *(_QWORD *)v107;
  *(_QWORD *)(a1 + 1632) = v109;
  sub_1AD00412C(v110, v108);
LABEL_121:
  *(_QWORD *)(a1 + 1640) = *(_QWORD *)(a2 + 1640);
  *(_BYTE *)(a1 + 1648) = *(_BYTE *)(a2 + 1648);
  *(_QWORD *)(a1 + 1656) = *(_QWORD *)(a2 + 1656);
  *(_BYTE *)(a1 + 1664) = *(_BYTE *)(a2 + 1664);
  *(_QWORD *)(a1 + 1672) = *(_QWORD *)(a2 + 1672);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1680) = *(_QWORD *)(a2 + 1680);
  *(_QWORD *)(a1 + 1688) = *(_QWORD *)(a2 + 1688);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1696) = *(_QWORD *)(a2 + 1696);
  *(_QWORD *)(a1 + 1704) = *(_QWORD *)(a2 + 1704);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1712) = *(_QWORD *)(a2 + 1712);
  *(_BYTE *)(a1 + 1720) = *(_BYTE *)(a2 + 1720);
  *(_WORD *)(a1 + 1721) = *(_WORD *)(a2 + 1721);
  *(_QWORD *)(a1 + 1728) = *(_QWORD *)(a2 + 1728);
  *(_BYTE *)(a1 + 1736) = *(_BYTE *)(a2 + 1736);
  v111 = (_OWORD *)(a2 + 1744);
  v112 = *(_QWORD *)(a1 + 1752);
  if (v112 >> 60 == 15)
  {
LABEL_124:
    *(_OWORD *)(a1 + 1744) = *v111;
    goto LABEL_126;
  }
  v113 = *(_QWORD *)(a2 + 1752);
  if (v113 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1744);
    goto LABEL_124;
  }
  v114 = *(_QWORD *)(a1 + 1744);
  *(_QWORD *)(a1 + 1744) = *(_QWORD *)v111;
  *(_QWORD *)(a1 + 1752) = v113;
  sub_1AD00412C(v114, v112);
LABEL_126:
  *(_QWORD *)(a1 + 1760) = *(_QWORD *)(a2 + 1760);
  *(_WORD *)(a1 + 1768) = *(_WORD *)(a2 + 1768);
  *(_QWORD *)(a1 + 1776) = *(_QWORD *)(a2 + 1776);
  *(_QWORD *)(a1 + 1784) = *(_QWORD *)(a2 + 1784);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 1792) = *(_QWORD *)(a2 + 1792);
  *(_BYTE *)(a1 + 1800) = *(_BYTE *)(a2 + 1800);
  *(_QWORD *)(a1 + 1808) = *(_QWORD *)(a2 + 1808);
  *(_BYTE *)(a1 + 1816) = *(_BYTE *)(a2 + 1816);
  v115 = (_OWORD *)(a2 + 1824);
  v116 = *(_QWORD *)(a1 + 1832);
  if (v116 >> 60 == 15)
  {
LABEL_129:
    *(_OWORD *)(a1 + 1824) = *v115;
    goto LABEL_131;
  }
  v117 = *(_QWORD *)(a2 + 1832);
  if (v117 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1824);
    goto LABEL_129;
  }
  v118 = *(_QWORD *)(a1 + 1824);
  *(_QWORD *)(a1 + 1824) = *(_QWORD *)v115;
  *(_QWORD *)(a1 + 1832) = v117;
  sub_1AD00412C(v118, v116);
LABEL_131:
  v119 = (_OWORD *)(a2 + 1840);
  v120 = *(_QWORD *)(a1 + 1848);
  if (v120 >> 60 == 15)
  {
LABEL_134:
    *(_OWORD *)(a1 + 1840) = *v119;
    goto LABEL_136;
  }
  v121 = *(_QWORD *)(a2 + 1848);
  if (v121 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1840);
    goto LABEL_134;
  }
  v122 = *(_QWORD *)(a1 + 1840);
  *(_QWORD *)(a1 + 1840) = *(_QWORD *)v119;
  *(_QWORD *)(a1 + 1848) = v121;
  sub_1AD00412C(v122, v120);
LABEL_136:
  *(_QWORD *)(a1 + 1856) = *(_QWORD *)(a2 + 1856);
  *(_BYTE *)(a1 + 1864) = *(_BYTE *)(a2 + 1864);
  v123 = (_OWORD *)(a2 + 1872);
  v124 = *(_QWORD *)(a1 + 1880);
  if (v124 >> 60 == 15)
  {
LABEL_139:
    *(_OWORD *)(a1 + 1872) = *v123;
    goto LABEL_141;
  }
  v125 = *(_QWORD *)(a2 + 1880);
  if (v125 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1872);
    goto LABEL_139;
  }
  v126 = *(_QWORD *)(a1 + 1872);
  *(_QWORD *)(a1 + 1872) = *(_QWORD *)v123;
  *(_QWORD *)(a1 + 1880) = v125;
  sub_1AD00412C(v126, v124);
LABEL_141:
  v127 = (_OWORD *)(a2 + 1888);
  v128 = *(_QWORD *)(a1 + 1896);
  if (v128 >> 60 == 15)
  {
LABEL_144:
    *(_OWORD *)(a1 + 1888) = *v127;
    goto LABEL_146;
  }
  v129 = *(_QWORD *)(a2 + 1896);
  if (v129 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1888);
    goto LABEL_144;
  }
  v130 = *(_QWORD *)(a1 + 1888);
  *(_QWORD *)(a1 + 1888) = *(_QWORD *)v127;
  *(_QWORD *)(a1 + 1896) = v129;
  sub_1AD00412C(v130, v128);
LABEL_146:
  v131 = (_OWORD *)(a2 + 1904);
  v132 = *(_QWORD *)(a1 + 1912);
  if (v132 >> 60 == 15)
  {
LABEL_149:
    *(_OWORD *)(a1 + 1904) = *v131;
    goto LABEL_151;
  }
  v133 = *(_QWORD *)(a2 + 1912);
  if (v133 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1904);
    goto LABEL_149;
  }
  v134 = *(_QWORD *)(a1 + 1904);
  *(_QWORD *)(a1 + 1904) = *(_QWORD *)v131;
  *(_QWORD *)(a1 + 1912) = v133;
  sub_1AD00412C(v134, v132);
LABEL_151:
  *(_QWORD *)(a1 + 1920) = *(_QWORD *)(a2 + 1920);
  *(_BYTE *)(a1 + 1928) = *(_BYTE *)(a2 + 1928);
  v135 = (_OWORD *)(a2 + 1936);
  v136 = *(_QWORD *)(a1 + 1944);
  if (v136 >> 60 == 15)
  {
LABEL_154:
    *(_OWORD *)(a1 + 1936) = *v135;
    goto LABEL_156;
  }
  v137 = *(_QWORD *)(a2 + 1944);
  if (v137 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1936);
    goto LABEL_154;
  }
  v138 = *(_QWORD *)(a1 + 1936);
  *(_QWORD *)(a1 + 1936) = *(_QWORD *)v135;
  *(_QWORD *)(a1 + 1944) = v137;
  sub_1AD00412C(v138, v136);
LABEL_156:
  *(_QWORD *)(a1 + 1952) = *(_QWORD *)(a2 + 1952);
  *(_BYTE *)(a1 + 1960) = *(_BYTE *)(a2 + 1960);
  v139 = (_OWORD *)(a2 + 1968);
  v140 = *(_QWORD *)(a1 + 1976);
  if (v140 >> 60 == 15)
  {
LABEL_159:
    *(_OWORD *)(a1 + 1968) = *v139;
    goto LABEL_161;
  }
  v141 = *(_QWORD *)(a2 + 1976);
  if (v141 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 1968);
    goto LABEL_159;
  }
  v142 = *(_QWORD *)(a1 + 1968);
  *(_QWORD *)(a1 + 1968) = *(_QWORD *)v139;
  *(_QWORD *)(a1 + 1976) = v141;
  sub_1AD00412C(v142, v140);
LABEL_161:
  *(_QWORD *)(a1 + 1984) = *(_QWORD *)(a2 + 1984);
  *(_QWORD *)(a1 + 1992) = *(_QWORD *)(a2 + 1992);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 2000) = *(_QWORD *)(a2 + 2000);
  *(_BYTE *)(a1 + 2008) = *(_BYTE *)(a2 + 2008);
  *(_QWORD *)(a1 + 2016) = *(_QWORD *)(a2 + 2016);
  *(_BYTE *)(a1 + 2024) = *(_BYTE *)(a2 + 2024);
  *(_QWORD *)(a1 + 2032) = *(_QWORD *)(a2 + 2032);
  *(_BYTE *)(a1 + 2040) = *(_BYTE *)(a2 + 2040);
  *(_BYTE *)(a1 + 2056) = *(_BYTE *)(a2 + 2056);
  *(_QWORD *)(a1 + 2048) = *(_QWORD *)(a2 + 2048);
  *(_QWORD *)(a1 + 2064) = *(_QWORD *)(a2 + 2064);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 2072) = *(_QWORD *)(a2 + 2072);
  swift_bridgeObjectRelease();
  v143 = (_QWORD *)(a2 + 2080);
  v144 = *(_QWORD *)(a1 + 2088);
  if (v144 >> 60 != 15)
  {
    v145 = *(_QWORD *)(a2 + 2088);
    if (v145 >> 60 != 15)
    {
      v146 = *(_QWORD *)(a1 + 2080);
      *(_QWORD *)(a1 + 2080) = *v143;
      *(_QWORD *)(a1 + 2088) = v145;
      sub_1AD00412C(v146, v144);
      goto LABEL_166;
    }
    sub_1AD007EC0(a1 + 2080);
  }
  *(_OWORD *)(a1 + 2080) = *(_OWORD *)v143;
LABEL_166:
  *(_QWORD *)(a1 + 2096) = *(_QWORD *)(a2 + 2096);
  *(_BYTE *)(a1 + 2104) = *(_BYTE *)(a2 + 2104);
  *(_QWORD *)(a1 + 2112) = *(_QWORD *)(a2 + 2112);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 2120) = *(_QWORD *)(a2 + 2120);
  *(_BYTE *)(a1 + 2128) = *(_BYTE *)(a2 + 2128);
  *(_QWORD *)(a1 + 2136) = *(_QWORD *)(a2 + 2136);
  *(_BYTE *)(a1 + 2144) = *(_BYTE *)(a2 + 2144);
  *(_WORD *)(a1 + 2145) = *(_WORD *)(a2 + 2145);
  *(_QWORD *)(a1 + 2152) = *(_QWORD *)(a2 + 2152);
  *(_QWORD *)(a1 + 2160) = *(_QWORD *)(a2 + 2160);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 2168) = *(_BYTE *)(a2 + 2168);
  *(_QWORD *)(a1 + 2176) = *(_QWORD *)(a2 + 2176);
  *(_BYTE *)(a1 + 2184) = *(_BYTE *)(a2 + 2184);
  *(_QWORD *)(a1 + 2192) = *(_QWORD *)(a2 + 2192);
  *(_BYTE *)(a1 + 2200) = *(_BYTE *)(a2 + 2200);
  *(_WORD *)(a1 + 2201) = *(_WORD *)(a2 + 2201);
  return a1;
}

uint64_t getEnumTagSinglePayload for APSUserPayload(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 2203))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for APSUserPayload(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 2202) = 0;
    *(_WORD *)(result + 2200) = 0;
    *(_OWORD *)(result + 2184) = 0u;
    *(_OWORD *)(result + 2168) = 0u;
    *(_OWORD *)(result + 2152) = 0u;
    *(_OWORD *)(result + 2136) = 0u;
    *(_OWORD *)(result + 2120) = 0u;
    *(_OWORD *)(result + 2104) = 0u;
    *(_OWORD *)(result + 2088) = 0u;
    *(_OWORD *)(result + 2072) = 0u;
    *(_OWORD *)(result + 2056) = 0u;
    *(_OWORD *)(result + 2040) = 0u;
    *(_OWORD *)(result + 2024) = 0u;
    *(_OWORD *)(result + 2008) = 0u;
    *(_OWORD *)(result + 1992) = 0u;
    *(_OWORD *)(result + 1976) = 0u;
    *(_OWORD *)(result + 1960) = 0u;
    *(_OWORD *)(result + 1944) = 0u;
    *(_OWORD *)(result + 1928) = 0u;
    *(_OWORD *)(result + 1912) = 0u;
    *(_OWORD *)(result + 1896) = 0u;
    *(_OWORD *)(result + 1880) = 0u;
    *(_OWORD *)(result + 1864) = 0u;
    *(_OWORD *)(result + 1848) = 0u;
    *(_OWORD *)(result + 1832) = 0u;
    *(_OWORD *)(result + 1816) = 0u;
    *(_OWORD *)(result + 1800) = 0u;
    *(_OWORD *)(result + 1784) = 0u;
    *(_OWORD *)(result + 1768) = 0u;
    *(_OWORD *)(result + 1752) = 0u;
    *(_OWORD *)(result + 1736) = 0u;
    *(_OWORD *)(result + 1720) = 0u;
    *(_OWORD *)(result + 1704) = 0u;
    *(_OWORD *)(result + 1688) = 0u;
    *(_OWORD *)(result + 1672) = 0u;
    *(_OWORD *)(result + 1656) = 0u;
    *(_OWORD *)(result + 1640) = 0u;
    *(_OWORD *)(result + 1624) = 0u;
    *(_OWORD *)(result + 1608) = 0u;
    *(_OWORD *)(result + 1592) = 0u;
    *(_OWORD *)(result + 1576) = 0u;
    *(_OWORD *)(result + 1560) = 0u;
    *(_OWORD *)(result + 1544) = 0u;
    *(_OWORD *)(result + 1528) = 0u;
    *(_OWORD *)(result + 1512) = 0u;
    *(_OWORD *)(result + 1496) = 0u;
    *(_OWORD *)(result + 1480) = 0u;
    *(_OWORD *)(result + 1464) = 0u;
    *(_OWORD *)(result + 1448) = 0u;
    *(_OWORD *)(result + 1432) = 0u;
    *(_OWORD *)(result + 1416) = 0u;
    *(_OWORD *)(result + 1400) = 0u;
    *(_OWORD *)(result + 1384) = 0u;
    *(_OWORD *)(result + 1368) = 0u;
    *(_OWORD *)(result + 1352) = 0u;
    *(_OWORD *)(result + 1336) = 0u;
    *(_OWORD *)(result + 1320) = 0u;
    *(_OWORD *)(result + 1304) = 0u;
    *(_OWORD *)(result + 1288) = 0u;
    *(_OWORD *)(result + 1272) = 0u;
    *(_OWORD *)(result + 1256) = 0u;
    *(_OWORD *)(result + 1240) = 0u;
    *(_OWORD *)(result + 1224) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 2203) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 2203) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for APSUserPayload()
{
  return &type metadata for APSUserPayload;
}

_QWORD *initializeWithCopy for APSUserPayloadHttpHeaders(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for APSUserPayloadHttpHeaders(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  a1[9] = a2[9];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for APSUserPayloadHttpHeaders(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  v8 = a2[9];
  a1[8] = a2[8];
  a1[9] = v8;
  swift_bridgeObjectRelease();
  v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for APSUserPayloadHttpHeaders(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 96))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for APSUserPayloadHttpHeaders(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 96) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for APSUserPayloadHttpHeaders()
{
  return &type metadata for APSUserPayloadHttpHeaders;
}

uint64_t storeEnumTagSinglePayload for APSUserPayloadDeliveryContext(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = (a2 - 1);
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

ValueMetadata *type metadata accessor for APSUserPayloadDeliveryContext()
{
  return &type metadata for APSUserPayloadDeliveryContext;
}

uint64_t initializeWithCopy for APSQuickRelayPluginRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v3;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for APSQuickRelayPluginRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v4;
  *(_BYTE *)(a1 + 41) = *(_BYTE *)(a2 + 41);
  return a1;
}

uint64_t assignWithTake for APSQuickRelayPluginRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  return a1;
}

uint64_t getEnumTagSinglePayload for APSQuickRelayPluginRequest(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 42))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for APSQuickRelayPluginRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 42) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for APSQuickRelayPluginRequest()
{
  return &type metadata for APSQuickRelayPluginRequest;
}

uint64_t destroy for APSQuickRelayAllocationStatus(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 40);
  if (v1 >> 60 != 15)
    sub_1AD00412C(*(_QWORD *)(a1 + 32), v1);
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for APSQuickRelayAllocationStatus(uint64_t a1, uint64_t a2)
{
  uint64_t *v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = (uint64_t *)(a2 + 32);
  v5 = *(_QWORD *)(a2 + 40);
  if (v5 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v4;
  }
  else
  {
    v6 = *v4;
    sub_1AD0040A0(*v4, *(_QWORD *)(a2 + 40));
    *(_QWORD *)(a1 + 32) = v6;
    *(_QWORD *)(a1 + 40) = v5;
  }
  v7 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v7;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for APSQuickRelayAllocationStatus(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  uint64_t *v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = (_OWORD *)(a1 + 32);
  v7 = a2 + 4;
  v8 = a2[5];
  if (*(_QWORD *)(a1 + 40) >> 60 != 15)
  {
    if (v8 >> 60 != 15)
    {
      v10 = *v7;
      sub_1AD0040A0(*v7, a2[5]);
      v11 = *(_QWORD *)(a1 + 32);
      v12 = *(_QWORD *)(a1 + 40);
      *(_QWORD *)(a1 + 32) = v10;
      *(_QWORD *)(a1 + 40) = v8;
      sub_1AD00412C(v11, v12);
      goto LABEL_8;
    }
    sub_1AD007EC0(a1 + 32);
    goto LABEL_6;
  }
  if (v8 >> 60 == 15)
  {
LABEL_6:
    *v6 = *(_OWORD *)v7;
    goto LABEL_8;
  }
  v9 = *v7;
  sub_1AD0040A0(*v7, a2[5]);
  *(_QWORD *)(a1 + 32) = v9;
  *(_QWORD *)(a1 + 40) = v8;
LABEL_8:
  *(_QWORD *)(a1 + 48) = a2[6];
  *(_QWORD *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for APSQuickRelayAllocationStatus(uint64_t a1, uint64_t a2)
{
  _OWORD *v4;
  _QWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = (_OWORD *)(a1 + 32);
  v5 = (_QWORD *)(a2 + 32);
  v6 = *(_QWORD *)(a1 + 40);
  if (v6 >> 60 != 15)
  {
    v7 = *(_QWORD *)(a2 + 40);
    if (v7 >> 60 != 15)
    {
      v8 = *(_QWORD *)(a1 + 32);
      *(_QWORD *)(a1 + 32) = *v5;
      *(_QWORD *)(a1 + 40) = v7;
      sub_1AD00412C(v8, v6);
      goto LABEL_6;
    }
    sub_1AD007EC0(a1 + 32);
  }
  *v4 = *(_OWORD *)v5;
LABEL_6:
  v9 = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = v9;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for APSQuickRelayAllocationStatus(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *(_BYTE *)(a1 + 64))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *(_QWORD *)(a1 + 56);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for APSQuickRelayAllocationStatus(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 64) = 0;
    if (a2)
      *(_QWORD *)(result + 56) = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for APSQuickRelayAllocationStatus()
{
  return &type metadata for APSQuickRelayAllocationStatus;
}

uint64_t *destroy for APSQuickRelaySelfAllocToken(uint64_t *result)
{
  uint64_t *v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v1 = result;
  v2 = result[1];
  if (v2 >> 60 != 15)
    result = (uint64_t *)sub_1AD00412C(*result, v2);
  v3 = v1[3];
  if (v3 >> 60 != 15)
    result = (uint64_t *)sub_1AD00412C(v1[2], v3);
  v4 = v1[7];
  if (v4 >> 60 != 15)
    result = (uint64_t *)sub_1AD00412C(v1[6], v4);
  v5 = v1[9];
  if (v5 >> 60 != 15)
    result = (uint64_t *)sub_1AD00412C(v1[8], v5);
  v6 = v1[11];
  if (v6 >> 60 != 15)
    return (uint64_t *)sub_1AD00412C(v1[10], v6);
  return result;
}

uint64_t initializeWithCopy for APSQuickRelaySelfAllocToken(uint64_t a1, uint64_t *a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  unint64_t v16;
  uint64_t v17;

  v4 = a2[1];
  if (v4 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    v5 = *a2;
    sub_1AD0040A0(*a2, a2[1]);
    *(_QWORD *)a1 = v5;
    *(_QWORD *)(a1 + 8) = v4;
  }
  v6 = a2 + 2;
  v7 = a2[3];
  if (v7 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v6;
  }
  else
  {
    v8 = *v6;
    sub_1AD0040A0(*v6, a2[3]);
    *(_QWORD *)(a1 + 16) = v8;
    *(_QWORD *)(a1 + 24) = v7;
  }
  *(_QWORD *)(a1 + 32) = a2[4];
  *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
  v9 = a2 + 6;
  v10 = a2[7];
  if (v10 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v9;
  }
  else
  {
    v11 = *v9;
    sub_1AD0040A0(*v9, a2[7]);
    *(_QWORD *)(a1 + 48) = v11;
    *(_QWORD *)(a1 + 56) = v10;
  }
  v12 = a2 + 8;
  v13 = a2[9];
  if (v13 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v12;
  }
  else
  {
    v14 = *v12;
    sub_1AD0040A0(*v12, a2[9]);
    *(_QWORD *)(a1 + 64) = v14;
    *(_QWORD *)(a1 + 72) = v13;
  }
  v15 = a2 + 10;
  v16 = a2[11];
  if (v16 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v15;
  }
  else
  {
    v17 = *v15;
    sub_1AD0040A0(*v15, a2[11]);
    *(_QWORD *)(a1 + 80) = v17;
    *(_QWORD *)(a1 + 88) = v16;
  }
  *(_QWORD *)(a1 + 96) = a2[12];
  *(_BYTE *)(a1 + 104) = *((_BYTE *)a2 + 104);
  return a1;
}

uint64_t assignWithCopy for APSQuickRelaySelfAllocToken(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t *v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v4 = *(_QWORD *)(a2 + 8);
  if (*(_QWORD *)(a1 + 8) >> 60 == 15)
  {
    if (v4 >> 60 != 15)
    {
      v5 = *(_QWORD *)a2;
      sub_1AD0040A0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
      *(_QWORD *)a1 = v5;
      *(_QWORD *)(a1 + 8) = v4;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
    sub_1AD007EC0(a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  v6 = *(_QWORD *)a2;
  sub_1AD0040A0(*(_QWORD *)a2, *(_QWORD *)(a2 + 8));
  v7 = *(_QWORD *)a1;
  v8 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v4;
  sub_1AD00412C(v7, v8);
LABEL_8:
  v9 = (uint64_t *)(a2 + 16);
  v10 = *(_QWORD *)(a2 + 24);
  if (*(_QWORD *)(a1 + 24) >> 60 == 15)
  {
    if (v10 >> 60 != 15)
    {
      v11 = *v9;
      sub_1AD0040A0(*v9, *(_QWORD *)(a2 + 24));
      *(_QWORD *)(a1 + 16) = v11;
      *(_QWORD *)(a1 + 24) = v10;
      goto LABEL_15;
    }
    goto LABEL_13;
  }
  if (v10 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 16);
LABEL_13:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)v9;
    goto LABEL_15;
  }
  v12 = *v9;
  sub_1AD0040A0(*v9, *(_QWORD *)(a2 + 24));
  v13 = *(_QWORD *)(a1 + 16);
  v14 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a1 + 16) = v12;
  *(_QWORD *)(a1 + 24) = v10;
  sub_1AD00412C(v13, v14);
LABEL_15:
  v15 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v15;
  v16 = (uint64_t *)(a2 + 48);
  v17 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56) >> 60 == 15)
  {
    if (v17 >> 60 != 15)
    {
      v18 = *v16;
      sub_1AD0040A0(*v16, *(_QWORD *)(a2 + 56));
      *(_QWORD *)(a1 + 48) = v18;
      *(_QWORD *)(a1 + 56) = v17;
      goto LABEL_22;
    }
    goto LABEL_20;
  }
  if (v17 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 48);
LABEL_20:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v16;
    goto LABEL_22;
  }
  v19 = *v16;
  sub_1AD0040A0(*v16, *(_QWORD *)(a2 + 56));
  v20 = *(_QWORD *)(a1 + 48);
  v21 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v19;
  *(_QWORD *)(a1 + 56) = v17;
  sub_1AD00412C(v20, v21);
LABEL_22:
  v22 = (uint64_t *)(a2 + 64);
  v23 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) >> 60 == 15)
  {
    if (v23 >> 60 != 15)
    {
      v24 = *v22;
      sub_1AD0040A0(*v22, *(_QWORD *)(a2 + 72));
      *(_QWORD *)(a1 + 64) = v24;
      *(_QWORD *)(a1 + 72) = v23;
      goto LABEL_29;
    }
    goto LABEL_27;
  }
  if (v23 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 64);
LABEL_27:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v22;
    goto LABEL_29;
  }
  v25 = *v22;
  sub_1AD0040A0(*v22, *(_QWORD *)(a2 + 72));
  v26 = *(_QWORD *)(a1 + 64);
  v27 = *(_QWORD *)(a1 + 72);
  *(_QWORD *)(a1 + 64) = v25;
  *(_QWORD *)(a1 + 72) = v23;
  sub_1AD00412C(v26, v27);
LABEL_29:
  v28 = (uint64_t *)(a2 + 80);
  v29 = *(_QWORD *)(a2 + 88);
  if (*(_QWORD *)(a1 + 88) >> 60 != 15)
  {
    if (v29 >> 60 != 15)
    {
      v31 = *v28;
      sub_1AD0040A0(*v28, *(_QWORD *)(a2 + 88));
      v32 = *(_QWORD *)(a1 + 80);
      v33 = *(_QWORD *)(a1 + 88);
      *(_QWORD *)(a1 + 80) = v31;
      *(_QWORD *)(a1 + 88) = v29;
      sub_1AD00412C(v32, v33);
      goto LABEL_36;
    }
    sub_1AD007EC0(a1 + 80);
    goto LABEL_34;
  }
  if (v29 >> 60 == 15)
  {
LABEL_34:
    *(_OWORD *)(a1 + 80) = *(_OWORD *)v28;
    goto LABEL_36;
  }
  v30 = *v28;
  sub_1AD0040A0(*v28, *(_QWORD *)(a2 + 88));
  *(_QWORD *)(a1 + 80) = v30;
  *(_QWORD *)(a1 + 88) = v29;
LABEL_36:
  v34 = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  *(_QWORD *)(a1 + 96) = v34;
  return a1;
}

uint64_t assignWithTake for APSQuickRelaySelfAllocToken(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  _OWORD *v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _OWORD *v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _OWORD *v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a1 + 8);
  if (v4 >> 60 == 15)
    goto LABEL_4;
  v5 = *(_QWORD *)(a2 + 8);
  if (v5 >> 60 == 15)
  {
    sub_1AD007EC0(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  v6 = *(_QWORD *)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v5;
  sub_1AD00412C(v6, v4);
LABEL_6:
  v7 = (_OWORD *)(a2 + 16);
  v8 = *(_QWORD *)(a1 + 24);
  if (v8 >> 60 == 15)
  {
LABEL_9:
    *(_OWORD *)(a1 + 16) = *v7;
    goto LABEL_11;
  }
  v9 = *(_QWORD *)(a2 + 24);
  if (v9 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 16);
    goto LABEL_9;
  }
  v10 = *(_QWORD *)(a1 + 16);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)v7;
  *(_QWORD *)(a1 + 24) = v9;
  sub_1AD00412C(v10, v8);
LABEL_11:
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v11 = (_OWORD *)(a2 + 48);
  v12 = *(_QWORD *)(a1 + 56);
  if (v12 >> 60 == 15)
  {
LABEL_14:
    *(_OWORD *)(a1 + 48) = *v11;
    goto LABEL_16;
  }
  v13 = *(_QWORD *)(a2 + 56);
  if (v13 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 48);
    goto LABEL_14;
  }
  v14 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)v11;
  *(_QWORD *)(a1 + 56) = v13;
  sub_1AD00412C(v14, v12);
LABEL_16:
  v15 = (_OWORD *)(a2 + 64);
  v16 = *(_QWORD *)(a1 + 72);
  if (v16 >> 60 == 15)
  {
LABEL_19:
    *(_OWORD *)(a1 + 64) = *v15;
    goto LABEL_21;
  }
  v17 = *(_QWORD *)(a2 + 72);
  if (v17 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 64);
    goto LABEL_19;
  }
  v18 = *(_QWORD *)(a1 + 64);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)v15;
  *(_QWORD *)(a1 + 72) = v17;
  sub_1AD00412C(v18, v16);
LABEL_21:
  v19 = (_QWORD *)(a2 + 80);
  v20 = *(_QWORD *)(a1 + 88);
  if (v20 >> 60 != 15)
  {
    v21 = *(_QWORD *)(a2 + 88);
    if (v21 >> 60 != 15)
    {
      v22 = *(_QWORD *)(a1 + 80);
      *(_QWORD *)(a1 + 80) = *v19;
      *(_QWORD *)(a1 + 88) = v21;
      sub_1AD00412C(v22, v20);
      goto LABEL_26;
    }
    sub_1AD007EC0(a1 + 80);
  }
  *(_OWORD *)(a1 + 80) = *(_OWORD *)v19;
LABEL_26:
  *(_QWORD *)(a1 + 96) = *(_QWORD *)(a2 + 96);
  *(_BYTE *)(a1 + 104) = *(_BYTE *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for APSQuickRelaySelfAllocToken(uint64_t a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xC && *(_BYTE *)(a1 + 105))
    return (*(_DWORD *)a1 + 12);
  v3 = *(_QWORD *)(a1 + 8) >> 60;
  if (((4 * (_DWORD)v3) & 0xC) != 0)
    v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  else
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for APSQuickRelaySelfAllocToken(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_BYTE *)(result + 104) = 0;
    *(_QWORD *)result = a2 - 12;
    if (a3 >= 0xC)
      *(_BYTE *)(result + 105) = 1;
  }
  else
  {
    if (a3 >= 0xC)
      *(_BYTE *)(result + 105) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for APSQuickRelaySelfAllocToken()
{
  return &type metadata for APSQuickRelaySelfAllocToken;
}

uint64_t destroy for APSQuickRelayPluginAllocation(uint64_t *a1)
{
  uint64_t result;
  unint64_t v3;
  unint64_t v4;

  result = swift_bridgeObjectRelease();
  v3 = a1[7];
  if (v3 >> 60 != 15)
    result = sub_1AD00412C(a1[6], v3);
  v4 = a1[9];
  if (v4 >> 60 != 15)
    return sub_1AD00412C(a1[8], v4);
  return result;
}

uint64_t initializeWithCopy for APSQuickRelayPluginAllocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = (_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a2 + 56);
  swift_bridgeObjectRetain();
  if (v6 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 48) = *v5;
  }
  else
  {
    v7 = *(_QWORD *)v5;
    sub_1AD0040A0(v7, v6);
    *(_QWORD *)(a1 + 48) = v7;
    *(_QWORD *)(a1 + 56) = v6;
  }
  v8 = (uint64_t *)(a2 + 64);
  v9 = *(_QWORD *)(a2 + 72);
  if (v9 >> 60 == 15)
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v8;
  }
  else
  {
    v10 = *v8;
    sub_1AD0040A0(*v8, v9);
    *(_QWORD *)(a1 + 64) = v10;
    *(_QWORD *)(a1 + 72) = v9;
  }
  return a1;
}

uint64_t assignWithCopy for APSQuickRelayPluginAllocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = (uint64_t *)(a2 + 48);
  v7 = *(_QWORD *)(a2 + 56);
  if (*(_QWORD *)(a1 + 56) >> 60 == 15)
  {
    if (v7 >> 60 != 15)
    {
      v8 = *v6;
      sub_1AD0040A0(*v6, *(_QWORD *)(a2 + 56));
      *(_QWORD *)(a1 + 48) = v8;
      *(_QWORD *)(a1 + 56) = v7;
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v7 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 48);
LABEL_6:
    *(_OWORD *)(a1 + 48) = *(_OWORD *)v6;
    goto LABEL_8;
  }
  v9 = *v6;
  sub_1AD0040A0(*v6, *(_QWORD *)(a2 + 56));
  v10 = *(_QWORD *)(a1 + 48);
  v11 = *(_QWORD *)(a1 + 56);
  *(_QWORD *)(a1 + 48) = v9;
  *(_QWORD *)(a1 + 56) = v7;
  sub_1AD00412C(v10, v11);
LABEL_8:
  v12 = (uint64_t *)(a2 + 64);
  v13 = *(_QWORD *)(a2 + 72);
  if (*(_QWORD *)(a1 + 72) >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      v15 = *v12;
      sub_1AD0040A0(*v12, v13);
      v16 = *(_QWORD *)(a1 + 64);
      v17 = *(_QWORD *)(a1 + 72);
      *(_QWORD *)(a1 + 64) = v15;
      *(_QWORD *)(a1 + 72) = v13;
      sub_1AD00412C(v16, v17);
      return a1;
    }
    sub_1AD007EC0(a1 + 64);
    goto LABEL_13;
  }
  if (v13 >> 60 == 15)
  {
LABEL_13:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)v12;
    return a1;
  }
  v14 = *v12;
  sub_1AD0040A0(*v12, v13);
  *(_QWORD *)(a1 + 64) = v14;
  *(_QWORD *)(a1 + 72) = v13;
  return a1;
}

uint64_t assignWithTake for APSQuickRelayPluginAllocation(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _OWORD *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = (_OWORD *)(a2 + 48);
  v6 = *(_QWORD *)(a1 + 56);
  if (v6 >> 60 == 15)
    goto LABEL_4;
  v7 = *(_QWORD *)(a2 + 56);
  if (v7 >> 60 == 15)
  {
    sub_1AD007EC0(a1 + 48);
LABEL_4:
    *(_OWORD *)(a1 + 48) = *v5;
    goto LABEL_6;
  }
  v8 = *(_QWORD *)(a1 + 48);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)v5;
  *(_QWORD *)(a1 + 56) = v7;
  sub_1AD00412C(v8, v6);
LABEL_6:
  v9 = (_QWORD *)(a2 + 64);
  v10 = *(_QWORD *)(a1 + 72);
  if (v10 >> 60 != 15)
  {
    v11 = *(_QWORD *)(a2 + 72);
    if (v11 >> 60 != 15)
    {
      v12 = *(_QWORD *)(a1 + 64);
      *(_QWORD *)(a1 + 64) = *v9;
      *(_QWORD *)(a1 + 72) = v11;
      sub_1AD00412C(v12, v10);
      return a1;
    }
    sub_1AD007EC0(a1 + 64);
  }
  *(_OWORD *)(a1 + 64) = *(_OWORD *)v9;
  return a1;
}

ValueMetadata *type metadata accessor for APSQuickRelayPluginAllocation()
{
  return &type metadata for APSQuickRelayPluginAllocation;
}

__n128 sub_1AD613948@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, __int128 a10, __int128 a11, __int128 a12, __int128 a13, __int128 a14, __int128 a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,__int16 a23,__int128 a24,__int128 a25,__int128 a26,__int128 a27,__int128 a28,__int128 a29,uint64_t a30,char a31,__int128 a32,__int128 a33,__int128 a34,__int128 a35,__int128 a36,__int128 a37,uint64_t a38,char a39,uint64_t a40,char a41,__int128 a42,__int128 a43,__int128 a44,uint64_t a45,char a46,__int128 a47,__int128 a48,__int128 a49)
{
  _OWORD *v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  __int128 v53;
  __int128 v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  __int128 v58;
  __int128 v59;
  __int128 v60;
  __n128 result;
  __int16 v62;

  v49 = (_OWORD *)STACK[0x450];
  *(_OWORD *)a9 = *(_OWORD *)a1;
  *(_OWORD *)(a9 + 88) = a10;
  *(_OWORD *)(a9 + 104) = a11;
  *(_OWORD *)(a9 + 120) = a12;
  *(_OWORD *)(a9 + 136) = a13;
  *(_OWORD *)(a9 + 152) = a14;
  *(_OWORD *)(a9 + 168) = a15;
  *(_OWORD *)(a9 + 256) = a24;
  *(_OWORD *)(a9 + 272) = a25;
  *(_OWORD *)(a9 + 288) = a26;
  *(_OWORD *)(a9 + 304) = a27;
  *(_OWORD *)(a9 + 320) = a28;
  *(_OWORD *)(a9 + 336) = a29;
  *(_OWORD *)(a9 + 368) = a32;
  *(_OWORD *)(a9 + 384) = a33;
  *(_OWORD *)(a9 + 400) = a34;
  *(_OWORD *)(a9 + 416) = a35;
  *(_OWORD *)(a9 + 432) = a36;
  *(_OWORD *)(a9 + 448) = a37;
  *(_OWORD *)(a9 + 496) = a42;
  *(_OWORD *)(a9 + 512) = a43;
  *(_OWORD *)(a9 + 528) = a44;
  *(_OWORD *)(a9 + 560) = a47;
  *(_OWORD *)(a9 + 576) = a48;
  v50 = *(_OWORD *)&STACK[0x210];
  *(_OWORD *)(a9 + 592) = a49;
  *(_OWORD *)(a9 + 608) = v50;
  v51 = *(_OWORD *)&STACK[0x270];
  *(_OWORD *)(a9 + 688) = *(_OWORD *)&STACK[0x260];
  v52 = *(_OWORD *)&STACK[0x300];
  *(_OWORD *)(a9 + 704) = v51;
  *(_OWORD *)(a9 + 752) = *(_OWORD *)&STACK[0x2A0];
  *(_OWORD *)(a9 + 784) = *(_OWORD *)&STACK[0x2C0];
  *(_OWORD *)(a9 + 848) = v52;
  v53 = *(_OWORD *)&STACK[0x350];
  *(_OWORD *)(a9 + 912) = *(_OWORD *)&STACK[0x340];
  *(_OWORD *)(a9 + 928) = v53;
  v54 = *(_OWORD *)&STACK[0x370];
  *(_OWORD *)(a9 + 944) = *(_OWORD *)&STACK[0x360];
  *(_OWORD *)(a9 + 960) = v54;
  v55 = *(_OWORD *)&STACK[0x390];
  *(_OWORD *)(a9 + 976) = *(_OWORD *)&STACK[0x380];
  *(_OWORD *)(a9 + 992) = v55;
  v56 = *(_OWORD *)&STACK[0x3B0];
  *(_OWORD *)(a9 + 1008) = *(_OWORD *)&STACK[0x3A0];
  v57 = *(_OWORD *)&STACK[0x3F0];
  *(_OWORD *)(a9 + 1024) = v56;
  *(_OWORD *)(a9 + 1056) = *(_OWORD *)&STACK[0x3D0];
  *(_OWORD *)(a9 + 1088) = v57;
  v58 = v49[1];
  *(_OWORD *)(a9 + 1184) = *v49;
  *(_OWORD *)(a9 + 1200) = v58;
  v59 = v49[3];
  *(_OWORD *)(a9 + 1216) = v49[2];
  *(_OWORD *)(a9 + 1232) = v59;
  v60 = v49[5];
  *(_OWORD *)(a9 + 1248) = v49[4];
  *(_OWORD *)(a9 + 1264) = v60;
  *(_OWORD *)(a9 + 1280) = *(_OWORD *)&STACK[0x458];
  *(_OWORD *)(a9 + 1296) = *(_OWORD *)&STACK[0x468];
  *(_OWORD *)(a9 + 1312) = *(_OWORD *)&STACK[0x478];
  *(_OWORD *)(a9 + 1384) = *(_OWORD *)&STACK[0x4C0];
  *(_OWORD *)(a9 + 1400) = *(_OWORD *)&STACK[0x4D0];
  *(_OWORD *)(a9 + 1416) = *(_OWORD *)&STACK[0x4E0];
  *(_OWORD *)(a9 + 1512) = *(_OWORD *)&STACK[0x540];
  *(_OWORD *)(a9 + 1560) = *(_OWORD *)&STACK[0x570];
  *(_OWORD *)(a9 + 1576) = *(_OWORD *)&STACK[0x580];
  *(_OWORD *)(a9 + 1608) = *(_OWORD *)&STACK[0x5A0];
  *(_OWORD *)(a9 + 1624) = *(_OWORD *)&STACK[0x5B0];
  *(_OWORD *)(a9 + 1672) = *(_OWORD *)&STACK[0x5E0];
  *(_OWORD *)(a9 + 1688) = *(_OWORD *)&STACK[0x5F0];
  *(_OWORD *)(a9 + 1744) = *(_OWORD *)&STACK[0x628];
  *(_OWORD *)(a9 + 1776) = *(_OWORD *)&STACK[0x648];
  *(_OWORD *)(a9 + 1824) = *(_OWORD *)&STACK[0x678];
  *(_OWORD *)(a9 + 1840) = *(_OWORD *)&STACK[0x688];
  *(_OWORD *)(a9 + 1872) = *(_OWORD *)&STACK[0x6A8];
  *(_OWORD *)(a9 + 1888) = *(_OWORD *)&STACK[0x6B8];
  *(_OWORD *)(a9 + 1904) = *(_OWORD *)&STACK[0x6C8];
  *(_OWORD *)(a9 + 1936) = *(_OWORD *)&STACK[0x6E8];
  *(_OWORD *)(a9 + 1968) = *(_OWORD *)&STACK[0x708];
  *(_OWORD *)(a9 + 1984) = *(_OWORD *)&STACK[0x718];
  *(_OWORD *)(a9 + 2064) = *(_OWORD *)&STACK[0x768];
  result = *(__n128 *)&STACK[0x778];
  *(_OWORD *)(a9 + 2080) = *(_OWORD *)&STACK[0x778];
  *(_DWORD *)(a9 + 905) = STACK[0x339];
  *(_WORD *)(a9 + 1361) = STACK[0x4A9];
  *(_WORD *)(a9 + 1441) = STACK[0x4F9];
  *(_WORD *)(a9 + 1721) = STACK[0x611];
  *(_QWORD *)(a9 + 16) = *(_QWORD *)(a1 + 16);
  *(_BYTE *)(a9 + 24) = *(_BYTE *)(a1 + 24);
  *(_QWORD *)(a9 + 32) = a2;
  *(_BYTE *)(a9 + 40) = a3 & 1;
  *(_QWORD *)(a9 + 48) = a4;
  *(_BYTE *)(a9 + 56) = a5 & 1;
  *(_QWORD *)(a9 + 64) = a6;
  *(_QWORD *)(a9 + 72) = a7;
  *(_QWORD *)(a9 + 80) = a8;
  *(_QWORD *)(a9 + 184) = a16;
  *(_BYTE *)(a9 + 192) = a17;
  *(_QWORD *)(a9 + 200) = *(_QWORD *)a18;
  *(_BYTE *)(a9 + 208) = *(_BYTE *)(a18 + 8);
  *(_BYTE *)(a9 + 209) = *(_BYTE *)(a18 + 9);
  v62 = STACK[0x7B9];
  *(_QWORD *)(a9 + 216) = a19;
  *(_BYTE *)(a9 + 224) = a20 & 1;
  *(_WORD *)(a9 + 2145) = v62;
  *(_QWORD *)(a9 + 232) = a21;
  *(_QWORD *)(a9 + 240) = a22;
  *(_WORD *)(a9 + 248) = a23;
  *(_QWORD *)(a9 + 352) = a30;
  *(_BYTE *)(a9 + 360) = a31 & 1;
  *(_QWORD *)(a9 + 464) = a38;
  *(_BYTE *)(a9 + 472) = a39 & 1;
  *(_QWORD *)(a9 + 480) = a40;
  *(_BYTE *)(a9 + 488) = a41 & 1;
  *(_QWORD *)(a9 + 544) = a45;
  *(_BYTE *)(a9 + 552) = a46 & 1;
  *(_QWORD *)(a9 + 624) = STACK[0x220];
  *(_BYTE *)(a9 + 632) = STACK[0x228] & 1;
  *(_QWORD *)(a9 + 640) = STACK[0x230];
  *(_BYTE *)(a9 + 648) = STACK[0x238] & 1;
  *(_QWORD *)(a9 + 656) = STACK[0x240];
  *(_BYTE *)(a9 + 664) = STACK[0x248] & 1;
  *(_QWORD *)(a9 + 672) = STACK[0x250];
  *(_BYTE *)(a9 + 680) = STACK[0x258] & 1;
  *(_QWORD *)(a9 + 720) = STACK[0x280];
  *(_BYTE *)(a9 + 728) = STACK[0x288] & 1;
  *(_QWORD *)(a9 + 736) = STACK[0x290];
  *(_BYTE *)(a9 + 744) = STACK[0x298] & 1;
  *(_QWORD *)(a9 + 768) = STACK[0x2B0];
  *(_BYTE *)(a9 + 776) = STACK[0x2B8] & 1;
  *(_QWORD *)(a9 + 800) = STACK[0x2D0];
  *(_BYTE *)(a9 + 808) = STACK[0x2D8] & 1;
  *(_QWORD *)(a9 + 816) = STACK[0x2E0];
  *(_BYTE *)(a9 + 824) = STACK[0x2E8] & 1;
  *(_QWORD *)(a9 + 832) = STACK[0x2F0];
  *(_BYTE *)(a9 + 840) = STACK[0x2F8] & 1;
  *(_QWORD *)(a9 + 864) = STACK[0x310];
  *(_BYTE *)(a9 + 872) = STACK[0x318] & 1;
  *(_QWORD *)(a9 + 880) = STACK[0x320];
  *(_BYTE *)(a9 + 888) = STACK[0x328] & 1;
  *(_QWORD *)(a9 + 896) = STACK[0x330];
  *(_BYTE *)(a9 + 904) = STACK[0x338] & 1;
  *(_QWORD *)(a9 + 1040) = STACK[0x3C0];
  *(_BYTE *)(a9 + 1048) = STACK[0x3C8] & 1;
  *(_QWORD *)(a9 + 1072) = STACK[0x3E0];
  *(_BYTE *)(a9 + 1080) = STACK[0x3E8] & 1;
  *(_QWORD *)(a9 + 1104) = STACK[0x400];
  *(_BYTE *)(a9 + 1112) = STACK[0x408] & 1;
  *(_BYTE *)(a9 + 1113) = STACK[0x409];
  *(_QWORD *)(a9 + 1120) = STACK[0x410];
  *(_QWORD *)(a9 + 1128) = STACK[0x418];
  *(_QWORD *)(a9 + 1136) = STACK[0x420];
  *(_BYTE *)(a9 + 1144) = STACK[0x428] & 1;
  *(_QWORD *)(a9 + 1152) = STACK[0x430];
  *(_BYTE *)(a9 + 1160) = STACK[0x438] & 1;
  *(_QWORD *)(a9 + 1168) = STACK[0x440];
  *(_QWORD *)(a9 + 1176) = STACK[0x448];
  *(_QWORD *)(a9 + 1328) = STACK[0x488];
  *(_BYTE *)(a9 + 1336) = STACK[0x490] & 1;
  *(_QWORD *)(a9 + 1344) = STACK[0x498];
  *(_QWORD *)(a9 + 1352) = STACK[0x4A0];
  *(_BYTE *)(a9 + 1360) = STACK[0x4A8];
  *(_QWORD *)(a9 + 1368) = STACK[0x4B0];
  *(_BYTE *)(a9 + 1376) = STACK[0x4B8] & 1;
  *(_QWORD *)(a9 + 1432) = STACK[0x4F0];
  *(_BYTE *)(a9 + 1440) = STACK[0x4F8] & 1;
  *(_QWORD *)(a9 + 1448) = STACK[0x500];
  *(_BYTE *)(a9 + 1456) = STACK[0x508] & 1;
  *(_QWORD *)(a9 + 1464) = STACK[0x510];
  *(_BYTE *)(a9 + 1472) = STACK[0x518] & 1;
  *(_BYTE *)(a9 + 1473) = STACK[0x519];
  *(_QWORD *)(a9 + 1480) = STACK[0x520];
  *(_BYTE *)(a9 + 1488) = STACK[0x528] & 1;
  *(_QWORD *)(a9 + 1496) = STACK[0x530];
  *(_BYTE *)(a9 + 1504) = STACK[0x538] & 1;
  *(_QWORD *)(a9 + 1528) = STACK[0x550];
  *(_BYTE *)(a9 + 1536) = STACK[0x558] & 1;
  *(_QWORD *)(a9 + 1544) = STACK[0x560];
  *(_BYTE *)(a9 + 1552) = STACK[0x568] & 1;
  *(_QWORD *)(a9 + 1592) = STACK[0x590];
  *(_BYTE *)(a9 + 1600) = STACK[0x598] & 1;
  *(_QWORD *)(a9 + 1640) = STACK[0x5C0];
  *(_BYTE *)(a9 + 1648) = STACK[0x5C8] & 1;
  *(_QWORD *)(a9 + 1656) = STACK[0x5D0];
  *(_BYTE *)(a9 + 1664) = STACK[0x5D8] & 1;
  *(_QWORD *)(a9 + 1704) = STACK[0x600];
  *(_QWORD *)(a9 + 1712) = STACK[0x608];
  *(_BYTE *)(a9 + 1720) = STACK[0x610] & 1;
  *(_QWORD *)(a9 + 1728) = STACK[0x618];
  *(_BYTE *)(a9 + 1736) = STACK[0x620] & 1;
  *(_QWORD *)(a9 + 1760) = STACK[0x638];
  *(_BYTE *)(a9 + 1768) = STACK[0x640] & 1;
  *(_BYTE *)(a9 + 1769) = STACK[0x641];
  *(_QWORD *)(a9 + 1792) = STACK[0x658];
  *(_BYTE *)(a9 + 1800) = STACK[0x660] & 1;
  *(_QWORD *)(a9 + 1808) = STACK[0x668];
  *(_BYTE *)(a9 + 1816) = STACK[0x670] & 1;
  *(_QWORD *)(a9 + 1856) = STACK[0x698];
  *(_BYTE *)(a9 + 1864) = STACK[0x6A0] & 1;
  *(_QWORD *)(a9 + 1920) = STACK[0x6D8];
  *(_BYTE *)(a9 + 1928) = STACK[0x6E0] & 1;
  *(_QWORD *)(a9 + 1952) = STACK[0x6F8];
  *(_BYTE *)(a9 + 1960) = STACK[0x700] & 1;
  *(_QWORD *)(a9 + 2000) = STACK[0x728];
  *(_BYTE *)(a9 + 2008) = STACK[0x730] & 1;
  *(_QWORD *)(a9 + 2016) = STACK[0x738];
  *(_BYTE *)(a9 + 2024) = STACK[0x740] & 1;
  *(_QWORD *)(a9 + 2032) = STACK[0x748];
  *(_BYTE *)(a9 + 2040) = STACK[0x750] & 1;
  *(_QWORD *)(a9 + 2048) = STACK[0x758];
  *(_BYTE *)(a9 + 2056) = STACK[0x760] & 1;
  *(_QWORD *)(a9 + 2096) = STACK[0x788];
  *(_BYTE *)(a9 + 2104) = STACK[0x790] & 1;
  *(_QWORD *)(a9 + 2112) = STACK[0x798];
  *(_QWORD *)(a9 + 2120) = STACK[0x7A0];
  *(_BYTE *)(a9 + 2128) = STACK[0x7A8] & 1;
  *(_QWORD *)(a9 + 2136) = STACK[0x7B0];
  *(_BYTE *)(a9 + 2144) = STACK[0x7B8] & 1;
  *(_QWORD *)(a9 + 2152) = STACK[0x7C0];
  *(_QWORD *)(a9 + 2160) = STACK[0x7C8];
  *(_BYTE *)(a9 + 2168) = STACK[0x7D0];
  *(_QWORD *)(a9 + 2176) = STACK[0x7D8];
  *(_BYTE *)(a9 + 2184) = STACK[0x7E0] & 1;
  *(_QWORD *)(a9 + 2192) = STACK[0x7E8];
  *(_BYTE *)(a9 + 2200) = STACK[0x7F0] & 1;
  *(_WORD *)(a9 + 2201) = STACK[0x7F1];
  return result;
}

uint64_t sub_1AD6140D0@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(v1 + *(int *)(type metadata accessor for IMCompositionIndication() + 24));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a1 = *v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t type metadata accessor for IMCompositionIndication()
{
  uint64_t result;

  result = qword_1EECDECB0;
  if (!qword_1EECDECB0)
    return swift_getSingletonMetadata();
  return result;
}

__n128 sub_1AD61415C(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  __n128 *v5;
  uint64_t v6;
  uint64_t v7;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  v5 = (__n128 *)(v1 + *(int *)(type metadata accessor for IMCompositionIndication() + 24));
  v6 = v5[1].n128_i64[0];
  v7 = v5[1].n128_i64[1];
  swift_release();
  sub_1AD003F24(v6, v7);
  result = *a1;
  *v5 = *a1;
  v5[1].n128_u64[0] = v3;
  v5[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD6141C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(v1 + *(int *)(type metadata accessor for IMCompositionIndication() + 28));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v7;
  *(_BYTE *)(a1 + 25) = (_BYTE)v3;
  return swift_retain();
}

__n128 sub_1AD61420C(__n128 *a1)
{
  uint64_t v1;
  unint64_t v3;
  unsigned __int8 v4;
  unsigned __int8 v5;
  __n128 *v6;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u8[8];
  v5 = a1[1].n128_u8[9];
  v6 = (__n128 *)(v1 + *(int *)(type metadata accessor for IMCompositionIndication() + 28));
  swift_release();
  result = *a1;
  *v6 = *a1;
  v6[1].n128_u64[0] = v3;
  v6[1].n128_u8[8] = v4;
  v6[1].n128_u8[9] = v5;
  return result;
}

uint64_t sub_1AD614270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IMCompositionIndication() + 24);
  if (*(_QWORD *)(v1 + 24) == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v2 = *(_QWORD *)(v1 + 16);
    swift_bridgeObjectRetain();
    return v2;
  }
  return result;
}

uint64_t sub_1AD6142FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  v1 = v0 + *(int *)(type metadata accessor for IMCompositionIndication() + 28);
  if ((*(_BYTE *)(v1 + 25) & 1) == 0)
    return *(_QWORD *)(v1 + 16);
  result = sub_1AD63BE28();
  __break(1u);
  return result;
}

uint64_t sub_1AD614374@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  if (result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!result)
    v2 = 0;
  *a2 = v2;
  return result;
}

uint64_t sub_1AD614390()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_1AD614398()
{
  sub_1AD6156B0();
  return sub_1AD63B930();
}

uint64_t sub_1AD6143F4()
{
  sub_1AD6156B0();
  return sub_1AD63B8D0();
}

void sub_1AD614440(_BYTE *a1@<X8>)
{
  _BYTE *v1;

  *a1 = *v1;
}

_BYTE *sub_1AD61444C(_BYTE *result)
{
  _BYTE *v1;

  *v1 = *result;
  return result;
}

uint64_t (*sub_1AD614458())()
{
  return nullsub_1;
}

uint64_t sub_1AD614468@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IMCompositionIndication() + 20);
  return sub_1AD0E48B8(v3, a1);
}

uint64_t sub_1AD614498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for IMCompositionIndication() + 20);
  return sub_1AD0E4930(a1, v3);
}

uint64_t (*sub_1AD6144C8())(_QWORD)
{
  type metadata accessor for IMCompositionIndication();
  return nullsub_1;
}

uint64_t sub_1AD6144F0@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v3 = a1 + *(int *)(type metadata accessor for IMCompositionIndication() + 24);
  v4 = *(_QWORD *)(v3 + 24);
  if (v4 == 1)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *a2 = *(_QWORD *)(v3 + 16);
    a2[1] = v4;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1AD614578(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *a1;
  v1 = a1[1];
  type metadata accessor for IMCompositionIndication();
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(v2, v1);
}

uint64_t sub_1AD6145C4(uint64_t a1, uint64_t a2)
{
  type metadata accessor for IMCompositionIndication();
  return _s9BlastDoor11CPIMMessageV15NamespaceHeaderV10namePrefixSSSgvs_0(a1, a2);
}

uint64_t (*sub_1AD614608(uint64_t a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*result)(uint64_t *, char);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IMCompositionIndication() + 24);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = v1 + v3;
  v5 = *(_QWORD *)(v4 + 24);
  if (v5 == 1)
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_QWORD *)(a1 + 8) = v5;
    swift_bridgeObjectRetain();
    return sub_1AD012C64;
  }
  return result;
}

uint64_t sub_1AD6146A8@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(a1 + *(int *)(type metadata accessor for IMCompositionIndication() + 24));
  v4 = v3[1];
  v5 = v3[2];
  v6 = v3[3];
  *a2 = *v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  swift_retain();
  return sub_1AD003E48(v5, v6);
}

uint64_t sub_1AD6146FC(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = a1[3];
  v6 = (_QWORD *)(a2 + *(int *)(type metadata accessor for IMCompositionIndication() + 24));
  v7 = v6[2];
  v8 = v6[3];
  swift_retain();
  sub_1AD003E48(v4, v5);
  swift_release();
  result = sub_1AD003F24(v7, v8);
  *v6 = v3;
  v6[1] = v2;
  v6[2] = v4;
  v6[3] = v5;
  return result;
}

void (*sub_1AD614780(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IMCompositionIndication() + 24);
  *((_DWORD *)v3 + 10) = v4;
  v5 = (_QWORD *)(v1 + v4);
  v6 = v5[1];
  v7 = v5[2];
  v8 = v5[3];
  *v3 = *v5;
  v3[1] = v6;
  v3[2] = v7;
  v3[3] = v8;
  swift_retain();
  sub_1AD003E48(v7, v8);
  return sub_1AD012ED0;
}

uint64_t sub_1AD6147F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  char v6;

  result = type metadata accessor for IMCompositionIndication();
  v5 = a1 + *(int *)(result + 28);
  if ((*(_BYTE *)(v5 + 25) & 1) != 0)
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v6 = *(_BYTE *)(v5 + 24);
    *(_QWORD *)a2 = *(_QWORD *)(v5 + 16);
    *(_BYTE *)(a2 + 8) = v6 & 1;
  }
  return result;
}

uint64_t sub_1AD614888(uint64_t a1, char a2)
{
  uint64_t v2;
  char v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t *);
  uint64_t result;
  _QWORD *v8;
  uint64_t v9;
  char v10;

  v4 = a2 & 1;
  v5 = v2 + *(int *)(type metadata accessor for IMCompositionIndication() + 28);
  v6 = *(uint64_t (**)(uint64_t *))v5;
  v9 = a1;
  v10 = v4;
  result = v6(&v9);
  if ((result & 1) != 0)
  {
    *(_QWORD *)(v5 + 16) = a1;
    *(_BYTE *)(v5 + 24) = v4;
    *(_BYTE *)(v5 + 25) = 0;
  }
  else
  {
    sub_1AD009690();
    swift_allocError();
    *v8 = 0x6E776F6E6B6E753CLL;
    v8[1] = 0xE90000000000003ELL;
    v8[2] = 0xD00000000000001CLL;
    v8[3] = 0x80000001AD69E8C0;
    swift_willThrow();
    result = swift_unexpectedError();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD61496C(uint64_t a1))(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t (*result)(uint64_t *);

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(type metadata accessor for IMCompositionIndication() + 28);
  *(_DWORD *)(a1 + 12) = v3;
  v4 = v1 + v3;
  if ((*(_BYTE *)(v4 + 25) & 1) != 0)
  {
    result = (uint64_t (*)(uint64_t *))sub_1AD63BE28();
    __break(1u);
  }
  else
  {
    v5 = *(_BYTE *)(v4 + 24);
    *(_QWORD *)a1 = *(_QWORD *)(v4 + 16);
    *(_BYTE *)(a1 + 8) = v5 & 1;
    return sub_1AD0132BC;
  }
  return result;
}

uint64_t sub_1AD614A0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (uint64_t *)(a1 + *(int *)(type metadata accessor for IMCompositionIndication() + 28));
  v5 = *v3;
  v4 = v3[1];
  v6 = v3[2];
  v7 = *((_BYTE *)v3 + 24);
  LOBYTE(v3) = *((_BYTE *)v3 + 25);
  *(_QWORD *)a2 = v5;
  *(_QWORD *)(a2 + 8) = v4;
  *(_QWORD *)(a2 + 16) = v6;
  *(_BYTE *)(a2 + 24) = v7;
  *(_BYTE *)(a2 + 25) = (_BYTE)v3;
  return swift_retain();
}

uint64_t sub_1AD614A5C(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t result;

  v3 = *a1;
  v2 = a1[1];
  v4 = a1[2];
  v5 = *((_BYTE *)a1 + 24);
  v6 = *((_BYTE *)a1 + 25);
  v7 = a2 + *(int *)(type metadata accessor for IMCompositionIndication() + 28);
  swift_retain();
  result = swift_release();
  *(_QWORD *)v7 = v3;
  *(_QWORD *)(v7 + 8) = v2;
  *(_QWORD *)(v7 + 16) = v4;
  *(_BYTE *)(v7 + 24) = v5;
  *(_BYTE *)(v7 + 25) = v6;
  return result;
}

void (*sub_1AD614AD4(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = *(int *)(type metadata accessor for IMCompositionIndication() + 28);
  *((_DWORD *)v3 + 7) = v4;
  v5 = (uint64_t *)(v1 + v4);
  v7 = *v5;
  v6 = v5[1];
  v8 = v5[2];
  v9 = *((_BYTE *)v5 + 24);
  LOBYTE(v5) = *((_BYTE *)v5 + 25);
  *v3 = v7;
  v3[1] = v6;
  v3[2] = v8;
  *((_BYTE *)v3 + 24) = v9;
  *((_BYTE *)v3 + 25) = (_BYTE)v5;
  swift_retain();
  return sub_1AD013594;
}

unint64_t sub_1AD614B58()
{
  unint64_t result;

  result = qword_1EECDEC98;
  if (!qword_1EECDEC98)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69AA9C, &type metadata for IMCompositionIndication.State);
    atomic_store(result, (unint64_t *)&qword_1EECDEC98);
  }
  return result;
}

uint64_t sub_1AD614B9C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD614BE8(&qword_1EECDECA0, (uint64_t)&unk_1AD652398);
  result = sub_1AD614BE8(&qword_1EECDECA8, (uint64_t)&unk_1AD6523C0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD614BE8(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for IMCompositionIndication();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD614C3C(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = *((unsigned __int8 *)a1 + 8);
  type metadata accessor for IMCompositionIndication();
  return sub_1AD003180(v1, v2);
}

uint64_t *sub_1AD614C8C(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = a3[5];
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1AD63B03C();
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(_BYTE *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
    v14 = a3[6];
    v15 = (char *)v4 + v14;
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = v16[1];
    *(_QWORD *)v15 = *v16;
    *((_QWORD *)v15 + 1) = v17;
    v18 = v16 + 2;
    v19 = v16[3];
    swift_retain();
    if (v19 == 1)
    {
      *((_OWORD *)v15 + 1) = *v18;
    }
    else
    {
      *((_QWORD *)v15 + 2) = *(_QWORD *)v18;
      *((_QWORD *)v15 + 3) = v19;
      swift_bridgeObjectRetain();
    }
    v20 = a3[7];
    v21 = (char *)v4 + v20;
    v22 = (char *)a2 + v20;
    v23 = *((_QWORD *)v22 + 1);
    *(_QWORD *)v21 = *(_QWORD *)v22;
    *((_QWORD *)v21 + 1) = v23;
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    *((_WORD *)v21 + 12) = *((_WORD *)v22 + 12);
  }
  swift_retain();
  return v4;
}

uint64_t sub_1AD614DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_1AD63B03C();
  v6 = *(_QWORD *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
  v7 = a1 + *(int *)(a2 + 24);
  swift_release();
  if (*(_QWORD *)(v7 + 24) != 1)
    swift_bridgeObjectRelease();
  return swift_release();
}

_BYTE *sub_1AD614E8C(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  _QWORD *v14;
  uint64_t v15;
  _OWORD *v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1AD63B03C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = &a1[v12];
  v14 = &a2[v12];
  v15 = v14[1];
  *(_QWORD *)v13 = *v14;
  *((_QWORD *)v13 + 1) = v15;
  v16 = v14 + 2;
  v17 = v14[3];
  swift_retain();
  if (v17 == 1)
  {
    *((_OWORD *)v13 + 1) = *v16;
  }
  else
  {
    *((_QWORD *)v13 + 2) = *(_QWORD *)v16;
    *((_QWORD *)v13 + 3) = v17;
    swift_bridgeObjectRetain();
  }
  v18 = a3[7];
  v19 = &a1[v18];
  v20 = &a2[v18];
  v21 = *((_QWORD *)v20 + 1);
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *((_QWORD *)v19 + 1) = v21;
  *((_QWORD *)v19 + 2) = *((_QWORD *)v20 + 2);
  *((_WORD *)v19 + 12) = *((_WORD *)v20 + 12);
  swift_retain();
  return a1;
}

_BYTE *sub_1AD614FC8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1AD63B03C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 24))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  v18 = *(_QWORD *)&a2[v15 + 8];
  *v16 = *(_QWORD *)&a2[v15];
  v16[1] = v18;
  swift_retain();
  swift_release();
  v19 = *((_QWORD *)v17 + 3);
  if (v16[3] != 1)
  {
    if (v19 != 1)
    {
      v16[2] = *((_QWORD *)v17 + 2);
      v16[3] = *((_QWORD *)v17 + 3);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_14;
    }
    sub_1AD0256E4((uint64_t)(v16 + 2));
    goto LABEL_12;
  }
  if (v19 == 1)
  {
LABEL_12:
    *((_OWORD *)v16 + 1) = *((_OWORD *)v17 + 1);
    goto LABEL_14;
  }
  v16[2] = *((_QWORD *)v17 + 2);
  v16[3] = *((_QWORD *)v17 + 3);
  swift_bridgeObjectRetain();
LABEL_14:
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  v23 = *(_QWORD *)&a2[v20 + 8];
  *(_QWORD *)v21 = *(_QWORD *)&a2[v20];
  *((_QWORD *)v21 + 1) = v23;
  swift_retain();
  swift_release();
  v24 = *((_QWORD *)v22 + 2);
  *((_WORD *)v21 + 12) = *((_WORD *)v22 + 12);
  *((_QWORD *)v21 + 2) = v24;
  return a1;
}

_BYTE *sub_1AD6151A8(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _OWORD *v14;
  _OWORD *v15;
  __int128 v16;
  _OWORD *v17;
  _OWORD *v18;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1AD63B03C();
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  v12 = a3[6];
  v13 = a3[7];
  v14 = &a1[v12];
  v15 = &a2[v12];
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  v17 = &a1[v13];
  v18 = &a2[v13];
  *v17 = *v18;
  *(_OWORD *)((char *)v17 + 10) = *(_OWORD *)((char *)v18 + 10);
  return a1;
}

_BYTE *sub_1AD6152A0(_BYTE *a1, _BYTE *a2, int *a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_BYTE *, uint64_t, uint64_t);
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;

  *a1 = *a2;
  v6 = a3[5];
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1AD63B03C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v10 + 48);
  v12 = v11(v7, 1, v9);
  v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 32))(v7, v8, v9);
      (*(void (**)(_BYTE *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v13)
  {
    (*(void (**)(_BYTE *, uint64_t))(v10 + 8))(v7, v9);
LABEL_6:
    v14 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v10 + 40))(v7, v8, v9);
LABEL_7:
  v15 = a3[6];
  v16 = &a1[v15];
  v17 = &a2[v15];
  *(_OWORD *)&a1[v15] = *(_OWORD *)&a2[v15];
  swift_release();
  v18 = v17 + 16;
  if (*((_QWORD *)v16 + 3) != 1)
  {
    v19 = *((_QWORD *)v17 + 3);
    if (v19 != 1)
    {
      *((_QWORD *)v16 + 2) = *v18;
      *((_QWORD *)v16 + 3) = v19;
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_1AD0256E4((uint64_t)(v16 + 16));
  }
  *((_OWORD *)v16 + 1) = *(_OWORD *)v18;
LABEL_12:
  v20 = a3[7];
  v21 = &a1[v20];
  v22 = &a2[v20];
  *(_OWORD *)&a1[v20] = *(_OWORD *)v22;
  swift_release();
  *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
  *((_WORD *)v21 + 12) = *((_WORD *)v22 + 12);
  return a1;
}

uint64_t sub_1AD615440()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD61544C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1AD6154D0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD6154DC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E2D98);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

void sub_1AD61555C()
{
  unint64_t v0;

  sub_1AD0E67F0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t storeEnumTagSinglePayload for IMCompositionIndication.State(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1AD615630 + 4 * byte_1AD69AA95[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1AD615664 + 4 * asc_1AD69AA90[v4]))();
}

uint64_t sub_1AD615664(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD61566C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1AD615674);
  return result;
}

uint64_t sub_1AD615680(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1AD615688);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1AD61568C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1AD615694(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for IMCompositionIndication.State()
{
  return &type metadata for IMCompositionIndication.State;
}

unint64_t sub_1AD6156B0()
{
  unint64_t result;

  result = qword_1EECDECC0;
  if (!qword_1EECDECC0)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD69AB04, &type metadata for IMCompositionIndication.State);
    atomic_store(result, (unint64_t *)&qword_1EECDECC0);
  }
  return result;
}

uint64_t sub_1AD6156F4(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EECDECC8);
}

uint64_t sub_1AD615708@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  uint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  char *v44;
  char *v45;
  void (*v46)(char *, uint64_t);
  uint64_t (*v47)(char *, uint64_t);
  void (*v49)(char *, uint64_t, uint64_t, uint64_t);
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  char *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  void (*v63)(char *, uint64_t);
  void (*v64)(char *, uint64_t);
  uint64_t v65;
  char *v66;
  uint64_t v67;

  v60 = a1;
  v1 = sub_1AD63B108();
  v2 = *(_QWORD *)(v1 - 8);
  v58 = v1;
  v59 = v2;
  v3 = MEMORY[0x1E0C80A78](v1);
  v56 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v55 = (char *)&v49 - v6;
  MEMORY[0x1E0C80A78](v5);
  v57 = (char *)&v49 - v7;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v65 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v66 = (char *)&v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v49 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v49 - v14;
  v67 = sub_1AD63B1C8();
  v16 = *(_QWORD *)(v67 - 8);
  MEMORY[0x1E0C80A78](v67);
  v18 = (char *)&v49 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v19);
  v21 = (char *)&v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDDA20);
  v62 = *(_QWORD *)(v22 - 8);
  v23 = MEMORY[0x1E0C80A78](v22);
  v54 = (char *)&v49 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v61 = (char *)&v49 - v26;
  MEMORY[0x1E0C80A78](v25);
  v53 = (char *)&v49 - v27;
  v28 = sub_1AD63B1F8();
  v49 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 56);
  v49(v21, 1, 1, v28);
  sub_1AD63B0FC();
  sub_1AD615C80((uint64_t)v13);
  v52 = sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v29 = MEMORY[0x1E0DEBAF0];
  v50 = v15;
  sub_1AD63B1B0();
  sub_1AD486298((uint64_t)v21);
  v63 = *(void (**)(char *, uint64_t))(v65 + 8);
  v63(v13, v8);
  v64 = *(void (**)(char *, uint64_t))(v16 + 8);
  v64(v18, v67);
  v30 = v61;
  MEMORY[0x1AF449E10](v15, v29);
  v51 = sub_1AD426054(&qword_1EECDDA28, &qword_1EECDDA20, MEMORY[0x1E0DEFE98]);
  sub_1AD63B0B4();
  v62 = *(_QWORD *)(v62 + 8);
  ((void (*)(char *, uint64_t))v62)(v30, v22);
  v49(v21, 1, 1, v28);
  sub_1AD63B0FC();
  sub_1AD63B1E0();
  v31 = v55;
  sub_1AD63B1EC();
  sub_1AD486250();
  v32 = v57;
  v33 = v58;
  sub_1AD63B0B4();
  v34 = *(void (**)(char *, uint64_t))(v59 + 8);
  v35 = v31;
  v36 = v33;
  v34(v35, v33);
  v37 = v66;
  sub_1AD63B0D8();
  v34(v32, v36);
  v38 = v13;
  (*(void (**)(char *, char *, uint64_t))(v65 + 32))(v13, v37, v8);
  v39 = v50;
  v40 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B1B0();
  sub_1AD486298((uint64_t)v21);
  v63(v38, v8);
  v64(v18, v67);
  v41 = v54;
  MEMORY[0x1AF449E10](v39, v40);
  v42 = v61;
  v43 = v22;
  sub_1AD63B0B4();
  ((void (*)(char *, uint64_t))v62)(v41, v22);
  v44 = v53;
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  sub_1AD63B198();
  v45 = v66;
  sub_1AD63B198();
  sub_1AD63B174();
  v46 = v63;
  v63(v45, v8);
  v46(v38, v8);
  v64(v18, v67);
  v46(v39, v8);
  v47 = (uint64_t (*)(char *, uint64_t))v62;
  ((void (*)(char *, uint64_t))v62)(v42, v43);
  return v47(v44, v43);
}

uint64_t sub_1AD615C80@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;

  v49 = a1;
  v1 = sub_1AD63B108();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v43 - v5;
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v43 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v45 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v50 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v43 - v13;
  MEMORY[0x1E0C80A78](v12);
  v44 = (char *)&v43 - v15;
  v52 = sub_1AD63B1C8();
  v48 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v43 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDDA20);
  v22 = *(_QWORD *)(v21 - 8);
  v46 = v21;
  v47 = v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v51 = (char *)&v43 - v26;
  v27 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v20, 1, 1, v27);
  sub_1AD63B0FC();
  sub_1AD63B1E0();
  sub_1AD63B1EC();
  sub_1AD486250();
  sub_1AD63B0B4();
  v28 = *(void (**)(char *, uint64_t))(v2 + 8);
  v28(v6, v1);
  v29 = v50;
  sub_1AD63B0D8();
  v28(v8, v1);
  v30 = v45;
  v31 = v14;
  (*(void (**)(char *, char *, uint64_t))(v45 + 32))(v14, v29, v9);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v32 = v44;
  v43 = v14;
  v33 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B1B0();
  sub_1AD486298((uint64_t)v20);
  v34 = *(void (**)(char *, uint64_t))(v30 + 8);
  v34(v31, v9);
  v48 = *(_QWORD *)(v48 + 8);
  ((void (*)(char *, uint64_t))v48)(v17, v52);
  MEMORY[0x1AF449E10](v32, v33);
  sub_1AD426054(&qword_1EECDDA28, &qword_1EECDDA20, MEMORY[0x1E0DEFE98]);
  v35 = v46;
  sub_1AD63B0B4();
  v47 = *(_QWORD *)(v47 + 8);
  v36 = v25;
  v37 = v35;
  ((void (*)(char *, uint64_t))v47)(v36, v35);
  v53 = 46;
  v54 = 0xE100000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD63B0D8();
  v39 = v55;
  v38 = v56;
  sub_1AD63B0FC();
  v53 = v39;
  v54 = v38;
  v40 = v43;
  sub_1AD63B198();
  v41 = v50;
  sub_1AD63B198();
  sub_1AD63B174();
  v34(v41, v9);
  v34(v40, v9);
  ((void (*)(char *, uint64_t))v48)(v17, v52);
  swift_bridgeObjectRelease();
  v34(v32, v9);
  return ((uint64_t (*)(char *, uint64_t))v47)(v51, v37);
}

uint64_t sub_1AD616120(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EECDECE0);
}

uint64_t sub_1AD616134@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  void (*v27)(char *, char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v41 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)&v34 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v39 = (char *)&v34 - v10;
  MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v34 - v11;
  v12 = sub_1AD63B1C8();
  v37 = *(_QWORD *)(v12 - 8);
  v38 = v12;
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v34 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDDA20);
  v35 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x1E0C80A78](v18);
  v21 = (char *)&v34 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v34 - v22;
  v24 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 56))(v17, 1, 1, v24);
  v36 = v14;
  sub_1AD63B0FC();
  if (qword_1EECD15E8 != -1)
    swift_once();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EED83B88);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  sub_1AD63B0D8();
  v25 = v2;
  v26 = *(void (**)(char *, uint64_t))(v2 + 8);
  v26(v8, v1);
  v27 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
  v28 = v39;
  v27(v39, v5, v1);
  v29 = MEMORY[0x1E0DEBAF0];
  v30 = v40;
  v31 = v36;
  sub_1AD63B1B0();
  sub_1AD486298((uint64_t)v17);
  v26(v28, v1);
  (*(void (**)(char *, uint64_t))(v37 + 8))(v31, v38);
  MEMORY[0x1AF449E10](v30, v29);
  sub_1AD426054(&qword_1EECDDA28, &qword_1EECDDA20, MEMORY[0x1E0DEFE98]);
  sub_1AD63B0B4();
  v32 = *(void (**)(char *, uint64_t))(v35 + 8);
  v32(v21, v18);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v32)(v23, v18);
}

uint64_t sub_1AD616490(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EECDECF8);
}

uint64_t sub_1AD6164A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;

  v39 = a1;
  v42 = sub_1AD63B1C8();
  v37 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v2 = (char *)&v33 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v36 = *(_QWORD *)(v38 - 8);
  v6 = MEMORY[0x1E0C80A78](v38);
  v34 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v41 = (char *)&v33 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v33 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v33 = (char *)&v33 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v35 = (char *)&v33 - v20;
  MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v33 - v21;
  if (qword_1EECD1650 != -1)
    swift_once();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EECDECE0);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v40 = v22;
  sub_1AD63B0B4();
  v23 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 1, 1, v23);
  sub_1AD63B0FC();
  v24 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  sub_1AD63B0B4();
  v25 = *(void (**)(char *, uint64_t))(v10 + 8);
  v25(v13, v9);
  sub_1AD63B0D8();
  v25(v16, v9);
  v26 = v33;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v33, v13, v9);
  v27 = v35;
  v28 = v24;
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v5);
  v25(v26, v9);
  v37 = *(_QWORD *)(v37 + 8);
  ((void (*)(char *, uint64_t))v37)(v2, v42);
  v29 = v34;
  MEMORY[0x1AF449DE0](v27, v28);
  sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  v30 = v38;
  sub_1AD63B0B4();
  v36 = *(_QWORD *)(v36 + 8);
  ((void (*)(char *, uint64_t))v36)(v29, v30);
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  sub_1AD63B198();
  v31 = v41;
  sub_1AD63B198();
  sub_1AD63B174();
  v25(v16, v9);
  v25(v26, v9);
  ((void (*)(char *, uint64_t))v37)(v2, v42);
  v25(v27, v9);
  ((void (*)(char *, uint64_t))v36)(v31, v30);
  return ((uint64_t (*)(char *, uint64_t))v25)(v40, v9);
}

uint64_t sub_1AD616914@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD618848(&qword_1EECD1650, (uint64_t)qword_1EECDECE0, (uint64_t)sub_1AD616120, a1);
}

uint64_t sub_1AD616930@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  _QWORD v32[2];
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  void (*v37)(char *, uint64_t);
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a1;
  v42 = sub_1AD63B1C8();
  v40 = *(_QWORD *)(v42 - 8);
  MEMORY[0x1E0C80A78](v42);
  v35 = (char *)v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v43 = *(_QWORD *)(v39 - 8);
  v2 = MEMORY[0x1E0C80A78](v39);
  v41 = (char *)v32 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v32 - v4;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)v32 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v32 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v32 - v17;
  if (qword_1EECD1658 != -1)
    swift_once();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EECDECF8);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v38 = v18;
  sub_1AD63B0B4();
  v19 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  v36 = v16;
  sub_1AD63B0B4();
  v20 = *(void (**)(char *, uint64_t))(v7 + 8);
  v34 = v13;
  v20(v13, v6);
  v37 = v20;
  sub_1AD63B210();
  sub_1AD63B0B4();
  v20(v10, v6);
  sub_1AD63B0C0();
  v21 = v35;
  sub_1AD63B0FC();
  v32[1] = sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v33 = v5;
  v22 = v19;
  v23 = v39;
  v24 = v21;
  sub_1AD63B18C();
  v25 = *(void (**)(char *, uint64_t))(v40 + 8);
  v26 = v42;
  v25(v21, v42);
  v27 = v41;
  MEMORY[0x1AF449E1C](v10, v22);
  sub_1AD63B0FC();
  v28 = v34;
  sub_1AD63B18C();
  v25(v24, v26);
  MEMORY[0x1AF449E1C](v10, v22);
  v29 = *(void (**)(char *, uint64_t))(v43 + 8);
  v29(v27, v23);
  v29(v33, v23);
  v30 = v37;
  v37(v28, v6);
  v30(v36, v6);
  return ((uint64_t (*)(char *, uint64_t))v30)(v38, v6);
}

uint64_t sub_1AD616CEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  char *v34;
  _QWORD v36[2];
  char *v37;
  unint64_t v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  uint64_t v52;
  unint64_t v53;

  v46 = a1;
  v47 = sub_1AD63B1C8();
  v43 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v2 = (char *)v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9E8);
  v42 = *(_QWORD *)(v49 - 8);
  v6 = MEMORY[0x1E0C80A78](v49);
  v41 = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v48 = (char *)v36 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v44 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v40 = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v36 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v45 = (char *)v36 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v36 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v36 - v20;
  if (qword_1EECD1658 != -1)
    swift_once();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EECDECF8);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v39 = v21;
  sub_1AD63B0B4();
  v50 = 14906;
  v51 = 0xE200000000000000;
  v38 = sub_1AD486320();
  sub_1AD63B0B4();
  v22 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v5, 1, 1, v22);
  sub_1AD63B0FC();
  v23 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B1BC();
  sub_1AD486298((uint64_t)v5);
  v36[0] = *(_QWORD *)(v43 + 8);
  v24 = v47;
  ((void (*)(char *, uint64_t))v36[0])(v2, v47);
  v25 = v41;
  v37 = v19;
  MEMORY[0x1AF449DD4](v19, v23);
  v36[1] = sub_1AD426054((unint64_t *)&unk_1EECDC9F0, &qword_1EECDC9E8, MEMORY[0x1E0DEFDF0]);
  v26 = v49;
  sub_1AD63B0B4();
  v43 = *(_QWORD *)(v42 + 8);
  ((void (*)(char *, uint64_t))v43)(v25, v26);
  sub_1AD63B0D8();
  v28 = v52;
  v27 = v53;
  sub_1AD63B0FC();
  v50 = v28;
  v51 = v27;
  sub_1AD63B198();
  v29 = v40;
  sub_1AD63B198();
  v30 = v45;
  sub_1AD63B174();
  v31 = *(void (**)(char *, uint64_t))(v44 + 8);
  v31(v29, v9);
  v31(v14, v9);
  v32 = (void (*)(char *, uint64_t))v36[0];
  ((void (*)(char *, uint64_t))v36[0])(v2, v24);
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  v34 = v48;
  v33 = v49;
  sub_1AD63B198();
  sub_1AD63B174();
  v31(v29, v9);
  v31(v14, v9);
  v32(v2, v47);
  v31(v30, v9);
  v31(v37, v9);
  ((void (*)(char *, uint64_t))v43)(v34, v33);
  return ((uint64_t (*)(char *, uint64_t))v31)(v39, v9);
}

uint64_t sub_1AD6171AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  void (*v23)(char *, uint64_t);
  char *v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  unint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;

  v36 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v37 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v35 = (char *)&v28 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v34 = (char *)&v28 - v5;
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - v6;
  v8 = sub_1AD63B1C8();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9E8);
  v32 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v33 = (char *)&v28 - v19;
  v38 = 14906;
  v39 = 0xE200000000000000;
  v31 = sub_1AD486320();
  sub_1AD63B0B4();
  if (qword_1EECD1658 != -1)
    swift_once();
  __swift_project_value_buffer(v1, (uint64_t)qword_1EECDECF8);
  v20 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v14, 1, 1, v20);
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v21 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B1BC();
  sub_1AD486298((uint64_t)v14);
  v30 = *(void (**)(char *, uint64_t))(v9 + 8);
  v30(v11, v8);
  MEMORY[0x1AF449DD4](v7, v21);
  sub_1AD426054((unint64_t *)&unk_1EECDC9F0, &qword_1EECDC9E8, MEMORY[0x1E0DEFDF0]);
  v22 = v33;
  sub_1AD63B0B4();
  v29 = v8;
  v23 = *(void (**)(char *, uint64_t))(v32 + 8);
  v23(v18, v15);
  v38 = v40;
  v39 = v41;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  v24 = v34;
  sub_1AD63B198();
  v25 = v35;
  sub_1AD63B198();
  sub_1AD63B174();
  v26 = *(void (**)(char *, uint64_t))(v37 + 8);
  v26(v25, v1);
  v26(v24, v1);
  v30(v11, v29);
  v26(v7, v1);
  return ((uint64_t (*)(char *, uint64_t))v23)(v22, v15);
}

uint64_t sub_1AD617560@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  void (*v32)(char *, uint64_t);
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;

  v42 = a1;
  v1 = sub_1AD63B1C8();
  v41 = *(_QWORD *)(v1 - 8);
  v35 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9E8);
  v8 = *(_QWORD *)(v7 - 8);
  v39 = v7;
  v40 = v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v37 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v36 = (char *)&v34 - v11;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  v38 = (char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v34 - v17;
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v34 - v20;
  MEMORY[0x1E0C80A78](v19);
  v43 = (char *)&v34 - v22;
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v23 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  sub_1AD63B0B4();
  v24 = *(void (**)(char *, uint64_t))(v13 + 8);
  v24(v21, v12);
  v34 = v24;
  v25 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v6, 1, 1, v25);
  sub_1AD63B0FC();
  sub_1AD53CD1C(58, &qword_1EECD1648, (uint64_t)qword_1EECDECC8, (uint64_t)sub_1AD6156F4, (uint64_t)v18);
  sub_1AD63B1BC();
  sub_1AD486298((uint64_t)v6);
  v24(v18, v12);
  v41 = *(_QWORD *)(v41 + 8);
  ((void (*)(char *, uint64_t))v41)(v3, v1);
  v26 = v37;
  MEMORY[0x1AF449DD4](v21, v23);
  sub_1AD426054((unint64_t *)&unk_1EECDC9F0, &qword_1EECDC9E8, MEMORY[0x1E0DEFDF0]);
  v27 = v36;
  v28 = v26;
  v29 = v39;
  sub_1AD63B0B4();
  v30 = *(void (**)(char *, uint64_t))(v40 + 8);
  v30(v28, v29);
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  sub_1AD63B198();
  v31 = v38;
  sub_1AD63B198();
  sub_1AD63B174();
  v32 = v34;
  v34(v31, v12);
  v32(v18, v12);
  ((void (*)(char *, uint64_t))v41)(v3, v35);
  v32(v21, v12);
  v30(v27, v29);
  return ((uint64_t (*)(char *, uint64_t))v32)(v43, v12);
}

uint64_t sub_1AD617944@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  unint64_t v17;
  void (*v18)(char *, uint64_t);
  char *v19;
  char *v20;
  void (*v21)(char *, uint64_t);
  unint64_t v22;
  uint64_t v23;
  unint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  unint64_t v38;

  v31 = a1;
  v32 = sub_1AD63B1C8();
  v30 = *(_QWORD *)(v32 - 8);
  MEMORY[0x1E0C80A78](v32);
  v2 = (char *)&v25 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v29 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v25 - v8;
  v10 = MEMORY[0x1E0C80A78](v7);
  v28 = (char *)&v25 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v25 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v25 - v15;
  v35 = 91;
  v36 = 0xE100000000000000;
  v17 = sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B210();
  v26 = v16;
  sub_1AD63B0B4();
  v18 = *(void (**)(char *, uint64_t))(v4 + 8);
  v27 = v14;
  v18(v14, v3);
  v33 = 93;
  v34 = 0xE100000000000000;
  v25 = v17;
  sub_1AD63B0B4();
  v33 = v37;
  v34 = v38;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  v19 = v29;
  sub_1AD63B198();
  v20 = v28;
  sub_1AD63B174();
  v18(v19, v3);
  v18(v9, v3);
  v21 = *(void (**)(char *, uint64_t))(v30 + 8);
  v21(v2, v32);
  v23 = v35;
  v22 = v36;
  sub_1AD63B0FC();
  v33 = v23;
  v34 = v22;
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v18(v19, v3);
  v18(v9, v3);
  v21(v2, v32);
  swift_bridgeObjectRelease();
  v18(v20, v3);
  v18(v27, v3);
  return ((uint64_t (*)(char *, uint64_t))v18)(v26, v3);
}

uint64_t sub_1AD617CA8(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83C38);
}

uint64_t sub_1AD617CBC()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD617CC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;

  v42 = a1;
  v1 = sub_1AD63B1C8();
  v39 = *(_QWORD *)(v1 - 8);
  v40 = v1;
  MEMORY[0x1E0C80A78](v1);
  v34 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v41 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v38 = (char *)&v32 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v43 = (char *)&v32 - v6;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v32 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v32 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v32 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v32 - v18;
  if (qword_1EECD15A0 != -1)
    swift_once();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EED83AF8);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  if (qword_1EECD1648 != -1)
    swift_once();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EECDECC8);
  v35 = v17;
  sub_1AD63B0B4();
  v20 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  sub_1AD63B0B4();
  v33 = v14;
  v36 = *(void (**)(char *, uint64_t))(v8 + 8);
  v36(v11, v7);
  v37 = v19;
  sub_1AD63B0C0();
  v21 = v34;
  sub_1AD63B0FC();
  v32 = sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v22 = v20;
  v23 = v21;
  sub_1AD63B18C();
  v24 = v40;
  v25 = *(void (**)(char *, uint64_t))(v39 + 8);
  v25(v21, v40);
  v26 = v38;
  v27 = v22;
  MEMORY[0x1AF449E1C](v11, v22);
  sub_1AD63B0FC();
  v28 = v33;
  sub_1AD63B18C();
  v25(v23, v24);
  MEMORY[0x1AF449E1C](v11, v27);
  v29 = *(void (**)(char *, uint64_t))(v41 + 8);
  v29(v26, v3);
  v29(v43, v3);
  v30 = v36;
  v36(v28, v7);
  v30(v35, v7);
  return ((uint64_t (*)(char *, uint64_t))v30)(v37, v7);
}

uint64_t sub_1AD618084(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83C50);
}

uint64_t sub_1AD618098@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  void (*v33)(char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v44 = a1;
  v1 = sub_1AD63B108();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v35 - v5;
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v35 - v7;
  v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v39 = *(_QWORD *)(v41 - 8);
  v9 = MEMORY[0x1E0C80A78](v41);
  v36 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v37 = (char *)&v35 - v12;
  MEMORY[0x1E0C80A78](v11);
  v38 = (char *)&v35 - v13;
  v14 = sub_1AD63B1C8();
  v42 = *(_QWORD *)(v14 - 8);
  v43 = v14;
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v35 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9B0);
  v40 = *(_QWORD *)(v20 - 8);
  v21 = MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v35 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v35 - v24;
  v26 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v19, 1, 1, v26);
  sub_1AD63B0FC();
  sub_1AD63B1E0();
  sub_1AD63B1EC();
  sub_1AD486250();
  sub_1AD63B0B4();
  v27 = *(void (**)(char *, uint64_t))(v2 + 8);
  v27(v6, v1);
  v28 = v36;
  sub_1AD63B0D8();
  v27(v8, v1);
  v29 = v39;
  v30 = v37;
  v31 = v41;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v37, v28, v41);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v32 = v38;
  sub_1AD63B1A4();
  sub_1AD486298((uint64_t)v19);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v30, v31);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v16, v43);
  MEMORY[0x1AF449E34](v32, MEMORY[0x1E0DEBAF0]);
  sub_1AD426054(&qword_1EECDC9B8, &qword_1EECDC9B0, MEMORY[0x1E0DEFEE8]);
  sub_1AD63B0B4();
  v33 = *(void (**)(char *, uint64_t))(v40 + 8);
  v33(v23, v20);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v33)(v25, v20);
}

uint64_t sub_1AD618444(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83C68);
}

uint64_t sub_1AD618458@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t);
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;

  v36 = a1;
  v38 = sub_1AD63B1C8();
  v1 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9E8);
  v33 = *(_QWORD *)(v35 - 8);
  v7 = MEMORY[0x1E0C80A78](v35);
  v32 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v39 = (char *)&v30 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v34 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v30 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)&v30 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v30 - v20;
  if (qword_1EECD1660 != -1)
    swift_once();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EED83C38);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v37 = v21;
  sub_1AD63B0B4();
  v22 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v6, 1, 1, v22);
  sub_1AD63B0FC();
  sub_1AD618848(&qword_1EECD1668, (uint64_t)qword_1EED83C50, (uint64_t)sub_1AD618084, (uint64_t)v16);
  v23 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B1BC();
  sub_1AD486298((uint64_t)v6);
  v24 = *(void (**)(char *, uint64_t))(v11 + 8);
  v24(v16, v10);
  v31 = *(void (**)(char *, uint64_t))(v1 + 8);
  v31(v3, v38);
  v25 = v32;
  MEMORY[0x1AF449DD4](v19, v23);
  sub_1AD426054((unint64_t *)&unk_1EECDC9F0, &qword_1EECDC9E8, MEMORY[0x1E0DEFDF0]);
  v26 = v35;
  sub_1AD63B0B4();
  v33 = *(_QWORD *)(v33 + 8);
  ((void (*)(char *, uint64_t))v33)(v25, v26);
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  sub_1AD63B198();
  v27 = v34;
  v28 = v39;
  sub_1AD63B198();
  sub_1AD63B174();
  v24(v27, v10);
  v24(v16, v10);
  v31(v3, v38);
  v24(v19, v10);
  ((void (*)(char *, uint64_t))v33)(v28, v26);
  return ((uint64_t (*)(char *, uint64_t))v24)(v37, v10);
}

uint64_t sub_1AD618848@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void (*v22)(char *, uint64_t);
  _QWORD v24[2];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  unint64_t v30;

  v24[0] = a3;
  v24[1] = a4;
  v6 = sub_1AD63B1C8();
  v25 = *(_QWORD *)(v6 - 8);
  v26 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v24 - v15;
  v17 = MEMORY[0x1E0C80A78](v14);
  v19 = (char *)v24 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v24 - v20;
  v27 = 58;
  v28 = 0xE100000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  if (*a1 != -1)
    swift_once();
  __swift_project_value_buffer(v9, a2);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v27 = v29;
  v28 = v30;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v22 = *(void (**)(char *, uint64_t))(v10 + 8);
  v22(v13, v9);
  v22(v16, v9);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v8, v26);
  v22(v19, v9);
  return ((uint64_t (*)(char *, uint64_t))v22)(v21, v9);
}

uint64_t sub_1AD618AAC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1AD63B1C8();
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v24 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v24 - v18;
  v20 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B138();
  v21 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 1, 1, v21);
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  MEMORY[0x1AF449DE0](v3, v20);
  sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  sub_1AD63B0B4();
  v22 = *(void (**)(char *, uint64_t))(v24 + 8);
  v22(v17, v14);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v22)(v19, v14);
}

uint64_t sub_1AD618D54@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  void (*v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  void (*v42)(char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  unint64_t v64;

  v47 = a1;
  v51 = sub_1AD63B1C8();
  v42 = *(void (**)(char *, uint64_t))(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v2 = (char *)&v38 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v46 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](v3);
  v45 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v44 = (char *)&v38 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v52 = (char *)&v38 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v50 = (char *)&v38 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v49 = (char *)&v38 - v13;
  MEMORY[0x1E0C80A78](v12);
  v48 = (char *)&v38 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v43 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)&v38 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v38 - v22;
  if (qword_1EECD1568 != -1)
    swift_once();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EED83AB0);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  if (qword_1EECD15F0 != -1)
    swift_once();
  __swift_project_value_buffer(v15, (uint64_t)qword_1EED83BA0);
  sub_1AD63B0B4();
  v61 = 38;
  v62 = 0xE100000000000000;
  sub_1AD486320();
  v40 = v21;
  sub_1AD63B0B4();
  v59 = 61;
  v60 = 0xE100000000000000;
  sub_1AD63B0B4();
  v57 = 43;
  v58 = 0xE100000000000000;
  sub_1AD63B0B4();
  v55 = 36;
  v56 = 0xE100000000000000;
  sub_1AD63B0B4();
  v53 = 44;
  v54 = 0xE100000000000000;
  sub_1AD63B0B4();
  v41 = v23;
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  v24 = sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v39 = v15;
  v25 = MEMORY[0x1E0DEBAF0];
  v26 = v24;
  sub_1AD63B18C();
  v27 = (void (*)(char *, uint64_t))*((_QWORD *)v42 + 1);
  v27(v2, v51);
  MEMORY[0x1AF449E1C](v18, v25);
  v53 = v63;
  v54 = v64;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v28 = v51;
  v42 = v27;
  v27(v2, v51);
  MEMORY[0x1AF449E1C](v18, v25);
  swift_bridgeObjectRelease();
  v53 = v61;
  v54 = v62;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v27(v2, v28);
  MEMORY[0x1AF449E1C](v18, v25);
  swift_bridgeObjectRelease();
  v53 = v59;
  v54 = v60;
  sub_1AD63B0FC();
  v38 = v26;
  sub_1AD63B18C();
  v29 = v28;
  v30 = v42;
  v42(v2, v28);
  v31 = v44;
  MEMORY[0x1AF449E1C](v18, v25);
  swift_bridgeObjectRelease();
  v53 = v57;
  v54 = v58;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v30(v2, v29);
  v32 = v45;
  v33 = MEMORY[0x1E0DEBAF0];
  MEMORY[0x1AF449E1C](v18, MEMORY[0x1E0DEBAF0]);
  swift_bridgeObjectRelease();
  v53 = v55;
  v54 = v56;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v30(v2, v29);
  MEMORY[0x1AF449E1C](v18, v33);
  swift_bridgeObjectRelease();
  v34 = *(void (**)(char *, uint64_t))(v46 + 8);
  v34(v32, v3);
  v34(v31, v3);
  v34(v52, v3);
  v34(v50, v3);
  v34(v49, v3);
  v34(v48, v3);
  v35 = *(void (**)(char *, uint64_t))(v43 + 8);
  v36 = v39;
  v35(v40, v39);
  return ((uint64_t (*)(char *, uint64_t))v35)(v41, v36);
}

uint64_t sub_1AD6193E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1AD63B1C8();
  v25 = *(_QWORD *)(v4 - 8);
  v26 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v24 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9B0);
  v24 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v24 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v24 - v18;
  v20 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B138();
  v21 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(v9, 1, 1, v21);
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B1A4();
  sub_1AD486298((uint64_t)v9);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v26);
  MEMORY[0x1AF449E34](v3, v20);
  sub_1AD426054(&qword_1EECDC9B8, &qword_1EECDC9B0, MEMORY[0x1E0DEFEE8]);
  sub_1AD63B0B4();
  v22 = *(void (**)(char *, uint64_t))(v24 + 8);
  v22(v17, v14);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v22)(v19, v14);
}

uint64_t sub_1AD619688@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t);
  void (*v32)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  unint64_t v38;
  char *v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;

  v48 = a1;
  v1 = sub_1AD63B1C8();
  v45 = *(_QWORD *)(v1 - 8);
  v46 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v34 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v47 = *(_QWORD *)(v42 - 8);
  v4 = MEMORY[0x1E0C80A78](v42);
  v44 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v49 = (char *)&v34 - v6;
  v7 = sub_1AD63B108();
  v40 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v34 - v10;
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v34 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v43 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v41 = (char *)&v34 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v34 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v34 - v20;
  if (qword_1EECD1568 != -1)
    swift_once();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EED83AB0);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  if (qword_1EECD15F0 != -1)
    swift_once();
  __swift_project_value_buffer(v14, (uint64_t)qword_1EED83BA0);
  v37 = v19;
  sub_1AD63B0B4();
  v50 = 0x2F3F3B2C242B3D26;
  v51 = 0xE800000000000000;
  sub_1AD63B1D4();
  sub_1AD63B1EC();
  v38 = sub_1AD486250();
  v35 = v7;
  v36 = v13;
  sub_1AD63B0B4();
  v40 = *(_QWORD *)(v40 + 8);
  ((void (*)(char *, uint64_t))v40)(v11, v7);
  v39 = v21;
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v22 = v41;
  v23 = MEMORY[0x1E0DEBAF0];
  v24 = v42;
  sub_1AD63B18C();
  v25 = v46;
  v26 = *(void (**)(char *, uint64_t))(v45 + 8);
  v26(v3, v46);
  v27 = v44;
  MEMORY[0x1AF449E1C](v22, v23);
  sub_1AD63B0FC();
  v28 = v14;
  v29 = v36;
  v30 = v35;
  sub_1AD63B18C();
  v26(v3, v25);
  MEMORY[0x1AF449E1C](v22, MEMORY[0x1E0DEBAF0]);
  v31 = *(void (**)(char *, uint64_t))(v47 + 8);
  v31(v27, v24);
  v31(v49, v24);
  ((void (*)(char *, uint64_t))v40)(v29, v30);
  v32 = *(void (**)(char *, uint64_t))(v43 + 8);
  v32(v37, v28);
  return ((uint64_t (*)(char *, uint64_t))v32)(v39, v28);
}

uint64_t sub_1AD619AE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);
  char *v30;
  char *v31;
  char *v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  uint64_t v37;
  uint64_t v39;
  char *v40;
  char *v41;
  unint64_t v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  unint64_t v57;

  v47 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v48 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v46 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = MEMORY[0x1E0C80A78](v2);
  v45 = (char *)&v39 - v5;
  v6 = MEMORY[0x1E0C80A78](v4);
  v50 = (uint64_t)&v39 - v7;
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - v8;
  v53 = sub_1AD63B1C8();
  v43 = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9E8);
  v42 = *(_QWORD *)(v15 - 8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v41 = (char *)&v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v49 = (char *)&v39 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v20 = *(_QWORD *)(v19 - 8);
  v51 = v19;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v52 = (char *)&v39 - v24;
  sub_1AD63B138();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B0B4();
  v44 = *(void (**)(char *, uint64_t))(v20 + 8);
  v44(v23, v19);
  v25 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v14, 1, 1, v25);
  sub_1AD63B0FC();
  v26 = v50;
  sub_1AD485A70(58, 0xE100000000000000, (uint64_t)sub_1AD618AAC, v50);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v27 = v9;
  v28 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B1BC();
  sub_1AD486298((uint64_t)v14);
  v29 = *(void (**)(uint64_t, uint64_t))(v48 + 8);
  v29(v26, v1);
  v48 = *(_QWORD *)(v43 + 8);
  ((void (*)(char *, uint64_t))v48)(v11, v53);
  v30 = v41;
  MEMORY[0x1AF449DD4](v27, v28);
  sub_1AD426054((unint64_t *)&unk_1EECDC9F0, &qword_1EECDC9E8, MEMORY[0x1E0DEFDF0]);
  sub_1AD63B0B4();
  v43 = *(_QWORD *)(v42 + 8);
  v39 = v15;
  ((void (*)(char *, uint64_t))v43)(v30, v15);
  v54 = 64;
  v55 = 0xE100000000000000;
  v42 = sub_1AD486320();
  sub_1AD63B0B4();
  v40 = v27;
  sub_1AD63B0D8();
  sub_1AD63B0FC();
  v31 = v45;
  sub_1AD63B198();
  v32 = v46;
  sub_1AD63B198();
  v33 = v50;
  v34 = v31;
  sub_1AD63B174();
  v29((uint64_t)v32, v1);
  v29((uint64_t)v31, v1);
  v35 = v53;
  ((void (*)(char *, uint64_t))v48)(v11, v53);
  v37 = v56;
  v36 = v57;
  sub_1AD63B0FC();
  v54 = v37;
  v55 = v36;
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v29((uint64_t)v32, v1);
  v29((uint64_t)v34, v1);
  ((void (*)(char *, uint64_t))v48)(v11, v35);
  swift_bridgeObjectRelease();
  v29(v33, v1);
  v29((uint64_t)v40, v1);
  ((void (*)(char *, uint64_t))v43)(v49, v39);
  return ((uint64_t (*)(char *, uint64_t))v44)(v52, v51);
}

uint64_t sub_1AD61A03C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v23 = a1;
  v1 = sub_1AD63B1C8();
  v21 = *(_QWORD *)(v1 - 8);
  v22 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v20 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v20 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v20 - v15;
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B210();
  sub_1AD63B0B4();
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v14, v7);
  if (qword_1EECD15A8 != -1)
    swift_once();
  __swift_project_value_buffer(v7, (uint64_t)qword_1EED83B10);
  sub_1AD63B0B4();
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v18 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B18C();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v3, v22);
  MEMORY[0x1AF449E1C](v11, v18);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v4);
  v17(v14, v7);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v7);
}

uint64_t sub_1AD61A2CC(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EECDED10);
}

uint64_t sub_1AD61A2E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v38 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v38 - v12;
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v38 - v13;
  v14 = sub_1AD63B1C8();
  v45 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  MEMORY[0x1E0C80A78](v14);
  v38 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9B0);
  v42 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v38 - v23;
  v25 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v18, 1, 1, v25);
  sub_1AD63B0FC();
  v26 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B138();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B0B4();
  v27 = *(void (**)(char *, uint64_t))(v2 + 8);
  v27(v5, v1);
  v28 = v39;
  sub_1AD63B0D8();
  v27(v7, v1);
  v30 = v43;
  v29 = v44;
  v31 = v40;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v28, v44);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v32 = v41;
  v33 = v31;
  v34 = v29;
  v35 = v38;
  sub_1AD63B1A4();
  sub_1AD486298((uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v46);
  MEMORY[0x1AF449E34](v32, v26);
  sub_1AD426054(&qword_1EECDC9B8, &qword_1EECDC9B0, MEMORY[0x1E0DEFEE8]);
  sub_1AD63B0B4();
  v36 = *(void (**)(char *, uint64_t))(v42 + 8);
  v36(v22, v19);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v36)(v24, v19);
}

uint64_t sub_1AD61A684@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  void (*v19)(char *, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;

  v34 = a1;
  v1 = sub_1AD63B1C8();
  v32 = *(_QWORD *)(v1 - 8);
  v33 = v1;
  MEMORY[0x1E0C80A78](v1);
  v28 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v30 = *(_QWORD *)(v3 - 8);
  v31 = v3;
  MEMORY[0x1E0C80A78](v3);
  v27 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1AD63B108();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v25 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v29 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v25 - v17;
  if (qword_1EECD15D8 != -1)
    swift_once();
  __swift_project_value_buffer(v13, (uint64_t)qword_1EED83B58);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v26 = v18;
  sub_1AD63B0B4();
  v35 = 0x602B5F2A25212E2DLL;
  v36 = 0xEA00000000007E27;
  sub_1AD63B1D4();
  sub_1AD63B1EC();
  sub_1AD486250();
  sub_1AD63B0B4();
  v19 = *(void (**)(char *, uint64_t))(v6 + 8);
  v19(v10, v5);
  v20 = v27;
  sub_1AD63B0C0();
  v21 = v28;
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v22 = MEMORY[0x1E0DEBAF0];
  v23 = v31;
  sub_1AD63B18C();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v21, v33);
  MEMORY[0x1AF449E1C](v16, v22);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v20, v23);
  v19(v12, v5);
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v26, v13);
}

uint64_t sub_1AD61A9CC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  unint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  unint64_t v51;

  v42 = a1;
  v47 = sub_1AD63B1C8();
  v41 = *(_QWORD *)(v47 - 8);
  MEMORY[0x1E0C80A78](v47);
  v2 = (char *)&v36 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9E8);
  v40 = *(char **)(v46 - 8);
  v6 = MEMORY[0x1E0C80A78](v46);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v45 = (char *)&v36 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v36 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v44 = (char *)&v36 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v36 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v36 - v23;
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B210();
  v43 = v24;
  sub_1AD63B0B4();
  v25 = *(void (**)(char *, uint64_t))(v11 + 8);
  v25(v22, v10);
  v48 = 61;
  v49 = 0xE100000000000000;
  v39 = sub_1AD486320();
  sub_1AD63B0B4();
  if (qword_1EECD1590 != -1)
    swift_once();
  __swift_project_value_buffer(v10, (uint64_t)qword_1EED83AE0);
  v26 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v5, 1, 1, v26);
  sub_1AD63B0FC();
  v27 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B1BC();
  sub_1AD486298((uint64_t)v5);
  v37 = *(void (**)(char *, uint64_t))(v41 + 8);
  v37(v2, v47);
  MEMORY[0x1AF449DD4](v22, v27);
  v38 = sub_1AD426054((unint64_t *)&unk_1EECDC9F0, &qword_1EECDC9E8, MEMORY[0x1E0DEFDF0]);
  v28 = v46;
  sub_1AD63B0B4();
  v41 = *((_QWORD *)v40 + 1);
  ((void (*)(char *, uint64_t))v41)(v8, v28);
  sub_1AD63B0D8();
  v30 = v50;
  v29 = v51;
  sub_1AD63B0FC();
  v48 = v30;
  v49 = v29;
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v25(v14, v10);
  v25(v17, v10);
  v40 = v22;
  v31 = v47;
  v32 = v37;
  v37(v2, v47);
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  v33 = v45;
  v34 = v46;
  sub_1AD63B198();
  sub_1AD63B174();
  v25(v14, v10);
  v25(v17, v10);
  v32(v2, v31);
  v25(v44, v10);
  v25(v40, v10);
  ((void (*)(char *, uint64_t))v41)(v33, v34);
  return ((uint64_t (*)(char *, uint64_t))v25)(v43, v10);
}

uint64_t sub_1AD61AE9C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t);
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;

  v19[1] = a1;
  v1 = sub_1AD63B1C8();
  v20 = *(_QWORD *)(v1 - 8);
  v21 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)v19 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v19 - v10;
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)v19 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)v19 - v15;
  v22 = 0x3D726464616DLL;
  v23 = 0xE600000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  if (qword_1EECD1660 != -1)
    swift_once();
  __swift_project_value_buffer(v4, (uint64_t)qword_1EED83C38);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v22 = v24;
  v23 = v25;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v11, v4);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v3, v21);
  v17(v14, v4);
  return ((uint64_t (*)(char *, uint64_t))v17)(v16, v4);
}

uint64_t sub_1AD61B110@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, uint64_t);
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  char *v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  unint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint64_t v55;
  unint64_t v56;

  v50 = a1;
  v1 = sub_1AD63B108();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v41 - v5;
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v41 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v46 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v51 = (char *)&v41 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v41 - v13;
  MEMORY[0x1E0C80A78](v12);
  v45 = (char *)&v41 - v15;
  v52 = sub_1AD63B1C8();
  v49 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v17 = (char *)&v41 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDDA20);
  v22 = *(_QWORD *)(v21 - 8);
  v47 = v21;
  v48 = v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v23);
  v43 = (char *)&v41 - v26;
  v53 = 1030517876;
  v54 = 0xE400000000000000;
  v44 = sub_1AD486320();
  sub_1AD63B0B4();
  v27 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v20, 1, 1, v27);
  sub_1AD63B0FC();
  sub_1AD63B1E0();
  sub_1AD63B1EC();
  sub_1AD486250();
  sub_1AD63B0B4();
  v28 = *(void (**)(char *, uint64_t))(v2 + 8);
  v28(v6, v1);
  v29 = v51;
  sub_1AD63B0D8();
  v28(v8, v1);
  v30 = v46;
  v31 = v14;
  (*(void (**)(char *, char *, uint64_t))(v46 + 32))(v14, v29, v9);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v32 = MEMORY[0x1E0DEBAF0];
  v33 = v45;
  v42 = v9;
  sub_1AD63B1B0();
  sub_1AD486298((uint64_t)v20);
  v34 = *(void (**)(char *, uint64_t))(v30 + 8);
  v34(v31, v9);
  v49 = *(_QWORD *)(v49 + 8);
  ((void (*)(char *, uint64_t))v49)(v17, v52);
  v35 = v25;
  MEMORY[0x1AF449E10](v33, v32);
  sub_1AD426054(&qword_1EECDDA28, &qword_1EECDDA20, MEMORY[0x1E0DEFE98]);
  v36 = v43;
  v37 = v47;
  sub_1AD63B0B4();
  v48 = *(_QWORD *)(v48 + 8);
  ((void (*)(char *, uint64_t))v48)(v35, v37);
  v53 = v55;
  v54 = v56;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  v38 = v42;
  sub_1AD63B198();
  v39 = v51;
  sub_1AD63B198();
  sub_1AD63B174();
  v34(v39, v38);
  v34(v31, v38);
  ((void (*)(char *, uint64_t))v49)(v17, v52);
  v34(v33, v38);
  return ((uint64_t (*)(char *, uint64_t))v48)(v36, v37);
}

uint64_t sub_1AD61B5B8()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD61B5C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  char *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  unint64_t v49;

  v32 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = sub_1AD63B1C8();
  v4 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v28);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v31 = *(_QWORD *)(v7 - 8);
  v8 = MEMORY[0x1E0C80A78](v7);
  v30 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v27 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v34 = (char *)&v27 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v33 = (char *)&v27 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v27 - v16;
  v46 = 0x5245545349474552;
  v47 = 0xE800000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  v44 = 0x455449564E49;
  v45 = 0xE600000000000000;
  sub_1AD63B0B4();
  v42 = 4932417;
  v43 = 0xE300000000000000;
  sub_1AD63B0B4();
  v40 = 0x4C45434E4143;
  v41 = 0xE600000000000000;
  sub_1AD63B0B4();
  v38 = 4544834;
  v39 = 0xE300000000000000;
  sub_1AD63B0B4();
  v36 = 0x534E4F4954504FLL;
  v37 = 0xE700000000000000;
  sub_1AD63B0B4();
  v36 = v48;
  v37 = v49;
  v29 = v17;
  sub_1AD63B0C0();
  swift_bridgeObjectRelease();
  v36 = v46;
  v37 = v47;
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v18 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B18C();
  v19 = *(void (**)(char *, uint64_t))(v4 + 8);
  v20 = v28;
  v19(v6, v28);
  MEMORY[0x1AF449E1C](v3, v18);
  swift_bridgeObjectRelease();
  v36 = v44;
  v37 = v45;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v21 = v20;
  v19(v6, v20);
  MEMORY[0x1AF449E1C](v3, v18);
  swift_bridgeObjectRelease();
  v36 = v42;
  v37 = v43;
  sub_1AD63B0FC();
  v22 = v7;
  sub_1AD63B18C();
  v19(v6, v20);
  v23 = MEMORY[0x1E0DEBAF0];
  MEMORY[0x1AF449E1C](v3, MEMORY[0x1E0DEBAF0]);
  swift_bridgeObjectRelease();
  v36 = v40;
  v37 = v41;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v19(v6, v20);
  v24 = v30;
  MEMORY[0x1AF449E1C](v3, v23);
  swift_bridgeObjectRelease();
  v36 = v38;
  v37 = v39;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v19(v6, v21);
  MEMORY[0x1AF449E1C](v3, v23);
  swift_bridgeObjectRelease();
  v25 = *(void (**)(char *, uint64_t))(v31 + 8);
  v25(v24, v22);
  v25(v35, v22);
  v25(v34, v22);
  v25(v33, v22);
  return ((uint64_t (*)(char *, uint64_t))v25)(v29, v22);
}

uint64_t sub_1AD61BAC0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;

  v29 = a1;
  v26 = sub_1AD63B1C8();
  v1 = *(_QWORD *)(v26 - 8);
  MEMORY[0x1E0C80A78](v26);
  v3 = (char *)&v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v28 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v22 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v22 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v27 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - v13;
  v32 = 0x656E6F6870;
  v33 = 0xE500000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  v30 = 28777;
  v31 = 0xE200000000000000;
  sub_1AD63B0B4();
  if (qword_1EECD1678 != -1)
    swift_once();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EECDED10);
  v24 = v9;
  v25 = sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  v30 = v34;
  v31 = v35;
  sub_1AD63B0C0();
  swift_bridgeObjectRelease();
  v30 = v32;
  v31 = v33;
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v23 = v8;
  v15 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B18C();
  v16 = *(void (**)(char *, uint64_t))(v1 + 8);
  v17 = v26;
  v16(v3, v26);
  v18 = v22;
  MEMORY[0x1AF449E1C](v12, v15);
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  v19 = v24;
  sub_1AD63B18C();
  v16(v3, v17);
  MEMORY[0x1AF449E1C](v12, v15);
  v20 = *(void (**)(char *, uint64_t))(v28 + 8);
  v20(v18, v4);
  v20(v23, v4);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v14, v19);
}

uint64_t sub_1AD61BE04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  char *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v28 = a3;
  v30 = a4;
  v6 = sub_1AD63B1C8();
  v31 = *(_QWORD *)(v6 - 8);
  v32 = v6;
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v29 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)&v27 - v14;
  MEMORY[0x1E0C80A78](v13);
  v27 = (char *)&v27 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v27 - v22;
  v33 = a1;
  v34 = a2;
  sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD63B138();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B0B4();
  v28 = *(void (**)(char *, uint64_t))(v18 + 8);
  v28(v21, v17);
  v33 = v35;
  v34 = v36;
  v24 = v27;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B198();
  sub_1AD63B198();
  sub_1AD63B174();
  v25 = *(void (**)(char *, uint64_t))(v29 + 8);
  v25(v12, v9);
  v25(v15, v9);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v32);
  v25(v24, v9);
  return ((uint64_t (*)(char *, uint64_t))v28)(v23, v17);
}

uint64_t sub_1AD61C0D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v39 = a1;
  v35 = sub_1AD63B1C8();
  v1 = *(_QWORD *)(v35 - 8);
  MEMORY[0x1E0C80A78](v35);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v38 = *(_QWORD *)(v33 - 8);
  v4 = MEMORY[0x1E0C80A78](v33);
  v37 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v28 - v7;
  v8 = MEMORY[0x1E0C80A78](v6);
  v40 = (char *)&v28 - v9;
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v34 = *(_QWORD *)(v12 - 8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v28 - v16;
  v47 = 7365749;
  v48 = 0xE300000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  v45 = 7365492;
  v46 = 0xE300000000000000;
  sub_1AD63B0B4();
  v43 = 1886675827;
  v44 = 0xE400000000000000;
  sub_1AD63B0B4();
  v41 = 7564404;
  v42 = 0xE300000000000000;
  sub_1AD63B0B4();
  if (qword_1EECD1678 != -1)
    swift_once();
  v31 = v12;
  __swift_project_value_buffer(v12, (uint64_t)qword_1EECDED10);
  v32 = sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v30 = v17;
  sub_1AD63B0B4();
  v41 = v49;
  v42 = v50;
  sub_1AD63B0C0();
  swift_bridgeObjectRelease();
  v41 = v47;
  v42 = v48;
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v29 = v11;
  v18 = MEMORY[0x1E0DEBAF0];
  v19 = v33;
  sub_1AD63B18C();
  v20 = *(void (**)(char *, uint64_t))(v1 + 8);
  v21 = v35;
  v20(v3, v35);
  MEMORY[0x1AF449E1C](v15, v18);
  swift_bridgeObjectRelease();
  v41 = v45;
  v42 = v46;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v20(v3, v21);
  v22 = v36;
  MEMORY[0x1AF449E1C](v15, v18);
  swift_bridgeObjectRelease();
  v41 = v43;
  v42 = v44;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v20(v3, v21);
  v23 = v37;
  MEMORY[0x1AF449E1C](v15, v18);
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  v24 = v30;
  v25 = v31;
  sub_1AD63B18C();
  v20(v3, v21);
  MEMORY[0x1AF449E1C](v15, MEMORY[0x1E0DEBAF0]);
  v26 = *(void (**)(char *, uint64_t))(v38 + 8);
  v26(v23, v19);
  v26(v22, v19);
  v26(v40, v19);
  v26(v29, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v24, v25);
}

uint64_t sub_1AD61C57C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, uint64_t);
  void (*v45)(char *, uint64_t);
  unint64_t v47;
  void (*v48)(char *, uint64_t);
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  char *v55;
  char *v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  unint64_t v69;

  v52 = a1;
  v60 = sub_1AD63B1C8();
  v49 = *(_QWORD *)(v60 - 8);
  MEMORY[0x1E0C80A78](v60);
  v2 = (char *)&v47 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v51 = *(_QWORD *)(v57 - 8);
  v3 = MEMORY[0x1E0C80A78](v57);
  v50 = (char *)&v47 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v63 = (char *)&v47 - v6;
  v7 = MEMORY[0x1E0C80A78](v5);
  v61 = (char *)&v47 - v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v58 = (char *)&v47 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v56 = (char *)&v47 - v12;
  MEMORY[0x1E0C80A78](v11);
  v54 = (char *)&v47 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v47 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v53 = (char *)&v47 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v65 = (char *)&v47 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v47 - v24;
  v26 = MEMORY[0x1E0C80A78](v23);
  v28 = (char *)&v47 - v27;
  v29 = MEMORY[0x1E0C80A78](v26);
  v31 = (char *)&v47 - v30;
  MEMORY[0x1E0C80A78](v29);
  v64 = (char *)&v47 - v32;
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v33 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  sub_1AD63B0B4();
  v34 = *(void (**)(char *, uint64_t))(v15 + 8);
  v62 = v31;
  v34(v31, v14);
  sub_1AD63B210();
  sub_1AD63B0B4();
  v55 = v28;
  v34(v28, v14);
  sub_1AD63B210();
  sub_1AD63B0B4();
  v59 = v25;
  v34(v25, v14);
  v35 = v65;
  sub_1AD63B210();
  sub_1AD63B0B4();
  v34(v35, v14);
  v36 = v34;
  v37 = v53;
  sub_1AD63B210();
  sub_1AD63B0B4();
  v36(v37, v14);
  v48 = v36;
  v66 = 29292;
  v67 = 0xE200000000000000;
  v47 = sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD63B210();
  sub_1AD63B0B4();
  v36(v18, v14);
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B18C();
  v38 = *(void (**)(char *, uint64_t))(v49 + 8);
  v39 = v60;
  v38(v2, v60);
  MEMORY[0x1AF449E1C](v18, v33);
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v38(v2, v39);
  MEMORY[0x1AF449E1C](v18, v33);
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v38(v2, v39);
  MEMORY[0x1AF449E1C](v18, v33);
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v38(v2, v39);
  MEMORY[0x1AF449E1C](v18, v33);
  v66 = v68;
  v67 = v69;
  sub_1AD63B0FC();
  sub_1AD63B18C();
  v38(v2, v39);
  v40 = v50;
  v41 = MEMORY[0x1E0DEBAF0];
  MEMORY[0x1AF449E1C](v18, MEMORY[0x1E0DEBAF0]);
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  v42 = v53;
  v43 = v57;
  sub_1AD63B18C();
  v38(v2, v60);
  MEMORY[0x1AF449E1C](v18, v41);
  v44 = *(void (**)(char *, uint64_t))(v51 + 8);
  v44(v40, v43);
  v44(v63, v43);
  v44(v61, v43);
  v44(v58, v43);
  v44(v56, v43);
  v44(v54, v43);
  v45 = v48;
  v48(v42, v14);
  v45(v65, v14);
  v45(v59, v14);
  v45(v55, v14);
  v45(v62, v14);
  return ((uint64_t (*)(char *, uint64_t))v45)(v64, v14);
}

uint64_t sub_1AD61CCA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v28 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v27 = *(_QWORD *)(v1 - 8);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v23 - v5;
  v7 = sub_1AD63B1C8();
  v25 = *(_QWORD *)(v7 - 8);
  v26 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v24 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v23 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v23 - v17;
  v19 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v12, 1, 1, v19);
  sub_1AD63B0FC();
  sub_1AD485A70(59, 0xE100000000000000, (uint64_t)sub_1AD61EBFC, (uint64_t)v4);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v20 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v12);
  (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v1);
  (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v26);
  MEMORY[0x1AF449DE0](v6, v20);
  sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  sub_1AD63B0B4();
  v21 = *(void (**)(char *, uint64_t))(v24 + 8);
  v21(v16, v13);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v21)(v18, v13);
}

uint64_t sub_1AD61CF40()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1AD63B108();
  v1 = MEMORY[0x1E0C80A78](v0);
  __swift_allocate_value_buffer(v1, qword_1EECDED28);
  __swift_project_value_buffer(v0, (uint64_t)qword_1EECDED28);
  sub_1AD63B1D4();
  return sub_1AD63B1EC();
}

uint64_t sub_1AD61D008@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v38 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v38 - v12;
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v38 - v13;
  v14 = sub_1AD63B1C8();
  v45 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  MEMORY[0x1E0C80A78](v14);
  v38 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v42 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v38 - v23;
  v25 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v18, 1, 1, v25);
  sub_1AD63B0FC();
  v26 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B138();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B0B4();
  v27 = *(void (**)(char *, uint64_t))(v2 + 8);
  v27(v5, v1);
  v28 = v39;
  sub_1AD63B0D8();
  v27(v7, v1);
  v30 = v43;
  v29 = v44;
  v31 = v40;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v28, v44);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v32 = v41;
  v33 = v31;
  v34 = v29;
  v35 = v38;
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v46);
  MEMORY[0x1AF449DE0](v32, v26);
  sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  sub_1AD63B0B4();
  v36 = *(void (**)(char *, uint64_t))(v42 + 8);
  v36(v22, v19);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v36)(v24, v19);
}

uint64_t sub_1AD61D3AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(char *, uint64_t);
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v47 = a1;
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v38 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v43 = *(_QWORD *)(v8 - 8);
  v44 = v8;
  v9 = MEMORY[0x1E0C80A78](v8);
  v39 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v40 = (char *)&v38 - v12;
  MEMORY[0x1E0C80A78](v11);
  v41 = (char *)&v38 - v13;
  v14 = sub_1AD63B1C8();
  v45 = *(_QWORD *)(v14 - 8);
  v46 = v14;
  MEMORY[0x1E0C80A78](v14);
  v38 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9B0);
  v42 = *(_QWORD *)(v19 - 8);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)&v38 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v38 - v23;
  v25 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v18, 1, 1, v25);
  sub_1AD63B0FC();
  v26 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B138();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  sub_1AD63B0B4();
  v27 = *(void (**)(char *, uint64_t))(v2 + 8);
  v27(v5, v1);
  v28 = v39;
  sub_1AD63B0D8();
  v27(v7, v1);
  v30 = v43;
  v29 = v44;
  v31 = v40;
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v40, v28, v44);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v32 = v41;
  v33 = v31;
  v34 = v29;
  v35 = v38;
  sub_1AD63B1A4();
  sub_1AD486298((uint64_t)v18);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v34);
  (*(void (**)(char *, uint64_t))(v45 + 8))(v35, v46);
  MEMORY[0x1AF449E34](v32, v26);
  sub_1AD426054(&qword_1EECDC9B8, &qword_1EECDC9B0, MEMORY[0x1E0DEFEE8]);
  sub_1AD63B0B4();
  v36 = *(void (**)(char *, uint64_t))(v42 + 8);
  v36(v22, v19);
  sub_1AD63B0D8();
  return ((uint64_t (*)(char *, uint64_t))v36)(v24, v19);
}

uint64_t sub_1AD61D750@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  char *v23;
  char *v24;
  void (*v25)(char *, uint64_t);
  void (*v26)(char *, uint64_t);
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  v38 = a1;
  v1 = sub_1AD63B1C8();
  v34 = *(char **)(v1 - 8);
  v35 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC990);
  v37 = *(_QWORD *)(v31 - 8);
  v4 = MEMORY[0x1E0C80A78](v31);
  v33 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - v6;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v36 = *(_QWORD *)(v8 - 8);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v39 = (char *)&v28 - v13;
  MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v28 - v14;
  v16 = sub_1AD63B108();
  v32 = *(_QWORD *)(v16 - 8);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EECD1680 != -1)
    swift_once();
  __swift_project_value_buffer(v16, (uint64_t)qword_1EECDED28);
  sub_1AD486250();
  sub_1AD63B0B4();
  if (qword_1EECD1568 != -1)
    swift_once();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EED83AB0);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B0B4();
  if (qword_1EECD15F0 != -1)
    swift_once();
  __swift_project_value_buffer(v8, (uint64_t)qword_1EED83BA0);
  sub_1AD63B0B4();
  v29 = v16;
  v30 = v18;
  sub_1AD63B0C0();
  sub_1AD63B0FC();
  sub_1AD426054(&qword_1EECDC998, &qword_1EECDC990, MEMORY[0x1E0DEFED0]);
  v19 = MEMORY[0x1E0DEBAF0];
  v20 = v31;
  sub_1AD63B18C();
  v28 = v7;
  v21 = v35;
  v22 = (void (*)(char *, uint64_t))*((_QWORD *)v34 + 1);
  v22(v3, v35);
  v34 = v15;
  v23 = v33;
  MEMORY[0x1AF449E1C](v11, v19);
  sub_1AD63B0FC();
  v24 = v39;
  sub_1AD63B18C();
  v22(v3, v21);
  MEMORY[0x1AF449E1C](v11, v19);
  v25 = *(void (**)(char *, uint64_t))(v37 + 8);
  v25(v23, v20);
  v25(v28, v20);
  v26 = *(void (**)(char *, uint64_t))(v36 + 8);
  v26(v24, v8);
  v26(v34, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v30, v29);
}

uint64_t sub_1AD61DB3C(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EECDED40);
}

uint64_t sub_1AD61DB50@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void (*v20)(char *, uint64_t);
  uint64_t v21;
  unint64_t v22;
  char *v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t);
  char *v28;
  uint64_t v30;
  char *v31;
  char *v32;
  char *v33;
  char *v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;

  v39 = a1;
  v1 = sub_1AD63B1C8();
  v37 = *(_QWORD *)(v1 - 8);
  v38 = v1;
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v6);
  v33 = (char *)&v30 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v35 = (char *)&v30 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v30 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v30 - v18;
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  sub_1AD63B210();
  v34 = v19;
  sub_1AD63B0B4();
  v20 = *(void (**)(char *, uint64_t))(v5 + 8);
  v31 = v17;
  v20(v17, v4);
  v40 = 61;
  v41 = 0xE100000000000000;
  sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD63B210();
  sub_1AD63B0B4();
  v20(v14, v4);
  v32 = v14;
  sub_1AD63B0D8();
  v21 = v42;
  v22 = v43;
  sub_1AD63B0FC();
  v40 = v21;
  v41 = v22;
  v23 = v33;
  sub_1AD63B198();
  v24 = v36;
  sub_1AD63B198();
  v25 = v35;
  sub_1AD63B174();
  v20(v24, v4);
  v20(v23, v4);
  v26 = v38;
  v27 = *(void (**)(char *, uint64_t))(v37 + 8);
  v27(v3, v38);
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  v28 = v31;
  sub_1AD63B198();
  sub_1AD63B174();
  v20(v24, v4);
  v20(v23, v4);
  v27(v3, v26);
  v20(v25, v4);
  v20(v32, v4);
  v20(v28, v4);
  return ((uint64_t (*)(char *, uint64_t))v20)(v34, v4);
}

uint64_t sub_1AD61DEF4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  char *v31;
  uint64_t v32;
  _QWORD v34[2];
  char *v35;
  char *v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unint64_t v48;
  uint64_t v49;
  unint64_t v50;

  v42 = a1;
  v46 = sub_1AD63B1C8();
  v41 = *(_QWORD *)(v46 - 8);
  MEMORY[0x1E0C80A78](v46);
  v2 = (char *)v34 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9C0);
  v40 = *(_QWORD *)(v45 - 8);
  v6 = MEMORY[0x1E0C80A78](v45);
  v39 = (char *)v34 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v44 = (char *)v34 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v38 = *(_QWORD *)(v9 - 8);
  v10 = MEMORY[0x1E0C80A78](v9);
  v36 = (char *)v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v34 - v13;
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)v34 - v16;
  v18 = MEMORY[0x1E0C80A78](v15);
  v20 = (char *)v34 - v19;
  MEMORY[0x1E0C80A78](v18);
  v22 = (char *)v34 - v21;
  v47 = 63;
  v48 = 0xE100000000000000;
  v37 = sub_1AD486320();
  sub_1AD63B0B4();
  if (qword_1EECD1688 != -1)
    swift_once();
  __swift_project_value_buffer(v9, (uint64_t)qword_1EECDED40);
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v43 = v22;
  sub_1AD63B0B4();
  v23 = sub_1AD63B1F8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v5, 1, 1, v23);
  sub_1AD63B0FC();
  sub_1AD53CD1C(38, &qword_1EECD1688, (uint64_t)qword_1EECDED40, (uint64_t)sub_1AD61DB3C, (uint64_t)v17);
  v24 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B180();
  sub_1AD486298((uint64_t)v5);
  v25 = *(void (**)(char *, uint64_t))(v38 + 8);
  v25(v17, v9);
  v38 = *(_QWORD *)(v41 + 8);
  ((void (*)(char *, uint64_t))v38)(v2, v46);
  v26 = v39;
  v35 = v20;
  MEMORY[0x1AF449DE0](v20, v24);
  v34[1] = sub_1AD426054(&qword_1EECDC9C8, &qword_1EECDC9C0, MEMORY[0x1E0DEFE20]);
  v27 = v45;
  sub_1AD63B0B4();
  v41 = *(_QWORD *)(v40 + 8);
  ((void (*)(char *, uint64_t))v41)(v26, v27);
  v47 = v49;
  v48 = v50;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  sub_1AD63B198();
  v28 = v36;
  sub_1AD63B198();
  sub_1AD63B174();
  v25(v28, v9);
  v25(v14, v9);
  v34[0] = v17;
  v29 = v46;
  v30 = (void (*)(char *, uint64_t))v38;
  ((void (*)(char *, uint64_t))v38)(v2, v46);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v31 = v44;
  v32 = v45;
  sub_1AD63B198();
  sub_1AD63B174();
  v25(v28, v9);
  v25(v14, v9);
  v30(v2, v29);
  v25((char *)v34[0], v9);
  v25(v35, v9);
  ((void (*)(char *, uint64_t))v41)(v31, v32);
  return ((uint64_t (*)(char *, uint64_t))v25)(v43, v9);
}

uint64_t sub_1AD61E3E4(uint64_t a1)
{
  return sub_1AD47F39C(a1, qword_1EED83C80);
}

uint64_t sub_1AD61E3F8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  void (*v47)(char *, uint64_t);
  char *v48;
  uint64_t v49;
  void (*v50)(char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  uint64_t (*v54)(char *, uint64_t);
  _QWORD v56[2];
  char *v57;
  char *v58;
  char *v59;
  char *v60;
  char *v61;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  void (*v65)(char *, uint64_t);
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  unint64_t v77;

  v62 = a1;
  v73 = sub_1AD63B1C8();
  v67 = *(char **)(v73 - 8);
  MEMORY[0x1E0C80A78](v73);
  v2 = (char *)v56 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9A8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECD4280);
  v72 = *(char **)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](v6);
  v61 = (char *)v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v60 = (char *)v56 - v10;
  v11 = MEMORY[0x1E0C80A78](v9);
  v59 = (char *)v56 - v12;
  v13 = MEMORY[0x1E0C80A78](v11);
  v70 = (char *)v56 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v69 = (char *)v56 - v16;
  v17 = MEMORY[0x1E0C80A78](v15);
  v68 = (char *)v56 - v18;
  v19 = MEMORY[0x1E0C80A78](v17);
  v21 = (char *)v56 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v56 - v22;
  v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EECDC9E8);
  v66 = *(_QWORD *)(v71 - 8);
  v24 = MEMORY[0x1E0C80A78](v71);
  v57 = (char *)v56 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v28 = (char *)v56 - v27;
  MEMORY[0x1E0C80A78](v26);
  v30 = (char *)v56 - v29;
  v74 = 980445555;
  v75 = 0xE400000000000000;
  v56[1] = sub_1AD486320();
  sub_1AD63B0B4();
  sub_1AD426054(&qword_1EECDC988, &qword_1EECD4280, MEMORY[0x1E0DF1F60]);
  v31 = MEMORY[0x1E0DEBAF0];
  sub_1AD63B210();
  v32 = sub_1AD63B1F8();
  v56[0] = *(_QWORD *)(*(_QWORD *)(v32 - 8) + 56);
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v56[0])(v5, 1, 1, v32);
  sub_1AD63B0FC();
  sub_1AD63B1BC();
  v58 = v5;
  sub_1AD486298((uint64_t)v5);
  v33 = (void (*)(char *, uint64_t))*((_QWORD *)v72 + 1);
  v72 = v23;
  v33(v23, v6);
  v65 = (void (*)(char *, uint64_t))*((_QWORD *)v67 + 1);
  v65(v2, v73);
  v34 = v21;
  v35 = v21;
  v36 = v71;
  MEMORY[0x1AF449DD4](v35, v31);
  v37 = sub_1AD426054((unint64_t *)&unk_1EECDC9F0, &qword_1EECDC9E8, MEMORY[0x1E0DEFDF0]);
  v67 = v30;
  v64 = v37;
  sub_1AD63B0B4();
  v38 = v28;
  v66 = *(_QWORD *)(v66 + 8);
  ((void (*)(char *, uint64_t))v66)(v28, v36);
  if (qword_1EECD1670 != -1)
    swift_once();
  __swift_project_value_buffer(v6, (uint64_t)qword_1EED83C68);
  sub_1AD63B0B4();
  v39 = v68;
  sub_1AD63B210();
  v63 = v34;
  sub_1AD63B0B4();
  v33(v39, v6);
  sub_1AD63B210();
  v40 = (uint64_t)v58;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v56[0])(v58, 1, 1, v32);
  sub_1AD63B0FC();
  v41 = v69;
  sub_1AD63B1BC();
  sub_1AD486298(v40);
  v33(v39, v6);
  v65(v2, v73);
  v42 = v57;
  MEMORY[0x1AF449DD4](v41, v31);
  v43 = v38;
  v44 = v71;
  sub_1AD63B0B4();
  ((void (*)(char *, uint64_t))v66)(v42, v44);
  v74 = v76;
  v75 = v77;
  sub_1AD63B0D8();
  swift_bridgeObjectRelease();
  sub_1AD63B0FC();
  v58 = v43;
  v45 = v70;
  sub_1AD63B198();
  v46 = v59;
  sub_1AD63B198();
  sub_1AD63B174();
  v33(v46, v6);
  v33(v45, v6);
  v47 = v65;
  v65(v2, v73);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v48 = v60;
  sub_1AD63B198();
  sub_1AD63B174();
  v33(v48, v6);
  v33(v46, v6);
  v49 = v73;
  v47(v2, v73);
  v50 = v47;
  sub_1AD63B0FC();
  sub_1AD63B198();
  v51 = v61;
  sub_1AD63B198();
  sub_1AD63B174();
  v33(v51, v6);
  v33(v48, v6);
  v50(v2, v49);
  sub_1AD63B0FC();
  sub_1AD63B198();
  v52 = v58;
  v53 = v71;
  sub_1AD63B198();
  sub_1AD63B174();
  v33(v51, v6);
  v33(v48, v6);
  v50(v2, v73);
  v33(v46, v6);
  v33(v70, v6);
  v33(v69, v6);
  v33(v68, v6);
  v54 = (uint64_t (*)(char *, uint64_t))v66;
  ((void (*)(char *, uint64_t))v66)(v52, v53);
  v33(v63, v6);
  v33(v72, v6);
  return v54(v67, v53);
}

uint64_t sub_1AD61EBE8@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD61D750(a1);
}

uint64_t sub_1AD61EBFC()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD61EC1C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD61BE04(0x726F70736E617274, 0xEA00000000003D74, (void (*)(char *, uint64_t))sub_1AD61ECE8, a1);
}

uint64_t sub_1AD61EC50@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD61BE04(0x3D72657375, 0xE500000000000000, (void (*)(char *, uint64_t))sub_1AD61ECE4, a1);
}

uint64_t sub_1AD61EC7C@<X0>(uint64_t a1@<X8>)
{
  return sub_1AD485A70(0x3D646F6874656DLL, 0xE700000000000000, (uint64_t)sub_1AD61B5B8, a1);
}

uint64_t sub_1AD61ECBC()
{
  return sub_1AD485D84();
}

uint64_t sub_1AD61ECF8@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = v1[1];
  v4 = v1[2];
  v3 = v1[3];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = v4;
  a1[3] = v3;
  swift_bridgeObjectRetain();
  return swift_retain();
}

__n128 sub_1AD61ED28(__n128 *a1)
{
  __n128 *v1;
  unint64_t v3;
  unint64_t v4;
  __n128 result;

  v3 = a1[1].n128_u64[0];
  v4 = a1[1].n128_u64[1];
  swift_release();
  swift_bridgeObjectRelease();
  result = *a1;
  *v1 = *a1;
  v1[1].n128_u64[0] = v3;
  v1[1].n128_u64[1] = v4;
  return result;
}

uint64_t sub_1AD61ED78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (*(_QWORD *)(v0 + 24))
  {
    v1 = *(_QWORD *)(v0 + 16);
    swift_bridgeObjectRetain();
    return v1;
  }
  else
  {
    result = sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

uint64_t (*sub_1AD61EDF4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t (*result)(uint64_t *, char);

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  if (v3)
  {
    *a1 = *(_QWORD *)(v1 + 16);
    a1[1] = v3;
    swift_bridgeObjectRetain();
    return sub_1AD34BDE0;
  }
  else
  {
    result = (uint64_t (*)(uint64_t *, char))sub_1AD63BE28();
    __break(1u);
  }
  return result;
}

void (*sub_1AD61EE7C(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  *v3 = *v1;
  v3[1] = v4;
  v3[2] = v6;
  v3[3] = v5;
  swift_bridgeObjectRetain();
  swift_retain();
  return sub_1AD34BF10;
}

uint64_t sub_1AD61EEE0@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1AD61EEEC(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *a1;
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  return result;
}

uint64_t (*sub_1AD61EF14())()
{
  return nullsub_1;
}

uint64_t sub_1AD61EF24@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CombinedPluginAttachment() + 20);
  return sub_1AD011D2C(v3, a1);
}

uint64_t type metadata accessor for CombinedPluginAttachment()
{
  uint64_t result;

  result = qword_1ED2DA508;
  if (!qword_1ED2DA508)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1AD61EF90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for CombinedPluginAttachment() + 20);
  return sub_1AD011D8C(a1, v3);
}

uint64_t (*sub_1AD61EFC0())(_QWORD)
{
  type metadata accessor for CombinedPluginAttachment();
  return nullsub_1;
}

unint64_t sub_1AD61EFE8(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD61F014();
  result = sub_1AD61F058();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1AD61F014()
{
  unint64_t result;

  result = qword_1EECDED58;
  if (!qword_1EECDED58)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6531A8, &type metadata for CombinedPluginAttachment.BalloonPluginIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EECDED58);
  }
  return result;
}

unint64_t sub_1AD61F058()
{
  unint64_t result;

  result = qword_1EECDED60;
  if (!qword_1EECDED60)
  {
    result = MEMORY[0x1AF44BDF0](&unk_1AD6531D0, &type metadata for CombinedPluginAttachment.BalloonPluginIdentifier);
    atomic_store(result, (unint64_t *)&qword_1EECDED60);
  }
  return result;
}

uint64_t sub_1AD61F09C(uint64_t a1)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = sub_1AD61F124(&qword_1EECDED68, (uint64_t)&unk_1AD6502C8);
  result = sub_1AD61F124(&qword_1EECDED70, (uint64_t)&unk_1AD6502F0);
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1AD61F0F0(uint64_t a1)
{
  uint64_t result;

  result = sub_1AD61F124(qword_1EECDED78, (uint64_t)&unk_1AD69AE44);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1AD61F124(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for CombinedPluginAttachment();
    result = MEMORY[0x1AF44BDF0](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1AD61F168(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  return _s9BlastDoor11CPIMMessageV19IMDNMessageIDHeaderV9messageIDSSvs_0(v1, v2);
}

uint64_t sub_1AD61F1A4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  *a2 = v2;
  a2[1] = v3;
  a2[2] = v5;
  a2[3] = v4;
  swift_bridgeObjectRetain();
  return swift_retain();
}

uint64_t sub_1AD61F1D8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) == 0)
  {
    type metadata accessor for BalloonPlugin.Payload(0);
    swift_bridgeObjectRetain();
    v5 = (char *)&loc_1AD61F258 + 4 * byte_1AD69AC30[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = v4 + ((v3 + 16) & ~(unint64_t)v3);
  swift_retain();
  return v6;
}

uint64_t sub_1AD6242D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t result;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t *v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  unsigned int (*v48)(uint64_t, uint64_t, uint64_t);
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  void (*v71)(uint64_t, uint64_t);
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  int *v75;
  char *v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  int *v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  char *v87;
  uint64_t v88;
  char *v89;
  uint64_t v90;
  char *v91;
  char *v92;
  int *v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  uint64_t v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  char *v109;
  char *v110;
  uint64_t v111;
  uint64_t v112;
  int *v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  unsigned int (*v117)(char *, uint64_t, uint64_t);
  char *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  type metadata accessor for BalloonPlugin.Payload(0);
  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      v6 = (int *)type metadata accessor for MessagesAppBalloon();
      v7 = v4 + v6[5];
      v8 = sub_1AD63B084();
      v9 = *(_QWORD *)(v8 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
        (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v7, v8);
      swift_bridgeObjectRelease();
      v10 = v4 + v6[7];
      v11 = sub_1AD63AF28();
      v12 = *(_QWORD *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
        (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
      if (*(_QWORD *)(v4 + v6[8] + 8) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v13 = (_QWORD *)(v4 + v6[11]);
      if (v13[34] >> 1 != 0xFFFFFFFFLL
        || (v13[38] | v13[36]) > 1
        || v13[44] & 0xFFFFFFFFFFFFFEFELL | v13[40] & 0xFFFFFFFFFFFF00FELL
        || (v13[48] | v13[46]) >= 2)
      {
        if (v13[3])
        {
          __swift_destroy_boxed_opaque_existential_1(v4 + v6[11]);
          v14 = v13[10];
          v15 = v13[12];
          v16 = v13[14];
          v17 = v13[16];
          v18 = v13[20];
          v19 = v13[22];
          v20 = v13[24];
          if (v14 >> 1 != 0xFFFFFFFF
            || (v16 | (unint64_t)v15) > 1
            || v18 & 0xFFFFFFFFFFFFFEFELL | v17 & 0xFFFFFFFFFFFF00FELL
            || (v20 | v19) >= 2)
          {
            sub_1AD00E8B0(v13[7], v13[8], v13[9], v14, v13[11], v15, v13[13], v16, v13[15], v17, v13[17], v13[18], v13[19], v18, v13[21], v19, v13[23], v20, v13[25],
              v13[26],
              v13[27],
              v13[28],
              v13[29],
              v13[30]);
          }
        }
        v21 = v13[31];
        v22 = v13[32];
        v23 = v13 + 31;
        sub_1AD00E8B0(v21, v22, v23[2], v23[3], v23[4], v23[5], v23[6], v23[7], v23[8], v23[9], v23[10], v23[11], v23[12], v23[13], v23[14], v23[15], v23[16], v23[17], v23[18],
          v23[19],
          v23[20],
          v23[21],
          v23[22],
          v23[23]);
      }
      v24 = v4 + v6[12];
      swift_release();
      if (*(_QWORD *)(v24 + 24) != 1)
        swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + v6[13] + 8) != 1)
        swift_bridgeObjectRelease();
      v25 = (uint64_t *)(v4 + v6[14]);
      v26 = v25[1];
      if (v26 >> 60 != 15)
        sub_1AD00412C(*v25, v26);
      return swift_bridgeObjectRelease();
    case 1:
      v27 = sub_1AD63B084();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(v4, v27);
      v28 = v4 + *(int *)(type metadata accessor for Handwriting() + 20);
      v29 = sub_1AD63B03C();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      return swift_bridgeObjectRelease();
    case 2:
      v30 = (int *)type metadata accessor for LinkPresentation.LinkMetadata(0);
      result = (*(uint64_t (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v30 - 1) + 48))(v4, 1, v30);
      if ((_DWORD)result)
        return result;
      v31 = v4 + v30[5];
      v32 = sub_1AD63AF28();
      v33 = *(_QWORD *)(v32 - 8);
      v34 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v33 + 48);
      if (!v34(v31, 1, v32))
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v31, v32);
      v35 = v4 + v30[6];
      if (!v34(v35, 1, v32))
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v35, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 = v4 + v30[12];
      if (!v34(v36, 1, v32))
        (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v36, v32);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v4 + v30[21] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v37 = v4 + v30[22];
      v38 = type metadata accessor for LinkPresentation.IconMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 48))(v37, 1, v38))
      {
        v39 = v37 + *(int *)(v38 + 20);
        if (!v34(v39, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v39, v32);
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v4 + v30[23] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v40 = v4 + v30[24];
      v41 = type metadata accessor for LinkPresentation.ARAssetMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 48))(v40, 1, v41))
      {
        v42 = v40 + *(int *)(v41 + 20);
        if (!v34(v42, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v42, v32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      if (*(_QWORD *)(v4 + v30[25] + 16) != 1)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      v43 = v4 + v30[27];
      v44 = type metadata accessor for LinkPresentation.ImageMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 48))(v43, 1, v44))
      {
        v45 = v43 + *(int *)(v44 + 20);
        if (!v34(v45, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v45, v32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v46 = v4 + v30[30];
      v47 = type metadata accessor for LinkPresentation.Video(0);
      v48 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 48);
      if (!v48(v46, 1, v47))
      {
        if (!v34(v46, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v46, v32);
        v49 = v46 + *(int *)(v47 + 20);
        if (!v34(v49, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v49, v32);
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      v50 = v4 + v30[31];
      v51 = type metadata accessor for LinkPresentation.VideoMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v51 - 8) + 48))(v50, 1, v51))
      {
        v52 = v50 + *(int *)(v51 + 20);
        if (!v34(v52, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v52, v32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v53 = v4 + v30[32];
      v54 = type metadata accessor for LinkPresentation.Audio(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 48))(v53, 1, v54))
      {
        if (!v34(v53, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v53, v32);
        swift_bridgeObjectRelease();
      }
      v55 = v4 + v30[33];
      v56 = type metadata accessor for LinkPresentation.AudioMetadata(0);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 48))(v55, 1, v56))
      {
        v57 = v55 + *(int *)(v56 + 20);
        if (!v34(v57, 1, v32))
          (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v57, v32);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v58 = (_QWORD *)(v4 + v30[41]);
      v59 = type metadata accessor for LinkPresentation.SpecializationMetadata(0);
      if (!(*(unsigned int (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 48))(v58, 1, v59))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[14] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v75 = (int *)type metadata accessor for LinkPresentation.SongMetadata(0);
            v76 = (char *)v58 + v75[11];
            v77 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v77 - 8) + 48))(v76, 1, v77))
            {
              v78 = &v76[*(int *)(v77 + 20)];
              if (!v34((uint64_t)v78, 1, v32))
                (*(void (**)(char *, uint64_t))(v33 + 8))(v78, v32);
              swift_bridgeObjectRelease();
            }
            v79 = (char *)v58 + v75[12];
            if (!v34((uint64_t)v79, 1, v32))
              (*(void (**)(char *, uint64_t))(v33 + 8))(v79, v32);
            swift_bridgeObjectRelease();
            if (*(_QWORD *)((char *)v58 + v75[14] + 8) != 1)
              goto LABEL_226;
            break;
          case 1u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v80 = type metadata accessor for LinkPresentation.AlbumMetadata(0);
            goto LABEL_151;
          case 2u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v81 = type metadata accessor for LinkPresentation.MusicVideoMetadata(0);
            goto LABEL_177;
          case 3u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v81 = type metadata accessor for LinkPresentation.ArtistMetadata(0);
            goto LABEL_177;
          case 4u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v82 = (int *)type metadata accessor for LinkPresentation.PlaylistMetadata(0);
            v83 = (char *)v58 + v82[8];
            if (!v34((uint64_t)v83, 1, v32))
              (*(void (**)(char *, uint64_t))(v33 + 8))(v83, v32);
            swift_bridgeObjectRelease();
            if (*(_QWORD *)((char *)v58 + v82[10] + 16) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v84 = v82[11];
            goto LABEL_178;
          case 5u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v81 = type metadata accessor for LinkPresentation.RadioMetadata(0);
            goto LABEL_177;
          case 6u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[14] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            v85 = type metadata accessor for LinkPresentation.SoftwareMetadata(0);
            v86 = (char *)v58 + *(int *)(v85 + 48);
            if (!v48((uint64_t)v86, 1, v47))
            {
              if (!v34((uint64_t)v86, 1, v32))
                (*(void (**)(char *, uint64_t))(v33 + 8))(v86, v32);
              v87 = &v86[*(int *)(v47 + 20)];
              if (!v34((uint64_t)v87, 1, v32))
                (*(void (**)(char *, uint64_t))(v33 + 8))(v87, v32);
              swift_bridgeObjectRelease();
              swift_release();
              swift_bridgeObjectRelease();
            }
            if (*(_QWORD *)((char *)v58 + *(int *)(v85 + 56) + 16) != 1)
              goto LABEL_226;
            break;
          case 7u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v81 = type metadata accessor for LinkPresentation.BookMetadata(0);
            goto LABEL_177;
          case 8u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[12] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v88 = type metadata accessor for LinkPresentation.AudioBookMetadata(0);
            v89 = (char *)v58 + *(int *)(v88 + 40);
            v90 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v90 - 8) + 48))(v89, 1, v90))
            {
              v91 = &v89[*(int *)(v90 + 20)];
              if (!v34((uint64_t)v91, 1, v32))
                (*(void (**)(char *, uint64_t))(v33 + 8))(v91, v32);
              swift_bridgeObjectRelease();
            }
            v92 = (char *)v58 + *(int *)(v88 + 44);
            if (!v34((uint64_t)v92, 1, v32))
              (*(void (**)(char *, uint64_t))(v33 + 8))(v92, v32);
            break;
          case 9u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            v93 = (int *)type metadata accessor for LinkPresentation.PodcastEpisodeMetadata(0);
            v94 = (char *)v58 + v93[9];
            v95 = sub_1AD63B03C();
            v96 = *(_QWORD *)(v95 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v96 + 48))(v94, 1, v95))
              (*(void (**)(char *, uint64_t))(v96 + 8))(v94, v95);
            if (*(_QWORD *)((char *)v58 + v93[10] + 16) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v97 = (char *)v58 + v93[11];
            v98 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 48))(v97, 1, v98))
            {
              v99 = &v97[*(int *)(v98 + 20)];
              if (!v34((uint64_t)v99, 1, v32))
                (*(void (**)(char *, uint64_t))(v33 + 8))(v99, v32);
              swift_bridgeObjectRelease();
            }
            goto LABEL_186;
          case 0xAu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v80 = type metadata accessor for LinkPresentation.PodcastMetadata(0);
LABEL_151:
            v100 = (char *)v58 + *(int *)(v80 + 36);
            v101 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v101 - 8) + 48))(v100, 1, v101))
            {
              v102 = &v100[*(int *)(v101 + 20)];
              if (!v34((uint64_t)v102, 1, v32))
                (*(void (**)(char *, uint64_t))(v33 + 8))(v102, v32);
              swift_bridgeObjectRelease();
            }
            goto LABEL_186;
          case 0xBu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[12] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v84 = *(int *)(type metadata accessor for LinkPresentation.TVEpisodeMetadata(0) + 40);
            goto LABEL_178;
          case 0xCu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v81 = type metadata accessor for LinkPresentation.TVSeasonMetadata(0);
            goto LABEL_177;
          case 0xDu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[8] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v84 = *(int *)(type metadata accessor for LinkPresentation.TVShowMetadata(0) + 32);
            goto LABEL_178;
          case 0xEu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v103 = type metadata accessor for LinkPresentation.MovieMetadata(0);
            v104 = (char *)v58 + *(int *)(v103 + 36);
            v105 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v105 - 8) + 48))(v104, 1, v105))
            {
              v106 = &v104[*(int *)(v105 + 20)];
              if (!v34((uint64_t)v106, 1, v32))
                (*(void (**)(char *, uint64_t))(v33 + 8))(v106, v32);
              swift_bridgeObjectRelease();
            }
            if (*(_QWORD *)((char *)v58 + *(int *)(v103 + 40) + 16) != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            goto LABEL_186;
          case 0xFu:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v81 = type metadata accessor for LinkPresentation.MovieBundleMetadata(0);
LABEL_177:
            v84 = *(int *)(v81 + 36);
LABEL_178:
            v107 = (char *)v58 + v84;
            v108 = type metadata accessor for LinkPresentation.ArtworkMetadata(0);
            if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v108 - 8) + 48))(v107, 1, v108))
            {
              break;
            }
            v109 = &v107[*(int *)(v108 + 20)];
            if (!v34((uint64_t)v109, 1, v32))
              (*(void (**)(char *, uint64_t))(v33 + 8))(v109, v32);
LABEL_186:
            swift_bridgeObjectRelease();
            break;
          case 0x10u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[8] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[24] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            goto LABEL_186;
          case 0x11u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[8] != 1)
              goto LABEL_226;
            break;
          case 0x12u:
            swift_bridgeObjectRelease();
            if (v58[4] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[20] != 1)
              goto LABEL_226;
            break;
          case 0x13u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[5] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            if (v58[24] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[47] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[67] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            if (v58[88] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[104] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[120] != 1)
              goto LABEL_226;
            break;
          case 0x14u:
            swift_bridgeObjectRelease();
            if (v58[5] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[21] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[37] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[56] != 1)
              goto LABEL_226;
            break;
          case 0x15u:
            swift_bridgeObjectRelease();
            if (v58[4] != 1)
              goto LABEL_226;
            break;
          case 0x16u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[7] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            if (v58[23] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v110 = (char *)v58 + *(int *)(type metadata accessor for LinkPresentation.FileMetadata(0) + 36);
            v111 = sub_1AD63B03C();
            v112 = *(_QWORD *)(v111 - 8);
            if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v112 + 48))(v110, 1, v111))
              (*(void (**)(char *, uint64_t))(v112 + 8))(v110, v111);
            break;
          case 0x17u:
          case 0x1Bu:
          case 0x1Du:
          case 0x1Fu:
          case 0x20u:
          case 0x21u:
            goto LABEL_186;
          case 0x18u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[10] != 1)
              goto LABEL_226;
            break;
          case 0x19u:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v58[6] != 1)
              goto LABEL_226;
            break;
          case 0x1Au:
            swift_bridgeObjectRelease();
            if (v58[7] != 1)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
            }
            v113 = (int *)type metadata accessor for LinkPresentation.PhotosMomentMetadata(0);
            v114 = (char *)v58 + v113[9];
            v115 = sub_1AD63B03C();
            v116 = *(_QWORD *)(v115 - 8);
            v117 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48);
            if (!v117(v114, 1, v115))
              (*(void (**)(char *, uint64_t))(v116 + 8))(v114, v115);
            v118 = (char *)v58 + v113[10];
            if (!v117(v118, 1, v115))
              (*(void (**)(char *, uint64_t))(v116 + 8))(v118, v115);
            v119 = v113[11];
            goto LABEL_237;
          case 0x1Cu:
          case 0x22u:
LABEL_226:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            break;
          case 0x1Eu:
            swift_bridgeObjectRelease();
            v120 = type metadata accessor for LinkPresentation.WalletPassMetadata(0);
            v121 = (char *)v58 + *(int *)(v120 + 20);
            v115 = sub_1AD63B03C();
            v116 = *(_QWORD *)(v115 - 8);
            v117 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48);
            if (!v117(v121, 1, v115))
              (*(void (**)(char *, uint64_t))(v116 + 8))(v121, v115);
            v119 = *(int *)(v120 + 24);
LABEL_237:
            v122 = (char *)v58 + v119;
            if (!v117(v122, 1, v115))
              (*(void (**)(char *, uint64_t))(v116 + 8))(v122, v115);
            break;
          case 0x23u:
            swift_release();
            break;
          default:
            break;
        }
      }
      v60 = v4 + v30[42];
      if (*(_QWORD *)(v60 + 8) != 1)
      {
        swift_bridgeObjectRelease();
        if (*(_QWORD *)(v60 + 32) != 1)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      v61 = v4 + v30[43];
      v62 = type metadata accessor for CollaborationMetadata();
      result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v62 - 8) + 48))(v61, 1, v62);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v63 = v61 + *(int *)(v62 + 24);
      v64 = sub_1AD63B03C();
      v65 = *(_QWORD *)(v64 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v65 + 48))(v63, 1, v64))
        (*(void (**)(uint64_t, uint64_t))(v65 + 8))(v63, v64);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = swift_bridgeObjectRelease();
      if (!*(_QWORD *)(v61 + *(int *)(v62 + 40) + 112))
        return result;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    case 3:
      swift_release();
      v66 = v4 + *(int *)(__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E1A30) + 28);
      v67 = sub_1AD63AF28();
      v68 = *(_QWORD *)(v67 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v68 + 48))(v66, 1, v67))
        (*(void (**)(uint64_t, uint64_t))(v68 + 8))(v66, v67);
      v69 = type metadata accessor for CombinedPluginAttachmentInfo();
      sub_1AD00412C(*(_QWORD *)(v4 + *(int *)(v69 + 20)), *(_QWORD *)(v4 + *(int *)(v69 + 20) + 8));
      swift_release();
      swift_bridgeObjectRelease();
      return sub_1AD00412C(*(_QWORD *)(v4 + *(int *)(v69 + 32)), *(_QWORD *)(v4 + *(int *)(v69 + 32) + 8));
    case 4:
      v70 = sub_1AD63B084();
      v71 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8);
      v71(v4, v70);
      v72 = v4 + *(int *)(type metadata accessor for DigitalTouchBalloon(0) + 20);
      type metadata accessor for DigitalTouchMessage(0);
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
        case 1:
        case 3:
        case 5:
        case 6:
          goto LABEL_89;
        case 2:
          swift_release();
          swift_release();
          return swift_release();
        case 4:
          v73 = v72 + *(int *)(type metadata accessor for VideoMessage(0) + 20);
          v74 = type metadata accessor for IntroBalloon(0);
          if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v74 - 8) + 48))(v73, 1, v74))
          {
            v71(v73, v70);
            swift_release();
            swift_bridgeObjectRelease();
          }
LABEL_89:
          swift_release();
          return swift_bridgeObjectRelease();
        default:
          return result;
      }
    default:
      return result;
  }
}

void sub_1AD625DD0(_QWORD *a1, _QWORD *a2)
{
  char *v2;

  *a1 = *a2;
  type metadata accessor for BalloonPlugin.Payload(0);
  swift_bridgeObjectRetain();
  v2 = (char *)sub_1AD625E48 + 4 * byte_1AD69ACE6[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1AD625E48(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void *__dst,void *a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  _QWORD *v60;
  _QWORD *v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  unsigned int (*v73)(char *, uint64_t, uint64_t);
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  _QWORD *v79;
  uint64_t v80;
  uint64_t v81;
  char *v82;
  const void *v83;
  uint64_t v84;
  uint64_t v85;
  unsigned int (*v86)(const void *, uint64_t, uint64_t);
  uint64_t v87;
  int *v88;
  uint64_t v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int128 v94;
  __int128 v95;
  __int128 v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  _QWORD *v106;
  _QWORD *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  _QWORD *v111;
  unint64_t v112;
  unint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  __int128 v128;
  __int128 v129;
  __int128 v130;
  __int128 v131;
  __int128 v132;
  __int128 v133;
  __int128 v134;
  __int128 v135;
  __int128 v136;
  __int128 v137;
  __int128 v138;
  __int128 v139;
  __int128 v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  unint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  unint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  int *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  _QWORD *v184;
  uint64_t v185;
  _OWORD *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  _QWORD *v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  unint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  unint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;

  v66 = v60[1];
  *v61 = *v60;
  v61[1] = v66;
  v67 = type metadata accessor for MessagesAppBalloon();
  *(_QWORD *)(v65 - 120) = v67;
  v68 = *(int *)(v67 + 20);
  v69 = (char *)v61 + v68;
  *(_QWORD *)(v65 - 96) = v60;
  v70 = (char *)v60 + v68;
  v71 = sub_1AD63B084();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
  swift_bridgeObjectRetain();
  if (v73(v70, 1, v71))
  {
    v74 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v74 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
  }
  v75 = *(_QWORD *)(v65 - 120);
  v76 = *(int *)(v75 + 24);
  v77 = (_QWORD *)((char *)v61 + v76);
  v78 = *(_QWORD *)(v65 - 96);
  v79 = (_QWORD *)(v78 + v76);
  v80 = v79[1];
  *v77 = *v79;
  v77[1] = v80;
  v81 = *(int *)(v75 + 28);
  v82 = (char *)v61 + v81;
  v83 = (const void *)(v78 + v81);
  v84 = sub_1AD63AF28();
  v85 = *(_QWORD *)(v84 - 8);
  v86 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v85 + 48);
  swift_bridgeObjectRetain();
  if (v86(v83, 1, v84))
  {
    v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v82, v83, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v85 + 16))(v82, v83, v84);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v85 + 56))(v82, 0, 1, v84);
  }
  v88 = *(int **)(v65 - 120);
  v89 = v88[8];
  v90 = (char *)v61 + v89;
  v91 = *(_QWORD *)(v65 - 96);
  v92 = v91 + v89;
  v93 = *(_QWORD *)(v92 + 8);
  *(_QWORD *)(v65 - 128) = v63;
  *(_DWORD *)(v65 - 100) = v62;
  if (v93 == 1)
  {
    v94 = *(_OWORD *)(v92 + 80);
    *((_OWORD *)v90 + 4) = *(_OWORD *)(v92 + 64);
    *((_OWORD *)v90 + 5) = v94;
    *(_OWORD *)(v90 + 89) = *(_OWORD *)(v92 + 89);
    v95 = *(_OWORD *)(v92 + 16);
    *(_OWORD *)v90 = *(_OWORD *)v92;
    *((_OWORD *)v90 + 1) = v95;
    v96 = *(_OWORD *)(v92 + 48);
    *((_OWORD *)v90 + 2) = *(_OWORD *)(v92 + 32);
    *((_OWORD *)v90 + 3) = v96;
  }
  else
  {
    *(_QWORD *)v90 = *(_QWORD *)v92;
    *((_QWORD *)v90 + 1) = v93;
    v97 = *(_QWORD *)(v92 + 24);
    *((_QWORD *)v90 + 2) = *(_QWORD *)(v92 + 16);
    *((_QWORD *)v90 + 3) = v97;
    v98 = *(_QWORD *)(v92 + 40);
    *((_QWORD *)v90 + 4) = *(_QWORD *)(v92 + 32);
    *((_QWORD *)v90 + 5) = v98;
    v99 = *(_QWORD *)(v92 + 56);
    *((_QWORD *)v90 + 6) = *(_QWORD *)(v92 + 48);
    *((_QWORD *)v90 + 7) = v99;
    v100 = *(_QWORD *)(v92 + 72);
    *((_QWORD *)v90 + 8) = *(_QWORD *)(v92 + 64);
    *((_QWORD *)v90 + 9) = v100;
    v101 = *(_QWORD *)(v92 + 88);
    *((_QWORD *)v90 + 10) = *(_QWORD *)(v92 + 80);
    *((_QWORD *)v90 + 11) = v101;
    v90[104] = *(_BYTE *)(v92 + 104);
    *((_QWORD *)v90 + 12) = *(_QWORD *)(v92 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  v102 = v88[9];
  v103 = (char *)v61 + v102;
  v104 = v91 + v102;
  *(_QWORD *)v103 = *(_QWORD *)v104;
  v103[8] = *(_BYTE *)(v104 + 8);
  v105 = v88[10];
  v106 = (_QWORD *)((char *)v61 + v105);
  v107 = (_QWORD *)(v91 + v105);
  v108 = v107[1];
  *v106 = *v107;
  v106[1] = v108;
  v109 = v88[11];
  *(_QWORD *)(v65 - 112) = v61;
  v110 = (char *)v61 + v109;
  v111 = (_QWORD *)(v91 + v109);
  v112 = *(_QWORD *)(v91 + v109 + 272);
  v113 = *(_QWORD *)(v91 + v109 + 288);
  v114 = *(_QWORD *)(v91 + v109 + 304);
  v115 = *(_QWORD *)(v91 + v109 + 320);
  v116 = *(_QWORD *)(v91 + v109 + 352);
  v117 = *(_QWORD *)(v91 + v109 + 368);
  v118 = *(_QWORD *)(v91 + v109 + 384);
  swift_bridgeObjectRetain();
  if (v112 >> 1 != 0xFFFFFFFF
    || (v114 | v113) > 1
    || v116 & 0xFFFFFFFFFFFFFEFELL | v115 & 0xFFFFFFFFFFFF00FELL
    || (v118 | v117) >= 2)
  {
    *(_QWORD *)(v65 - 144) = v64;
    v119 = v111[3];
    if (v119)
    {
      v120 = v111[4];
      *((_QWORD *)v110 + 3) = v119;
      *((_QWORD *)v110 + 4) = v120;
      (**(void (***)(void *, const void *))(v119 - 8))(v110, v111);
      *((_QWORD *)v110 + 5) = v111[5];
      v110[48] = *((_BYTE *)v111 + 48);
      v121 = v111[10];
      v122 = v111[12];
      v123 = v111[14];
      v124 = v111[16];
      v125 = v111[20];
      v126 = v111[22];
      v127 = v111[24];
      if (v121 >> 1 != 0xFFFFFFFF
        || (v123 | (unint64_t)v122) > 1
        || v125 & 0xFFFFFFFFFFFFFEFELL | v124 & 0xFFFFFFFFFFFF00FELL
        || (v127 | v126) >= 2)
      {
        v141 = v111[7];
        v142 = v111[8];
        v143 = v111[9];
        v144 = v111[11];
        v145 = v111[13];
        v212 = v111[15];
        v216 = v111[17];
        v222 = v111[18];
        v224 = v111[19];
        v226 = v111[21];
        v146 = v111[23];
        v147 = v111[25];
        v148 = v111[26];
        *(_QWORD *)(v65 - 192) = v146;
        *(_QWORD *)(v65 - 184) = v147;
        v149 = v111[27];
        v150 = v111[28];
        *(_QWORD *)(v65 - 176) = v148;
        *(_QWORD *)(v65 - 168) = v149;
        v151 = v111[29];
        v152 = v111[30];
        *(_QWORD *)(v65 - 160) = v150;
        *(_QWORD *)(v65 - 152) = v151;
        *(_QWORD *)(v65 - 136) = v152;
        v204 = v126;
        v203 = v125;
        v202 = v124;
        v218 = v125;
        v220 = v126;
        v153 = v141;
        v211 = v124;
        v154 = v143;
        v214 = v127;
        v155 = v145;
        sub_1AD00FEAC(v141, v142, v143, v121, v144, v122, v145, v123, v212, v202, v216, v222, v224, v203, v226, v204, v146, v127, v147,
          v148,
          v149,
          v150,
          v151,
          v152);
        *((_QWORD *)v110 + 7) = v153;
        *((_QWORD *)v110 + 8) = v142;
        *((_QWORD *)v110 + 9) = v154;
        *((_QWORD *)v110 + 10) = v121;
        *((_QWORD *)v110 + 11) = v144;
        *((_QWORD *)v110 + 12) = v122;
        *((_QWORD *)v110 + 13) = v155;
        *((_QWORD *)v110 + 14) = v123;
        *((_QWORD *)v110 + 15) = v212;
        *((_QWORD *)v110 + 16) = v211;
        *((_QWORD *)v110 + 17) = v216;
        *((_QWORD *)v110 + 18) = v222;
        *((_QWORD *)v110 + 19) = v224;
        *((_QWORD *)v110 + 20) = v218;
        *((_QWORD *)v110 + 21) = v226;
        *((_QWORD *)v110 + 22) = v220;
        *((_QWORD *)v110 + 23) = *(_QWORD *)(v65 - 192);
        *((_QWORD *)v110 + 24) = v214;
        *((_QWORD *)v110 + 25) = *(_QWORD *)(v65 - 184);
        *((_QWORD *)v110 + 26) = *(_QWORD *)(v65 - 176);
        *((_QWORD *)v110 + 27) = *(_QWORD *)(v65 - 168);
        *((_QWORD *)v110 + 28) = *(_QWORD *)(v65 - 160);
        *((_QWORD *)v110 + 29) = *(_QWORD *)(v65 - 152);
        *((_QWORD *)v110 + 30) = *(_QWORD *)(v65 - 136);
      }
      else
      {
        v128 = *(_OWORD *)(v111 + 25);
        *(_OWORD *)(v110 + 184) = *(_OWORD *)(v111 + 23);
        *(_OWORD *)(v110 + 200) = v128;
        v129 = *(_OWORD *)(v111 + 29);
        *(_OWORD *)(v110 + 216) = *(_OWORD *)(v111 + 27);
        *(_OWORD *)(v110 + 232) = v129;
        v130 = *(_OWORD *)(v111 + 17);
        *(_OWORD *)(v110 + 120) = *(_OWORD *)(v111 + 15);
        *(_OWORD *)(v110 + 136) = v130;
        v131 = *(_OWORD *)(v111 + 21);
        *(_OWORD *)(v110 + 152) = *(_OWORD *)(v111 + 19);
        *(_OWORD *)(v110 + 168) = v131;
        v132 = *(_OWORD *)(v111 + 9);
        *(_OWORD *)(v110 + 56) = *(_OWORD *)(v111 + 7);
        *(_OWORD *)(v110 + 72) = v132;
        v133 = *(_OWORD *)(v111 + 13);
        *(_OWORD *)(v110 + 88) = *(_OWORD *)(v111 + 11);
        *(_OWORD *)(v110 + 104) = v133;
      }
    }
    else
    {
      v134 = *((_OWORD *)v111 + 13);
      *((_OWORD *)v110 + 12) = *((_OWORD *)v111 + 12);
      *((_OWORD *)v110 + 13) = v134;
      *((_OWORD *)v110 + 14) = *((_OWORD *)v111 + 14);
      *((_QWORD *)v110 + 30) = v111[30];
      v135 = *((_OWORD *)v111 + 9);
      *((_OWORD *)v110 + 8) = *((_OWORD *)v111 + 8);
      *((_OWORD *)v110 + 9) = v135;
      v136 = *((_OWORD *)v111 + 11);
      *((_OWORD *)v110 + 10) = *((_OWORD *)v111 + 10);
      *((_OWORD *)v110 + 11) = v136;
      v137 = *((_OWORD *)v111 + 5);
      *((_OWORD *)v110 + 4) = *((_OWORD *)v111 + 4);
      *((_OWORD *)v110 + 5) = v137;
      v138 = *((_OWORD *)v111 + 7);
      *((_OWORD *)v110 + 6) = *((_OWORD *)v111 + 6);
      *((_OWORD *)v110 + 7) = v138;
      v139 = *((_OWORD *)v111 + 1);
      *(_OWORD *)v110 = *(_OWORD *)v111;
      *((_OWORD *)v110 + 1) = v139;
      v140 = *((_OWORD *)v111 + 3);
      *((_OWORD *)v110 + 2) = *((_OWORD *)v111 + 2);
      *((_OWORD *)v110 + 3) = v140;
    }
    v156 = v111[31];
    v157 = v111[32];
    v158 = v111[33];
    v159 = v111[34];
    v160 = v111[35];
    v161 = v111[36];
    v162 = v111[37];
    v163 = v111[38];
    v164 = v111[39];
    v213 = v111[40];
    v215 = v111[41];
    v217 = v111[42];
    v219 = v111[43];
    v221 = v111[44];
    v223 = v111[45];
    v165 = v111[48];
    v225 = v111[46];
    v227 = v111[47];
    v166 = v111[49];
    v167 = v111[50];
    *(_QWORD *)(v65 - 192) = v165;
    *(_QWORD *)(v65 - 184) = v166;
    v168 = v111[51];
    v169 = v111[52];
    *(_QWORD *)(v65 - 176) = v167;
    *(_QWORD *)(v65 - 168) = v168;
    v170 = v111[53];
    v171 = v111[54];
    *(_QWORD *)(v65 - 160) = v169;
    *(_QWORD *)(v65 - 152) = v170;
    *(_QWORD *)(v65 - 136) = v171;
    v209 = v170;
    v210 = v171;
    v207 = v168;
    v208 = v169;
    v205 = v166;
    v206 = v167;
    v172 = v164;
    v173 = v156;
    v174 = v157;
    v175 = v158;
    v176 = v159;
    v177 = v160;
    v178 = v162;
    sub_1AD00FEAC(v156, v157, v158, v159, v160, v161, v162, v163, v164, v213, v215, v217, v219, v221, v223, v225, v227, v165, v205,
      v206,
      v207,
      v208,
      v209,
      v210);
    *((_QWORD *)v110 + 31) = v173;
    *((_QWORD *)v110 + 32) = v174;
    *((_QWORD *)v110 + 33) = v175;
    *((_QWORD *)v110 + 34) = v176;
    *((_QWORD *)v110 + 35) = v177;
    *((_QWORD *)v110 + 36) = v161;
    *((_QWORD *)v110 + 37) = v178;
    *((_QWORD *)v110 + 38) = v163;
    *((_QWORD *)v110 + 39) = v172;
    *((_QWORD *)v110 + 40) = v213;
    *((_QWORD *)v110 + 41) = v215;
    *((_QWORD *)v110 + 42) = v217;
    *((_QWORD *)v110 + 43) = v219;
    *((_QWORD *)v110 + 44) = v221;
    *((_QWORD *)v110 + 45) = v223;
    *((_QWORD *)v110 + 46) = v225;
    *((_QWORD *)v110 + 47) = v227;
    *((_QWORD *)v110 + 48) = *(_QWORD *)(v65 - 192);
    *((_QWORD *)v110 + 49) = *(_QWORD *)(v65 - 184);
    *((_QWORD *)v110 + 50) = *(_QWORD *)(v65 - 176);
    *((_QWORD *)v110 + 51) = *(_QWORD *)(v65 - 168);
    *((_QWORD *)v110 + 52) = *(_QWORD *)(v65 - 160);
    v64 = *(_QWORD *)(v65 - 144);
    *((_QWORD *)v110 + 53) = *(_QWORD *)(v65 - 152);
    *((_QWORD *)v110 + 54) = *(_QWORD *)(v65 - 136);
  }
  else
  {
    memcpy(v110, v111, 0x1B8uLL);
  }
  v179 = *(int **)(v65 - 120);
  v180 = *(_QWORD *)(v65 - 112);
  v181 = v179[12];
  v182 = v180 + v181;
  v183 = *(_QWORD *)(v65 - 96);
  v184 = (_QWORD *)(v183 + v181);
  v185 = v184[1];
  *(_QWORD *)v182 = *v184;
  *(_QWORD *)(v182 + 8) = v185;
  v186 = v184 + 2;
  v187 = v184[3];
  swift_retain();
  if (v187 == 1)
  {
    *(_OWORD *)(v182 + 16) = *v186;
  }
  else
  {
    *(_QWORD *)(v182 + 16) = *(_QWORD *)v186;
    *(_QWORD *)(v182 + 24) = v187;
    swift_bridgeObjectRetain();
  }
  v188 = v179[13];
  v189 = v180 + v188;
  v190 = v183 + v188;
  v191 = *(_QWORD *)(v190 + 8);
  if (v191 == 1)
  {
    *(_OWORD *)v189 = *(_OWORD *)v190;
  }
  else
  {
    *(_QWORD *)v189 = *(_QWORD *)v190;
    *(_QWORD *)(v189 + 8) = v191;
    swift_bridgeObjectRetain();
  }
  v192 = v179[14];
  v193 = v180 + v192;
  v194 = (uint64_t *)(v183 + v192);
  v195 = v194[1];
  if (v195 >> 60 == 15)
  {
    *(_OWORD *)v193 = *(_OWORD *)v194;
  }
  else
  {
    v196 = *v194;
    sub_1AD0040A0(*v194, v194[1]);
    *(_QWORD *)v193 = v196;
    *(_QWORD *)(v193 + 8) = v195;
  }
  v197 = v179[15];
  v198 = (_QWORD *)(v180 + v197);
  v199 = (_QWORD *)(v183 + v197);
  v200 = v199[1];
  *v198 = *v199;
  v198[1] = v200;
  swift_bridgeObjectRetain();
  swift_storeEnumTagMultiPayload();
  return v64;
}

_QWORD *sub_1AD62AE78(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  char *v6;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1AD0256A8((uint64_t)a1 + *(int *)(a3 + 20));
    type metadata accessor for BalloonPlugin.Payload(0);
    v6 = (char *)&loc_1AD62AF10 + 4 * byte_1AD69AD42[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return a1;
}

void sub_1AD6307C4(_QWORD *a1, _QWORD *a2)
{
  char *v2;

  *a1 = *a2;
  type metadata accessor for BalloonPlugin.Payload(0);
  v2 = (char *)sub_1AD630834 + 4 * byte_1AD69AD9E[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_1AD630834(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *__dst, uint64_t a16, void *a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  _OWORD *v36;
  _OWORD *v37;
  uint64_t v38;
  int *v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _OWORD *v53;
  _OWORD *v54;
  __int128 v55;
  __int128 v56;
  __int128 v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  _OWORD *v62;
  _OWORD *v63;
  __int128 v64;

  *v37 = *v36;
  v39 = (int *)type metadata accessor for MessagesAppBalloon();
  v40 = v39[5];
  v41 = (char *)v37 + v40;
  v42 = (char *)v36 + v40;
  v43 = sub_1AD63B084();
  v44 = *(_QWORD *)(v43 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v44 + 48))(v42, 1, v43))
  {
    v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v44 + 32))(v41, v42, v43);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
  }
  *(_OWORD *)((char *)v37 + v39[6]) = *(_OWORD *)((char *)v36 + v39[6]);
  v46 = v39[7];
  v47 = (char *)v37 + v46;
  v48 = (char *)v36 + v46;
  v49 = sub_1AD63AF28();
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v48, 1, v49))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E1A40);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v47, v48, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v47, 0, 1, v49);
  }
  v52 = v39[8];
  v53 = (_OWORD *)((char *)v37 + v52);
  v54 = (_OWORD *)((char *)v36 + v52);
  v55 = v54[5];
  v53[4] = v54[4];
  v53[5] = v55;
  *(_OWORD *)((char *)v53 + 89) = *(_OWORD *)((char *)v54 + 89);
  v56 = v54[1];
  *v53 = *v54;
  v53[1] = v56;
  v57 = v54[3];
  v53[2] = v54[2];
  v53[3] = v57;
  v58 = v39[9];
  v59 = (char *)v37 + v58;
  v60 = (char *)v36 + v58;
  *(_QWORD *)v59 = *(_QWORD *)v60;
  v59[8] = v60[8];
  *(_OWORD *)((char *)v37 + v39[10]) = *(_OWORD *)((char *)v36 + v39[10]);
  memcpy((char *)v37 + v39[11], (char *)v36 + v39[11], 0x1B8uLL);
  v61 = v39[12];
  v62 = (_OWORD *)((char *)v37 + v61);
  v63 = (_OWORD *)((char *)v36 + v61);
  v64 = v63[1];
  *v62 = *v63;
  v62[1] = v64;
  *(_OWORD *)((char *)v37 + v39[13]) = *(_OWORD *)((char *)v36 + v39[13]);
  *(_OWORD *)((char *)v37 + v39[14]) = *(_OWORD *)((char *)v36 + v39[14]);
  *(_OWORD *)((char *)v37 + v39[15]) = *(_OWORD *)((char *)v36 + v39[15]);
  swift_storeEnumTagMultiPayload();
  return v38;
}

_QWORD *sub_1AD633AA0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  char *v6;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  if (a1 != a2)
  {
    sub_1AD0256A8((uint64_t)a1 + *(int *)(a3 + 20));
    type metadata accessor for BalloonPlugin.Payload(0);
    v6 = (char *)&loc_1AD633B30 + 4 * byte_1AD69ADE2[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return a1;
}

uint64_t sub_1AD636DA0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1AD636DAC(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for BalloonPlugin.Payload(0);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t sub_1AD636E28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1AD636E34(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for BalloonPlugin.Payload(0);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1AD636EA8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for BalloonPlugin.Payload(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CombinedPluginAttachment.BalloonPluginIdentifier()
{
  return &type metadata for CombinedPluginAttachment.BalloonPluginIdentifier;
}

uint64_t type metadata accessor for RegisteredContextualFileSessionUnpacker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RegisteredContextualFileSessionUnpacker);
}

uint64_t type metadata accessor for RegisteredContextualFileAsyncUnpacker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RegisteredContextualFileAsyncUnpacker);
}

uint64_t type metadata accessor for RegisteredContextualFileUnpacker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RegisteredContextualFileUnpacker);
}

uint64_t type metadata accessor for RegisteredContextualUnpacker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RegisteredContextualUnpacker);
}

uint64_t type metadata accessor for RegisteredFileUnpacker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RegisteredFileUnpacker);
}

uint64_t sub_1AD636F7C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1AD636FE8(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  int v11;

  if (!a2)
    return 0;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = a2 - v5;
  if (a2 <= v5)
    goto LABEL_18;
  v7 = *(_QWORD *)(v4 + 64);
  v8 = 8 * v7;
  if (v7 <= 3)
  {
    v10 = ((v6 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      v9 = *(_DWORD *)(a1 + v7);
      if (!v9)
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      v9 = *(unsigned __int16 *)(a1 + v7);
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_18;
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_18:
      if (v5)
        return (*(uint64_t (**)(void))(v4 + 48))();
      return 0;
    }
  }
  v9 = *(unsigned __int8 *)(a1 + v7);
  if (!*(_BYTE *)(a1 + v7))
    goto LABEL_18;
LABEL_11:
  v11 = (v9 - 1) << v8;
  if (v7 > 3)
    v11 = 0;
  if (!(_DWORD)v7)
    return v5 + v11 + 1;
  if (v7 > 3)
    LODWORD(v7) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1AD637098 + 4 * byte_1AD69AEE0[(v7 - 1)]))();
}

void sub_1AD6370E8(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  BOOL v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(v6 + 64);
  v9 = a3 >= v7;
  v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      v13 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v13))
      {
        v11 = 4u;
      }
      else if (v13 >= 0x100)
      {
        v11 = 2;
      }
      else
      {
        v11 = v13 > 1;
      }
    }
    else
    {
      v11 = 1u;
    }
  }
  else
  {
    v11 = 0u;
  }
  if (v7 < a2)
  {
    v12 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v14 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v14;
          *((_BYTE *)a1 + 2) = BYTE2(v14);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v14;
        }
        else
        {
          *(_BYTE *)a1 = v14;
        }
      }
    }
    else
    {
      bzero(a1, *(_QWORD *)(v6 + 64));
      *(_DWORD *)a1 = v12;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X11 }
}

uint64_t type metadata accessor for RegisteredUnpacker(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for RegisteredUnpacker);
}

uint64_t sub_1AD6372A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
}

uint64_t sub_1AD6372BC(uint64_t a1)
{
  return sub_1AD6372F4(a1, (uint64_t (*)(_QWORD *))sub_1AD0D3610);
}

uint64_t sub_1AD6372D8(uint64_t a1)
{
  return sub_1AD6372F4(a1, (uint64_t (*)(_QWORD *))sub_1AD0D3228);
}

uint64_t sub_1AD6372F4(uint64_t a1, uint64_t (*a2)(_QWORD *))
{
  uint64_t v2;
  _QWORD *(*v5)(_QWORD *__return_ptr, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  char v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  _QWORD v15[5];
  uint64_t v16;

  v5 = *(_QWORD *(**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v2 + 104);
  v6 = swift_unknownObjectRetain();
  v7 = v5(v15, v6);
  v8 = v15[0];
  (*(void (**)(uint64_t *__return_ptr, _QWORD *))(*(_QWORD *)v2 + 128))(&v16, v7);
  v9 = v16;
  v10 = type metadata accessor for _XPCDecoder();
  v11 = swift_allocObject();
  v12 = MEMORY[0x1E0DEE9D8];
  v13 = sub_1AD4391D4(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v11 + 32) = a1;
  *(_QWORD *)(v11 + 40) = v13;
  *(_QWORD *)(v11 + 24) = v12;
  *(_BYTE *)(v11 + 16) = v8;
  *(_BYTE *)(v11 + 17) = v9;
  v15[3] = v10;
  v15[4] = sub_1ACFF9724(qword_1ED2E73F8, (uint64_t (*)(uint64_t))type metadata accessor for _XPCDecoder, (uint64_t)&unk_1AD686A68);
  v15[0] = v11;
  return a2(v15);
}

uint64_t sub_1AD6373E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *(*v7)(_QWORD *__return_ptr, uint64_t);
  uint64_t v8;
  _QWORD *v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD v23[5];
  _QWORD v24[2];
  char v25;

  v4 = v3;
  v7 = *(_QWORD *(**)(_QWORD *__return_ptr, uint64_t))(*(_QWORD *)v2 + 104);
  v8 = swift_unknownObjectRetain();
  v9 = v7(v23, v8);
  v10 = v23[0];
  (*(void (**)(_QWORD *__return_ptr, _QWORD *))(*(_QWORD *)v2 + 128))(v24, v9);
  v11 = v24[0];
  v12 = type metadata accessor for _XPCDecoder();
  v13 = swift_allocObject();
  v14 = MEMORY[0x1E0DEE9D8];
  v15 = sub_1AD4391D4(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v13 + 32) = a1;
  *(_QWORD *)(v13 + 40) = v15;
  *(_QWORD *)(v13 + 24) = v14;
  *(_BYTE *)(v13 + 16) = v10;
  *(_BYTE *)(v13 + 17) = v11;
  v23[3] = v12;
  v23[4] = sub_1ACFF9724(qword_1ED2E73F8, (uint64_t (*)(uint64_t))type metadata accessor for _XPCDecoder, (uint64_t)&unk_1AD686A68);
  v23[0] = v13;
  swift_retain();
  sub_1AD4737C0(v23, (uint64_t)v24);
  if (v4)
    return swift_release();
  v17 = v24[0];
  if (!v24[0])
  {
    v20 = sub_1AD63BD8C();
    swift_allocError();
    v22 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2DA4F0);
    *v22 = &type metadata for UnpackFileRequestMessage;
    sub_1AD63BD68();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v20 - 8) + 104))(v22, *MEMORY[0x1E0DEC460], v20);
    swift_willThrow();
    return swift_release();
  }
  v18 = v25;
  v19 = v24[1];
  result = swift_release();
  *(_QWORD *)a2 = v17;
  *(_QWORD *)(a2 + 8) = v19;
  *(_BYTE *)(a2 + 16) = v18 & 1;
  return result;
}

uint64_t sub_1AD6375B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  void (*v22)(void);
  _QWORD *v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  void (*v27)(uint64_t, unint64_t, uint64_t, uint64_t);
  void (*v28)(void);
  uint64_t v29;
  uint64_t MetatypeMetadata;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  void (*v36)(void);
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(uint64_t, uint64_t, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  __int128 v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t AssociatedConformanceWitness;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  __int128 v79;
  void (*v80)(void);
  char *v81;
  uint64_t v82;
  uint64_t v83;
  void (*v84)(void);

  v75 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  MEMORY[0x1E0C80A78](v5);
  v73 = (char *)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v74 = type metadata accessor for UnpackResponseMessage(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v71 = *(_QWORD *)(v74 - 8);
  MEMORY[0x1E0C80A78](v74);
  v70 = (char *)&v61 - v11;
  v72 = sub_1AD63BC48();
  v69 = *(_QWORD *)(v72 - 8);
  v12 = MEMORY[0x1E0C80A78](v72);
  v66 = (char *)&v61 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v78 = (char *)&v61 - v15;
  MEMORY[0x1E0C80A78](v14);
  v16 = *(void (**)(void))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v67 = (char *)&v61 - v17;
  v16();
  v18 = type metadata accessor for _XPCDecoder();
  v19 = swift_allocObject();
  swift_unknownObjectRetain();
  v20 = MEMORY[0x1E0DEE9D8];
  v21 = sub_1AD4391D4(MEMORY[0x1E0DEE9D8]);
  *(_QWORD *)(v19 + 32) = a1;
  *(_QWORD *)(v19 + 40) = v21;
  *(_QWORD *)(v19 + 24) = v20;
  *(_WORD *)(v19 + 16) = 1;
  v81 = (char *)v18;
  v82 = sub_1ACFF9724(qword_1ED2E73F8, (uint64_t (*)(uint64_t))type metadata accessor for _XPCDecoder, (uint64_t)&unk_1AD686A68);
  *(_QWORD *)&v79 = v19;
  v22 = v84;
  v23 = sub_1AD47482C(&v79);
  if (v22)
  {
    v65 = 0;
    v28 = v22;
    sub_1AD6015CC(v22, 0, 0, (unint64_t *)&v79);
    v64 = *((_QWORD *)&v79 + 1);
    v62 = v79;
    v84 = v80;
    v77 = v82;
    v78 = v81;
    v76 = v83;
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    v63 = qword_1ED2E7530;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
    v29 = swift_allocObject();
    v61 = xmmword_1AD648170;
    *(_OWORD *)(v29 + 16) = xmmword_1AD648170;
    *(_QWORD *)&v79 = AssociatedTypeWitness;
    MetatypeMetadata = swift_getMetatypeMetadata();
    v31 = sub_1AD0118E8((uint64_t)&v79, MetatypeMetadata);
    v33 = v32;
    v34 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v29 + 56) = MEMORY[0x1E0DEA968];
    v35 = sub_1AD0469B8();
    *(_QWORD *)(v29 + 64) = v35;
    *(_QWORD *)(v29 + 32) = v31;
    *(_QWORD *)(v29 + 40) = v33;
    *(_QWORD *)&v79 = v22;
    v36 = v22;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
    v37 = sub_1AD63B7A4();
    *(_QWORD *)(v29 + 96) = v34;
    *(_QWORD *)(v29 + 104) = v35;
    *(_QWORD *)(v29 + 72) = v37;
    *(_QWORD *)(v29 + 80) = v38;
    sub_1AD63BB94();
    sub_1AD63B480();
    swift_bridgeObjectRelease();
    v39 = swift_allocObject();
    *(_OWORD *)(v39 + 16) = v61;
    *(_QWORD *)&v79 = AssociatedTypeWitness;
    v40 = sub_1AD0118E8((uint64_t)&v79, MetatypeMetadata);
    *(_QWORD *)(v39 + 56) = v34;
    *(_QWORD *)(v39 + 64) = v35;
    v41 = v34;
    *(_QWORD *)(v39 + 32) = v40;
    *(_QWORD *)(v39 + 40) = v42;
    v63 = AssociatedTypeWitness;
    v43 = v62;
    v58 = v64;
    *(_QWORD *)&v79 = v62;
    *((_QWORD *)&v79 + 1) = v64;
    v80 = v84;
    v81 = v78;
    v82 = v77;
    v83 = v76;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v44 = sub_1AD63B7A4();
    *(_QWORD *)(v39 + 96) = v41;
    *(_QWORD *)(v39 + 104) = v35;
    *(_QWORD *)(v39 + 72) = v44;
    *(_QWORD *)(v39 + 80) = v45;
    sub_1AD63BB94();
    sub_1AD63B480();
    swift_bridgeObjectRelease();

    v59 = v74;
    v55 = v72;
    v53 = v69;
    v60 = (uint64_t)v70;
    v54 = v67;
    v57 = v43;
    AssociatedTypeWitness = v63;
  }
  else
  {
    v25 = (uint64_t)v23;
    v26 = v24;
    v84 = v16;
    v27 = *(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v7 + 24);
    sub_1AD0040A0((uint64_t)v23, v24);
    v27(v25, v26, v8, v7);
    v65 = 0;
    v53 = v69;
    v54 = v67;
    v55 = v72;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v67, v72);
    sub_1AD00412C(v25, v26);
    sub_1AD00412C(v25, v26);
    v56 = v78;
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v84)(v78, 0, 1, AssociatedTypeWitness);
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v54, v56, v55);
    v57 = 0;
    v58 = 0;
    v84 = 0;
    v77 = 0;
    v78 = 0;
    v76 = 0;
    v59 = v74;
    v60 = (uint64_t)v70;
  }
  v46 = (uint64_t)v66;
  (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v66, v54, v55);
  *(_QWORD *)&v79 = v57;
  *((_QWORD *)&v79 + 1) = v58;
  v80 = v84;
  v81 = v78;
  v82 = v77;
  v83 = v76;
  v47 = sub_1AD63B084();
  v48 = (uint64_t)v73;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 56))(v73, 1, 1, v47);
  sub_1AD0D2F6C(v46, &v79, v48, 1, AssociatedTypeWitness, AssociatedConformanceWitness, v60);
  v49 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v75 + 200);
  v50 = MEMORY[0x1AF44BDF0](&unk_1AD64C420, v59);
  v51 = v49(v60, v59, v50);
  (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v60, v59);
  (*(void (**)(char *, uint64_t))(v53 + 8))(v54, v55);
  return v51;
}

uint64_t sub_1AD637C00(uint64_t a1)
{
  return sub_1AD637C28(a1);
}

uint64_t sub_1AD637C14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD6375B4(a1, a2, a3);
}

uint64_t sub_1AD637C28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](a1);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  swift_getDynamicType();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return sub_1AD63C578();
}

uint64_t sub_1AD637CC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t MetatypeMetadata;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t (*v45)(uint64_t, uint64_t, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  __int128 v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t AssociatedConformanceWitness;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  void *v81;
  uint64_t v82;
  void *v83;

  v76 = a2;
  v77 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  MEMORY[0x1E0C80A78](v4);
  v72 = (char *)&v58 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = a3 + 16;
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v8 + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v75 = type metadata accessor for UnpackResponseMessage(0, AssociatedTypeWitness, AssociatedConformanceWitness, v10);
  v73 = *(_QWORD *)(v75 - 8);
  MEMORY[0x1E0C80A78](v75);
  v71 = (uint64_t)&v58 - v11;
  v74 = sub_1AD63BC48();
  v70 = *(_QWORD *)(v74 - 8);
  v12 = MEMORY[0x1E0C80A78](v74);
  v66 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v58 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v58 - v17;
  type metadata accessor for XPCDecoder();
  v19 = swift_allocObject();
  *(_WORD *)(v19 + 16) = 0;
  swift_beginAccess();
  *(_BYTE *)(v19 + 16) = 1;
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v68 = v18;
  v65 = AssociatedTypeWitness;
  v20(v18, 1, 1, AssociatedTypeWitness);
  v67 = v19;
  v21 = v83;
  sub_1AD6373E4(v77, (uint64_t)&v78);
  if (v21)
  {
    v64 = 0;
    v22 = v21;
    sub_1AD6015CC(v21, 0, 0, (unint64_t *)&v78);
    v62 = *((_QWORD *)&v78 + 1);
    v63 = v78;
    v60 = v79;
    v61 = v80;
    v83 = v81;
    v77 = v82;
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    v59 = qword_1ED2E7530;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
    v23 = swift_allocObject();
    v58 = xmmword_1AD648170;
    *(_OWORD *)(v23 + 16) = xmmword_1AD648170;
    v24 = v65;
    *(_QWORD *)&v78 = v65;
    MetatypeMetadata = swift_getMetatypeMetadata();
    v26 = sub_1AD0118E8((uint64_t)&v78, MetatypeMetadata);
    v28 = v27;
    v29 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v23 + 56) = MEMORY[0x1E0DEA968];
    v30 = sub_1AD0469B8();
    *(_QWORD *)(v23 + 64) = v30;
    *(_QWORD *)(v23 + 32) = v26;
    *(_QWORD *)(v23 + 40) = v28;
    *(_QWORD *)&v78 = v21;
    v31 = v21;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
    v32 = sub_1AD63B7A4();
    *(_QWORD *)(v23 + 96) = v29;
    *(_QWORD *)(v23 + 104) = v30;
    *(_QWORD *)(v23 + 72) = v32;
    *(_QWORD *)(v23 + 80) = v33;
    sub_1AD63BB94();
    sub_1AD63B480();
    swift_bridgeObjectRelease();
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = v58;
    *(_QWORD *)&v78 = v24;
    v35 = sub_1AD0118E8((uint64_t)&v78, MetatypeMetadata);
    *(_QWORD *)(v34 + 56) = v29;
    *(_QWORD *)(v34 + 64) = v30;
    *(_QWORD *)(v34 + 32) = v35;
    *(_QWORD *)(v34 + 40) = v36;
    v54 = v63;
    v37 = v62;
    *(_QWORD *)&v78 = v63;
    *((_QWORD *)&v78 + 1) = v62;
    v56 = v60;
    v57 = v61;
    v79 = v60;
    v80 = v61;
    v81 = v83;
    v82 = v77;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v38 = sub_1AD63B7A4();
    *(_QWORD *)(v34 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v34 + 104) = v30;
    *(_QWORD *)(v34 + 72) = v38;
    *(_QWORD *)(v34 + 80) = v39;
    sub_1AD63BB94();
    sub_1AD63B480();
    swift_bridgeObjectRelease();
    v52 = v24;

    v51 = v74;
    v49 = v70;
    v53 = v68;
    v55 = v37;
  }
  else
  {
    (*(void (**)(__int128 *, uint64_t, uint64_t))(v7 + 24))(&v78, v6, v7);
    v64 = 0;
    swift_bridgeObjectRelease();
    swift_release();
    v49 = v70;
    v50 = v68;
    v51 = v74;
    (*(void (**)(char *, uint64_t))(v70 + 8))(v68, v74);
    v52 = v65;
    v20(v16, 0, 1, v65);
    v53 = v50;
    (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v50, v16, v51);
    v54 = 0;
    v55 = 0;
    v56 = 0;
    v57 = 0;
    v83 = 0;
    v77 = 0;
  }
  v40 = (uint64_t)v66;
  (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v66, v53, v51);
  *(_QWORD *)&v78 = v54;
  *((_QWORD *)&v78 + 1) = v55;
  v79 = v56;
  v80 = v57;
  v81 = v83;
  v82 = v77;
  v41 = sub_1AD63B084();
  v42 = (uint64_t)v72;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v72, 1, 1, v41);
  v43 = v71;
  sub_1AD0D2F6C(v40, &v78, v42, 1, v52, AssociatedConformanceWitness, v71);
  v44 = v75;
  v45 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v76 + 200);
  v46 = MEMORY[0x1AF44BDF0](&unk_1AD64C420, v75);
  v47 = v45(v43, v44, v46);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v43, v44);
  (*(void (**)(char *, uint64_t))(v49 + 8))(v53, v51);
  return v47;
}

uint64_t sub_1AD638308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD637CC0(a1, a2, a3);
}

uint64_t sub_1AD63831C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t AssociatedTypeWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  void (**v16)(char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void (**v29)(char *, uint64_t);
  uint64_t *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, unint64_t, char *, uint64_t, uint64_t);
  void (**v35)(char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t MetatypeMetadata;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  void (**v44)(char *, uint64_t);
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)(uint64_t, uint64_t, uint64_t);
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  void (*v70)(char *, uint64_t, uint64_t, uint64_t);
  __int128 v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  char *v87;
  uint64_t v88;
  uint64_t v89;
  char *v90;
  __int128 v91;
  uint64_t v92;
  void (*v93)(char *, uint64_t, uint64_t, uint64_t);
  void (**v94)(char *, uint64_t);
  char *v95;
  void (**v96)(char *, uint64_t);

  v89 = a2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  MEMORY[0x1E0C80A78](v5);
  v87 = (char *)&v71 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v76 = v7;
  v75 = v8;
  v84 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v88 = type metadata accessor for UnpackResponseMessage(0, AssociatedTypeWitness, v84, v10);
  v86 = *(_QWORD *)(v88 - 8);
  MEMORY[0x1E0C80A78](v88);
  v85 = (uint64_t)&v71 - v11;
  v12 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v14 = swift_getAssociatedConformanceWitness();
  v15 = type metadata accessor for ContextualUnpackRequestMessage(0, v12, AssociatedConformanceWitness, v14);
  v16 = *(void (***)(char *, uint64_t))(v15 - 8);
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v71 - v17;
  v19 = sub_1AD63BC48();
  v82 = *(_QWORD *)(v19 - 8);
  v83 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v79 = (char *)&v71 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v90 = (char *)&v71 - v23;
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)&v71 - v24;
  type metadata accessor for XPCDecoder();
  v26 = swift_allocObject();
  *(_WORD *)(v26 + 16) = 0;
  swift_beginAccess();
  *(_BYTE *)(v26 + 16) = 1;
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v81 = v25;
  v78 = AssociatedTypeWitness;
  v27(v25, 1, 1, AssociatedTypeWitness);
  v28 = MEMORY[0x1AF44BDF0](&unk_1AD686F78, v15);
  v80 = v26;
  v29 = v96;
  sub_1AD464094(v15, a1, v15, v28, (uint64_t)v18);
  if (v29)
  {
    v77 = 0;
    v35 = v29;
    sub_1AD6015CC(v29, 0, 0, (unint64_t *)&v91);
    v75 = *((_QWORD *)&v91 + 1);
    v76 = v91;
    v73 = v92;
    v74 = v93;
    v96 = v94;
    v90 = v95;
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    v72 = qword_1ED2E7530;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
    v36 = swift_allocObject();
    v71 = xmmword_1AD648170;
    *(_OWORD *)(v36 + 16) = xmmword_1AD648170;
    v37 = v78;
    *(_QWORD *)&v91 = v78;
    MetatypeMetadata = swift_getMetatypeMetadata();
    v39 = sub_1AD0118E8((uint64_t)&v91, MetatypeMetadata);
    v41 = v40;
    v42 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v36 + 56) = MEMORY[0x1E0DEA968];
    v43 = sub_1AD0469B8();
    *(_QWORD *)(v36 + 64) = v43;
    *(_QWORD *)(v36 + 32) = v39;
    *(_QWORD *)(v36 + 40) = v41;
    *(_QWORD *)&v91 = v29;
    v44 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
    v45 = sub_1AD63B7A4();
    *(_QWORD *)(v36 + 96) = v42;
    *(_QWORD *)(v36 + 104) = v43;
    *(_QWORD *)(v36 + 72) = v45;
    *(_QWORD *)(v36 + 80) = v46;
    sub_1AD63BB94();
    sub_1AD63B480();
    swift_bridgeObjectRelease();
    v47 = swift_allocObject();
    *(_OWORD *)(v47 + 16) = v71;
    *(_QWORD *)&v91 = v37;
    v48 = sub_1AD0118E8((uint64_t)&v91, MetatypeMetadata);
    *(_QWORD *)(v47 + 56) = v42;
    *(_QWORD *)(v47 + 64) = v43;
    *(_QWORD *)(v47 + 32) = v48;
    *(_QWORD *)(v47 + 40) = v49;
    v50 = v76;
    v68 = v75;
    *(_QWORD *)&v91 = v76;
    *((_QWORD *)&v91 + 1) = v75;
    v69 = v73;
    v70 = v74;
    v92 = v73;
    v93 = v74;
    v94 = v96;
    v95 = v90;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v51 = sub_1AD63B7A4();
    *(_QWORD *)(v47 + 96) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v47 + 104) = v43;
    *(_QWORD *)(v47 + 72) = v51;
    *(_QWORD *)(v47 + 80) = v52;
    sub_1AD63BB94();
    sub_1AD63B480();
    swift_bridgeObjectRelease();
    v66 = v37;

    v62 = v82;
    v64 = v83;
    v63 = v81;
    v67 = v50;
  }
  else
  {
    v74 = v27;
    v96 = v16;
    v30 = (uint64_t *)&v18[*(int *)(v15 + 44)];
    v32 = *v30;
    v31 = v30[1];
    v33 = v76;
    v34 = *(void (**)(uint64_t, unint64_t, char *, uint64_t, uint64_t))(v76 + 24);
    sub_1AD0040A0(*v30, v31);
    v34(v32, v31, v18, v75, v33);
    v77 = 0;
    sub_1AD00412C(v32, v31);
    v96[1](v18, v15);
    v63 = v81;
    v62 = v82;
    v64 = v83;
    (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v83);
    v65 = v90;
    v66 = v78;
    v74(v90, 0, 1, v78);
    (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v63, v65, v64);
    v67 = 0;
    v68 = 0;
    v69 = 0;
    v70 = 0;
    v96 = 0;
    v90 = 0;
  }
  v53 = (uint64_t)v79;
  (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v79, v63, v64);
  *(_QWORD *)&v91 = v67;
  *((_QWORD *)&v91 + 1) = v68;
  v92 = v69;
  v93 = v70;
  v94 = v96;
  v95 = v90;
  v54 = sub_1AD63B084();
  v55 = (uint64_t)v87;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 56))(v87, 1, 1, v54);
  v56 = v85;
  sub_1AD0D2F6C(v53, &v91, v55, 1, v66, v84, v85);
  v57 = v88;
  v58 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v89 + 200);
  v59 = MEMORY[0x1AF44BDF0](&unk_1AD64C420, v88);
  v60 = v58(v56, v57, v59);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v86 + 8))(v56, v57);
  (*(void (**)(char *, uint64_t))(v62 + 8))(v63, v64);
  return v60;
}

uint64_t sub_1AD638A84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD63831C(a1, a2, a3);
}

uint64_t sub_1AD638A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v28;
  void *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t MetatypeMetadata;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t (*v56)(uint64_t, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  __int128 v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  char *v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  __int128 v89;
  uint64_t v90;
  void *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;

  v86 = a2;
  v88 = a1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  MEMORY[0x1E0C80A78](v4);
  v84 = (char *)&v69 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(a3 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v73 = v7;
  v74 = v6;
  v81 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v85 = type metadata accessor for UnpackResponseMessage(0, AssociatedTypeWitness, v81, v9);
  v83 = *(_QWORD *)(v85 - 8);
  MEMORY[0x1E0C80A78](v85);
  v82 = (uint64_t)&v69 - v10;
  v11 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v13 = swift_getAssociatedConformanceWitness();
  v14 = type metadata accessor for ContextualUnpackFileRequestMessage(0, v11, AssociatedConformanceWitness, v13);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v69 - v16;
  v18 = sub_1AD63BC48();
  v79 = *(_QWORD *)(v18 - 8);
  v80 = v18;
  v19 = MEMORY[0x1E0C80A78](v18);
  v76 = (char *)&v69 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v69 - v22;
  MEMORY[0x1E0C80A78](v21);
  v25 = (char *)&v69 - v24;
  type metadata accessor for XPCDecoder();
  v26 = swift_allocObject();
  *(_WORD *)(v26 + 16) = 0;
  swift_beginAccess();
  *(_BYTE *)(v26 + 16) = 1;
  v27 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56);
  v78 = v25;
  v75 = AssociatedTypeWitness;
  v27(v25, 1, 1, AssociatedTypeWitness);
  v28 = MEMORY[0x1AF44BDF0](&unk_1AD686FA0, v14);
  v77 = v26;
  v29 = v94;
  sub_1AD464094(v14, v88, v14, v28, (uint64_t)v17);
  if (v29)
  {
    v74 = 0;
    v33 = v29;
    sub_1AD6015CC(v29, 0, 0, (unint64_t *)&v89);
    v73 = *((_QWORD *)&v89 + 1);
    v71 = v89;
    v72 = v90;
    v94 = v91;
    v87 = v93;
    v88 = v92;
    if (qword_1ED2E7540[0] != -1)
      swift_once();
    v70 = qword_1ED2E7530;
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED2E7340);
    v34 = swift_allocObject();
    v69 = xmmword_1AD648170;
    *(_OWORD *)(v34 + 16) = xmmword_1AD648170;
    v35 = v75;
    *(_QWORD *)&v89 = v75;
    MetatypeMetadata = swift_getMetatypeMetadata();
    v37 = sub_1AD0118E8((uint64_t)&v89, MetatypeMetadata);
    v39 = v38;
    v40 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
    v41 = sub_1AD0469B8();
    *(_QWORD *)(v34 + 64) = v41;
    *(_QWORD *)(v34 + 32) = v37;
    *(_QWORD *)(v34 + 40) = v39;
    *(_QWORD *)&v89 = v29;
    v42 = v29;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E5300);
    v43 = sub_1AD63B7A4();
    *(_QWORD *)(v34 + 96) = v40;
    *(_QWORD *)(v34 + 104) = v41;
    *(_QWORD *)(v34 + 72) = v43;
    *(_QWORD *)(v34 + 80) = v44;
    sub_1AD63BB94();
    sub_1AD63B480();
    swift_bridgeObjectRelease();
    v45 = swift_allocObject();
    *(_OWORD *)(v45 + 16) = v69;
    *(_QWORD *)&v89 = v35;
    v46 = sub_1AD0118E8((uint64_t)&v89, MetatypeMetadata);
    *(_QWORD *)(v45 + 56) = v40;
    *(_QWORD *)(v45 + 64) = v41;
    v47 = v40;
    *(_QWORD *)(v45 + 32) = v46;
    *(_QWORD *)(v45 + 40) = v48;
    v49 = v71;
    v66 = v73;
    *(_QWORD *)&v89 = v71;
    *((_QWORD *)&v89 + 1) = v73;
    v67 = v72;
    v90 = v72;
    v91 = v94;
    v92 = v88;
    v93 = v87;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v50 = sub_1AD63B7A4();
    *(_QWORD *)(v45 + 96) = v47;
    *(_QWORD *)(v45 + 104) = v41;
    *(_QWORD *)(v45 + 72) = v50;
    *(_QWORD *)(v45 + 80) = v51;
    sub_1AD63BB94();
    sub_1AD63B480();
    swift_bridgeObjectRelease();
    v63 = v35;

    v68 = v85;
    v61 = v79;
    v62 = v80;
    v64 = v78;
    v65 = v49;
  }
  else
  {
    v30 = &v17[*(int *)(v14 + 44)];
    v31 = *(_QWORD *)v30;
    v32 = *((_QWORD *)v30 + 1);
    LOBYTE(v30) = v30[16];
    *(_QWORD *)&v89 = v31;
    *((_QWORD *)&v89 + 1) = v32;
    LOBYTE(v90) = (_BYTE)v30;
    (*(void (**)(__int128 *, char *, uint64_t))(v73 + 24))(&v89, v17, v74);
    v74 = 0;
    (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
    v60 = v78;
    v61 = v79;
    v62 = v80;
    (*(void (**)(char *, uint64_t))(v79 + 8))(v78, v80);
    v63 = v75;
    v27(v23, 0, 1, v75);
    v64 = v60;
    (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v60, v23, v62);
    v65 = 0;
    v66 = 0;
    v67 = 0;
    v94 = 0;
    v87 = 0;
    v88 = 0;
    v68 = v85;
  }
  v52 = (uint64_t)v76;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v76, v64, v62);
  *(_QWORD *)&v89 = v65;
  *((_QWORD *)&v89 + 1) = v66;
  v90 = v67;
  v91 = v94;
  v92 = v88;
  v93 = v87;
  v53 = sub_1AD63B084();
  v54 = (uint64_t)v84;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v84, 1, 1, v53);
  v55 = v82;
  sub_1AD0D2F6C(v52, &v89, v54, 1, v63, v81, v82);
  v56 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v86 + 200);
  v57 = MEMORY[0x1AF44BDF0](&unk_1AD64C420, v68);
  v58 = v56(v55, v68, v57);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v83 + 8))(v55, v68);
  (*(void (**)(char *, uint64_t))(v61 + 8))(v64, v62);
  return v58;
}

uint64_t sub_1AD6391B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1AD638A98(a1, a2, a3);
}

uint64_t sub_1AD6391C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t AssociatedConformanceWitness;
  uint64_t v12;
  uint64_t v13;

  v4[9] = a2;
  v4[10] = v3;
  v4[8] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  v4[11] = swift_task_alloc();
  v4[12] = *(_QWORD *)(a3 + 24);
  v4[13] = *(_QWORD *)(a3 + 16);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4[14] = AssociatedTypeWitness;
  sub_1AD63BC48();
  v4[15] = swift_task_alloc();
  v7 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v4[16] = v7;
  v9 = type metadata accessor for UnpackResponseMessage(0, AssociatedTypeWitness, v7, v8);
  v4[17] = v9;
  v4[18] = *(_QWORD *)(v9 - 8);
  v4[19] = swift_task_alloc();
  v4[20] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4[21] = swift_task_alloc();
  v10 = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = swift_getAssociatedConformanceWitness();
  v13 = type metadata accessor for ContextualUnpackFileRequestMessage(0, v10, AssociatedConformanceWitness, v12);
  v4[22] = v13;
  v4[23] = *(_QWORD *)(v13 - 8);
  v4[24] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AD6393A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t (*v13)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 64);
  type metadata accessor for XPCDecoder();
  v4 = swift_allocObject();
  *(_QWORD *)(v0 + 200) = v4;
  *(_WORD *)(v4 + 16) = 0;
  v5 = (_BYTE *)(v4 + 16);
  swift_beginAccess();
  *v5 = 1;
  v6 = MEMORY[0x1AF44BDF0](&unk_1AD686FA0, v2);
  sub_1AD464094(v2, v3, v2, v6, v1);
  v7 = *(_QWORD *)(v0 + 96);
  v8 = (uint64_t *)(*(_QWORD *)(v0 + 192) + *(int *)(*(_QWORD *)(v0 + 176) + 44));
  v9 = *v8;
  v10 = v8[1];
  LOBYTE(v8) = *((_BYTE *)v8 + 16);
  *(_QWORD *)(v0 + 40) = v9;
  *(_QWORD *)(v0 + 48) = v10;
  *(_BYTE *)(v0 + 56) = (_BYTE)v8;
  v13 = (uint64_t (*)(_QWORD, uint64_t, _QWORD, _QWORD, _QWORD))(**(int **)(v7 + 24) + *(_QWORD *)(v7 + 24));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 208) = v11;
  *v11 = v0;
  v11[1] = sub_1AD639534;
  return v13(*(_QWORD *)(v0 + 168), v0 + 40, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 104), *(_QWORD *)(v0 + 96));
}

uint64_t sub_1AD639534()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 216) = v0;
  swift_task_dealloc();
  return swift_task_switch();
}

uint64_t sub_1AD639598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  __int128 v25[3];

  v1 = *(_QWORD *)(v0 + 216);
  v2 = *(_QWORD *)(v0 + 160);
  v3 = *(_QWORD *)(v0 + 152);
  v5 = *(_QWORD *)(v0 + 128);
  v4 = *(_QWORD *)(v0 + 136);
  v7 = *(_QWORD *)(v0 + 112);
  v6 = *(_QWORD *)(v0 + 120);
  v8 = *(_QWORD *)(v0 + 88);
  v9 = *(_QWORD *)(v0 + 72);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 16))(v6, *(_QWORD *)(v0 + 168), v7);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v2 + 56))(v6, 0, 1, v7);
  v10 = sub_1AD63B084();
  memset(v25, 0, sizeof(v25));
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 56))(v8, 1, 1, v10);
  sub_1AD0D2F6C(v6, v25, v8, 1, v7, v5, v3);
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v9 + 200);
  v12 = MEMORY[0x1AF44BDF0](&unk_1AD64C420, v4);
  v13 = v11(v3, v4, v12);
  v14 = *(_QWORD *)(v0 + 192);
  v15 = *(_QWORD *)(v0 + 184);
  v24 = *(_QWORD *)(v0 + 176);
  v17 = *(_QWORD *)(v0 + 160);
  v16 = *(_QWORD *)(v0 + 168);
  v18 = *(_QWORD *)(v0 + 144);
  v19 = *(_QWORD *)(v0 + 152);
  v20 = *(_QWORD *)(v0 + 136);
  if (v1)
  {
    v21 = *(_QWORD *)(v0 + 112);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v21);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v24);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
  else
  {
    v23 = *(_QWORD *)(v0 + 112);
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v19, v20);
    (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v16, v23);
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v24);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v13);
  }
}

uint64_t sub_1AD6397C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 176);
  v3 = *(_QWORD *)(v0 + 184);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD639854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_1AD6398B8;
  return sub_1AD6391C4(a1, a2, a3);
}

uint64_t sub_1AD6398B8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_1AD63990C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  os_log_type_t v28;
  NSObject *v29;
  _BOOL4 v30;
  uint8_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  void (*v58)(char *, uint64_t, uint64_t);
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  _QWORD v78[2];
  char v79;
  uint64_t v80;
  uint64_t v81[4];
  uint64_t v82;

  v62 = a3;
  v75 = a1;
  v72 = a5;
  v6 = *(_QWORD *)(a4 + 16);
  v7 = *(_QWORD *)(a4 + 24);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v9 = v7;
  v71 = v6;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for SessionSchemaResult(255, AssociatedTypeWitness, *(_QWORD *)(AssociatedConformanceWitness + 8), v11);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2E5300);
  v12 = sub_1AD63BAE0();
  MEMORY[0x1E0C80A78](v12);
  v73 = (char *)&v57 - v13;
  v14 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED2E2CE0);
  v15 = MEMORY[0x1AF44BDF0](MEMORY[0x1E0DF0AE0], v12);
  v69 = v12;
  v65 = v14;
  v64 = v15;
  v16 = sub_1AD63C104();
  v67 = *(_QWORD *)(v16 - 8);
  v68 = v16;
  MEMORY[0x1E0C80A78](v16);
  v66 = (char *)&v57 - v17;
  v18 = swift_getAssociatedTypeWitness();
  v19 = swift_getAssociatedConformanceWitness();
  v20 = swift_getAssociatedConformanceWitness();
  v82 = type metadata accessor for ContextualUnpackFileRequestMessage(0, v18, v19, v20);
  v63 = *(_QWORD *)(v82 - 8);
  MEMORY[0x1E0C80A78](v82);
  v77 = (char *)&v57 - v21;
  v22 = sub_1AD63B084();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = MEMORY[0x1E0C80A78](v22);
  v60 = (char *)&v57 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v59 = v25;
  MEMORY[0x1E0C80A78](v24);
  v27 = (char *)&v57 - v26;
  v28 = sub_1AD63BB64();
  if (qword_1ED2E7540[0] != -1)
    swift_once();
  v29 = qword_1ED2E7530;
  v58 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v58(v27, a2, v22);
  v30 = os_log_type_enabled(v29, v28);
  v70 = a2;
  v61 = v22;
  v74 = v23;
  if (v30)
  {
    v31 = (uint8_t *)swift_slowAlloc();
    v32 = swift_slowAlloc();
    v57 = v9;
    v33 = v32;
    v81[0] = v32;
    *(_DWORD *)v31 = 136315138;
    sub_1ACFF9724((unint64_t *)&unk_1EECDEDA0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
    v34 = sub_1AD63C0D4();
    v80 = sub_1AD43D1D0(v34, v35, v81);
    sub_1AD63BC60();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v27, v22);
    _os_log_impl(&dword_1ACFC8000, v29, v28, "Task running for AsyncThrowingStream %s", v31, 0xCu);
    swift_arrayDestroy();
    v36 = v33;
    v9 = v57;
    MEMORY[0x1AF44BED4](v36, -1, -1);
    MEMORY[0x1AF44BED4](v31, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v23 + 8))(v27, v22);
  }
  v37 = (uint64_t)v77;
  type metadata accessor for XPCDecoder();
  v38 = swift_allocObject();
  *(_WORD *)(v38 + 16) = 0;
  swift_beginAccess();
  *(_BYTE *)(v38 + 16) = 1;
  v39 = v82;
  v40 = MEMORY[0x1AF44BDF0](&unk_1AD686FA0, v82);
  v41 = v76;
  sub_1AD464094(v39, v75, v39, v40, v37);
  if (v41)
    return swift_release();
  type metadata accessor for XPCEncoder();
  v43 = swift_allocObject();
  *(_WORD *)(v43 + 16) = 0;
  *(_OWORD *)(v43 + 24) = 0u;
  *(_OWORD *)(v43 + 40) = 0u;
  *(_OWORD *)(v43 + 56) = 0u;
  swift_beginAccess();
  *(_BYTE *)(v43 + 16) = 1;
  v44 = v37 + *(int *)(v39 + 44);
  v45 = *(_QWORD *)v44;
  v46 = *(_QWORD *)(v44 + 8);
  LOBYTE(v44) = *(_BYTE *)(v44 + 16);
  v78[0] = v45;
  v78[1] = v46;
  v79 = v44;
  v76 = 0;
  v47 = v9;
  v48 = v70;
  v49 = v71;
  (*(void (**)(_QWORD *, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 24))(v78, v37, v70, v71, v9);
  v50 = v60;
  v51 = v61;
  v58(v60, v48, v61);
  v52 = v74;
  v53 = (*(unsigned __int8 *)(v74 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v74 + 80);
  v54 = (char *)swift_allocObject();
  *((_QWORD *)v54 + 2) = v49;
  *((_QWORD *)v54 + 3) = v47;
  *((_QWORD *)v54 + 4) = v62;
  *((_QWORD *)v54 + 5) = v43;
  (*(void (**)(char *, char *, uint64_t))(v52 + 32))(&v54[v53], v50, v51);
  swift_retain();
  swift_retain();
  v55 = v66;
  sub_1AD63BA74();
  swift_release();
  v56 = v68;
  sub_1AD144464(v68);
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v55, v56);
  return (*(uint64_t (**)(char *, uint64_t))(v63 + 8))(v77, v82);
}

uint64_t sub_1AD639F8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED2E7140);
  v5[7] = swift_task_alloc();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[8] = AssociatedTypeWitness;
  sub_1AD63BC48();
  v5[9] = swift_task_alloc();
  v7 = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
  v5[10] = v7;
  v9 = type metadata accessor for UnpackResponseMessage(0, AssociatedTypeWitness, v7, v8);
  v5[11] = v9;
  v5[12] = *(_QWORD *)(v9 - 8);
  v5[13] = swift_task_alloc();
  v11 = type metadata accessor for SessionSchemaResult(0, AssociatedTypeWitness, v7, v10);
  v5[14] = v11;
  v5[15] = *(_QWORD *)(v11 - 8);
  v5[16] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_1AD63A0D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  __int128 v23[3];

  v1 = *(_QWORD *)(v0 + 128);
  v2 = *(_QWORD *)(v0 + 112);
  v20 = v2;
  v21 = *(_QWORD *)(v0 + 120);
  v3 = *(_QWORD *)(v0 + 88);
  v22 = *(_QWORD *)(v0 + 96);
  v4 = *(_QWORD *)(v0 + 72);
  v18 = *(_QWORD *)(v0 + 104);
  v19 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 56);
  v5 = *(_QWORD *)(v0 + 64);
  v7 = *(_QWORD *)(v0 + 40);
  v17 = *(_QWORD *)(v0 + 48);
  v8 = *(_QWORD *)(v0 + 32);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v21 + 16))(v1, *(_QWORD *)(v0 + 24), v2);
  v9 = *(_BYTE *)(v1 + *(int *)(v2 + 36));
  if (v9)
    v7 = v8;
  v10 = *(_QWORD *)(v5 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(v4, v1, v5);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v5);
  v11 = sub_1AD63B084();
  memset(v23, 0, sizeof(v23));
  v12 = *(_QWORD *)(v11 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v6, v17, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v12 + 56))(v6, 0, 1, v11);
  sub_1AD0D2F6C(v4, v23, v6, v9, v5, v19, v18);
  v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)v7 + 200);
  swift_retain();
  v14 = MEMORY[0x1AF44BDF0](&unk_1AD64C420, v3);
  v15 = v13(v18, v3, v14);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v18, v3);
  (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v1, v20);
  **(_QWORD **)(v0 + 16) = v15;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1AD63A2D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_1AD63990C(a1, a2, a3, a4, a5);
}

uint64_t sub_1AD63A2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = sub_1AD63B084();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1AD63A368(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v6 = *(unsigned __int8 *)(*(_QWORD *)(sub_1AD63B084() - 8) + 80);
  v7 = *(_QWORD *)(v2 + 32);
  v8 = *(_QWORD *)(v2 + 40);
  v9 = v2 + ((v6 + 48) & ~v6);
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v10;
  *v10 = v3;
  v10[1] = sub_1AD13F52C;
  return sub_1AD639F8C(a1, a2, v7, v8, v9);
}

uint64_t sub_1AD63A428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t sub_1AD63A440()
{
  uint64_t v0;

  sub_1AD63A4E0();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD63A490()
{
  uint64_t v0;

  sub_1AD63A4E0();
  v0 = sub_1AD63B678();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1AD63A4E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char isUniquelyReferenced_nonNull_native;
  _OWORD v5[2];
  __int128 v6;
  uint64_t v7;

  v0 = sub_1AD37A28C();
  v7 = MEMORY[0x1E0CB0338];
  *(_QWORD *)&v6 = v0;
  *((_QWORD *)&v6 + 1) = v1;
  sub_1AD002F7C(&v6, v5);
  v2 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1AD43F448(v5, 0x61447463656A624FLL, 0xED000079654B6174, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  return v2;
}

void __getPRSPosterArchiverClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRPosterSystemTimeFontConfigurationClass_block_invoke_cold_1(v0);
}

void __getPRPosterSystemTimeFontConfigurationClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRPosterColorClass_block_invoke_cold_1(v0);
}

void __getPRPosterColorClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getUIColorClass_block_invoke_cold_1(v0);
}

void __getUIColorClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRPosterTitleStyleConfigurationClass_block_invoke_cold_1(v0);
}

void __getPRPosterTitleStyleConfigurationClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRPosterRenderingConfigurationClass_block_invoke_cold_1(v0);
}

void __getPRPosterRenderingConfigurationClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRPosterConfiguredPropertiesClass_block_invoke_cold_1(v0);
}

void __getPRPosterConfiguredPropertiesClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPFServerPosterIdentityClass_block_invoke_cold_1(v0);
}

void __getPFServerPosterIdentityClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPFServerPosterPathClass_block_invoke_cold_1(v0);
}

void __getPFServerPosterPathClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRSPosterConfigurationClass_block_invoke_cold_1(v0);
}

void __getPRSPosterConfigurationClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRPosterPathUtilitiesClass_block_invoke_cold_1(v0);
}

void __getPRPosterPathUtilitiesClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRPosterContentDiscreteColorsStyleClass_block_invoke_cold_1(v0);
}

void __getPRPosterContentDiscreteColorsStyleClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRPosterContentGradientStyleClass_block_invoke_cold_1(v0);
}

void __getPRPosterContentGradientStyleClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRPosterContentVibrantMaterialStyleClass_block_invoke_cold_1(v0);
}

void __getPRPosterContentVibrantMaterialStyleClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPRPosterContentVibrantMonochromeStyleClass_block_invoke_cold_1(v0);
}

void __getPRPosterContentVibrantMonochromeStyleClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  __getPISegmentationLoaderClass_block_invoke_cold_1(v0);
}

void __getPISegmentationLoaderClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  -[NSCoder(_BlastDoorLPExtras) _bd_lp_encodeObjectIfNotNil:forKey:].cold.1(v0);
}

void URLForKey_cold_1()
{
  __assert_rtn("URLForKey", "LPMetadata.m", 192, "!URLString || [URLString isKindOfClass:[NSString class]]");
}

void stringForKey_cold_1()
{
  __assert_rtn("stringForKey", "LPMetadata.m", 116, "!value || [value isKindOfClass:[NSString class]]");
}

void numberForKey_cold_1()
{
  __assert_rtn("numberForKey", "LPMetadata.m", 128, "value == nil || [value isKindOfClass:[NSNumber class]]");
}

void arrayOfDictionariesForKey_cold_1()
{
  __assert_rtn("arrayOfDictionariesForKey", "LPMetadata.m", 161, "[childDict isKindOfClass:[NSDictionary class]]");
}

void arrayOfDictionariesForKey_cold_2()
{
  __assert_rtn("arrayOfDictionariesForKey", "LPMetadata.m", 155, "!array || [array isKindOfClass:[NSArray class]]");
}

void BD_IOSurfaceDisallowForever_cold_1(os_log_t log)
{
  uint8_t v1[8];
  uint64_t v2;

  v2 = *MEMORY[0x1E0C80C00];
  *(_WORD *)v1 = 0;
  _os_log_error_impl(&dword_1ACFC8000, log, OS_LOG_TYPE_ERROR, "Unable soft link IOSurfaceDisallowForever", v1, 2u);
}

uint64_t __getDKDrawingStrokePointClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getDKDrawingStrokeClass_block_invoke_cold_1(v0);
}

uint64_t __getDKDrawingStrokeClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getDKDrawingClass_block_invoke_cold_1(v0);
}

uint64_t __getDKDrawingClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getHWHandwritingItemClass_block_invoke_cold_1(v0);
}

uint64_t __getHWHandwritingItemClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getHWEncodingClass_block_invoke_cold_1(v0);
}

uint64_t __getHWEncodingClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getAVTAvatarRecordClass_block_invoke_cold_1(v0);
}

uint64_t __getAVTAvatarRecordClass_block_invoke_cold_1()
{
  uint64_t v0;

  v0 = abort_report_np();
  return __getAVTAvatarRecordSerializerClass_block_invoke_cold_1(v0);
}

void __getAVTAvatarRecordSerializerClass_block_invoke_cold_1()
{
  NSObject *v0;

  v0 = abort_report_np();
  __dlsym_callback_notify_block_invoke_cold_1(v0);
}

void __dlsym_callback_notify_block_invoke_cold_1(os_log_t log)
{
  int v1;
  const char *v2;
  uint64_t v3;

  v3 = *MEMORY[0x1E0C80C00];
  v1 = 136315138;
  v2 = "void dlsym_callback_notify(const char *)_block_invoke";
  _os_log_error_impl(&dword_1ACFC8000, log, OS_LOG_TYPE_ERROR, "%s: failed to create CA payload for event com.apple.dlsym_callback.blastdoor", (uint8_t *)&v1, 0xCu);
}

uint64_t sub_1AD63AD00()
{
  return MEMORY[0x1E0CADE70]();
}

uint64_t sub_1AD63AD0C()
{
  return MEMORY[0x1E0CADE90]();
}

uint64_t sub_1AD63AD18()
{
  return MEMORY[0x1E0CAE220]();
}

uint64_t sub_1AD63AD24()
{
  return MEMORY[0x1E0CAE248]();
}

uint64_t sub_1AD63AD30()
{
  return MEMORY[0x1E0CAE300]();
}

uint64_t sub_1AD63AD3C()
{
  return MEMORY[0x1E0CAE310]();
}

uint64_t sub_1AD63AD48()
{
  return MEMORY[0x1E0CAE3A0]();
}

uint64_t sub_1AD63AD54()
{
  return MEMORY[0x1E0CAE430]();
}

uint64_t sub_1AD63AD60()
{
  return MEMORY[0x1E0CAE440]();
}

uint64_t sub_1AD63AD6C()
{
  return MEMORY[0x1E0CAE4B8]();
}

uint64_t sub_1AD63AD78()
{
  return MEMORY[0x1E0CAE6D0]();
}

uint64_t sub_1AD63AD84()
{
  return MEMORY[0x1E0CAE6F8]();
}

uint64_t sub_1AD63AD90()
{
  return MEMORY[0x1E0CAE8A8]();
}

uint64_t sub_1AD63AD9C()
{
  return MEMORY[0x1E0CAE8B8]();
}

uint64_t sub_1AD63ADA8()
{
  return MEMORY[0x1E0CAE8D0]();
}

uint64_t sub_1AD63ADB4()
{
  return MEMORY[0x1E0CAE8D8]();
}

uint64_t sub_1AD63ADC0()
{
  return MEMORY[0x1E0CAE8F0]();
}

uint64_t sub_1AD63ADCC()
{
  return MEMORY[0x1E0CAE8F8]();
}

uint64_t sub_1AD63ADD8()
{
  return MEMORY[0x1E0CAE910]();
}

uint64_t sub_1AD63ADE4()
{
  return MEMORY[0x1E0CAF628]();
}

uint64_t sub_1AD63ADF0()
{
  return MEMORY[0x1E0CAF638]();
}

uint64_t sub_1AD63ADFC()
{
  return MEMORY[0x1E0CAF668]();
}

uint64_t sub_1AD63AE08()
{
  return MEMORY[0x1E0CAF670]();
}

uint64_t sub_1AD63AE14()
{
  return MEMORY[0x1E0CAF750]();
}

uint64_t sub_1AD63AE20()
{
  return MEMORY[0x1E0CAF768]();
}

uint64_t sub_1AD63AE2C()
{
  return MEMORY[0x1E0CAF790]();
}

uint64_t sub_1AD63AE38()
{
  return MEMORY[0x1E0CAF940]();
}

uint64_t sub_1AD63AE44()
{
  return MEMORY[0x1E0CAF980]();
}

uint64_t sub_1AD63AE50()
{
  return MEMORY[0x1E0CAF990]();
}

uint64_t sub_1AD63AE5C()
{
  return MEMORY[0x1E0CAFD30]();
}

uint64_t sub_1AD63AE68()
{
  return MEMORY[0x1E0CAFD90]();
}

uint64_t sub_1AD63AE74()
{
  return MEMORY[0x1E0CAFDA0]();
}

uint64_t sub_1AD63AE80()
{
  return MEMORY[0x1E0CAFDB0]();
}

uint64_t sub_1AD63AE8C()
{
  return MEMORY[0x1E0CAFDE0]();
}

uint64_t sub_1AD63AE98()
{
  return MEMORY[0x1E0CAFE38]();
}

uint64_t sub_1AD63AEA4()
{
  return MEMORY[0x1E0CAFE80]();
}

uint64_t sub_1AD63AEB0()
{
  return MEMORY[0x1E0CAFEB8]();
}

uint64_t sub_1AD63AEBC()
{
  return MEMORY[0x1E0CAFED8]();
}

uint64_t sub_1AD63AEC8()
{
  return MEMORY[0x1E0CAFEE0]();
}

uint64_t sub_1AD63AED4()
{
  return MEMORY[0x1E0CAFF00]();
}

uint64_t sub_1AD63AEE0()
{
  return MEMORY[0x1E0CAFF20]();
}

uint64_t sub_1AD63AEEC()
{
  return MEMORY[0x1E0CAFF40]();
}

uint64_t sub_1AD63AEF8()
{
  return MEMORY[0x1E0CAFF80]();
}

uint64_t sub_1AD63AF04()
{
  return MEMORY[0x1E0CAFF90]();
}

uint64_t sub_1AD63AF10()
{
  return MEMORY[0x1E0CAFFD0]();
}

uint64_t sub_1AD63AF1C()
{
  return MEMORY[0x1E0CAFFE0]();
}

uint64_t sub_1AD63AF28()
{
  return MEMORY[0x1E0CAFFF8]();
}

uint64_t sub_1AD63AF34()
{
  return MEMORY[0x1E0CB0088]();
}

uint64_t sub_1AD63AF40()
{
  return MEMORY[0x1E0CB00A0]();
}

uint64_t sub_1AD63AF4C()
{
  return MEMORY[0x1E0CB00B0]();
}

uint64_t sub_1AD63AF58()
{
  return MEMORY[0x1E0CB00E8]();
}

uint64_t sub_1AD63AF64()
{
  return MEMORY[0x1E0CB00F0]();
}

uint64_t sub_1AD63AF70()
{
  return MEMORY[0x1E0CB0128]();
}

uint64_t sub_1AD63AF7C()
{
  return MEMORY[0x1E0CB0138]();
}

uint64_t sub_1AD63AF88()
{
  return MEMORY[0x1E0CB0140]();
}

uint64_t sub_1AD63AF94()
{
  return MEMORY[0x1E0CB01B0]();
}

uint64_t sub_1AD63AFA0()
{
  return MEMORY[0x1E0CB01F0]();
}

uint64_t sub_1AD63AFAC()
{
  return MEMORY[0x1E0CB01F8]();
}

uint64_t sub_1AD63AFB8()
{
  return MEMORY[0x1E0CB0228]();
}

uint64_t sub_1AD63AFC4()
{
  return MEMORY[0x1E0CB0270]();
}

uint64_t sub_1AD63AFD0()
{
  return MEMORY[0x1E0CB02B0]();
}

uint64_t sub_1AD63AFDC()
{
  return MEMORY[0x1E0CB02C0]();
}

uint64_t sub_1AD63AFE8()
{
  return MEMORY[0x1E0CB02D8]();
}

uint64_t sub_1AD63AFF4()
{
  return MEMORY[0x1E0CB02F8]();
}

uint64_t sub_1AD63B000()
{
  return MEMORY[0x1E0CB03B8]();
}

uint64_t sub_1AD63B00C()
{
  return MEMORY[0x1E0CB03C0]();
}

uint64_t sub_1AD63B018()
{
  return MEMORY[0x1E0CB06B8]();
}

uint64_t sub_1AD63B024()
{
  return MEMORY[0x1E0CB07E8]();
}

uint64_t sub_1AD63B030()
{
  return MEMORY[0x1E0CB0860]();
}

uint64_t sub_1AD63B03C()
{
  return MEMORY[0x1E0CB0870]();
}

uint64_t sub_1AD63B048()
{
  return MEMORY[0x1E0CB0900]();
}

uint64_t sub_1AD63B054()
{
  return MEMORY[0x1E0CB0910]();
}

uint64_t sub_1AD63B060()
{
  return MEMORY[0x1E0CB0930]();
}

uint64_t sub_1AD63B06C()
{
  return MEMORY[0x1E0CB0948]();
}

uint64_t sub_1AD63B078()
{
  return MEMORY[0x1E0CB0988]();
}

uint64_t sub_1AD63B084()
{
  return MEMORY[0x1E0CB0998]();
}

uint64_t sub_1AD63B090()
{
  return MEMORY[0x1E0DE9468]();
}

uint64_t sub_1AD63B09C()
{
  return MEMORY[0x1E0DE9498]();
}

uint64_t sub_1AD63B0A8()
{
  return MEMORY[0x1E0DE94B8]();
}

uint64_t sub_1AD63B0B4()
{
  return MEMORY[0x1E0DEFDC0]();
}

uint64_t sub_1AD63B0C0()
{
  return MEMORY[0x1E0DEFDC8]();
}

uint64_t sub_1AD63B0CC()
{
  return MEMORY[0x1E0DEFDD0]();
}

uint64_t sub_1AD63B0D8()
{
  return MEMORY[0x1E0DEFDD8]();
}

uint64_t sub_1AD63B0E4()
{
  return MEMORY[0x1E0DEFDE8]();
}

uint64_t sub_1AD63B0F0()
{
  return MEMORY[0x1E0DEFE18]();
}

uint64_t sub_1AD63B0FC()
{
  return MEMORY[0x1E0DEFE28]();
}

uint64_t sub_1AD63B108()
{
  return MEMORY[0x1E0DEFE40]();
}

uint64_t sub_1AD63B114()
{
  return MEMORY[0x1E0DEFE50]();
}

uint64_t sub_1AD63B120()
{
  return MEMORY[0x1E0DEFE90]();
}

uint64_t sub_1AD63B12C()
{
  return MEMORY[0x1E0DEFEC0]();
}

uint64_t sub_1AD63B138()
{
  return MEMORY[0x1E0DEFEC8]();
}

uint64_t sub_1AD63B144()
{
  return MEMORY[0x1E0DEFEE0]();
}

uint64_t sub_1AD63B150()
{
  return MEMORY[0x1E0DEF0A0]();
}

uint64_t sub_1AD63B15C()
{
  return MEMORY[0x1E0DEF0A8]();
}

uint64_t sub_1AD63B168()
{
  return MEMORY[0x1E0DEF0B0]();
}

uint64_t sub_1AD63B174()
{
  return MEMORY[0x1E0DF1DE0]();
}

uint64_t sub_1AD63B180()
{
  return MEMORY[0x1E0DF1DE8]();
}

uint64_t sub_1AD63B18C()
{
  return MEMORY[0x1E0DF1DF8]();
}

uint64_t sub_1AD63B198()
{
  return MEMORY[0x1E0DF1E00]();
}

uint64_t sub_1AD63B1A4()
{
  return MEMORY[0x1E0DF1E18]();
}

uint64_t sub_1AD63B1B0()
{
  return MEMORY[0x1E0DF1E20]();
}

uint64_t sub_1AD63B1BC()
{
  return MEMORY[0x1E0DF1E28]();
}

uint64_t sub_1AD63B1C8()
{
  return MEMORY[0x1E0DF1E30]();
}

uint64_t sub_1AD63B1D4()
{
  return MEMORY[0x1E0DEFF20]();
}

uint64_t sub_1AD63B1E0()
{
  return MEMORY[0x1E0DEFF28]();
}

uint64_t sub_1AD63B1EC()
{
  return MEMORY[0x1E0DEFF30]();
}

uint64_t sub_1AD63B1F8()
{
  return MEMORY[0x1E0DF1EA0]();
}

uint64_t sub_1AD63B204()
{
  return MEMORY[0x1E0DF1EB8]();
}

uint64_t sub_1AD63B210()
{
  return MEMORY[0x1E0DEFF38]();
}

uint64_t sub_1AD63B21C()
{
  return MEMORY[0x1E0DF1ED0]();
}

uint64_t sub_1AD63B228()
{
  return MEMORY[0x1E0DF1F50]();
}

uint64_t sub_1AD63B234()
{
  return MEMORY[0x1E0D3E988]();
}

uint64_t sub_1AD63B240()
{
  return MEMORY[0x1E0D3E990]();
}

uint64_t sub_1AD63B24C()
{
  return MEMORY[0x1E0D3E998]();
}

uint64_t sub_1AD63B258()
{
  return MEMORY[0x1E0D3EA60]();
}

uint64_t sub_1AD63B264()
{
  return MEMORY[0x1E0D3EA68]();
}

uint64_t sub_1AD63B270()
{
  return MEMORY[0x1E0D3EA80]();
}

uint64_t sub_1AD63B27C()
{
  return MEMORY[0x1E0D3EA90]();
}

uint64_t sub_1AD63B288()
{
  return MEMORY[0x1E0D3EA98]();
}

uint64_t sub_1AD63B294()
{
  return MEMORY[0x1E0D3EAB8]();
}

uint64_t sub_1AD63B2A0()
{
  return MEMORY[0x1E0D3EAD0]();
}

uint64_t sub_1AD63B2AC()
{
  return MEMORY[0x1E0D3EAE0]();
}

uint64_t sub_1AD63B2B8()
{
  return MEMORY[0x1E0D3EB10]();
}

uint64_t sub_1AD63B2C4()
{
  return MEMORY[0x1E0D3EB20]();
}

uint64_t sub_1AD63B2D0()
{
  return MEMORY[0x1E0D3EB58]();
}

uint64_t sub_1AD63B2DC()
{
  return MEMORY[0x1E0D3EB70]();
}

uint64_t sub_1AD63B2E8()
{
  return MEMORY[0x1E0D3EB88]();
}

uint64_t sub_1AD63B2F4()
{
  return MEMORY[0x1E0D3EB98]();
}

uint64_t sub_1AD63B300()
{
  return MEMORY[0x1E0D3EBC0]();
}

uint64_t sub_1AD63B30C()
{
  return MEMORY[0x1E0D3EBC8]();
}

uint64_t sub_1AD63B318()
{
  return MEMORY[0x1E0D3EBD8]();
}

uint64_t sub_1AD63B324()
{
  return MEMORY[0x1E0D3EBE0]();
}

uint64_t sub_1AD63B330()
{
  return MEMORY[0x1E0D3EC48]();
}

uint64_t sub_1AD63B33C()
{
  return MEMORY[0x1E0D3EC50]();
}

uint64_t sub_1AD63B348()
{
  return MEMORY[0x1E0D3EC58]();
}

uint64_t sub_1AD63B354()
{
  return MEMORY[0x1E0D3EC68]();
}

uint64_t sub_1AD63B360()
{
  return MEMORY[0x1E0D3EC80]();
}

uint64_t sub_1AD63B36C()
{
  return MEMORY[0x1E0D3ECF8]();
}

uint64_t sub_1AD63B378()
{
  return MEMORY[0x1E0D3ED00]();
}

uint64_t sub_1AD63B384()
{
  return MEMORY[0x1E0D3ED28]();
}

uint64_t sub_1AD63B390()
{
  return MEMORY[0x1E0D3ED30]();
}

uint64_t sub_1AD63B39C()
{
  return MEMORY[0x1E0D3ED48]();
}

uint64_t sub_1AD63B3A8()
{
  return MEMORY[0x1E0D3ED58]();
}

uint64_t sub_1AD63B3B4()
{
  return MEMORY[0x1E0D3ED68]();
}

uint64_t sub_1AD63B3C0()
{
  return MEMORY[0x1E0D3ED70]();
}

uint64_t sub_1AD63B3CC()
{
  return MEMORY[0x1E0D3ED80]();
}

uint64_t sub_1AD63B3D8()
{
  return MEMORY[0x1E0D3ED88]();
}

uint64_t sub_1AD63B3E4()
{
  return MEMORY[0x1E0D3ED98]();
}

uint64_t sub_1AD63B3F0()
{
  return MEMORY[0x1E0D3EDA0]();
}

uint64_t sub_1AD63B3FC()
{
  return MEMORY[0x1E0D3EF28]();
}

uint64_t sub_1AD63B408()
{
  return MEMORY[0x1E0D3EF38]();
}

uint64_t sub_1AD63B414()
{
  return MEMORY[0x1E0D3EF40]();
}

uint64_t sub_1AD63B420()
{
  return MEMORY[0x1E0D3EF48]();
}

uint64_t sub_1AD63B42C()
{
  return MEMORY[0x1E0DF0180]();
}

uint64_t sub_1AD63B438()
{
  return MEMORY[0x1E0DF0190]();
}

uint64_t sub_1AD63B444()
{
  return MEMORY[0x1E0DF01F8]();
}

uint64_t sub_1AD63B450()
{
  return MEMORY[0x1E0DF0220]();
}

uint64_t sub_1AD63B45C()
{
  return MEMORY[0x1E0DF0268]();
}

uint64_t sub_1AD63B468()
{
  return MEMORY[0x1E0DF0340]();
}

uint64_t sub_1AD63B474()
{
  return MEMORY[0x1E0DF0380]();
}

uint64_t sub_1AD63B480()
{
  return MEMORY[0x1E0DF2078]();
}

uint64_t sub_1AD63B48C()
{
  return MEMORY[0x1E0DF2080]();
}

uint64_t sub_1AD63B498()
{
  return MEMORY[0x1E0DF2240]();
}

uint64_t sub_1AD63B4A4()
{
  return MEMORY[0x1E0DF2248]();
}

uint64_t sub_1AD63B4B0()
{
  return MEMORY[0x1E0DF2258]();
}

uint64_t sub_1AD63B4BC()
{
  return MEMORY[0x1E0D43EA0]();
}

uint64_t sub_1AD63B4C8()
{
  return MEMORY[0x1E0D43EA8]();
}

uint64_t sub_1AD63B4D4()
{
  return MEMORY[0x1E0D43EB8]();
}

uint64_t sub_1AD63B4E0()
{
  return MEMORY[0x1E0D43EC0]();
}

uint64_t sub_1AD63B4EC()
{
  return MEMORY[0x1E0D43ED0]();
}

uint64_t sub_1AD63B4F8()
{
  return MEMORY[0x1E0D43ED8]();
}

uint64_t sub_1AD63B504()
{
  return MEMORY[0x1E0D43EF8]();
}

uint64_t sub_1AD63B510()
{
  return MEMORY[0x1E0D43F08]();
}

uint64_t sub_1AD63B51C()
{
  return MEMORY[0x1E0D43F10]();
}

uint64_t sub_1AD63B528()
{
  return MEMORY[0x1E0D43F20]();
}

uint64_t sub_1AD63B534()
{
  return MEMORY[0x1E0D43F28]();
}

uint64_t sub_1AD63B540()
{
  return MEMORY[0x1E0D43F40]();
}

uint64_t sub_1AD63B54C()
{
  return MEMORY[0x1E0D43F48]();
}

uint64_t sub_1AD63B558()
{
  return MEMORY[0x1E0D43F58]();
}

uint64_t sub_1AD63B564()
{
  return MEMORY[0x1E0D43F68]();
}

uint64_t sub_1AD63B570()
{
  return MEMORY[0x1E0D43FA0]();
}

uint64_t sub_1AD63B57C()
{
  return MEMORY[0x1E0D43FC0]();
}

uint64_t sub_1AD63B588()
{
  return MEMORY[0x1E0D43FD0]();
}

uint64_t sub_1AD63B594()
{
  return MEMORY[0x1E0D43FD8]();
}

uint64_t sub_1AD63B5A0()
{
  return MEMORY[0x1E0D43FE0]();
}

uint64_t sub_1AD63B5AC()
{
  return MEMORY[0x1E0D44000]();
}

uint64_t sub_1AD63B5B8()
{
  return MEMORY[0x1E0DF0418]();
}

uint64_t sub_1AD63B5C4()
{
  return MEMORY[0x1E0DF0420]();
}

uint64_t sub_1AD63B5D0()
{
  return MEMORY[0x1E0DF2010]();
}

uint64_t sub_1AD63B5DC()
{
  return MEMORY[0x1E0DEF398]();
}

uint64_t sub_1AD63B5E8()
{
  return MEMORY[0x1E0DF2040]();
}

uint64_t sub_1AD63B5F4()
{
  return MEMORY[0x1E0DEF3B8]();
}

uint64_t sub_1AD63B600()
{
  return MEMORY[0x1E0DEF578]();
}

uint64_t sub_1AD63B60C()
{
  return MEMORY[0x1E0DEF5B0]();
}

uint64_t sub_1AD63B618()
{
  return MEMORY[0x1E0DEF600]();
}

uint64_t sub_1AD63B624()
{
  return MEMORY[0x1E0DEF610]();
}

uint64_t sub_1AD63B630()
{
  return MEMORY[0x1E0DEF648]();
}

uint64_t sub_1AD63B63C()
{
  return MEMORY[0x1E0DEF688]();
}

uint64_t sub_1AD63B648()
{
  return MEMORY[0x1E0DEF698]();
}

uint64_t sub_1AD63B654()
{
  return MEMORY[0x1E0DEF6B8]();
}

uint64_t sub_1AD63B660()
{
  return MEMORY[0x1E0DEF158]();
}

uint64_t sub_1AD63B66C()
{
  return MEMORY[0x1E0DEF160]();
}

uint64_t sub_1AD63B678()
{
  return MEMORY[0x1E0CB17D8]();
}

uint64_t sub_1AD63B684()
{
  return MEMORY[0x1E0CB17F8]();
}

uint64_t sub_1AD63B690()
{
  return MEMORY[0x1E0CB1808]();
}

uint64_t sub_1AD63B69C()
{
  return MEMORY[0x1E0DE9E38]();
}

uint64_t sub_1AD63B6A8()
{
  return MEMORY[0x1E0DEA0F0]();
}

uint64_t sub_1AD63B6B4()
{
  return MEMORY[0x1E0DEA1B8]();
}

uint64_t sub_1AD63B6C0()
{
  return MEMORY[0x1E0DEA1C0]();
}

uint64_t sub_1AD63B6CC()
{
  return MEMORY[0x1E0DEA258]();
}

uint64_t sub_1AD63B6D8()
{
  return MEMORY[0x1E0DEA270]();
}

uint64_t sub_1AD63B6E4()
{
  return MEMORY[0x1E0DEA278]();
}

uint64_t sub_1AD63B6F0()
{
  return MEMORY[0x1E0DEA280]();
}

uint64_t sub_1AD63B6FC()
{
  return MEMORY[0x1E0DEA2B0]();
}

uint64_t sub_1AD63B708()
{
  return MEMORY[0x1E0DEA2B8]();
}

uint64_t sub_1AD63B714()
{
  return MEMORY[0x1E0DEA2C0]();
}

uint64_t sub_1AD63B720()
{
  return MEMORY[0x1E0DEA3B0]();
}

uint64_t sub_1AD63B72C()
{
  return MEMORY[0x1E0DEA3C8]();
}

uint64_t sub_1AD63B738()
{
  return MEMORY[0x1E0DEA568]();
}

uint64_t sub_1AD63B744()
{
  return MEMORY[0x1E0CB1940]();
}

uint64_t sub_1AD63B750()
{
  return MEMORY[0x1E0CB1960]();
}

uint64_t sub_1AD63B75C()
{
  return MEMORY[0x1E0CB1970]();
}

uint64_t sub_1AD63B768()
{
  return MEMORY[0x1E0CB1980]();
}

uint64_t sub_1AD63B774()
{
  return MEMORY[0x1E0CB1990]();
}

uint64_t sub_1AD63B780()
{
  return MEMORY[0x1E0CB19E8]();
}

uint64_t sub_1AD63B78C()
{
  return MEMORY[0x1E0CB1A18]();
}

uint64_t sub_1AD63B798()
{
  return MEMORY[0x1E0DEA5F8]();
}

uint64_t sub_1AD63B7A4()
{
  return MEMORY[0x1E0DEA618]();
}

uint64_t sub_1AD63B7B0()
{
  return MEMORY[0x1E0DEA630]();
}

uint64_t sub_1AD63B7BC()
{
  return MEMORY[0x1E0DEA658]();
}

uint64_t sub_1AD63B7C8()
{
  return MEMORY[0x1E0DEA678]();
}

uint64_t sub_1AD63B7D4()
{
  return MEMORY[0x1E0DEA6B8]();
}

uint64_t sub_1AD63B7E0()
{
  return MEMORY[0x1E0DEA6F0]();
}

uint64_t sub_1AD63B7EC()
{
  return MEMORY[0x1E0DEA6F8]();
}

uint64_t sub_1AD63B7F8()
{
  return MEMORY[0x1E0DEA758]();
}

uint64_t sub_1AD63B804()
{
  return MEMORY[0x1E0DEA7B8]();
}

uint64_t sub_1AD63B810()
{
  return MEMORY[0x1E0DEA800]();
}

uint64_t sub_1AD63B81C()
{
  return MEMORY[0x1E0DEA828]();
}

uint64_t sub_1AD63B828()
{
  return MEMORY[0x1E0DEA840]();
}

uint64_t sub_1AD63B834()
{
  return MEMORY[0x1E0DEA850]();
}

uint64_t sub_1AD63B840()
{
  return MEMORY[0x1E0DEA858]();
}

uint64_t sub_1AD63B84C()
{
  return MEMORY[0x1E0DEA870]();
}

uint64_t sub_1AD63B858()
{
  return MEMORY[0x1E0DEA878]();
}

uint64_t sub_1AD63B864()
{
  return MEMORY[0x1E0DEA880]();
}

uint64_t sub_1AD63B870()
{
  return MEMORY[0x1E0DEA908]();
}

uint64_t sub_1AD63B87C()
{
  return MEMORY[0x1E0DEA920]();
}

uint64_t sub_1AD63B888()
{
  return MEMORY[0x1E0DEA940]();
}

uint64_t sub_1AD63B894()
{
  return MEMORY[0x1E0DEAA08]();
}

uint64_t sub_1AD63B8A0()
{
  return MEMORY[0x1E0DEAA40]();
}

uint64_t sub_1AD63B8AC()
{
  return MEMORY[0x1E0DEAA50]();
}

uint64_t sub_1AD63B8B8()
{
  return MEMORY[0x1E0DEAC88]();
}

uint64_t sub_1AD63B8C4()
{
  return MEMORY[0x1E0DEACA0]();
}

uint64_t sub_1AD63B8D0()
{
  return MEMORY[0x1E0DEACB8]();
}

uint64_t sub_1AD63B8DC()
{
  return MEMORY[0x1E0DEACC0]();
}

uint64_t sub_1AD63B8E8()
{
  return MEMORY[0x1E0DEACD8]();
}

uint64_t sub_1AD63B8F4()
{
  return MEMORY[0x1E0DEACE0]();
}

uint64_t sub_1AD63B900()
{
  return MEMORY[0x1E0DEACE8]();
}

uint64_t sub_1AD63B90C()
{
  return MEMORY[0x1E0DEACF0]();
}

uint64_t sub_1AD63B918()
{
  return MEMORY[0x1E0DEACF8]();
}

uint64_t sub_1AD63B924()
{
  return MEMORY[0x1E0DEAD18]();
}

uint64_t sub_1AD63B930()
{
  return MEMORY[0x1E0DEAD30]();
}

uint64_t sub_1AD63B93C()
{
  return MEMORY[0x1E0DEAD38]();
}

uint64_t sub_1AD63B948()
{
  return MEMORY[0x1E0DEAD50]();
}

uint64_t sub_1AD63B954()
{
  return MEMORY[0x1E0DEAD58]();
}

uint64_t sub_1AD63B960()
{
  return MEMORY[0x1E0DEAD60]();
}

uint64_t sub_1AD63B96C()
{
  return MEMORY[0x1E0DEAD68]();
}

uint64_t sub_1AD63B978()
{
  return MEMORY[0x1E0DEAD70]();
}

uint64_t sub_1AD63B984()
{
  return MEMORY[0x1E0DEADA0]();
}

uint64_t sub_1AD63B990()
{
  return MEMORY[0x1E0CB1AC0]();
}

uint64_t sub_1AD63B99C()
{
  return MEMORY[0x1E0CB1AD0]();
}

uint64_t sub_1AD63B9A8()
{
  return MEMORY[0x1E0CB1AE0]();
}

uint64_t sub_1AD63B9B4()
{
  return MEMORY[0x1E0CB1AE8]();
}

uint64_t sub_1AD63B9C0()
{
  return MEMORY[0x1E0DEADB0]();
}

uint64_t sub_1AD63B9CC()
{
  return MEMORY[0x1E0DEADB8]();
}

uint64_t sub_1AD63B9D8()
{
  return MEMORY[0x1E0DEADE8]();
}

uint64_t sub_1AD63B9E4()
{
  return MEMORY[0x1E0DEAE10]();
}

uint64_t sub_1AD63B9F0()
{
  return MEMORY[0x1E0DEAE58]();
}

uint64_t sub_1AD63B9FC()
{
  return MEMORY[0x1E0DEAE80]();
}

uint64_t sub_1AD63BA08()
{
  return MEMORY[0x1E0DEAEC8]();
}

uint64_t sub_1AD63BA14()
{
  return MEMORY[0x1E0DF05B8]();
}

uint64_t sub_1AD63BA20()
{
  return MEMORY[0x1E0DF0748]();
}

uint64_t sub_1AD63BA2C()
{
  return MEMORY[0x1E0DF0750]();
}

uint64_t sub_1AD63BA38()
{
  return MEMORY[0x1E0DF07D8]();
}

uint64_t sub_1AD63BA44()
{
  return MEMORY[0x1E0DF07E8]();
}

uint64_t sub_1AD63BA50()
{
  return MEMORY[0x1E0DF07F8]();
}

uint64_t sub_1AD63BA5C()
{
  return MEMORY[0x1E0DF0800]();
}

uint64_t sub_1AD63BA68()
{
  return MEMORY[0x1E0DF0840]();
}

uint64_t sub_1AD63BA74()
{
  return MEMORY[0x1E0DF09F0]();
}

uint64_t sub_1AD63BA80()
{
  return MEMORY[0x1E0DF0A30]();
}

uint64_t sub_1AD63BA8C()
{
  return MEMORY[0x1E0DF0A58]();
}

uint64_t sub_1AD63BA98()
{
  return MEMORY[0x1E0DF0A68]();
}

uint64_t sub_1AD63BAA4()
{
  return MEMORY[0x1E0DF0A70]();
}

uint64_t sub_1AD63BAB0()
{
  return MEMORY[0x1E0DF0A78]();
}

uint64_t sub_1AD63BABC()
{
  return MEMORY[0x1E0DF0A88]();
}

uint64_t sub_1AD63BAC8()
{
  return MEMORY[0x1E0DF0A90]();
}

uint64_t sub_1AD63BAD4()
{
  return MEMORY[0x1E0DF0AC8]();
}

uint64_t sub_1AD63BAE0()
{
  return MEMORY[0x1E0DF0AD0]();
}

uint64_t sub_1AD63BAEC()
{
  return MEMORY[0x1E0DF0AD8]();
}

uint64_t sub_1AD63BAF8()
{
  return MEMORY[0x1E0CB1B48]();
}

uint64_t sub_1AD63BB04()
{
  return MEMORY[0x1E0CB1B50]();
}

uint64_t sub_1AD63BB10()
{
  return MEMORY[0x1E0DEB120]();
}

uint64_t sub_1AD63BB1C()
{
  return MEMORY[0x1E0CB1C00]();
}

uint64_t sub_1AD63BB28()
{
  return MEMORY[0x1E0CB1C10]();
}

uint64_t sub_1AD63BB34()
{
  return MEMORY[0x1E0C9B8C8]();
}

uint64_t sub_1AD63BB40()
{
  return MEMORY[0x1E0DEF1C0]();
}

uint64_t sub_1AD63BB4C()
{
  return MEMORY[0x1E0C9B900]();
}

uint64_t sub_1AD63BB58()
{
  return MEMORY[0x1E0CB1CF0]();
}

uint64_t sub_1AD63BB64()
{
  return MEMORY[0x1E0DF2270]();
}

uint64_t sub_1AD63BB70()
{
  return MEMORY[0x1E0DF2278]();
}

uint64_t sub_1AD63BB7C()
{
  return MEMORY[0x1E0DF2280]();
}

uint64_t sub_1AD63BB88()
{
  return MEMORY[0x1E0DF2288]();
}

uint64_t sub_1AD63BB94()
{
  return MEMORY[0x1E0DF2290]();
}

uint64_t sub_1AD63BBA0()
{
  return MEMORY[0x1E0DEF810]();
}

uint64_t sub_1AD63BBAC()
{
  return MEMORY[0x1E0DEF8E0]();
}

uint64_t sub_1AD63BBB8()
{
  return MEMORY[0x1E0DEF8E8]();
}

uint64_t sub_1AD63BBC4()
{
  return MEMORY[0x1E0DEF910]();
}

uint64_t sub_1AD63BBD0()
{
  return MEMORY[0x1E0DEF250]();
}

uint64_t sub_1AD63BBDC()
{
  return MEMORY[0x1E0DEF278]();
}

uint64_t sub_1AD63BBE8()
{
  return MEMORY[0x1E0DEF280]();
}

uint64_t sub_1AD63BBF4()
{
  return MEMORY[0x1E0DEF2B8]();
}

uint64_t sub_1AD63BC00()
{
  return MEMORY[0x1E0DEF2D0]();
}

uint64_t sub_1AD63BC0C()
{
  return MEMORY[0x1E0DE94F0]();
}

uint64_t sub_1AD63BC18()
{
  return MEMORY[0x1E0CB2020]();
}

uint64_t sub_1AD63BC24()
{
  return MEMORY[0x1E0CB2028]();
}

uint64_t sub_1AD63BC30()
{
  return MEMORY[0x1E0DF22B8]();
}

uint64_t sub_1AD63BC3C()
{
  return MEMORY[0x1E0DF22E0]();
}

uint64_t sub_1AD63BC48()
{
  return MEMORY[0x1E0DEB940]();
}

uint64_t sub_1AD63BC54()
{
  return MEMORY[0x1E0DEBB68]();
}

uint64_t sub_1AD63BC60()
{
  return MEMORY[0x1E0DEBC20]();
}

uint64_t sub_1AD63BC6C()
{
  return MEMORY[0x1E0DEBC90]();
}

uint64_t sub_1AD63BC78()
{
  return MEMORY[0x1E0CB2410]();
}

uint64_t sub_1AD63BC84()
{
  return MEMORY[0x1E0CB2470]();
}

uint64_t sub_1AD63BC90()
{
  return MEMORY[0x1E0CB2480]();
}

uint64_t sub_1AD63BC9C()
{
  return MEMORY[0x1E0CB2588]();
}

uint64_t sub_1AD63BCA8()
{
  return MEMORY[0x1E0DEFF58]();
}

uint64_t sub_1AD63BCB4()
{
  return MEMORY[0x1E0DEBE30]();
}

uint64_t sub_1AD63BCC0()
{
  return MEMORY[0x1E0DEBE50]();
}

uint64_t sub_1AD63BCCC()
{
  return MEMORY[0x1E0DEC050]();
}

uint64_t sub_1AD63BCD8()
{
  return MEMORY[0x1E0DEC060]();
}

uint64_t sub_1AD63BCE4()
{
  return MEMORY[0x1E0DEC068]();
}

uint64_t sub_1AD63BCF0()
{
  return MEMORY[0x1E0DEC168]();
}

uint64_t sub_1AD63BCFC()
{
  return MEMORY[0x1E0DEC178]();
}

uint64_t sub_1AD63BD08()
{
  return MEMORY[0x1E0DEC1B0]();
}

uint64_t sub_1AD63BD14()
{
  return MEMORY[0x1E0DF0B00]();
}

uint64_t sub_1AD63BD20()
{
  return MEMORY[0x1E0DEC290]();
}

uint64_t sub_1AD63BD2C()
{
  return MEMORY[0x1E0DEC2A0]();
}

uint64_t sub_1AD63BD38()
{
  return MEMORY[0x1E0DEC2A8]();
}

uint64_t sub_1AD63BD44()
{
  return MEMORY[0x1E0DEC2B0]();
}

uint64_t sub_1AD63BD50()
{
  return MEMORY[0x1E0DEC3E0]();
}

uint64_t sub_1AD63BD5C()
{
  return MEMORY[0x1E0DEC3E8]();
}

uint64_t sub_1AD63BD68()
{
  return MEMORY[0x1E0DEC470]();
}

uint64_t sub_1AD63BD74()
{
  return MEMORY[0x1E0DEC478]();
}

uint64_t sub_1AD63BD80()
{
  return MEMORY[0x1E0DEC488]();
}

uint64_t sub_1AD63BD8C()
{
  return MEMORY[0x1E0DEC498]();
}

uint64_t sub_1AD63BD98()
{
  return MEMORY[0x1E0DEC4B8]();
}

uint64_t sub_1AD63BDA4()
{
  return MEMORY[0x1E0DEC4E0]();
}

uint64_t sub_1AD63BDB0()
{
  return MEMORY[0x1E0DEC588]();
}

uint64_t sub_1AD63BDBC()
{
  return MEMORY[0x1E0DEC590]();
}

uint64_t sub_1AD63BDC8()
{
  return MEMORY[0x1E0DEC660]();
}

uint64_t sub_1AD63BDD4()
{
  return MEMORY[0x1E0DEC670]();
}

uint64_t sub_1AD63BDE0()
{
  return MEMORY[0x1E0DEC688]();
}

uint64_t sub_1AD63BDEC()
{
  return MEMORY[0x1E0DEC6C0]();
}

uint64_t sub_1AD63BDF8()
{
  return MEMORY[0x1E0DEC6C8]();
}

uint64_t sub_1AD63BE04()
{
  return MEMORY[0x1E0DEC8E0]();
}

uint64_t sub_1AD63BE10()
{
  return MEMORY[0x1E0DEC990]();
}

uint64_t sub_1AD63BE1C()
{
  return MEMORY[0x1E0DECBE0]();
}

uint64_t sub_1AD63BE28()
{
  return MEMORY[0x1E0DECBE8]();
}

uint64_t sub_1AD63BE34()
{
  return MEMORY[0x1E0DECD18]();
}

uint64_t sub_1AD63BE40()
{
  return MEMORY[0x1E0DECD38]();
}

uint64_t sub_1AD63BE4C()
{
  return MEMORY[0x1E0DECD40]();
}

uint64_t sub_1AD63BE58()
{
  return MEMORY[0x1E0DECD50]();
}

uint64_t sub_1AD63BE64()
{
  return MEMORY[0x1E0DECD70]();
}

uint64_t sub_1AD63BE70()
{
  return MEMORY[0x1E0DECDA0]();
}

uint64_t sub_1AD63BE7C()
{
  return MEMORY[0x1E0DECDA8]();
}

uint64_t sub_1AD63BE88()
{
  return MEMORY[0x1E0DECE70]();
}

uint64_t sub_1AD63BE94()
{
  return MEMORY[0x1E0DECF28]();
}

uint64_t sub_1AD63BEA0()
{
  return MEMORY[0x1E0DECF30]();
}

uint64_t sub_1AD63BEAC()
{
  return MEMORY[0x1E0DECF38]();
}

uint64_t sub_1AD63BEB8()
{
  return MEMORY[0x1E0DECF40]();
}

uint64_t sub_1AD63BEC4()
{
  return MEMORY[0x1E0DECF58]();
}

uint64_t sub_1AD63BED0()
{
  return MEMORY[0x1E0DECF60]();
}

uint64_t sub_1AD63BEDC()
{
  return MEMORY[0x1E0DECF68]();
}

uint64_t sub_1AD63BEE8()
{
  return MEMORY[0x1E0DECF78]();
}

uint64_t sub_1AD63BEF4()
{
  return MEMORY[0x1E0DECF80]();
}

uint64_t sub_1AD63BF00()
{
  return MEMORY[0x1E0DECF88]();
}

uint64_t sub_1AD63BF0C()
{
  return MEMORY[0x1E0DECFC0]();
}

uint64_t sub_1AD63BF18()
{
  return MEMORY[0x1E0DECFC8]();
}

uint64_t sub_1AD63BF24()
{
  return MEMORY[0x1E0DECFD0]();
}

uint64_t sub_1AD63BF30()
{
  return MEMORY[0x1E0DECFD8]();
}

uint64_t sub_1AD63BF3C()
{
  return MEMORY[0x1E0DECFE0]();
}

uint64_t sub_1AD63BF48()
{
  return MEMORY[0x1E0DECFE8]();
}

uint64_t sub_1AD63BF54()
{
  return MEMORY[0x1E0DECFF0]();
}

uint64_t sub_1AD63BF60()
{
  return MEMORY[0x1E0DED010]();
}

uint64_t sub_1AD63BF6C()
{
  return MEMORY[0x1E0DED018]();
}

uint64_t sub_1AD63BF78()
{
  return MEMORY[0x1E0DED020]();
}

uint64_t sub_1AD63BF84()
{
  return MEMORY[0x1E0DED028]();
}

uint64_t sub_1AD63BF90()
{
  return MEMORY[0x1E0DED030]();
}

uint64_t sub_1AD63BF9C()
{
  return MEMORY[0x1E0DED038]();
}

uint64_t sub_1AD63BFA8()
{
  return MEMORY[0x1E0DED048]();
}

uint64_t sub_1AD63BFB4()
{
  return MEMORY[0x1E0DED058]();
}

uint64_t sub_1AD63BFC0()
{
  return MEMORY[0x1E0DED068]();
}

uint64_t sub_1AD63BFCC()
{
  return MEMORY[0x1E0DED070]();
}

uint64_t sub_1AD63BFD8()
{
  return MEMORY[0x1E0DED090]();
}

uint64_t sub_1AD63BFE4()
{
  return MEMORY[0x1E0DED098]();
}

uint64_t sub_1AD63BFF0()
{
  return MEMORY[0x1E0DED0A0]();
}

uint64_t sub_1AD63BFFC()
{
  return MEMORY[0x1E0DED0B0]();
}

uint64_t sub_1AD63C008()
{
  return MEMORY[0x1E0DED0B8]();
}

uint64_t sub_1AD63C014()
{
  return MEMORY[0x1E0DED0C0]();
}

uint64_t sub_1AD63C020()
{
  return MEMORY[0x1E0DED0F0]();
}

uint64_t sub_1AD63C02C()
{
  return MEMORY[0x1E0DED0F8]();
}

uint64_t sub_1AD63C038()
{
  return MEMORY[0x1E0DED100]();
}

uint64_t sub_1AD63C044()
{
  return MEMORY[0x1E0DED108]();
}

uint64_t sub_1AD63C050()
{
  return MEMORY[0x1E0DED110]();
}

uint64_t sub_1AD63C05C()
{
  return MEMORY[0x1E0DED118]();
}

uint64_t sub_1AD63C068()
{
  return MEMORY[0x1E0DED120]();
}

uint64_t sub_1AD63C074()
{
  return MEMORY[0x1E0DED140]();
}

uint64_t sub_1AD63C080()
{
  return MEMORY[0x1E0DED148]();
}

uint64_t sub_1AD63C08C()
{
  return MEMORY[0x1E0DED150]();
}

uint64_t sub_1AD63C098()
{
  return MEMORY[0x1E0DED158]();
}

uint64_t sub_1AD63C0A4()
{
  return MEMORY[0x1E0DED160]();
}

uint64_t sub_1AD63C0B0()
{
  return MEMORY[0x1E0DED170]();
}

uint64_t sub_1AD63C0BC()
{
  return MEMORY[0x1E0DED180]();
}

uint64_t sub_1AD63C0C8()
{
  return MEMORY[0x1E0DED1B8]();
}

uint64_t sub_1AD63C0D4()
{
  return MEMORY[0x1E0DED1D0]();
}

uint64_t sub_1AD63C0E0()
{
  return MEMORY[0x1E0DF0DF0]();
}

uint64_t sub_1AD63C0EC()
{
  return MEMORY[0x1E0DF0E08]();
}

uint64_t sub_1AD63C0F8()
{
  return MEMORY[0x1E0DF0E30]();
}

uint64_t sub_1AD63C104()
{
  return MEMORY[0x1E0DF0E50]();
}

uint64_t sub_1AD63C110()
{
  return MEMORY[0x1E0DED290]();
}

uint64_t sub_1AD63C11C()
{
  return MEMORY[0x1E0DED2B8]();
}

uint64_t sub_1AD63C128()
{
  return MEMORY[0x1E0DED2C8]();
}

uint64_t sub_1AD63C134()
{
  return MEMORY[0x1E0DED2D0]();
}

uint64_t sub_1AD63C140()
{
  return MEMORY[0x1E0DED2D8]();
}

uint64_t sub_1AD63C14C()
{
  return MEMORY[0x1E0DED2E8]();
}

uint64_t sub_1AD63C158()
{
  return MEMORY[0x1E0DED2F0]();
}

uint64_t sub_1AD63C164()
{
  return MEMORY[0x1E0DED2F8]();
}

uint64_t sub_1AD63C170()
{
  return MEMORY[0x1E0DED318]();
}

uint64_t sub_1AD63C17C()
{
  return MEMORY[0x1E0DED340]();
}

uint64_t sub_1AD63C188()
{
  return MEMORY[0x1E0DED350]();
}

uint64_t sub_1AD63C194()
{
  return MEMORY[0x1E0DED358]();
}

uint64_t sub_1AD63C1A0()
{
  return MEMORY[0x1E0DED3D0]();
}

uint64_t sub_1AD63C1AC()
{
  return MEMORY[0x1E0DED400]();
}

uint64_t sub_1AD63C1B8()
{
  return MEMORY[0x1E0DED408]();
}

uint64_t sub_1AD63C1C4()
{
  return MEMORY[0x1E0DED410]();
}

uint64_t sub_1AD63C1D0()
{
  return MEMORY[0x1E0DED418]();
}

uint64_t sub_1AD63C1DC()
{
  return MEMORY[0x1E0DED420]();
}

uint64_t sub_1AD63C1E8()
{
  return MEMORY[0x1E0DED428]();
}

uint64_t sub_1AD63C1F4()
{
  return MEMORY[0x1E0DED430]();
}

uint64_t sub_1AD63C200()
{
  return MEMORY[0x1E0DED438]();
}

uint64_t sub_1AD63C20C()
{
  return MEMORY[0x1E0DED440]();
}

uint64_t sub_1AD63C218()
{
  return MEMORY[0x1E0DED448]();
}

uint64_t sub_1AD63C224()
{
  return MEMORY[0x1E0DED450]();
}

uint64_t sub_1AD63C230()
{
  return MEMORY[0x1E0DED458]();
}

uint64_t sub_1AD63C23C()
{
  return MEMORY[0x1E0DED460]();
}

uint64_t sub_1AD63C248()
{
  return MEMORY[0x1E0DED468]();
}

uint64_t sub_1AD63C254()
{
  return MEMORY[0x1E0DED470]();
}

uint64_t sub_1AD63C260()
{
  return MEMORY[0x1E0DED478]();
}

uint64_t sub_1AD63C26C()
{
  return MEMORY[0x1E0DED480]();
}

uint64_t sub_1AD63C278()
{
  return MEMORY[0x1E0DED488]();
}

uint64_t sub_1AD63C284()
{
  return MEMORY[0x1E0DED490]();
}

uint64_t sub_1AD63C290()
{
  return MEMORY[0x1E0DED498]();
}

uint64_t sub_1AD63C29C()
{
  return MEMORY[0x1E0DED550]();
}

uint64_t sub_1AD63C2A8()
{
  return MEMORY[0x1E0DED600]();
}

uint64_t sub_1AD63C2B4()
{
  return MEMORY[0x1E0DED628]();
}

uint64_t sub_1AD63C2C0()
{
  return MEMORY[0x1E0DED698]();
}

uint64_t sub_1AD63C2CC()
{
  return MEMORY[0x1E0DED6A0]();
}

uint64_t sub_1AD63C2D8()
{
  return MEMORY[0x1E0DED6A8]();
}

uint64_t sub_1AD63C2E4()
{
  return MEMORY[0x1E0DED6B0]();
}

uint64_t sub_1AD63C2F0()
{
  return MEMORY[0x1E0DED6C8]();
}

uint64_t sub_1AD63C2FC()
{
  return MEMORY[0x1E0DED748]();
}

uint64_t sub_1AD63C308()
{
  return MEMORY[0x1E0DED750]();
}

uint64_t sub_1AD63C314()
{
  return MEMORY[0x1E0DED770]();
}

uint64_t sub_1AD63C320()
{
  return MEMORY[0x1E0DED7D0]();
}

uint64_t sub_1AD63C32C()
{
  return MEMORY[0x1E0DED7D8]();
}

uint64_t sub_1AD63C338()
{
  return MEMORY[0x1E0DED7E0]();
}

uint64_t sub_1AD63C344()
{
  return MEMORY[0x1E0DED7F0]();
}

uint64_t sub_1AD63C350()
{
  return MEMORY[0x1E0DED7F8]();
}

uint64_t sub_1AD63C35C()
{
  return MEMORY[0x1E0DED800]();
}

uint64_t sub_1AD63C368()
{
  return MEMORY[0x1E0DED820]();
}

uint64_t sub_1AD63C374()
{
  return MEMORY[0x1E0DED848]();
}

uint64_t sub_1AD63C380()
{
  return MEMORY[0x1E0DED858]();
}

uint64_t sub_1AD63C38C()
{
  return MEMORY[0x1E0DED860]();
}

uint64_t sub_1AD63C398()
{
  return MEMORY[0x1E0DED8D0]();
}

uint64_t sub_1AD63C3A4()
{
  return MEMORY[0x1E0DED8D8]();
}

uint64_t sub_1AD63C3B0()
{
  return MEMORY[0x1E0DED8E0]();
}

uint64_t sub_1AD63C3BC()
{
  return MEMORY[0x1E0DED8F0]();
}

uint64_t sub_1AD63C3C8()
{
  return MEMORY[0x1E0DED8F8]();
}

uint64_t sub_1AD63C3D4()
{
  return MEMORY[0x1E0DED900]();
}

uint64_t sub_1AD63C3E0()
{
  return MEMORY[0x1E0DED920]();
}

uint64_t sub_1AD63C3EC()
{
  return MEMORY[0x1E0DED930]();
}

uint64_t sub_1AD63C3F8()
{
  return MEMORY[0x1E0DED948]();
}

uint64_t sub_1AD63C404()
{
  return MEMORY[0x1E0DED950]();
}

uint64_t sub_1AD63C410()
{
  return MEMORY[0x1E0DED958]();
}

uint64_t sub_1AD63C41C()
{
  return MEMORY[0x1E0DED960]();
}

uint64_t sub_1AD63C428()
{
  return MEMORY[0x1E0DED968]();
}

uint64_t sub_1AD63C434()
{
  return MEMORY[0x1E0DED998]();
}

uint64_t sub_1AD63C440()
{
  return MEMORY[0x1E0DED9C8]();
}

uint64_t sub_1AD63C44C()
{
  return MEMORY[0x1E0DEDAE8]();
}

uint64_t sub_1AD63C458()
{
  return MEMORY[0x1E0CB2628]();
}

uint64_t sub_1AD63C464()
{
  return MEMORY[0x1E0CB2640]();
}

uint64_t sub_1AD63C470()
{
  return MEMORY[0x1E0DEDB10]();
}

uint64_t sub_1AD63C47C()
{
  return MEMORY[0x1E0DEDB18]();
}

uint64_t sub_1AD63C488()
{
  return MEMORY[0x1E0DEDB20]();
}

uint64_t sub_1AD63C494()
{
  return MEMORY[0x1E0DEDB28]();
}

uint64_t sub_1AD63C4A0()
{
  return MEMORY[0x1E0DEDEE0]();
}

uint64_t sub_1AD63C4AC()
{
  return MEMORY[0x1E0DEDEF8]();
}

uint64_t sub_1AD63C4B8()
{
  return MEMORY[0x1E0DEDF10]();
}

uint64_t sub_1AD63C4C4()
{
  return MEMORY[0x1E0DEDF18]();
}

uint64_t sub_1AD63C4D0()
{
  return MEMORY[0x1E0DEDF20]();
}

uint64_t sub_1AD63C4DC()
{
  return MEMORY[0x1E0DEDF28]();
}

uint64_t sub_1AD63C4E8()
{
  return MEMORY[0x1E0DEDF30]();
}

uint64_t sub_1AD63C4F4()
{
  return MEMORY[0x1E0DEDF40]();
}

uint64_t sub_1AD63C500()
{
  return MEMORY[0x1E0DEE030]();
}

uint64_t sub_1AD63C50C()
{
  return MEMORY[0x1E0CB26E0]();
}

uint64_t sub_1AD63C518()
{
  return MEMORY[0x1E0DEE230]();
}

uint64_t sub_1AD63C524()
{
  return MEMORY[0x1E0DEE240]();
}

uint64_t sub_1AD63C530()
{
  return MEMORY[0x1E0DEE260]();
}

uint64_t sub_1AD63C53C()
{
  return MEMORY[0x1E0DEE270]();
}

uint64_t sub_1AD63C548()
{
  return MEMORY[0x1E0DEE8B8]();
}

uint64_t sub_1AD63C554()
{
  return MEMORY[0x1E0DEE8C8]();
}

uint64_t sub_1AD63C560()
{
  return MEMORY[0x1E0DEE8E0]();
}

uint64_t sub_1AD63C56C()
{
  return MEMORY[0x1E0DEE8E8]();
}

uint64_t sub_1AD63C578()
{
  return MEMORY[0x1E0DEE978]();
}

CFMutableDataRef CFDataCreateMutable(CFAllocatorRef allocator, CFIndex capacity)
{
  return (CFMutableDataRef)MEMORY[0x1E0C983B8](allocator, capacity);
}

CFTypeID CFGetTypeID(CFTypeRef cf)
{
  return MEMORY[0x1E0C98738](cf);
}

CFTypeID CFNumberGetTypeID(void)
{
  return MEMORY[0x1E0C989B8]();
}

CFComparisonResult CFStringCompare(CFStringRef theString1, CFStringRef theString2, CFStringCompareFlags compareOptions)
{
  return MEMORY[0x1E0C98F10](theString1, theString2, compareOptions);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x1E0C9BB10](data, width, height, bitsPerComponent, bytesPerRow, space, *(_QWORD *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x1E0C9BB20](context);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x1E0C9BC78](space, components);
}

CGColorRef CGColorCreateCopyByMatchingToColorSpace(CGColorSpaceRef a1, CGColorRenderingIntent intent, CGColorRef color, CFDictionaryRef options)
{
  return (CGColorRef)MEMORY[0x1E0C9BC88](a1, *(_QWORD *)&intent, color, options);
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BD00](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BDF0]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x1E0C9BE50](name);
}

void CGContextConcatCTM(CGContextRef c, CGAffineTransform *transform)
{
  MEMORY[0x1E0C9C050](c, transform);
}

void CGContextRestoreGState(CGContextRef c)
{
  MEMORY[0x1E0C9C370](c);
}

void CGContextSaveGState(CGContextRef c)
{
  MEMORY[0x1E0C9C388](c);
}

CGDataConsumerRef CGDataConsumerCreate(void *info, const CGDataConsumerCallbacks *cbks)
{
  return (CGDataConsumerRef)MEMORY[0x1E0C9C5A8](info, cbks);
}

CGDataProviderRef CGDataProviderCreateWithData(void *info, const void *data, size_t size, CGDataProviderReleaseDataCallback releaseData)
{
  return (CGDataProviderRef)MEMORY[0x1E0C9C600](info, data, size, releaseData);
}

uint64_t CGEnterLockdownModeForFonts()
{
  return MEMORY[0x1E0C9C6A8]();
}

uint64_t CGEnterLockdownModeForPDF()
{
  return MEMORY[0x1E0C9C6B0]();
}

uint64_t CGImageCreateCopyWithParameters()
{
  return MEMORY[0x1E0CBC2B0]();
}

void CGImageDestinationAddImage(CGImageDestinationRef idst, CGImageRef image, CFDictionaryRef properties)
{
  MEMORY[0x1E0CBC308](idst, image, properties);
}

void CGImageDestinationAddImageFromSource(CGImageDestinationRef idst, CGImageSourceRef isrc, size_t index, CFDictionaryRef properties)
{
  MEMORY[0x1E0CBC318](idst, isrc, index, properties);
}

CGImageDestinationRef CGImageDestinationCreateWithData(CFMutableDataRef data, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC338](data, type, count, options);
}

CGImageDestinationRef CGImageDestinationCreateWithDataConsumer(CGDataConsumerRef consumer, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC340](consumer, type, count, options);
}

CGImageDestinationRef CGImageDestinationCreateWithURL(CFURLRef url, CFStringRef type, size_t count, CFDictionaryRef options)
{
  return (CGImageDestinationRef)MEMORY[0x1E0CBC348](url, type, count, options);
}

BOOL CGImageDestinationFinalize(CGImageDestinationRef idst)
{
  return MEMORY[0x1E0CBC358](idst);
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x1E0C9CC60](image);
}

CGColorRenderingIntent CGImageGetRenderingIntent(CGImageRef image)
{
  return MEMORY[0x1E0C9CCA0](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x1E0C9CCD0](image);
}

CGImageMetadataTagRef CGImageMetadataCopyTagWithPath(CGImageMetadataRef metadata, CGImageMetadataTagRef parent, CFStringRef path)
{
  return (CGImageMetadataTagRef)MEMORY[0x1E0CBC390](metadata, parent, path);
}

CFTypeRef CGImageMetadataTagCopyValue(CGImageMetadataTagRef tag)
{
  return (CFTypeRef)MEMORY[0x1E0CBC448](tag);
}

CGImageMetadataRef CGImageSourceCopyMetadataAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageMetadataRef)MEMORY[0x1E0CBC510](isrc, index, options);
}

CFDictionaryRef CGImageSourceCopyProperties(CGImageSourceRef isrc, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x1E0CBC528](isrc, options);
}

CFDictionaryRef CGImageSourceCopyPropertiesAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CFDictionaryRef)MEMORY[0x1E0CBC530](isrc, index, options);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1E0CBC568](isrc, index, options);
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x1E0CBC588](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithData(CFDataRef data, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC590](data, options);
}

CGImageSourceRef CGImageSourceCreateWithDataProvider(CGDataProviderRef provider, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC5A0](provider, options);
}

CGImageSourceRef CGImageSourceCreateWithURL(CFURLRef url, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x1E0CBC5C0](url, options);
}

uint64_t CGImageSourceDisableHardwareDecoding()
{
  return MEMORY[0x1E0CBC5C8]();
}

uint64_t CGImageSourceDisableMetadataParsing()
{
  return MEMORY[0x1E0CBC5D0]();
}

uint64_t CGImageSourceDisableRAWDecoding()
{
  return MEMORY[0x1E0CBC5D8]();
}

uint64_t CGImageSourceEnableRestrictedDecoding()
{
  return MEMORY[0x1E0CBC5E0]();
}

size_t CGImageSourceGetCount(CGImageSourceRef isrc)
{
  return MEMORY[0x1E0CBC5F0](isrc);
}

CFStringRef CGImageSourceGetType(CGImageSourceRef isrc)
{
  return (CFStringRef)MEMORY[0x1E0CBC618](isrc);
}

uint64_t CGImageSourceSetAllowableTypes()
{
  return MEMORY[0x1E0CBC658]();
}

BOOL CLLocationCoordinate2DIsValid(CLLocationCoordinate2D coord)
{
  return MEMORY[0x1E0C9E300]((__n128)coord, *(__n128 *)&coord.longitude);
}

CLLocationCoordinate2D CLLocationCoordinate2DMake(CLLocationDegrees latitude, CLLocationDegrees longitude)
{
  double v2;
  double v3;
  CLLocationCoordinate2D result;

  MEMORY[0x1E0C9E308](latitude, longitude);
  result.longitude = v3;
  result.latitude = v2;
  return result;
}

CFDictionaryRef CMFormatDescriptionGetExtensions(CMFormatDescriptionRef desc)
{
  return (CFDictionaryRef)MEMORY[0x1E0C9EDD0](desc);
}

void CVBufferSetAttachments(CVBufferRef buffer, CFDictionaryRef theAttachments, CVAttachmentMode attachmentMode)
{
  MEMORY[0x1E0CA8958](buffer, theAttachments, *(_QWORD *)&attachmentMode);
}

CFDictionaryRef CVPixelBufferCopyCreationAttributes(CVPixelBufferRef pixelBuffer)
{
  return (CFDictionaryRef)MEMORY[0x1E0CA8A90](pixelBuffer);
}

CVReturn CVPixelBufferCreate(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x1E0CA8A98](allocator, width, height, *(_QWORD *)&pixelFormatType, pixelBufferAttributes, pixelBufferOut);
}

CVReturn CVPixelBufferCreateWithPlanarBytes(CFAllocatorRef allocator, size_t width, size_t height, OSType pixelFormatType, void *dataPtr, size_t dataSize, size_t numberOfPlanes, void **planeBaseAddress, size_t *planeWidth, size_t *planeHeight, size_t *planeBytesPerRow, CVPixelBufferReleasePlanarBytesCallback releaseCallback, void *releaseRefCon, CFDictionaryRef pixelBufferAttributes, CVPixelBufferRef *pixelBufferOut)
{
  return MEMORY[0x1E0CA8AC8](allocator, width, height, *(_QWORD *)&pixelFormatType, dataPtr, dataSize, numberOfPlanes, planeBaseAddress);
}

void *__cdecl CVPixelBufferGetBaseAddress(CVPixelBufferRef pixelBuffer)
{
  return (void *)MEMORY[0x1E0CA8AE0](pixelBuffer);
}

void *__cdecl CVPixelBufferGetBaseAddressOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return (void *)MEMORY[0x1E0CA8AE8](pixelBuffer, planeIndex);
}

size_t CVPixelBufferGetBytesPerRow(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8AF8](pixelBuffer);
}

size_t CVPixelBufferGetBytesPerRowOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x1E0CA8B00](pixelBuffer, planeIndex);
}

size_t CVPixelBufferGetDataSize(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B08](pixelBuffer);
}

size_t CVPixelBufferGetHeight(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B20](pixelBuffer);
}

size_t CVPixelBufferGetHeightOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x1E0CA8B28](pixelBuffer, planeIndex);
}

OSType CVPixelBufferGetPixelFormatType(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B38](pixelBuffer);
}

size_t CVPixelBufferGetPlaneCount(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B40](pixelBuffer);
}

size_t CVPixelBufferGetWidth(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B50](pixelBuffer);
}

size_t CVPixelBufferGetWidthOfPlane(CVPixelBufferRef pixelBuffer, size_t planeIndex)
{
  return MEMORY[0x1E0CA8B58](pixelBuffer, planeIndex);
}

Boolean CVPixelBufferIsPlanar(CVPixelBufferRef pixelBuffer)
{
  return MEMORY[0x1E0CA8B68](pixelBuffer);
}

CVReturn CVPixelBufferLockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags lockFlags)
{
  return MEMORY[0x1E0CA8B70](pixelBuffer, lockFlags);
}

CVReturn CVPixelBufferUnlockBaseAddress(CVPixelBufferRef pixelBuffer, CVPixelBufferLockFlags unlockFlags)
{
  return MEMORY[0x1E0CA8C00](pixelBuffer, unlockFlags);
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x1E0CB28A0](aClassName);
}

uint64_t PBDataWriterWriteBOOLField()
{
  return MEMORY[0x1E0D82C10]();
}

uint64_t PBDataWriterWriteDataField()
{
  return MEMORY[0x1E0D82C28]();
}

uint64_t PBDataWriterWriteDoubleField()
{
  return MEMORY[0x1E0D82C38]();
}

uint64_t PBDataWriterWriteInt64Field()
{
  return MEMORY[0x1E0D82C68]();
}

uint64_t PBDataWriterWriteStringField()
{
  return MEMORY[0x1E0D82C98]();
}

uint64_t PBDataWriterWriteSubmessage()
{
  return MEMORY[0x1E0D82CB0]();
}

uint64_t PBReaderPlaceMark()
{
  return MEMORY[0x1E0D82CE0]();
}

uint64_t PBReaderReadData()
{
  return MEMORY[0x1E0D82CF0]();
}

uint64_t PBReaderReadString()
{
  return MEMORY[0x1E0D82D00]();
}

uint64_t PBReaderRecallMark()
{
  return MEMORY[0x1E0D82D10]();
}

uint64_t PBReaderSkipValueWithTag()
{
  return MEMORY[0x1E0D82D28]();
}

OSStatus VTCreateCGImageFromCVPixelBuffer(CVPixelBufferRef pixelBuffer, CFDictionaryRef options, CGImageRef *imageOut)
{
  return MEMORY[0x1E0CEC9D8](pixelBuffer, options, imageOut);
}

OSStatus VTPixelTransferSessionCreate(CFAllocatorRef allocator, VTPixelTransferSessionRef *pixelTransferSessionOut)
{
  return MEMORY[0x1E0CECD18](allocator, pixelTransferSessionOut);
}

void VTPixelTransferSessionInvalidate(VTPixelTransferSessionRef session)
{
  MEMORY[0x1E0CECD28](session);
}

OSStatus VTPixelTransferSessionTransferImage(VTPixelTransferSessionRef session, CVPixelBufferRef sourceBuffer, CVPixelBufferRef destinationBuffer)
{
  return MEMORY[0x1E0CECD38](session, sourceBuffer, destinationBuffer);
}

uint64_t VTRestrictVideoDecoders()
{
  return MEMORY[0x1E0CECD50]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x1E0C80928](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
  MEMORY[0x1E0C80948](a1, *(_QWORD *)&a2);
}

void _Block_release(const void *aBlock)
{
  MEMORY[0x1E0C80958](aBlock);
}

int _NSGetExecutablePath(char *buf, uint32_t *bufsize)
{
  return MEMORY[0x1E0C809D8](buf, bufsize);
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
  MEMORY[0x1E0C80A20](exception_object);
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
  MEMORY[0x1E0C80A58](a1, a2, *(_QWORD *)&a3, a4);
}

int *__error(void)
{
  return (int *)MEMORY[0x1E0C80AC0]();
}

uint64_t _asn1_copy_top()
{
  return MEMORY[0x1E0DE5870]();
}

uint64_t _asn1_decode_top()
{
  return MEMORY[0x1E0DE5878]();
}

uint64_t _asn1_encode()
{
  return MEMORY[0x1E0DE5880]();
}

uint64_t _asn1_free_top()
{
  return MEMORY[0x1E0DE5888]();
}

uint64_t _asn1_length()
{
  return MEMORY[0x1E0DE5890]();
}

uint64_t _dyld_register_dlsym_notifier()
{
  return MEMORY[0x1E0C80F48]();
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81038](dso, log, type, format, buf, *(_QWORD *)&size);
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
  MEMORY[0x1E0C81048](dso, log, type, format, buf, *(_QWORD *)&size);
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x1E0DA88F0]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x1E0DEEA28]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x1E0DEEA40]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x1E0C813B0]();
}

uint64_t analytics_send_event_lazy()
{
  return MEMORY[0x1E0D15470]();
}

uint64_t archive_entry_pathname()
{
  return MEMORY[0x1E0DE3DD8]();
}

uint64_t archive_entry_size()
{
  return MEMORY[0x1E0DE3E38]();
}

uint64_t archive_read_data()
{
  return MEMORY[0x1E0DE3E80]();
}

uint64_t archive_read_free()
{
  return MEMORY[0x1E0DE3EF8]();
}

uint64_t archive_read_new()
{
  return MEMORY[0x1E0DE3F00]();
}

uint64_t archive_read_next_header()
{
  return MEMORY[0x1E0DE3F08]();
}

uint64_t archive_read_open_fd()
{
  return MEMORY[0x1E0DE3F20]();
}

uint64_t archive_read_support_format_zip_seekable()
{
  return MEMORY[0x1E0DE3F98]();
}

void bzero(void *a1, size_t a2)
{
  MEMORY[0x1E0C81758](a1, a2);
}

int close(int a1)
{
  return MEMORY[0x1E0C82688](*(_QWORD *)&a1);
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
  MEMORY[0x1E0C82E08](predicate, block);
}

void dispatch_sync(dispatch_queue_t queue, dispatch_block_t block)
{
  MEMORY[0x1E0C82F90](queue, block);
}

char *dlerror(void)
{
  return (char *)MEMORY[0x1E0C83038]();
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x1E0C83050](__handle, __symbol);
}

long double fmod(long double __x, long double __y)
{
  long double result;

  MEMORY[0x1E0C83440](__x, __y);
  return result;
}

void free(void *a1)
{
  MEMORY[0x1E0C834A8](a1);
}

pid_t getpid(void)
{
  return MEMORY[0x1E0C83760]();
}

off_t lseek(int a1, off_t a2, int a3)
{
  return MEMORY[0x1E0C83C38](*(_QWORD *)&a1, a2, *(_QWORD *)&a3);
}

kern_return_t mach_make_memory_entry_64(vm_map_t target_task, memory_object_size_t *size, memory_object_offset_t offset, vm_prot_t permission, mach_port_t *object_handle, mem_entry_name_port_t parent_entry)
{
  return MEMORY[0x1E0C83C98](*(_QWORD *)&target_task, size, offset, *(_QWORD *)&permission, object_handle, *(_QWORD *)&parent_entry);
}

kern_return_t mach_port_deallocate(ipc_space_t task, mach_port_name_t name)
{
  return MEMORY[0x1E0C83CF8](*(_QWORD *)&task, *(_QWORD *)&name);
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x1E0C83E68](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x1E0C83EE0](ptr);
}

void *__cdecl malloc_type_realloc(void *ptr, size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x1E0C83F10](ptr, size, type_id);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x1E0C84078](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x1E0C84088](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x1E0C84098](__dst, __src, __len);
}

void *__cdecl memset(void *__b, int __c, size_t __len)
{
  return (void *)MEMORY[0x1E0C840B0](__b, *(_QWORD *)&__c, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1E0DE7BA8](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x1E0DE7BB0](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1E0DE7BB8]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7BD0](a1);
}

void objc_autoreleasePoolPop(void *context)
{
  MEMORY[0x1E0DE7BD8](context);
}

void *objc_autoreleasePoolPush(void)
{
  return (void *)MEMORY[0x1E0DE7BE0]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7BE8](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x1E0DE7BF0](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1E0DE7BF8]();
}

void objc_end_catch(void)
{
  MEMORY[0x1E0DE7C80]();
}

void objc_enumerationMutation(id obj)
{
  MEMORY[0x1E0DE7C90](obj);
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x1E0DE7CB0](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x1E0DE7CD0](self, _cmd, offset, atomic);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D20](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1E0DE7D30](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1E0DE7D38]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1E0DE7D40]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x1E0DE7D50]();
}

uint64_t objc_opt_self()
{
  return MEMORY[0x1E0DE7D58]();
}

void objc_release(id a1)
{
  MEMORY[0x1E0DE7D78](a1);
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1E0DE7E50](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1E0DE7E58](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E60](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x1E0DE7E68](a1);
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
  MEMORY[0x1E0DE7FA0](self, _cmd, newValue, offset);
}

void objc_storeStrong(id *location, id obj)
{
  MEMORY[0x1E0DE7FB0](location, obj);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1E0C84728](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1E0C84780](oslog, type);
}

uint64_t os_variant_allows_internal_security_policies()
{
  return MEMORY[0x1E0C849D8]();
}

uint64_t os_variant_has_internal_ui()
{
  return MEMORY[0x1E0C84A00]();
}

char *__cdecl realpath_DARWIN_EXTSN(const char *a1, char *a2)
{
  return (char *)MEMORY[0x1E0C85040](a1, a2);
}

uint64_t sandbox_check()
{
  return MEMORY[0x1E0C85178]();
}

uint64_t sandbox_enable_state_flag()
{
  return MEMORY[0x1E0C85198]();
}

uint64_t sandbox_extension_consume()
{
  return MEMORY[0x1E0C851A0]();
}

uint64_t sandbox_extension_issue_file()
{
  return MEMORY[0x1E0C851A8]();
}

uint64_t sandbox_extension_release()
{
  return MEMORY[0x1E0C851F8]();
}

uint64_t swift_allocBox()
{
  return MEMORY[0x1E0DEEA98]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x1E0DEEAA8]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x1E0DEEAB0]();
}

uint64_t swift_allocateGenericValueMetadata()
{
  return MEMORY[0x1E0DEEAC0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x1E0DEEAD8]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x1E0DEEAE0]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x1E0DEEAE8]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x1E0DEEAF0]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x1E0DEEAF8]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x1E0DEEB08]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x1E0DEEB10]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x1E0DEEB18]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x1E0DEEB20]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x1E0DEEB28]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x1E0DEEB40]();
}

uint64_t swift_continuation_await()
{
  return MEMORY[0x1E0DF0F88]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x1E0DF0F90]();
}

uint64_t swift_continuation_resume()
{
  return MEMORY[0x1E0DF0F98]();
}

uint64_t swift_continuation_throwingResume()
{
  return MEMORY[0x1E0DF0FA0]();
}

uint64_t swift_continuation_throwingResumeWithError()
{
  return MEMORY[0x1E0DF0FA8]();
}

uint64_t swift_deallocBox()
{
  return MEMORY[0x1E0DEEB48]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x1E0DEEB50]();
}

uint64_t swift_deallocObject()
{
  return MEMORY[0x1E0DEEB60]();
}

uint64_t swift_deallocPartialClassInstance()
{
  return MEMORY[0x1E0DEEB68]();
}

uint64_t swift_defaultActor_deallocate()
{
  return MEMORY[0x1E0DF0FB0]();
}

uint64_t swift_defaultActor_destroy()
{
  return MEMORY[0x1E0DF0FB8]();
}

uint64_t swift_defaultActor_initialize()
{
  return MEMORY[0x1E0DF0FC0]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x1E0DEEB80]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x1E0DEEB88]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x1E0DEEBA8]();
}

uint64_t swift_dynamicCastUnknownClassUnconditional()
{
  return MEMORY[0x1E0DEEBD8]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x1E0DEEBE0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x1E0DEEBF0]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x1E0DEEBF8]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x1E0DEEC00]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x1E0DEEC08]();
}

uint64_t swift_getDynamicType()
{
  return MEMORY[0x1E0DEEC38]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x1E0DEEC40]();
}

uint64_t swift_getEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEC48]();
}

uint64_t swift_getErrorValue()
{
  return MEMORY[0x1E0DEEC50]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x1E0DEEC78]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x1E0DEECB0]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x1E0DEECC0]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x1E0DEECC8]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x1E0DEECD8]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x1E0DEECE0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x1E0DEECF8]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x1E0DEED38]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x1E0DEED40]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x1E0DEED50]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x1E0DEED60]();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return MEMORY[0x1E0DEED68]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x1E0DEED70]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x1E0DEED78]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x1E0DEED88]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x1E0DEED98]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x1E0DEEDC8]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x1E0DEEDD0]();
}

uint64_t swift_lookUpClassMethod()
{
  return MEMORY[0x1E0DEEDE0]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x1E0DEEDE8]();
}

uint64_t swift_once()
{
  return MEMORY[0x1E0DEEE00]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x1E0DEEE08]();
}

uint64_t swift_release()
{
  return MEMORY[0x1E0DEEE30]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x1E0DEEE38]();
}

uint64_t swift_retain()
{
  return MEMORY[0x1E0DEEE48]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x1E0DEEE50]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x1E0DEEE70]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x1E0DEEE78]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x1E0DEEE80]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x1E0DEEE98]();
}

uint64_t swift_storeEnumTagSinglePayloadGeneric()
{
  return MEMORY[0x1E0DEEEA0]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x1E0DF1000]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x1E0DF1008]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x1E0DF1010]();
}

uint64_t swift_task_switch()
{
  return MEMORY[0x1E0DF1050]();
}

uint64_t swift_unexpectedError()
{
  return MEMORY[0x1E0DEEEB8]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x1E0DEEEC0]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x1E0DEEEC8]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x1E0DEEED0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x1E0DEEED8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x1E0DEEF78]();
}

uint64_t swift_weakAssign()
{
  return MEMORY[0x1E0DEEF80]();
}

uint64_t swift_weakDestroy()
{
  return MEMORY[0x1E0DEEF98]();
}

uint64_t swift_weakInit()
{
  return MEMORY[0x1E0DEEFA0]();
}

uint64_t swift_weakLoadStrong()
{
  return MEMORY[0x1E0DEEFA8]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x1E0DEEFC0]();
}

kern_return_t task_info(task_name_t target_task, task_flavor_t flavor, task_info_t task_info_out, mach_msg_type_number_t *task_info_outCnt)
{
  return MEMORY[0x1E0C85838](*(_QWORD *)&target_task, *(_QWORD *)&flavor, task_info_out, task_info_outCnt);
}

kern_return_t vm_allocate(vm_map_t target_task, vm_address_t *address, vm_size_t size, int flags)
{
  return MEMORY[0x1E0C85A80](*(_QWORD *)&target_task, address, size, *(_QWORD *)&flags);
}

kern_return_t vm_deallocate(vm_map_t target_task, vm_address_t address, vm_size_t size)
{
  return MEMORY[0x1E0C85A98](*(_QWORD *)&target_task, address, size);
}

kern_return_t vm_map(vm_map_t target_task, vm_address_t *address, vm_size_t size, vm_address_t mask, int flags, mem_entry_name_port_t object, vm_offset_t offset, BOOLean_t copy, vm_prot_t cur_protection, vm_prot_t max_protection, vm_inherit_t inheritance)
{
  return MEMORY[0x1E0C85AB0](*(_QWORD *)&target_task, address, size, mask, *(_QWORD *)&flags, *(_QWORD *)&object, offset, *(_QWORD *)&copy);
}

void xpc_array_append_value(xpc_object_t xarray, xpc_object_t value)
{
  MEMORY[0x1E0C85DE0](xarray, value);
}

xpc_object_t xpc_array_create(xpc_object_t *objects, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C85E00](objects, count);
}

size_t xpc_array_get_count(xpc_object_t xarray)
{
  return MEMORY[0x1E0C85E30](xarray);
}

xpc_object_t xpc_array_get_value(xpc_object_t xarray, size_t index)
{
  return (xpc_object_t)MEMORY[0x1E0C85E90](xarray, index);
}

xpc_object_t xpc_BOOL_create(BOOL value)
{
  return (xpc_object_t)MEMORY[0x1E0C85EF0](value);
}

BOOL xpc_BOOL_get_value(xpc_object_t xBOOL)
{
  return MEMORY[0x1E0C85F00](xBOOL);
}

void xpc_connection_activate(xpc_connection_t connection)
{
  MEMORY[0x1E0C85F50](connection);
}

uint64_t xpc_connection_copy_invalidation_reason()
{
  return MEMORY[0x1E0C85F80]();
}

xpc_connection_t xpc_connection_create(const char *name, dispatch_queue_t targetq)
{
  return (xpc_connection_t)MEMORY[0x1E0C85F90](name, targetq);
}

xpc_connection_t xpc_connection_create_from_endpoint(xpc_endpoint_t endpoint)
{
  return (xpc_connection_t)MEMORY[0x1E0C85FA0](endpoint);
}

uint64_t xpc_connection_get_audit_token()
{
  return MEMORY[0x1E0C85FD0]();
}

pid_t xpc_connection_get_pid(xpc_connection_t connection)
{
  return MEMORY[0x1E0C86008](connection);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
  MEMORY[0x1E0C86030](connection, message);
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
  MEMORY[0x1E0C86038](connection, message, replyq, handler);
}

xpc_object_t xpc_connection_send_message_with_reply_sync(xpc_connection_t connection, xpc_object_t message)
{
  return (xpc_object_t)MEMORY[0x1E0C86048](connection, message);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
  MEMORY[0x1E0C86080](connection, handler);
}

uint64_t xpc_connection_set_instance()
{
  return MEMORY[0x1E0C86090]();
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return (char *)MEMORY[0x1E0C86108](object);
}

xpc_object_t xpc_data_create_with_dispatch_data(dispatch_data_t ddata)
{
  return (xpc_object_t)MEMORY[0x1E0C86188](ddata);
}

const void *__cdecl xpc_data_get_bytes_ptr(xpc_object_t xdata)
{
  return (const void *)MEMORY[0x1E0C86198](xdata);
}

size_t xpc_data_get_length(xpc_object_t xdata)
{
  return MEMORY[0x1E0C861A8](xdata);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x1E0C861F0](xdict, applier);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x1E0C86208](keys, values, count);
}

xpc_object_t xpc_dictionary_create_empty(void)
{
  return (xpc_object_t)MEMORY[0x1E0C86218]();
}

xpc_object_t xpc_dictionary_create_reply(xpc_object_t original)
{
  return (xpc_object_t)MEMORY[0x1E0C86228](original);
}

xpc_connection_t xpc_dictionary_get_remote_connection(xpc_object_t xdict)
{
  return (xpc_connection_t)MEMORY[0x1E0C862B0](xdict);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1E0C862C8](xdict, key);
}

xpc_object_t xpc_dictionary_get_value(xpc_object_t xdict, const char *key)
{
  return (xpc_object_t)MEMORY[0x1E0C862E0](xdict, key);
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
  MEMORY[0x1E0C86390](xdict, key, string);
}

void xpc_dictionary_set_value(xpc_object_t xdict, const char *key, xpc_object_t value)
{
  MEMORY[0x1E0C863B8](xdict, key, value);
}

xpc_object_t xpc_double_create(double value)
{
  return (xpc_object_t)MEMORY[0x1E0C863D0](value);
}

double xpc_double_get_value(xpc_object_t xdouble)
{
  double result;

  MEMORY[0x1E0C863E0](xdouble);
  return result;
}

xpc_endpoint_t xpc_endpoint_create(xpc_connection_t connection)
{
  return (xpc_endpoint_t)MEMORY[0x1E0C863F0](connection);
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1E0C86520](object);
}

xpc_object_t xpc_int64_create(int64_t value)
{
  return (xpc_object_t)MEMORY[0x1E0C86568](value);
}

int64_t xpc_int64_get_value(xpc_object_t xint)
{
  return MEMORY[0x1E0C86570](xint);
}

uint64_t xpc_mach_send_copy_right()
{
  return MEMORY[0x1E0C865D8]();
}

uint64_t xpc_mach_send_create()
{
  return MEMORY[0x1E0C865E0]();
}

void xpc_main(xpc_connection_handler_t handler)
{
  MEMORY[0x1E0C86608](handler);
}

xpc_object_t xpc_null_create(void)
{
  return (xpc_object_t)MEMORY[0x1E0C86628]();
}

xpc_object_t xpc_string_create(const char *string)
{
  return (xpc_object_t)MEMORY[0x1E0C86720](string);
}

const char *__cdecl xpc_string_get_string_ptr(xpc_object_t xstring)
{
  return (const char *)MEMORY[0x1E0C86758](xstring);
}

const char *__cdecl xpc_type_get_name(xpc_type_t type)
{
  return (const char *)MEMORY[0x1E0C867A0](type);
}

xpc_object_t xpc_uint64_create(uint64_t value)
{
  return (xpc_object_t)MEMORY[0x1E0C867B0](value);
}

uint64_t xpc_uint64_get_value(xpc_object_t xuint)
{
  return MEMORY[0x1E0C867B8](xuint);
}

